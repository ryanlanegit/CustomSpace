{"version":3,"sources":["require/text.js","forms/tasks/anchor/view.html!text","forms/tasks/anchor/controller.js","forms/tasks/analystByGroup/view.html!text","forms/fields/enum/view.html!text","forms/fields/enum/controller.js","forms/tasks/drawerTask/view.html!text","forms/tasks/analystByGroup/controller.js","forms/popups/notificationPopup/view.html!text","forms/tasks/assignToMe/controller.js","forms/tasks/changeStatus/view.html!text","forms/tasks/changeStatus/view.drawer.html!text","forms/fields/longstring/view.html!text","forms/fields/longstring/controller.js","forms/fields/boolean/view.html!text","forms/fields/boolean/controller.js","forms/tasks/changeStatus/controller.js","forms/tasks/amChangeStatus/controller.js","forms/tasks/acknowledge/view.html!text","forms/tasks/acknowledge/controller.js","forms/tasks/convertToParent/controller.js","forms/tasks/linkToParent/view.html!text","forms/header/relationships/view.html!text","forms/tasks/linkToParent/controller.js","forms/tasks/newStatus/view.html!text","forms/tasks/newStatus/controller.js","forms/tasks/sendEmail/mobile_view.html!text","forms/tasks/sendEmail/view.html!text","forms/popups/userPickerPopup/view.html!text","forms/popups/userPickerPopup/controller.js","forms/popups/multipleObjectPickerPopup/view.html!text","forms/popups/multipleObjectPickerPopup/controller.js","forms/flyout/fileAttachmentsFlyout/mobile_view.html!text","forms/flyout/fileAttachmentsFlyout/view.html!text","forms/flyout/fileAttachmentsFlyout/controller.js","../CustomSpace/Scripts/forms/tasks/sendEmail/controller.js","forms/tasks/custom/controller.js","forms/tasks/spacer/view.html!text","forms/tasks/spacer/controller.js","forms/tasks/associateItem/controller.js","forms/tasks/setDate/view.html!text","forms/fields/date/view.html!text","forms/fields/date/controller.js","forms/fields/string/view.html!text","forms/fields/string/controller.js","forms/tasks/setDate/controller.js","forms/tasks/updateAssetManagement/controller.js","forms/tasks/updateSupersededHardware/controller.js","forms/tasks/copyLicenseAssignments/view.html!text","forms/tasks/copyLicenseAssignments/controller.js","../CustomSpace/customtasks.tmpl.html!text","forms/tasks/copyToNewWI/controller.js","forms/tasks/increaseAvailableCount/view.html!text","forms/fields/longString/controller.js","forms/fields/numeric/view.html!text","forms/fields/numeric/controller.js","forms/tasks/increaseAvailableCount/controller.js","forms/tasks/decreaseAvailableCount/view.html!text","forms/tasks/decreaseAvailableCount/controller.js","forms/tasks/print/controller.js","forms/tasks/addMeToWatchList/controller.js","forms/taskBuilder.js","forms/header/sticky/view.html!text","forms/flyout/remoteManageWidget/view.html!text","forms/flyout/remoteManageWidget/controller.js","forms/flyout/headerAttachmentWidget/view.html!text","forms/predefined/fileAttachmentsDragDrop/view.html!text","forms/predefined/fileAttachmentsDragDrop/controller.js","forms/flyout/headerAttachmentWidget/controller.js","forms/header/sticky/controller.js","forms/header/stickyCI/view.html!text","forms/header/stickyCI/controller.js","forms/header/status/view.html!text","forms/header/status/controller.js","forms/header/relationships/controller.js","forms/header/slo/view.html!text","forms/header/slo/controller.js","forms/header/spacer/view.html!text","forms/header/spacer/controller.js","forms/header/title/view.html!text","forms/header/title/controller.js","forms/header/approval/view.html!text","forms/header/approval/controller.js","forms/headerBuilder.js","forms/structure/formPanel/view.html!text","forms/structure/formPanel/controller.js","forms/structure/formPanelFull/view.html!text","forms/structure/formPanelFull/controller.js","forms/structure/customFieldGroup/view.html!text","forms/structure/customFieldGroup/controller.js","forms/structure/customFieldGroupRow/view.html!text","forms/structure/customFieldGroupRow/controller.js","forms/structure/columnField/view.html!text","forms/structure/columnField/controller.js","forms/structure/tab/view.html!text","forms/structure/tab/controller.js","forms/structure/tabPane/view.html!text","forms/structure/tabPane/controller.js","forms/structure/tabNavigation/view.html!text","forms/structure/tabNavigation/mobile.html!text","forms/structure/tabNavigation/controller.js","forms/structure/tabData/view.html!text","forms/structure/tabData/mobile.html!text","forms/structure/tabData/controller.js","forms/predefined/actionLog/view.html!text","forms/predefined/actionLog/controller.js","forms/predefined/fileAttachments/view.html!text","forms/predefined/fileAttachments/controller.js","forms/predefined/affectedItems/view.html!text","forms/predefined/affectedItems/controller.js","forms/predefined/relatedItems/view.html!text","forms/predefined/relatedItems/controller.js","forms/predefined/childWorkItems/view.html!text","forms/predefined/childWorkItems/controller.js","forms/predefined/userInput/view.html!text","forms/predefined/userInput/controller.js","forms/predefined/activities/view.html!text","forms/predefined/activities/controller.js","forms/predefined/multipleObjectPicker/view.html!text","forms/predefined/multipleObjectPicker/controller.js","../CustomSpace/Scripts/forms/predefined/history/view.html!text","../CustomSpace/Scripts/forms/predefined/history/controller.js","forms/predefined/billableTime/view.html!text","forms/predefined/billableTime/controller.js","forms/predefined/knowledgeArticle/view.html!text","forms/predefined/knowledgeArticle/popup.html!text","forms/predefined/knowledgeArticle/controller.js","forms/predefined/serviceComponents/view.html!text","forms/predefined/serviceComponents/controller.js","forms/predefined/dependentComponents/view.html!text","forms/predefined/dependentComponents/controller.js","forms/fields/display/view.html!text","forms/fields/display/controller.js","forms/fields/spacer/view.html!text","forms/fields/spacer/controller.js","forms/fields/int/controller.js","forms/fields/decimal/controller.js","forms/fields/double/controller.js","forms/fields/datetime/view.html!text","forms/fields/datetime/controller.js","forms/fields/userPicker/view.html!text","forms/fields/userPicker/controller.js","forms/fields/objectPicker/view.html!text","forms/popups/objectPickerPopup/view.html!text","forms/popups/objectPickerPopup/controller.js","forms/fields/objectPicker/controller.js","forms/fields/button/view.html!text","forms/fields/button/controller.js","forms/fields/editor/view.html!text","forms/fields/editor/controller.js","forms/fields/combo/view.html!text","forms/fields/combo/controller.js","forms/fields/dropDownList/view.html!text","forms/fields/dropDownList/controller.js","forms/fields/bundle/view.html!text","forms/fields/bundle/controller.js","forms/fields/fileUpload/view.html!text","forms/fields/fileUpload/controller.js","forms/fields/urlTextbox/view.html!text","forms/fields/urlTextbox/controller.js","forms/fields/percentage/controller.js","forms/formBuilder.js","forms/formHelper.js","forms/configItemMain.js"],"names":["define","module","text","fs","Cc","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","location","href","defaultProtocol","protocol","replace","defaultHostName","hostname","defaultPort","port","undefined","buildMap","masterConfig","config","version","strip","content","matches","match","jsEscape","createXhr","xhr","i","progId","XMLHttpRequest","ActiveXObject","e","parseName","name","modName","ext","temp","index","indexOf","isRelative","substring","length","moduleName","xdRegExp","useXhr","url","uProtocol","uHostName","uPort","exec","split","toLowerCase","finishLoad","onLoad","isBuild","load","req","inlineText","parsed","nonStripName","toUrl","get","err","error","write","pluginName","hasOwnProperty","asModule","writeFile","extPart","fileName","value","textWrite","contents","env","process","versions","node","require","nodeRequire","callback","errback","file","readFileSync","headers","header","open","setRequestHeader","onXhr","onreadystatechange","evt","status","readyState","Error","responseText","onXhrComplete","send","Packages","java","stringBuffer","line","io","File","lineSeparator","lang","System","getProperty","input","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","charAt","append","String","toString","close","Components","classes","interfaces","utils","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","init","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString","path","tpl","template","build","built","_","properties","$","extend","kendo","View","wrap","render","vm","EnumId","Required","Disabled","disabled","LeafNodeOnly","ShowPath","FilterIds","Visible","anchorTemplate","windowTemplate","enumPickerControl","drawerTaskTemplate","configEnumId","configPropertyName","callerType","type","isBulkEdit","originalAssignedName","originalAssignedId","originalSupportGroup","originalSupportName","originalSupportId","getTaskViewModel","modalView","taskVm","observable","analystByGroup","selectedWorkItem","groupPropertyName","groupPropertyEnumId","Configs","propertyName","enumId","modalEle","element","clone","modalControl","kendoCiresonWindow","title","localization","AssignToAnalystByGroup","width","height","actions","data","windowViewModal","assignToDataSource","getUserDataSource","userEnabled","viewModel","SupportGroup","Id","TierQueue","pageForm","CRSupportGroupField","PRSupportGroupField","MASupportGroupField","AssignedWorkItem","BaseId","okEnabled","userChange","set","sender","okClick","app","lib","mask","apply","postData","ProjectionId","projectionId","UpdateServiceManagement","ItemIds","pluck","currentSelection","EditedFields","getBulkEditedFieldData","ajax","JSON","stringify","dataType","contentType","success","onBulkEditSaveSuccess","onBulkEditSaveFailure","isUndefined","cancelClick","buildEnumPicker","container","props","vmModel","enumControl","html","controls","localize","bind","groupProperties","PropertyName","PropertyDisplayName","find","groupPicker","groupDropDownControl","handler","_dropdown","groupTreeViewControl","_treeview","item","this","dataItem","select","assignToCombobox","setSupportGroupUsers","current","item1","isNull","DisplayName","removeClass","show","refresh","setAdditionBulkTaskProperties","anchorViewModel","drawerTaskVm","assignedWorkItem","displayName","baseId","isEnabled","showTooltip","setEnabled","enabled","targetControlId","onTargetControlChange","grid","selectedDataItems","isMobile","map","toArray","onExceedSelectionCount","selectedTypes","selectedStatusNames","singleSelectedType","reduce","memo","currentVal","singleSelectedStatusName","setTrimmedWiType","constants","projectionIds","SystemWorkItemServiceRequestViewModel","enumPickerIds","ServiceRequestSupportGroup","SystemWorkItemIncidentViewModel","IncidentTierQueue","SystemWorkItemChangeRequestViewModel","CRSupportGroupGuid","SystemWorkItemProblemViewModel","PRSupportGroupGuid","pop","json","trimmedType","EditedValue","assignedSupportGroup","PropertyType","PropertyRelationshipId","ActionType","Name","Description","RecordAssignedDescription","session","user","DescriptionDisplay","EnteredBy","EnteredDate","Date","toISOString","LastModified","Title","RecordAssigned","Image","iconPath","icons","ui","ExtAlertDialog","localizationHelper","message","dataSource","query","targetGrid","targetGridState","gridUtils","savedState","getCurrentState","recheckGridState","add","remove","getOriginalFormValues","Text","selectedSupportGroupId","DataSource","transport","read","addUrlParam","schema","model","fields","resetAssignToField","asssignToComboBox","focus","attr","ChooseOne","vmWindow","hide","setTimeout","items","buildAndRender","windowEle","view","destroy","taskListItem","builtAnchor","anchorElm","formTaskViewModel","onClick","toolTipMessage","events","subscribe","event","listView","selectedCards","controlId","wrapper","Target","anchor","notificationTpl","notificationTemplate","target","assignToMe","cont","popupNotification","kendoNotification","templates","infoMessage","AssignedToMeNotificationMessage","link","longStringController","CheckLength","elem","currentTarget","helpBlock","next","maxChars","val","removeAttr","buildLongStringView","limitLength","MinLength","MaxLength","LimitLength","Rows","visible","IsVisible","Inline","changeStatusTemplate","changeStatusDrawerTemplate","txtAreaControl","checkBoxControl","IsAutoResolve","AutoResolve","resolveChildIncidentSettings","originalVm","Status","ResolutionCategory","ResolutionDescription","ChildWorkItem","Notes","ImplementationResults","RelatesToWorkItem","Resolution","workItemStatuses","incidentResolved","Incident","Resolved","incidentActive","Active","incidentClosed","Closed","incidentActivePending","Pending","serviceRequestCancelled","ServiceRequest","Cancelled","serviceRequestCompleted","Completed","serviceRequestSubmitted","Submitted","serviceRequestInProgress","InProgress","serviceRequestOnHold","OnHold","serviceRequestFailed","Failed","serviceRequestClosed","changeRequestFailed","ChangeRequest","changeRequestClosed","changeRequestInProgress","changeRequestOnHold","changeRequestCancelled","changeRequestSubmitted","changeRequestCompleted","problemResolved","Problem","problemClosed","releaseRecordClosed","ReleaseRecord","releaseRecordCancelled","releaseRecordCompleted","releaseRecordFailed","releaseRecordEditing","Editing","releaseRecordOnHold","releaseRecordInProgress","getFormTaskViewModel","changeStatus","modalWindowEle","modalWindowControl","ChangeStatusTask","activate","selectedWiType","modalWindowViewModel","currentStatusId","onModalActivate","statusTreeViewControl","statusDropDownControl","statusEnumId","resolutionCategoryEnumId","resolveChildSettings","letAnalystDecide","workItemModel","requireResolution","resolveChildIncident","actionLogType","getWorkItemLogType","isString","RequestCategoryRequiredError","ImplementationNotesRequiredError","resDateEle","unshift","dataModels","recordResolved","RelatesToTroubleTicket","IsParent","ResolveChildIncident","ResolvedLetAnalystDecide","resolveChildIncidents","closeDateEle","RelatesToTroubleTicket_","recordClosed","ClosedByUser","recordActivated","comDateEle","resolveRelatedWorkItems","showComment","showResolution","showAutoResolve","createStatusPicker","enableResolutionSettings","createIncidentResolutionFields","createResultFields","createProblemResolutionFields","getDrawerTaskViewModel","currentSelectionOfParents","containsParents","currentStatusName","statusTypeId","resolutionResultEnumId","openModal","handleStatusControlChange","modalViewModel","toggleAdditionalFields","selectedWorkItems","selectedParents","newStatusObj","newResolutionId","resolutionDescription","newResultId","resultNote","resultComment","showPath","leafNodeOnly","wiStatusTypeId","irStatusResolved","srStatusCompleted","srStatusCancelled","irCategoryRequired","srNotesRequired","irResolveChildOption","windowViewModel","bulkEditFormIsValid","postBulkEditChangesWithChildren","getDrawerTaskEditedFields","postBulkEditChanges","selectedStatusIds","singleSelectedStatusId","ServiceRequestImplementationResults","consoleSetting","AnalystPortalLicense","IsValid","parentItems","each","workItem","push","IncidentResolution","treeControl","dropDownControl","changeRules","getFormTaskChangeRules","changeRulesFilter","field","operator","options","serverFiltering","filter","id","itemFilter","comboDataSource","setDataSource","getResolveChildIncidentSettings","builtModal","ele","resolutionProperties","implementationNotesProperties","buildTextArea","autoResolveProperties","buildCheckbox","implementationResultProperties","commentProperties","resolutionDescriptionProperties","letAnalystDecideProperties","statusProperties","cbTxtAreaControl","txtCheckboxControl","getDrawerTaskChildEditedFields","resolutionCategoryId","propertyRelationshipId","RecordResolved","statusId","ChildIncidentResolutionCategorySameAsParent","ChildIncidentResolutionCategory","ResolvedDate","Array","logic","filters","windowVm","parentIds","childIds","itemIds","childId","uniqIds","uniq","childResolutionCatId","childrenPostData","wiSelectionPostData","postCallback","drawerTaskViewModel","anchorEleProps","titleKey","anchorTemplateProps","enumPicker","ChangeHardwareAssetStatus","enumName","ChangeHardwareAssetType","ChangeSoftwareAssetStatus","ChangeSoftwareAssetType","tempStatus","win","_vmWindow","acknowledge","Acknowledge","dateTimeNow","dateTimeNowUTC","actionLogComment","isPrivate","charactersRemaining","textCounter","FirstResponseDate","respondDateEle","newActionLog","Analyst","Comment","IsPrivate","ActionLog","isParent","confirmTitle","confirmMessage","convertToParent","when","ExtYesNoDialog","done","response","button","save","ChangesApplied","saveFailure","exceptionMessage","RequiredFieldsErrorMessage","PleaseCorrectErrors","linkToParent","ClassId","LinktoNewParentIncident","LinkToNewParentRecord","refreshDataSource","getChildIncidentSettings","searchText","searchClick","selectedRow","ParentWorkItem","childIncidentSettings","ActiveChildIncidentLinkStatus","buildParentHeaderView","parentView","workItemType","cache","pageSize","gridChange","eventArgs","otherBoundChanges","setNewStatus","newStatusId","addComment","newStatusName","processChildIncidentReactivation","reactivateChildandSave","ChildIncidentReactivatedStatus","parseJSON","ReactivateLetAnalystDecide","ReactivateChildIncidentTitle","ReactivateChildIncidentMessage","ReactivateChildIncident","newStatusConfig","comment","newComment","commentMessage","CancelledStatusCommentMessage","__userPickerPopupSingleton","NameIdModel","nameProp","idProp","self","serverNameProp","serverIdProp","setObj","setFromObj","obj","getFromObj","getObj","getGenericFromObj","UserPickerPopup","targetEle","groupsOnly","popup","_vm","gridHtml","gridUrl","_model","setSaveCallback","unbind","setCancelCallback","bindEvents","onSearchClick","search","searchValue","onSaveClick","isMobileDevice","selectedUser","userObj","trigger","closePopup","kendoGrid","onCancelClick","openPopup","kendoDataSource","kendoWindow","createPopup","Popup","createGrid","Grid","createKendoWindow","SelectGroup","SelectUser","settings","pager","on","onRowDblClick","page","createKendoDataSource","prefix","userFilter","filterByAnalyst","serverPaging","serverSorting","serverGrouping","total","errors","PrincipalName","UserName","Domain","Company","FirstName","LastName","EmployeeId","createKendoGrid","selectable","sortable","mode","pageable","filterable","extra","operators","string","startswith","Startswith","contains","Contains","eq","Isequalto","neq","Isnotequalto","date","gte","GreaterOrEqual","gt","GreaterThan","lte","LessOrEqual","lt","LessThan","autoBind","columns","hidden","encoded","attributes","class","SearchText","selectUserText","searchOnEnter","which","preventDefault","cancel","userDataSource","onListViewChanged","isDesktopView","isMobileView","getPopup","ObjectPickerPopup","classId","columnNames","dataSourceFilter","isConfigItem","isMailRecipient","controllerUrl","objects","selectedRows","grid2","itm","clearSearchText","gridFunctions","clear","outObjs","ObservableArray","addObject","selected","max","grid2Funcs","addItem","removeObject","removeRow","gridFuncs","searchFilter","comboFuncs","getIdValue","onChange","onDataBound","totalPages","ii","iitem","dblClick","a","uid","combo","SelectObject","createCombo","kendoComboBox","dataTextField","dataValueField","gc","Class","Path","userColumns","userMailColumns","Email","columnMenu","createGrid2","Data","Total","action","nd","nodeName","exception","click","templateFrag","objectPickerPopup","__fileAttachmentsPopupSingleton","FileAttachmentsPopup","task","loadedImages","FileAttachments","defer","selectedFiles","fileItem","Content","async","then","img","closeModal","onOpenFile","saveCancelBtn","closeBtn","modal","selectFile","el","isImage","openFile","window","document","body","appendChild","createElement","src","dialog","dialogs","kendoDialog","animation","effects","closest","getByUid","downloadUrl","rootURL","before","off","kendoListView","FileAttachment","change","dataBound","parent","mobileTemplate","desktopTemplate","_objectPickerPopup","attachmentPickerFlyout","recipientList","recipientToList","recipientCCList","statusModalWindowControl","shown","sendEmail","SendEmail","getAffectedUserEmail","setDefaultWIStatus","emailTo","emailCC","emailSubject","emailHTMLMessage","emailBodyTemplate","emailTextMessage","emailAttachment","emailTemplateDataSource","tempateDataSource","emailTemplateValue","attachmentErrorMessage","addToLog","addToActionLogDefault","forceAddToActionLog","enableAddToLog","setAsPrivate","saveMessageAsPrivate","userPickerTo","userPickerCc","_dataItems","recipientToEmail","without","findWhere","join","recipientCcEmail","arrEmail","union","InvalidEmailAddress","PleaseProvideEmailAddress","invalidEmailAdress","validateEmailAddress","InvalidEmailAddressMessage","editor","innerText","textContent","trim","MessageRequired","MessageRequiredWhenAddingLogEntry","progress","dateField","statusWindow","containerDescription","containerEnum","ths","console","log","ExtOkCancelDialog","Warning","UnsavedDataMessage","icon","widget","remoteManageRecepient","emailTemplateChange","_old","dView","subject","Subject","resizeEditor","$this","children","hasClass","addClass","toggleClass","showChangeStatus","sendEmailAttachments","fromWorkItemAttachementsId","setFirstResponseDate","enableFirstResponseDate","popupWindow","object","recipientType","picker","userEmailObj","key","viewWorkItemFiles","flyoutWindow","n","filesCount","users","changeStatusSetting","defaultStatusId","rootStatusEnumId","enableChangeStatus","fetchAll","names","guid","email","initializeUserPicker","initializeUploader","getSendEmailChangeStatusSettings","initializeStatusPicker","buildEditor","tooltip","getRemoteManageRecepient","applyChangeStatus","toPicker","ccPicker","stopImmediatePropagation","addToCommentLog","EMailSent","RequestedWorkItem","affectedUserId","textStatus","jqXHR","affectedUser","ready","recepient","invalidEmailAddress","validateEmail","fileAction","style","download","removeChild","kendoUpload","saveUrl","ClassName","autoUpload","operation","files","rawFile","ErrorDescription","warn","showFileList","dropZone","targetProp","targetKey","userPicker","kendoMultiSelect","placeholder","Search","maxNumberOfResults","filtering","tagTemplate","currentList","deselect","clearButton","keyCode","jQuery","Event","bChangeStatus","bAddActionLog","addToLogSkipped","bHasAttachment","strAttachedFileNames","strMessage","encodeURIComponent","strMessagePlain","workItemFileIds","emailFooterTemplate","emailData","To","Message","AttachedFileNames","WorkItemId","bSetFirstResponsDate","bSuccess","SendEmailSuccessMessage","fileAdded","handleSaveSuccess","SkippedAddingLogEntryTitle","ErrorAddingLogEntryMessage","SendEmailFailedMessage","errorThrown","uploadPastedImage","d","timestamp","getTime","formData","FormData","processData","getBase64Image","canvas","getContext","drawImage","toDataURL","dataURItoBlob","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","Blob","defaultTools","shift","mobileTools","kendoEditor","tools","stylesheets","paste","pasteCleanup","custom","tagName","blob","dataSRC","setAttribute","one","complete","filterIdParam","filterId","newWI","getChangeStatusRules","SendEmailServiceRootStatusEnum","SendEmailServiceDefaultStatusEnum","SendEmailServiceAllowAnalystToChangeStatus","SendEmailChangeRootStatusEnum","SendEmailChangeDefaultStatusEnum","SendEmailChangeAllowAnalystToChangeStatus","SendEmailProblemRootStatusEnum","SendEmailProblemDefaultStatusEnum","SendEmailProblemAllowAnalystToChangeStatus","SendEmailReleaseRootStatusEnum","SendEmailReleaseDefaultStatusEnum","SendEmailReleaseAllowAnalystToChangeStatus","SendEmailIncidentRootStatusEnum","SendEmailIncidentDefaultStatusEnum","SendEmailIncidentAllowAnalystToChangeStatus","Label","func","customFunc","relationshipKey","FromFilter","ToFilter","FromRelative","ToRelative","MinValue","MaxValue","stringController","buildStringView","datePicker","stringArea","checkBox","datePickerCtrl","checkboxCtrl","openWindow","dateLabel","viewType","Disposed","blur","cancelledDate","originalDate","dateProperties","OriginalDisposalReference","recieveCheckbox","OriginalCheckBox","masterContractStartingDateCheckbox","DisposalDate","ReceiveDate","StartDate","propertyKey","buildDatePicker","stringProperties","DisposalReference","buildString","RemoveReceivedDate","RemoveMasterLeaseWarrantyStarts","dateControl","stringControl","checkboxControl","dtm","checked","enable","CommonContract","UpdateStatus","SetSeatsRemaining","UpdateSoftwareAsset","UpdateConsumable","SupersedesParent","CountAssignedConsumableUsers","CountAssignedConsumableAssets","assignedCount","Target_ConsumableHasAssignedUsers","Target_ConsumableHasAssignedAssets","CiresonAssetManagement","SoftwareAssetUpdateConfirmationMsg","isOk","Success","SoftwareAssetUpdated","reload","ErrorOccured","ajaxOptions","thrownError","failure","RequestFailed","jsonRsp","errorMsg","UpdateSupersedesConfirmation","post","UpdatingAssets","TotalNumberofAssetsUpdated","count","ServerError","CopyLicenseAssignments","StartCopyLicenseAsssignements","serialize","bTransferUsers","bTransferComputers","bTranserToAuthorised","targetVM","source","sourceVM","bTranserToAssigned","computerList","ComputerList","userList","UserList","PerformTransfer","UpdateSoftwareAssetMsg","itemList","targetProperty","isExist","indexTarget","copyToNewWI","hiddenVm","copy","method","submit","DecimalPlaces","StepIncrement","Format","numericArea","EditConsumableAvailableCount","tempLog","ObservableObject","ClassTypeId","Target_LogHasCreator","AllowCreatedDate","newGUID","Type","TaskRun","countProperties","zeroCount","buildNumeric","currentCount","addedcount","parseInt","newCount","IncreasedAvailableCount","AvailableCount","DecreasedAvailableCountBy","print","addMeToWatchList","isAddWatchlist","removeFromWatchList","AddMeToWatchList","addToWatchList","RemoveMeFromWatchList","WatchList","AddMeToWatchListNotificationMessage","splice","RemoveMeFromWatchListNotificationMessage","amChangeStatus","newStatus","spacer","associateItem","setDate","updateAssetManagement","updateSupersededHardware","copyLicenseAssignments","customTmpl","increaseAvailableCount","decreaseAvailableCount","definition","ulElement","fromDrawerBuilder","taskTemplate","tasks","taskCallback","Access","eval","Task","_obj","Exception","tmpl","__remoteManageWidgetSingleton","getWidget","first","after","addUserContainer","addTemplate","dataUserContainer","dataTemplate","addDeviceContainer","dataDeviceContainer","multipleDataTemplate","widgetActionIcon","createUserComboBox","initializePicker","eleContainer","eleTemplate","getKendoComboBox","createPrimaryUserComboBox","createUserDeviceComboBox","createPrimaryDeviceComboBox","createDeviceComboBox","createAssetComboBox","affectedUserText","assignedUserText","primaryOwnerText","affectedDeviceText","primaryDeviceText","userDeviceText","relatedDeviceText","affectedAssetText","relatedAssetText","getObjectDetails","details","AffectedUserAppPage","AssignedUser","PrimaryOwner","AffectedDeviceText","RelatedDeviceText","AffectedAssetText","RelatedAssetText","setToFormUserPicker","autocomplete","ul","setSelected","parents","widgetType","mailtoLink","mainWidgetAttr","AssetStatus","HasRelatedWorkItems","mainWidgetDeviceAttr","RelatesToConfigItem","replaceAll","ds","TrueControlCenterURL","beforeSend","TrueControlCenterAuthToken","className","suggest","appendTo","BaseType","Guid","addForm","assignedUser","primaryOwner","RelatesToIncident","affectedDevice","primaryDevice","userDevice","relatedDevice","affectedAsset","relatedAsset","relatedDeviceArr","affectedDeviceArr","affectedAssetArr","relatedAssetArr","primaryDeviceArr","includeHardwareAssetOnly","includeHardwareAssetinRM","includeWindowsComputerinRM","includeWindowsComputerOnly","includeComputerAndAsset","showDeviceSection","clickContainer","slideOutNav","getTCCSourceURL","ComputerManagement","UserManagement","removeUserCombobox","openCombobox","removeItem","propName","widgetValue","arr","liParent","openSendEmail","relatedDeviceObj","devices","relatedAssetObj","affectedDeviceObj","affectedAssetObj","changeCntr","widgetName","getJSON","userId","parse","toggle","attachmentWidget","AcceptExtension","Clas","isDesktop","isVisible","isDisabled","onSelect","extension","FileExtensionInvalid","onUploadSuccess","f","actionLogName","boundObj","onUploadError","onRemove","fieldName","css","dialogOrig","fileRemoved","removeUrl","__headerAttachmentWidgetSingleton","fileAttachmentsDragDrop","getContainer","tplReturn","headerAttachmentContainer","_container","remoteManageWidget","featureSet","isActive","headerAttachmentWidget","showAttachments","statusVisible","showRemoteManageIcon","DoWork","viewCallBack","controller","parentIncident","ParentRecord","Parentincident","editHref","editLink","unlinkParent","UnlinkToParent","SureUnlinkToParent","isAnalystUser","isSLOopen","toggleSLODropdown","closeSLODropdown","first_sloObjects","first_sloContainer","DoWorkSLOHeader","sloContainer","sloObjects","headerslo","isDropdown","sloActive","sloPaused","sloMet","sloWarning","sloBreached","sloNotReady","isMet","isPaused","sloTemplate","sloObj","imageClass","isBreach","sloImg","addAttr","SLOCoundown","Time","Hours","Minutes","Seconds","WarningDate","ServerDatetimeNow","elementAttr","sloCloned","isMetStat","hours","minutes","seconds","warningDate","serverCurrentDate","elementContainer","prevObject","sloIcon","sloTimer","secs","Math","abs","mins","hrs","setSeconds","getSeconds","doClick","toggleMore","viewAttachments","showBadge","headerAttachmentBtnBadge","isNew","withRMSupport","Target_HardwareAssetHasAssociatedCI","initDisplays","rebind","isEmpty","New","StatusName","ObjectStatus","isAnalyst","sloViewObj","rejected","approve","notYetVoted","approvalModel","decisionEnumId","comments","onRejectClick","updateStatus","onApproveClick","onCompleteClick","ManualActivity","updateManualActivity","onFailClick","isReviewActivity","updateReviewActivity","isManualActivity","ReviewDecisionCommentDialog","Comments","DoYouHaveComments","required","Reviewer","reviewItem","group","userGroup","User","Decision","VotedBy","ExtYesNoTextAreaDialog","RequireImplementationNotes","ImplementationdetailsRequired","Implementationdetails","buttons","Save","$inputText","currentNotes","requiredCss","cls","Cancel","isDirty","toJSON","original","jsonRaw","successMessage","ReviewActivityApprovedMessage","ReviewActivityRejectedMessage","ManualActivityCompletedMessage","ManualActivityFailedMessage","handleMessages","pathname","DataConflict","DataConflictError","DataConflictDescription","ReconnectRequired","pageDataSource","isScoped","Security","IsWorkItemScoped","showInActives","requestEnd","updatePageDetails","pageCount","idx","pageString","statusInProgress","reviewDetails","fullDetails","review","nextClick","navigate","previousClick","dSource","nextItem","approvalUrl","onChangeSupportGroup","SupportGroupFieldValue","currentPage","toatPage","pageText","disablePrevious","disableNext","workItemId","statusName","disabledButtons","reviewResult","reviewId","SupportGroupVisible","SupportGroupEnumId","MASupportGroupGuid","disabledMAButtons","sticky","stickyCI","relationships","slo","approval","headerTemplate","rows","row","rowElm","column","colElm","dtpl","mtpl","cid","cur_table","boundArray","affectedItemController","showAddRemoveButtons","addConfigItem","selectedConfigItemId","addAffectedItem","searchConfigItem","selectedConfigItem","configItemDataSource","onConfigItemChange","selectedIndex","isUserCIVisible","selectedUserConfigItemId","selectedUserConfigItem","addUserConfigItem","userConfigItemDataSource","parameterMap","onUserConfigItemChange","showMoreInfo","detailsPopupEle","detailsPopup","center","onDataBinding","table","hideColumn","isWindowsComputer","isHardwareAsset","isUser","isMoreInfo","isSlideOut","bIsWindowsComputer","bIsHardwareAsset","bIsUser","hasControlCenterURL","showTCCInfo","onContextmenuSelect","onContextmenuActivate","baseType","managementTitle","menuItems","imageUrl","imageAttr","AdditionalDetails","setOptions","originalFilter","result","arguments","dsFilters","innerFilters","x","affectedtemController","isDuplicate","idToAdd","ObjectClassName","relatedItemController","showAddRemoveButton","Control","bindButtonEvents","addClick","gridEle","command","Remove","scrollable","messages","info","Showitemswithvaluethat","and","And","or","Or","Filter","Clear","reorderable","ChooseColumns","sortAscending","SortAscending","sortDescending","SortDescending","editable","confirmDelete","cancelDelete","create","update","toolbar","selectedItem","strClass","PropertyToDisplay","ControllerUrl","IsMobileView","showProp","ShowAddButton","ShowRemoveButton","Scoped","ClassProperties","SelectableRow","SelectProperty","HiddenProperty","prop","concat","DashboardsLicense","enableWatchlist","openObject","getObjectLinkUrl","buildSubProperties","propToFill","propSplit","mainProp","subProp","_boundArray","colNames","splitedProp","propperty","propIndex","hideRemoveButton","columnFields","buildColumnFields","columnToDisplay","buildGridColumns","dataBinding","formatPropertyInBoundArray","scopeBoundArray","showRemovButton","localizationKey","localizedText","columnClass","templ","currentItemEvent","columnString","currentItem","property","jsonProperty","reverse","inx","isBoolean","isNumber","scopeClassId","timeout","objectIds","_data","tbody","historyTemplate","getDropDownData","getChildren","Activity","activity","arrayIsNotNullOrEmpty","getObjectQueryId","historyViewModel","dropdownQuery","getHistoryViewModel","storage","historyProperties","historyLabel","showHistory","dropDownDataSource","timelineDataSource","requestStart","loadHistory","kendoDropDownList","getObjectHistory","historyView","builtHistory","historyElm","historyDropDown","historyController","LastUpdatedDisplay","billableTimeController","btHour","btMinute","btTotalTime","btTotalTimeInString","onHourSpin","onMinuteSpin","onCellClose","computeTotalTime","BillableTime","BasedId","LastUpdated","onAddClick","hour","minute","isExisting","newBillableModel","TimeInMinutes","resetTime","onSubtractClick","totalTime","SubtractTimeTitle","SubtractTimeMessage","itemTotalTime","Totaltime","popupTpl","popupView","knowledgeArticleModel","ArticleId","Category","selectedItems","articleIds","last","relatedHTMLKB","KnowledgeArticleID","WorkItemID","AssetID","AssetId","bindRowClick","getAllRelatedWorkItems","ArticleID","CategoryName","TypeName","removeRelatedKB","removeHTMLKB","showAddButton","relatedItem","treeController","treeView","nodeVM","workitems","tempArr","wi","IsAffectedByCR","IsAffectedByIR","currentItems","configItems","prepend","HideLabel","number","userPickerPopup","ExtraProps","Delay","FilterByAnalyst","MaxNumberOfResults","extraProps","delay","minLength","forceKendoProp","helperBlock","autoComplete","refreshDisplayValues","onAutoCompleteValueChanged","onSearchIconClick","isModelSet","isModelSetNulled","hasExtraProps","createHelperBlock","HelperBlock","createAutocomplete","AutoComplete","detailsUrl","setDisplay","setValue","extraPropText","setExtraPropsDisplay","createHtml","data-bind","createViewModel","getUserObjectData","objectId","getDisplayName","str","isObject","searchBtn","detailsBtn","placeHolderText","SearchButton","focusedItemIndex","hasTCCURL","validateAutoCompleteValue","getDataSourceMatch","is","getFocusedIndex","onDetailsBtnClick","stopPropagation","openSlideout","createSearchButton","data-control-action","iconColor","insertAfter","createDetailsButton","insertBefore","createTCCDetailsButton","kendoMenu","openOnClick","createKendoAutoComplete","kendoAutoComplete","valuePrimitive","createDetailsPopup","blurred","text-decoration","background-color","focused","__objectPickerPopupSingleton","groupFilter","ObjectClassId","Hosted","selectObjectText","okText","OK","cancelText","getIndexZero","SearchPlaceholder","preventClosing","scrollTop","ButtonType","ButtonSize","Options","staticFileVersion","Height","IsCascading","Cascade","ControlObject","gridViewModel","bundleData","createOrEditSoftwareBundle","dataList","products","tempSoftwarePattern","tempExclusionPattern","tempVersionPattern","SoftwarePatternName","SoftwarePattern","ExclusionPattern","VersionPattern","SoftwarePatternTxt","ExclusionPatternTxt","VersionPatternTxt","enableDisableTextbox","txt","isEnable","softwarePatternList","exclusionPatternList","versionPatternList","IsBundle","softwarePattern","onSave","validation","SoftwarePatternNamevalidation","EnterRequiredFields","SoftwarePatternvalidation","batch","streamId","bufferedMode","streamLength","buildURLTextbox","regexp","RegExp","txtBox","validateUrl","test","textChange","openURL","formPanel","formPanelFull","customFieldGroup","customFieldGroupRow","columnField","tab","tabPane","tabNavigation","tabData","actionLog","fileAttachments","affectedItems","relatedItems","childWorkItems","userInput","activities","multipleObjectPicker","history","billableTime","knowledgeArticle","serviceComponents","dependentComponents","LongString","Boolean","Display","Spacer","Numeric","Int32","Decimal","Double","DateTime","Enum","UserPicker","ObjectPicker","Button","Editor","Combo","DropDownList","Bundle","FileUpload","UrlTextbox","Percentage","mainContainer","jsonTemplate","formTemplate","layoutType","tplString","readTemplate","jsonDecision","mutationLogic","all","propValue","tabList","nodeCount","tabtplString","tabnavCont","focusSet","tabNode","focusedTab","getParameterByName","tabNodeNameKey","tabId","active","customFieldGroupList","columnFieldList","setColumnSizes","chooseNextAction","objectName","columnCount","DataType","propContainer","list","pane","manageDirty","excludedProperties","onbeforeunload","mobileDrawerTaskButton","taskContainer","mobileTaskShow","drawermenu","addButton","Tasks","makeDrawer","resize","makeFormPristine","setFormNotDirty","_currentVM","Object","prototype","call","activityIndex","waitSeconds","urlArgs","baseUrl","paths","shim","ajaxStop","taskBuilder","headerBuilder","formBuilder","formHelper","messagesStructure","headerContainer","empty","formContainer","formType","dataVM","WorkItemErrorMessage","jumbotron","readyArray","boundReady","changesArray","boundChange","methods","actionMethod","isArray","isFunction","formTasks","label","commonTasks","setTemplateJSONFromSessionAdJSON","msg","customMsg","defaultMsg","customTemplate","Default","defaultTemplate","IsAdmin","alert","CustomFormName","createButtons","scrollTo","ChangeRequestSavedMessage","gotoFormReturnUrl","Apply","valid","jqEle","kendoBindingTarget","isEnum","UnAddedActionLogComment","optimizeFormMultiObject","BeforeSave","cacheData","msgResponse","onVmChange","OnVmChange","stripRTF","basicRtfPattern","newLineSlashesPattern","ctrlCharPattern","stopEnterKeySubmitting","$taskPanel","affix","offset","top","getBoundingClientRect","binders","yScrollOnResize","bottom"],"mappings":"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","file":"configItemMain-built.min.js","sourceRoot":"/Scripts/","sourcesContent":["/**\r\n * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/requirejs/text for details\r\n */\r\n/*jslint regexp: true */\r\n/*global require, XMLHttpRequest, ActiveXObject,\r\n  define, window, process, Packages,\r\n  java, location, Components, FileUtils */\r\n\r\ndefine('text',['module'], function (module) {\r\n    'use strict';\r\n\r\n    var text, fs, Cc, Ci, xpcIsWindows,\r\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\r\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\r\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\r\n        hasLocation = typeof location !== 'undefined' && location.href,\r\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\r\n        defaultHostName = hasLocation && location.hostname,\r\n        defaultPort = hasLocation && (location.port || undefined),\r\n        buildMap = {},\r\n        masterConfig = (module.config && module.config()) || {};\r\n\r\n    text = {\r\n        version: '2.0.10',\r\n\r\n        strip: function (content) {\r\n            //Strips <?xml ...?> declarations so that external SVG and XML\r\n            //documents can be added to a document without worry. Also, if the string\r\n            //is an HTML document, only the part inside the body tag is returned.\r\n            if (content) {\r\n                content = content.replace(xmlRegExp, \"\");\r\n                var matches = content.match(bodyRegExp);\r\n                if (matches) {\r\n                    content = matches[1];\r\n                }\r\n            } else {\r\n                content = \"\";\r\n            }\r\n            return content;\r\n        },\r\n\r\n        jsEscape: function (content) {\r\n            return content.replace(/(['\\\\])/g, '\\\\$1')\r\n                .replace(/[\\f]/g, \"\\\\f\")\r\n                .replace(/[\\b]/g, \"\\\\b\")\r\n                .replace(/[\\n]/g, \"\\\\n\")\r\n                .replace(/[\\t]/g, \"\\\\t\")\r\n                .replace(/[\\r]/g, \"\\\\r\")\r\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\r\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\r\n        },\r\n\r\n        createXhr: masterConfig.createXhr || function () {\r\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\r\n            var xhr, i, progId;\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                return new XMLHttpRequest();\r\n            } else if (typeof ActiveXObject !== \"undefined\") {\r\n                for (i = 0; i < 3; i += 1) {\r\n                    progId = progIds[i];\r\n                    try {\r\n                        xhr = new ActiveXObject(progId);\r\n                    } catch (e) { }\r\n\r\n                    if (xhr) {\r\n                        progIds = [progId];  // so faster next time\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return xhr;\r\n        },\r\n\r\n        /**\r\n         * Parses a resource name into its component parts. Resource names\r\n         * look like: module/name.ext!strip, where the !strip part is\r\n         * optional.\r\n         * @param {String} name the resource name\r\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\r\n         * where strip is a boolean.\r\n         */\r\n        parseName: function (name) {\r\n            var modName, ext, temp,\r\n                strip = false,\r\n                index = name.indexOf(\".\"),\r\n                isRelative = name.indexOf('./') === 0 ||\r\n                             name.indexOf('../') === 0;\r\n\r\n            if (index !== -1 && (!isRelative || index > 1)) {\r\n                modName = name.substring(0, index);\r\n                ext = name.substring(index + 1, name.length);\r\n            } else {\r\n                modName = name;\r\n            }\r\n\r\n            temp = ext || modName;\r\n            index = temp.indexOf(\"!\");\r\n            if (index !== -1) {\r\n                //Pull off the strip arg.\r\n                strip = temp.substring(index + 1) === \"strip\";\r\n                temp = temp.substring(0, index);\r\n                if (ext) {\r\n                    ext = temp;\r\n                } else {\r\n                    modName = temp;\r\n                }\r\n            }\r\n\r\n            return {\r\n                moduleName: modName,\r\n                ext: ext,\r\n                strip: strip\r\n            };\r\n        },\r\n\r\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\r\n\r\n        /**\r\n         * Is an URL on another domain. Only works for browser use, returns\r\n         * false in non-browser environments. Only used to know if an\r\n         * optimized .js version of a text resource should be loaded\r\n         * instead.\r\n         * @param {String} url\r\n         * @returns Boolean\r\n         */\r\n        useXhr: function (url, protocol, hostname, port) {\r\n            var uProtocol, uHostName, uPort,\r\n                match = text.xdRegExp.exec(url);\r\n            if (!match) {\r\n                return true;\r\n            }\r\n            uProtocol = match[2];\r\n            uHostName = match[3];\r\n\r\n            uHostName = uHostName.split(':');\r\n            uPort = uHostName[1];\r\n            uHostName = uHostName[0];\r\n\r\n            return (!uProtocol || uProtocol === protocol) &&\r\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\r\n                   ((!uPort && !uHostName) || uPort === port);\r\n        },\r\n\r\n        finishLoad: function (name, strip, content, onLoad) {\r\n            content = strip ? text.strip(content) : content;\r\n            if (masterConfig.isBuild) {\r\n                buildMap[name] = content;\r\n            }\r\n            onLoad(content);\r\n        },\r\n\r\n        load: function (name, req, onLoad, config) {\r\n            //Name has format: some.module.filext!strip\r\n            //The strip part is optional.\r\n            //if strip is present, then that means only get the string contents\r\n            //inside a body tag in an HTML string. For XML/SVG content it means\r\n            //removing the <?xml ...?> declarations so the content can be inserted\r\n            //into the current doc without problems.\r\n\r\n            // Do not bother with the work if a build and text will\r\n            // not be inlined.\r\n            if (config.isBuild && !config.inlineText) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            masterConfig.isBuild = config.isBuild;\r\n\r\n            var parsed = text.parseName(name),\r\n                nonStripName = parsed.moduleName +\r\n                    (parsed.ext ? '.' + parsed.ext : ''),\r\n                url = req.toUrl(nonStripName),\r\n                useXhr = (masterConfig.useXhr) ||\r\n                         text.useXhr;\r\n\r\n            // Do not load if it is an empty: url\r\n            if (url.indexOf('empty:') === 0) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            //Load the text. Use XHR if possible and in a browser.\r\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\r\n                text.get(url, function (content) {\r\n                    text.finishLoad(name, parsed.strip, content, onLoad);\r\n                }, function (err) {\r\n                    if (onLoad.error) {\r\n                        onLoad.error(err);\r\n                    }\r\n                });\r\n            } else {\r\n                //Need to fetch the resource across domains. Assume\r\n                //the resource has been optimized into a JS module. Fetch\r\n                //by the module name + extension, but do not include the\r\n                //!strip part to avoid file system issues.\r\n                req([nonStripName], function (content) {\r\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\r\n                                    parsed.strip, content, onLoad);\r\n                });\r\n            }\r\n        },\r\n\r\n        write: function (pluginName, moduleName, write, config) {\r\n            if (buildMap.hasOwnProperty(moduleName)) {\r\n                var content = text.jsEscape(buildMap[moduleName]);\r\n                write.asModule(pluginName + \"!\" + moduleName,\r\n                               \"define(function () { return '\" +\r\n                                   content +\r\n                               \"';});\\n\");\r\n            }\r\n        },\r\n\r\n        writeFile: function (pluginName, moduleName, req, write, config) {\r\n            var parsed = text.parseName(moduleName),\r\n                extPart = parsed.ext ? '.' + parsed.ext : '',\r\n                nonStripName = parsed.moduleName + extPart,\r\n                //Use a '.js' file name so that it indicates it is a\r\n                //script that can be loaded across domains.\r\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\r\n\r\n            //Leverage own load() method to load plugin value, but only\r\n            //write out values that do not have the strip argument,\r\n            //to avoid any potential issues with ! in file names.\r\n            text.load(nonStripName, req, function (value) {\r\n                //Use own write() method to construct full module value.\r\n                //But need to create shell that translates writeFile's\r\n                //write() to the right interface.\r\n                var textWrite = function (contents) {\r\n                    return write(fileName, contents);\r\n                };\r\n                textWrite.asModule = function (moduleName, contents) {\r\n                    return write.asModule(moduleName, fileName, contents);\r\n                };\r\n\r\n                text.write(pluginName, nonStripName, textWrite, config);\r\n            }, config);\r\n        }\r\n    };\r\n\r\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\r\n            typeof process !== \"undefined\" &&\r\n            process.versions &&\r\n            !!process.versions.node &&\r\n            !process.versions['node-webkit'])) {\r\n        //Using special require.nodeRequire, something added by r.js.\r\n        fs = require.nodeRequire('fs');\r\n\r\n        text.get = function (url, callback, errback) {\r\n            try {\r\n                var file = fs.readFileSync(url, 'utf8');\r\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\r\n                if (file.indexOf('\\uFEFF') === 0) {\r\n                    file = file.substring(1);\r\n                }\r\n                callback(file);\r\n            } catch (e) {\r\n                errback(e);\r\n            }\r\n        };\r\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\r\n            text.createXhr())) {\r\n        text.get = function (url, callback, errback, headers) {\r\n            var xhr = text.createXhr(), header;\r\n            xhr.open('GET', url, true);\r\n\r\n            //Allow plugins direct access to xhr headers\r\n            if (headers) {\r\n                for (header in headers) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Allow overrides specified in config\r\n            if (masterConfig.onXhr) {\r\n                masterConfig.onXhr(xhr, url);\r\n            }\r\n\r\n            xhr.onreadystatechange = function (evt) {\r\n                var status, err;\r\n                //Do not explicitly handle errors, those should be\r\n                //visible via console output in the browser.\r\n                if (xhr.readyState === 4) {\r\n                    status = xhr.status;\r\n                    if (status > 399 && status < 600) {\r\n                        //An http 4xx or 5xx error. Signal an error.\r\n                        err = new Error(url + ' HTTP status: ' + status);\r\n                        err.xhr = xhr;\r\n                        errback(err);\r\n                    } else {\r\n                        callback(xhr.responseText);\r\n                    }\r\n\r\n                    if (masterConfig.onXhrComplete) {\r\n                        masterConfig.onXhrComplete(xhr, url);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send(null);\r\n        };\r\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\r\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\r\n        //Why Java, why is this so awkward?\r\n        text.get = function (url, callback) {\r\n            var stringBuffer, line,\r\n                encoding = \"utf-8\",\r\n                file = new java.io.File(url),\r\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\r\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\r\n                content = '';\r\n            try {\r\n                stringBuffer = new java.lang.StringBuffer();\r\n                line = input.readLine();\r\n\r\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\r\n                // http://www.unicode.org/faq/utf_bom.html\r\n\r\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\r\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\r\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\r\n                    // Eat the BOM, since we've already found the encoding on this file,\r\n                    // and we plan to concatenating this buffer with others; the BOM should\r\n                    // only appear at the top of a file.\r\n                    line = line.substring(1);\r\n                }\r\n\r\n                if (line !== null) {\r\n                    stringBuffer.append(line);\r\n                }\r\n\r\n                while ((line = input.readLine()) !== null) {\r\n                    stringBuffer.append(lineSeparator);\r\n                    stringBuffer.append(line);\r\n                }\r\n                //Make sure we return a JavaScript string and not a Java string.\r\n                content = String(stringBuffer.toString()); //String\r\n            } finally {\r\n                input.close();\r\n            }\r\n            callback(content);\r\n        };\r\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\r\n            typeof Components !== 'undefined' && Components.classes &&\r\n            Components.interfaces)) {\r\n        //Avert your gaze!\r\n        Cc = Components.classes,\r\n        Ci = Components.interfaces;\r\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\r\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\r\n\r\n        text.get = function (url, callback) {\r\n            var inStream, convertStream, fileObj,\r\n                readData = {};\r\n\r\n            if (xpcIsWindows) {\r\n                url = url.replace(/\\//g, '\\\\');\r\n            }\r\n\r\n            fileObj = new FileUtils.File(url);\r\n\r\n            //XPCOM, you so crazy\r\n            try {\r\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\r\n                           .createInstance(Ci.nsIFileInputStream);\r\n                inStream.init(fileObj, 1, 0, false);\r\n\r\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\r\n                                .createInstance(Ci.nsIConverterInputStream);\r\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\r\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\r\n\r\n                convertStream.readString(inStream.available(), readData);\r\n                convertStream.close();\r\n                inStream.close();\r\n                callback(readData.value);\r\n            } catch (e) {\r\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\r\n            }\r\n        };\r\n    }\r\n    return text;\r\n});\n","\ndefine('text!forms/tasks/anchor/view.html',[],function () { return '<li class=\"link\" data-bind=\"click: <%= Target %>\"><%= Label %></li>';});\n\n","/**\r\nAnchor\r\n**/\r\n\r\ndefine('forms/tasks/anchor/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = new kendo.View(built(properties), { wrap: false });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/analystByGroup/view.html',[],function () { return '<div id=\"AssignToAnalystByGroupWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div>\\r\\n                <div id=\"groupPicker\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\"form-group\">\\r\\n                <div class=\"control-label\">\\r\\n                    <label><%= localization.AssignedTo %></label>\\r\\n                </div>\\r\\n                <div class=\"editor-field\">\\r\\n                    <input id=\"assignedToCombo\"\\r\\n                           data-role=\"combobox\"\\r\\n                           data-filter=\"contains\"\\r\\n                           data-bind=\"source: assignToDataSource, enabled:userEnabled, events: { change: userChange }\"\\r\\n                           data-text-field=\"Name\"\\r\\n                           data-value-field=\"Id\"\\r\\n                           data-placeholder=\"<%=localization.ChooseSupportGroup%>\"></input>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/fields/enum/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <div class=\"form-control form-control-picker input-sm\"\\r\\n         data-url=\"/api/V3/Enum/GetList\"\\r\\n         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n         data-showpath=\"<%= ShowPath %>\"\\r\\n         data-mustselectleafnode=\"<%= LeafNodeOnly %>\"\\r\\n         data-bind=\"ciresonDropDownTree: \\'<%= EnumId %>\\', value: <%= PropertyName %>\"\\r\\n         data-disabled=\"<%= Disabled %>\"\\r\\n         data-role=\"<%= PropertyName %>\"\\r\\n         data-filter=\"<%= FilterIds%>\",\\r\\n         data-visible=\"<%= Visible%>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n        >\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>';});\n\n","/**\r\nENUM - dropDownTree\r\n**/\r\n\r\ndefine('forms/fields/enum/controller',['require','text!forms/fields/enum/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/enum/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                EnumId: '',\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                LeafNodeOnly: false,\r\n                ShowPath: false,\r\n                FilterIds: '',\r\n                Visible: true\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            if (properties.Visible)\r\n                callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/drawerTask/view.html',[],function () { return '<span data-bind=\"visible: showTooltip\" class=\"tooltip-container\" rel=\"dynamictooltip\" title=\"<%= toolTipMessage %>\"></span>\\r\\n<li data-bind=\"click: <%= onClick %>, enabled: isEnabled\"><a data-bind=\"localize: <%= titleKey %>\"></a></li>';});\n\n","/**\r\nanalystByGroup\r\n**/\r\n\r\ndefine('forms/tasks/analystByGroup/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/analystByGroup/view.html','forms/fields/enum/controller','text!forms/tasks/drawerTask/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchorTemplate = require(\"text!forms/tasks/anchor/view.html\");\r\n    var windowTemplate = require(\"text!forms/tasks/analystByGroup/view.html\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n    var drawerTaskTemplate = require(\"text!forms/tasks/drawerTask/view.html\");\r\n\r\n    var definition = {\r\n        template: windowTemplate,\r\n        build: function (vm, node, callback) {\r\n            var callerType = vm.type; //\"Incident\", \"ServiceRequest\", \"BulkEdit\"\r\n            var isBulkEdit = vm.type == \"BulkEdit\";\r\n            var originalAssignedName = null;\r\n            var originalAssignedId = null;\r\n            var originalSupportGroup = null; //Todo: made need to initialize as an object\r\n            var originalSupportName = \"\";\r\n            var originalSupportId = \"00000000-0000-0000-0000-000000000000\";\r\n            var configEnumId;\r\n            var configPropertyName;\r\n\r\n\r\n\r\n            //viewModel set up\r\n            var getTaskViewModel = function (modalView) {\r\n                //this view Model is bound to the anchor element \r\n                var taskVm = kendo.observable({\r\n                    //this is the func that fires on link click\r\n                    analystByGroup: function () {\r\n                        if (isBulkEdit) {\r\n                            configPropertyName = taskVm.selectedWorkItem.groupPropertyName;\r\n                            configEnumId = taskVm.selectedWorkItem.groupPropertyEnumId;\r\n                        } else {\r\n                            configPropertyName = node.Configs.propertyName;\r\n                            configEnumId = node.Configs.enumId;\r\n                        }\r\n                        var modalEle = modalView.element.clone();\r\n                        var modalControl = modalEle.kendoCiresonWindow({\r\n                            title: localization.AssignToAnalystByGroup,\r\n                            width: 500,\r\n                            height: 300,\r\n                            actions: []\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //this view Model is bound to the window element\r\n                        var windowViewModal = kendo.observable({\r\n                            propertyName: configPropertyName,       //IR: \"TierQueue\", SR: \"SupportGroup\"\r\n                            enumId: configEnumId,                   //IR: IncidentTierQueue (enum), SR: ServiceRequestSupportGroup (enum)\r\n                            assignToDataSource: getUserDataSource(\"00000000-0000-0000-0000-000000000000\"),\r\n                            userEnabled: ((vm.viewModel && vm.viewModel.SupportGroup && vm.viewModel.SupportGroup.Id)\r\n                                || (vm.viewModel && vm.viewModel.TierQueue && vm.viewModel.TierQueue.Id)\r\n                                || (vm.viewModel && vm.viewModel[pageForm.CRSupportGroupField] && vm.viewModel[pageForm.CRSupportGroupField].Id)\r\n                                || (vm.viewModel && vm.viewModel[pageForm.PRSupportGroupField] && vm.viewModel[pageForm.PRSupportGroupField].Id)\r\n                                || (vm.viewModel && vm.viewModel[pageForm.MASupportGroupField] && vm.viewModel[pageForm.MASupportGroupField].Id)\r\n                                || (vm.viewModel && vm.viewModel.AssignedWorkItem && vm.viewModel.AssignedWorkItem.BaseId)) ? true : false,\r\n                            okEnabled: false,\r\n                            userChange: function (e) {\r\n                                windowViewModal.set(\"okEnabled\", true);\r\n                                if (isBulkEdit) {\r\n                                    taskVm.set(\"assignedWorkItem.displayName\", e.sender.text());\r\n                                    taskVm.set(\"assignedWorkItem.baseId\", e.sender.value());\r\n                                } else {\r\n                                    //clear them out first\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", null);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", null);\r\n\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", e.sender.text());\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", e.sender.value());\r\n                                }\r\n                            },\r\n                            okClick: function () {\r\n                                modalControl.close();\r\n                                if (isBulkEdit) {\r\n                                    app.lib.mask.apply();\r\n                                    var postData = {\r\n                                        ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                        UpdateServiceManagement: true,\r\n                                        ItemIds: _.pluck(taskVm.currentSelection, 'BaseId'),\r\n                                        EditedFields: getBulkEditedFieldData(taskVm)\r\n                                    }\r\n\r\n                                    $.ajax({\r\n                                        url: '/api/v3/workitem/BulkEditWorkItems/',\r\n                                        data: JSON.stringify(postData),\r\n                                        dataType: 'json',\r\n                                        contentType: 'application/json',\r\n                                        type: \"POST\",\r\n                                        success: function() {\r\n                                            onBulkEditSaveSuccess(taskVm);\r\n                                        },\r\n                                        error: function() {\r\n                                            onBulkEditSaveFailure();\r\n                                        }\r\n                                    });\r\n\r\n                                } else {\r\n                                    //form task:\r\n                                    //replace original values with new saved values\r\n                                    originalAssignedName = vm.viewModel.AssignedWorkItem.get(\"DisplayName\");\r\n                                    originalAssignedId = vm.viewModel.AssignedWorkItem.get(\"BaseId\");\r\n\r\n                                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                                        originalSupportGroup = vm.viewModel.get(\"TierQueue\");\r\n                                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                                        originalSupportGroup = vm.viewModel.get(\"SupportGroup\");\r\n                                    } else if (vm.type == \"ChangeRequest\" && !_.isUndefined(vm.viewModel[pageForm.CRSupportGroupField])) {\r\n                                        originalSupportGroup = vm.viewModel.get(pageForm.CRSupportGroupField);\r\n                                    } else if (vm.type == \"Problem\" && !_.isUndefined(vm.viewModel[pageForm.PRSupportGroupField])) {\r\n                                        originalSupportGroup = vm.viewModel.get(pageForm.PRSupportGroupField);\r\n                                    } else if (vm.type == \"ManualActivity\" && !_.isUndefined(vm.viewModel[pageForm.MASupportGroupField])) {\r\n                                        originalSupportGroup = vm.viewModel.get(pageForm.MASupportGroupField);\r\n                                    }\r\n\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                modalControl.close();\r\n                                if (isBulkEdit) {\r\n                                    taskVm.set(\"assignedWorkItem.displayName\", null);\r\n                                    taskVm.set(\"assignedWorkItem.baseId\", null);\r\n                                } else {\r\n                                    //lets clean the model\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", null);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", null);\r\n\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", originalAssignedName);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", originalAssignedId);\r\n\r\n\r\n                                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                                        vm.viewModel.set(\"TierQueue\", originalSupportGroup);\r\n                                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                                        vm.viewModel.set(\"SupportGroup\", originalSupportGroup);\r\n                                    } else if (vm.type == \"ChangeRequest\" && !_.isUndefined(vm.viewModel[pageForm.CRSupportGroupField])) {\r\n                                        vm.viewModel.set(pageForm.CRSupportGroupField, originalSupportGroup);\r\n                                    } else if (vm.type == \"ManualActivity\" && !_.isUndefined(vm.viewModel[pageForm.MASupportGroupField])) {\r\n                                        vm.viewModel.set(pageForm.MASupportGroupField, originalSupportGroup);\r\n                                    }\r\n                                }\r\n                            },\r\n                        });\r\n\r\n                        var createGroupPicker = function (windowViewModal, modalEle) {\r\n                            var groupProperties = {\r\n                                PropertyName: windowViewModal.propertyName,\r\n                                PropertyDisplayName: \"SupportGroup\",\r\n                                EnumId: windowViewModal.enumId\r\n                            };\r\n                            buildEnumPicker(modalEle.find('#groupPicker'), groupProperties, vm.viewModel);\r\n\r\n                            //get the enum picker elm\r\n                            var groupPicker = modalEle.find('div[data-role=\"' + windowViewModal.propertyName + '\"]');\r\n\r\n                            //make sure we have a group picker object and we don't error\r\n                            if (groupPicker) {\r\n                                //get got handlers for event binding\r\n                                var groupDropDownControl = groupPicker.data().handler._dropdown;\r\n                                var groupTreeViewControl = groupPicker.data().handler._treeview;\r\n\r\n                                //bind group picker changes events\r\n                                groupDropDownControl.bind(\"change\", function (e) {\r\n                                    var item = this.dataItem(this.select());\r\n                                    var assignToCombobox = modalEle.find(\"#assignedToCombo\").data(\"kendoComboBox\");\r\n                                    setSupportGroupUsers(item, windowViewModal, assignToCombobox);\r\n                                    taskVm.set(\"assignedSupportGroup\", item);\r\n                                });\r\n                                groupTreeViewControl.bind(\"change\", function (e) {\r\n                                    var item = this.dataItem(this.current());\r\n                                    var assignToCombobox = modalEle.find(\"#assignedToCombo\").data(\"kendoComboBox\");\r\n                                    setSupportGroupUsers(item, windowViewModal, assignToCombobox);\r\n                                    taskVm.set(\"assignedSupportGroup\", item);\r\n                                });\r\n                                \r\n                                var item1 = (vm.viewModel && vm.viewModel[windowViewModal.propertyName]) ? vm.viewModel[windowViewModal.propertyName] : null;\r\n                                if (item1 && !_.isNull(item1.Id)) {\r\n                                    windowViewModal.set(\"assignToDataSource\", getUserDataSource(item1.Id));\r\n                                    if (vm.viewModel.AssignedWorkItem.DisplayName) {\r\n                                        var assignToCombobox1 = modalEle.find(\"#assignedToCombo\").data(\"kendoComboBox\");\r\n                                        assignToCombobox1.text(vm.viewModel.AssignedWorkItem.DisplayName);\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        //form field helper\r\n                        var buildEnumPicker = function (container, props, vmModel) {\r\n                            enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                                container.html(enumControl);\r\n                                app.controls.apply(container, {\r\n                                    localize: true,\r\n                                    vm: vmModel,\r\n                                    bind: true\r\n                                });\r\n                            });\r\n                        };\r\n\r\n\r\n                        //bind window element to window viewModel\r\n                        kendo.bind(modalEle, windowViewModal);\r\n                        //create status enumPicker\r\n                        createGroupPicker(windowViewModal, modalEle);\r\n\r\n                        modalEle.removeClass('hide');\r\n                        modalEle.show();\r\n\r\n                        modalControl.refresh();\r\n                        modalControl.open();\r\n                    }\r\n                });\r\n\r\n                return taskVm;\r\n            };\r\n            //addition viewModel set up for bulk task\r\n            var setAdditionBulkTaskProperties = function (anchorViewModel) {\r\n                var drawerTaskVm = anchorViewModel;\r\n                //this view Model is bound to the anchor element \r\n                drawerTaskVm.currentSelection = [];\r\n                drawerTaskVm.selectedWorkItem = {\r\n                    type: '',\r\n                    projectionId: '',\r\n                    groupPropertyName: '',\r\n                    groupPropertyEnumId: '',\r\n                };\r\n                drawerTaskVm.assignedWorkItem = {\r\n                    displayName: \"\",\r\n                    baseId: \"\"\r\n                },\r\n                drawerTaskVm.isEnabled = false;\r\n                drawerTaskVm.showTooltip = true;\r\n                drawerTaskVm.setEnabled = function (enabled) {\r\n                    this.set('isEnabled', enabled);\r\n                    this.set('showTooltip', !enabled);\r\n                };;\r\n                drawerTaskVm.targetControlId = '';\r\n                drawerTaskVm.onTargetControlChange = function (grid) {\r\n                    var selectedDataItems = [];\r\n                    if (app.isMobile()) {\r\n                        //grid is selected items array when called from mobile\r\n                        selectedDataItems = grid;\r\n                    } else {\r\n                        selectedDataItems = grid.select().map(function (index, item) {\r\n                            return grid.dataItem($(item));\r\n                        }).toArray();\r\n                    }\r\n\r\n                    //we only update 10 items at a time\r\n                    if (selectedDataItems.length > 10) {\r\n                        onExceedSelectionCount();\r\n                    }\r\n\r\n                    anchorViewModel.set('currentSelection', selectedDataItems);\r\n\r\n                    //if nothing is selected disabled the item\r\n                    if (selectedDataItems.length <= 0 || selectedDataItems.length > 10) {\r\n                        drawerTaskVm.setEnabled(false);\r\n                    } else {\r\n                        var selectedTypes = _.pluck(selectedDataItems, \"WorkItemType\");\r\n                        var selectedStatusNames = _.pluck(selectedDataItems, \"Status\");\r\n\r\n                        //return false if multiple selected, otherwise returns string values\r\n                        var singleSelectedType = _.reduce(selectedTypes, function (memo, currentVal) {\r\n                            return (memo === currentVal) ? memo : false;\r\n                        });\r\n                        drawerTaskVm.set(\"selectedWorkItem.type\", singleSelectedType);\r\n\r\n                        var singleSelectedStatusName = _.reduce(selectedStatusNames, function (memo, currentVal) {\r\n                            return (memo === currentVal) ? memo : false;\r\n                        });\r\n\r\n                        if (singleSelectedType) {\r\n                            switch (singleSelectedType) {\r\n                                case \"System.WorkItem.ServiceRequest\":\r\n                                    drawerTaskVm.setTrimmedWiType();\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemServiceRequestViewModel);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', 'SupportGroup');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', app.constants.enumPickerIds.ServiceRequestSupportGroup);\r\n                                    //if SR is closed do not allow status change from here (TFS 3560)\r\n                                    if (singleSelectedStatusName === \"Closed\") {\r\n                                        drawerTaskVm.setEnabled(false);\r\n                                    } else {\r\n                                        drawerTaskVm.setEnabled(true);\r\n                                    }\r\n                                    break;\r\n                                case \"System.WorkItem.Incident\":\r\n                                    drawerTaskVm.setTrimmedWiType();\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemIncidentViewModel);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', 'TierQueue');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', app.constants.enumPickerIds.IncidentTierQueue);\r\n                                    drawerTaskVm.setEnabled(true);\r\n                                    break;\r\n                                case \"System.WorkItem.ChangeRequest\":\r\n                                    drawerTaskVm.setTrimmedWiType();\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemChangeRequestViewModel);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', pageForm.CRSupportGroupField);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', pageForm.CRSupportGroupGuid);\r\n                                    drawerTaskVm.setEnabled(true);\r\n                                    break;\r\n                                case \"System.WorkItem.Problem\":\r\n                                    drawerTaskVm.setTrimmedWiType();\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemProblemViewModel);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', pageForm.PRSupportGroupField);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', pageForm.PRSupportGroupGuid);\r\n                                    drawerTaskVm.setEnabled(true);\r\n                                    break;\r\n                                default:\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', '');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', '');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', '');\r\n                                    // not a supported bulk edit Type, disable the edit button\r\n                                    drawerTaskVm.setEnabled(false);\r\n                            }\r\n                        } else {\r\n                            //not same type && status\r\n                            drawerTaskVm.setEnabled(false);\r\n                        }\r\n                    }\r\n                };\r\n                anchorViewModel.setTrimmedWiType = function () {\r\n                    this.set('selectedWorkItem.trimmedType', this.selectedWorkItem.type.split(/[\\s.]+/).pop());\r\n                };\r\n\r\n\r\n            };\r\n            //helper functions\r\n            var getBulkEditedFieldData = function (viewModel) {\r\n                var json = [];\r\n\r\n                switch (viewModel.selectedWorkItem.trimmedType) {\r\n                    case \"Incident\":\r\n                        json = [\r\n                           {\r\n                               PropertyName: \"TierQueue\",\r\n                               EditedValue: viewModel.assignedSupportGroup.Id,\r\n                               PropertyType: \"enum\"\r\n                           },\r\n                           {\r\n                               PropertyName: \"AssignedWorkItem\",\r\n                               EditedValue: viewModel.assignedWorkItem.baseId,\r\n                               PropertyType: \"singleCardinalityObject\",\r\n                               PropertyRelationshipId: \"15e577a3-6bf9-6713-4eac-ba5a5b7c4722\" //magic guid\r\n                           },\r\n                            {\r\n                                PropertyName: \"AppliesToTroubleTicket\",\r\n                                PropertyType: \"multiplecardinalityobject\",\r\n                                PropertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //more magic!\r\n                                EditedValue: {\r\n                                    ActionType: {\r\n                                        Id: \"b04370d9-3d4f-3981-61bb-ac9462a1fe65\", //magic?\r\n                                        Name: \"Record Assigned\"\r\n                                    },\r\n                                    Description: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    DescriptionDisplay: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    EnteredBy: session.user.Name,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Title: localization.RecordAssigned,\r\n                                    Image: app.config.iconPath + app.config.icons[\"Record Assigned\"]\r\n                                }\r\n                            }\r\n                        ];\r\n                        break;\r\n                    case \"ServiceRequest\":\r\n                        json = [\r\n                            {\r\n                                PropertyName: \"SupportGroup\",\r\n                                EditedValue: viewModel.assignedSupportGroup.Id,\r\n                                PropertyType: \"enum\"\r\n                            },\r\n                            {\r\n                                PropertyName: \"AssignedWorkItem\",\r\n                                EditedValue: viewModel.assignedWorkItem.baseId,\r\n                                PropertyType: \"singleCardinalityObject\",\r\n                                PropertyRelationshipId: \"15e577a3-6bf9-6713-4eac-ba5a5b7c4722\" //magic guid\r\n                            },\r\n                            {\r\n                                PropertyName: \"AppliesToWorkItem\",\r\n                                PropertyType: \"multiplecardinalityobject\",\r\n                                PropertyRelationshipId: \"79d27435-5917-b0a1-7911-fb2b678f32a6\", //more magic!\r\n                                EditedValue: {\r\n                                    ActionType: {\r\n                                        Id: \"b04370d9-3d4f-3981-61bb-ac9462a1fe65\", //magic?\r\n                                        Name: \"Record Assigned\"\r\n                                    },\r\n                                    Description: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    DescriptionDisplay: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    EnteredBy: session.user.Name,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Title: localization.RecordAssigned,\r\n                                    Image: app.config.iconPath + app.config.icons[\"Record Assigned\"]\r\n                                }\r\n                            }\r\n                        ];\r\n                        break;\r\n                    case \"ChangeRequest\":\r\n                        json = [\r\n                            {\r\n                                PropertyName: pageForm.CRSupportGroupField,\r\n                                EditedValue: viewModel.assignedSupportGroup.Id,\r\n                                PropertyType: \"enum\"\r\n                            },\r\n                            {\r\n                                PropertyName: \"AssignedWorkItem\",\r\n                                EditedValue: viewModel.assignedWorkItem.baseId,\r\n                                PropertyType: \"singleCardinalityObject\",\r\n                                PropertyRelationshipId: \"15e577a3-6bf9-6713-4eac-ba5a5b7c4722\" //magic guid\r\n                            },\r\n                            {\r\n                                PropertyName: \"AppliesToWorkItem\",\r\n                                PropertyType: \"multiplecardinalityobject\",\r\n                                PropertyRelationshipId: \"79d27435-5917-b0a1-7911-fb2b678f32a6\", //more magic!\r\n                                EditedValue: {\r\n                                    ActionType: {\r\n                                        Id: \"b04370d9-3d4f-3981-61bb-ac9462a1fe65\", //magic?\r\n                                        Name: \"Record Assigned\"\r\n                                    },\r\n                                    Description: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    DescriptionDisplay: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    EnteredBy: session.user.Name,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Title: localization.RecordAssigned,\r\n                                    Image: app.config.iconPath + app.config.icons[\"Record Assigned\"]\r\n                                }\r\n                            }\r\n                        ];\r\n                        break;\r\n                    case \"Problem\":\r\n                        json = [\r\n                            {\r\n                                PropertyName: pageForm.PRSupportGroupField,\r\n                                EditedValue: viewModel.assignedSupportGroup.Id,\r\n                                PropertyType: \"enum\"\r\n                            },\r\n                            {\r\n                                PropertyName: \"AssignedWorkItem\",\r\n                                EditedValue: viewModel.assignedWorkItem.baseId,\r\n                                PropertyType: \"singleCardinalityObject\",\r\n                                PropertyRelationshipId: \"15e577a3-6bf9-6713-4eac-ba5a5b7c4722\" //magic guid\r\n                            },\r\n                            {\r\n                                PropertyName: \"AppliesToWorkItem\",\r\n                                PropertyType: \"multiplecardinalityobject\",\r\n                                PropertyRelationshipId: \"79d27435-5917-b0a1-7911-fb2b678f32a6\", //more magic!\r\n                                EditedValue: {\r\n                                    ActionType: {\r\n                                        Id: \"b04370d9-3d4f-3981-61bb-ac9462a1fe65\", //magic?\r\n                                        Name: \"Record Assigned\"\r\n                                    },\r\n                                    Description: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    DescriptionDisplay: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    EnteredBy: session.user.Name,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Title: localization.RecordAssigned,\r\n                                    Image: app.config.iconPath + app.config.icons[\"Record Assigned\"]\r\n                                }\r\n                            }\r\n                        ];\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                return json;\r\n            }\r\n            var onExceedSelectionCount = function () {\r\n                kendo.ui.ExtAlertDialog.show({\r\n                    title: localizationHelper.localize('Warning'),\r\n                    message: localizationHelper.localize('BulkEditExceedMessage')\r\n                });\r\n            }\r\n            var onBulkEditSaveSuccess = function (taskVm) {\r\n                if (app.isMobile()) {\r\n                    var listControl = $(\"[data-control-id='\" + taskVm.targetControlId + \"']\").data('kendoListView');\r\n                    listControl.dataSource.query();\r\n                } else {\r\n                    //refresh the grid to get updated data.\r\n                    var targetGrid = $('#' + taskVm.targetControlId).data('kendoGrid');\r\n                    var targetGridState = app.gridUtils.savedState.getCurrentState(taskVm.targetControlId);\r\n                    app.lib.recheckGridState(targetGridState, targetGrid);\r\n                    targetGrid.dataSource.query(targetGridState);\r\n                }\r\n                app.lib.message.add(localizationHelper.localize('SaveSuccessMessage'), \"success\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var onBulkEditSaveFailure = function () {\r\n                app.lib.message.add(localizationHelper.localize('SaveErrorMessage'), \"danger\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var getOriginalFormValues = function () {\r\n                if (!_.isUndefined(vm.viewModel.AssignedWorkItem)) {\r\n                    originalAssignedName = vm.viewModel.AssignedWorkItem.DisplayName;\r\n                    originalAssignedId = vm.viewModel.AssignedWorkItem.BaseId;\r\n                }\r\n\r\n                if (callerType == \"Incident\") {\r\n                    originalSupportGroup = vm.viewModel.TierQueue;\r\n                    originalSupportName = (!_.isNull(vm.viewModel.TierQueue) && !_.isUndefined(vm.viewModel.TierQueue))\r\n                                                ? vm.viewModel.TierQueue.Name\r\n                                                : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel.TierQueue) && !_.isUndefined(vm.viewModel.TierQueue))\r\n                                                  ? vm.viewModel.TierQueue.Id\r\n                                                  : \"00000000-0000-0000-0000-000000000000\";\r\n                } else if (callerType == \"ServiceRequest\") {\r\n                    originalSupportGroup = vm.viewModel.SupportGroup;\r\n                    originalSupportName = (!_.isNull(vm.viewModel.SupportGroup) && !_.isUndefined(vm.viewModel.SupportGroup))\r\n                                          ? vm.viewModel.SupportGroup.Name : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel.SupportGroup) && !_.isUndefined(vm.viewModel.SupportGroup))\r\n                                            ? vm.viewModel.SupportGroup.Id : \"00000000-0000-0000-0000-000000000000\";\r\n                }else if (callerType == \"ChangeRequest\") {\r\n                    originalSupportGroup = vm.viewModel[pageForm.CRSupportGroupField];\r\n                    originalSupportName = (!_.isNull(vm.viewModel[pageForm.CRSupportGroupField]) && !_.isUndefined(vm.viewModel[pageForm.CRSupportGroupField]))\r\n                        ? vm.viewModel[pageForm.CRSupportGroupField].Name : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel[pageForm.CRSupportGroupField]) && !_.isUndefined(vm.viewModel[pageForm.CRSupportGroupField]))\r\n                        ? vm.viewModel[pageForm.CRSupportGroupField].Id : \"00000000-0000-0000-0000-000000000000\";\r\n                } else if (callerType == \"Problem\") {\r\n                    originalSupportGroup = vm.viewModel[pageForm.PRSupportGroupField];\r\n                    originalSupportName = (!_.isNull(vm.viewModel[pageForm.PRSupportGroupField]) && !_.isUndefined(vm.viewModel[pageForm.PRSupportGroupField]))\r\n                        ? vm.viewModel[pageForm.PRSupportGroupField].Name : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel[pageForm.PRSupportGroupField]) && !_.isUndefined(vm.viewModel[pageForm.PRSupportGroupField]))\r\n                        ? vm.viewModel[pageForm.PRSupportGroupField].Id : \"00000000-0000-0000-0000-000000000000\";\r\n                } else if (callerType == \"ManualActivity\") {\r\n                    originalSupportGroup = vm.viewModel[pageForm.MASupportGroupField];\r\n                    originalSupportName = (!_.isNull(vm.viewModel[pageForm.MASupportGroupField]) && !_.isUndefined(vm.viewModel[pageForm.MASupportGroupField]))\r\n                        ? vm.viewModel[pageForm.MASupportGroupField].Name : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel[pageForm.MASupportGroupField]) && !_.isUndefined(vm.viewModel[pageForm.MASupportGroupField]))\r\n                        ? vm.viewModel[pageForm.MASupportGroupField].Id : \"00000000-0000-0000-0000-000000000000\";\r\n                }\r\n\r\n                if (!_.isUndefined(originalSupportGroup) && !_.isNull(originalSupportGroup)) {\r\n                    originalSupportGroup.Text = originalSupportGroup.Name; //Need this so mapping works later on :-( .  \r\n                }\r\n            }\r\n            var getUserDataSource = function (selectedSupportGroupId) {\r\n                var userDataSource = new kendo.data.DataSource({\r\n                    transport: {\r\n                        read: {\r\n                            url: app.lib.addUrlParam(\"/api/V3/User/GetSupportGroupUsers\", \"id\", selectedSupportGroupId),\r\n                            dataType: \"json\"\r\n                        }\r\n                    },\r\n                    schema: {\r\n                        model: {\r\n                            fields: {\r\n                                Id: { type: \"string\" },\r\n                                Name: { type: \"string\" }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                return userDataSource;\r\n            }\r\n            var resetAssignToField = function (asssignToComboBox) {\r\n                asssignToComboBox.focus();\r\n                asssignToComboBox.value(\"\");\r\n                asssignToComboBox.input.attr(\"placeholder\", localization.ChooseOne);\r\n            }\r\n\r\n            var setSupportGroupUsers = function (item, vmWindow, asssignToComboBox) {\r\n                if (_.isUndefined(item)) {\r\n                    return;\r\n                }\r\n                \r\n                if (!isBulkEdit) {\r\n                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                        vm.viewModel.set(\"TierQueue\", item);\r\n                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                        vm.viewModel.set(\"SupportGroup\", item);\r\n                    } else if (vm.type == \"ChangeRequest\" && !_.isUndefined(vm.viewModel[pageForm.CRSupportGroupField])) {\r\n                        vm.viewModel.set(pageForm.CRSupportGroupField, item);\r\n                    } else if (vm.type == \"Problem\" && !_.isUndefined(vm.viewModel[pageForm.PRSupportGroupField])) {\r\n                        vm.viewModel.set(pageForm.PRSupportGroupField, item);\r\n                    }\r\n\r\n                }\r\n                vmWindow.set(\"userEnabled\", true);\r\n                vmWindow.set(\"okEnabled\", true);\r\n\r\n                resetAssignToField(asssignToComboBox);\r\n\r\n                vmWindow.set(\"assignToDataSource\", getUserDataSource(item.Id));\r\n                if (originalAssignedName) {\r\n                    $(\"#assignedToCombo-list\").hide();\r\n                    asssignToComboBox.text(originalAssignedName);\r\n                    setTimeout(function () {\r\n                        if (asssignToComboBox.items().length === 0) {\r\n                            resetAssignToField(asssignToComboBox);\r\n                            vm.viewModel.AssignedWorkItem.set(\"DisplayName\", null);\r\n                            vm.viewModel.AssignedWorkItem.set(\"BaseId\", null);\r\n                        }\r\n                    }, 250);\r\n                }\r\n            }\r\n            var buildAndRender = {\r\n                windowEle: function () {\r\n                    //build the template for the window\r\n                    var built = _.template(windowTemplate);\r\n                    var view = new kendo.View(built(), { wrap: false });\r\n                    //add in hidden window\r\n                    callback(view.render());\r\n                    view.destroy();//there is some issue with the cloned element if we don't destroy the view\r\n                    return view;\r\n                },\r\n                taskListItem: function (properties, anchorViewModel, template) {\r\n                    $.extend(true, properties, node);\r\n                    //build the anchor and bind viewModel to it\r\n                    var builtAnchor = _.template(template);\r\n                    var anchorElm = new kendo.View(builtAnchor(properties), {\r\n                        wrap: false, model: anchorViewModel\r\n                    });\r\n                    //send anchor element back to caller (appended in the callback)\r\n                    callback(anchorElm.render());\r\n                    return anchorElm;\r\n                }\r\n            }\r\n            /* initialization code*/\r\n            function initTask() {\r\n                //build and render window\r\n                var modalView = buildAndRender.windowEle();\r\n                //save orig values for defined form\r\n                if (!isBulkEdit) {\r\n                    getOriginalFormValues();\r\n                }\r\n                //get the view models\r\n                var formTaskViewModel = getTaskViewModel(modalView);\r\n\r\n                if (isBulkEdit) {\r\n                    setAdditionBulkTaskProperties(formTaskViewModel);\r\n                    buildAndRender.taskListItem({ onClick: \"analystByGroup\", toolTipMessage: localizationHelper.localize('MustSelectSameType') }, formTaskViewModel, drawerTaskTemplate);\r\n                    /*subscribe to events*/\r\n                    if (!app.isMobile()) {\r\n                        //called on grid row clicks\r\n                        app.events.subscribe(\"gridChange\", function(event, grid) {\r\n                            formTaskViewModel.onTargetControlChange(grid);\r\n                            formTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                        });\r\n\r\n                        //for initial grid load listen to this event so we can set persisted state information\r\n                        app.events.subscribe(\"gridBound\", function(event, grid) {\r\n                            formTaskViewModel.onTargetControlChange(grid);\r\n                            formTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                        });\r\n                    } else {\r\n                        //called on mobile listview checkbox selection\r\n                        app.events.subscribe(\"mobileWiListSelectionChange\", function (event, listView) {\r\n                            if (!_.isUndefined(listView)) {\r\n                                formTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                                formTaskViewModel.targetControlId = listView.controlId;\r\n                            }\r\n                        });\r\n                        app.events.subscribe(\"mobileWiListInit\", function (event, listView) {\r\n                            if (!_.isUndefined(listView)) {\r\n                                formTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                                formTaskViewModel.targetControlId = listView.controlId;\r\n                            }\r\n                        });\r\n                    }\r\n                    /*END subscribe to events*/\r\n\r\n\r\n                } else {\r\n                    //build and render the link\r\n                    buildAndRender.taskListItem({ Target: \"analystByGroup\" }, formTaskViewModel, anchorTemplate);\r\n                }\r\n\r\n            };\r\n\r\n            /* END initialization code*/\r\n\r\n            //do it\r\n            initTask();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/popups/notificationPopup/view.html',[],function () { return '<div class=\"popupNotification\"></div>';});\n\n","/**\r\nAssign To Me\r\n**/\r\n\r\ndefine('forms/tasks/assignToMe/controller',['require','text!forms/tasks/anchor/view.html','text!forms/popups/notificationPopup/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var notificationTpl = require(\"text!forms/popups/notificationPopup/view.html\");\r\n\r\n    var definition = {\r\n        notificationTemplate: notificationTpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(notificationTpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var viewModel = kendo.observable({\r\n                displayName: node.Configs.displayName,\r\n                baseId: node.Configs.baseId,\r\n                target: node.Configs.target,\r\n                assignToMe: function () {\r\n                    //set AssingedWorkitem to current user\r\n                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", this.baseId);\r\n                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", this.displayName);\r\n                    \r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.AssignedToMeNotificationMessage, \"This workitem is assigned to {0}\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"assignToMe\"\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/changeStatus/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"statusPicker\" />\\r\\n            <div id=\"resolutionPicker\" data-bind=\"visible: showResolution\" />\\r\\n            <div id=\"resolutionDescription\" data-bind=\"visible: showResolution\" />\\r\\n            <div id=\"comment\" data-bind=\"visible: showComment\" />\\r\\n            <div id=\"autoResolve\" data-bind=\"visible: showAutoResolve\" />\\r\\n            <div id=\"letAnalystDecide\" data-bind=\"visible: letAnalystDecide\" />\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/tasks/changeStatus/view.drawer.html',[],function () { return '<div class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <!-- status picker for IR or SR statuses -->\\r\\n            <div class=\"form-group\">\\r\\n                <label class=\"control-label\" data-bind=\"localize: Status\">\\r\\n                </label>\\r\\n                <div class=\"form-control form-control-picker input-sm\"\\r\\n                     data-role=\"Status\"\\r\\n                     data-url=\"/api/V3/Enum/GetList\"\\r\\n                     data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                     data-disabled=\"false\"\\r\\n                     data-bind=\"ciresonDropDownTree: wiStatusTypeId, value: newStatusObj, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n            </div>\\r\\n            <!-- resolution category picker for IR -->\\r\\n            <div data-bind=\"visible: irStatusResolved\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: ResolutionCategory\"></span> (<span data-bind=\"localize: Required\"></span>)\\r\\n                    </label>\\r\\n                    <div class=\"form-control form-control-picker input-sm\"\\r\\n                         data-role=\"Resolution\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-disabled=\"false\"\\r\\n                         data-bind=\"ciresonDropDownTree: resolutionResultEnumId, value: newResolutionId, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n\\r\\n                </div>\\r\\n                <!-- resolution description for IR -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\" data-bind=\"localize: ResolutionDescription\">\\r\\n                    </label>\\r\\n                    <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                              data-bind=\"value: resolutionDescription\" maxlength=\"4000\"></textarea>\\r\\n                </div>\\r\\n\\r\\n                <!-- resolve child incidents: let analyst decide option-->\\r\\n                <div class=\"form-group\" data-bind=\"visible: irResolveChildOption\">\\r\\n                    <div class=\"checkbox  checkbox-inline \">\\r\\n                        <input type=\"checkbox\" name=\"resolveChildIncident\" data-bind=\"checked: resolveChildIncident\">\\r\\n                        <label class=\"control-label\" for=\"resolveChildIncident\">\\r\\n                            <span data-bind=\"localize: ResolveChildIncidentMessage\" />\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div data-bind=\"visible: srStatusCompleted\">\\r\\n                <!-- SR Implementation Results -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: ImplementationResults\"></span>\\r\\n                    </label>\\r\\n                    <div class=\"form-control form-control-picker input-sm\"\\r\\n                         data-role=\"Resolution\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-disabled=\"false\"\\r\\n                         data-bind=\"ciresonDropDownTree: resolutionResultEnumId, value: newResultId, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n\\r\\n                </div>\\r\\n                <!-- SR Implementation Notes -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: Implementationnotes\"></span> (<span data-bind=\"localize: Required\"></span>)\\r\\n                    </label>\\r\\n                    <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                              data-bind=\"value: resultNote\" maxlength=\"4000\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- comment for SR in \\'Cancelled\\' status -->\\r\\n            <div class=\"form-group\" data-bind=\"visible: srStatusCancelled\">\\r\\n                <label class=\"control-label\" data-bind=\"localize: Comment\">\\r\\n                </label>\\r\\n                <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                          data-bind=\"value: resultComment\" maxlength=\"4000\"></textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\" class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled,\\r\\n                           events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\" class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/fields/longstring/view.html',[],function () { return '<div class=\"form-group <%= visible %>\" style=\"\">\\r\\n\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <textarea name=\"<%= PropertyName %>\"\\r\\n              class=\"k-textbox form-control input-sm\"\\r\\n              rows=\"<%= Rows %>\"\\r\\n              data-bind=\"value: <%= PropertyName %><% if ( LimitLength ){ %>, events : { blur: view.longStringController.CheckLength }<% } %>\"\\r\\n        <% if ( LimitLength ){ %>\\r\\n        maxlength=\"<%= MaxLength %>\"\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Disabled ){ %>\\r\\n        readonly\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    </textarea>\\r\\n    <% if ( LimitLength ){ %>\\r\\n    <p class=\"help-block validation-summary-errors\" style=\"display: none;\"><%= localization.MaxLengthError.replace(\"{0}\", MaxLength) %></p>\\r\\n    <% } %>\\r\\n</div>\\r\\n<script>\\r\\n    $(\\'textarea[name=ResolutionDescription]\\').removeClass(\\'form-control\\');\\r\\n</script>\\r\\n';});\n\n","/**\r\nLONGSTRING\r\n**/\r\n\r\ndefine('forms/fields/longstring/controller',['require','text!forms/fields/longstring/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/longstring/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.longStringController = {\r\n                CheckLength: function checkLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n            vm.view.buildLongStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength,\r\n                    Rows: 10,\r\n                    visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n                };\r\n                $.extend(true, properties, node);\r\n                //console.log(properties);\r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildLongStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\r\n\n","\ndefine('text!forms/fields/boolean/view.html',[],function () { return '<div class=\"form-group <%= visible %>\">\\r\\n    <% if ( !Inline ){ %>\\r\\n    <label class=\"control-label\" data-localize=\"<%= PropertyDisplayName %>\"><span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span></label>\\r\\n    <% } %>\\r\\n\\r\\n    <div class=\"checkbox <% if ( Inline ){ %> checkbox-inline <% } else { %> checkbox-block <% } %>\">\\r\\n        <input type=\"checkbox\"\\r\\n               name=\"<%= PropertyName %>\"\\r\\n               id=\"<%= PropertyName %>\"\\r\\n               data-bind=\"checked: <%= PropertyName %>\"<% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        />\\r\\n\\r\\n\\r\\n        <label class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n            <% if ( Inline ){ %>\\r\\n            <span data-localize=\"<%= PropertyDisplayName %>\"></span>\\r\\n            <% } %>\\r\\n        </label>\\r\\n\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nBOOLEAN\r\n**/\r\n\r\ndefine('forms/fields/boolean/controller',['require','text!forms/fields/boolean/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/boolean/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Inline: node.Inline || false,\r\n                visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n        };\r\n            \r\n            \r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/changeStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/changeStatus/view.html','text!forms/tasks/changeStatus/view.drawer.html','forms/fields/enum/controller','forms/fields/longstring/controller','forms/fields/boolean/controller','text!forms/tasks/drawerTask/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchorTemplate = require(\"text!forms/tasks/anchor/view.html\");\r\n    var changeStatusTemplate = require(\"text!forms/tasks/changeStatus/view.html\");\r\n    var changeStatusDrawerTemplate = require(\"text!forms/tasks/changeStatus/view.drawer.html\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n    var txtAreaControl = require(\"forms/fields/longstring/controller\");\r\n    var checkBoxControl = require(\"forms/fields/boolean/controller\");\r\n    var drawerTaskTemplate = require(\"text!forms/tasks/drawerTask/view.html\");\r\n\r\n    var definition = {\r\n        template: changeStatusTemplate,\r\n        build: function (vm, node, callback) {\r\n            /*\r\n             * Change mustSelectLeafNode and/or showEnumPath to modify\r\n             * bulk status change enum picker behavior. \r\n             */\r\n            var mustSelectLeafNode = false;\r\n            var showEnumPath = false;\r\n\r\n            //for problem's autoresolve \r\n            if (vm.type == \"Problem\" && _.isUndefined(vm.viewModel.IsAutoResolve)) {\r\n                vm.viewModel.set(\"IsAutoResolve\", vm.viewModel.AutoResolve);\r\n            }\r\n\r\n            /* variables */\r\n            var resolveChildIncidentSettings;\r\n            if (vm.type != \"BulkEdit\") {\r\n                //used for cancel click event on form task\r\n                var originalVm = {\r\n                    Status: _.clone(vm.viewModel.Status),\r\n                    ResolutionCategory: !_.isUndefined(vm.viewModel.ResolutionCategory) ? _.clone(vm.viewModel.ResolutionCategory) : null,\r\n                    ResolutionDescription: _.clone(vm.viewModel.ResolutionDescription),\r\n                    ChildWorkItem: _.clone(vm.viewModel.ChildWorkItem),\r\n                    Notes: _.clone(vm.viewModel.Notes),\r\n                    ImplementationResults: !_.isUndefined(vm.viewModel.ImplementationResults) ? _.clone(vm.viewModel.ImplementationResults) : null,\r\n                    RelatesToWorkItem: _.clone(vm.viewModel.RelatesToWorkItem),\r\n                    Resolution: !_.isUndefined(vm.viewModel.Resolution) ? _.clone(vm.viewModel.Resolution) : null,\r\n                    AutoResolve: !_.isUndefined(vm.viewModel.AutoResolve) ? _.clone(vm.viewModel.AutoResolve) : false,\r\n                }\r\n            }\r\n            var workItemStatuses = app.constants.workItemStatuses;\r\n            //map all the status constants to shorter local vars. used in getFormTaskViewModel() and getFormTaskChangeRules()\r\n            var incidentResolved = workItemStatuses.Incident.Resolved;\r\n            var incidentActive = workItemStatuses.Incident.Active;\r\n            var incidentClosed = workItemStatuses.Incident.Closed;\r\n            var incidentActivePending = workItemStatuses.Incident.Pending;\r\n            var serviceRequestCancelled = workItemStatuses.ServiceRequest.Cancelled;\r\n            var serviceRequestCompleted = workItemStatuses.ServiceRequest.Completed;\r\n            var serviceRequestSubmitted = workItemStatuses.ServiceRequest.Submitted;\r\n            var serviceRequestInProgress = workItemStatuses.ServiceRequest.InProgress;\r\n            var serviceRequestOnHold = workItemStatuses.ServiceRequest.OnHold;\r\n            var serviceRequestFailed = workItemStatuses.ServiceRequest.Failed;\r\n            var serviceRequestClosed = workItemStatuses.ServiceRequest.Closed;\r\n            var changeRequestFailed = workItemStatuses.ChangeRequest.Failed;\r\n            var changeRequestClosed = workItemStatuses.ChangeRequest.Closed;\r\n            var changeRequestInProgress = workItemStatuses.ChangeRequest.InProgress;\r\n            var changeRequestOnHold = workItemStatuses.ChangeRequest.OnHold;\r\n            var changeRequestCancelled = workItemStatuses.ChangeRequest.Cancelled;\r\n            var changeRequestSubmitted = workItemStatuses.ChangeRequest.Submitted;\r\n            var changeRequestCompleted = workItemStatuses.ChangeRequest.Completed;\r\n            var problemResolved = workItemStatuses.Problem.Resolved;\r\n            var problemClosed = workItemStatuses.Problem.Closed;\r\n            var releaseRecordClosed = workItemStatuses.ReleaseRecord.Closed;\r\n            var releaseRecordCancelled = workItemStatuses.ReleaseRecord.Cancelled;\r\n            var releaseRecordCompleted = workItemStatuses.ReleaseRecord.Completed;\r\n            var releaseRecordFailed = workItemStatuses.ReleaseRecord.Failed;\r\n            var releaseRecordEditing = workItemStatuses.ReleaseRecord.Editing;\r\n            var releaseRecordOnHold = workItemStatuses.ReleaseRecord.OnHold;\r\n            var releaseRecordInProgress = workItemStatuses.ReleaseRecord.InProgress;\r\n            /* END variables */\r\n\r\n\r\n            /* functions */\r\n            //main viewModel that holds ALL THE THINGS\r\n            var getFormTaskViewModel = function (modalEle) {\r\n                return kendo.observable({\r\n                    //'changeStatus' function is bound to anchor click event via data-bind=\"click: blahblah\"\r\n                    changeStatus: function () {\r\n                        var modalWindowEle = modalEle.element.clone(); //we have the element in memory so no need use a selector\r\n\r\n                        var modalWindowControl = modalWindowEle.kendoCiresonWindow({\r\n                            title: localization.ChangeStatusTask,\r\n                            width: 600,\r\n                            height: 480,\r\n                            actions: [],\r\n                            //activate trigger when window open animation is complete.\r\n                            activate: function () {\r\n                                var selectedWiType = modalWindowViewModel.type;\r\n                                var currentStatusId = vm.viewModel.Status.Id;\r\n                                onModalActivate(selectedWiType, currentStatusId, statusTreeViewControl, statusDropDownControl, modalWindowViewModel.enumId);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //this view Model is bound to the window element\r\n                        var modalWindowViewModel = kendo.observable({\r\n                            enumId: node.Configs.statusEnumId,\r\n                            resolutionCategoryEnumId: node.Configs.resolutionCategoryEnumId,\r\n                            type: node.Configs.type,\r\n                            resolveChildSettings: null,\r\n                            letAnalystDecide: false,\r\n                            workItemModel: vm.viewModel,\r\n                            okEnabled: false,\r\n                            requireResolution: false,\r\n                            resolveChildIncident: true,\r\n                            okClick: function () {\r\n                                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                if (_.isString(vm.viewModel.Status.Name) && vm.viewModel.Status.Name.length < 1) {\r\n                                    vm.viewModel.set(\"Status\", { Id: originalVm.Status.Id, Name: originalVm.Status.Name });\r\n                                } else if (this.requireResolution && (!_.isUndefined(vm.viewModel.ResolutionCategory) && _.isNull(vm.viewModel.ResolutionCategory.Id))) {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(localization.RequestCategoryRequiredError);\r\n                                } else if (this.requireResolution && _.isNull(vm.viewModel.Notes) && (vm.type == \"ServiceRequest\")) {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(localization.ImplementationNotesRequiredError);\r\n                                } else if (vm.viewModel.Status.Id === incidentResolved) { //resolved incident\r\n                                    //set resolved date\r\n                                    vm.viewModel.set(\"ResolvedDate\", new Date().toISOString());\r\n                                    var resDateEle = $(\"input[name='ResolvedDate']\");\r\n                                    if (resDateEle.attr('data-control') == 'datePicker') {\r\n                                        resDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (resDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        resDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //add to action log\r\n                                   if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordResolved(vm.viewModel.ResolutionDescription));\r\n                                    }\r\n                                    //set resolved by user \r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: session.user.Id };\r\n\r\n                                    //if incident is a parent, check if we need to resolve its child incidents\r\n                                    if (vm.viewModel.IsParent && (this.resolveChildSettings.ResolveChildIncident || (this.resolveChildSettings.ResolvedLetAnalystDecide && this.resolveChildIncident)))\r\n                                        resolveChildIncidents(this.resolveChildSettings);\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === incidentClosed || vm.viewModel.Status.Id === serviceRequestClosed || vm.viewModel.Status.Id === problemClosed) { //closed IR or closed SR\r\n                                    //set closed date\r\n                                    vm.viewModel.set(\"ClosedDate\", new Date().toISOString());\r\n                                    var closeDateEle = $(\"input[name='ClosedDate']\");\r\n                                    if (closeDateEle.attr('data-control') == 'datePicker') {\r\n                                        closeDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (closeDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        closeDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //set closed by user \r\n                                    switch (vm.viewModel.Status.Id) {\r\n                                        case problemClosed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            break;\r\n                                        case incidentClosed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordClosed());\r\n                                            break;\r\n                                        case serviceRequestClosed:\r\n                                            vm.viewModel.ClosedByUser = { BaseId: session.user.Id };\r\n                                            break;\r\n                                    }\r\n                                    \r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                }\r\n                                else if (vm.viewModel.Status.Id === incidentActive) { //activate incident\r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: null };\r\n                                    vm.viewModel.ResolutionCategory.set(\"Id\", null);\r\n                                    vm.viewModel.ResolutionCategory.set(\"Name\", \"\");\r\n                                    vm.viewModel.set(\"ResolutionDescription\", null);\r\n                                    vm.viewModel.set(\"ResolvedDate\", null);\r\n\r\n                                    //add to action log\r\n                                    var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                    if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordActivated());\r\n                                    }\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === serviceRequestCompleted) { //completed service request\r\n                                    //set completed date\r\n                                    vm.viewModel.set(\"CompletedDate\", new Date().toISOString());\r\n                                    var comDateEle = $(\"input[name='CompletedDate']\");\r\n                                    if (comDateEle.attr('data-control') == 'datePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (comDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === problemResolved) { //resolved problem\r\n                                    //set resolve date\r\n                                    vm.viewModel.set(\"ResolvedDate\", new Date().toISOString());\r\n                                    var comDateEle = $(\"input[name='ResolvedDate']\");\r\n                                    if (comDateEle.attr('data-control') == 'datePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (comDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //set resolved by user \r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: session.user.Id };\r\n\r\n                                    if (vm.viewModel.IsAutoResolve) {\r\n                                        resolveRelatedWorkItems();\r\n                                    }\r\n\r\n                                    vm.viewModel.set(\"AutoResolve\", vm.viewModel.IsAutoResolve);\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                //reset to original values\r\n                                vm.viewModel.set(\"Status\", { Id: originalVm.Status.Id, Name: originalVm.Status.Name });\r\n                                if (node.Configs.type === \"Incident\") {\r\n                                    vm.viewModel.set(\"ResolutionCategory\", { Id: originalVm.ResolutionCategory.Id, Name: originalVm.ResolutionCategory.Name });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", originalVm.ResolutionDescription);\r\n                                    vm.viewModel.set(\"ChildWorkItem\", originalVm.ChildWorkItem);\r\n                                }\r\n                                if (node.Configs.type === \"ServiceRequest\") {\r\n                                    vm.viewModel.set(\"ImplementationResults\", { Id: originalVm.ImplementationResults.Id, Name: originalVm.ImplementationResults.Name });\r\n                                    vm.viewModel.set(\"Notes\", originalVm.Notes);\r\n                                }\r\n                                if (node.Configs.type === \"Problem\") {\r\n                                    vm.viewModel.set(\"Resolution\", { Id: originalVm.Resolution.Id, Name: originalVm.Resolution.Name });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", originalVm.ResolutionDescription);\r\n                                    vm.viewModel.set(\"RelatedWorkItems\", originalVm.RelatesToWorkItem);\r\n                                    vm.viewModel.set(\"AutoResolve\", originalVm.AutoResolve);\r\n                                    vm.viewModel.set(\"IsAutoResolve\", originalVm.AutoResolve);\r\n                                }\r\n                                modalWindowControl.close();\r\n                            },\r\n                            showComment: vm.viewModel.Status.Id == serviceRequestCancelled,\r\n                            showResolution: (vm.viewModel.Status.Id == incidentResolved || vm.viewModel.Status.Id == serviceRequestCompleted || vm.viewModel.Status.Id == problemResolved),\r\n                            showAutoResolve: (vm.viewModel.Status.Id == problemResolved)\r\n                        });\r\n\r\n                        //bind window element to window viewModel\r\n                        kendo.bind(modalWindowEle, modalWindowViewModel);\r\n\r\n                        //create status enumPicker\r\n                        createStatusPicker(modalWindowViewModel, modalWindowEle);\r\n                        var statusDropDownControl = modalWindowEle.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                        var statusTreeViewControl = modalWindowEle.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n\r\n                        //bind status picker changes events\r\n                        statusDropDownControl.bind(\"change\", function (e) {\r\n                            //make sure button is disabled again\r\n                            vm.viewModel.set(\"okEnabled\", false);\r\n                            enableResolutionSettings(vm.viewModel.Status.Id, modalWindowViewModel);\r\n                        });\r\n                        statusTreeViewControl.bind(\"change\", function (e) {\r\n                            //make sure button is disabled again\r\n                            vm.viewModel.set(\"okEnabled\", false);\r\n                            enableResolutionSettings(vm.viewModel.Status.Id, modalWindowViewModel);\r\n                        });\r\n\r\n\r\n                        /*\r\n                         * conditionally added fields\r\n                         */\r\n\r\n                        if (modalWindowViewModel.type === \"Incident\") {\r\n                            createIncidentResolutionFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        if (modalWindowViewModel.type === \"ServiceRequest\") {\r\n                            createResultFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        if (modalWindowViewModel.type === \"Problem\") {\r\n                            createProblemResolutionFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        /*\r\n                         * END conditionally added fields\r\n                         */\r\n\r\n\r\n                        modalWindowEle.removeClass('hide');\r\n                        modalWindowEle.show();\r\n                        modalWindowControl.open();\r\n                    }\r\n                });\r\n            };\r\n\r\n            var getDrawerTaskViewModel = function (modalView) {\r\n                //drawerTaskVm is the viewModel that sits between the modal window and the page controls.\r\n                var drawerTaskVm = kendo.observable({\r\n                    currentSelection: [],\r\n                    currentSelectionOfParents: [],\r\n                    containsParents: false,\r\n                    selectedWorkItem: {\r\n                        type: '',\r\n                        trimmedType: '',\r\n                        projectionId: '',\r\n                        currentStatusId: '',\r\n                        currentStatusName: '',\r\n                        statusTypeId: '',\r\n                        resolutionResultEnumId: ''\r\n                    },\r\n                    openModal: function () {\r\n                        if (!this.isEnabled) {\r\n                            return;\r\n                        }\r\n                        var taskVm = this;\r\n                        var modalEle = modalView.element.clone();\r\n                        var modalControl = modalEle.kendoCiresonWindow({\r\n                            title: localization.ChangeStatusTask,\r\n                            actions: [],\r\n                            activate: function () {\r\n                                var selectedWiType = taskVm.selectedWorkItem.trimmedType;\r\n                                var currentStatusId = taskVm.selectedWorkItem.currentStatusId;\r\n                                onModalActivate(selectedWiType, currentStatusId, statusTreeViewControl, statusDropDownControl, taskVm.selectedWorkItem.statusTypeId);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //viewModel for the kendo window control and form\r\n                        var modalViewModel = kendo.observable({\r\n                            selectedWorkItems: taskVm.currentSelection,\r\n                            //parent/child IR fields\r\n                            selectedParents: taskVm.currentSelectionOfParents,\r\n                            resolveChildSettings: null,\r\n                            resolveChildIncident: true,\r\n                            //edited form fields\r\n                            newStatusObj: {Id:null, Name:null},                //IR|SR work item status (enum, required)\r\n                            newResolutionId: '',            //IR 'Resolution' (enum, required)\r\n                            resolutionDescription: '',      //IR 'Resolution Description' (textarea)\r\n                            newResultId: '',                //SR Implementation Results (enum)\r\n                            resultNote: '',                 //SR 'Completed' status 'Implementation Notes' (textarea, required)\r\n                            resultComment: '',              //SR 'Cancelled' status 'Comment' (textarea)\r\n                            showPath: showEnumPath,\r\n                            leafNodeOnly: mustSelectLeafNode,\r\n                            //wiStatusTypeId is the enum id for IR or SR used to get there wi status, resolutionResultEnumId is the enum id for IR resolution or SR result\r\n                            wiStatusTypeId: taskVm.selectedWorkItem.statusTypeId,\r\n                            resolutionResultEnumId: taskVm.selectedWorkItem.resolutionResultEnumId,\r\n\r\n                            //toggles for fields required and visible\r\n                            irStatusResolved: false,\r\n                            srStatusCompleted: false,\r\n                            srStatusCancelled: false,\r\n                            irCategoryRequired: false,\r\n                            srNotesRequired: false,\r\n                            irResolveChildOption: false,\r\n\r\n                            //button events/logic\r\n                            okEnabled: false,\r\n                            okClick: function () {\r\n\r\n                                var windowViewModel = this;\r\n                                var isValid = bulkEditFormIsValid(windowViewModel, modalEle);\r\n                                if (isValid) {\r\n                                    //check if we need to handle child wi resolution\r\n                                    if (windowViewModel.irStatusResolved && (resolveChildIncidentSettings.ResolveChildIncident || (windowViewModel.irResolveChildOption && windowViewModel.resolveChildIncident)) && taskVm.containsParents) {\r\n                                        //handles post for IR-resolved parents and children WIs\r\n                                        postBulkEditChangesWithChildren(taskVm, windowViewModel, modalControl);\r\n                                    } else {\r\n                                        //handles post for everything else\r\n                                        var data = {\r\n                                            ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                            UpdateServiceManagement: true,\r\n                                            ItemIds: _.pluck(windowViewModel.selectedWorkItems, 'BaseId'),\r\n                                            EditedFields: getDrawerTaskEditedFields(windowViewModel)\r\n                                        }\r\n\r\n                                        postBulkEditChanges(data, taskVm, modalControl);\r\n                                    }\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                modalControl.close();\r\n                            }\r\n                        });\r\n\r\n                        kendo.bind(modalEle, modalViewModel);\r\n\r\n                        //create status enumPicker && bind change events\r\n                        var statusDropDownControl = modalEle.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                        var statusTreeViewControl = modalEle.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n                        function handleStatusControlChange() {\r\n                            var item = modalViewModel.get(\"newStatusObj\");\r\n                            if (item) {\r\n                                toggleAdditionalFields(item.Id, taskVm.selectedWorkItem.currentStatusId, modalViewModel);\r\n                            }\r\n                        }\r\n                        statusDropDownControl.bind(\"change\", function (e) {\r\n                             handleStatusControlChange();\r\n                        });\r\n                        statusTreeViewControl.bind(\"change\", function (e) {\r\n                            handleStatusControlChange();\r\n                        });\r\n                        \r\n                        //set vis/require depending on the current status \r\n                        if (taskVm.selectedWorkItem.trimmedType === \"Incident\" && taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.Incident.Resolved) {\r\n                            modalViewModel.set('irStatusResolved', true);\r\n                            modalViewModel.set('irCategoryRequired', true);\r\n                        }\r\n                        if (taskVm.selectedWorkItem.trimmedType === \"ServiceRequest\") {\r\n                            if (taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.ServiceRequest.Completed) {\r\n                                modalViewModel.set('srStatusCompleted', true);\r\n                                modalViewModel.set('srStatusCancelled', false);\r\n                            } else if (taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.ServiceRequest.Cancelled) {\r\n                                modalViewModel.set('srStatusCancelled', true);\r\n                                modalViewModel.set('srStatusCompleted', false);\r\n                            }\r\n                        }\r\n\r\n                        //show the window\r\n                        modalEle.removeClass('hide');\r\n                        modalEle.show();\r\n                        modalControl.open();\r\n                    },\r\n                    isEnabled: false,\r\n                    showTooltip: true,\r\n                    setEnabled: function (enabled) {\r\n                        this.set('isEnabled', enabled);\r\n                        this.set('showTooltip', !enabled);\r\n                    },\r\n                    targetControlId: '',\r\n                    onTargetControlChange: function (grid) {\r\n                        //empty out parentitems and set to false, readded below if applicable\r\n                        drawerTaskVm.set('currentSelectionOfParents', []);\r\n                        drawerTaskVm.set('containsParents', false);\r\n\r\n                        var selectedDataItems = [];\r\n                        if (app.isMobile()) {\r\n                            //grid is selected items array when called from mobile\r\n                            selectedDataItems = grid;\r\n                        } else {\r\n                            selectedDataItems = grid.select().map(function (index, item) {\r\n                                return grid.dataItem($(item));\r\n                            }).toArray();\r\n                        }\r\n\r\n                        //we only update 10 items at a time\r\n                        if (selectedDataItems.length > 10) {\r\n                            this.onExceedSelectionCount();\r\n                        }\r\n\r\n                        drawerTaskVm.set('currentSelection', selectedDataItems);\r\n\r\n                        //if nothing is selected disabled the item\r\n                        if (selectedDataItems.length <= 0 || selectedDataItems.length > 10) {\r\n                            drawerTaskVm.setEnabled(false);\r\n                        } else {\r\n                            var selectedTypes = _.pluck(selectedDataItems, \"WorkItemType\");\r\n                            var selectedStatusIds = _.pluck(selectedDataItems, \"StatusId\");\r\n                            var selectedStatusNames = _.pluck(selectedDataItems, \"Status\");\r\n\r\n                            //return false if multiple selected, otherwise returns string values\r\n                            var singleSelectedType = _.reduce(selectedTypes, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            drawerTaskVm.set(\"selectedWorkItem.type\", singleSelectedType);\r\n\r\n                            //return false if multiple selected, otherwise returns string values\r\n                            var singleSelectedStatusId = _.reduce(selectedStatusIds, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            var singleSelectedStatusName = _.reduce(selectedStatusNames, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            drawerTaskVm.set(\"selectedWorkItem.currentStatusId\", singleSelectedStatusId);\r\n                            drawerTaskVm.set(\"selectedWorkItem.currentStatusName\", singleSelectedStatusName);\r\n\r\n\r\n                            if (singleSelectedStatusId && singleSelectedType) {\r\n                                switch (singleSelectedType) {\r\n                                    case \"System.WorkItem.ServiceRequest\":\r\n                                        drawerTaskVm.setTrimmedWiType();\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemServiceRequestViewModel);\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', app.constants.workItemStatuses.ServiceRequest.Id);\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', app.constants.enumPickerIds.ServiceRequestImplementationResults);\r\n\r\n                                        //allow SR change status on valid AP license only\r\n                                        if (session.consoleSetting.AnalystPortalLicense.IsValid) {\r\n                                            //if SR is closed do not allow status change from here (TFS 3560)\r\n                                            if (singleSelectedStatusName === \"Closed\") {\r\n                                                drawerTaskVm.setEnabled(false);\r\n                                            } else {\r\n                                                drawerTaskVm.setEnabled(true);\r\n                                            }\r\n                                        } else {\r\n                                            drawerTaskVm.setEnabled(false);\r\n                                        }\r\n\r\n                                        break;\r\n                                    case \"System.WorkItem.Incident\":\r\n                                        var parentItems = [];\r\n                                        _.each(selectedDataItems, function (workItem) {\r\n                                            if (workItem.IsParent) {\r\n                                                drawerTaskVm.set('containsParents', true);\r\n                                                parentItems.push(workItem);\r\n                                            }\r\n                                        });\r\n                                        drawerTaskVm.set('currentSelectionOfParents', parentItems);\r\n\r\n                                        drawerTaskVm.setTrimmedWiType();\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemIncidentViewModel);\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', app.constants.workItemStatuses.Incident.Id);\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', app.constants.enumPickerIds.IncidentResolution);\r\n                                        drawerTaskVm.setEnabled(true);\r\n                                        break;\r\n                                    default:\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', '');\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', '');\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', '');\r\n                                        // not a supported bulk edit Type, disable the edit button\r\n                                        drawerTaskVm.setEnabled(false);\r\n                                }\r\n                            } else {\r\n                                //not same type && status\r\n                                drawerTaskVm.setEnabled(false);\r\n                            }\r\n                        }\r\n                    },\r\n                    setTrimmedWiType: function () {\r\n                        this.set('selectedWorkItem.trimmedType', this.selectedWorkItem.type.split(/[\\s.]+/).pop());\r\n                    },\r\n                    onExceedSelectionCount: function() {\r\n                        kendo.ui.ExtAlertDialog.show({\r\n                            title: localizationHelper.localize('Warning'),\r\n                            message: localizationHelper.localize('BulkEditExceedMessage')\r\n                        });\r\n                    }\r\n                });\r\n\r\n                return drawerTaskVm;\r\n            };\r\n\r\n            //executes when modal dialog is opening\r\n            var onModalActivate = function (selectedWiType, currentStatusId, treeControl, dropDownControl, statusEnumId) {\r\n                //determine allowed status changes based on current type and status\r\n                var changeRules = getFormTaskChangeRules();\r\n                var changeRulesFilter = changeRules[selectedWiType][currentStatusId];\r\n                \r\n                //since Incident can have custom enums we need to check here if no rules were set then its not resolved\r\n                if (selectedWiType == \"Incident\" && _.isUndefined(changeRulesFilter)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"neq\", value: app.constants.workItemStatuses.Incident.Closed };\r\n                }\r\n\r\n                //apply allowed status filtering\r\n                treeControl.dataSource.options.serverFiltering = false;\r\n                treeControl.dataSource.filter(changeRulesFilter);\r\n\r\n                //reassign dropdown datasource with filtered data so that users will not be able to access restricted status by typing\r\n                $.get(\"/api/V3/Enum/GetFlatList/\", { id: statusEnumId, itemFilter: \"\" }, function (data) {\r\n                    var comboDataSource = new kendo.data.DataSource();\r\n                    comboDataSource.data(data);\r\n                    comboDataSource.filter(changeRulesFilter);\r\n                    if (comboDataSource.view().length > 0) {\r\n                        dropDownControl.setDataSource(comboDataSource.view());\r\n                    }\r\n                });\r\n                \r\n                resolveChildIncidentSettings = getResolveChildIncidentSettings();\r\n            };\r\n\r\n            //template .build() and view.renderererers.\r\n            var buildAndRender = {\r\n                windowEle: function (windowTemplate) {\r\n                    //build the template for the window\r\n                    var builtModal = _.template(windowTemplate);\r\n                    var ele = new kendo.View(builtModal(), { wrap: false });\r\n                    //send hidden window back to caller (appended in the callback)\r\n                    callback(ele.render());\r\n                    return ele;\r\n                },\r\n                taskListItem: function (properties, anchorViewModel, template) {\r\n                    $.extend(true, properties, node);\r\n                    //build the anchor and bind viewModel to it\r\n                    var builtAnchor = _.template(template);\r\n                    var anchorElm = new kendo.View(builtAnchor(properties), {\r\n                        wrap: false, model: anchorViewModel\r\n                    });\r\n                    //send anchor element back to caller (appended in the callback)\r\n                    callback(anchorElm.render());\r\n                    return anchorElm;\r\n                }\r\n            }\r\n            //creators of controls in the window\r\n            var createProblemResolutionFields = function (modalWindowViewModel, modalWindowEle) {\r\n                var resolutionProperties = {\r\n                    PropertyName: \"Resolution\",\r\n                    PropertyDisplayName: \"Resolution\",\r\n                    Required: false,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), resolutionProperties, vm.viewModel);\r\n\r\n                var implementationNotesProperties = {\r\n                    PropertyName: \"ResolutionDescription\",\r\n                    PropertyDisplayName: \"ResolutionDescription\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), implementationNotesProperties, vm.viewModel);\r\n\r\n                var autoResolveProperties = {\r\n                    PropertyName: \"IsAutoResolve\",\r\n                    PropertyDisplayName: \"ProblemAutoResolveIncident\",\r\n                    Inline: true,\r\n                    Disabled: false\r\n                };\r\n                buildCheckbox(modalWindowEle.find(\"#autoResolve\"), autoResolveProperties, vm.viewModel);\r\n            };\r\n            var createResultFields = function (modalWindowViewModel, modalWindowEle) {\r\n                var implementationResultProperties = {\r\n                    PropertyName: \"ImplementationResults\",\r\n                    PropertyDisplayName: \"ImplementationResults\",\r\n                    Required: false,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), implementationResultProperties, vm.viewModel);\r\n\r\n                var implementationNotesProperties = {\r\n                    PropertyName: \"Notes\",\r\n                    PropertyDisplayName: \"Implementationnotes\",\r\n                    Required: true,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), implementationNotesProperties, vm.viewModel);\r\n\r\n                var commentProperties = {\r\n                    PropertyName: \"Notes\",\r\n                    PropertyDisplayName: \"Comment\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#comment\"), commentProperties, vm.viewModel);\r\n            };\r\n            var createIncidentResolutionFields = function (modalWindowViewModel, modalWindowEle) {\r\n                //resolution picker\r\n                var resolutionProperties = {\r\n                    PropertyName: \"ResolutionCategory\",\r\n                    PropertyDisplayName: \"ResolutionCategory\",\r\n                    Required: true,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), resolutionProperties, vm.viewModel);\r\n\r\n                //resolution description\r\n                var resolutionDescriptionProperties = {\r\n                    PropertyName: \"ResolutionDescription\",\r\n                    PropertyDisplayName: \"ResolutionDescription\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), resolutionDescriptionProperties, vm.viewModel);\r\n\r\n                var letAnalystDecideProperties = {\r\n                    PropertyName: \"resolveChildIncident\",\r\n                    PropertyDisplayName: \"ResolveChildIncidentMessage\",\r\n                    Inline: true,\r\n                    Disabled: false\r\n                };\r\n                buildCheckbox(modalWindowEle.find(\"#letAnalystDecide\"), letAnalystDecideProperties, vm.viewModel);\r\n            };\r\n            var createStatusPicker = function (modalWindowViewModel, modalWindowEle) {\r\n                var statusProperties = {\r\n                    PropertyName: \"Status\",\r\n                    PropertyDisplayName: \"Status\",\r\n                    EnumId: modalWindowViewModel.enumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#statusPicker'), statusProperties, vm.viewModel);\r\n            };\r\n            //form field helper\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n            var buildTextArea = function (container, props, vmModel) {\r\n                txtAreaControl.build(vmModel, props, function (cbTxtAreaControl) {\r\n                    container.html(cbTxtAreaControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n            var buildCheckbox = function (container, props, vmModel) {\r\n                checkBoxControl.build(vmModel, props, function (txtCheckboxControl) {\r\n                    container.html(txtCheckboxControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true, vm: vmModel, bind: true\r\n                    });\r\n                });\r\n            }\r\n            var getDrawerTaskChildEditedFields = function (viewModel, resolutionCategoryId) {\r\n                var json = [\r\n                    {\r\n                        PropertyName: \"Status\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: viewModel.get(\"newStatusObj\").Id\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolutionCategory\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: resolutionCategoryId\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolutionDescription\",\r\n                        PropertyType: \"string\",\r\n                        EditedValue: viewModel.get(\"resolutionDescription\")\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolvedDate\",\r\n                        PropertyType: \"date\",\r\n                        EditedValue: new Date().toISOString()\r\n                    },\r\n                    {\r\n                        //resolved by user \r\n                        PropertyName: \"RelatesToTroubleTicket\",\r\n                        PropertyType: \"singlecardinalityobject\",\r\n                        PropertyRelationshipId: \"f7d9b385-a84d-3884-7cde-e2c926d931a5\", //TroubleTicketResolvedByUserRelationshipString\r\n                        EditedValue: session.user.Id\r\n                    },\r\n                    {\r\n                        //action log for IR resolved.\r\n                        PropertyName: \"AppliesToTroubleTicket\",\r\n                        PropertyType: \"multiplecardinalityobject\",\r\n                        propertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //TroubleTicketHasActionLogId\r\n                        EditedValue: {\r\n                            ActionType: {\r\n                                Id: \"5ca2cfee-6740-1576-540B-ce17222840b8\",\r\n                                Name: \"Record Resolved\"\r\n                            },\r\n                            Description: viewModel.get(\"resolutionDescription\"),\r\n                            DescriptionDisplay: viewModel.get(\"resolutionDescription\"),\r\n                            EnteredBy: session.user.Name,\r\n                            EnteredDate: new Date().toISOString(),\r\n                            LastModified: new Date().toISOString(),\r\n                            Title: localization.RecordResolved,\r\n                            Image: app.config.iconPath + app.config.icons[\"Record Resolved\"]\r\n                        }\r\n                    }];\r\n\r\n                return json;\r\n            }\r\n            var getDrawerTaskEditedFields = function (viewModel) {\r\n                var json = [\r\n                    {\r\n                        PropertyName: \"Status\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: viewModel.get(\"newStatusObj\").Id\r\n                    }\r\n                ];\r\n                switch (viewModel.get(\"newStatusObj\").Id) {\r\n                    case app.constants.workItemStatuses.Incident.Closed:\r\n                        json.push({\r\n                            PropertyName: \"ClosedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                           //closed by user \r\n                           PropertyName: \"RelatesToTroubleTicket_\",\r\n                           PropertyType: \"singlecardinalityobject\",\r\n                           PropertyRelationshipId: \"76bc6c3b-a77b-2468-0a63-169d23dfcdf0\", //TroubleTicketClosedByUserRelationshipString\r\n                           EditedValue: session.user.Id\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Closed:\r\n                        json.push({\r\n                            PropertyName: \"ClosedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                            //closed by user \r\n                            PropertyName: \"ClosedByUser\",\r\n                            PropertyType: \"singlecardinalityobject\",\r\n                            PropertyRelationshipId: \"ba8180d3-5bf9-1bbd-ae87-145dd8fc520f\", //WorkItemClosedByUserRelationshipString\r\n                            EditedValue: session.user.Id\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.Incident.Resolved:\r\n                        json.push({\r\n                            PropertyName: \"ResolutionCategory\",\r\n                            PropertyType: \"enum\",\r\n                            EditedValue: viewModel.get(\"newResolutionId\").Id\r\n                        },\r\n                        {\r\n                            PropertyName: \"ResolutionDescription\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resolutionDescription\")\r\n                        },\r\n                        {\r\n                            PropertyName: \"ResolvedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                            //resolved by user \r\n                            PropertyName: \"RelatesToTroubleTicket\",\r\n                            PropertyType: \"singlecardinalityobject\",\r\n                            PropertyRelationshipId: \"f7d9b385-a84d-3884-7cde-e2c926d931a5\", //TroubleTicketResolvedByUserRelationshipString\r\n                            EditedValue: session.user.Id\r\n                        },\r\n                        {\r\n                            //action log for IR resolved.\r\n                            PropertyName: \"AppliesToTroubleTicket\",\r\n                            PropertyType: \"multiplecardinalityobject\",\r\n                            propertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //TroubleTicketHasActionLogId\r\n                            EditedValue: {\r\n                                ActionType: {\r\n                                    Id: \"5ca2cfee-6740-1576-540B-ce17222840b8\",\r\n                                    Name: \"Record Resolved\"\r\n                                },\r\n                                Description: viewModel.get(\"resolutionDescription\"),\r\n                                DescriptionDisplay: viewModel.get(\"resolutionDescription\"),\r\n                                EnteredBy: session.user.Name,\r\n                                EnteredDate: new Date().toISOString(),\r\n                                LastModified: new Date().toISOString(),\r\n                                Title: localization.RecordResolved,\r\n                                Image: app.config.iconPath + app.config.icons[\"Record Resolved\"]\r\n                            }\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Completed:\r\n\r\n                        json.push({\r\n                            PropertyName: \"Notes\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resultNote\")\r\n                        },\r\n                        {\r\n                            PropertyName: \"CompletedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        });\r\n\r\n                        if (!_.isUndefined(viewModel.get(\"newResultId\").Id)) {\r\n                            json.push({\r\n                                PropertyName: \"ImplementationResults\",\r\n                                PropertyType: \"enum\",\r\n                                EditedValue: viewModel.get(\"newResultId\").Id\r\n                            });\r\n                        }\r\n\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Cancelled:\r\n                        json.push({\r\n                            PropertyName: \"Notes\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resultComment\")\r\n                        });\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                return json;\r\n            }\r\n            //resolution funcs\r\n            var getResolveChildIncidentSettings = function () {\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    resolveChildIncidentSettings = data;\r\n                });\r\n            };\r\n            var toggleAdditionalFields = function (statusId, currentStatusId, vmWindow) {\r\n                \r\n                switch (statusId) {\r\n                    case incidentResolved:\r\n                        vmWindow.set(\"irStatusResolved\", true);\r\n                        vmWindow.set(\"irCategoryRequired\", true);\r\n                        vmWindow.set(\"irResolveChildOption\", vmWindow.selectedParents.length>0 && resolveChildIncidentSettings.ResolvedLetAnalystDecide);\r\n                        break;\r\n                    case serviceRequestCancelled:\r\n                        vmWindow.set(\"srStatusCancelled\", true);\r\n                        vmWindow.set(\"srStatusCompleted\", false);\r\n                        break;\r\n                    case serviceRequestCompleted:\r\n                        vmWindow.set(\"srStatusCompleted\", true);\r\n                        vmWindow.set(\"srNotesRequired\", true);\r\n                        vmWindow.set(\"srStatusCancelled\", false);\r\n                        break;\r\n                    default:\r\n                        vmWindow.set(\"irStatusResolved\", false);\r\n                        vmWindow.set(\"irCategoryRequired\", false);\r\n                        vmWindow.set(\"srStatusCancelled\", false);\r\n                        vmWindow.set(\"srStatusCompleted\", false);\r\n                        vmWindow.set(\"srNotesRequired\", false);\r\n                        break;\r\n                }\r\n\r\n                vmWindow.set(\"okEnabled\", true);\r\n\r\n            };\r\n            var enableResolutionSettings = function (statusId, vmWindow) {\r\n                switch (statusId) {\r\n                    case incidentResolved: // incident resolved (check for resolve child settings ans how resolution section)\r\n                        vmWindow.set(\"resolveChildSettings\", resolveChildIncidentSettings);\r\n                        vmWindow.set(\"letAnalystDecide\", (resolveChildIncidentSettings.ResolvedLetAnalystDecide && vm.viewModel.IsParent));\r\n                        vmWindow.set(\"requireResolution\", true);\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        break;\r\n                    case serviceRequestCancelled: //sr cancelled (show comment section)\r\n                        vmWindow.set(\"showComment\", true);\r\n                        break;\r\n                    case serviceRequestCompleted: //sr completed (show implementation section)\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        vmWindow.set(\"requireResolution\", true)\r\n                        break;\r\n                    case problemResolved: //problem resolved (show resolution and auto resolve option)\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        vmWindow.set(\"requireResolution\", true);\r\n                        vmWindow.set(\"showAutoResolve\", true);\r\n                        break;\r\n                    default:\r\n                        vmWindow.set(\"showComment\", false);\r\n                        vmWindow.set(\"showResolution\", false);\r\n                        vmWindow.set(\"requireResolution\", false);\r\n                        vmWindow.set(\"showAutoResolve\", false);\r\n                        vmWindow.set(\"letAnalystDecide\", false);\r\n                        break;\r\n                }\r\n\r\n                //make sure we have a new value\r\n                if (_.isString(vm.viewModel.Status.Name) && vm.viewModel.Status.Name.length > 0) {\r\n                    vmWindow.set(\"okEnabled\", true);\r\n                } else {\r\n                    vmWindow.set(\"okEnabled\", false); //turn off the button now\r\n                }\r\n            };\r\n            var resolveChildIncidents = function (resolveChildSettings) {\r\n                var resolutionCategoryId = resolveChildSettings.ChildIncidentResolutionCategorySameAsParent\r\n                                           ? vm.viewModel.ResolutionCategory.Id\r\n                                           : resolveChildSettings.ChildIncidentResolutionCategory.Id;\r\n\r\n                $.each(vm.viewModel.ChildWorkItem, function (i, item) {\r\n                    item.set(\"Status\", { Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name });\r\n                    item.set(\"ResolutionCategory\", { Id: resolutionCategoryId }); //TODO: I have some concearns here need to ask david -jk\r\n                    item.set(\"ResolutionDescription\", vm.viewModel.ResolutionDescription);\r\n                    item.set(\"ResolvedDate\", vm.viewModel.ResolvedDate);\r\n                });\r\n            };\r\n\r\n            var resolveRelatedWorkItems = function () {\r\n\r\n                $.each(vm.viewModel.RelatesToWorkItem, function (i, item) {\r\n                    item.set(\"Status\", { Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name });\r\n                    item.set(\"ResolutionDescription\", vm.viewModel.ResolutionDescription);\r\n                    item.set(\"ResolvedDate\", vm.viewModel.ResolvedDate);\r\n                });\r\n            };\r\n\r\n            //rules on what statuses are available based on current WI status\r\n            var getFormTaskChangeRules = function () {\r\n                //define change rules and states\r\n                var changeRules = new Array();\r\n\r\n                /*ServiceRequest*/\r\n                changeRules['ServiceRequest'] = new Array();\r\n\r\n                changeRules['ServiceRequest'][serviceRequestSubmitted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestSubmitted }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestInProgress] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestOnHold },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestInProgress }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                /*END ServiceRequest*/\r\n\r\n\r\n                /*Release Record*/\r\n                changeRules['ReleaseRecord'] = new Array();\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordInProgress] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordEditing] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCompleted }\r\n                    ]\r\n                };\r\n\r\n                /*END Release Record*/\r\n\r\n\r\n                /*Change Request*/\r\n                changeRules['ChangeRequest'] = new Array();\r\n\r\n                changeRules['ChangeRequest'][changeRequestSubmitted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestSubmitted }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestInProgress] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestOnHold },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestInProgress }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n                /*END Change Request*/\r\n\r\n                /*Incident*/\r\n                changeRules['Incident'] = new Array();\r\n\r\n                changeRules['Incident'][incidentActive] = {\r\n                    field: \"Id\",\r\n                    operator: \"neq\",\r\n                    value: incidentClosed\r\n                };\r\n\r\n                changeRules['Incident'][incidentActivePending] = {\r\n                    field: \"Id\",\r\n                    operator: \"neq\",\r\n                    value: incidentClosed\r\n                };\r\n\r\n                changeRules['Incident'][incidentResolved] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: incidentActive },\r\n                        { field: \"Id\", operator: \"eq\", value: incidentClosed }\r\n                    ]\r\n                };\r\n\r\n                /*END Incident*/\r\n\r\n                /*Problem*/\r\n                changeRules['Problem'] = new Array();\r\n                /*END Problem*/\r\n\r\n\r\n                return changeRules;\r\n            }\r\n            //bulk edit form funcs\r\n            var bulkEditFormIsValid = function (windowViewModel, modalEle) {\r\n                if (windowViewModel.irCategoryRequired\r\n                    && (_.isUndefined(windowViewModel.newResolutionId.Id)\r\n                        || windowViewModel.newResolutionId.Id.length <= 0)) {\r\n\r\n                    modalEle.find('#changeStatusErrorWin').html(localization.RequestCategoryRequiredError);\r\n                    return false;\r\n                } else if (windowViewModel.srNotesRequired && windowViewModel.resultNote.length <= 0) {\r\n                    modalEle.find('#changeStatusErrorWin').html(localization.ImplementationNotesRequiredError);\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            };\r\n\r\n            var postBulkEditChangesWithChildren = function (taskVm, windowVm, modalControl) {\r\n                var parentIds = _.pluck(taskVm.currentSelectionOfParents, 'BaseId'); \r\n                $.ajax({\r\n                    url: '/api/v3/workitem/GetChildWorkItems/',\r\n                    data: JSON.stringify(parentIds),\r\n                    dataType: 'json',\r\n                    contentType: 'application/json',\r\n                    type: \"POST\",\r\n                    success: function (childIds) {\r\n                        //determine if we set resolution category to same as parent\r\n                        if (resolveChildIncidentSettings.ChildIncidentResolutionCategorySameAsParent) {\r\n                            //parent and non-children wi base ids\r\n                            var itemIds = _.pluck(windowVm.selectedWorkItems, 'BaseId');\r\n                            //add in children\r\n                            _.each(childIds, function (childId) {\r\n                                itemIds.push(childId);\r\n                            });\r\n                            var uniqIds = _.uniq(itemIds);\r\n                            var postData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: uniqIds,\r\n                                EditedFields: getDrawerTaskEditedFields(windowVm)\r\n                            }\r\n\r\n                            postBulkEditChanges(postData, taskVm, modalControl);\r\n\r\n                        } else {\r\n                            //get child resolution cat\r\n                            var childResolutionCatId = resolveChildIncidentSettings.ChildIncidentResolutionCategory.Id;\r\n                            var childrenPostData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: childIds,\r\n                                EditedFields: getDrawerTaskChildEditedFields(windowVm, childResolutionCatId)\r\n                            }\r\n\r\n                            var wiSelectionPostData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: _.pluck(windowVm.selectedWorkItems, 'BaseId'),\r\n                                EditedFields: getDrawerTaskEditedFields(windowVm)\r\n                            }\r\n                            \r\n                            postBulkEditChanges(wiSelectionPostData, taskVm, modalControl, function (success) {\r\n                                if (success) {\r\n                                    postBulkEditChanges(childrenPostData, taskVm, modalControl);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n\r\n            };\r\n            var postBulkEditChanges = function (postData, taskVm, modalControl, postCallback) {\r\n                modalControl.close();\r\n                app.lib.mask.apply();\r\n                $.ajax({\r\n                    url: '/api/v3/workitem/BulkEditWorkItems/',\r\n                    data: JSON.stringify(postData),\r\n                    dataType: 'json',\r\n                    contentType: 'application/json',\r\n                    type: \"POST\",\r\n                    success: function () {\r\n                        if (!_.isUndefined(postCallback)) {\r\n                            postCallback(true);\r\n                        } else {\r\n                            onBulkEditSaveSuccess(taskVm);\r\n                        }\r\n                    },\r\n                    error: function () {\r\n                        if (!_.isUndefined(postCallback)) {\r\n                            postCallback(false);\r\n                        } else {\r\n                            onBulkEditSaveFailure();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            var onBulkEditSaveSuccess = function (taskVm) {\r\n                if (app.isMobile()) {\r\n                    var listControl = $(\"[data-control-id='\" + taskVm.targetControlId + \"']\").data('kendoListView');\r\n                    listControl.dataSource.query();\r\n                } else {\r\n                    //refresh the grid to get updated data.\r\n                    var targetGrid = $('#' + taskVm.targetControlId).data('kendoGrid');\r\n                    var targetGridState = app.gridUtils.savedState.getCurrentState(taskVm.targetControlId);\r\n                    app.lib.recheckGridState(targetGridState, targetGrid);\r\n                    targetGrid.dataSource.query(targetGridState);\r\n                }\r\n                app.lib.message.add(localizationHelper.localize('SaveSuccessMessage'), \"success\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var onBulkEditSaveFailure = function () {\r\n                app.lib.message.add(localizationHelper.localize('SaveErrorMessage'), \"danger\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            /* END functions */\r\n\r\n            /* initialization code*/\r\n            function initFormTask() {\r\n                var modalEle = buildAndRender.windowEle(changeStatusTemplate);\r\n                var formTaskViewModel = getFormTaskViewModel(modalEle);\r\n                var anchorTemplateProps = { Target: \"changeStatus\" };\r\n                buildAndRender.taskListItem(anchorTemplateProps, formTaskViewModel, anchorTemplate);\r\n            };\r\n\r\n            function initBulkTask() {\r\n                var modalView = buildAndRender.windowEle(changeStatusDrawerTemplate);\r\n                var drawerTaskViewModel = getDrawerTaskViewModel(modalView);\r\n                var anchorEleProps = { onClick: \"openModal\", titleKey: node.titleKey, toolTipMessage: localizationHelper.localize('MustSelectSameTypeStatus') };\r\n                buildAndRender.taskListItem(anchorEleProps, drawerTaskViewModel, drawerTaskTemplate);\r\n\r\n                /*subscribe to events*/\r\n                if (!app.isMobile()) {\r\n                    //called on grid row clicks\r\n                    app.events.subscribe(\"gridChange\", function(event, grid) {\r\n                        drawerTaskViewModel.onTargetControlChange(grid);\r\n                        drawerTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                    });\r\n\r\n                    //for initial grid load listen to this event so we can set persisted state information\r\n                    app.events.subscribe(\"gridBound\", function(event, grid) {\r\n                        drawerTaskViewModel.onTargetControlChange(grid);\r\n                        drawerTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                    });\r\n                } else {\r\n                    app.events.subscribe(\"mobileWiListSelectionChange\", function (event, listView) {\r\n                        if (!_.isUndefined(listView)) {\r\n                            drawerTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                            drawerTaskViewModel.targetControlId = listView.controlId;\r\n                        }\r\n                    });\r\n                    app.events.subscribe(\"mobileWiListInit\", function (event, listView) {\r\n                        if (!_.isUndefined(listView)) {\r\n                            drawerTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                            drawerTaskViewModel.targetControlId = listView.controlId;\r\n                        }\r\n                    });\r\n                }\r\n                /*END subscribe to events*/\r\n            };\r\n            /* END initialization code*/\r\n\r\n            //do it\r\n            if (vm.type == \"BulkEdit\") {\r\n                initBulkTask();\r\n            } else {\r\n                initFormTask();\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/amChangeStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/changeStatus/view.html','forms/fields/enum/controller','forms/fields/longstring/controller','forms/fields/boolean/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/changeStatus/view.html\");\r\n    var enumPicker = require(\"forms/fields/enum/controller\");\r\n    var txtArea = require(\"forms/fields/longstring/controller\");\r\n    var checkBox = require(\"forms/fields/boolean/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.ChangeHardwareAssetStatus;\r\n            var statusPropertyName;\r\n            if (node.Configs.type == \"HardwareAsset\") {\r\n                if (node.Configs.enumName == \"HardwareAssetStatus\") {\r\n                    \r\n                } else if (node.Configs.enumName == \"HardwareAssetType\") {\r\n                    title = localization.ChangeHardwareAssetType;\r\n                } \r\n            } else if (node.Configs.type == \"SoftwareAsset\") {\r\n                if (node.Configs.enumName == \"SoftwareAssetStatus\") {\r\n                    title = localization.ChangeSoftwareAssetStatus;\r\n                } else if (node.Configs.enumName == \"SoftwareAssetType\") {\r\n                    title = localization.ChangeSoftwareAssetType;\r\n                }\r\n            }\r\n\r\n            var tempStatus = { \"Id\": vm.viewModel[node.Configs.enumName].Id, \"Name\": vm.viewModel[node.Configs.enumName].Name };\r\n            \r\n\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        enumId: node.Configs.statusEnumId,\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            vm.viewModel.set(node.Configs.enumName, tempStatus);\r\n                            win.close();\r\n                        },\r\n                       \r\n                    });\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    //create status enumPicker\r\n                    var statusProperties = {\r\n                        PropertyName: node.Configs.enumName,\r\n                        PropertyDisplayName: 'Status',\r\n                        EnumId: _vmWindow.enumId\r\n                    };\r\n                    buildEnumPicker(cont.find('#statusPicker'), statusProperties, vm.viewModel);\r\n\r\n                    //var statusDropDown = cont.find('div[data-role=\"HardwareAssetStatus\"]').data().handler._dropdown;\r\n                    //var statusTreeView = cont.find('div[data-role=\"status\"]').data().handler._treeview;\r\n\r\n\r\n\r\n                    //bind status change\r\n                    //vm.viewModel.HardwareAssetStatus.bind(\"change\", function (e) {\r\n                    vm.viewModel[node.Configs.enumName].bind(\"change\", function (e) {\r\n                        switch (e.sender.Id) {\r\n                            \r\n                            default:\r\n                                //_vmWindow.set(\"showComment\", false);\r\n                                //_vmWindow.set(\"showResolution\", false);\r\n                                //_vmWindow.set(\"requireResolution\", false);\r\n                                break;\r\n                        }\r\n                        _vmWindow.set(\"okEnabled\", true);\r\n                    });\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPicker.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n          \r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/acknowledge/view.html',[],function () { return '<div id=\"AcknowledgeIncidentWindow\" class=\"hide task-window cireson-window defined-form\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"inline-spacing\">\\r\\n                <label><%= localization.AcknowledgementTime %> : <span data-bind=\"html:dateTimeNow\"></span></label>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"inline-spacing\">\\r\\n                <label><%= localization.AcknowledgementComment %></label>\\r\\n                <textarea data-bind=\"value: actionLogComment, events: {keyup:textCounter}\"\\r\\n                          data-value-update=\"keyup\"\\r\\n                          class=\"k-textbox\" rows=5></textarea>\\r\\n            </div>\\r\\n            <div class=\"inline-spacing\">\\r\\n                <span data-bind=\"html:charactersRemaining\"></span>\\r\\n                <span><%= localization.CharactersRemaining %></span>\\r\\n            </div>\\r\\n            <div class=\"inline-spacing checkbox checkbox-inline\">\\r\\n                <input id=\"IsPrivate\" type=\"checkbox\" data-bind=\"checked: isPrivate\" />\\r\\n                <label for=\"IsPrivate\" class=\"checkbox-label\"><%= localization.IsPrivate %></label>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button class=\"btn btn-primary\"\\r\\n                    data-role=\"button\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button class=\"btn btn-default\"\\r\\n                    data-role=\"button\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nacknowledge incident\r\n**/\r\n\r\ndefine('forms/tasks/acknowledge/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/acknowledge/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/acknowledge/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            \r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                acknowledge: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: localization.Acknowledge,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        dateTimeNow: kendo.toString(new Date(), \"g\"),\r\n                        dateTimeNowUTC: new Date().toISOString(),\r\n                        actionLogComment: \"\",\r\n                        isPrivate: false,\r\n                        charactersRemaining: \"4000\",\r\n                        textCounter: function () {\r\n                            var maximumLength = 4000;\r\n                            var val = this.actionLogComment.length;\r\n\r\n                            if (val > maximumLength) {\r\n                                this.actionLogComment.substring(0, maximumLength);\r\n                            } else {\r\n                                this.set(\"charactersRemaining\", maximumLength - val);\r\n                            }\r\n                        },\r\n                        okClick: function () {\r\n                            if (vm.viewModel.FirstResponseDate == null){\r\n                                vm.viewModel.FirstResponseDate = this.dateTimeNowUTC;\r\n                                var respondDateEle = $(\"input[name='FirstResponseDate']\");\r\n                                if (respondDateEle.attr('data-control') == 'datePicker') {\r\n                                    respondDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                } else if (respondDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                    respondDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                }\r\n                            }\r\n                            if (this.actionLogComment.length) {\r\n                                var newActionLog = {\r\n                                    EnteredBy: session.user.Name,\r\n                                    Title: localization.Analyst + \" \" + localization.Comment,\r\n                                    IsPrivate: this.isPrivate,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Description: this.actionLogComment,\r\n                                    DescriptionDisplay: this.actionLogComment,\r\n                                    Image: (this.isPrivate) ? app.config.iconPath + app.config.icons[\"privateComment\"] : app.config.iconPath + app.config.icons[\"comment\"],\r\n                                    ActionType: \"AnalystComment\"\r\n                                }\r\n                                if (!vm.viewModel.ActionLog) {\r\n                                    vm.viewModel.ActionLog = [];\r\n                                }\r\n                                var actionLogType = app.controls.getWorkItemLogType(pageForm.viewModel);\r\n                                if (actionLogType) {\r\n                                    pageForm.viewModel[actionLogType].push(newActionLog);\r\n                                }\r\n                            }\r\n\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        }\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"acknowledge\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nconvert To Parent\r\n**/\r\n\r\ndefine('forms/tasks/convertToParent/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //first add the anchor\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"convertToParent\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n           \r\n           //create view model \r\n            var viewModel = kendo.observable({\r\n                isParent: node.Configs.isParent,\r\n                confirmTitle: node.Configs.confirmTitle,\r\n                confirmMessage: node.Configs.confirmMessage,\r\n                convertToParent: function () {\r\n                    $.when(kendo.ui.ExtYesNoDialog.show({\r\n                        title: this.confirmTitle,\r\n                        message: this.confirmMessage\r\n                    })).done(function (response) {\r\n                        if (response.button === \"yes\") {\r\n                            vm.viewModel.IsParent = node.Configs.isParent;\r\n                            if (!vm.viewModel.IsParent) {\r\n                                if (vm.viewModel.ChildWorkItem != null) {\r\n                                    vm.viewModel.ChildWorkItem = [];\r\n                                }\r\n                            }\r\n                            vm.save(function (data) {\r\n                                app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                switch (pageForm.type) {\r\n                                    case \"ReleaseRecord\":\r\n                                        location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                        break;\r\n                                    default:\r\n                                        location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                        break;\r\n                                }\r\n                            }, saveFailure);\r\n                        } else {\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/linkToParent/view.html',[],function () { return '<div id=\"AssignParentWindow\" class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"margin-b20\">\\r\\n                <label><%= localization.SearchText %></label>\\r\\n                <span class=\"k-textbox k-space-right\">\\r\\n                    <input type=\"text\" data-bind=\"value: searchText\" />\\r\\n                    <a data-bind=\"click: searchClick\" href=\"javascript:void(0)\" class=\"\">\\r\\n                        <i class=\"fa fa-search\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n            </div>\\r\\n            <label><%= localization.SelectParent %></label>\\r\\n            <div data-role=\"grid\"\\r\\n                 data-bind=\"source: dataSource, events: { change: gridChange }\"\\r\\n                 data-selectable=\"true\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"true\"\\r\\n                 data-columns=\\'[\\r\\n                    { field: \"Id\", title: \" <%= localization.Id %>\", width: \"50px\", attributes: {\"class\": \"grid-highlight-column\"} },\\r\\n                    { field: \"Title\", title: \" <%= localization.Title %>\", width: \"300px\", attributes: {\"class\": \"grid-highlight-column\"} },\\r\\n                    { field: \"Status\", title: \" <%= localization.Status %>\", width: \"100px\" }\\r\\n                    ]\\'>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/header/relationships/view.html',[],function () { return '<div class=\"parent-header-link\" >\\r\\n    <label data-bind=\"text: view.controller.parentIncident\"></label> :\\r\\n    <a data-bind=\"attr: { href: view.controller.editHref}, text: view.controller.editLink\" target=\"_blank\"></a>\\r\\n    <span class=\"fa fa-trash-o fa-lg cursor-pointer\" data-bind=\"click: view.controller.unlinkParent\"></span>\\r\\n</div>';});\n\n","/**\r\nlink To Parent\r\n**/\r\n\r\ndefine('forms/tasks/linkToParent/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/linkToParent/view.html','text!forms/header/relationships/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/linkToParent/view.html\");\r\n    var headerLinkTpl = require(\"text!forms/header/relationships/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            \r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                linkToParent: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n                    var releaseRecordClassId = \"d02dc3b6-d709-46f8-cb72-452fa5e082b8\"; //classid for release record\r\n\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: (vm.viewModel.ClassId == releaseRecordClassId) ? localization.LinktoNewParentIncident : localization.LinkToNewParentRecord,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            _vmWindow.refreshDataSource();\r\n                            getChildIncidentSettings();\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        searchText: \"\",\r\n                        searchClick: function () {\r\n                            var val = this.get(\"searchText\");\r\n                            this.refreshDataSource();\r\n                            this.dataSource.filter({\r\n                                logic: \"or\",\r\n                                filters: [\r\n                                    {\r\n                                        field: \"Id\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Title\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Status.Name\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    }\r\n                                ]\r\n                            });\r\n                        },\r\n                        okEnabled: false, \r\n                        okClick: function () {\r\n                            if (!this.selectedRow)\r\n                                return;\r\n\r\n                            if (vm.viewModel.ParentWorkItem == null) {\r\n                                vm.viewModel.ParentWorkItem = {};\r\n                            }\r\n\r\n                            vm.viewModel.ParentWorkItem.BaseId = this.selectedRow.BaseId;\r\n                            vm.viewModel.ParentWorkItem.Id = this.selectedRow.Id;\r\n                            vm.viewModel.ParentWorkItem.Title = this.selectedRow.Title;\r\n\r\n                            //check if we need to change child's status\r\n                            if (!_.isUndefined(childIncidentSettings.ActiveChildIncidentLinkStatus.Id)) {\r\n                                vm.viewModel.set(\"Status\", { Id: childIncidentSettings.ActiveChildIncidentLinkStatus.Id, Name: childIncidentSettings.ActiveChildIncidentLinkStatus.Name });\r\n                            }\r\n\r\n                            vm.view.buildParentHeaderView(function (tpl) {\r\n                                parentView = new kendo.View(tpl, { wrapper: false, model: vm });\r\n                                $('#parent-header-space').html(parentView.render()).show();\r\n                            });\r\n\r\n                            this.dataSource.filter([]);\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            this.dataSource.filter([]);\r\n                            win.close();\r\n                        },\r\n                        dataSource: new kendo.data.DataSource({\r\n                            transport: {\r\n                                read: {\r\n                                    type: \"GET\",\r\n                                    dataType: \"json\",\r\n                                    url: \"/Search/GetParentWorkItems\",\r\n                                    data: { workItemType: vm.type },\r\n                                    cache: false\r\n                                }\r\n                            },\r\n                            schema: {\r\n                                model: {\r\n                                    fields: {\r\n                                        Id: { type: \"string\" },\r\n                                        Title: { type: \"string\" },\r\n                                        Status: { type: \"string\" },\r\n                                        BaseId: { type: \"string\" }\r\n                                    }\r\n                                }\r\n                            },\r\n                            pageSize: 5,\r\n                        }),\r\n                        selectedRow: null,\r\n                        gridChange: function (eventArgs) {\r\n                            this.set(\"okEnabled\", true);\r\n                            this.set(\"selectedRow\", eventArgs.sender.dataItem(eventArgs.sender.select()));\r\n                        },\r\n                        refreshDataSource: function () {\r\n                            this.dataSource.read();\r\n                        }\r\n                    });\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"linkToParent\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var childIncidentSettings;\r\n            var getChildIncidentSettings = function () {\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    childIncidentSettings = data;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/newStatus/view.html',[],function () { return '<div class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"col-group\">\\r\\n                <span data-bind=\"html: commentMessage\"></span>\\r\\n            </div>\\r\\n            <div class=\"col-group\">\\r\\n                <div class=\"editor-label\">\\r\\n                    <label><%= localization.Comment %></label>\\r\\n                </div>\\r\\n                <div class=\"editor-field\">\\r\\n                    <textarea data-bind=\"value: comment, events: {keyup:textCounter}\"\\r\\n                              data-value-update=\"keyup\"\\r\\n                              class=\"k-textbox\"\\r\\n                              rows=\"6\" />\\r\\n                    <div class=\"inline-spacing\">\\r\\n                        <span data-bind=\"html:charactersRemaining\"></span>\\r\\n                        <span><%= localization.CharactersRemaining %></span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nNew Status\r\n**/\r\n\r\ndefine('forms/tasks/newStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/newStatus/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/newStatus/view.html\");\r\n\r\n    var incidentResolved = \"2b8830b6-59f0-f574-9c2a-f4b4682f1681\";\r\n    var incidentActive = \"5e2d3932-ca6d-1515-7310-6f58584df73e\";\r\n    var IncidentClosed = \"bd0ae7c4-3315-2eb3-7933-82dfc482dbaf\";\r\n    var IncidentActivePending = \"b6679968-e84e-96fa-1fec-8cd4ab39c3de\";\r\n\r\n    var serviceRequestCancelled = \"674e87e4-a58e-eab0-9a05-b48881de784c\";\r\n    var serviceRequestCompleted = \"b026fdfd-89bd-490b-e1fd-a599c78d440f\";\r\n    var serviceRequestSubmitted = \"72b55e17-1c7d-b34c-53ae-f61f8732e425\";\r\n    var serviceRequestInProgress = \"59393f48-d85f-fa6d-2ebe-dcff395d7ed1\";\r\n    var serviceRequestOnHold = \"05306bf5-a6b9-b5ad-326b-ba4e9724bf37\";\r\n    var serviceRequestFailed = \"21dbfcb4-05f3-fcc0-a58e-a9c48cde3b0e\";\r\n    var serviceRequestClosed = \"c7b65747-f99e-c108-1e17-3c1062138fc4\";\r\n\r\n    var releaseRecordInProgress = \"1840bfdc-3589-88a5-cea9-67536fd95a3b\";\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //first add the anchor\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"setNewStatus\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n           \r\n            //all other bound changes to be triggered\r\n            if (!_.isUndefined(node.Configs.otherBoundChanges)) {\r\n                //var otherBoundChanges = $.parseJSON(node.Configs.otherBoundChanges);\r\n                var otherBoundChanges = node.Configs.otherBoundChanges;\r\n            } else {\r\n                var otherBoundChanges = {};\r\n            }\r\n\r\n            //create view model \r\n            var viewModel = kendo.observable({\r\n                setNewStatus: function () {\r\n                    //show comment for cancelled service request\r\n                    if (node.Configs.newStatusId === serviceRequestCancelled || node.Configs.newStatusId === releaseRecordInProgress) {\r\n                        addComment(view.element, node.Configs);\r\n                    } else {\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: node.Configs.confirmTitle,\r\n                            message: node.Configs.confirmMessage\r\n                        })).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n\r\n                                //set new status\r\n                                vm.viewModel.set(\"Status\", { Id: node.Configs.newStatusId, Name: node.Configs.newStatusName });\r\n\r\n                                //re-initiate resolution details on re-activate(active status) only\r\n                                if (vm.viewModel.Status.Id == app.constants.workItemStatuses.Incident.Active) {\r\n                                    vm.viewModel.set(\"ResolutionCategory\", { Name: null, Id: null });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", null);\r\n                                    vm.viewModel.set(\"ResolvedDate\", null);\r\n\r\n                                   \r\n                                    if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordActivated());\r\n                                    }\r\n                                }\r\n\r\n                                //make other changes\r\n                                $.each(otherBoundChanges, function (index, val) {\r\n                                    vm.viewModel.set(index, val);\r\n                                });\r\n\r\n                                //if IR or SR closed set closed date.\r\n                                if (node.Configs.newStatusId == app.constants.workItemStatuses.Incident.Closed || \r\n                                    node.Configs.newStatusId == app.constants.workItemStatuses.ServiceRequest.Closed) {\r\n                                    vm.viewModel.set(\"ClosedDate\", new Date().toISOString());\r\n\r\n                                    //set closed by user \r\n                                    switch (node.Configs.newStatusId) {\r\n                                        case app.constants.workItemStatuses.Incident.Closed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordClosed());\r\n                                            break;\r\n                                        case app.constants.workItemStatuses.ServiceRequest.Closed:\r\n                                            vm.viewModel.ClosedByUser = { BaseId: session.user.Id };\r\n                                            break;\r\n                                    }\r\n                                }\r\n\r\n                                //reactivating child incidents when a parent is reactivated\r\n                                if (vm.type === \"Incident\" && vm.viewModel.IsParent && vm.viewModel.Status.Id == incidentActive) {\r\n                                    processChildIncidentReactivation();\r\n                                } else {\r\n                                    save();\r\n                                }\r\n                            } else {\r\n                                //reset the viewModel\r\n                                vm.viewModel.set(\"Status\",{Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name});\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var save = function () {\r\n                //save/apply the current changes\r\n                vm.save(function (data) {\r\n                    app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                    switch (vm.type) {\r\n                        case \"ChangeRequest\":\r\n                            location.href = \"/ChangeRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"ServiceRequest\":\r\n                            location.href = \"/ServiceRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"Incident\":\r\n                            location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"ReleaseRecord\":\r\n                            location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"Problem\":\r\n                            location.href = \"/Problem/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        default:\r\n                            location.href = \"/WorkItems/MyItems/\";\r\n                            break;\r\n                    }\r\n                }, saveFailure);\r\n            }\r\n\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n\r\n            var reactivateChildandSave = function () {\r\n                $.each(vm.viewModel.ChildWorkItem, function (i, item) {\r\n                    item.set(\"Status\", {Name: childIncidentSettings.ChildIncidentReactivatedStatus.Name, Id: childIncidentSettings.ChildIncidentReactivatedStatus.Id});\r\n                    item.set(\"ResolutionCategory\", {Name: null,Id: null});\r\n                    item.set(\"ResolutionDescription\", null);\r\n                    item.set(\"ResolvedDate\", null);\r\n                });\r\n                save();\r\n            }\r\n\r\n            var processChildIncidentReactivation = function () {\r\n                var childIncidentSettings;\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    childIncidentSettings = $.parseJSON(data);\r\n\r\n                    if (childIncidentSettings.ReactivateLetAnalystDecide) { //let analyst decide setting\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: localization.ReactivateChildIncidentTitle,\r\n                            message: localization.ReactivateChildIncidentMessage\r\n                        })).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                reactivateChildandSave();\r\n                            } else {\r\n                                save();\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (childIncidentSettings.ReactivateChildIncident) { //automatic reactivate setting\r\n                        reactivateChildandSave();\r\n                    } else { // do nothing setting\r\n                        save();\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n            var addComment = function (cont, newStatusConfig) {\r\n                //var cont = view.element; //we have the element in memory so no need use a selector\r\n                win = cont.kendoCiresonWindow({\r\n                    title: localization.Comment,\r\n                    width: 500,\r\n                    height: 300,\r\n                    actions: []\r\n                }).data(\"kendoWindow\");\r\n                \r\n                //this view Model is bound to the window element\r\n                var _vmWindow = new kendo.observable({\r\n                    comment: \"\",\r\n                    okEnabled: false,\r\n                    charactersRemaining: \"4000\",\r\n                    textCounter: function () {\r\n                        var maximumLength = 4000;\r\n                        var val = this.comment.length;\r\n\r\n                        if (val > maximumLength) {\r\n                            this.comment.substring(0, maximumLength);\r\n                        } else {\r\n                            this.set(\"charactersRemaining\", maximumLength - val);\r\n                        }\r\n\r\n                        if (val > 0) {\r\n                            this.set(\"okEnabled\", true);\r\n                        } else {\r\n                            this.set(\"okEnabled\", false);\r\n                        }\r\n                    },\r\n                    okClick: function () {\r\n                        //set new status\r\n                        vm.viewModel.set(\"Status\",{Id: newStatusConfig.newStatusId, Name: newStatusConfig.newStatusName});\r\n\r\n                        //set comment\r\n                        var newComment = _.isNull(vm.viewModel.Notes) ? this.comment : vm.viewModel.Notes + \"\\r\\n\" + this.comment;\r\n                        vm.viewModel.set(\"Notes\", newComment);\r\n\r\n                        //save changes\r\n                        win.close();\r\n                        save();\r\n                    },\r\n                    cancelClick: function () {\r\n                        win.close();\r\n                    },\r\n                    commentMessage: !_.isUndefined(newStatusConfig.commentMessage) ? newStatusConfig.commentMessage : localization.CancelledStatusCommentMessage\r\n                });\r\n                //add control to the window\r\n                kendo.bind(cont, _vmWindow);\r\n\r\n                cont.removeClass('hide');\r\n                cont.show();\r\n\r\n                win.open();\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/sendEmail/mobile_view.html',[],function () { return '<div id=\"EmailNotificationWindow\" class=\"cireson-window defined-form task-window hide\">\\n    <div class=\"cireson-window--wrapper\">\\n        <div class=\"cireson-window--body\">\\n            <div class=\"col-md-6 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailTo %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <div class=\"k-autocomplete\">\\r\\n                        <select id=\"userPickerTo\"></select>\\r\\n                        <button id=\"toField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailCC %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <div class=\"k-autocomplete\">\\r\\n                        <select id=\"userPickerCc\"></select>\\r\\n                        <button id=\"ccField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"col-md-12 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.Subject %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <input data-bind=\"value: emailSubject\" class=\" k-textbox\" type=\"text\">\\n                </div>\\n            </div>\\n            \\n            <div class=\"col-md-12 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailTemplate %></label>\\n                </div>\\n                <div class=\"editor-field\" id=\"templateDiv\">\\n                    <input data-role=\"combobox\"\\n                           data-placeholder=\"<%= localization.ChooseOne %>\"\\n                           data-value-primitive=\"true\"\\n                           data-text-field=\"Name\"\\n                           data-value-field=\"Id\"\\n                           data-filter=\"contains\"\\n                           data-bind=\"value: emailTemplateValue, source: emailTemplateDataSource, events:{change:emailTemplateChange }\"/>\\n                </div>\\n            </div>\\n\\n            <div class=\"col-md-12 pad10\">\\r\\n                <div id=\"mobileStatusPicker\" />\\r\\n            </div>\\n            <div class=\"col-md-12 pad10\">\\r\\n                <div class=\"col-md-6 pad0\">\\r\\n                    <label><%= localization.Message %></label>\\r\\n                </div>\\r\\n                <div class=\"col-md-6 pad0\">\\r\\n                    <a href=\"#\" data-bind=\"events: { click: resizeEditor }\" role=\"button\" title=\"Expand Editor\" class=\"pull-right\"><i class=\"fa fa-expand\"></i></a>\\r\\n                </div>\\r\\n                <hr>\\r\\n                <div class=\"editor-field\">\\r\\n                    <textarea id=\"messageEditor\" class=\"form-editor hidden\" data-bind=\"value: emailHTMLMessage\" />\\r\\n                </div>\\r\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <div id=\"statusPicker\" />\\n                <div class=\"checkbox\">\\n                    <input id=\"IsAddToLog\" type=\"checkbox\" data-bind=\"checked: addToLog, enabled: enableAddToLog\" />\\r\\n                    <label for=\"IsAddToLog\" class=\"control-label \">\\n                        <%= localization.SendEmailAddToLog %>\\n                    </label>\\n                </div>\\n                <div class=\"checkbox col-md-12 margin-l30\" data-bind=\"visible: addToLog\">\\n                    <input id=\"setAsPrivate\" type=\"checkbox\" data-bind=\"checked: setAsPrivate\" />\\n                    <label for=\"setAsPrivate\" class=\"control-label col-md-10\">\\n                        <%= localization.SetAsPrivate %>\\n                        <i class=\"fa fa-info-circle info-icon text-primary\" data-toggle=\"tooltip\" title=\"<%= localization.SaveMessageAsPrivateTooltip %>\"></i>\\n                    </label>\\n                </div>\\n                <div data-bind=\"visible: showChangeStatus\" class=\"checkbox\">\\n                    <input id=\"SetFirstResponseDate\" type=\"checkbox\" data-bind=\"checked: setFirstResponseDate, enabled:enableFirstResponseDate\" />\\n                    <label for=\"SetFirstResponseDate\" class=\"control-label\"><%= localization.SetFirstResponseDate %></label>\\n                </div>\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <label><%= localization.SendEmailAttachment %></label>\\n                <div class=\"form-group\">\\r\\n                    <div class=\"drop-zone-element\">\\r\\n                        <div class=\"text-wrapper\">\\r\\n                            <span class=\"drag-image-text\">\\n                                <a class=\"browse-file\"><b><%= localization.Browse %></b></a>\\n                                <span data-bind=\"visible: filesCount > 0\"><span class=\"lowercase\"> <%= localization.Or %> </span><a data-bind=\"events: { click: viewWorkItemFiles }\"><b><%= localization.BrowseWorkItemFiles %></b></a></span>\\r\\n                            </span>\\r\\n                            <div style=\"display:none\"><input name=\"files\" id=\"email-attachment\" type=\"file\" /></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\n                <div>\\r\\n                    <div class=\"fileattachment-list\"></div>\\r\\n                    <div class=\"fileattachment-img-modal\"></div>\\r\\n                    <script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n                        <div class=\"thumbnail-file\">\\r\\n                            <div class=\"cursor-pointer thumbnail-img\">\\r\\n                                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                                # } else{ #\\r\\n                                <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                                # } #\\r\\n                            </div>\\r\\n                            <div class=\"thumbnail-caption\">\\r\\n                                <span>#: DisplayName #</span>\\r\\n                                <!--<div class=\"overlay transparent\">\\r\\n                                    <span class=\"pull-right\">\\r\\n                                        <a class=\"k-delete-button\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                    </span>\\r\\n                                </div>-->\\r\\n                                <div class=\"overlay\">\\r\\n                                    # if (DisplayName.match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                                            <i class=\"fa fa-eye\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                                            <i class=\"fa fa-external-link\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    # } #\\r\\n                                    # if (BaseId!=null) { #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                                            <i class=\"fa fa-download\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    # } #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </script>\\r\\n                </div>\\n                <!--<input data-bind=\"value: emailAttachment\" class=\"k-textbox\" type=\"text\" readonly=\"readonly\">\\n                <span data-bind=\"text: attachmentErrorMessage\" class=\"send-email-attachment-error\"></span>\\n                <div>\\n                    <input type=\"file\" name=\"files\" id=\"fileUploader\" />\\n                    <div class=\"k-widget k-upload\">\\n                        <input type=\"button\" value=\"<%= localization.Remove %>\" class=\"k-button\" />\\n                    </div>\\n                </div>-->\\n            </div>\\n        </div>\\n        <div class=\"window-buttons cireson-window--footer\">\\n            <button id=\"emailOk\" data-role=\"button\"\\n                    class=\"btn btn-primary\"\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\n                <%= localization.OK %>\\n            </button>\\n            <button data-role=\"button\"\\n                    class=\"btn btn-default\"\\n                    data-bind=\"events: { click: cancelClick }\">\\n                <%= localization.Cancel %>\\n            </button>\\n        </div>\\n    </div>\\n</div>';});\n\n","\ndefine('text!forms/tasks/sendEmail/view.html',[],function () { return '<div id=\"EmailNotificationWindow\" tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\">\\n    <div class=\"modal-dialog modal-lg\">\\n        <div class=\"modal-content\">\\n            <div class=\"modal-header\">\\n                 <h4 class=\"modal-title\"><%= localization.SendEmail %></h4>\\n            </div> \\n            <div class=\"modal-body\">\\n                <div class=\"row\">\\n                    <div class=\"col-md-6 pad10\">\\n                        <div class=\"editor-label\">\\n                            <label><%= localization.SendEmailTo %></label>\\n                        </div>\\n                        <div class=\"editor-field\">\\n                            <div class=\"k-autocomplete\">\\r\\n                                <select id=\"userPickerTo\"></select>\\r\\n                                <button id=\"toField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\n                            <label><%= localization.SendEmailCC %></label>\\n                        </div>\\n                        <div class=\"editor-field\">\\n                            <div class=\"k-autocomplete\">\\n                                <select id=\"userPickerCc\"></select>\\n                                <button id=\"ccField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\r\\n                            <label><%= localization.Subject %></label>\\r\\n                        </div>\\r\\n                        <div class=\"editor-field\">\\r\\n                            <input data-bind=\"value: emailSubject\" class=\"k-textbox\" type=\"text\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\r\\n                            <label><%= localization.SendEmailTemplate %></label>\\r\\n                        </div>\\r\\n                        <div class=\"editor-field\" id=\"templateDiv\">\\r\\n                            <input data-role=\"combobox\"\\r\\n                                   data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                                   data-value-primitive=\"true\"\\r\\n                                   data-text-field=\"Name\"\\r\\n                                   data-value-field=\"Id\"\\r\\n                                   data-filter=\"contains\"\\r\\n                                   data-bind=\"value: emailTemplateValue, source: emailTemplateDataSource, events:{change:emailTemplateChange }\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-12 pad10\">\\r\\n                        <div class=\"col-md-6 pad0\">\\r\\n                            <label><%= localization.Message %></label>\\r\\n                        </div>\\r\\n                        <div class=\"col-md-6 pad0\">\\r\\n                            <a href=\"#\" data-bind=\"events: { click: resizeEditor }\" role=\"button\" title=\"Expand Editor\" class=\"pull-right\"><i class=\"fa fa-expand\"></i></a>\\r\\n                        </div>\\r\\n                        <hr>\\r\\n                        <div class=\"editor-field\">\\r\\n                            <textarea id=\"messageEditor\" class=\"form-editor hidden\" data-bind=\"value: emailHTMLMessage\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div id=\"statusPicker\" />\\r\\n                        <div class=\"checkbox\">\\r\\n                            <input id=\"IsAddToLog\" type=\"checkbox\" data-bind=\"checked: addToLog, enabled: enableAddToLog\" />\\r\\n                            <label for=\"IsAddToLog\" class=\"control-label \">\\r\\n                                <%= localization.SendEmailAddToLog %>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\"checkbox col-md-12 margin-l30\" data-bind=\"visible: addToLog\">\\r\\n                            <input id=\"setAsPrivate\" type=\"checkbox\" data-bind=\"checked: setAsPrivate\" />\\r\\n                            <label for=\"setAsPrivate\" class=\"control-label col-md-10\">\\r\\n                                <%= localization.SetAsPrivate %>\\r\\n                                <i class=\"fa fa-info-circle info-icon text-primary\" data-toggle=\"tooltip\" title=\"<%= localization.SaveMessageAsPrivateTooltip %>\"></i>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div data-bind=\"visible: showChangeStatus\" class=\"checkbox \">\\r\\n                            <input id=\"SetFirstResponseDate\" type=\"checkbox\" data-bind=\"checked: setFirstResponseDate, enabled:enableFirstResponseDate\" />\\r\\n                            <label for=\"SetFirstResponseDate\" class=\"control-label\"><%= localization.SetFirstResponseDate %></label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <label><%= localization.SendEmailAttachment %></label>\\r\\n                        <div class=\"form-group\">\\r\\n                            <div class=\"drop-zone-element\">\\r\\n                                <div class=\"text-wrapper\">\\r\\n                                    <span class=\"drag-image-text\">\\r\\n                                        <img src=\"/Content/Images/Icons/FileUpload/upload_to_cloud.svg\" />\\r\\n                                        <b><%= localization.DragAndDrop %> </b> <%= localization.YourFilesOr %>\\r\\n                                        <a class=\"browse-file\"><b><%= localization.Browse %></b></a>\\r\\n                                        <span data-bind=\"visible: filesCount > 0\">\\r\\n                                            <span class=\"lowercase\">  <%= localization.Or %>  </span>\\r\\n                                            <a data-bind=\"events: { click: viewWorkItemFiles }\"><b><%= localization.BrowseWorkItemFiles %></b></a>\\r\\n                                        </span>\\r\\n                                    </span>\\r\\n                                    <div style=\"display:none\"><input name=\"files\" id=\"email-attachment\" type=\"file\" /></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <div class=\"fileattachment-list\"></div>\\r\\n                            <div class=\"fileattachment-img-modal\"></div>\\r\\n                        </div>\\r\\n                        <script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n                            <div class=\"thumbnail-file\">\\r\\n                                <div class=\"cursor-pointer thumbnail-img\">\\r\\n                                    # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                    <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                                    # } else{ #\\r\\n                                    <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                                    # } #\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\"thumbnail-caption\">\\r\\n                                    <span>#: DisplayName #</span>\\r\\n                                    <!--<div class=\"overlay transparent\">\\r\\n                            <span class=\"pull-right\">\\r\\n                                <a class=\"k-delete-button\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                            </span>\\r\\n                        </div>-->\\r\\n                                    <div class=\"overlay\">\\r\\n                                        # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                                                <i class=\"fa fa-eye\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                                                <i class=\"fa fa-external-link\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        # } #\\r\\n                                        # if (BaseId!=null) { #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                                                <i class=\"fa fa-download\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        # } #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </script>\\r\\n                    </div>\\r\\n                </div> \\n            </div>\\n\\n            <div class=\"modal-footer\">\\r\\n            <button id=\"emailOk\" data-role=\"button\"\\n                    class=\"btn btn-primary\"\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\n                <%= localization.OK %>\\n            </button>\\n            <button data-role=\"button\"\\n                    class=\"btn btn-default\"\\n                    data-bind=\"events: { click: cancelClick }\">\\n                <%= localization.Cancel %>\\n            </button>\\n        </div>\\n    </div>\\n</div>\\r\\n\\r\\n    <div class=\"status\" style=\"display:none\">\\r\\n        <div id=\"SendEmailChangeStatusWindow\" class=\"cireson-window\">\\r\\n            <div class=\"cireson-window--wrapper\">\\r\\n                <div class=\"cireson-window--body\">\\r\\n                    <!--<div id=\"statusPicker\" />-->\\r\\n                    <div id=\"resolutionPicker\" />\\r\\n                    <div id=\"resolutionDescription\"  />\\r\\n                </div>\\r\\n                <div class=\"cireson-window--footer window-buttons\">\\r\\n                    <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n                    <button data-role=\"button\"\\r\\n                            class=\"btn btn-primary\"\\r\\n                            id=\"statusOk\">\\r\\n                        <%= localization.OK %>\\r\\n                    </button>\\r\\n                    <button data-role=\"button\"\\r\\n                            class=\"btn btn-default\"\\r\\n                            id=\"statusCancel\">\\r\\n                        <%= localization.Cancel %>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n\\r\\n';});\n\n","\ndefine('text!forms/popups/userPickerPopup/view.html',[],function () { return '<div id=\"UserPickerPopupWindow\" class=\"cireson-window defined-form task-window\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-6\">\\r\\n                    <div class=\"form-group popup-search-box\">\\r\\n                        <input type=\"text\" data-value-update=\"keyup\" placeholder=\"<%= localization.SearchText %>\" data-bind=\"value: searchValue, events: { keypress: searchOnEnter }\" class=\"search-input\">\\r\\n                        <span data-bind=\"events:{click: search}\" class=\"search-icon\">\\r\\n                            <i class=\"fa fa-search\"></i>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div data-bind=\"visible: isDesktopView\">\\r\\n                <div data-control-grid=\"userPickerGrid\"></div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\"row\" data-bind=\"visible: isMobileView\">\\r\\n                <div class=\"col-md-4\">\\r\\n                    <div data-role=\"listview\"\\r\\n                         data-bind=\"source: userDataSource, events:{change: onListViewChanged}\"\\r\\n                         data-template=\"user-grid-mobile-template\"\\r\\n                         data-selectable=\"true\"\\r\\n                         class=\"user-listBox\"></div>\\r\\n                    <div data-role=\"pager\"\\r\\n                         data-bind=\"source: userDataSource\"\\r\\n                         data-numeric=\"false\"></div>\\r\\n                    <script type=\"text/x-kendo-template\" id=\"user-grid-mobile-template\">\\r\\n                        <div class=\"user-info\">\\r\\n                            <dl>\\r\\n                                <dt>#: FirstName # #: LastName #</dt>\\r\\n                                <dd>#: UserName # &middot; #: Title #</dd>\\r\\n                                <dd>#: Domain # &middot; #: Company #</dd>\\r\\n                            </dl>\\r\\n                        </div>\\r\\n\\r\\n                    </script>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons objectPicker-single-grid\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nuserPickerPopup\r\n**/\r\nvar __userPickerPopupSingleton;\r\n\r\ndefine('forms/popups/userPickerPopup/controller',['require','text!forms/popups/userPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/userPickerPopup/view.html\");\r\n    var singletonName = \"userPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (groupsOnly) {\r\n            // keep popup window as singleton\r\n            if (__userPickerPopupSingleton) {\r\n                return __userPickerPopupSingleton;\r\n            }\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            $(\"body\").append(ele);\r\n            __userPickerPopupSingleton = new UserPickerPopup(ele, groupsOnly);\r\n            \r\n            return __userPickerPopupSingleton;\r\n        }\r\n    }\r\n\r\n    /* -- UserPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback returns selected user object\r\n    */\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // CONTROL\r\n    var UserPickerPopup = function (targetEle, groupsOnly) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var gridHtml = targetEle.find(\"[data-control-grid]\");\r\n        var grid;\r\n        var gridUrl = groupsOnly\r\n            ? \"/User/GetUserSearchResults?groupsOnly=true\"\r\n            : \"/User/GetUserSearchResults\";\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"Name\";\r\n        var _idProp = \"Id\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                searchText: localization.SearchText,\r\n                selectUserText: groupsOnly ? localization.SelectGroup : localization.SelectUser,\r\n                searchValue: \"\",\r\n                //okText: localization.OK,\r\n                //cancelText: localization.Cancel,\r\n                search: onSearchClick,\r\n                searchOnEnter: function(e) {\r\n                    if (e.which == 13) {\r\n                        e.preventDefault();\r\n                        onSearchClick();\r\n                    }\r\n                },\r\n                save: onSaveClick,\r\n                cancel: onCancelClick,\r\n                userDataSource: new kendo.data.DataSource(),\r\n                onListViewChanged: function (e) {\r\n                    var index = e.sender.select().index();\r\n                    var dataItem = e.sender.dataSource.view()[index];\r\n                    this.set(\"selectedUser\", dataItem);\r\n                },\r\n                selectedUser: null,\r\n                isDesktopView: !app.isMobileDevice(),\r\n                isMobileView: app.isMobileDevice()\r\n\r\n        });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            createGrid();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n            self.vm = _vm;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n            \r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSearchClick = function () {\r\n            grid.search(_vm.searchValue);\r\n        }\r\n        var onSaveClick = function (e) {\r\n            var onMobile = app.isMobileDevice();\r\n            if (onMobile) {\r\n                if (!_.isNull(_vm.selectedUser)) {\r\n                    var userObj = _model.getGenericFromObj(_vm.selectedUser);\r\n                    $(self).trigger(\"save\", userObj);\r\n                    closePopup();\r\n                }\r\n            } else {\r\n                var selectedRow = grid.kendoGrid.select();\r\n                if (selectedRow) {\r\n                    var obj = _model.getGenericFromObj(grid.kendoGrid.dataItem(selectedRow));\r\n                    $(self).trigger(\"save\", obj);\r\n                    closePopup();\r\n                }\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n        var openPopup = function () {\r\n            //clear out search box value and search results before opening the window\r\n            self.vm.set(\"searchValue\", \"\");\r\n            grid.kendoDataSource.data([]);\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup(groupsOnly);\r\n        }        \r\n        var createGrid = function () {\r\n            grid = new Grid({\r\n                html: gridHtml,\r\n                url: gridUrl\r\n            });\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function (groupsOnly) {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n           \r\n            // ACTIONS\r\n\r\n            // METHODS\r\n            \r\n            var createKendoWindow = function() {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: groupsOnly ? localization.SelectGroup : localization.SelectUser,\r\n                    content: null,\r\n                    width: 680,\r\n                    height: 420,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Grid --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n        */\r\n        var Grid = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var html = settings.html;\r\n            var url = settings.url;\r\n            var height = 200;\r\n            var kendoGrid;\r\n            var kendoDataSource;\r\n            var searchValue;\r\n            // private params           \r\n           \r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoGrid();\r\n                kendoGrid.pager.element.hide();\r\n                bindEvents();\r\n                self.kendoGrid = kendoGrid;\r\n                self.kendoDataSource = kendoDataSource;\r\n                self.search = search;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                kendoGrid.bind(\"dataBound\", function (e) {\r\n                    kendoGrid.pager.element.show();\r\n                });\r\n                kendoGrid.element.on(\"dblclick\", \"tbody>tr\", onRowDblClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onRowDblClick = function () {\r\n                kendoGrid.select($(this));\r\n                onSaveClick();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var search = function(value){\r\n                searchValue = value;\r\n                kendoDataSource.read();\r\n                kendoDataSource.page(1);\r\n\r\n                _vm.set(\"userDataSource\", kendoDataSource);\r\n            }\r\n            var createKendoDataSource = function () {\r\n                kendoDataSource = new kendo.data.DataSource({\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": url,\r\n                            \"data\": function() {\r\n                                return {\r\n                                    userFilter: function() {\r\n                                        return searchValue;\r\n                                    },\r\n                                    filterByAnalyst: _vm.filterByAnalyst\r\n                                }\r\n                            },\r\n                            \"type\": \"GET\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": app.isMobileDevice ? 3 : 15,\r\n                    \"serverPaging\": true,\r\n                    \"serverSorting\": true,\r\n                    \"serverFiltering\": true,\r\n                    \"serverGrouping\": true,\r\n                    \"total\": 0,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                        \"model\": {\r\n                            \"fields\": {\r\n                                \"Id\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Name\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"PrincipalName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"UserName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Domain\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Company\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Title\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"FirstName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"LastName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"EmployeeId\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Analyst\": {\r\n                                    \"type\": \"number\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            var createKendoGrid = function () {\r\n                kendoGrid = html.kendoGrid({\r\n                    height: height,\r\n                    dataSource: kendoDataSource,\r\n                    selectable: \"Single,Row\",\r\n                    sortable: { mode: \"multiple\" },\r\n                    pageable: true,\r\n                    filterable: {\r\n                        extra: false,\r\n                        operators: {\r\n                            string: {\r\n                                startswith: localization.Startswith,\r\n                                contains: localization.Contains,\r\n                                eq: localization.Isequalto,\r\n                                neq: localization.Isnotequalto\r\n                            },\r\n                            date: {\r\n                                gte: localization.GreaterOrEqual,\r\n                                gt: localization.GreaterThan,\r\n                                lte: localization.LessOrEqual,\r\n                                lt: localization.LessThan\r\n                            }\r\n                        }\r\n                    },\r\n                    autoBind: false,\r\n                    columns: [{\r\n                        \"title\": localization.id,\r\n                        \"hidden\": true,\r\n                        \"field\": \"Id\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.FirstName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"width\": \"110px\",\r\n                        \"field\": \"FirstName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.LastName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"width\": \"110px\",\r\n                        \"field\": \"LastName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Title,\r\n                        \"field\": \"Title\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.UserName,\r\n                        \"field\": \"UserName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Domain,\r\n                        \"field\": \"Domain\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Company,\r\n                        \"field\": \"Company\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }],\r\n                }).data(\"kendoGrid\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n        \r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/popups/multipleObjectPickerPopup/view.html',[],function () { return '<div id=\"MultiObjectPickerWindow\" class=\"cireson-window defined-form task-window\" data-cid=\"MultiObjectPickerWindow\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-5\">\\r\\n                    <div class=\"form-group\">\\r\\n                        <label><%= localization.SearchText %></label>\\r\\n                        <span class=\"k-textbox k-space-right object-picker-search\">\\r\\n                            <input type=\"text\" data-objectpicker-action=\"search\" data-objectpicker-action-value=\"search\" value=\"\" data-cid=\"MultiObjectPickerWindowSearchBox\" />\\r\\n                            <span data-objectpicker-action=\"search\" class=\"fa fa-search text-primary cursor-pointer\"></span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"col-md-5\">\\r\\n                    <div class=\"form-group\">\\r\\n                        <label><%= localization.SearchObjectText %></label>\\r\\n                        <input type=\"text\" data-objectpicker-control=\"comboBox\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <label><%= localization.SelectObjects %></label>\\r\\n\\r\\n            <div class=\"objectPicker-container\">\\r\\n                <div class=\"k-widget k-grid k-secondary\" data-objectpicker-control=\"objectPickerGrid\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"objectPicker-actions\">\\r\\n                <button data-objectpicker-action=\"addObject\" class=\"btn btn-primary k-button\" data-cid=\"multiobject-picker-add-object-btn\"><%= localization.Add %></button>\\r\\n                <button data-objectpicker-action=\"removeObject\" class=\"btn btn-danger k-button\" data-cid=\"multiobject-picker-remove-object-btn\"><%= localization.Remove %></button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"k-widget k-grid k-secondary objectPicker-grid2-container\" data-objectpicker-control=\"objectPickerGrid2\"></div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\"\\r\\n                    data-cid=\"multiobject-picker-ok-btn\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\"\\r\\n                    data-cid=\"multiobject-picker-cancel-btn\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nmultipleObjectPickerPopup\r\n**/\r\n\r\ndefine('forms/popups/multipleObjectPickerPopup/controller',['require','text!forms/popups/multipleObjectPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/multipleObjectPickerPopup/view.html\");\r\n    var singletonName = \"objectPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (classId, columnNames, gridUrl, dataSourceFilter, isConfigItem, isMailRecipient) {\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built());\r\n            //var classId = classId;\r\n            //var columnNames = columnNames;\r\n            //var gridUrl = gridUrl;\r\n            // keep popup window as singleton\r\n            // check to see if dom element exists, if so get userPickerPopup object from it\r\n            var ele = $('[datasingleton=\"' + singletonName + '\"]');\r\n            var objectPickerPopup = ele.data(singletonName);\r\n            if (!ele.length) {\r\n                ele = templateFrag;\r\n                $(\"body\").append(ele);\r\n                objectPickerPopup = new ObjectPickerPopup(ele, classId, columnNames, gridUrl, dataSourceFilter, isConfigItem, isMailRecipient);\r\n                ele.data(singletonName, objectPickerPopup);\r\n            }\r\n            return objectPickerPopup;\r\n\r\n        }\r\n    }\r\n\r\n    /* -- ObjectPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            open = function(classId){ // opens popup with this classId }\r\n            close = function(){ // closes popup }\r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback(obj){  } returns selected user object\r\n    */\r\n    \r\n    // CONTROL\r\n    var ObjectPickerPopup = function (targetEle, classId, columnNames, gridUrl, dataSourceFilter, isConfigItem, isMailRecipient) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var classId = classId;\r\n        var columnNames = columnNames;\r\n        var controllerUrl = gridUrl;\r\n        var filter = dataSourceFilter;\r\n        var isConfigItem = isConfigItem;\r\n        var isMailRecipient = isMailRecipient; //true for Send Email TO and CC fields\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"DisplayName\";\r\n        var _idProp = \"Id\";\r\n       // var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, objects) { callback(objects); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, objects) { callback(objects); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                save: onSaveClick,\r\n                cancel: onCancelClick\r\n            });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n\r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSaveClick = function () {\r\n            var selectedRows = popup.grid2.dataSource.data();\r\n            if (selectedRows) {\r\n                $.each(selectedRows, function (i, itm) {\r\n                    if (_.isUndefined(itm.BaseId)) { itm.BaseId = itm.Id;}\r\n                    $(self).trigger(\"save\", itm);\r\n                });\r\n                closePopup();\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n\r\n        var openPopup = function () {\r\n            popup.actions.clearSearchText();\r\n            popup.gridFunctions.clear();\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup();\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function () {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            var gridUrl = (!_.isUndefined(controllerUrl) && !_.isNull(controllerUrl)) ? controllerUrl : \"/Search/GetSearchObjectsWithEnumObjectByClassId\";\r\n            var comboUrl = \"/Search/GetSearchClasses\";\r\n            var combo;\r\n            var grid;\r\n            var grid2;\r\n            var searchText;\r\n            var gridFunctions;\r\n            var actions;\r\n            var outObjs = new kendo.data.ObservableArray([]);\r\n            // CONSTRUCT\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                createCombo();\r\n                createGrid();\r\n                createGrid2();\r\n                bindEvents();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            // ACTIONS\r\n           \r\n\r\n            var callback = function () { }\r\n\r\n            var actions = new (function () {\r\n                this.addObject = function () {\r\n                    var selected = grid.select();\r\n                    for (var i = 0, max = selected.length; i < max; i++) {\r\n                        var item = grid.dataItem(selected[i]);\r\n                        if (item) grid2Funcs.addItem(item);\r\n                    }\r\n\r\n                    //var item = grid.dataItem(grid.select());\r\n                    //if (item) grid2Funcs.addItem(item);\r\n                }\r\n                this.removeObject = function () {\r\n                    //grid2.removeRow(grid2.select());\r\n                    var selected = grid2.select();\r\n                    for (var i = 0, max = selected.length; i < max; i++) {\r\n                        grid2.removeRow(selected[i]);\r\n                    }\r\n                }\r\n                this.search = function () {\r\n                    var ele = html.find('[data-objectpicker-action-value=\"search\"]');\r\n                    searchText = (ele) ? ele.val() : \"\";\r\n                    grid.dataSource.read();\r\n\r\n                    //used on RelatesToWorkItem relatinship, exclude current workitem from list\r\n                    if (!_.isUndefined(filter) && !_.isNull(filter)) {\r\n                        grid.dataSource.filter(filter);\r\n                    }\r\n                    grid.dataSource.page(1);\r\n                }\r\n                this.clearSearchText = function () {\r\n                    html.find('[data-objectpicker-action-value=\"search\"]').val('');\r\n                    searchText = \"\";\r\n                }\r\n            })();\r\n            self.actions = actions;\r\n\r\n            var gridFuncs = new (function () {\r\n                this.searchFilter = function () {\r\n                    return { searchFilter: searchText, classId: comboFuncs.getIdValue, columnNames: columnNames };\r\n                }\r\n                this.onChange = function () {\r\n\r\n                }\r\n                this.onDataBound = function () {\r\n                    if (grid.dataSource.totalPages() == 1) {\r\n                        grid.pager.element.hide();\r\n                    }\r\n                }\r\n                this.clear = function () {\r\n                    self.grid.dataSource.data([]);\r\n                    while (outObjs.length != 0) {\r\n                        $.each(self.grid2.items(), function (ii, iitem) {\r\n                            self.grid2.removeRow(iitem)\r\n                        });\r\n                    }\r\n                }\r\n                this.dblClick = function () {\r\n                    // $(this) add to grid 2\r\n                    grid2Funcs.addItem(grid.dataItem($(this)));\r\n                }\r\n                \r\n            })();\r\n            self.gridFunctions = gridFuncs;\r\n\r\n            var grid2Funcs = new (function () {\r\n                this.addItem = function (item) {\r\n                    var a = true;\r\n                    $.each(outObjs, function (i, itm) {\r\n                        if (item.uid == itm.uid) {\r\n                            a = false;\r\n                        }\r\n                    })\r\n                    if (a) outObjs.push(item);\r\n                }\r\n            })();\r\n\r\n            var comboFuncs = new (function () {\r\n                this.getIdValue = function () {\r\n                    var item1 = self.combo.value();\r\n                    return !_.isNull(item1) ? item1 : classId.toLowerCase();\r\n                }\r\n            })();\r\n\r\n            // METHODS\r\n            var createKendoWindow = function () {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: localization.SelectObject,\r\n                    content: null,\r\n                    width: 750,\r\n                    height: 710,\r\n                    actions: [\"Close\"],\r\n                    activate: function () {\r\n                        self.combo.value(classId.toLowerCase());\r\n                    }\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n\r\n            //combo\r\n            var createCombo = function () {\r\n                self.combo = html.find(\"[data-objectpicker-control='comboBox']\").kendoComboBox({\r\n                    \"dataSource\": {\r\n                        \"transport\": {\r\n                            \"prefix\": \"\",\r\n                            \"read\": {\r\n                                \"url\": comboUrl,\r\n                                \"data\": { classId: classId }\r\n                            }\r\n                        },\r\n                        \"schema\": {\r\n                            \"errors\": \"Errors\"\r\n                        }\r\n                    },\r\n                    \"dataTextField\": \"Item2\",\r\n                    \"autoBind\": true,\r\n                    \"dataValueField\": \"Item1\",\r\n                    \"filter\": \"contains\"\r\n                }).data(\"kendoComboBox\");\r\n            }\r\n\r\n            //first grid\r\n            var createGrid = function () {\r\n                var gc = html.find('[data-objectpicker-control=\"objectPickerGrid\"]');\r\n                var gridSettings = function () {\r\n                    var dataSource = {\r\n                        \"transport\": {\r\n                            \"prefix\": \"\",\r\n                            \"read\": {\r\n                                \"url\": gridUrl,\r\n                                \"data\": gridFuncs.searchFilter,\r\n                                \"type\": \"GET\",\r\n                                \"cache\": false\r\n                            }\r\n                        },\r\n                        \"pageSize\": 5,\r\n                        \"type\": \"aspnetmvc-ajax\",\r\n                        \"schema\": {\r\n                            \"data\": \"Data\",\r\n                            \"total\": \"Total\",\r\n                            \"errors\": \"Errors\",\r\n                        }\r\n                    }\r\n                    var columns = [\r\n                        {\r\n                            \"title\": \"Id\",\r\n                            \"hidden\": true,\r\n                            \"field\": \"Id\",\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.DisplayName,\r\n                            \"attributes\": {\r\n                                \"class\": \"grid-highlight-column\"\r\n                            },\r\n                            \"field\": \"DisplayName\",\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Class,\r\n                            \"field\": \"FullClassName\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Path,\r\n                            \"field\": \"Path\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }\r\n                    ];\r\n                    var userClassId = \"10a7f898-e672-ccf3-8881-360bfb6a8f9a\";\r\n                    var userColumns = [\r\n                       {\r\n                           \"title\": localization.FirstName,\r\n                           \"attributes\": {\r\n                               \"class\": \"grid-highlight-column\"\r\n                           },\r\n                           \"field\": \"FirstName\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }, {\r\n                           \"title\": localization.LastName,\r\n                           \"attributes\": {\r\n                               \"class\": \"grid-highlight-column\"\r\n                           },\r\n                           \"field\": \"LastName\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }, {\r\n                           \"title\": localization.Title,\r\n                           \"field\": \"Title\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }, {\r\n                           \"title\": localization.UserName,\r\n                           \"field\": \"UserName\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       },{\r\n                           \"title\": localization.Domain,\r\n                           \"field\": \"Domain\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       },{\r\n                           \"title\": localization.Company,\r\n                           \"field\": \"Company\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }\r\n                    ];\r\n                    //use this column options for Send Email recipient selection to show user email\r\n                    var userMailColumns = [\r\n                        {\r\n                            \"title\": localization.FirstName,\r\n                            \"attributes\": {\r\n                                \"class\": \"grid-highlight-column\"\r\n                            },\r\n                            \"field\": \"FirstName\",\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.LastName,\r\n                            \"attributes\": {\r\n                                \"class\": \"grid-highlight-column\"\r\n                            },\r\n                            \"field\": \"LastName\",\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Email,\r\n                            \"field\": \"Email\",\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.DisplayName,\r\n                            \"field\": \"DisplayName\",\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }\r\n                    ];\r\n                    return {\r\n                        \"columns\": (isMailRecipient) ? userMailColumns : (classId.toLowerCase() == userClassId) ? userColumns : columns,\r\n                        \"sortable\": {\r\n                            \"mode\": \"multiple\"\r\n                        },\r\n                        \"selectable\": \"Multiple, Row\",\r\n                        \"filterable\": {\r\n                            \"operators\": {\r\n                                \"string\": {\r\n                                    \"startswith\": localization.Startswith,\r\n                                    \"contains\": localization.Contains,\r\n                                    \"eq\": localization.Isequalto,\r\n                                    \"neq\": localization.Isnotequalto\r\n                                }\r\n                            }\r\n                        },\r\n                        \"columnMenu\": false,\r\n                        \"autoBind\": false,\r\n                        \"dataSource\": dataSource,\r\n                        \"pageable\": true\r\n                    }\r\n                }\r\n                grid = gc.kendoGrid(gridSettings()).data(\"kendoGrid\");\r\n                gridFuncs.onDataBound();\r\n                gc.on(\"dblclick\", \"tbody>tr\", gridFuncs.dblClick);\r\n                self.grid = grid;\r\n            }\r\n\r\n            //second grid\r\n            var createGrid2 = function () {\r\n                var gc = html.find('[data-objectpicker-control=\"objectPickerGrid2\"]');\r\n                var dataSource = {\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": \"\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": 5,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    data: {\r\n                        Data: outObjs,\r\n                        Total: outObjs.length\r\n                    },\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                    }\r\n                }\r\n                var columns = [\r\n                        {\r\n                            \"title\": \"Id\",\r\n                            \"hidden\": true,\r\n                            \"field\": \"Id\",\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.DisplayName,\r\n                            \"attributes\": {\r\n                                \"class\": \"grid-highlight-column\"\r\n                            },\r\n                            \"field\": \"DisplayName\",\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Class,\r\n                            \"field\": \"FullClassName\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Path,\r\n                            \"field\": \"Path\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }\r\n                ];\r\n                var userClassId = \"10a7f898-e672-ccf3-8881-360bfb6a8f9a\";\r\n                var userColumns = [\r\n                   {\r\n                       \"title\": localization.FirstName,\r\n                       \"attributes\": {\r\n                           \"class\": \"grid-highlight-column\"\r\n                       },\r\n                       \"field\": \"FirstName\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.LastName,\r\n                       \"attributes\": {\r\n                           \"class\": \"grid-highlight-column\"\r\n                       },\r\n                       \"field\": \"LastName\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.Title,\r\n                       \"field\": \"Title\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.UserName,\r\n                       \"field\": \"UserName\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.Domain,\r\n                       \"field\": \"Domain\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.Company,\r\n                       \"field\": \"Company\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }\r\n                ];\r\n                //use this column options for Send Email recipient selection to show user email\r\n                var userMailColumns = [\r\n                    {\r\n                        \"title\": localization.FirstName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"field\": \"FirstName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.LastName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"field\": \"LastName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Email,\r\n                        \"field\": \"Email\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.DisplayName,\r\n                        \"field\": \"DisplayName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }\r\n                ];\r\n                grid2 = gc.kendoGrid({\r\n                    \"columns\": (isMailRecipient) ? userMailColumns : (classId.toLowerCase() == userClassId) ? userColumns : columns,\r\n                    \"pageable\": true,\r\n                    \"dataSource\": dataSource,\r\n                    \"selectable\": \"Multiple, Row\",\r\n                    \"filterable\": {\r\n                        \"operators\": {\r\n                            \"string\": {\r\n                                \"startswith\": localization.Startswith,\r\n                                \"contains\": localization.contains,\r\n                                \"eq\": localization.Isequalto,\r\n                                \"neq\": localization.Isnotequalto\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    \"columnMenu\": false\r\n                }).data(\"kendoGrid\");\r\n\r\n                self.grid2 = grid2;\r\n            }\r\n\r\n            //bind events\r\n            var bindEvents = function () {\r\n                html.find('[data-objectpicker-action]').each(function (i, ele) {\r\n                    var action = $(this).attr('data-objectpicker-action');\r\n                    var nd = ele.nodeName.toLowerCase();\r\n                    if (!actions[action]) { app.lib.exception(\"The method action.\" + action + \" does not exist\"); }\r\n                    if ((nd == \"input\" && $(this).attr(\"type\").toLowerCase() == \"text\") || nd == \"textarea\") {\r\n                        $(this).bind('enter', actions[action]);\r\n                    } else {\r\n                        $(this).click(actions[action]);\r\n                    }\r\n                });\r\n            }\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        __construct();\r\n\r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/flyout/fileAttachmentsFlyout/mobile_view.html',[],function () { return '<div class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div>\\r\\n                <div class=\"fileattachment-list\"></div>\\r\\n                <div class=\"fileattachment-img-modal\"></div>\\r\\n            </div>\\r\\n\\r\\n            <script type=\"text/x-kendo-template\" id=\"filesTemplate\">\\r\\n                <div class=\"thumbnail-file\">\\r\\n                    <div class=\"cursor-pointer thumbnail-img\">\\r\\n                        # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                        <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                        # } else{ #\\r\\n                        <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                        # } #\\r\\n                    </div>\\r\\n                    <div class=\"thumbnail-caption\">\\r\\n                        <span>#: DisplayName #</span>\\r\\n                        <div class=\"overlay\">\\r\\n                            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"View Image\" action=\"view\">\\r\\n                                    <i class=\"fa fa-eye\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"Open in New Tab\" action=\"opennewtab\">\\r\\n                                    <i class=\"fa fa-external-link\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                            # } #\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"Download\" action=\"download\">\\r\\n                                    <i class=\"fa fa-download\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </script>\\r\\n            <script>\\r\\n                function selectFile(el, action) {\\r\\n                    //var listView = $(\".fileattachment-list\").data(\"kendoListView\");\\r\\n                    //var item = $(el).closest(\"[role=\\'option\\']\");\\r\\n                    //var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\\r\\n\\r\\n                    //if (action === \"download\") {\\r\\n                    //    var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\\r\\n                    //    location.href = downloadUrl + dataItem.BaseId;\\r\\n                    //} else if (action === \"opennewtab\") {\\r\\n                    //    var win = window.open(\\'about:blank\\');\\r\\n                    //    setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\\r\\n                    //        win.document.body.appendChild(win.document.createElement(\\'img\\')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\\r\\n                    //        win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\\r\\n                    //        win.focus();\\r\\n                    //    }, 0);\\r\\n\\r\\n\\r\\n                    //} else {\\r\\n                    //    var dialog = $(\\'.fileattachment-img-modal\\');\\r\\n                    //    dialog.kendoDialog({\\r\\n                    //        modal: true,\\r\\n                    //        title: dataItem.DisplayName,\\r\\n                    //        content: \"<div class=\\'file-img-container\\'><img src=\\\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\\\" onerror=\\\\\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\\\\\" alt=\\\\\"\" + dataItem.DisplayName + \"\\\\\" /></div>\",\\r\\n                    //        animation: {\\r\\n                    //            open: {\\r\\n                    //                effects: \"fade:in\"\\r\\n                    //            }\\r\\n                    //        }\\r\\n                    //    });\\r\\n                    //    $(\\'.k-window.k-widget\\').addClass(\\'acivity-popup-window\\');\\r\\n                    //    dialog.data(\"kendoDialog\").open();\\r\\n                    //}\\r\\n                }\\r\\n\\r\\n            </script>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }, visible: saveCancelBtn\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }, visible: saveCancelBtn\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel}, visible: closeBtn \">\\r\\n                <%= localization.Close %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/flyout/fileAttachmentsFlyout/view.html',[],function () { return '<div tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\">\\r\\n    <div class=\"modal-dialog\">\\r\\n        <div class=\"modal-content\">\\r\\n            <div class=\"modal-header\">\\r\\n                <h4 class=\"modal-title\"><%= localization.FileAttachments %></h4>\\r\\n            </div>\\r\\n            <div class=\"modal-body\">\\r\\n                <div>\\r\\n                    <div class=\"fileattachment-list\"></div>\\r\\n                    <div class=\"fileattachment-img-modal\"></div>\\r\\n                </div>\\r\\n\\r\\n                <script type=\"text/x-kendo-template\" id=\"filesTemplate\">\\r\\n                    <div class=\"thumbnail-file\">\\r\\n                        <div class=\"cursor-pointer thumbnail-img\">\\r\\n                            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                            <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                            # } else{ #\\r\\n                            <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" action=\"download\" onerror=\"    this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                            # } #\\r\\n                        </div>\\r\\n                        <div class=\"thumbnail-caption\">\\r\\n                            <span>#: DisplayName #</span>\\r\\n                            <div class=\"overlay\">\\r\\n                                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" view-image action=\"view\" title=\"View Image\">\\r\\n                                        <i class=\"fa fa-eye\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" title=\"Open in New Tab\" action=\"opennewtab\">\\r\\n                                        <i class=\"fa fa-external-link\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                # } #\\r\\n                                # if (BaseId!=null) { #\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" title=\"Download\" action=\"download\">\\r\\n                                        <i class=\"fa fa-download\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                # } #\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </script>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"modal-footer\">\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-primary\"\\r\\n                        data-bind=\"events: { click: save }, visible: saveCancelBtn\">\\r\\n                    <%= localization.OK %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancel }, visible: saveCancelBtn\">\\r\\n                    <%= localization.Cancel %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancel}, visible: closeBtn \">\\r\\n                    <%= localization.Close %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>';});\n\n","/**\r\nfileAttachmentsFlyout\r\n**/\r\n\r\nvar __fileAttachmentsPopupSingleton;\r\n\r\ndefine('forms/flyout/fileAttachmentsFlyout/controller',['require','text!forms/flyout/fileAttachmentsFlyout/mobile_view.html','text!forms/flyout/fileAttachmentsFlyout/view.html'],function (require) {\r\n    var tpl = app.isMobile() ? require(\"text!forms/flyout/fileAttachmentsFlyout/mobile_view.html\") : require(\"text!forms/flyout/fileAttachmentsFlyout/view.html\");\r\n    var singletonName = \"fileAttachmentsFlyout\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (vm, task) {\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            $(\"body\").append(ele);\r\n            __fileAttachmentsPopupSingleton = new FileAttachmentsPopup(vm, ele, task);\r\n\r\n            return __fileAttachmentsPopupSingleton;\r\n        }\r\n    }\r\n\r\n    // CONTROL\r\n    var FileAttachmentsPopup = function (vm, targetEle, task) {\r\n        var self = this;\r\n        var html = targetEle;\r\n\r\n        var _vmWindow, win;\r\n        var loadedImages = [];\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n\r\n            if (app.isMobile()) {\r\n                win = html.kendoCiresonWindow({\r\n                    title: localization.FileAttachments,\r\n                    width: 650,\r\n                    height: 740,\r\n                    actions: []\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            _vmWindow = kendo.observable({\r\n                save: function () {\r\n\r\n\r\n                    app.lib.mask.apply();\r\n                    _.defer(function () {\r\n                        _.each(_vmWindow.selectedFiles, function (fileItem) {\r\n                            //If selected file is not image.\r\n                            if (fileItem.Content.data == null)\r\n                            {\r\n                                app.lib.mask.remove();\r\n                                return;\r\n                            }\r\n                       \r\n                                //This will load the actual image size from the server.\r\n                                var listExist = _.filter(loadedImages, function (item) { return item.id == fileItem.BaseId });\r\n                                if (listExist.length <= 0) {\r\n                                    $.ajax({\r\n                                        type: \"GET\",\r\n                                        async: false,\r\n                                        url: \"/FileAttachment/GetFileContent/\",\r\n                                        data: { id: fileItem.BaseId }\r\n                                    }).then(function (data) {\r\n                                        if (data != \"\") {\r\n                                            loadedImages.unshift({ id: fileItem.BaseId, img: data });\r\n                                            fileItem.Content.data = data;\r\n                                        }\r\n                                        app.lib.mask.remove();\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    app.lib.mask.remove();\r\n                                }\r\n\r\n                        \r\n                        \r\n                        });\r\n                    });\r\n\r\n                    \r\n                    \r\n\r\n                    $(self).trigger(\"save\", { selectedFiles: _vmWindow.selectedFiles });\r\n                    _vmWindow.closeModal();\r\n                },\r\n                cancel: function() {\r\n                    $(self).trigger(\"cancel\");\r\n                    _vmWindow.closeModal();\r\n                },\r\n                isDesktopView: !app.isMobileDevice(),\r\n                isMobileView: app.isMobileDevice(),\r\n                selectedFiles: [],\r\n                onOpenFile: function(e) {\r\n                    var data = this.dataSource.view();\r\n\r\n                    _vmWindow.selectedFiles = $.map(this.select(),\r\n                        function(item) {\r\n                            return data[$(item).index()];\r\n                        });\r\n                },\r\n                saveCancelBtn: (task),\r\n                closeBtn: (!task),\r\n                openModal: function () {\r\n                    if (!app.isMobile())\r\n                        html.modal('show');\r\n                    else {\r\n                        html.removeClass('hide');\r\n                        html.show();\r\n                        win.open();\r\n                    }\r\n                },\r\n                closeModal: function() {\r\n                    if (app.isMobile())\r\n                        win.close();\r\n                    else\r\n                        html.modal('hide');\r\n                },\r\n                selectFile: function (el, isImage) {\r\n                    \r\n                    var listView = html.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                    var item = el.closest(\"[role='option']\");\r\n                    var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n\r\n                    if (isImage && task == \"sendEmail\") return;\r\n\r\n                    action = el.attr(\"action\");\r\n                    if (action === \"download\") {\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        location.href = downloadUrl + dataItem.BaseId;\r\n                    } else {\r\n                        function openFile() {\r\n                            app.lib.mask.remove();\r\n                            if (action === \"opennewtab\") {\r\n                                var win = window.open('about:blank');\r\n                                setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                                    win.document.body.appendChild(win.document.createElement('img')).src = \"data:image/jpg;base64,\" + dataItem.Content.data;\r\n                                    win.href = \"data:image/jpg;base64,\" + dataItem.Content.data;\r\n                                    win.focus();\r\n                                }, 0);\r\n\r\n\r\n                            } else {\r\n\r\n                                var dialog = $('.fileattachment-img-modal');\r\n\r\n                                if (dialog.length > 1) {\r\n                                    for (var i = 1; i < dialog.length; i++) {\r\n                                        if ($(dialog[i]).data(\"kendoDialog\"))\r\n                                            $(dialog[i]).data(\"kendoDialog\").destroy();\r\n                                        dialog.eq(i).remove();\r\n                                    }\r\n                                }\r\n\r\n                                if (dataItem) {\r\n\r\n                                    var dialogs = $('.acivity-popup-window');\r\n                                    if (dialogs.length > 1) {\r\n                                        for (var i = 1; i < dialogs.length; i++) {\r\n                                            dialogs.eq(i).remove();\r\n                                        }\r\n                                    }\r\n\r\n                                    dialog.kendoDialog({\r\n                                        modal: true,\r\n                                        title: dataItem.DisplayName,\r\n                                        content: \"<div class='file-img-container'><img src=\\\"data:image/jpg;base64,\" +\r\n                                            dataItem.Content.data +\r\n                                            \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" +\r\n                                            dataItem.DisplayName +\r\n                                            \"\\\" /></div>\",\r\n                                        animation: {\r\n                                            open: {\r\n                                                effects: \"fade:in\"\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    \r\n                                    dialog.data(\"kendoDialog\").open();\r\n\r\n                                    //close preview window on overlay click\r\n                                    $('.k-overlay').on(\"click\", function () {\r\n                                        dialog.data(\"kendoDialog\").close();\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n\r\n\r\n                        app.lib.mask.apply();\r\n                        _.defer(function () {\r\n                            //This will load the actual image size from the server.\r\n                            var listExist = _.filter(loadedImages, function (item) { return item.id == dataItem.BaseId });\r\n                            if (listExist.length <= 0) {\r\n                                $.ajax({\r\n                                    type: \"GET\",\r\n                                    async: false,\r\n                                    url: \"/FileAttachment/GetFileContent/\",\r\n                                    data: { id: dataItem.BaseId }\r\n                                }).then(function (data) {\r\n                                    if (data == \"\") {\r\n                                        openFile();\r\n                                    }\r\n                                    else {\r\n                                        loadedImages.unshift({ id: dataItem.BaseId, img: data });\r\n                                        dataItem.Content.data = data;\r\n                                        openFile();\r\n                                    }\r\n                                });\r\n                            }\r\n                            else {\r\n                                openFile();\r\n                            }\r\n                        });\r\n                        \r\n                        \r\n                    }\r\n\r\n                    \r\n                    \r\n                }\r\n            });\r\n            kendo.bind(html, _vmWindow);\r\n\r\n            if (!app.isMobile()) {\r\n\r\n                html.on('shown.bs.modal',\r\n                    function() {\r\n                        //reposition modal backdrop\r\n                        $('.modal-backdrop').each(function(i, obj) {\r\n                            html.before(obj);\r\n                        });\r\n\r\n                        //remove modal focus so tools with popup would work\r\n                        $(document).off('focusin.modal');\r\n                    });\r\n\r\n                html.on('hidden.bs.modal',\r\n                    function() {\r\n                        $('.modal-backdrop').remove();\r\n                    });\r\n\r\n            }\r\n\r\n            self.open = _vmWindow.openModal;\r\n            self.close = _vmWindow.closeModal;\r\n            self.vm = _vmWindow;\r\n\r\n            html.find(\".fileattachment-list\").kendoListView({\r\n                dataSource: vm.viewModel.FileAttachment,\r\n                template: kendo.template($(\"#filesTemplate\").html()),\r\n                selectable: (task) ? \"multiple\" : \"single\",\r\n                change: _vmWindow.onOpenFile,\r\n                dataBound: function () {\r\n                    //Remove view image icon if from send email.\r\n                    if (task == undefined && task != \"sendEmail\") {\r\n                        html.find(\"a[view-image]\").parent().hide();\r\n                    }\r\n\r\n                    html.find(\".custom-click\").on(\"click\", function () {\r\n                        _vmWindow.selectFile($(this), false);\r\n                    });\r\n\r\n                    if (!app.isMobile()) {\r\n                        html.find(\".thumbnail-img img\").on(\"click\", function () {\r\n                            _vmWindow.selectFile($(this), true);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        __construct();\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/*global _, $, app, atob, console, define, document, jQuery, kendo, localization, location, navigator, pageForm, session, setTimeout, window, ArrayBuffer, Blob, FormData, Image, Uint8Array, shown */\r\n/*eslint no-console: [\"error\", { allow: [\"log\", \"warn\", \"error\"] }] */\r\n\r\n/**\r\n * Send Email Task Controller\r\n * @module sendEmailController\r\n */\r\ndefine('CustomSpace/Scripts/forms/tasks/sendEmail/controller',[\r\n  'text!forms/tasks/anchor/view.html',\r\n  'text!forms/tasks/sendEmail/mobile_view.html',\r\n  'text!forms/tasks/sendEmail/view.html',\r\n  'forms/popups/userPickerPopup/controller',\r\n  'forms/popups/multipleObjectPickerPopup/controller',\r\n  'forms/flyout/fileAttachmentsFlyout/controller',\r\n  'forms/fields/enum/controller',\r\n  'forms/fields/longstring/controller',\r\n], function (\r\n  anchor,\r\n  mobileTemplate,\r\n  desktopTemplate,\r\n  objectPickerPopup,\r\n  _objectPickerPopup,\r\n  attachmentPickerFlyout,\r\n  enumPickerControl,\r\n  txtAreaControl\r\n) {\r\n    'use strict';\r\n    //we only need the achor template for this task\r\n    //var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    //var tpl = app.isMobile() ?  require(\"text!forms/tasks/sendEmail/mobile_view.html\") : require(\"text!forms/tasks/sendEmail/view.html\");\r\n    //var objectPickerPopup = require(\"forms/popups/userPickerPopup/controller\");\r\n    //var _objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\r\n    //var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n    //var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n    //var txtAreaControl = require(\"forms/fields/longstring/controller\");\r\n    var tpl = app.isMobile() ?  mobileTemplate : desktopTemplate;\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        /**\r\n         * Build Send Email Task\r\n         */\r\n        build: function (vm, node, callback) {\r\n\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            var filter = {};\r\n            var recipientList = {\r\n                recipientToList: [],\r\n                recipientCCList: [],\r\n            };\r\n            var statusModalWindowControl = null;\r\n            var shown = false;\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            view.destroy();//there is some issue with the cloned element if we don't destroy the view\r\n            //this view Model is bound to the anchor element\r\n            var viewModel = kendo.observable({\r\n                /**\r\n                 * Send Email Task initialization script\r\n                 */\r\n                sendEmail: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n\r\n                    if (app.isMobile()) {\r\n                        var win = cont.kendoCiresonWindow({\r\n                            title: localization.SendEmail,\r\n                            width: 650,\r\n                            height: 740,\r\n                            actions: [],\r\n                            /**\r\n                             * Activate Send Email popup\r\n                             */\r\n                            activate: function () {\r\n                                getAffectedUserEmail(_vmWindow);\r\n                                setDefaultWIStatus(_vmWindow);\r\n                            },\r\n                        }).data(\"kendoWindow\");\r\n                    }\r\n\r\n\r\n\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        emailTo: \"\",\r\n                        emailCC: \"\",\r\n                        emailSubject: \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title,\r\n                        emailHTMLMessage: (session.emailBodyTemplate.length > 0) ? $('<div/>').html(session.emailBodyTemplate).text() : \"\",\r\n                        emailTextMessage:\"\",\r\n                        emailAttachment: \"\",\r\n                        emailTemplateDataSource: tempateDataSource,\r\n                        emailTemplateValue: \"\",\r\n                        attachmentErrorMessage: \"\",\r\n                        addToLog: (session.addToActionLogDefault === \"true\" || session.forceAddToActionLog === \"true\") ? true : false,\r\n                        enableAddToLog: (session.forceAddToActionLog === \"true\") ? false : true,\r\n                        okEnabled: true,\r\n                        setAsPrivate: (session.saveMessageAsPrivate === \"true\") ? true : false,\r\n                        /**\r\n                         * OK On Click Event Handler\r\n                         */\r\n                        okClick: function (e) {\r\n                            var userPickerTo = cont.find(\"#userPickerTo\").data(\"kendoMultiSelect\"),\r\n                                userPickerCc = cont.find(\"#userPickerCc\").data(\"kendoMultiSelect\"),\r\n                                recipientList = {\r\n                                  recipientToList : userPickerTo.listView._dataItems,\r\n                                  recipientCCList : userPickerCc.listView._dataItems,\r\n                                };\r\n\r\n                            var recipientToEmail = _.without(recipientList[\"recipientToList\"], _.findWhere(recipientList[\"recipientToList\"], {\r\n                                Email: \"\",\r\n                            }));\r\n                            recipientToEmail = _.uniq(_.pluck(recipientToEmail, \"Email\"));\r\n                            _vmWindow.set(\"emailTo\", recipientToEmail.join(\";\"));\r\n\r\n                            var recipientCcEmail = _.without(recipientList[\"recipientCCList\"], _.findWhere(recipientList[\"recipientCCList\"], {\r\n                                Email: \"\",\r\n                            }));\r\n                            recipientCcEmail = _.uniq(_.pluck(recipientCcEmail, \"Email\"));\r\n                            _vmWindow.set(\"emailCC\", recipientCcEmail.join(\";\"));\r\n\r\n\r\n                            //validate email addresses first\r\n                            var arrEmail = _.union(recipientToEmail, recipientCcEmail);\r\n                            if (recipientToEmail.length <= 0) {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.InvalidEmailAddress,\r\n                                    message: localization.PleaseProvideEmailAddress,\r\n                                });\r\n                                return;\r\n                            }\r\n                            else {\r\n                                var invalidEmailAdress = validateEmailAddress(arrEmail);\r\n\r\n                                if (invalidEmailAdress != null) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.InvalidEmailAddress,\r\n                                        message: localization.InvalidEmailAddressMessage.replace(\"{0}\", invalidEmailAdress),\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            //if we are adding to action log we require there to be message content\r\n                            if (this.addToLog) {\r\n                                var editor = cont.find(\"#messageEditor\").data(\"kendoEditor\");\r\n                                this.set(\"emailTextMessage\", editor.body.innerText || editor.body.textContent);\r\n\r\n                                var trimmedMessage = (this.emailTextMessage && _.isString(this.emailTextMessage)) ? this.emailTextMessage.trim() : \"\";\r\n\r\n                                if (trimmedMessage.length <= 0) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.MessageRequired,\r\n                                        message: localization.MessageRequiredWhenAddingLogEntry,\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var workItemStatuses = app.constants.workItemStatuses;\r\n                            var serviceRequestCompleted = workItemStatuses.ServiceRequest.Completed;\r\n                            var incidentResolved = workItemStatuses.Incident.Resolved;\r\n\r\n                            //This will only created if the the Incident is set to resolve or Service Request is set to completed\r\n                            if (((vm.type.toLowerCase() == \"incident\" || node.Configs.type == \"Incident\") && (_vmWindow.Status.id == incidentResolved || _vmWindow.Status.Id == incidentResolved))\r\n                                || ((vm.type.toLowerCase() == \"servicerequest\" || node.Configs.type == \"ServiceRequest\") && (_vmWindow.Status.id == serviceRequestCompleted || _vmWindow.Status.Id == serviceRequestCompleted)))\r\n                            {\r\n                                var statusWindow = cont.find(\"#SendEmailChangeStatusWindow\").clone();\r\n                                var _vm = vm.viewModel;\r\n                                var implementationNotesProperties, resolutionProperties, dateField;\r\n\r\n                                if (vm.type.toLowerCase() == \"incident\" || node.Configs.type == \"Incident\")\r\n                                {\r\n                                     implementationNotesProperties = {\r\n                                        PropertyName: \"ResolutionDescription\",\r\n                                        PropertyDisplayName: \"ResolutionDescription\",\r\n                                        Required: false,\r\n                                        MaxLength: 4000,\r\n                                        Rows: 5,\r\n                                        vm: vm,\r\n                                    };\r\n\r\n                                    resolutionProperties = {\r\n                                        PropertyName: \"ResolutionCategory\",\r\n                                        PropertyDisplayName: \"ResolutionCategory\",\r\n                                        Required: false,\r\n                                        EnumId: \"72674491-02cb-1d90-a48f-1b269eb83602\",\r\n                                    };\r\n\r\n                                    dateField = \"ResolvedDate\";\r\n                                }\r\n\r\n                                if (vm.type.toLowerCase() == \"servicerequest\" || node.Configs.type == \"ServiceRequest\") {\r\n                                    implementationNotesProperties = {\r\n                                        PropertyName: \"Notes\",\r\n                                        PropertyDisplayName: \"Implementationnotes\",\r\n                                        Required: true,\r\n                                        MaxLength: 4000,\r\n                                        Rows: 5,\r\n                                        vm: vm,\r\n                                    };\r\n\r\n                                    resolutionProperties = {\r\n                                        PropertyName: \"ImplementationResults\",\r\n                                        PropertyDisplayName: \"ImplementationResults\",\r\n                                        Required: false,\r\n                                        EnumId: \"4ea37c27-9b24-615a-94da-510539371f4c\",\r\n                                    };\r\n\r\n                                    dateField = \"CompletedDate\";\r\n                                }\r\n\r\n                                var containerDescription = statusWindow.find(\"#resolutionDescription\");\r\n\r\n                                txtAreaControl.build(_vm, implementationNotesProperties, function (cbTxtAreaControl) {\r\n                                    containerDescription.html(cbTxtAreaControl);\r\n                                    app.controls.apply(containerDescription, {\r\n                                        localize: true,\r\n                                        vm: _vm,\r\n                                        bind: true,\r\n                                    });\r\n                                });\r\n\r\n                                var containerEnum = statusWindow.find(\"#resolutionPicker\");\r\n\r\n                                enumPickerControl.build(_vm, resolutionProperties, function (enumControl) {\r\n                                    containerEnum.html(enumControl);\r\n                                    app.controls.apply(containerEnum, {\r\n                                        localize: true,\r\n                                        vm: _vm,\r\n                                        bind: true,\r\n                                    });\r\n                                });\r\n\r\n                                statusModalWindowControl = statusWindow.kendoCiresonWindow({\r\n                                    title: localization.Resolution,\r\n                                    width: 600,\r\n                                    height: 480,\r\n                                    actions: [],\r\n                                    /**\r\n                                     * Activate trigger when window open animation is complete.\r\n                                     */\r\n                                    activate: function () {\r\n\r\n                                    },\r\n                                }).data(\"kendoWindow\");\r\n\r\n                                var ths = this;\r\n                                statusWindow.find(\"#statusOk\").click(function () {\r\n                                    vm.viewModel[dateField] = new Date().toISOString();\r\n                                    statusModalWindowControl.close();\r\n                                    statusWindow.remove();\r\n\r\n                                    //send email\r\n                                    kendo.ui.progress(cont, true);\r\n                                    sendEmail(ths, cont);\r\n                                });\r\n\r\n                                statusWindow.find(\"#statusCancel\").click(function () {\r\n                                    statusModalWindowControl.close();\r\n                                    statusWindow.remove();\r\n                                });\r\n\r\n                                statusModalWindowControl.open();\r\n                            }\r\n                            else {\r\n                                //send email\r\n                                kendo.ui.progress(cont, true);\r\n                                sendEmail(this, cont);\r\n                            }\r\n\r\n                        },\r\n                        /**\r\n                         * Cancel Click Event Handler\r\n                         */\r\n                        cancelClick: function (e) {\r\n                            console.log('cancelClick', e);\r\n                            if (app.isMobile()) {\r\n                                win.close();\r\n                            } else {\r\n                                $.when(kendo.ui.ExtOkCancelDialog.show({\r\n                                    title: localization.Warning,\r\n                                    message: localization.UnsavedDataMessage,\r\n                                    icon: \"fa fa-exclamation\",\r\n                                })\r\n                                   ).done(function (response) {\r\n                                       if (response.button === \"ok\") {\r\n                                           if (vm.widget)\r\n                                               vm.widget.remoteManageRecepient = null;\r\n                                           shown = false;\r\n                                           cont.modal('hide');\r\n                                       }\r\n                                   });\r\n                            }\r\n                        },\r\n                        /**\r\n                         * Email Template Change Event Handler\r\n                         */\r\n                        emailTemplateChange: function (e) {\r\n                            var filter = {\r\n                                field: \"Id\",\r\n                                operator: \"eq\",\r\n                                value: e.sender._old, //_old stores the selected value's id\r\n                            };\r\n                            tempateDataSource.filter(filter);\r\n\r\n                            var dView = tempateDataSource.view();\r\n                            var subject = (dView.length > 0 && dView[0].Subject.replace(/\\s/g, '').length > 0) ? \"[\" + vm.viewModel.Id + \"] \" + dView[0].Subject : \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title;\r\n                            var content = (dView.length > 0 && dView[0].Content.replace(/\\s/g, '').length > 0) ? dView[0].Content : \"\";\r\n\r\n                            content = cont.find(\"#messageEditor\").html(content).text();\r\n\r\n                            //change new line (\\n) to line break (<br>) on non-html template only\r\n                            if (!content.match(/<(\\w+)((?:\\s+\\w+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/)) {\r\n                                content = cont.find(\"#messageEditor\").html(content).text().replace(/\\r\\n|\\r|\\n/g, \"<br />\");\r\n                            }\r\n\r\n                            this.set(\"emailSubject\", subject);\r\n                            this.set(\"emailHTMLMessage\", content);\r\n\r\n                            tempateDataSource.filter({});\r\n                        },\r\n                        /**\r\n                         * Resize Editor Event Handler\r\n                         */\r\n                        resizeEditor: function (e) {\r\n                            e.preventDefault();\r\n\r\n                            var $this = $(e.currentTarget);\r\n\r\n                            if ($this.children('i').hasClass('fa-expand')) {\r\n                                $this.children('i').removeClass('fa-expand');\r\n                                $this.children('i').addClass('fa-compress');\r\n                            }\r\n                            else if ($this.children('i').hasClass('fa-compress')) {\r\n                                $this.children('i').removeClass('fa-compress');\r\n                                $this.children('i').addClass('fa-expand');\r\n                            }\r\n                            $('#EmailNotificationWindow').find('table.k-editor').toggleClass('editor-expanded');\r\n                        },\r\n                        showChangeStatus: (vm.type === \"Incident\"),\r\n                        changeStatus: false,\r\n                        sendEmailAttachments: [],\r\n                        fromWorkItemAttachementsId: [],\r\n                        setFirstResponseDate: (_.isNull(vm.viewModel.FirstResponseDate)) ? true : false,\r\n                        enableFirstResponseDate: (_.isNull(vm.viewModel.FirstResponseDate)) ? true : false,\r\n                        /**\r\n                         * Open Popup Event Handler\r\n                         */\r\n                        openPopup: function (e) {\r\n                            console.log('openPopup', e);\r\n                            var filter = [{\r\n                                logic: \"and\",\r\n                                filters: [\r\n                                    { field: \"Email\", operator: \"neq\", value: '' },\r\n                                    { field: \"Email\", operator: \"neq\", value: null },\r\n                                ],\r\n                            }];\r\n                            var popupWindow = _objectPickerPopup.getPopup('3567434d-015f-8dcc-f188-0a407f3a2168', null, null, filter, null, true);\r\n                            popupWindow.setSaveCallback(function (object) {\r\n                                console.log('setSaveCallback', object);\r\n                                var recipientType = (e.currentTarget.id === \"toField\") ? \"recipientToList\" : \"recipientCCList\";\r\n\r\n                                var picker = (e.currentTarget.id === \"toField\")\r\n                                    ? cont.find(\"#userPickerTo\").data(\"kendoMultiSelect\")\r\n                                    : cont.find(\"#userPickerCc\").data(\"kendoMultiSelect\");\r\n                                /*\r\n                                var userEmailObj = _.find(_vmWindow.users, function (item) {\r\n                                    return item.guid === object.BaseId;\r\n                                });*/\r\n                                var userEmailObj = {\r\n                                    'Email': object.Email,\r\n                                    'Id': object.Id,\r\n                                    'Name': object.DisplayName,\r\n                                };\r\n\r\n                                var isUserExist = picker.dataSource.data().find(function (element) {\r\n                                    return element.Id === userEmailObj.Id;\r\n                                });\r\n\r\n                                if (!isUserExist) {\r\n                                    var key = (recipientType.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                                    filter[key] = userEmailObj.Name;\r\n                                    picker.dataSource.add(userEmailObj);\r\n                                }\r\n\r\n                                recipientList[recipientType].push(userEmailObj);\r\n                                picker.value(_.pluck(recipientList[recipientType], \"Id\"));\r\n                            });\r\n                            popupWindow.open();\r\n                        },\r\n                        /**\r\n                         * View Workitem Files Event Handler\r\n                         */\r\n                        viewWorkItemFiles: function() {\r\n                            var flyoutWindow = attachmentPickerFlyout.getPopup(vm, \"sendEmail\");\r\n                            flyoutWindow.setSaveCallback(function(data) {\r\n                                var selectedFiles = data.selectedFiles || [];\r\n                                for (var n = 0; n < selectedFiles.length; n++) {\r\n                                    _vmWindow.sendEmailAttachments.push(selectedFiles[n]);\r\n                                    _vmWindow.fromWorkItemAttachementsId.push(selectedFiles[n].BaseId);\r\n                                }\r\n                            });\r\n                            flyoutWindow.open();\r\n                        },\r\n                        filesCount: vm.viewModel.FileAttachment.length || 0,\r\n                        users: [],\r\n                        Status: { Id: \"\", Name: \"\" },\r\n                        changeStatusSetting: {\r\n                            statusTypeId: \"\",\r\n                            defaultStatusId: \"\",\r\n                            rootStatusEnumId: \"\",\r\n                            enableChangeStatus: true,\r\n                        },\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    if (!app.isMobile()) {\r\n                        cont.on('shown.bs.modal',\r\n                            function () {\r\n                                //prevent shown event from duplicate trigger\r\n                                $(this).off('shown.bs.modal');\r\n                                //prevent body from scrolling when flyout is open\r\n                                $(\"body\").addClass(\"modal-open\");\r\n                                //set to true when flyout is open\r\n                                shown = true;\r\n                                //reposition modal backdrop\r\n                                $('.modal-backdrop').each(function (i, obj) {\r\n                                    cont.before(obj);\r\n                                });\r\n                                //remove modal focus so tools with popup would work\r\n                                $(document).off('focusin.modal');\r\n\r\n                                $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n                                //set defaults\r\n                                if (!_.isUndefined(vm.widget) && vm.widget.remoteManageRecepient && vm.widget.remoteManageRecepient.BaseId != null)\r\n                                    getRemoteManageRecepient();\r\n                                else\r\n                                    getAffectedUserEmail(_vmWindow);\r\n\r\n                                getSendEmailChangeStatusSettings(_vmWindow);\r\n                                setDefaultWIStatus(_vmWindow);\r\n\r\n                                //build editor\r\n                                buildEditor(cont.find(\"#messageEditor\"), _vmWindow);\r\n\r\n                                //build uploader\r\n                                initializeUploader(cont, _vmWindow);\r\n\r\n                                //build userpicker\r\n                                initializeUserPicker(cont.find(\"#userPickerTo\"), _vmWindow, \"recipientToList\");\r\n                                initializeUserPicker(cont.find(\"#userPickerCc\"), _vmWindow, \"recipientCCList\");\r\n\r\n                                //build status picker\r\n                                initializeStatusPicker(cont.find(\"#statusPicker\"), _vmWindow);\r\n\r\n                                //apply change status rule if root enum is not specified\r\n                                if (_.isNull(_vmWindow.changeStatusSetting.rootStatusEnumId)) {\r\n                                    applyChangeStatus(cont, vm, _vmWindow);\r\n                                }\r\n\r\n                            });\r\n\r\n                        cont.on('hidden.bs.modal', function () {\r\n                            $(\"body\").removeClass(\"modal-open\");\r\n\r\n                            $('.modal-backdrop').remove();\r\n\r\n                            var toPicker = cont.find(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                            var ccPicker = cont.find(\"#userPickerCc\").data(\"kendoMultiSelect\");\r\n\r\n                            //clear userpicker values on modal close\r\n                            toPicker.value(\"\");\r\n                            ccPicker.value(\"\");\r\n\r\n                            //clear filters and recipients vars\r\n                            filter = {};\r\n                            recipientList = {\r\n                                recipientToList: [],\r\n                                recipientCCList: [],\r\n                            };\r\n                        });\r\n\r\n                        cont.on('hide.bs.modal',\r\n                            function (e) {\r\n                                if (shown && $('#extOkCancelDialog').length <= 1) {\r\n                                    _vmWindow.cancelClick(e);\r\n                                    e.preventDefault();\r\n                                    e.stopImmediatePropagation();\r\n                                    return false;\r\n                                }\r\n                            });\r\n                        /*\r\n                        $.get(\"/api/V3/User/GetUserList\",\r\n                            { fetchAll: true },\r\n                            function (data) {\r\n                                var names = $.map(data, function (value, i) {\r\n                                    return { 'id': i, 'name': value.Name, 'guid': value.Id, 'email': value.Email };\r\n                                });\r\n\r\n                                //store user data to viewmodel\r\n                                _vmWindow.users = names;\r\n                                cont.modal('show');\r\n                            });\r\n                          */\r\n                          cont.modal('show');\r\n                    } else {\r\n                        $.get(\"/api/V3/User/GetUserList\",\r\n                            { fetchAll: true },\r\n                            function(data) {\r\n                                var names = $.map(data,\r\n                                    function(value, i) {\r\n                                        return { 'id': i, 'name': value.Name, 'guid': value.Id, 'email': value.Email };\r\n                                    });\r\n\r\n                                //store user data to viewmodel\r\n                                _vmWindow.users = names;\r\n\r\n                                //build userpicker\r\n                                initializeUserPicker(cont.find(\"#userPickerTo\"), _vmWindow, \"recipientToList\");\r\n                                initializeUserPicker(cont.find(\"#userPickerCc\"), _vmWindow, \"recipientCCList\");\r\n\r\n                                //build uploader\r\n                                initializeUploader(cont, _vmWindow);\r\n\r\n                                //set status defaults\r\n                                getSendEmailChangeStatusSettings(_vmWindow);\r\n                                setDefaultWIStatus(_vmWindow);\r\n\r\n                                //build status picker\r\n                                initializeStatusPicker(cont.find(\"#statusPicker\"), _vmWindow);\r\n\r\n                                //init editor\r\n                                buildEditor(cont.find(\"#messageEditor\"), _vmWindow);\r\n\r\n                                $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n                                cont.removeClass('hide');\r\n                                cont.show();\r\n\r\n                                win.open();\r\n\r\n                            });\r\n\r\n                    }\r\n                },\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"sendEmail\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            // Add in Anchor\r\n            var anchorElm = new kendo.View(link(properties), {\r\n                wrap: false,\r\n                model: viewModel,\r\n                /**\r\n                * Add In Anchor\r\n                */\r\n                init: function (e) { },\r\n            });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var tempateDataSource = new kendo.data.DataSource({\r\n                transport: {\r\n                    read: \"/EmailNotification/GetNotificationTemplates\",\r\n                    dataType: \"json\",\r\n                },\r\n                schema: {\r\n                    model: {\r\n                        fields: {\r\n                            Id: { type: \"string\" },\r\n                            Name: { type: \"string\" },\r\n                        },\r\n                    },\r\n                },\r\n            });\r\n\r\n            /**\r\n             * Add To Comment Log Event Handler\r\n             */\r\n            var addToCommentLog = function (commentMessage,  setAsPrivate) {\r\n                var newActionLog = {\r\n                    EnteredBy: session.user.Name,\r\n                    Title: localization.EMailSent,\r\n                    IsPrivate: setAsPrivate,\r\n                    EnteredDate: new Date().toISOString(),\r\n                    LastModified: new Date().toISOString(),\r\n                    Description: commentMessage,\r\n                    DescriptionDisplay: commentMessage,\r\n                    Image: app.config.iconPath + app.config.icons[\"E-Mail Sent\"],\r\n    \t\t            ActionType: {\r\n    \t\t                Id: \"15e86d4a-1b55-01be-C9fa-660a3cb3fc26\",\r\n    \t\t                Name: \"Email Sent\",\r\n    \t\t            },\r\n                    //ActionType: { Id: \"15E86D4A-1B55-01BE-C9FA-660A3CB3FC26\", Name: \"E-Mail Sent\" }\r\n                }\r\n                if (!vm.viewModel.ActionLog) {\r\n                    vm.viewModel.ActionLog = [];\r\n                }\r\n\r\n                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                if (actionLogType) {\r\n                    vm.viewModel[actionLogType].push(newActionLog);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Save Failure Event Handler\r\n             */\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n\r\n            /**\r\n             * Get Affected User\r\n             */\r\n            var getAffectedUserEmail = function (_vmWindow) {\r\n                if (viewModel.RequestedWorkItem && viewModel.RequestedWorkItem.DisplayName != null) {\r\n                    filter['TO'] = vm.viewModel.RequestedWorkItem.DisplayName;\r\n                }\r\n                var affectedUserId = (vm.viewModel.RequestedWorkItem) ? vm.viewModel.RequestedWorkItem.BaseId : \"\";\r\n                $.ajax({\r\n                    url: \"/EmailNotification/GetffectedUserEmail\",\r\n                    type: \"GET\",\r\n                    data: { baseId: affectedUserId },\r\n                    /**\r\n                     * Get Affected User Email Success Event Handler\r\n                     */\r\n                    success: function (data, textStatus, jqXHR) {\r\n                        if (!_.isUndefined(data) && data != \"\") {\r\n                            var affectedUser = { Id: vm.viewModel.RequestedWorkItem.BaseId, Name: vm.viewModel.RequestedWorkItem.DisplayName, Email: data };\r\n                            var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                            var isUserExist = picker.dataSource.data().find(function (element) {\r\n                                return element.Id === affectedUser.Id;\r\n                            });\r\n\r\n                            //add affected user to userpicker data source if id does not exist\r\n                            if (!isUserExist) {\r\n                                picker.dataSource.add(affectedUser);\r\n                            }\r\n\r\n                            //add affected user to recipient list\r\n                            recipientList[\"recipientToList\"].push(affectedUser);\r\n\r\n                            //set userpicker value to affected user\r\n                            picker.value(affectedUser.Id);\r\n                        }\r\n                    },\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Get Remote Manage Recipient\r\n             */\r\n            var getRemoteManageRecepient = function () {\r\n                $(document).ready(function() {\r\n                    var recepient = { Id: vm.widget.remoteManageRecepient.BaseId, Name: vm.widget.remoteManageRecepient.DisplayName, Email: vm.widget.remoteManageRecepient.Email };\r\n                    filter['TO'] = recepient.DisplayName;\r\n                    var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                    var isUserExist = picker.dataSource.data().find(function (element) {\r\n                        return element.Id === recepient.Id;\r\n                    });\r\n\r\n                    //add affected user to userpicker data source if id does not exist\r\n                    if (!isUserExist) {\r\n                        picker.dataSource.add(recepient);\r\n                    }\r\n\r\n                    //add affected user to recipient list\r\n                    recipientList[\"recipientToList\"].push(recepient);\r\n\r\n                    //set userpicker value to affected user\r\n                    picker.value(recepient.Id);\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Set Default Work Item Status Event Handler\r\n             */\r\n            var setDefaultWIStatus = function (_vmWindow) {\r\n                var enumId = _vmWindow.changeStatusSetting.defaultStatusId;\r\n\r\n                if (enumId == null || enumId == \"\") {\r\n                    _vmWindow.Status.set(\"Id\", vm.viewModel.Status.Id);\r\n                    _vmWindow.Status.set(\"Name\", vm.viewModel.Status.Name);\r\n                } else {\r\n                    $.ajax({\r\n                        url: \"/api/V3/Enum/GetEnumDisplayName\",\r\n                        type: \"GET\",\r\n                        data: { id: enumId },\r\n                        async: false,\r\n                        /**\r\n                         * Get Status DisplayName Success Event Handler\r\n                         */\r\n                        success: function (data, textStatus, jqXHR) {\r\n                            _vmWindow.Status.set(\"Id\", enumId);\r\n                            _vmWindow.Status.set(\"Name\", data);\r\n                        },\r\n                    });\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Validate Email Address Handler\r\n             */\r\n            var validateEmailAddress = function (arrEmail) {\r\n                var invalidEmailAddress = null;\r\n                for (var i in arrEmail) {\r\n                    var email = arrEmail[i].trim();\r\n                    if (email == \"\") continue;\r\n                    if (app.validateEmail(email) == false) {\r\n                        invalidEmailAddress = email;\r\n                        break;\r\n                    }\r\n                }\r\n                return invalidEmailAddress;\r\n            }\r\n\r\n            /**\r\n             * Initialize Uploader\r\n             */\r\n            var initializeUploader = function (cont, _vmWindow) {\r\n                _vmWindow.set(\"sendEmailAttachments\", []);\r\n                _vmWindow.set(\"filesCount\", 0);\r\n\r\n                /**\r\n                 * File Action Event Handler\r\n                 */\r\n                var fileAction = function (el) {\r\n\r\n                    if (el.hasClass(\"opennewtab\")) {\r\n                        var win = window.open('about:blank');\r\n                        setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                            win.document.body.appendChild(win.document.createElement('img')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.focus();\r\n                        }, 0);\r\n\r\n                    }\r\n                    else {\r\n                        var dialog = $('.fileattachment-img-modal');\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        var listView = cont.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                        var item = el.closest(\"[role='option']\");\r\n                        var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n\r\n\r\n                        if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/) && !el.hasClass(\"download\")) {\r\n                            dialog.kendoDialog({\r\n                                modal: true,\r\n                                title: dataItem.DisplayName,\r\n                                content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" + dataItem.DisplayName + \"\\\" /></div>\",\r\n                                animation: {\r\n                                    open: {\r\n                                        effects: \"fade:in\",\r\n                                    },\r\n                                },\r\n                            });\r\n                            $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                            dialog.data(\"kendoDialog\").open();\r\n                        } else {\r\n                            if (!_.isNull(dataItem.BaseId)) {\r\n                                location.href = downloadUrl + dataItem.BaseId;\r\n                            } else {\r\n                                if (dataItem.Content.data) {\r\n                                    var fileName = dataItem.DisplayName;\r\n                                    var a = document.createElement(\"a\");\r\n                                    document.body.appendChild(a);\r\n                                    a.style = \"display: none\";\r\n\r\n                                    a.href = \"data:application/octet-stream;charset=utf-16le;base64,\" + dataItem.Content.data;\r\n                                    a.download = fileName;\r\n                                    a.click();\r\n                                    document.body.removeChild(a);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                cont.find(\".fileattachment-list\").kendoListView({\r\n                    dataSource: _vmWindow.sendEmailAttachments,\r\n                    template: kendo.template(cont.find(\"#fileTemplate\").html()),\r\n                    selectable: \"single\",\r\n                    /**\r\n                     * File Attachment dataBound Event Handler\r\n                     */\r\n                    dataBound: function (e) {\r\n\r\n                        cont.find(\".custom-click\").on(\"click\", function () {\r\n                            fileAction($(this));\r\n                        });\r\n\r\n                        if (!app.isMobile()) {\r\n                            //Remove view image icon if not in mobile.\r\n                            cont.find(\"a[view-image]\").parent().hide();\r\n\r\n                            cont.find(\".thumbnail-img\").on(\"click\", function () {\r\n                                fileAction($(this));\r\n                            });\r\n                        }\r\n                    },\r\n                    /**\r\n                     * File Attachment Remove Event Handler\r\n                     */\r\n                    remove: function (e) {\r\n                        //console.warn(_vmWindow)\r\n                    },\r\n                });\r\n\r\n\r\n\r\n                var uploader = cont.find(\"#email-attachment\").kendoUpload({\r\n                    async: {\r\n                        saveUrl: \"/FileAttachment/UploadAttachment/\" + vm.viewModel.BaseId + \"?className=\" + vm.viewModel.ClassName + \"&count=\" + vm.viewModel.FileAttachment.length,\r\n                        autoUpload: true,\r\n                    },\r\n                    /**\r\n                     * Upload Email Attachment Success Event Handler\r\n                     */\r\n                    success: function (e) {\r\n                        kendo.ui.progress(cont.find(\".fileattachment-list\"), true);\r\n                        var response = e.response;\r\n                        if (e.operation == \"upload\") {\r\n                            for (var i = 0; i < e.files.length; i++) {\r\n                                var file = e.files[i].rawFile;\r\n                                if (file) {\r\n                                    if (!_.isUndefined(response.FileAttachment)) {\r\n                                        _vmWindow.sendEmailAttachments.push(response.FileAttachment);\r\n                                        _vmWindow.set(\"attachmentErrorMessage\", \"\");\r\n                                        _vmWindow.set(\"okEnabled\", true);\r\n                                    } else if (!_.isUndefined(response.success) && response.success == false) {\r\n                                        _vmWindow.set(\"okEnabled\", false);\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.ErrorDescription,\r\n                                            message: response.message,\r\n                                            icon: \"fa fa-exclamation\",\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        kendo.ui.progress(cont.find(\".fileattachment-list\"), false);\r\n                    },\r\n                    /**\r\n                     * Upload Email Attachment Error Event Handler\r\n                     */\r\n                    error: function (e) {\r\n                        var err = $.parseJSON(e.XMLHttpRequest.responseText);\r\n                        $.map(e.files, function (file) {\r\n                            console.warn(\"Could not upload \" + file.name);\r\n                        });\r\n                    },\r\n                    showFileList: false,\r\n                    dropZone: \".drop-zone-element\",\r\n                }).data(\"kendoUpload\");\r\n\r\n                cont.find(\".browse-file\").click(function (e) {\r\n                    $(\"#email-attachment\").trigger(\"click\");\r\n                });\r\n\r\n\r\n            }\r\n\r\n            /**\r\n             * Initialize User Picker\r\n             */\r\n            var initializeUserPicker = function (targetEle, viewModel, targetProp) {\r\n                //skipped initialization if we already have one created\r\n                if (!_.isUndefined(targetEle.data(\"kendoMultiSelect\"))) { return; }\r\n\r\n                var targetKey = (targetEle[0].id.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                var userPicker = targetEle.kendoMultiSelect({\r\n                    placeholder: localization.Search,\r\n                    dataTextField: \"Name\",\r\n                    dataValueField: \"Id\",\r\n                    autoBind: false,\r\n                    filter: \"contains\",\r\n                    dataSource: new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/api/V3/User/GetUserListWithEmail\",\r\n                                data: {\r\n                                    filterByAnalyst: false,\r\n                                    maxNumberOfResults: 1000,\r\n                                    /**\r\n                                     * Filter Users\r\n                                     */\r\n                                    userFilter: function () {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                        serverFiltering: true,\r\n                        filter: [{ field: \"Email\", operator: \"neq\", value: \"\" }],\r\n                    }),\r\n                    /**\r\n                     * Filtering Handler\r\n                     */\r\n                    filtering: function (e) {\r\n                        if (e.filter != undefined) {\r\n                            var key = (e.sender.element[0].id.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                            filter[key] = e.filter.value;\r\n                        }\r\n                    },\r\n                    /**\r\n                     * Filtering Handler\r\n                     */\r\n                    open: function () {\r\n                        var filters = this.dataSource.filter();\r\n                        if (filters!=null) {\r\n                            //clear applied filters\r\n                            //Filter should be cleared to remove conflict with assigning the affected users.\r\n                            //this.dataSource.filter({});\r\n                        }\r\n                    },\r\n                    tagTemplate: \"<span title='#: data.Email #'>#: data.Name #;</span>\",\r\n                    /**\r\n                     * Select Event Handler\r\n                     */\r\n                    select: function (e) {\r\n                        var currentList = recipientList[targetProp];\r\n                        currentList.push(e.dataItem);\r\n                        recipientList[targetProp] = currentList;\r\n                    },\r\n                    /**\r\n                     * Deselect Event Handler\r\n                     */\r\n                    deselect: function (e) {\r\n                        var currentList = recipientList[targetProp];\r\n                        if (e.dataItem.Id) {\r\n                            currentList = _.filter(currentList,\r\n                                function(item) {\r\n                                    return item.Id !== e.dataItem.Id;\r\n                                });\r\n                        }\r\n                        recipientList[targetProp] = currentList;\r\n                    },\r\n                    clearButton: false,\r\n                }).data(\"kendoMultiSelect\");\r\n\r\n                userPicker.input.on(\"keydown\", function (e) {\r\n                    if (e.keyCode === 9) {\r\n                        //treat tab event as \"enter\"\r\n                        var e = jQuery.Event(\"keydown\");\r\n                        e.which = 13; // # Some key code value\r\n                        e.keyCode = 13;\r\n                        userPicker.input.trigger(e);\r\n                    }\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Send Email Event Handler\r\n             */\r\n            var sendEmail = function (_vmWindow, cont) {\r\n                var bChangeStatus = _vmWindow.changeStatus;\r\n                var bAddActionLog = _vmWindow.addToLog;\r\n                var addToLogSkipped = false;\r\n                var bHasAttachment = (_vmWindow.sendEmailAttachments.length > 0);\r\n                var strAttachedFileNames = (_vmWindow.sendEmailAttachments.length > 0)\r\n                    ? _.pluck(_vmWindow.sendEmailAttachments, \"DisplayName\").join('|') : \"\"; //multiple filenames, pipe delimited\r\n                var strMessage = encodeURIComponent(_vmWindow.emailHTMLMessage);\r\n                var strMessagePlain = _vmWindow.emailTextMessage;\r\n\r\n                var workItemFileIds = (_vmWindow.fromWorkItemAttachementsId.length > 0)\r\n                    ? _vmWindow.fromWorkItemAttachementsId.join(',') : \"\";\r\n\r\n\r\n                strMessage = (session.emailFooterTemplate.length > 0)\r\n                    ? strMessage + \"\\r\\n\" + encodeURIComponent($('<div/>').html(session.emailFooterTemplate).text())\r\n                    : strMessage;\r\n\r\n                var emailData = {\r\n                    To: _vmWindow.emailTo,\r\n                    Cc: _vmWindow.emailCC,\r\n                    Subject: _vmWindow.emailSubject.replace(/</g, \"%3C\").replace(/>/g, \"%3E\"),\r\n                    Message: strMessage,\r\n                    AttachedFileNames: strAttachedFileNames,\r\n                    WorkItemId: vm.viewModel.BaseId,\r\n                    workItemFileIds: workItemFileIds,\r\n                };\r\n                var sendEmailAttachments = _vmWindow.sendEmailAttachments;\r\n                var bSetFirstResponsDate = _vmWindow.setFirstResponseDate;\r\n\r\n                $.ajax({\r\n                    url: \"/EmailNotification/SendEmailNotification\",\r\n                    type: \"POST\",\r\n                    data: emailData,\r\n                    async: false,\r\n                    /**\r\n                     * Send Email Notification Success Event Handler\r\n                     */\r\n                    success: function (data, textStatus, jqXHR) {\r\n                        var bSuccess = data.toLowerCase() == \"true\" ? true : false;\r\n                        kendo.ui.progress(cont, false);\r\n                        if (bSuccess) {\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.SendEmail,\r\n                                message: localization.SendEmailSuccessMessage,\r\n                            })).done(function (response) {\r\n                                //change status if status in dropdown has value\r\n                                if (_vmWindow.Status != null && _vmWindow.Status.Id != \"\") {\r\n                                    vm.viewModel.Status.set(\"Id\", _vmWindow.Status.Id);\r\n                                    bChangeStatus = true;\r\n                                }\r\n\r\n                                if (bHasAttachment) {\r\n                                    //add file attachment details to vm after email is sent\r\n                                    if (!_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                                        _.each(sendEmailAttachments, function (item) {\r\n                                            vm.viewModel.FileAttachment.push(item);\r\n\r\n                                            var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                            if (actionLogType) {\r\n                                                vm.viewModel[actionLogType].unshift(new app.dataModels[actionLogType].fileAdded(item.DisplayName));\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (bAddActionLog) {\r\n                                    strMessagePlain = _.isUndefined(strMessagePlain) ? \"\" : strMessagePlain.substring(0, 4000);\r\n\r\n                                    if (strMessagePlain.length > 0) {\r\n                                        addToCommentLog(strMessagePlain.replace(/</g, '&lt;').replace(/>/g, '&gt;'), _vmWindow.setAsPrivate);\r\n                                    } else {\r\n                                        bAddActionLog = false;\r\n                                        addToLogSkipped = true;\r\n                                    }\r\n                                }\r\n\r\n                                if (bSetFirstResponsDate) {\r\n                                    vm.viewModel.set(\"FirstResponseDate\", new Date().toISOString());\r\n                                }\r\n\r\n                                //--end additional change checks/processing\r\n\r\n                                /**\r\n                                 * Save changes and show warnings, if any\r\n                                 */\r\n                                var handleSaveSuccess = function () {\r\n                                    if (vm.widget)\r\n                                        vm.widget.remoteManageRecepient = null;\r\n                                    shown = false;\r\n                                    cont.modal('hide');\r\n                                    vm.save(function () {\r\n                                        app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                        switch (vm.type) {\r\n                                        case \"ChangeRequest\":\r\n                                            location.href = \"/ChangeRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"ServiceRequest\":\r\n                                            location.href = \"/ServiceRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"Incident\":\r\n                                            location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"Problem\":\r\n                                            location.href = \"/Problem/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"ReleaseRecord\":\r\n                                            location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        default:\r\n                                            //my workitem view\r\n                                            location.href = \"/View/cca5abda-6803-4833-accd-d59a43e2d2cf/\";\r\n                                            break;\r\n                                        }\r\n                                    }, saveFailure);\r\n                                }\r\n                                if (addToLogSkipped) {\r\n                                    //note: addToLogSkipped dialog will only show if the empty message validation fails\r\n                                    $.when(kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.SkippedAddingLogEntryTitle,\r\n                                        message: localization.ErrorAddingLogEntryMessage,\r\n                                        icon: \"fa fa-warning\",\r\n                                    })).done(function() {\r\n                                        handleSaveSuccess();\r\n                                    });\r\n                                } else {\r\n                                    handleSaveSuccess();\r\n                                }\r\n                                //--end save changes and warnings\r\n                            });\r\n                        } else {\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.SendEmail,\r\n                                message: localization.SendEmailFailedMessage,\r\n                            }));\r\n                            kendo.ui.progress(cont, false);\r\n                            console.log(jqXHR, textStatus, localization.SendEmailFailedMessage);\r\n                        }\r\n                    },\r\n                    /**\r\n                     * Send Email Notification Error Event Handler\r\n                     */\r\n                    error: function (jqXHR, textStatus, errorThrown) {\r\n                        console.log(jqXHR, textStatus, errorThrown);\r\n                    },\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Build Editor\r\n             */\r\n            var buildEditor = function (targetEle, _vmWindow) {\r\n                var defaultTools = [\r\n                     \"bold\", \"italic\", \"underline\",\r\n                     \"formatting\", \"foreColor\", \"backColor\",\r\n                     \"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\",\r\n                     \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                     \"createLink\", \"unlink\", \"insertImage\",\r\n                     \"viewHtml\",\r\n                     \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                     { name: \"insertLineBreak\", shift: true },\r\n                     { name: \"insertParagraph\", shift: true },\r\n                ];\r\n                var mobileTools = [\r\n                    \"formatting\",\r\n                    \"createLink\", \"unlink\", \"insertImage\", \"viewHtml\",\r\n                    \"bold\", \"italic\", \"underline\",\r\n                    \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                    \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                    { name: \"insertLineBreak\", shift: true },\r\n                    { name: \"insertParagraph\", shift: true },\r\n                ];\r\n                var editor = targetEle.data(\"kendoEditor\");\r\n                if (!_.isUndefined(editor)) { return; }\r\n                editor = targetEle.kendoEditor({\r\n                    /**\r\n                     * Change Event Handler\r\n                     */\r\n                    change: function (e) {\r\n                        var content = e.sender.body.innerText || e.sender.body.textContent;\r\n                        _vmWindow.set(\"emailTextMessage\", content);\r\n                    },\r\n                    tools: app.isMobileDevice() ? mobileTools : defaultTools,\r\n                    stylesheets: [\"/Content/Styles/cireson.mentions-in-keditor.min.css\"],\r\n                    encoded: true,\r\n                    /**\r\n                     * Paste Event Handler\r\n                     */\r\n                    paste: function (e) {\r\n                    },\r\n                    pasteCleanup: {\r\n                        /**\r\n                        * pasteCleanup Handler\r\n                        */\r\n                        custom: function (html) {\r\n\r\n                            try {\r\n                                if ($(html)[0].tagName === \"IMG\") {\r\n\r\n                                    var dataSRC = $(html).attr('src');\r\n                                    var blob;\r\n\r\n                                    if (dataSRC.match(/^data:image\\/(png|jpg);base64,/) === null) {\r\n                                        var img = new Image;\r\n\r\n                                        img.setAttribute('crossOrigin', 'anonymous');\r\n\r\n                                        img.src = dataSRC;\r\n\r\n                                        $(img).one(\"load\",\r\n                                            function () {\r\n                                                setTimeout(function () {\r\n                                                        dataSRC = getBase64Image(img);\r\n                                                        blob = dataURItoBlob(dataSRC);\r\n                                                        uploadPastedImage(blob, _vmWindow);\r\n                                                    },\r\n                                                    0);\r\n                                            }).each(function () {\r\n                                            if (this.complete) $(this).load();\r\n                                        });\r\n                                    } else {\r\n                                        blob = dataURItoBlob(dataSRC);\r\n                                        uploadPastedImage(blob, _vmWindow);\r\n                                    }\r\n                                }\r\n                            } catch (err) {\r\n                                //console.error(err);\r\n                            }\r\n\r\n                            return html;\r\n                        },\r\n                    },\r\n                });\r\n\r\n                /**\r\n                 * Upload Pasted Image Handler\r\n                 */\r\n                function uploadPastedImage(file, _vmWindow) {\r\n                    var d = new Date();\r\n                    var timestamp = d.getTime();\r\n\r\n                    var formData = new FormData();\r\n                    formData.append('files', file, \"screenshot_\" + timestamp + \".png\");\r\n\r\n                    $.ajax({\r\n                        url: \"/FileAttachment/UploadAttachment/\" +\r\n                            vm.viewModel.BaseId +\r\n                            \"?className=\" +\r\n                            vm.viewModel.ClassName +\r\n                            \"&count=\" +\r\n                            vm.viewModel.FileAttachment.length,\r\n                        data: formData,\r\n                        type: 'POST',\r\n                        async: true,\r\n                        contentType: false,\r\n                        processData: false,\r\n                        dataType: \"json\",\r\n                        /**\r\n                         * Upload Pasted Image Success Event Handler\r\n                         */\r\n                        success: function (response) {\r\n                            if (!_.isUndefined(response.FileAttachment)) {\r\n                                _vmWindow.sendEmailAttachments.push(response.FileAttachment);\r\n                                _vmWindow.set(\"attachmentErrorMessage\", \"\");\r\n                                _vmWindow.set(\"okEnabled\", true);\r\n                            } else {\r\n                                _vmWindow.set(\"attachmentErrorMessage\", response.message);\r\n                                _vmWindow.set(\"okEnabled\", false);\r\n                                _vmWindow.set(\"emailAttachment\", \"\");\r\n                            }\r\n                        },\r\n                        /**\r\n                         * Upload Pasted Image Error Event Handler\r\n                         */\r\n                        error: function(err) {\r\n                            console.warn(err);\r\n                        },\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Convert image to base64\r\n                 */\r\n                function getBase64Image(img) {\r\n                    // Create an empty canvas element\r\n                    var canvas = document.createElement(\"canvas\");\r\n                    canvas.width = img.width;\r\n                    canvas.height = img.height;\r\n                    // Copy the image contents to the canvas\r\n                    var ctx = canvas.getContext(\"2d\");\r\n                    ctx.drawImage(img, 0, 0);\r\n                    // Get the data-URL formatted image\r\n                    // Firefox supports PNG and JPEG. You could check img.src to\r\n                    // guess the original format, but be aware the using \"image/jpg\"\r\n                    // will re-encode the image.\r\n                    var dataURL = canvas.toDataURL(\"image/png\");\r\n                    return dataURL;\r\n                }\r\n\r\n                /**\r\n                 * Convert base64 data to blob\r\n                 */\r\n                function dataURItoBlob(dataURI) {\r\n                    // convert base64 to raw binary data held in a string\r\n                    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n                    var byteString = atob(dataURI.split(',')[1]);\r\n\r\n                    // separate out the mime component\r\n                    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\r\n\r\n                    // write the bytes of the string to an ArrayBuffer\r\n                    var ab = new ArrayBuffer(byteString.length);\r\n\r\n                    // create a view into the buffer\r\n                    var ia = new Uint8Array(ab);\r\n\r\n                    // set the bytes of the buffer to the correct values\r\n                    for (var i = 0; i < byteString.length; i++) {\r\n                        ia[i] = byteString.charCodeAt(i);\r\n                    }\r\n\r\n                    // write the ArrayBuffer to a blob, and you're done\r\n                    var blob = new Blob([ab], { type: mimeString });\r\n                    return blob;\r\n\r\n                }\r\n\r\n                /*\r\n                var at_config = {\r\n                    at: \"@\",\r\n                    data: _vmWindow.users,\r\n                    headerTpl: '<div class=\"atwho-header\">Search Users</div>',\r\n                    insertTpl: '${atwho-at}${name}',\r\n                    displayTpl: \"<li id='${guid}'> ${name} <br><span>${email}</span> </li>\",\r\n                    limit: 5,\r\n                    startWithSpace: false,\r\n                    editableAtwhoQueryAttrs: {},\r\n                }\r\n\r\n                var iframe = editor.prev()[0];\r\n                var innerDoc = iframe.contentDocument || iframe.contentWindow.document;\r\n\r\n                var $inputor = $(innerDoc).find('body').atwho(at_config);\r\n                $inputor.caret('pos', 47);\r\n                $inputor.atwho('run');\r\n\r\n                $inputor.on(\"inserted.atwho\", function (event, $li) {\r\n                    var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                    var userId = $($li)[0].id;\r\n                    var user = _.filter(at_config.data,\r\n                        function (el) {\r\n                            return el.guid === userId;\r\n                        });\r\n\r\n                    if (!_.isUndefined(user[0]) && !_.isNull(user[0])) {\r\n                        var userData = { Id: user[0].guid, Name: user[0].name, Email: user[0].email }\r\n                        recipientList[\"recipientToList\"].push(userData);\r\n\r\n                        var isUserExist = picker.dataSource.data().find(function (element) {\r\n                            return element.Id === userData.Id;\r\n                        });\r\n\r\n                        //add at-mentioned user to userpicker data source if id does not exist\r\n                        if (!isUserExist) {\r\n                            picker.dataSource.add(userData);\r\n                        }\r\n                    }\r\n\r\n                    picker.value(_.pluck(recipientList[\"recipientToList\"], \"Id\"));\r\n                });\r\n\r\n                $(document).on(\"removed.atwho\", function (e) {\r\n                    var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                    if ($(iframe).is($(e.target.activeElement))) {\r\n                        var userId = e.removedAtWhoId;\r\n                        var newList = _.without(recipientList[\"recipientToList\"], _.findWhere(recipientList[\"recipientToList\"], {\r\n                            Id: userId,\r\n                        }));\r\n                        recipientList[\"recipientToList\"] = newList;\r\n                        picker.value(_.pluck(recipientList[\"recipientToList\"], \"Id\"));\r\n                    }\r\n                });\r\n                */\r\n            }\r\n\r\n            /**\r\n             * Initialize Status Picker\r\n             */\r\n            var initializeStatusPicker = function (targetEle, viewModel) {\r\n                var filterIdParam = \"\";\r\n                var filterId = viewModel.changeStatusSetting.rootStatusEnumId;\r\n                if (filterId != null) {\r\n                    if (filterId.toLowerCase() == viewModel.Status.Id.toLowerCase()) {\r\n                        filterIdParam = filterId;\r\n                    } else {\r\n                        filterIdParam = filterId + \",\" + viewModel.Status.Id;\r\n                    }\r\n                }\r\n                var enumId = viewModel.changeStatusSetting.statusTypeId;\r\n\r\n                var statusProperties = {\r\n                    PropertyName: \"Status\",\r\n                    PropertyDisplayName: \"ChangeStatus\",\r\n                    EnumId: viewModel.changeStatusSetting.statusTypeId,\r\n                    FilterIds: filterIdParam,\r\n                    Disabled: !viewModel.changeStatusSetting.enableChangeStatus || !session.user.Analyst || pageForm.newWI,\r\n                };\r\n\r\n                buildEnumPicker(targetEle, statusProperties, viewModel);\r\n            };\r\n\r\n            /**\r\n             * Initialize Enum Picker\r\n             */\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true,\r\n                    });\r\n                });\r\n            };\r\n\r\n            /**\r\n             * Apply Change Status\r\n             */\r\n            var applyChangeStatus = function (cont, vm, _vmWindow) {\r\n                var selectedWiType = vm.type;\r\n                var currentStatusId = vm.viewModel.Status.Id;\r\n                var statusEnumId = _vmWindow.changeStatusSetting.statusTypeId;\r\n                var rootStatusEnumId = _vmWindow.changeStatusSetting.rootStatusEnumId;\r\n                var dropDownControl = cont.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                var treeControl = cont.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n\r\n                //determine allowed status changes based on current type and status\r\n                var changeRules = app.lib.getChangeStatusRules();\r\n                var changeRulesFilter = changeRules[selectedWiType][currentStatusId];\r\n\r\n                //since Incident can have custom enums we need to check here if no rules were set then its not resolved\r\n                if (selectedWiType == \"Incident\" && _.isUndefined(changeRulesFilter)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"neq\", value: app.constants.workItemStatuses.Incident.Closed };\r\n                }\r\n\r\n                if (!_.isNull(rootStatusEnumId)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"eq\", value: rootStatusEnumId };\r\n                }\r\n\r\n                //apply allowed status filtering\r\n                treeControl.dataSource.options.serverFiltering = false;\r\n                treeControl.dataSource.filter(changeRulesFilter);\r\n\r\n                //reassign dropdown datasource with filtered data so that users will not be able to access restricted status by typing\r\n                $.get(\"/api/V3/Enum/GetFlatList/\", { id: statusEnumId, itemFilter: \"\" }, function (data) {\r\n                    var comboDataSource = new kendo.data.DataSource();\r\n                    comboDataSource.data(data);\r\n                    comboDataSource.filter(changeRulesFilter);\r\n                    if (comboDataSource.view().length > 0) {\r\n                        dropDownControl.setDataSource(comboDataSource.view());\r\n                    }\r\n                });\r\n            };\r\n\r\n            /**\r\n             * Get Send Email Change Status Settings\r\n             */\r\n            var getSendEmailChangeStatusSettings = function (viewModel) {\r\n                switch (vm.type) {\r\n                    case \"ServiceRequest\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ServiceRequest.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailServiceRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailServiceDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailServiceAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"ChangeRequest\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ChangeRequest.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailChangeRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailChangeDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailChangeAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"Problem\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.Problem.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailProblemRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailProblemDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailProblemAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"ReleaseRecord\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ReleaseRecord.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailReleaseRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailReleaseDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailReleaseAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"Incident\":\r\n                    default:\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.Incident.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailIncidentRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailIncidentDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailIncidentAllowAnalystToChangeStatus;\r\n                        break;\r\n                }\r\n            }\r\n        },\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nCustom\r\n**/\r\n\r\ndefine('forms/tasks/custom/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            if (_.isNull(node.Label)) {\r\n                //if no label (achot no link, just call the function)\r\n                node.Configs.func(vm, vm.viewModel);\r\n\r\n            } else {\r\n                //first add the anchor\r\n                var link = _.template(anchor);\r\n\r\n                //make sure we have all the node set\r\n                var properties = {\r\n                    Target: \"customFunc\"\r\n                };\r\n\r\n                $.extend(true, properties, node);\r\n\r\n                //create view model \r\n                var viewModel = kendo.observable({\r\n                    //call custom defined function\r\n                    customFunc: function () {\r\n                        node.Configs.func(vm, vm.viewModel);\r\n                    }\r\n                });\r\n\r\n                var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n                callback(anchorElm.render());\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/spacer/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nSPACER\r\n**/\r\n\r\ndefine('forms/tasks/spacer/controller',['require','text!forms/tasks/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/tasks/spacer/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/associateItem/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    $(\"input[name='\" + node.Configs.relationshipKey + \"']\").parent().find(\".searchIcon\").click();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            \r\n\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/setDate/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"datePicker\"/>\\r\\n            <div id=\"disposalReference\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/fields/date/view.html',[],function () { return '<div class=\"form-group\"\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n    >\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input name=\"<%= PropertyName %>\"\\r\\n           data-control=\"datePicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-from=\"<%= FromFilter %>\"\\r\\n           data-control-to=\"<%= ToFilter %>\"\\r\\n           data-control-from-relative=\"<%= FromRelative %>\"\\r\\n           data-control-to-relative=\"<%= ToRelative %>\"\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n     />\\r\\n</div>';});\n\n","/**\r\nDate\r\n**/\r\n\r\ndefine('forms/fields/date/controller',['require','text!forms/fields/date/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/date/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                FromFilter: '',\r\n                ToFilter: '',\r\n                FromRelative: '',\r\n                ToRelative: '',\r\n                Disabled: node.disabled,\r\n                Required: node.Required\r\n            };\r\n\r\n            //set from filter\r\n            if (node.MinValue != undefined) {\r\n                if (node.MinValue.indexOf(\":\") != -1) {\r\n                    properties.FromRelative = node.MinValue;\r\n                } else if (typeof node.MinValue == \"string\") {\r\n                    properties.FromFilter = node.MinValue;\r\n                }\r\n            }\r\n\r\n            //set to filter\r\n            if (node.MaxValue != undefined) {\r\n                if (node.MaxValue.indexOf(\":\") != -1) {\r\n                    properties.ToRelative = node.MaxValue;\r\n                } else if (typeof node.MaxValue == \"string\") {\r\n                    properties.ToFilter = node.MaxValue;\r\n                }\r\n            }\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/string/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"value: <%= PropertyName %><% if ( LimitLength ){ %>, events : { blur: view.stringController.CheckLength }<% } %>\"\\r\\n\\r\\n\\r\\n    <% if ( LimitLength ){ %>\\r\\n    maxlength=\"<%= MaxLength %>\"\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n\\r\\n    />\\r\\n\\r\\n    <% if ( LimitLength ){ %>\\r\\n    <p class=\"help-block validation-summary-errors\" style=\"display: none;\"><%= localization.MaxLengthError.replace(\"{0}\", MaxLength) %></p>\\r\\n    <% } %>\\r\\n\\r\\n</div>';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/string/controller',['require','text!forms/fields/string/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/string/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.stringController = {\r\n                CheckLength: function CheckLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n\r\n            vm.view.buildStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength\r\n                };\r\n                $.extend(true, properties, node);\r\n                \r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/setDate/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/setDate/view.html','forms/fields/date/controller','forms/fields/string/controller','forms/fields/longstring/controller','forms/fields/boolean/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/setDate/view.html\");\r\n    var datePicker = require(\"forms/fields/date/controller\");\r\n    var stringArea = require(\"forms/fields/string/controller\");\r\n    var txtArea = require(\"forms/fields/longstring/controller\");\r\n    var checkBox = require(\"forms/fields/boolean/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = node.Configs.Title;//localization.ChangeStatusTask;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            var datePickerCtrl;\r\n            var checkboxCtrl;\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            switch(node.Configs.viewType){\r\n                                case \"hdDisposal\":\r\n                                    vm.viewModel.set(\"HardwareAssetStatus\", { Id: \"020822bd-7d3a-4c0f-1be4-325ef1aa52b4\", Name: localization.Disposed });\r\n                                    break;\r\n                                case \"hdREcieveDate\":\r\n                                case \"MasterContractRenewedOn\":\r\n                                    if (vm.viewModel.get(checkboxCtrl.attr(\"name\"))) {\r\n                                        datePickerCtrl.val(\"\").blur();\r\n\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            var cancelledDate = \"\";\r\n                            if (!_.isNull(originalDate)) {\r\n                                cancelledDate = kendo.toString(new Date(originalDate), \"g\");\r\n                            }\r\n                            $('[name=\"' + dateProperties.PropertyName + '\"]').val(cancelledDate).blur();\r\n                            if (node.Configs.viewType == \"hdDisposal\") {\r\n                                vm.viewModel.set(\"DisposalReference\", OriginalDisposalReference);\r\n                            } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                                vm.viewModel.recieveCheckbox = OriginalCheckBox;\r\n                            }\r\n                            else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                                vm.viewModel.masterContractStartingDateCheckbox = OriginalCheckBox;\r\n                            }\r\n\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    if (node.Configs.viewType == \"hdDisposal\") {\r\n                        dateLabel = localization.DisposalDate;\r\n                    } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                        dateLabel = localization.ReceiveDate;\r\n                    } else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                        dateLabel = localization.StartDate;\r\n                    }\r\n\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    //create status enumPicker\r\n                    \r\n                    var originalDate = vm.viewModel.get(node.Configs.propertyKey);\r\n                    var dateProperties = {\r\n                        PropertyName: node.Configs.propertyKey,\r\n                        PropertyDisplayName: dateLabel,\r\n                        vm: vm.viewModel,\r\n                        disabled:false\r\n                    };\r\n                    \r\n                    buildDatePicker(cont.find('#datePicker'), dateProperties, vm.viewModel);\r\n\r\n                    if (node.Configs.viewType == \"hdDisposal\") {\r\n                        var OriginalDisposalReference = vm.viewModel.get(\"DisposalReference\");\r\n                        var stringProperties = {\r\n                            PropertyName: \"DisposalReference\",\r\n                            PropertyDisplayName: localization.DisposalReference,\r\n                            vm: vm.viewModel\r\n                        };\r\n                        buildString(cont.find(\"#disposalReference\"), stringProperties, vm.viewModel);\r\n                    } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                        var OriginalCheckBox = vm.viewModel.recieveCheckbox;\r\n                        var properties = {\r\n                            PropertyName: \"recieveCheckbox\",\r\n                            PropertyDisplayName: localization.RemoveReceivedDate,\r\n                            Inline: true\r\n                        };\r\n                        buildCheckbox(cont.find(\"#disposalReference\"), properties, vm.viewModel);\r\n                    } else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                        var OriginalCheckBox = vm.viewModel.masterContractStartingDateCheckbox;\r\n                        var properties = {\r\n                            PropertyName: \"masterContractStartingDateCheckbox\",\r\n                            PropertyDisplayName: localization.RemoveMasterLeaseWarrantyStarts,\r\n                            Inline: true\r\n                        };\r\n                        buildCheckbox(cont.find(\"#disposalReference\"), properties, vm.viewModel);\r\n                    }\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var buildDatePicker = function (container, props, vmModel) {\r\n                if (_.isNull(vmModel[props.PropertyName]) || vmModel[props.PropertyName] == \"\") {\r\n                    vmModel.set(props.PropertyName, kendo.toString(new Date(), \"g\"));\r\n                } else {\r\n                    vmModel.set(props.PropertyName, kendo.toString(new Date(vmModel[props.PropertyName]), \"g\"));\r\n                }\r\n                \r\n                datePicker.build(vmModel, props, function (dateControl) {\r\n                    container.html(dateControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                    datePickerCtrl = container.find(\"input[name='\" + props.PropertyName + \"']\");\r\n\r\n                    //will make sure date will reflect back to the main control from the form\r\n                    datePickerCtrl.focus();\r\n                    datePickerCtrl.blur();\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildCheckbox = function (container, props, vmModel) {\r\n                checkBox.build(vmModel, props, function (checkboxControl) {\r\n                    container.html(checkboxControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                    checkboxCtrl = container.find(\"input[name='\" + props.PropertyName + \"']\");\r\n                    vm.viewModel.set(props.PropertyName,false);\r\n                    checkboxCtrl.click(function () {\r\n                        var dtm = datePickerCtrl.data(\"kendoDatePicker\");\r\n                        if (this.checked) {\r\n                            dtm.enable(false);\r\n                        } else {\r\n                            dtm.enable(true);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nupdate Asset Management\r\n**/\r\n\r\n\r\ndefine('forms/tasks/updateAssetManagement/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n            var onloadTaskTrigger = function () {\r\n                switch (node.Configs.type) {\r\n                    case \"WarrantyContract\":\r\n                    case \"SupportAndMaintenance\":\r\n                    case \"ContractLease\":\r\n                        CommonContract.UpdateStatus(vm.viewModel,true);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            onloadTaskTrigger();\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    switch (node.Configs.type) {\r\n                        case \"License\":\r\n                            pageForm.SetSeatsRemaining(pageForm.viewModel);\r\n                            break;\r\n                        case \"SoftwareAsset\":\r\n                            UpdateSoftwareAsset(vm.viewModel);\r\n                            break;\r\n                        case \"Consumables\":\r\n                            UpdateConsumable(vm.viewModel);\r\n                            break;\r\n                        default:\r\n                            CommonContract.SupersedesParent(vm.viewModel);\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            \r\n\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            var UpdateConsumable = function (vmModel) {\r\n                if (vmModel.CountAssignedConsumableUsers || vmModel.CountAssignedConsumableAssets) {\r\n                    var assignedCount = 0;\r\n                    if (!_.isNull(vmModel.Target_ConsumableHasAssignedUsers) && vmModel.CountAssignedConsumableUsers) {\r\n                        assignedCount += vmModel.Target_ConsumableHasAssignedUsers.length;\r\n                    }\r\n                    if (!_.isNull(vmModel.Target_ConsumableHasAssignedAssets) && vmModel.CountAssignedConsumableAssets) {\r\n                        assignedCount += vmModel.Target_ConsumableHasAssignedAssets.length;\r\n                    }\r\n                    vmModel.set(\"AssignedCount\", assignedCount);\r\n                }\r\n            }\r\n\r\n            var UpdateSoftwareAsset = function (vmModel) {\r\n\r\n                $.when(kendo.ui.ExtYesNoDialog.show({\r\n                    title: localization.CiresonAssetManagement,\r\n                    message: localization.SoftwareAssetUpdateConfirmationMsg\r\n                })).done(function (response) {\r\n                    if (response.button === \"yes\") {\r\n                        vmModel.save(function (isOk, postData) {\r\n                            if (isOk == true) {\r\n                                $.ajax({\r\n                                    type: 'POST',\r\n                                    dataType: 'json',\r\n                                    url: \"/AssetManagement/SoftwareAsset/UpdateSoftwareAsset/\",\r\n                                    data: \"formJson=\" + postData + \"&id=\" + vmModel.BaseId,\r\n                                    success: function (data, status, xhr) {\r\n                                        if (data.Success == true) {\r\n                                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                                title: localization.CiresonAssetManagement,\r\n                                                message: localization.SoftwareAssetUpdated\r\n                                            })).done(function (response) {\r\n                                                vmModel.set(\"isDirty\", false);\r\n                                                app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                                window.location.reload(true);\r\n                                            });;\r\n                                        } else {\r\n                                            kendo.ui.ExtAlertDialog.show({\r\n                                                title: localization.CiresonAssetManagement,\r\n                                                message: localization.ErrorOccured\r\n                                            });\r\n                                        }\r\n                                    },\r\n                                    error: function (xhr, ajaxOptions, thrownError) {\r\n                                        failure();\r\n                                        console && app.lib.log(localization.RequestFailed);\r\n                                        app.lib.log(thrownError);\r\n\r\n                                        var jsonRsp = xhr.responseText;\r\n                                        app.lib.log(jsonRsp);\r\n\r\n                                        var errorMsg = localization.RequestFailed;\r\n                                        if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                            errorMsg = jsonRsp.exception;\r\n                                        }\r\n\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.ErrorDescription,\r\n                                            message: errorMsg,\r\n                                            icon: \"fa fa-exclamation\"\r\n                                        });\r\n                                    },\r\n                                    processData: false,\r\n                                    async: false\r\n                                });\r\n\r\n                            \r\n                            }\r\n\r\n                        }, vmModel.saveFailure, true);\r\n                    }\r\n                });\r\n            }\r\n\r\n            \r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    return definition;\r\n\r\n});\r\n\r\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/updateSupersededHardware/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    $.when(kendo.ui.ExtYesNoDialog.show({\r\n                        title: localization.CiresonAssetManagement,\r\n                        message: localization.UpdateSupersedesConfirmation\r\n                    })).done(function (response) {\r\n                        if (response.button === \"yes\") {\r\n                            $.post(node.Configs.url, { baseId: node.Configs.baseId }, function (data) {\r\n                                if (data.success === true) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.UpdatingAssets,\r\n                                        message: localization.TotalNumberofAssetsUpdated + \": \" + data.count\r\n                                    });\r\n                                } else {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.ServerError,\r\n                                        message: data.error\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/copyLicenseAssignments/view.html',[],function () { return '<div id=\"CopyLicenseAssignmentsWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div id=\"windowContent\" class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <form>\\r\\n                <fieldset id=\"source\">\\r\\n                    <legend><%= localization.RelatedLicenseAssignmentSource %></legend>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input class=\"control-label\" type=\"radio\" id=\"Computers\" value=\"Computers\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Computers %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Users\" value=\"Users\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Users %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Both\" value=\"Both\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Both %>\\r\\n                    </label>\\r\\n                </fieldset>\\r\\n                <br />\\r\\n                <br />\\r\\n                <fieldset id=\"target\">\\r\\n                    <legend><%= localization.SelectedSoftwareAssetTargetList %></legend>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input class=\"control-label\" type=\"radio\" id=\"AuthorizedList\" value=\"AuthorizedList\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.AuthorizedList %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"AssignedList\" value=\"AssignedList\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.AssignedListNamedLicenses %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Both\" value=\"Both\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Both %>\\r\\n                    </label>\\r\\n                </fieldset>\\r\\n            </form>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\" />    \\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/copyLicenseAssignments/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/copyLicenseAssignments/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/copyLicenseAssignments/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: localization.CopyLicenseAssignments,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        okClick: function () {\r\n                            \r\n\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.CiresonAssetManagement,\r\n                                message: localization.StartCopyLicenseAsssignements\r\n                            })).done(function (response) {\r\n                                $.post(\"/AssetManagement/SoftwareAsset/CopyLicenseAssignments/\", cont.find(\"#windowContent form\").serialize() + \"&id=\" + vm.viewModel.BaseId, function (data) {\r\n                                    if (data.success == true) {\r\n                                        //console.log(data);\r\n                                        //source.selected\r\n\r\n                                        var bTransferUsers = false;\r\n                                        var bTransferComputers = false;\r\n                                        var bTranserToAuthorised = false;\r\n                                        \r\n                                        var target = targetVM.selected;\r\n                                        var source = sourceVM.selected;\r\n                                        var bTranserToAssigned = target==\"AssignedList\";\r\n\r\n                                        var computerList = data.ComputerList;\r\n                                        var userList = data.UserList;\r\n\r\n                                        if (target==\"AuthorizedList\") bTranserToAuthorised = true;\r\n                                        if (source==\"Users\") bTransferUsers = true;\r\n                                        if (source==\"Computers\") bTransferComputers = true;\r\n\r\n                                        if (source==\"Both\") {\r\n                                            bTransferUsers = true;\r\n                                            bTransferComputers = true;\r\n                                        }\r\n\r\n                                        if (target==\"Both\") {\r\n                                            bTranserToAssigned = true;\r\n                                            bTranserToAuthorised = true;\r\n                                        }\r\n\r\n\r\n                                        if (bTransferUsers && bTranserToAssigned) {\r\n                                            PerformTransfer(vm.viewModel, userList, \"Target_SoftwareAssetHasAssignedUsers\");\r\n                                        }\r\n\r\n                                        if (bTransferComputers && bTranserToAssigned) {\r\n                                            PerformTransfer(vm.viewModel, computerList, \"Target_SoftwareAssetHasAssignedComputers\");\r\n                                        }\r\n\r\n                                        if (bTransferUsers && bTranserToAuthorised) \r\n                                        {\r\n                                            PerformTransfer(vm.viewModel, userList, \"Target_SoftwareAssetHasAuthorisedUser\");\r\n                                        }\r\n\r\n                                        if (bTransferComputers && bTranserToAuthorised)\r\n                                        {\r\n                                            PerformTransfer(vm.viewModel, computerList, \"Target_SoftwareAssetHasAuthorisedComputer\");\r\n                                        }\r\n\r\n                                        \r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.CiresonAssetManagement,\r\n                                            message: localization.UpdateSoftwareAssetMsg\r\n                                        });\r\n                                    } else {\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.CiresonAssetManagement,\r\n                                            message: data.error\r\n                                        });\r\n                                    }\r\n                                });\r\n                            });\r\n                            \r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            \r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    var PerformTransfer = function (viewModel, itemList, targetProperty) {\r\n                        var target = viewModel[targetProperty];\r\n                        var isExist = false;\r\n                        for (var index in itemList) {\r\n                            isExist = false;\r\n                            for (var indexTarget in target) {\r\n                                if (target[indexTarget].BaseId == itemList[index].BaseId) {\r\n                                    isExist = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (isExist) continue;\r\n                            target.addItem(itemList[index]);\r\n                        }\r\n                    }\r\n\r\n                    var sourceVM = kendo.observable({\r\n                        selected: \"Computers\"\r\n                    });\r\n\r\n                    kendo.bind(cont.find(\"#source\"), sourceVM);\r\n\r\n                    var targetVM = kendo.observable({\r\n                        selected: \"AuthorizedList\"\r\n                    });\r\n\r\n                    kendo.bind(cont.find(\"#target\"), targetVM);\r\n                    \r\n                    //create status enumPicker\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!CustomSpace/customtasks.tmpl.html',[],function () { return '<div>\\r\\n<div id=\"commentHTML\" class=\"form-horiztontal\">\\r\\n<div>\\r\\n<div class=\"col-group\">\\r\\n<div class=\"inline-spacing\">\\r\\n<label>What do you want to search?</label>\\r\\n</div>\\r\\n<div class=\"inline-spacing\">\\r\\n<textarea data-bind=\"value: comment, events: {keyup:textCounter}\"\\r\\ndata-value-update=\"keyup\"\\r\\nclass=\"k-textbox\"\\r\\nrows=\"7\" ></textarea>\\r\\n<div class=\"inline-spacing\">\\r\\n<span data-bind=\"html:charactersRemaining\"></span>\\r\\n<span>characters remaining</span>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\"window-buttons\">\\r\\n<button data-role=\"button\"\\r\\nclass=\"btn btn-primary\"\\r\\ndata-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\nOK\\r\\n</button>\\r\\n<button data-role=\"button\"\\r\\nclass=\"btn btn-primary\"\\r\\ndata-bind=\"events: { click: cancelClick }\">\\r\\nCancel\\r\\n</button>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n</div>';});\n\n","/**\r\nCopy To New Workitem\r\n**/\r\n\r\ndefine('forms/tasks/copyToNewWI/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(anchor);\r\n            \r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"copyToNewWI\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = built(properties);\r\n\r\n            var viewModel = kendo.observable({\r\n                copyToNewWI: function () {\r\n                    var hiddenVm;\r\n                    var copy;\r\n                    copy = $(\"<form>\", { \"method\": \"post\", \"target\": \"_blank\" });\r\n                    hiddenVm = $(\"<input>\", { \"type\": \"hidden\", \"name\": \"vm\" });\r\n                    copy.append(hiddenVm);\r\n                    $(\"body\").append(copy);\r\n                    hiddenVm.val(JSON.stringify(vm.viewModel));\r\n                    if (vm.type == \"Incident\")\r\n                        copy.attr(\"action\", \"/Incident/New/\");\r\n                    if (vm.type == \"ServiceRequest\")\r\n                        copy.attr(\"action\", \"/ServiceRequest/New/\");\r\n                    copy.submit();\r\n                    copy.remove();\r\n                }\r\n            });\r\n\r\n            var view = new kendo.View(built(properties), { wrap: false, model: viewModel });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/increaseAvailableCount/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"increaseAvailableCount\"/>\\r\\n            <div id=\"commentAvailableCount\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nLONGSTRING\r\n**/\r\n\r\ndefine('forms/fields/longString/controller',['require','text!forms/fields/longstring/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/longstring/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.longStringController = {\r\n                CheckLength: function checkLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n            vm.view.buildLongStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength,\r\n                    Rows: 10,\r\n                    visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n                };\r\n                $.extend(true, properties, node);\r\n                //console.log(properties);\r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildLongStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\r\n\n","\ndefine('text!forms/fields/numeric/view.html',[],function () { return '<div data-cid=\"NumericControl\" data-cid-propname=\"<%= PropertyName %>\" class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"number\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"form-control form-control-picker input-sm\"\\r\\n           data-control=\"numericTextBox\"\\r\\n           data-bind=\"value: <%= PropertyName %>\"\\r\\n           data-control-decimals=\"<%= DecimalPlaces %>\"\\r\\n           data-control-min=\"<%= MinValue%>\"\\r\\n           data-control-max=\"<%= MaxValue %>\"\\r\\n           data-step=\"<%= StepIncrement %>\"\\r\\n           data-format=\"<%= Format%>\"\\r\\n\\r\\n            <% if ( Disabled ){ %>\\r\\n                disabled\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\r\nNUMERIC\r\n**/\r\n\r\ndefine('forms/fields/numeric/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                Required: node.Required,\r\n                DecimalPlaces: 2,\r\n                MinValue: 0,\r\n                MaxValue: 100,\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/increaseAvailableCount/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/increaseAvailableCount/view.html','forms/fields/longString/controller','forms/fields/numeric/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/increaseAvailableCount/view.html\");\r\n    var stringArea = require(\"forms/fields/longString/controller\");\r\n    var numericArea = require(\"forms/fields/numeric/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.EditConsumableAvailableCount;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            var tempLog;\r\n            \r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 380,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            tempLog = new kendo.data.ObservableObject({\r\n                                ClassTypeId: \"67ce5b07-835d-246d-478d-29cee397c66e\",\r\n                                Comment: \"\",\r\n                                Target_LogHasCreator: {\r\n                                    ClassTypeId: \"eca3c52a-f273-5cdc-f165-3eb95a2b26cf\",\r\n                                    BaseId: session.user.Id,\r\n                                },\r\n                                AllowCreatedDate: true,\r\n                                Name: app.lib.newGUID(),\r\n                                Type: {\r\n                                    Id: \"884650a1-632a-0532-b0d4-8c6b1d990752\",\r\n                                    Name: localization.TaskRun\r\n                                }\r\n                            });\r\n\r\n                            var countProperties = {\r\n                                PropertyName: \"zeroCount\",\r\n                                PropertyDisplayName: \"IncreaseConsumableAvailableCountBy\",\r\n                                DecimalPlaces: 0,\r\n                                Required: true,\r\n                                vm: zeroCount\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#increaseAvailableCount\"), countProperties, zeroCount);\r\n\r\n                            var commentProperties = {\r\n                                PropertyName: \"Comment\",\r\n                                PropertyDisplayName: \"Comment\",\r\n                                Required: true,\r\n                                vm: tempLog,\r\n                                Rows: 5\r\n                            };\r\n\r\n\r\n                            buildString(cont.find(\"#commentAvailableCount\"), commentProperties, tempLog);\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var currentCount = vm.viewModel.get(\"Count\");\r\n                    var zeroCount = new kendo.data.ObservableObject({ zeroCount: 0 });\r\n                    \r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            var addedcount = parseInt(zeroCount.get(\"zeroCount\"));\r\n                            if (addedcount == 0 || tempLog.get(\"Comment\") == \"\") {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.CiresonAssetManagement,\r\n                                    message: localization.RequiredFieldsErrorMessage\r\n                                });\r\n                            } else {\r\n                                var newCount = parseInt(currentCount) + addedcount;\r\n                                vm.viewModel.set(\"Count\", newCount);\r\n                                //tempLog.set(\"Title\",\"Increased Available Count by \" + currentCount + \" to \" + newCount);\r\n                                tempLog.set(\"Title\", localization.IncreasedAvailableCount.replace(\"{0}\", currentCount) + newCount);\r\n                                tempLog.set(\"CreatedDate\",new Date());\r\n                                vm.viewModel[\"Target_ConsumableHasLogs\"].unshift(tempLog);\r\n                                win.close();\r\n                            }\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    \r\n                    \r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n           \r\n            var buildNumeric = function (container, props, vmModel) {\r\n                numericArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/decreaseAvailableCount/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"decreaseCount\"/>\\r\\n            <div id=\"decreaseAvailableCount\"/>\\r\\n            <div id=\"commentAvailableCount\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/decreaseAvailableCount/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/decreaseAvailableCount/view.html','forms/fields/longString/controller','forms/fields/numeric/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/decreaseAvailableCount/view.html\");\r\n    var stringArea = require(\"forms/fields/longString/controller\");\r\n    var numericArea = require(\"forms/fields/numeric/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.EditConsumableAvailableCount;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var tempLog;\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            tempLog = new kendo.data.ObservableObject({\r\n                                ClassTypeId: \"67ce5b07-835d-246d-478d-29cee397c66e\",\r\n                                Comment: \"\",\r\n                                Target_LogHasCreator: {\r\n                                    ClassTypeId: \"eca3c52a-f273-5cdc-f165-3eb95a2b26cf\",\r\n                                    BaseId: session.user.Id,\r\n                                },\r\n                                AllowCreatedDate: true,\r\n                                Name: app.lib.newGUID(),\r\n                                Type: {\r\n                                    Id: \"884650a1-632a-0532-b0d4-8c6b1d990752\",\r\n                                    Name: localization.TaskRun\r\n                                }\r\n                            });\r\n                            var countProperties = {\r\n                                PropertyName: \"zeroCount\",\r\n                                PropertyDisplayName: \"DecreaseConsumableCountBy\",\r\n                                Required: true,\r\n                                DecimalPlaces: 0,\r\n                                MaxValue: currentCount\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#decreaseCount\"), countProperties, zeroCount);\r\n\r\n                            var countProperties = {\r\n                                PropertyName: \"AvailableCount\",\r\n                                PropertyDisplayName: \"AvailableCount\",\r\n                                DecimalPlaces: 0,\r\n                                Disabled: true,\r\n                                vm: { AvailableCount: currentCount }\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#decreaseAvailableCount\"), countProperties, countProperties.vm);\r\n\r\n                            var commentProperties = {\r\n                                PropertyName: \"Comment\",\r\n                                PropertyDisplayName: \"Comment\",\r\n                                Required: true,\r\n                                vm: tempLog,\r\n                                Rows: 5\r\n                            };\r\n\r\n                            buildString(cont.find(\"#commentAvailableCount\"), commentProperties, tempLog);\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var currentCount = vm.viewModel.get(\"Count\");\r\n                    var zeroCount = new kendo.data.ObservableObject({ zeroCount: 0 });\r\n                    \r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            var addedcount = parseInt(zeroCount.get(\"zeroCount\"));\r\n                            if (addedcount == 0 || tempLog.get(\"Comment\") == \"\") {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.CiresonAssetManagement,\r\n                                    message: localization.RequiredFieldsErrorMessage\r\n                                });\r\n                            } else {\r\n                                var newCount = parseInt(currentCount) - addedcount;\r\n                                vm.viewModel.set(\"Count\", newCount);\r\n                                tempLog.set(\"Title\", localization.DecreasedAvailableCountBy.replace(\"{0}\", currentCount) + newCount);\r\n                                tempLog.set(\"CreatedDate\", new Date());\r\n                                vm.viewModel[\"Target_ConsumableHasLogs\"].unshift(tempLog);\r\n                                win.close();\r\n                            }\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    \r\n                    \r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n           \r\n            var buildNumeric = function (container, props, vmModel) {\r\n                numericArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nPrint Page\r\n**/\r\n\r\ndefine('forms/tasks/print/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    \r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"print\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = built(properties);\r\n\r\n            var viewModel = kendo.observable({\r\n                print: function () {\r\n                    window.print();\r\n                }\r\n            });\r\n\r\n            var view = new kendo.View(built(properties), { wrap: false, model: viewModel });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nAdd Me to Watchlist\r\n**/\r\n\r\ndefine('forms/tasks/addMeToWatchList/controller',['require','text!forms/tasks/anchor/view.html','text!forms/popups/notificationPopup/view.html'],function (require) {\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var notificationTpl = require(\"text!forms/popups/notificationPopup/view.html\");\r\n\r\n    var definition = {\r\n        notificationTemplate: notificationTpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(notificationTpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var viewModel = kendo.observable({\r\n                addMeToWatchList: function (ele) {\r\n                    if (!_.isUndefined(node.Configs.isAddWatchlist)) {\r\n                        switch (node.Configs.isAddWatchlist) {\r\n                            case false:\r\n                                this.removeFromWatchList();\r\n                                node.Configs.isAddWatchlist = true;\r\n                                $(ele.currentTarget).html(localization.AddMeToWatchList);\r\n                                break;\r\n                            case true:\r\n                            default:\r\n                                this.addToWatchList();\r\n                                node.Configs.isAddWatchlist = false;\r\n                                $(ele.currentTarget).html(localization.RemoveMeFromWatchList);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                },\r\n                addToWatchList: function () {\r\n                    //set current user's baseid in case it is missing\r\n                    var currentUser = session.user;\r\n                    currentUser.BaseId = session.user.Id;\r\n\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n\r\n                    //if user is not yet on the watchlist, add it in\r\n                    var isAdded = !_.isUndefined(_.find(vm.viewModel.WatchList, function (user) { return (user.Id == session.user.Id || user.BaseId == session.user.Id); }));\r\n                    if (!isAdded) {\r\n                        if (_.isUndefined(vm.viewModel.WatchList)) {\r\n                            vm.viewModel.set(\"WatchList\", []);\r\n                        }\r\n                        vm.viewModel.WatchList.push(session.user);\r\n\r\n                    }\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.AddMeToWatchListNotificationMessage, \"{0} is added to the watchlist\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                },\r\n                removeFromWatchList: function () {\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n                    var index = -1;\r\n\r\n                    _.find(vm.viewModel.WatchList, function (user, i) {\r\n                        if (user.Id == session.user.Id || user.BaseId == session.user.Id) {\r\n                            index = i;\r\n                            return user;\r\n                        }\r\n                    });\r\n\r\n                    //remove current user from watchlist\r\n                    if (index !== -1) vm.viewModel.WatchList.splice(index, 1);\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.RemoveMeFromWatchListNotificationMessage, \"{0} is removed from the watchlist\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"addMeToWatchList\"\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","define('forms/taskBuilder',[\r\n    \"forms/tasks/anchor/controller\",\r\n    \"forms/tasks/analystByGroup/controller\",\r\n    \"forms/tasks/assignToMe/controller\",\r\n    \"forms/tasks/changeStatus/controller\",\r\n    \"forms/tasks/amChangeStatus/controller\",\r\n    \"forms/tasks/acknowledge/controller\",\r\n    \"forms/tasks/convertToParent/controller\",\r\n    \"forms/tasks/linkToParent/controller\",\r\n    \"forms/tasks/newStatus/controller\",\r\n    \"CustomSpace/Scripts/forms/tasks/sendEmail/controller\", //\"forms/tasks/sendEmail/controller\",\r\n    \"forms/tasks/custom/controller\",\r\n    \"forms/tasks/spacer/controller\",\r\n    \"forms/tasks/associateItem/controller\",\r\n    \"forms/tasks/setDate/controller\",\r\n    \"forms/tasks/updateAssetManagement/controller\",\r\n    \"forms/tasks/updateSupersededHardware/controller\",\r\n    \"forms/tasks/copyLicenseAssignments/controller\",\r\n    \"text!CustomSpace/customtasks.tmpl.html\",\r\n    \"forms/tasks/copyToNewWI/controller\",\r\n    \"forms/tasks/increaseAvailableCount/controller\",\r\n    \"forms/tasks/decreaseAvailableCount/controller\",\r\n    \"forms/tasks/print/controller\",\r\n    \"forms/tasks/addMeToWatchList/controller\"\r\n\r\n], function (\r\n    anchor,\r\n    analystByGroup,\r\n    assignToMe,\r\n    changeStatus,\r\n    amChangeStatus,\r\n    acknowledge,\r\n    convertToParent,\r\n    linkToParent,\r\n    newStatus,\r\n    sendEmail,\r\n    custom,\r\n    spacer,\r\n    associateItem,\r\n    setDate,\r\n    updateAssetManagement,\r\n    updateSupersededHardware,\r\n    copyLicenseAssignments,\r\n    customTmpl,\r\n    copyToNewWI,\r\n    increaseAvailableCount,\r\n    decreaseAvailableCount,\r\n    print,\r\n    addMeToWatchList\r\n        ) {\r\n\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            var ulElement = $('<ul/>');\r\n\r\n            if (vm.fromDrawerBuilder) {\r\n                //remap the list of tasks to match what form builder does\r\n                vm.taskTemplate = {\r\n                    tasks: vm.tasks\r\n                }\r\n                ulElement.addClass(\"drawer-task-menu dropdown-menu\");\r\n                ulElement.attr('role', 'menu');\r\n            } else {\r\n                ulElement.addClass(\"taskmenu\");\r\n            }\r\n\r\n            var taskCallback = function (view) {\r\n                ulElement.append(view);\r\n            };\r\n\r\n            //set up each task\r\n            _.each(vm.taskTemplate.tasks, function (task) {\r\n\r\n                if (_.isString(task.Access)) {\r\n                    //coming from drawerbuild task.Access needs to be evaluated here\r\n                    task.Access = eval(task.Access);\r\n                }\r\n\r\n                if (task.Access) {\r\n                    //get template and check for existance\r\n                    eval(\"var _obj = \" + task.Task + \";\");\r\n                    if (!_obj) {\r\n                        throw Exception(task.Task + \" is not part of the templating system\");\r\n                        return false;\r\n                    }\r\n\r\n                    _obj.build(vm, task, function (view) {\r\n                        taskCallback(view);\r\n                    });\r\n                }\r\n            });\r\n\r\n            //send back <ul> with <li> of each task\r\n            callback(ulElement);\r\n\r\n            if (!vm.fromDrawerBuilder) {\r\n                //not drawer tasks so now add custom template html\r\n                var tmpl = $('<div/>').addClass(\"hide\");\r\n                tmpl.append(customTmpl);\r\n                //add the menu\r\n                callback(tmpl);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return definition;\r\n});\r\n\n","\ndefine('text!forms/header/sticky/view.html',[],function () { return '<div class=\"content-header__container\">\\r\\n    <div class=\"content-header\">\\r\\n        <div class=\"content-header__main\">\\r\\n            <div class=\"content-header__main__title\" data-bind=\"text: viewModel.Title\">\\r\\n            </div>\\r\\n            <div class=\"content-header__main__details\">\\r\\n                <div class=\"content-header__main__breadcrumbs-container\">\\r\\n                    <div class=\"content-header__main__breadcrumb content-header__main__breadcrumb--button\" data-bind=\"visible: view.controller.isParent\">\\r\\n                        <a class=\"content-header__main__breadcrumbs__link\" data-bind=\"attr: { href: view.controller.editHref}, text: viewModel.ParentWorkItem.Id\">\\r\\n                        </a>\\r\\n                        <a class=\"content-header__main__breadcrumbs__link content-header__main__breadcrumb--button__icon-link\" data-bind=\"click: view.controller.unlinkParent, visible: view.controller.isAnalystUser\">\\r\\n                            <i class=\"fa fa-unlink\"></i>\\r\\n                        </a>\\r\\n                    </div>\\r\\n                    <div class=\"content-header__main__breadcrumb\" data-bind=\"visible: view.controller.isParent\">\\r\\n                        <strong class=\"content-header__main__breadcrumbs__link\" data-bind=\"text: viewModel.Id\"></strong>\\r\\n                    </div>\\r\\n                    <strong class=\"content-header__main__breadcrumbs__link\" data-bind=\"visible: view.controller.isParent === false, text: viewModel.Id\"></strong>\\r\\n                </div>\\r\\n                <span class=\"status-pill status-pill--active\" data-bind=\"visible: view.statusVisible, text: viewModel.Status.Name\">\\r\\n                    Active\\r\\n                </span>\\r\\n                <div class=\"content-header__main__icon-stack hidden-print\">\\r\\n                    <button id=\"headerAttachmentBtn\" class=\"btn k-button btn-icon-stack\" data-bind=\"click: view.viewAttachments, visible: view.showAttachments\">\\r\\n                        <img src=\"../../../../Content/Images/Icons/RemoteManage/attach.svg\" alt=\"attach\" />\\r\\n                        <div class=\"content-header__collapser__icon-badge header-attachment-badge\">\\r\\n                        </div>\\r\\n                    </button>\\r\\n                    <button id=\"remoteManageBtn\" class=\"btn k-button btn-icon-stack\" data-bind=\"click: view.doClick, visible: view.showRemoteManageIcon\">\\r\\n                        <img src=\"../../../../Content/Images/Icons/RemoteManage/RS-black-simple@32h.png\" alt=\"remote\" />\\r\\n                    </button>\\r\\n                    <button class=\"btn k-button btn-icon-stack  visible-xs visible-sm\" data-bind=\"click: view.toggleMore\">\\r\\n                        <span class=\"fa fa-ellipsis-v\"></span>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"content-header__collapser hidden-xs hidden-sm hidden-print\">\\r\\n            <div class=\"first-header-slo-container\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\"content-header__collapser__dropdown\">\\r\\n                <div class=\"header-slo-container\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div id=\"content-header-backdrop\" class=\"content-header__flyout__overlay\">\\r\\n</div>\\r\\n<script id=\"header-slo-template\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"content-header__collapser__icon-container\">\\r\\n        <div class=\"header-slo-icon fa #: imageClass # content-header__collapser__icon\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"content-header__collapser__main\">\\r\\n        <div class=\"content-header__collapser__main__title header-slo-title\">#: Title #</div>\\r\\n        <div class=\"content-header__collapser__main__datetime header-slo-timer\"></div>\\r\\n    </div>\\r\\n    # if (index === \\'0\\') { #\\r\\n    <button class=\"content-header__collapser__caret-button fa fa-angle-up\" onclick=\"closeSLODropdown()\"></button>\\r\\n    # } #\\r\\n</script>\\r\\n<script id=\"first-header-slo-template\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"content-header__collapser__icon-container\">\\r\\n        <div class=\"header-slo-icon fa #: imageClass # content-header__collapser__icon\">\\r\\n        </div>\\r\\n        # if (count > 1) { #\\r\\n        <div class=\"content-header__collapser__icon-badge\"> #: count #\\r\\n        </div>\\r\\n        # } #\\r\\n    </div>\\r\\n    <div class=\"content-header__collapser__main\">\\r\\n        <div class=\"content-header__collapser__main__title header-slo-title\">#: Title #</div>\\r\\n        <div class=\"content-header__collapser__main__datetime header-slo-timer\"></div>\\r\\n    </div>\\r\\n    # if (count > 1) { #\\r\\n    <button class=\"content-header__collapser__caret-button fa fa-angle-down\" onclick=\"closeSLODropdown()\"></button>\\r\\n    # } #\\r\\n</script>\\r\\n<div id=\"openmore\" tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\" style=\"display: none\">\\r\\n    <div class=\"modal-dialog modal-sm\">\\r\\n        <div class=\"modal-content\">\\r\\n            <div class=\"content-header__collapser content-header__collapser--side\">\\r\\n                <div class=\"first-header-slo-container\">\\r\\n                </div>\\r\\n                <div class=\"content-header__collapser__dropdown\">\\r\\n                    <div class=\"header-slo-container\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/flyout/remoteManageWidget/view.html',[],function () { return '<div id=\"expanded_widget\" class=\"content-header__flyout\">\\r\\n    <h3 class=\"content-header__flyout__title\">\\r\\n        <span><%= localization.RemoteManagementText %></span>\\r\\n    </h3>\\r\\n    <div class=\"content-header__flyout__section\">\\r\\n        <div class=\"content-header__flyout__section__title\"><%= localization.Users %></div>\\r\\n        <div class=\"content-header__flyout__section__main\">\\r\\n        \\r\\n            <div class=\"dataUserContainer\"></div>\\r\\n            <div class=\"addUserContainer\"></div>\\r\\n\\r\\n            <div data-bind=\"attr: { class: widget.mainWidgetAttr }\">\\r\\n                <div class=\"support-tools__widget__selection\">\\r\\n                    <a class=\"support-tools__widget__select-type\" id=\"affectedUserAddLink\" data-bind=\"click: widget.addForm, value: widget.affectedUser.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/affected_user.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.AffectedText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" id=\"assignedUserAddLink\" data-bind=\"click: widget.addForm, value: widget.assignedUser.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/assigned_user.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.AssignedText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" id=\"primaryOwnerAddLink\" data-bind=\"click: widget.addForm, value: widget.primaryOwner.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/primary_user.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.PrimaryText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__label\">\\r\\n                    <div class=\"support-tools__widget__icon-container\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/add_user.svg\" class=\"support-tools__widget__icon\"/>\\r\\n                    </div>\\r\\n                    <div class=\"support-tools__widget__main support-tools__widget__input\">\\r\\n                        <div class=\"support-tools__widget__input__label\">\\r\\n                            <%= localization.AddaUserText  %>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"content-header__flyout__section\" data-bind=\"visible: widget.showDeviceSection\">\\r\\n        <div class=\"content-header__flyout__section__title\"><%= localization.DevicesText  %></div>\\r\\n        <div class=\"content-header__flyout__section__main\">\\r\\n\\r\\n            <div class=\"dataDeviceContainer\"></div>\\r\\n            <div class=\"addDeviceContainer\"></div>\\r\\n    \\r\\n            <div data-bind=\"attr: { class: widget.mainWidgetDeviceAttr }, visible: widget.includeComputerAndAsset\">\\r\\n                <div class=\"support-tools__widget__selection\">\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.affectedDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/affected_device.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.AffectedDeviceText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.relatedDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/related_device.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.RelatedDeviceText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <!--<a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.primaryDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/primary_device.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            Primary\\r\\n                        </div>\\r\\n                    </a>-->\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.userDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/user_device.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.UserDeviceText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.affectedAsset.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/affected_asset.svg\" class=\"support-tools__widget__select-type__logo\" />\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.AffectedAssetText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.relatedAsset.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/related_asset.svg\" class=\"support-tools__widget__select-type__logo\" />\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.RelatedAssetText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__label\">\\r\\n                    <div class=\"support-tools__widget__icon-container\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/add_device.svg\" class=\"support-tools__widget__icon\"/>\\r\\n                    </div>\\r\\n                    <div class=\"support-tools__widget__main support-tools__widget__input\" ng-show=\"assignedUser1 == null\">\\r\\n                        <div class=\"support-tools__widget__input__label\">\\r\\n                            <%= localization.AddaDeviceText  %>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div data-bind=\"attr: { class: widget.mainWidgetDeviceAttr }, visible: widget.includeWindowsComputerOnly\">\\r\\n                <div class=\"support-tools__widget__selection\">\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.affectedDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/affected_device.svg\" class=\"support-tools__widget__select-type__logo\" />\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.AffectedDeviceText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.relatedDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/related_device.svg\" class=\"support-tools__widget__select-type__logo\" />\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.RelatedDeviceText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.userDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/user_device.svg\" class=\"support-tools__widget__select-type__logo\" />\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.UserDeviceText  %>\\r\\n                        </div>\\r\\n                    </a>                </div>\\r\\n                <div class=\"support-tools__widget__label\">\\r\\n                    <div class=\"support-tools__widget__icon-container\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/add_device.svg\" class=\"support-tools__widget__icon\" />\\r\\n                    </div>\\r\\n                    <div class=\"support-tools__widget__main support-tools__widget__input\" ng-show=\"assignedUser1 == null\">\\r\\n                        <div class=\"support-tools__widget__input__label\">\\r\\n                            <%= localization.AddaDeviceText  %>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div data-bind=\"attr: { class: widget.mainWidgetDeviceAttr }, visible: widget.includeHardwareAssetOnly\" style=\"min-width: fit-content !important\">\\r\\n                <div class=\"support-tools__widget__selection\">\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.affectedAsset.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/affected_asset.svg\" class=\"support-tools__widget__select-type__logo\" />\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.AffectedAssetText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.relatedAsset.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/related_asset.svg\" class=\"support-tools__widget__select-type__logo\" />\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.RelatedAssetText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__label\">\\r\\n                    <div class=\"support-tools__widget__icon-container\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/add_device.svg\" class=\"support-tools__widget__icon\" />\\r\\n                    </div>\\r\\n                    <div class=\"support-tools__widget__main support-tools__widget__input\" ng-show=\"assignedUser1 == null\">\\r\\n                        <div class=\"support-tools__widget__input__label\">\\r\\n                            <%= localization.AddaDeviceText  %>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<script id=\"multipleDataTemplate\" type=\"text/x-kendo-template\">\\r\\n    # for (var i = 0; i < devices.length; i++) { #\\r\\n    # var device = devices[i] #\\r\\n    <div class=\"support-tools__widget support-tools__widget--item-selected support-tools__widget--user-selected #:type#dataTemplate\" data-bind=\"click: widget.clickContainer, value: widget.#:type#[#:i#]\">\\r\\n        <div class=\"support-tools__widget__icon-container\">\\r\\n            <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/#:icon#\" class=\"support-tools__widget__icon\" />\\r\\n        </div>\\r\\n        <div class=\"support-tools__widget__main\">\\r\\n            <div class=\"support-tools__widget__selected-item\">\\r\\n                <div class=\"support-tools__widget__selected-item__title\" data-bind=\"text: widget.#:type#[#:i#].DisplayName\">\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__selected-item__details\">\\r\\n                    #: title #\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"support-tools__widget__action\" data-bind=\"click: widget.removeItem, value: widget.#:type#[#:i#]\">\\r\\n                <a class=\"support-tools__widget__action__link\">\\r\\n                    <div class=\"support-tools__widget__action-icon\">\\r\\n                    </div>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    # } #\\r\\n</script>\\r\\n\\r\\n<script id=\"dataTemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"support-tools__widget support-tools__widget--item-selected support-tools__widget--user-selected\" id=\"#:type#dataTemplate\" data-bind=\"click: widget.clickContainer, value: widget.#:type#\">\\r\\n        <div class=\"support-tools__widget__icon-container\">\\r\\n            <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/#:icon#\" class=\"support-tools__widget__icon\" />\\r\\n        </div>\\r\\n        <div class=\"support-tools__widget__main\">\\r\\n            <div class=\"support-tools__widget__selected-item\">\\r\\n                <div class=\"support-tools__widget__selected-item__title\" data-bind=\"text: widget.#:type#.DisplayName\">\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__selected-item__details\">\\r\\n                    #: title #\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__selected-item__email\" data-bind=\"visible: widget.#:type#.Email\">\\r\\n                    <a data-bind=\"click: widget.openSendEmail, value: widget.#:type#\">\\r\\n                        <span data-bind=\"text: widget.#:type#.Email\"></span>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"support-tools__widget__action\" data-bind=\"click: widget.removeItem, value: widget.#:type#\">\\r\\n                <a class=\"support-tools__widget__action__link\">\\r\\n                    <div class=\"support-tools__widget__action-icon\">\\r\\n                    </div>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</script>\\r\\n\\r\\n<script id=\"addTemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"support-tools__widget\">\\r\\n        <div class=\"support-tools__widget__icon-container\">\\r\\n            <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/#:icon#\" class=\"support-tools__widget__icon\" />\\r\\n        </div>\\r\\n        <div class=\"support-tools__widget__main support-tools__widget__input\">\\r\\n            <div class=\"support-tools__widget__input__form\">\\r\\n                <span class=\"fa fa-search support-tools__widget__input__form__icon\" data-bind=\"click: widget.openCombobox, value: widget.#:type#.widgetType\"></span>\\r\\n                <input id=\"#:type#Combobox1\" class=\"support-tools__widget__input__form__input\" />\\r\\n                <div id=\"#:type#Container\" class=\"support-tools__widget__input__form__dropdown\"></div>\\r\\n            </div>\\r\\n            <div class=\"support-tools__widget__action\" data-bind=\"click: widget.removeUserCombobox, value: widget.#:type#.widgetType\">\\r\\n                <a class=\"support-tools__widget__action__link\">\\r\\n                    <div class=\"support-tools__widget__action-icon\">\\r\\n                    </div>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<script id=\"comboboxusertemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"multi-query__list__selected-items multi-query__list__selected-items--no-border\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-sm-12\">\\r\\n                <div class=\"multi-query__list__selected-items__name\">#: Name #</div>\\r\\n                <div class=\"multi-query__list__selected-items__details\">#: (Email) ? Email : \"\" #</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<script id=\"comboboxdevicetemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"multi-query__list__selected-items multi-query__list__selected-items--no-border\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-sm-12\">\\r\\n                <div class=\"multi-query__list__selected-items__name\">#: DisplayName #</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<script id=\"comboboxuserdevicetemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"multi-query__list__selected-items multi-query__list__selected-items--no-border\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-sm-12\">\\r\\n                <div class=\"multi-query__list__selected-items__name\">#: Text #</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<script id=\"comboboxprimarydevicetemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"multi-query__list__selected-items multi-query__list__selected-items--no-border\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-sm-12\">\\r\\n                <div class=\"multi-query__list__selected-items__name\">#: Name #</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>';});\n\n","var __remoteManageWidgetSingleton;\r\n\r\ndefine('forms/flyout/remoteManageWidget/controller',['require','text!forms/flyout/remoteManageWidget/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/flyout/remoteManageWidget/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        getWidget: function (vm) {\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            var main_row = $('.page_bar.sticky-header').first().children('.row').first();\r\n            main_row.after(ele);\r\n\r\n            var addUserContainer = $(\".addUserContainer\");\r\n            var addTemplate = kendo.template($(\"#addTemplate\").html());\r\n\r\n            var dataUserContainer = $(\".dataUserContainer\");\r\n            var dataTemplate = kendo.template($(\"#dataTemplate\").html());\r\n\r\n            var addDeviceContainer = $(\".addDeviceContainer\");\r\n\r\n            var dataDeviceContainer = $(\".dataDeviceContainer\");\r\n            var multipleDataTemplate = kendo.template($(\"#multipleDataTemplate\").html());\r\n\r\n            var deleteicon = '<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#403f40\"><path d=\"M12,2C6.47,2,2,6.47,2,12s4.47,10,10,10s10-4.47,10-10S17.53,2,12,2z M17,15.59L15.59,17L12,13.41L8.41,17L7,15.59 L10.59,12L7,8.41L8.41,7L12,10.59L15.59,7L17,8.41L13.41,12L17,15.59z\" fill=\"#403f40\"/></svg>';\r\n            var widgetActionIcon = $(\"<div class='support-tools__widget__action-icon'>\" + deleteicon + \"</div>\");\r\n\r\n            var createUserComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxusertemplate\"),\r\n                    type: 'user',\r\n                    dataTextField: \"Name\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var createPrimaryUserComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxusertemplate\"),\r\n                    type: 'primaryuser',\r\n                    dataTextField: \"Name\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var createUserDeviceComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxuserdevicetemplate\"),\r\n                    type: 'userdevice',\r\n                    affectedUserId: vm.widget.affectedUser.BaseId,\r\n                    dataTextField: \"Text\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var createPrimaryDeviceComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxprimarydevicetemplate\"),\r\n                    type: 'primarydevice',\r\n                    dataTextField: \"Name\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var createDeviceComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxdevicetemplate\"),\r\n                    type: 'device',\r\n                    dataTextField: \"DisplayName\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var createAssetComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxdevicetemplate\"),\r\n                    type: 'asset',\r\n                    dataTextField: \"DisplayName\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var affectedUserText = \"affectedUser\";\r\n            var assignedUserText = \"assignedUser\";\r\n            var primaryOwnerText = \"primaryOwner\";\r\n\r\n            var affectedDeviceText = \"affectedDevice\";\r\n            var primaryDeviceText = \"primaryDevice\";\r\n            var userDeviceText = \"userDevice\";\r\n            var relatedDeviceText = \"relatedDevice\";\r\n            var affectedAssetText = \"affectedAsset\";\r\n            var relatedAssetText = \"relatedAsset\";\r\n\r\n            var getObjectDetails = function (type) {\r\n                var details;\r\n                if (type === affectedUserText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.AffectedUserAppPage,\r\n                        icon: \"affected_user.svg\"\r\n                    }\r\n\r\n                } else if (type === assignedUserText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.AssignedUser,\r\n                        icon: \"assigned_user.svg\"\r\n                    }\r\n\r\n                } else if (type === primaryOwnerText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.PrimaryOwner,\r\n                        icon: \"primary_user.svg\"\r\n                    }\r\n                } else if (type === affectedDeviceText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.AffectedDeviceText,\r\n                        icon: \"affected_device.svg\"\r\n                    }\r\n                } else if (type === primaryDeviceText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: \"Primary Device\",\r\n                        icon: \"primary_device.svg\"\r\n                    }\r\n                } else if (type === userDeviceText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: \"User Device\",\r\n                        icon: \"user_device.svg\"\r\n                    }\r\n                } else if (type === relatedDeviceText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.RelatedDeviceText,\r\n                        icon: \"related_device.svg\"\r\n                    }\r\n                } else if (type === affectedAssetText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.AffectedAssetText,\r\n                        icon: \"affected_asset.svg\"\r\n                    }\r\n                } else if (type === relatedAssetText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.RelatedAssetText,\r\n                        icon: \"related_asset.svg\"\r\n                    }\r\n                }\r\n\r\n                return details;\r\n            }\r\n\r\n            var filter = {};\r\n            var selected = { };\r\n\r\n            var setToFormUserPicker = function (autocomplete, text) {\r\n                autocomplete.ul.hide();\r\n                autocomplete.value(text);\r\n                autocomplete.search(text);\r\n                setTimeout(function () {\r\n                    autocomplete.select(autocomplete.ul.find(\"li\").first());\r\n                    autocomplete.trigger(\"change\");\r\n                    autocomplete.close();\r\n                    autocomplete.ul.show();\r\n                }, 300);\r\n\r\n            }\r\n\r\n            var setSelected = function (key, picker) {\r\n\r\n                if (!selected[key]) return;\r\n\r\n                var tpl = $(picker).parents(\".support-tools__widget\").first();\r\n                tpl.remove();\r\n\r\n                if (key.toLowerCase().indexOf(affectedUserText.toLowerCase()) > -1) {\r\n\r\n                    vm.widget[affectedUserText] = _.extend(selected[key] || {},\r\n                        {\r\n                            widgetType: affectedUserText,\r\n                            mailtoLink: (selected[key][\"Email\"]) ? \"mailto:\" + selected[key][\"Email\"] + \"?Subject=\" + \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title : \"\"\r\n                        });\r\n\r\n                    $(\"#\" + affectedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n                    dataUserContainer.append(dataTemplate(getObjectDetails(affectedUserText)));\r\n\r\n                    vm.viewModel.set(\"RequestedWorkItem\", selected[key]);\r\n                    input = $(\"input[data-control-bind='RequestedWorkItem']\").data(\"kendoAutoComplete\");\r\n                    setToFormUserPicker(input, selected[key].DisplayName);\r\n\r\n                    vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(assignedUserText.toLowerCase()) > -1) {\r\n\r\n                    vm.widget[assignedUserText] = _.extend(selected[key] || {},\r\n                        {\r\n                            widgetType: assignedUserText,\r\n                            mailtoLink: (selected[key][\"Email\"]) ? \"mailto:\" +selected[key][\"Email\"]+ \"?Subject=\" + \"[\" +vm.viewModel.Id + \"] \" +vm.viewModel.Title: \"\"\r\n                        });\r\n\r\n                    $(\"#\" + assignedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n                    dataUserContainer.append(dataTemplate(getObjectDetails(assignedUserText)));\r\n\r\n                    vm.viewModel.set(\"AssignedWorkItem\", selected[key]);\r\n                    input = $(\"input[data-control-bind='AssignedWorkItem']\").data(\"kendoAutoComplete\");\r\n                    setToFormUserPicker(input, selected[key].DisplayName);\r\n\r\n                    vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(primaryOwnerText.toLowerCase()) > -1) {\r\n\r\n                    vm.widget[primaryOwnerText] = _.extend(selected[key] || {},\r\n                        {\r\n                            widgetType: primaryOwnerText,\r\n                            mailtoLink: (selected[key][\"Email\"]) ? \"mailto:\" + selected[key][\"Email\"] + \"?Subject=\" + \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title : \"\"\r\n                        });\r\n\r\n                    $(\"#\" + primaryOwnerText + \"AddLink\").addClass(\"isDisabled\");\r\n                    dataUserContainer.append(dataTemplate(getObjectDetails(primaryOwnerText)));\r\n\r\n                    vm.viewModel.set(\"RelatesToIncident\", selected[key]);\r\n                    input = $(\"input[data-control-bind='RelatesToIncident']\").data(\"kendoAutoComplete\");\r\n                    setToFormUserPicker(input, selected[key].DisplayName);\r\n\r\n                    vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(affectedDeviceText.toLowerCase()) > -1) {\r\n\r\n                    if (selected[key] && !_.findWhere(vm.widget[affectedDeviceText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.HasRelatedWorkItems.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(primaryDeviceText.toLowerCase()) > -1) {\r\n                    if (selected[key] && !_.findWhere(vm.widget[primaryDeviceText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.HasRelatedWorkItems.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(userDeviceText.toLowerCase()) > -1) {\r\n                    if (selected[key] && !_.findWhere(vm.widget[affectedDeviceText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n                        vm.viewModel.HasRelatedWorkItems.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(relatedDeviceText.toLowerCase()) > -1) {\r\n\r\n                    if (selected[key]&& !_.findWhere(vm.widget[relatedDeviceText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.RelatesToConfigItem.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(affectedAssetText.toLowerCase()) > -1) {\r\n\r\n                    if (selected[key] && !_.findWhere(vm.widget[affectedAssetText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.HasRelatedWorkItems.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(relatedAssetText.toLowerCase()) > -1) {\r\n\r\n                    if (selected[key] && !_.findWhere(vm.widget[relatedAssetText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.RelatesToConfigItem.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                }\r\n\r\n\r\n                selected[key] = null;\r\n                filter[key] = \"\";\r\n\r\n                if (vm.widget[affectedUserText].BaseId && vm.widget[assignedUserText].BaseId && vm.widget[primaryOwnerText].BaseId)\r\n                    $(\"#\" + primaryOwnerText + \"AddLink\").parents(\".support-tools__widget\").first().hide();\r\n\r\n                widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n                kendo.bind(ele, vm);\r\n            }\r\n\r\n            var initializePicker = function (config) {\r\n\r\n                var targetKey = config.element[0].id;\r\n\r\n                var ds;\r\n                if (config.type === \"user\") {\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/api/V3/User/GetUserList\",\r\n                                data: {\r\n                                    filterByAnalyst: false,\r\n                                    maxNumberOfResults: 1000,\r\n                                    userFilter: function() {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true\r\n                    });\r\n                } else if (config.type === \"primaryuser\") {\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/api/V3/User/GetUserList\",\r\n                                data: {\r\n                                    filterByAnalyst: true,\r\n                                    maxNumberOfResults: 1000,\r\n                                    userFilter: function() {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true\r\n                    });\r\n                } else if (config.type === \"device\" || config.type === \"asset\") {\r\n                    var classId = (config.type === \"device\") ? '7ad221e0-e4bb-39a8-6514-33b60bba46f5' : 'c0c58e7f-7865-55cc-4600-753305b9be64';\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/Search/GetSearchObjectsWithEnumObjectByClassId\",\r\n                                data: {\r\n                                    searchFilter: function() {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    },\r\n                                    classId: classId,\r\n                                    columnNames: 'DisplayName, Id'\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true,\r\n                        schema: {\r\n                            data: function(response) {\r\n                                return response.Data;\r\n                            }\r\n                        }\r\n                    });\r\n                } else if (config.type === \"primarydevice\") {\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: session.consoleSetting.TrueControlCenterURL + \"/api/CmDevice\",\r\n                                data: {\r\n                                    search: function() {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                },\r\n                                beforeSend: function(req) {\r\n                                    req.setRequestHeader('Authorization',\r\n                                        'Bearer ' + session.consoleSetting.TrueControlCenterAuthToken);\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true,\r\n                        schema: {\r\n                            data: function(response) {\r\n                                return response.value;\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/ConfigItems/GetAffectedUserConfigItemsList\",\r\n                                data: {\r\n                                    affectedUserId: config.affectedUserId,\r\n                                    className: \"Microsoft.Windows.Computer\",\r\n                                    searchFilter: function() {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true\r\n                    });\r\n                }\r\n\r\n                var picker = config.element.kendoComboBox({\r\n                    dataSource: ds,\r\n                    template: kendo.template(config.eleTemplate.html()),\r\n                    placeholder: localization.Search,\r\n                    dataTextField: config.dataTextField,\r\n                    dataValueField: \"Id\",\r\n                    autoBind: false,\r\n                    filter: \"contains\",\r\n                    suggest: true,\r\n                    popup: {\r\n                        appendTo: config.eleContainer\r\n                    },\r\n                    filtering: function (e) {\r\n                        if (e.filter != undefined) {\r\n                            var key = e.sender.element[0].id;\r\n                            filter[key] = e.filter.value;\r\n                        }\r\n                    },\r\n                    select: function (e) {\r\n                        var key = e.sender.element[0].id;\r\n\r\n                        if (config.type === \"user\" || config.type === \"primaryuser\") {\r\n                            selected[key] = {\r\n                                DisplayName: e.dataItem.Name,\r\n                                BaseId: e.dataItem.Id,\r\n                                Email: e.dataItem.Email,\r\n                                BaseType: e.dataItem.BaseType,\r\n                                Path: \"\"\r\n                            };\r\n                        } else if (config.type === \"device\" || (config.type === \"asset\")) {\r\n                            selected[key] = e.dataItem;\r\n                        } else if (config.type === \"primarydevice\") {\r\n                            selected[key] = {\r\n                                DisplayName: e.dataItem.Name,\r\n                                BaseId: e.dataItem.Guid,\r\n                                BaseType: e.dataItem.BaseType,\r\n                                Path: \"\"\r\n                            };\r\n                        } else {\r\n                            selected[key] = {\r\n                                DisplayName: e.dataItem.Text,\r\n                                BaseId: e.dataItem.Id,\r\n                                ClassName: e.dataItem.ClassName,\r\n                                BaseType: e.dataItem.BaseType,\r\n                                Path: \"\"\r\n                            }\r\n                        }\r\n                        if ($(e.item[0]).hasClass('k-state-hover')) {\r\n                            setSelected(key, config.element);\r\n                        }\r\n                    }\r\n                }).data(\"kendoComboBox\");\r\n\r\n                picker.input.on(\"keydown\", function (e) {\r\n                    if (e.keyCode === 9 || e.keyCode === 13) {\r\n\r\n                        setSelected(targetKey, config.element);\r\n                    }\r\n                });\r\n            };\r\n\r\n            vm.widget = {\r\n                open: false,\r\n                mainWidgetAttr: 'support-tools__widget support-tools__widget--add-item',\r\n                mainWidgetDeviceAttr: 'support-tools__widget support-tools__widget--add-item',\r\n                addForm: function(e) {\r\n                    if ($(e.currentTarget).hasClass(\"isDisabled\")) return;\r\n\r\n                    var type = e.currentTarget.value;\r\n                    if (type === affectedUserText) {\r\n                        addUserContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addUserContainer);\r\n                        createUserComboBox(type);\r\n                        vm.widget.mainWidgetAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === assignedUserText) {\r\n                        addUserContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addUserContainer);\r\n                        createUserComboBox(type);\r\n                        vm.widget.mainWidgetAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === primaryOwnerText) {\r\n                        addUserContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addUserContainer);\r\n                        createPrimaryUserComboBox(type);\r\n                        vm.widget.mainWidgetAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === affectedDeviceText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createDeviceComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === primaryDeviceText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createPrimaryDeviceComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === userDeviceText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createUserDeviceComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === relatedDeviceText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createDeviceComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === affectedAssetText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createAssetComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === relatedAssetText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createAssetComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    }\r\n\r\n                    widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n\r\n                    kendo.bind(ele, vm);\r\n                },\r\n                affectedUser: _.extend(vm.viewModel.RequestedWorkItem || {},\r\n                    {\r\n                        widgetType: affectedUserText,\r\n                        mailtoLink: (vm.viewModel.RequestedWorkItem && vm.viewModel.RequestedWorkItem[\"Email\"]) ? \"mailto:\" +vm.viewModel.RequestedWorkItem[\"Email\"]+ \"?Subject=\" + \"[\" +vm.viewModel.Id + \"] \" +vm.viewModel.Title: \"\"\r\n                    }),\r\n                assignedUser: _.extend(vm.viewModel.AssignedWorkItem || {},\r\n                    {\r\n                        widgetType: assignedUserText,\r\n                        mailtoLink: (vm.viewModel.AssignedWorkItem && vm.viewModel.AssignedWorkItem[\"Email\"]) ? \"mailto:\" + vm.viewModel.AssignedWorkItem[\"Email\"] + \"?Subject=\" + \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title : \"\"\r\n                    }),\r\n                primaryOwner: _.extend(vm.viewModel.RelatesToIncident || {},\r\n                    {\r\n                        widgetType: primaryOwnerText,\r\n                        mailtoLink: (vm.viewModel.RelatesToIncident && vm.viewModel.RelatesToIncident[\"Email\"]) ? \"mailto:\" + vm.viewModel.RelatesToIncident[\"Email\"] + \"?Subject=\" + \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title : \"\"\r\n                    }),\r\n                affectedDevice: {\r\n                    widgetType: affectedDeviceText\r\n                },\r\n                primaryDevice: {\r\n                    widgetType: primaryDeviceText\r\n                },\r\n                userDevice: {\r\n                    widgetType: userDeviceText\r\n                },\r\n                relatedDevice:  {\r\n                    widgetType: relatedDeviceText\r\n                },\r\n                affectedAsset: {\r\n                    widgetType: affectedAssetText\r\n                },\r\n                relatedAsset: {\r\n                    widgetType: relatedAssetText\r\n                },\r\n                relatedDeviceArr: _.filter(vm.viewModel.RelatesToConfigItem,\r\n                    function (el) {\r\n                        el = _.extend(el,\r\n                            {\r\n                                widgetType: relatedDeviceText\r\n                            });\r\n                        return el.ClassName === \"Microsoft.Windows.Computer\";\r\n                    }),\r\n                affectedDeviceArr: _.filter(vm.viewModel.HasRelatedWorkItems,\r\n                    function (el) {\r\n                        el = _.extend(el,\r\n                            {\r\n                                widgetType: affectedDeviceText\r\n                            });\r\n                        return el.ClassName === \"Microsoft.Windows.Computer\";\r\n                    }),\r\n                affectedAssetArr: _.filter(vm.viewModel.HasRelatedWorkItems,\r\n                    function (el) {\r\n                        el = _.extend(el,\r\n                            {\r\n                                widgetType: affectedAssetText\r\n                            });\r\n                        return el.ClassName === \"Cireson.AssetManagement.HardwareAsset\";\r\n                    }),\r\n                relatedAssetArr: _.filter(vm.viewModel.RelatesToConfigItem,\r\n                    function (el) {\r\n                        el = _.extend(el,\r\n                            {\r\n                                widgetType: relatedAssetText\r\n                            });\r\n                        return el.ClassName === \"Cireson.AssetManagement.HardwareAsset\";\r\n                    }),\r\n                primaryDeviceArr: [],\r\n                includeHardwareAssetOnly: (session.includeHardwareAssetinRM === \"true\" && session.includeWindowsComputerinRM === \"false\") ? true : false,\r\n                includeWindowsComputerOnly: (session.includeWindowsComputerinRM === \"true\" && session.includeHardwareAssetinRM === \"false\") ? true : false,\r\n                includeComputerAndAsset: (session.includeHardwareAssetinRM === \"true\" && session.includeWindowsComputerinRM === \"true\") ? true : false,\r\n                showDeviceSection: (session.includeHardwareAssetinRM === \"true\" || session.includeWindowsComputerinRM === \"true\") ? true : false,\r\n                clickContainer: function (e) {\r\n                    if (e.target.nodeName === \"DIV\" && e.target.className.indexOf(\"multi-query__list__selected-items\") === -1) {\r\n                        var value = e.currentTarget.value;\r\n                        if (value.BaseId) {\r\n                            if (value.widgetType === relatedAssetText || value.widgetType === affectedAssetText) {\r\n                                $.get(\"/Search/GetHardwareAssetDevice\", { id: value.BaseId }, function (data) {\r\n                                    var type = \"computer\";\r\n                                    var src = app.slideOutNav.getTCCSourceURL(data, type);\r\n                                    var options = {\r\n                                        url: src,\r\n                                        tooltip: localization.ComputerManagement\r\n                                    }\r\n                                    app.slideOutNav.show(options);\r\n                                });\r\n                            } else {\r\n                                var type =\r\n                                    [affectedUserText, assignedUserText, primaryOwnerText].indexOf(value.widgetType) >\r\n                                        -1\r\n                                        ? \"user\"\r\n                                        : \"computer\";\r\n                                var src = app.slideOutNav.getTCCSourceURL(value, type);\r\n                                var options = {\r\n                                    url: src,\r\n                                    tooltip: (type === \"user\")\r\n                                        ? localization.UserManagement\r\n                                        : localization.ComputerManagement\r\n                                }\r\n                                app.slideOutNav.show(options);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                removeUserCombobox: function (e) {\r\n                    var widgetType = e.currentTarget.value;\r\n                    var tpl = $(e.currentTarget).parents(\".support-tools__widget\").first();\r\n                    tpl.remove();\r\n\r\n                    if ([affectedUserText, assignedUserText, primaryOwnerText].indexOf(widgetType) > -1)\r\n                        vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                    else\r\n                        vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n\r\n                    kendo.bind(ele, vm);\r\n                },\r\n                openCombobox: function (e) {\r\n                    var widgetType = e.currentTarget.value;\r\n                    var widget = $(\"#\" + widgetType + \"Combobox1\").getKendoComboBox();\r\n                    widget.open();\r\n                },\r\n                removeItem: function (e) {\r\n                    var widgetValue = e.currentTarget.value;\r\n                    var widgetType = widgetValue.widgetType;\r\n                    var propName;\r\n\r\n                    switch (widgetType) {\r\n                        case affectedUserText:\r\n                            propName = \"RequestedWorkItem\";\r\n                            vm.viewModel.set(propName,\r\n                                {\r\n                                    DisplayName: \"\",\r\n                                    BaseId: \"\"\r\n                                });\r\n                            $(\"#\" + affectedUserText + \"AddLink\").removeClass(\"isDisabled\");\r\n                            vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case assignedUserText:\r\n                            propName = \"AssignedWorkItem\";\r\n                            vm.viewModel.set(propName,\r\n                                {\r\n                                    DisplayName: \"\",\r\n                                    BaseId: \"\"\r\n                                });\r\n                            $(\"#\" + assignedUserText + \"AddLink\").removeClass(\"isDisabled\");\r\n                            vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case primaryOwnerText:\r\n                            propName = \"RelatesToIncident\";\r\n                            vm.viewModel.set(propName,\r\n                                {\r\n                                    DisplayName: \"\",\r\n                                    BaseId: \"\"\r\n                                });\r\n                            $(\"#\" + primaryOwnerText + \"AddLink\").removeClass(\"isDisabled\");\r\n                            vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case affectedDeviceText:\r\n                            var arr = _.map(vm.viewModel.HasRelatedWorkItems,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.HasRelatedWorkItems.splice(i, 1);\r\n\r\n                            vm.widget[affectedDeviceText + \"Arr\"] = _.filter(vm.widget[affectedDeviceText + \"Arr\"],\r\n                                function (el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case primaryDeviceText:\r\n                            var arr = _.map(vm.viewModel.HasRelatedWorkItems,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.HasRelatedWorkItems.splice(i, 1);\r\n\r\n                            vm.widget[primaryDeviceText + \"Arr\"] = _.filter(vm.widget[primaryDeviceText + \"Arr\"],\r\n                                function (el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case userDeviceText:\r\n                            var arr = _.map(vm.viewModel.HasRelatedWorkItems,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.HasRelatedWorkItems.splice(i, 1);\r\n\r\n                            vm.widget[affectedDeviceText + \"Arr\"] = _.filter(vm.widget[affectedDeviceText + \"Arr\"],\r\n                                function (el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case relatedDeviceText:\r\n\r\n                            var arr = _.map(vm.viewModel.RelatesToConfigItem,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.RelatesToConfigItem.splice(i, 1);\r\n\r\n                            vm.widget[relatedDeviceText + \"Arr\"] = _.filter(vm.widget[relatedDeviceText + \"Arr\"],\r\n                                function(el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case affectedAssetText:\r\n                            var arr = _.map(vm.viewModel.HasRelatedWorkItems,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.HasRelatedWorkItems.splice(i, 1);\r\n\r\n                            vm.widget[affectedAssetText + \"Arr\"] = _.filter(vm.widget[affectedAssetText + \"Arr\"],\r\n                                function (el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case relatedAssetText:\r\n\r\n                            var arr = _.map(vm.viewModel.RelatesToConfigItem,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.RelatesToConfigItem.splice(i, 1);\r\n\r\n                            vm.widget[relatedAssetText + \"Arr\"] = _.filter(vm.widget[relatedAssetText + \"Arr\"],\r\n                                function (el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                    }\r\n\r\n                    if (propName && propName.length > 0) {\r\n                        var input = $(\"input[data-control-bind='\" + propName + \"']\");\r\n                        input.data(\"kendoAutoComplete\").value(\"\");\r\n                        var liParent = input.parent().children(\".menu-usr-mgt\");\r\n                        $(liParent).hide();\r\n                    }\r\n\r\n                    var tpl = $(e.currentTarget).parents(\".support-tools__widget\").first();\r\n                    tpl.remove();\r\n\r\n                    if (typeof (vm.widget[affectedUserText].BaseId && vm.widget[assignedUserText].BaseId && vm.widget[primaryOwnerText].BaseId) !== \"undefined\")\r\n                        $(\"#\" + primaryOwnerText + \"AddLink\").parents(\".support-tools__widget\").first().show();\r\n\r\n                    kendo.bind(ele, vm);\r\n                },\r\n                remoteManageRecepient: null,\r\n                openSendEmail: function (e) {\r\n                    var widgetValue = e.currentTarget.value;\r\n                    vm.widget.remoteManageRecepient = widgetValue;\r\n                    $('li.link[data-bind=\"click: sendEmail\"]').click();\r\n                }\r\n            }\r\n\r\n            if (vm.widget.affectedUser.BaseId) {\r\n                $(\"#\" + affectedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n                dataUserContainer.append(dataTemplate(getObjectDetails(affectedUserText)));\r\n            }\r\n\r\n            if (vm.widget.assignedUser.BaseId) {\r\n                $(\"#\" + assignedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n                dataUserContainer.append(dataTemplate(getObjectDetails(assignedUserText)));\r\n            }\r\n\r\n            if (vm.widget.primaryOwner.BaseId) {\r\n                $(\"#\" + primaryOwnerText + \"AddLink\").addClass(\"isDisabled\");\r\n                dataUserContainer.append(dataTemplate(getObjectDetails(primaryOwnerText)));\r\n            }\r\n\r\n            if (vm.widget.relatedDeviceArr.length > 0) {\r\n\r\n                vm.widget.relatedDeviceArr = _.map(vm.widget.relatedDeviceArr,\r\n                    function(el) {\r\n                        el.widgetType = relatedDeviceText;\r\n                        return el;\r\n                    });\r\n\r\n                var relatedDeviceObj = {\r\n                    devices: vm.widget[relatedDeviceText + \"Arr\"],\r\n                    type: relatedDeviceText + \"Arr\",\r\n                    title: localization.RelatedDeviceText,\r\n                    icon: \"related_device.svg\"\r\n                }\r\n                dataDeviceContainer.append(multipleDataTemplate(relatedDeviceObj));\r\n                kendo.bind(dataDeviceContainer);\r\n            }\r\n\r\n            if (vm.widget.relatedAssetArr.length > 0) {\r\n\r\n                vm.widget.relatedAssetArr = _.map(vm.widget.relatedAssetArr,\r\n                    function (el) {\r\n                        el.widgetType = relatedAssetText;\r\n                        return el;\r\n                    });\r\n\r\n                var relatedAssetObj = {\r\n                    devices: vm.widget[relatedAssetText + \"Arr\"],\r\n                    type: relatedAssetText + \"Arr\",\r\n                    title: localization.RelatedAssetText,\r\n                    icon: \"related_asset.svg\"\r\n                }\r\n                dataDeviceContainer.append(multipleDataTemplate(relatedAssetObj));\r\n                kendo.bind(dataDeviceContainer);\r\n            }\r\n\r\n            if (vm.widget.affectedDeviceArr.length > 0) {\r\n\r\n                vm.widget.affectedDeviceArr = _.map(vm.widget.affectedDeviceArr,\r\n                    function (el) {\r\n                        el.widgetType = affectedDeviceText;\r\n                        return el;\r\n                    });\r\n\r\n                var affectedDeviceObj = {\r\n                    devices: vm.widget[affectedDeviceText + \"Arr\"],\r\n                    type: affectedDeviceText + \"Arr\",\r\n                    title: localization.AffectedDeviceText,\r\n                    icon: \"affected_device.svg\"\r\n                }\r\n                dataDeviceContainer.append(multipleDataTemplate(affectedDeviceObj));\r\n                kendo.bind(dataDeviceContainer);\r\n            }\r\n\r\n            if (vm.widget.affectedAssetArr.length > 0) {\r\n\r\n                vm.widget.affectedAssetArr = _.map(vm.widget.affectedAssetArr,\r\n                    function (el) {\r\n                        el.widgetType = affectedAssetText;\r\n                        return el;\r\n                    });\r\n\r\n                var affectedAssetObj = {\r\n                    devices: vm.widget[affectedAssetText + \"Arr\"],\r\n                    type: affectedAssetText + \"Arr\",\r\n                    title: localization.AffectedAssetText,\r\n                    icon: \"affected_asset.svg\"\r\n                }\r\n                dataDeviceContainer.append(multipleDataTemplate(affectedAssetObj));\r\n                kendo.bind(dataDeviceContainer);\r\n            }\r\n\r\n            if (!vm.viewModel.hasOwnProperty('RelatesToIncident'))\r\n                $(\"#\" + primaryOwnerText + \"AddLink\").addClass(\"isDisabled\");\r\n\r\n            if (!vm.viewModel.hasOwnProperty('RequestedWorkItem'))\r\n                $(\"#\" + affectedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n\r\n            widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n\r\n            var changeCntr = 0;\r\n            vm.bind(\"change\",\r\n                function (e) {\r\n\r\n                    if (e.field.indexOf(\"RequestedWorkItem\") > -1 || e.field.indexOf(\"RelatesToIncident\") > -1 || e.field.indexOf(\"AssignedWorkItem\") > -1) {\r\n\r\n                        var propName, widgetName;\r\n\r\n                        if (e.field.indexOf(\"RequestedWorkItem\") > -1) {\r\n                            propName = \"RequestedWorkItem\";\r\n                            widgetName = affectedUserText;\r\n                        }\r\n\r\n                        if (e.field.indexOf(\"RelatesToIncident\") > -1) {\r\n                            propName = \"RelatesToIncident\";\r\n                            widgetName = primaryOwnerText;\r\n                        }\r\n\r\n                        if (e.field.indexOf(\"AssignedWorkItem\") > -1) {\r\n                            propName = \"AssignedWorkItem\";\r\n                            widgetName = assignedUserText;\r\n                        }\r\n\r\n                        if (e.field.indexOf(\"BaseId\") > -1) changeCntr++;\r\n                        if (e.field.indexOf(\"DisplayName\") > -1) changeCntr++;\r\n\r\n                        if (changeCntr === 0 || changeCntr === 2) {\r\n\r\n                            if (vm.viewModel[propName].BaseId) {\r\n\r\n                                $.getJSON('/api/V3/User/GetUserRelatedInfoByUserId',\r\n                                    { userId: vm.viewModel[propName].BaseId },\r\n                                    function(json) {\r\n\r\n                                        if (!json) return;\r\n\r\n                                        vm.widget[widgetName] = _.extend(JSON.parse(json) || {},\r\n                                            {\r\n                                                widgetType: widgetName\r\n                                            });\r\n\r\n                                        $('#' + widgetName + 'dataTemplate').remove();\r\n                                        changeCntr = 0;\r\n\r\n                                        $(\"#\" + widgetName + \"AddLink\").addClass(\"isDisabled\");\r\n                                        dataUserContainer.append(dataTemplate(getObjectDetails(widgetName)));\r\n\r\n                                        kendo.bind(dataUserContainer, vm);\r\n\r\n                                        widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n\r\n                                    });\r\n\r\n                            } else {\r\n\r\n                                $('#' + widgetName + 'dataTemplate').remove();\r\n                                $(\"#\" + widgetName + \"AddLink\").removeClass(\"isDisabled\");\r\n                                changeCntr = 0;\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (e.field.indexOf(\"RelatesToConfigItem\") > -1 || e.field.indexOf(\"HasRelatedWorkItems\") > -1) {\r\n                        var propName, widgetName;\r\n\r\n                        var item = e.items[0];\r\n\r\n                        if (item.ClassName && (item.ClassName === \"Microsoft.Windows.Computer\" || item.ClassName === \"Computer\")) {\r\n\r\n                            if(e.field.indexOf(\"RelatesToConfigItem\") > -1) {\r\n                                propName = \"RelatesToConfigItem\";\r\n                                widgetName = relatedDeviceText;\r\n                            }\r\n\r\n                            if(e.field.indexOf(\"HasRelatedWorkItems\") > -1) {\r\n                                propName = \"HasRelatedWorkItems\";\r\n                                widgetName = affectedDeviceText;\r\n                            }\r\n\r\n                            if (e.action === \"add\") {\r\n\r\n                                item = _.extend(item,\r\n                                    {\r\n                                        widgetType: widgetName\r\n                                    });\r\n\r\n                                vm.widget[widgetName + \"Arr\"].push(item);\r\n                            }\r\n\r\n                            if (e.action === \"remove\") {\r\n\r\n                                vm.widget[widgetName + \"Arr\"] = _.filter(vm.widget[widgetName + \"Arr\"],\r\n                                    function(el) {\r\n                                        return el.BaseId !== item.BaseId;\r\n                                    });\r\n                            }\r\n\r\n                            $('.' + widgetName + 'ArrdataTemplate').remove();\r\n\r\n                            var obj = {\r\n                                devices: vm.widget[widgetName + \"Arr\"],\r\n                                type: widgetName + \"Arr\",\r\n                                title: (e.field.indexOf(\"RelatesToConfigItem\") > -1)\r\n                                    ? localization.RelatedDeviceText\r\n                                    : localization.AffectedDeviceText,\r\n                                icon: (e.field.indexOf(\"RelatesToConfigItem\") > -1)\r\n                                    ? \"related_device.svg\"\r\n                                    : \"affected_device.svg\"\r\n                            }\r\n                            dataDeviceContainer.append(multipleDataTemplate(obj));\r\n                            kendo.bind(dataDeviceContainer, vm);\r\n\r\n                            widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n                        }\r\n\r\n                        if (item.ClassName && (item.ClassName === \"Cireson.AssetManagement.HardwareAsset\" || item.ClassName === \"HardwareAsset\")) {\r\n\r\n                            if (e.field.indexOf(\"RelatesToConfigItem\") > -1) {\r\n                                propName = \"RelatesToConfigItem\";\r\n                                widgetName = relatedAssetText;\r\n                            }\r\n\r\n                            if (e.field.indexOf(\"HasRelatedWorkItems\") > -1) {\r\n                                propName = \"HasRelatedWorkItems\";\r\n                                widgetName = affectedAssetText;\r\n                            }\r\n\r\n                            if (e.action === \"add\") {\r\n\r\n                                item = _.extend(item,\r\n                                    {\r\n                                        widgetType: widgetName\r\n                                    });\r\n\r\n                                vm.widget[widgetName + \"Arr\"].push(item);\r\n                            }\r\n\r\n                            if (e.action === \"remove\") {\r\n\r\n                                vm.widget[widgetName + \"Arr\"] = _.filter(vm.widget[widgetName + \"Arr\"],\r\n                                    function (el) {\r\n                                        return el.BaseId !== item.BaseId;\r\n                                    });\r\n                            }\r\n\r\n                            $('.' + widgetName + 'ArrdataTemplate').remove();\r\n\r\n                            var obj = {\r\n                                devices: vm.widget[widgetName + \"Arr\"],\r\n                                type: widgetName + \"Arr\",\r\n                                title: (e.field.indexOf(\"RelatesToConfigItem\") > -1)\r\n                                    ? localization.RelatedAssetText\r\n                                    : localization.AffectedAssetText,\r\n                                icon: (e.field.indexOf(\"RelatesToConfigItem\") > -1)\r\n                                    ? \"related_asset.svg\"\r\n                                    : \"affected_asset.svg\"\r\n                            }\r\n                            dataDeviceContainer.append(multipleDataTemplate(obj));\r\n                            kendo.bind(dataDeviceContainer, vm);\r\n\r\n                            widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n            kendo.bind(ele, vm);\r\n\r\n            return __remoteManageWidgetSingleton;\r\n        },\r\n        toggle: function (vm) {\r\n            vm.widget.open = !vm.widget.open;\r\n\r\n            if (vm.widget.open) {\r\n                if (vm.attachmentWidget) vm.attachmentWidget.open = false;\r\n                $(\"#headerAttachmentBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#attachment_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#expanded_widget\").addClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").addClass('content-header__flyout__overlay--open');\r\n            } else {\r\n                $(\"#remoteManageBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#expanded_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").removeClass('content-header__flyout__overlay--open');\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/flyout/headerAttachmentWidget/view.html',[],function () { return '<div id=\"attachment_widget\" class=\"content-header__flyout\">\\r\\n    <h3 class=\"content-header__flyout__title\">\\r\\n        <span><%= localization.FileAttachments %></span>\\r\\n    </h3>\\r\\n    <div id=\"headerAttachmentContainer\" class=\"panel-body\"></div>\\r\\n</div>';});\n\n","\ndefine('text!forms/predefined/fileAttachmentsDragDrop/view.html',[],function () { return '<div class=\"form-group\" data-bind=\"visible:isVisible\">\\r\\n    <div class=\"drop-zone-element hidden-print\">\\r\\n        <div class=\"text-wrapper\">\\r\\n            <span class=\"drag-image-text\">\\r\\n                <img data-bind=\"visible:isDesktop\" src=\"/Content/Images/Icons/FileUpload/upload_to_cloud.svg\" />\\r\\n                <span data-bind=\"visible:isDesktop\"><b><%= localization.DragAndDrop %> </b> <%= localization.YourFilesOr %> <a class=\"browse-file\"><b><%= localization.Browse %></b></a></span>\\r\\n                <a  data-bind=\"visible:isMobile\" class=\"browse-file\"><b><%= localization.Browse %></b></a>\\r\\n                <div style=\"display:none\"><input name=\"files\" id=\"files\" type=\"file\"/></div>\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div>\\r\\n    <div class=\"fileattachment-list\"></div>\\r\\n    <div class=\"fileattachment-img-modal\"></div>\\r\\n</div>\\r\\n\\r\\n<script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n    <div class=\"thumbnail-file\">\\r\\n        <div class=\"cursor-pointer thumbnail-img\">\\r\\n            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n            <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n            # } else{ #\\r\\n            <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n            # } #\\r\\n        </div>\\r\\n        <div class=\"thumbnail-caption\">\\r\\n            <span>#: DisplayName #</span>\\r\\n            <div class=\"overlay\">\\r\\n                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                        <i class=\"fa fa-eye\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                        <i class=\"fa fa-external-link\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (BaseId!=null) { #\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                        <i class=\"fa fa-download\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n                # } #\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\"  title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<style>\\r\\n\\r\\n</style>';});\n\n","/**\r\nfileAttachmentsDragDrop\r\n**/\r\n\r\ndefine('forms/predefined/fileAttachmentsDragDrop/controller',['require','text!forms/predefined/fileAttachmentsDragDrop/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/fileAttachmentsDragDrop/view.html\");\r\n   \r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            //get file content for images\r\n            if (!_.isUndefined(vm.FileAttachment) && vm.FileAttachment.length > 0) {\r\n                _.each(vm.FileAttachment, function (file) {\r\n                    if (file.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                        $.ajax({\r\n                            type: \"GET\",\r\n                            async: false,\r\n                            url: \"/FileAttachment/GetFileContentInThumbnail/\",\r\n                            data: { id: file.BaseId }\r\n                        }).then(function (data) {\r\n                            file.Content.data = data;\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            var properties = {\r\n                Required: node.Required,\r\n                BaseId: vm.BaseId,\r\n                AcceptExtension: _.isUndefined(node.AcceptExtension) ? \"\" : vm.AcceptExtension,\r\n                ClassName: vm.Clas,\r\n                Disabled: false\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            var template = $(built(properties));\r\n            var loadedImages = [];\r\n            \r\n            var viewModel = new kendo.observable({\r\n                isDesktop: !app.isMobile(),\r\n                isMobile: app.isMobile(),\r\n                isEnabled: true,\r\n                isVisible: !vm.isDisabled,\r\n                onSelect: function (e) {\r\n                    template.find(\".k-file-error\").remove();\r\n                    $.each(e.files, function (index, value) {\r\n                        if (!_.isUndefined(node.AcceptExtension)\r\n                            && node.AcceptExtension != \"\"\r\n                            && !(node.AcceptExtension.toLowerCase().indexOf(value.extension.toLowerCase()) > -1)) {\r\n                            kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.ErrorDescription,\r\n                                message: localization.FileExtensionInvalid + node.AcceptExtension,\r\n                                icon: \"fa fa-exclamation\"\r\n                            });\r\n                            e.preventDefault();\r\n                        }\r\n                    });\r\n                },\r\n                onUploadSuccess: function (e) {\r\n                    var vmFiles = !_.isUndefined(vm.FileAttachment) ? vm.FileAttachment : [];\r\n                    var response = e.response;\r\n\r\n                    if (e.operation == \"upload\") {\r\n                        for (var i = 0; i < e.files.length; i++) {\r\n                            var file = e.files[i].rawFile;\r\n                            if (file) {\r\n                                if (!_.isUndefined(response.FileAttachment)) {\r\n                                    var f = _.filter(vm.FileAttachment,\r\n                                        function(el) {\r\n                                            return el.Content.data === response.FileAttachment.Content.data && el.BaseId === response.FileAttachment.BaseId;\r\n                                        });\r\n                                    if (f.length === 0) {\r\n                                        vm.FileAttachment.push(response.FileAttachment); //save to viewModel\r\n                                        var actionLogName = app.controls.getWorkItemLogType(vm);\r\n                                        if (actionLogName) { // add  action log entry for adding file\r\n                                            boundObj[actionLogName].unshift(new app.dataModels[actionLogName].fileAdded(response.FileAttachment.DisplayName));\r\n                                        }\r\n                                    }\r\n                                        \r\n                                } else if (!_.isUndefined(response.success) && response.success == false) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.ErrorDescription,\r\n                                        message: response.message,\r\n                                        icon: \"fa fa-exclamation\"\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                onUploadError: function (e) {\r\n                    var err = $.parseJSON(e.XMLHttpRequest.responseText);\r\n                    $.map(e.files, function (file) {\r\n                        console.warn(\"Could not upload \" + file.name);\r\n                    });\r\n                },\r\n                onRemove: function (e) {\r\n                    $.get(\"/FileAttachment/RemoveFileUpload/\", { BaseId: vm.BaseId, fieldName: node.PropertyName }, function (data) {\r\n                        template.find(\".k-file\").parent().remove();\r\n                        //template.find(\"img\").hide();\r\n                        template.find(\"#div\" + node.PropertyName).hide();\r\n                        vm[node.PropertyName] = null;\r\n                    });\r\n                },\r\n                onOpenFile: function (el) {\r\n                    var dialogOrig = $('.fileattachment-img-modal');\r\n                    var dialog = dialogOrig.clone();\r\n                    var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                    var listView = template.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                    var item = el.closest(\"[role='option']\");\r\n                    var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n\r\n                    \r\n\r\n                    function openFile() {\r\n                        app.lib.mask.remove();\r\n                        if (el.hasClass(\"opennewtab\")) { //open on a new tab\r\n                            var win = window.open('about:blank');\r\n                            setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                                win.document.body.appendChild(win.document.createElement('img')).src = \"data:image/jpg;base64,\" + dataItem.Content.data;\r\n                                win.href = \"data:image/jpg;base64,\" + dataItem.Content.data;\r\n                                win.focus();\r\n                            }, 0);\r\n\r\n                        }\r\n                        else {\r\n                            if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/) && !el.hasClass(\"download\")) { //open on a preview dialog\r\n                                dialog.kendoDialog({\r\n                                    modal: true,\r\n                                    title: dataItem.DisplayName,\r\n                                    content: \"<div class='file-img-container'><img src=\\\"data:image/jpg;base64,\" + dataItem.Content.data + \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" + dataItem.DisplayName + \"\\\" /></div>\",\r\n                                    animation: {\r\n                                        open: {\r\n                                            effects: \"fade:in\"\r\n                                        }\r\n                                    },\r\n                                    show: function (e) {\r\n                                    },\r\n                                    close: function (e) {\r\n                                        dialog.remove();\r\n                                    }\r\n                                });\r\n\r\n\r\n                                dialog.parent().css(\"position\", \"fixed\");\r\n                                dialog.data(\"kendoDialog\").open();\r\n\r\n\r\n\r\n                                //close preview window on overlay click\r\n                                $('.k-overlay').on(\"click\", function () {\r\n                                    dialog.data(\"kendoDialog\").close();\r\n                                });\r\n\r\n                            } else { //download file\r\n                                if (!_.isNull(dataItem.BaseId)) {\r\n                                    location.href = downloadUrl + dataItem.BaseId;\r\n                                } else {\r\n                                    if (dataItem.Content.data) {\r\n                                        var fileName = dataItem.DisplayName;\r\n                                        var a = document.createElement(\"a\");\r\n                                        document.body.appendChild(a);\r\n                                        a.style = \"display: none\";\r\n\r\n                                        a.href = \"data:application/octet-stream;charset=utf-16le;base64,\" + dataItem.Content.data;\r\n                                        a.download = fileName;\r\n                                        a.click();\r\n                                        document.body.removeChild(a);\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    app.lib.mask.apply();\r\n                    _.defer(function () {\r\n                        //This will load the actual image size from the server.\r\n                        var listExist = _.filter(loadedImages, function (item) { return item.id == dataItem.BaseId });\r\n                        if (listExist.length <= 0) {\r\n                            \r\n                            $.ajax({\r\n                                type: \"GET\",\r\n                                async: false,\r\n                                url: \"/FileAttachment/GetFileContent/\",\r\n                                data: { id: dataItem.BaseId }\r\n                            }).then(function (data) {\r\n\r\n                                //dataItem.Content.data\r\n                                if (data == \"\") {\r\n                                    openFile();\r\n                                }\r\n                                else {\r\n                                    loadedImages.unshift({ id: dataItem.BaseId, img: data });\r\n                                    dataItem.Content.data = data;\r\n                                    openFile();\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            openFile();\r\n                        }\r\n                    });\r\n                    \r\n                    \r\n                }\r\n            });\r\n\r\n            _.defer(function () {\r\n                kendo.bind(template, viewModel);\r\n                template.find(\".fileattachment-list\").kendoListView({\r\n                    dataSource: vm.FileAttachment,\r\n                    template: kendo.template($(\"#fileTemplate\").html()),\r\n                    selectable: \"single\",\r\n                    //change: viewModel.onOpenFile,\r\n                    dataBound: function () {\r\n                        template.find(\".custom-click\").on(\"click\", function () {\r\n                            viewModel.onOpenFile($(this));\r\n                        });\r\n\r\n                        if (!app.isMobile()) {\r\n                            //Remove view image icon if not in mobile.\r\n                            template.find(\"a[view-image]\").parent().hide();\r\n\r\n                            template.find(\".thumbnail-img\").on(\"click\", function () {\r\n                                viewModel.onOpenFile($(this));\r\n                            });\r\n                        }\r\n                        \r\n                    },\r\n                    remove: function (e) {\r\n                        var actionLogName = app.controls.getWorkItemLogType(vm);\r\n                        if (actionLogName) { // add  action log entry for removing file\r\n                            boundObj[actionLogName].unshift(new app.dataModels[actionLogName].fileRemoved(e.model.DisplayName));\r\n                        }\r\n                    }\r\n                });\r\n\r\n                $(\"#files\").kendoUpload({\r\n                    async: {\r\n                        saveUrl: \"/FileAttachment/UploadAttachment/\" + vm.BaseId + \"?className=\" + vm.ClassName,\r\n                        removeUrl: \"remove\",\r\n                        autoUpload: true\r\n                    },\r\n                    success:  viewModel.onUploadSuccess,\r\n                    error: viewModel.onUploadError,\r\n                    showFileList: false,\r\n                    dropZone: \".drop-zone-element\"\r\n                });\r\n\r\n                $(\".browse-file\").off('click').on('click', function () {\r\n                    $(\"#files\").trigger(\"click\");\r\n                });\r\n\r\n               \r\n            });\r\n            callback(template);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","var __headerAttachmentWidgetSingleton;\r\n\r\ndefine('forms/flyout/headerAttachmentWidget/controller',['require','text!forms/flyout/headerAttachmentWidget/view.html','text!forms/predefined/fileAttachmentsDragDrop/view.html','forms/predefined/fileAttachmentsDragDrop/controller'],function (require) {\r\n    var tpl = require(\"text!forms/flyout/headerAttachmentWidget/view.html\");\r\n    var attachmentTpl = require(\"text!forms/predefined/fileAttachmentsDragDrop/view.html\");\r\n    var fileAttachmentsDragDrop = require(\"forms/predefined/fileAttachmentsDragDrop/controller\");\r\n    var definition = {\r\n        template: tpl,\r\n        getWidget: function (vm) {\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            var main_row = $('.page_bar.sticky-header').first().children('.row').first();\r\n            main_row.after(ele);\r\n\r\n            var getContainer = function (tplReturn) {\r\n                return (typeof (tplReturn) === \"string\") ? $(tplReturn) : tplReturn;\r\n            }\r\n\r\n            var headerAttachmentContainer = $('#headerAttachmentContainer');\r\n            //headerAttachmentContainer.append(eleAttachment);\r\n\r\n            fileAttachmentsDragDrop.build(vm.viewModel, { name: \"File Attachments\", type: \"fileAttachmentsDragDrop\" }, function (tplReturn) {\r\n                var _container = getContainer(tplReturn);\r\n                headerAttachmentContainer.append(_container);\r\n            });\r\n\r\n            vm.attachmentWidget = {\r\n                open: false\r\n            }\r\n\r\n            kendo.bind(ele, vm);\r\n\r\n            return __headerAttachmentWidgetSingleton;\r\n        },\r\n        toggle: function (vm) {\r\n            vm.attachmentWidget.open = !vm.attachmentWidget.open;\r\n\r\n            if (vm.attachmentWidget.open) {\r\n                if (vm.widget) vm.widget.open = false;\r\n                $(\"#remoteManageBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#expanded_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#attachment_widget\").addClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").addClass('content-header__flyout__overlay--open');\r\n            } else {\r\n                $(\"#headerAttachmentBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#attachment_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").removeClass('content-header__flyout__overlay--open');\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nHeader Sticky\r\n**/\r\ndefine('forms/header/sticky/controller',['require','text!forms/header/sticky/view.html','forms/flyout/fileAttachmentsFlyout/controller','forms/flyout/remoteManageWidget/controller','forms/flyout/headerAttachmentWidget/controller'],function (require) {\r\n    var tpl = require(\"text!forms/header/sticky/view.html\");\r\n    var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n    var remoteManageWidget = require(\"forms/flyout/remoteManageWidget/controller\");\r\n\r\n    if (app.featureSet.isActive(\"HeaderAttachments\"))\r\n        var headerAttachmentWidget = require(\"forms/flyout/headerAttachmentWidget/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n            \r\n            vm.view.showAttachments = app.featureSet.isActive(\"HeaderAttachments\");\r\n\r\n            //modify vm for this view\r\n            //vm.view.viewAttachments = function () {\r\n\r\n            //    var flyoutWindow = attachmentPickerFlyout.getPopup(vm);\r\n            //    flyoutWindow.open();\r\n            //}\r\n\r\n            //vm.view.filesCount = vm.viewModel.FileAttachment.length;\r\n\r\n            vm.view.statusVisible = function () {\r\n                if (vm.newWI) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            vm.view.showRemoteManageIcon = (session.consoleSetting.TrueControlCenterURL && !app.isMobile() && session.user.Analyst) ? true : false;\r\n\r\n            var view = new kendo.View(built(), {\r\n                wrap: false,\r\n                init: function () {\r\n\r\n                    setTimeout(function() {\r\n                        DoWork(); \r\n                        if ($(\"#expanded_widget\").length === 0 && vm.view.showRemoteManageIcon) {\r\n                            remoteManageWidget.getWidget(vm);\r\n                        }\r\n                        if ($(\"#attachment_widget\").length === 0 && vm.view.showAttachments) {\r\n                            headerAttachmentWidget.getWidget(vm);\r\n                        }\r\n                    }, 100);\r\n                },\r\n                model: vm\r\n            });\r\n\r\n            //this function is called from the link parent task so we need to allow callback function to be an input\r\n            vm.view.buildParentHeaderView = function (viewCallBack) {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n\r\n                //modify vm for this view\r\n                vm.view.controller = {\r\n                    parentIncident: (vm.type === \"ReleaseRecord\") ? localization.ParentRecord : localization.Parentincident,\r\n                    editHref: \"/\" + vm.type + \"/Edit/\" + vm.viewModel.ParentWorkItem.Id + \"/\",\r\n                    editLink: vm.viewModel.ParentWorkItem.Id + \"-\" + vm.viewModel.ParentWorkItem.Title,\r\n                    unlinkParent: function () {\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: localization.UnlinkToParent,\r\n                            message: localization.SureUnlinkToParent\r\n                        })\r\n                        ).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                delete vm.viewModel.ParentWorkItem;\r\n                                vm.viewModel.set(\"isDirty\", true);\r\n                                vm.view.controller.isParent = false;\r\n                                view.destroy();\r\n                                view = new kendo.View(built(), {\r\n                                    wrap: false,\r\n                                    init: function () {\r\n\r\n                                        setTimeout(function () {\r\n                                            DoWork();\r\n                                            if ($(\"#expanded_widget\").length === 0 && vm.view.showRemoteManageIcon) {\r\n                                                remoteManageWidget.getWidget(vm);\r\n                                            }\r\n                                            if ($(\"#attachment_widget\").length === 0 && vm.view.showAttachments) {\r\n                                                headerAttachmentWidget.getWidget(vm);\r\n                                            }\r\n                                        }, 100);\r\n                                    },\r\n                                    model: vm\r\n                                });\r\n\r\n                                callback(view.render());\r\n                            }\r\n                        });\r\n                    },\r\n                    isParent: (vm.viewModel.ParentWorkItem) ? true : false,\r\n                    isAnalystUser: (session.user.Analyst) ? true : false\r\n                }\r\n                view.destroy();\r\n\r\n                view = new kendo.View(built(), {\r\n                    wrap: false,\r\n                    init: function () {\r\n\r\n                        setTimeout(function () {\r\n                            DoWork();\r\n                            if ($(\"#expanded_widget\").length === 0 && vm.view.showRemoteManageIcon) {\r\n                                remoteManageWidget.getWidget(vm);\r\n                            }\r\n                            if ($(\"#attachment_widget\").length === 0 && vm.view.showAttachments) {\r\n                                headerAttachmentWidget.getWidget(vm);\r\n                            }\r\n                        }, 100);\r\n                    },\r\n                    model: vm\r\n                });\r\n\r\n\r\n                viewCallBack(callback(view.render()));\r\n            }\r\n\r\n            vm.view.isSLOopen = false;\r\n\r\n            vm.view.toggleSLODropdown = function () {\r\n                vm.view.isSLOopen = !vm.view.isSLOopen;\r\n\r\n                if(vm.view.isSLOopen)\r\n                    $(\".content-header__collapser__dropdown\").addClass(\"content-header__collapser__dropdown--show\");\r\n                else\r\n                    $(\".content-header__collapser__dropdown\").removeClass(\"content-header__collapser__dropdown--show\");\r\n            }\r\n\r\n            window.closeSLODropdown = function() {\r\n                vm.view.toggleSLODropdown();\r\n            }\r\n\r\n            var DoWork = function () {\r\n\r\n                if (vm.viewModel[\"SLO\"] && vm.viewModel[\"SLO\"].length > 0) {\r\n\r\n                    var first_sloObjects = [vm.viewModel[\"SLO\"][0]],\r\n                        first_sloContainer = $(\".first-header-slo-container\");\r\n\r\n                    DoWorkSLOHeader(true, first_sloContainer, first_sloObjects, false);\r\n\r\n                    var sloContainer = $(\".header-slo-container\"),\r\n                        sloObjects = vm.viewModel[\"SLO\"];\r\n\r\n                    DoWorkSLOHeader(false, sloContainer, sloObjects, true);\r\n\r\n                } else {\r\n                    $(\".first-header-slo-container\").parent().hide();\r\n                }\r\n            }\r\n\r\n            var DoWorkSLOHeader = function (headerslo, sloContainer, sloObjects, isDropdown) {\r\n                var sloActive = \"SLAInstance.Status.Active\",\r\n                    sloPaused = \"SLAInstance.Status.Paused\",\r\n                    sloMet = \"SLAInstance.Status.Met\",\r\n                    sloWarning = \"SLAInstance.Status.Warning\",\r\n                    sloBreached = \"SLAInstance.Status.Breached\",\r\n                    sloNotReady = \"SLAInstance.Status.NotReady\";\r\n\r\n                for (var key in sloObjects) {\r\n                    if (sloObjects[key].DisplayName == null) continue;\r\n                    var isMet = false;\r\n                    var isPaused = false;\r\n\r\n                    //var sloTemplate = kendo.template(sloViewObj.find(\"#slo-template\").html());\r\n                    var sloTemplate = (isDropdown) ? kendo.template($(\"#header-slo-template\").html()) : kendo.template($(\"#first-header-slo-template\").html());\r\n\r\n                    var sloObj = {};\r\n                    sloObj.index = key;\r\n                    sloObj.count = vm.viewModel[\"SLO\"].length;\r\n                    sloObj.Id = sloObjects[key].DisplayName.replace(\" \", \"\");\r\n                    sloObj.Title = sloObjects[key].DisplayName;\r\n\r\n                    switch (sloObjects[key].Status) {\r\n                        case sloActive:\r\n                            sloObj.imageClass = \"fa-clock-o text-primary\";\r\n                            break;\r\n                        case sloPaused:\r\n                        case sloNotReady:\r\n                            isPaused = true;\r\n                            sloObj.imageClass = \"fa-pause text-info\";\r\n                            break;\r\n                        case sloMet:\r\n                            sloObj.imageClass = \"fa-check-circle-o text-success\";\r\n                            //vm.view.controller.isMet = true;\r\n                            isMet = true;\r\n                            break;\r\n                        case sloWarning:\r\n                            sloObj.imageClass = \"fa-exclamation-circle text-warning\";\r\n                            break;\r\n                        case sloBreached:\r\n                            sloObj.imageClass = \"fa-bell text-danger\";\r\n                            isBreach = true;\r\n                            break;\r\n                    }\r\n\r\n                    var sloImg = sloObj.imageClass; //should remove\r\n                    \r\n                    var addAttr = (headerslo) ? \"slo-displayed\" : \"slo-dropdown-\" + key;\r\n                        \r\n                    var clone = $('<div/>').addClass(\"content-header__collapser\").attr('id', addAttr);\r\n\r\n                    clone.html(sloTemplate(sloObj));\r\n\r\n                    //alert(sloObjects[key].Time.Hours);\r\n                    SLOCoundown(addAttr, clone, isMet, isPaused, sloObjects[key].Time.Hours, sloObjects[key].Time.Minutes, sloObjects[key].Time.Seconds,\r\n                        eval(sloObjects[key].WarningDate), eval(sloObjects[key].ServerDatetimeNow), false);\r\n                    sloContainer.append(clone);\r\n                }\r\n            }\r\n\r\n            var SLOCoundown = function (elementAttr, sloCloned, isMetStat, isPaused, hours, minutes, seconds, warningDate, serverCurrentDate, isBreach) {\r\n                //force warning image\r\n                var elementContainer = $($(\"#\" + elementAttr, sloCloned).prevObject);\r\n                elementContainer.find(\".header-slo-icon\").first().addClass(elementAttr)\r\n                elementContainer.find(\".header-slo-timer\").first().addClass(elementAttr)\r\n\r\n                var sloIcon = $(\".header-slo-icon.\" + elementAttr);\r\n                var sloTimer = $(\".header-slo-timer.\" + elementAttr);\r\n\r\n                if (!isMetStat && !isBreach && warningDate <= serverCurrentDate) {\r\n                    //reset all classes \r\n                    sloIcon.attr('class', \"header-slo-icon fa fa-exclamation-circle text-warning fa-lg\");\r\n                }\r\n\r\n                //set breached\r\n                if (!isMetStat && (seconds <= 0 && minutes <= 0 && hours <= 0)) {\r\n                    isBreach = true;\r\n                    sloIcon.attr('class', \"header-slo-icon fa fa-bell text-danger fa-lg\");\r\n                    sloTimer.addClass(\"text-danger\");\r\n                }\r\n\r\n                //set time in view\r\n                if (!isMetStat) {\r\n                    var secs = (Math.abs(seconds) < 10) ? \"0\" + Math.abs(seconds) : Math.abs(seconds);\r\n                    var mins = (Math.abs(minutes) < 10) ? \"0\" + Math.abs(minutes) : Math.abs(minutes);\r\n                    var hrs = (Math.abs(hours) < 10) ? \"0\" + Math.abs(hours) : Math.abs(hours);\r\n                    if (isBreach) {\r\n                        sloTimer.html(\"\");\r\n                    } else\r\n                        sloTimer.first().html((isBreach ? \"-\" : \"\") + Math.abs(hrs) + \":\" + mins + \":\" + secs);\r\n                    //return;\r\n                } else {\r\n                    sloTimer.html(\"&nbsp;\");\r\n                    return;\r\n                }\r\n\r\n                if (isPaused) return;\r\n\r\n                //make the fancy js countdown\r\n                serverCurrentDate.setSeconds(serverCurrentDate.getSeconds() + 1);\r\n                seconds = parseInt(seconds) - 1;\r\n\r\n\r\n                if (seconds <= 0 && minutes <= 0 && hours <= 0) {\r\n                    if (seconds <= -60) {\r\n                        seconds = 0;\r\n                        minutes = parseInt(minutes) - 1;\r\n                    }\r\n\r\n                    if (minutes <= -60) {\r\n                        minutes = 0;\r\n                        hours = parseInt(hours) - 1;\r\n                    }\r\n                } else {\r\n                    if (minutes < 0) {\r\n                        minutes = 59;\r\n                        hours = parseInt(hours) - 1;\r\n                    }\r\n\r\n                    if (seconds < 0) {\r\n                        seconds = 59;\r\n                        minutes = parseInt(minutes) - 1;\r\n                    }\r\n                }\r\n\r\n\r\n                setTimeout(function () {\r\n                    SLOCoundown(elementAttr, sloCloned, isMetStat, isPaused, hours, minutes, seconds,\r\n                        warningDate, serverCurrentDate, isBreach);\r\n                }, 1000);\r\n            }\r\n\r\n            vm.view.doClick = function (e) {\r\n                if ($(e.currentTarget).hasClass(\"btn-icon-stack--active\"))\r\n                    $(e.currentTarget).removeClass(\"btn-icon-stack--active\");\r\n                else\r\n                    $(e.currentTarget).addClass(\"btn-icon-stack--active\");\r\n                remoteManageWidget.toggle(vm);\r\n            }\r\n\r\n            vm.view.toggleMore = function() {\r\n                $('#openmore').modal('show');\r\n\r\n                $('#openmore').on('shown.bs.modal',\r\n                    function() {\r\n                        $('.modal-backdrop').each(function (i, obj) {\r\n                            $('#openmore').before(obj);\r\n                        });\r\n                    });\r\n            }\r\n\r\n            vm.view.viewAttachments = function (e) {\r\n                if ($(e.currentTarget).hasClass(\"btn-icon-stack--active\"))\r\n                    $(e.currentTarget).removeClass(\"btn-icon-stack--active\");\r\n                else\r\n                    $(e.currentTarget).addClass(\"btn-icon-stack--active\");\r\n                headerAttachmentWidget.toggle(vm);\r\n            }\r\n\r\n            //set page <title>\r\n            document.title = vm.view.title + ' - ' + vm.view.id;\r\n\r\n            if (!_.isNull(vm.viewModel.ParentWorkItem) &&\r\n                !_.isUndefined(vm.viewModel.ParentWorkItem)) {\r\n                vm.view.buildParentHeaderView(function(tpl) {\r\n                });\r\n            } else {\r\n                vm.view.controller = {\r\n                    isParent: (vm.viewModel.ParentWorkItem) ? true : false\r\n                }\r\n            }\r\n\r\n            //This will count the attachment and display it to the badge.\r\n            _.defer(function () {\r\n                var headerAttachmentBtnBadge = $(\"#headerAttachmentBtn .content-header__collapser__icon-badge\");\r\n                function showBadge() {\r\n                    if (vm.viewModel.FileAttachment.length > 0) {\r\n                        headerAttachmentBtnBadge.html(vm.viewModel.FileAttachment.length);\r\n                        headerAttachmentBtnBadge.show();\r\n                    }\r\n                    else {\r\n                        headerAttachmentBtnBadge.hide();\r\n                    }\r\n                }\r\n                showBadge();\r\n\r\n                vm.viewModel.FileAttachment.bind(\"change\", function (e) {\r\n                    showBadge();\r\n                });\r\n            });\r\n\r\n            $('body').click(function (e) {\r\n\r\n                if (e.target.id === 'expanded_widget' || $(e.target).parents('#expanded_widget').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'remoteManageBtn' || $(e.target).parents('#remoteManageBtn').length > 0)\r\n                    return;\r\n\r\n                if ($(e.target).hasClass(\"support-tools__widget__action\") || $(e.target).parents('.support-tools__widget__action').length > 0)\r\n                    return;\r\n\r\n                if ($(e.target).hasClass(\"multi-query__list__selected-items\") || $(e.target).parents('.multi-query__list__selected-items').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'attachment_widget' || $(e.target).parents('#attachment_widget').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'headerAttachmentContainer' || $(e.target).parents('#headerAttachmentContainer').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'headerAttachmentBtn' || $(e.target).parents('#headerAttachmentBtn').length > 0)\r\n                    return;\r\n\r\n                if ($(e.target).hasClass(\"thumbnail-file\") || $(e.target).parents('.thumbnail-file').length > 0)\r\n                    return;\r\n\r\n                if (vm.widget) vm.widget.open = false;\r\n                $(\"#remoteManageBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#expanded_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").removeClass('content-header__flyout__overlay--open');\r\n\r\n                if (vm.attachmentWidget) vm.attachmentWidget.open = false;\r\n                $(\"#headerAttachmentBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#attachment_widget\").removeClass('content-header__flyout--open');\r\n            });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/stickyCI/view.html',[],function () { return '<div class=\"content-header__container\">\\r\\n    <div class=\"content-header\">\\r\\n        <div class=\"content-header__main\">\\r\\n            <div class=\"content-header__main__title\" data-bind=\"text: view.Title\">\\r\\n            </div>\\r\\n            <div class=\"content-header__main__details\">\\r\\n                <span class=\"status-pill status-pill--active\" data-bind=\"visible: view.statusVisible, text: view.StatusName\">\\r\\n                    Active\\r\\n                </span>\\r\\n                <div class=\"content-header__main__icon-stack hidden-print\">\\r\\n                    <!--<button id=\"headerAttachmentBtn\" class=\"btn k-button btn-icon-stack\" data-bind=\"click: view.viewAttachments, visible: view.showAttachments\">\\r\\n                        <img src=\"../../../../Content/Images/Icons/RemoteManage/attach.svg\" alt=\"attach\" />\\r\\n                    </button>-->\\r\\n                    <button id=\"remoteManageBtn\" class=\"btn k-button btn-icon-stack\" data-bind=\"click: view.doClick, visible: view.showRemoteManageIcon\">\\r\\n                        <img src=\"../../../../Content/Images/Icons/RemoteManage/RS-black-simple@32h.png\" alt=\"remote\" />\\r\\n                    </button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div id=\"content-header-backdrop\" class=\"content-header__flyout__overlay\">\\r\\n</div>';});\n\n","/**\r\nHeader Sticky for AM pages\r\n**/\r\ndefine('forms/header/stickyCI/controller',['require','text!forms/header/stickyCI/view.html','forms/flyout/fileAttachmentsFlyout/controller','forms/flyout/remoteManageWidget/controller','forms/flyout/headerAttachmentWidget/controller'],function (require) {\r\n    var tpl = require(\"text!forms/header/stickyCI/view.html\");\r\n    var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n    var remoteManageWidget = require(\"forms/flyout/remoteManageWidget/controller\");\r\n\r\n    if (app.featureSet.isActive(\"HeaderAttachments\"))\r\n        var headerAttachmentWidget = require(\"forms/flyout/headerAttachmentWidget/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n\r\n            vm.view.showAttachments = app.featureSet.isActive(\"HeaderAttachments\");\r\n\r\n            //modify vm for this view\r\n            //vm.view.viewAttachments = function () {\r\n\r\n            //    var flyoutWindow = attachmentPickerFlyout.getPopup(vm);\r\n            //    flyoutWindow.open();\r\n            //}\r\n\r\n            //vm.view.filesCount = vm.viewModel.FileAttachment.length;\r\n\r\n            vm.view.statusVisible = function () {\r\n                if (vm.isNew) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            var withRMSupport = ([\"HardwareAsset\", \"Microsoft.Windows.Computer\", \"System.Domain.User\"].indexOf(vm.type) > -1) ? true : false;\r\n\r\n            vm.view.showRemoteManageIcon = (session.consoleSetting.TrueControlCenterURL && !app.isMobile() && withRMSupport && session.user.Analyst) ? true : false;\r\n\r\n            var view = new kendo.View(built(), {\r\n                wrap: false,\r\n                init: function () {\r\n\r\n                    setTimeout(function() {\r\n                        if ($(\"#expanded_widget\").length === 0) {\r\n                            remoteManageWidget.getWidget(vm);\r\n                        }\r\n                        if ($(\"#attachment_widget\").length === 0 && vm.view.showAttachments) {\r\n                            headerAttachmentWidget.getWidget(vm);\r\n                        }\r\n                    }, 100);\r\n                },\r\n                model: vm\r\n            });\r\n\r\n            vm.view.doClick = function (e) {\r\n                if ($(e.currentTarget).hasClass(\"btn-icon-stack--active\"))\r\n                    $(e.currentTarget).removeClass(\"btn-icon-stack--active\");\r\n                else\r\n                    $(e.currentTarget).addClass(\"btn-icon-stack--active\");\r\n\r\n                var type = (vm.type === \"System.Domain.User\") ? \"user\" : \"computer\";\r\n                var model = (vm.type === \"HardwareAsset\") ? vm.viewModel.Target_HardwareAssetHasAssociatedCI : vm.viewModel;\r\n                var src = app.slideOutNav.getTCCSourceURL(model, type);\r\n                var options = {\r\n                    url: src,\r\n                    tooltip: (type === \"user\")\r\n                        ? localization.UserManagement\r\n                        : localization.ComputerManagement\r\n                }\r\n                app.slideOutNav.show(options);\r\n            }\r\n\r\n            vm.view.viewAttachments = function (e) {\r\n                if ($(e.currentTarget).hasClass(\"btn-icon-stack--active\"))\r\n                    $(e.currentTarget).removeClass(\"btn-icon-stack--active\");\r\n                else\r\n                    $(e.currentTarget).addClass(\"btn-icon-stack--active\");\r\n                headerAttachmentWidget.toggle(vm);\r\n            }\r\n\r\n            var initDisplays = function (model, rebind) {\r\n                \r\n                \r\n                vm.view.Title = vm.view.title + \" - \" + (_.isEmpty(model.viewModel.DisplayName) ? localization.New : model.viewModel.DisplayName );\r\n                vm.view.StatusName = (model.viewModel.ObjectStatus) ? model.viewModel.ObjectStatus.Name : \"None\";\r\n\r\n                if (rebind)\r\n                    kendo.bind($(\".content-header__container\"), vm);\r\n\r\n            }\r\n            initDisplays(vm, false);\r\n\r\n            //set page <title>\r\n            document.title = vm.view.title + ' - ' + vm.view.id;\r\n\r\n            $('body').click(function (e) {\r\n\r\n                if (e.target.id === 'expanded_widget' || $(e.target).parents('#expanded_widget').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'remoteManageBtn' || $(e.target).parents('#remoteManageBtn').length > 0)\r\n                    return;\r\n\r\n                if ($(e.target).hasClass(\"support-tools__widget__action\") || $(e.target).parents('.support-tools__widget__action').length > 0)\r\n                    return;\r\n\r\n                if ($(e.target).hasClass(\"multi-query__list__selected-items\") || $(e.target).parents('.multi-query__list__selected-items').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'attachment_widget' || $(e.target).parents('#attachment_widget').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'headerAttachmentContainer' || $(e.target).parents('#headerAttachmentContainer').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'headerAttachmentBtn' || $(e.target).parents('#headerAttachmentBtn').length > 0)\r\n                    return;\r\n\r\n                if ($(e.target).hasClass(\"thumbnail-file\") || $(e.target).parents('.thumbnail-file').length > 0)\r\n                    return;\r\n\r\n                if (vm.widget) vm.widget.open = false;\r\n                $(\"#remoteManageBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#expanded_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").removeClass('content-header__flyout__overlay--open');\r\n\r\n                if (vm.attachmentWidget) vm.attachmentWidget.open = false;\r\n                $(\"#headerAttachmentBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#attachment_widget\").removeClass('content-header__flyout--open');\r\n            });\r\n\r\n            var changeCntr = 0;\r\n            vm.bind(\"change\",\r\n                function (e) {\r\n\r\n                    if (e.field.indexOf(\"HardwareAssetStatus\") > -1) {\r\n                        changeCntr++\r\n\r\n                        if (changeCntr === 2) {\r\n                            initDisplays(e.sender, true);\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/status/view.html',[],function () { return '<h1 class=\"page_title\">\\r\\n    <span data-bind=\"text: view.title\"></span><span>-</span><span class=\"uppercase\" data-bind=\"text: view.id\"></span>\\r\\n    <span class=\"cursor-pointer\" id=\"viewAttachments\" data-bind=\"click: view.viewAttachments, visible: view.filesCount > 0\"><i class=\"fa fa-paperclip text-primary\" style=\"font-size: inherit\"></i></span>\\r\\n    <span class=\"label label-info label-heading\" id=\"statusname\" data-bind=\"visible: view.statusVisible, text: viewModel.Status.Name\"></span>\\r\\n    <span class=\"label label-heading\" data-bind=\"visible: viewModel.IsParent\"><img src=\"/Content/Images/Icons/WorkItemsStatus/workitem-parent-icon.svg\"></span>\\r\\n</h2>\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/status/controller',['require','text!forms/header/status/view.html','forms/flyout/fileAttachmentsFlyout/controller'],function (require) {\r\n    var tpl = require(\"text!forms/header/status/view.html\");\r\n    var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n            \r\n            //modify vm for this view\r\n            vm.view.viewAttachments = function () {\r\n\r\n                var flyoutWindow = attachmentPickerFlyout.getPopup(vm);\r\n                flyoutWindow.open();\r\n            }\r\n\r\n            vm.view.filesCount = vm.viewModel.FileAttachment.length;\r\n\r\n            vm.view.statusVisible = function () {\r\n                if (vm.newWI) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            //set page <title>\r\n            document.title = vm.view.title + ' - ' + vm.view.id;\r\n\r\n            var view = new kendo.View(built(), { wrap: false, model: vm });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/relationships/controller',['require','text!forms/header/relationships/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/relationships/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //we need to have a container to add to via task\r\n            var container = $('<div/>').attr(\"id\", \"parent-header-space\");\r\n            var view = new kendo.View(container, { wrapper: false });\r\n           \r\n            //this function is called from the link parent task so we need to allow callback function to be an input\r\n            vm.view.buildParentHeaderView = function (viewCallBack) {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                \r\n                //modify vm for this view\r\n                vm.view.controller = {\r\n                    parentIncident: (vm.type === \"ReleaseRecord\") ? localization.ParentRecord : localization.Parentincident,\r\n                    editHref: \"/\"+vm.type+\"/Edit/\" + vm.viewModel.ParentWorkItem.Id + \"/\",\r\n                    editLink: vm.viewModel.ParentWorkItem.Id + \"-\" + vm.viewModel.ParentWorkItem.Title,\r\n                    unlinkParent: function () {\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: localization.UnlinkToParent,\r\n                            message: localization.SureUnlinkToParent\r\n                        })\r\n                        ).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                delete vm.viewModel.ParentWorkItem;\r\n                                vm.viewModel.set(\"isDirty\", true);\r\n                                view.content.hide();\r\n                            } else {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                viewCallBack(built());\r\n            }\r\n\r\n            if (!_.isNull(vm.viewModel.ParentWorkItem) &&\r\n                !_.isUndefined(vm.viewModel.ParentWorkItem)) {\r\n                vm.view.buildParentHeaderView(function (tpl) {\r\n                    //destroy default container\r\n                    view.destroy();\r\n\r\n                    container.append(tpl);\r\n                    view = new kendo.View(container, { wrapper: false, model: vm });\r\n                    callback(view.render());\r\n                });\r\n            } else {\r\n                callback(view.render());\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/slo/view.html',[],function () { return '<div class=\"slo-container pull-right\">\\r\\n\\r\\n</div>\\r\\n<script id=\"slo-template\" type=\"text/x-kendo-template\">\\r\\n        <li class=\"slo-timer\"></li>\\r\\n        <li class=\"slo-icon fa #: imageClass # fa-lg\"></li>\\r\\n        <li class=\"slo-title\">#: Title #</li>\\r\\n</script>';});\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/slo/controller',['require','text!forms/header/slo/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/slo/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function(vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            if (vm.isAnalyst) {\r\n                var built = _.template(tpl);\r\n\r\n                var view = new kendo.View(built(), {\r\n                    wrap: false,\r\n                    init: function() {\r\n                        setTimeout(function() { DoWork(); }, 100);\r\n                    },\r\n                    model: vm\r\n                });\r\n                view.render(); //so we can manipulate it\r\n\r\n                var DoWork = function() {\r\n\r\n                    if (vm.viewModel[\"SLO\"] == null) return;\r\n\r\n                    var sloViewObj = view.element,\r\n                        sloObjects = vm.viewModel[\"SLO\"],\r\n                        sloActive = \"SLAInstance.Status.Active\",\r\n                        sloPaused = \"SLAInstance.Status.Paused\",\r\n                        sloMet = \"SLAInstance.Status.Met\",\r\n                        sloWarning = \"SLAInstance.Status.Warning\",\r\n                        sloBreached = \"SLAInstance.Status.Breached\",\r\n                        sloNotReady = \"SLAInstance.Status.NotReady\";\r\n\r\n                    //var sloContainer = sloViewObj.find(\".slo-container\");\r\n                    var sloContainer = $(\".slo-container\");\r\n\r\n                    for (var key in sloObjects) {\r\n                        if (sloObjects[key].DisplayName == null) continue;\r\n                        var isMet = false;\r\n                        var isPaused = false;\r\n\r\n                        //var sloTemplate = kendo.template(sloViewObj.find(\"#slo-template\").html());\r\n                        var sloTemplate = kendo.template($(\"#slo-template\").html());\r\n\r\n                        var sloObj = {};\r\n                        sloObj.Id = sloObjects[key].DisplayName.replace(\" \", \"\");\r\n                        sloObj.Title = sloObjects[key].DisplayName;\r\n\r\n                        switch (sloObjects[key].Status) {\r\n                        case sloActive:\r\n                            sloObj.imageClass = \"fa-clock-o text-primary\";\r\n                            break;\r\n                        case sloPaused:\r\n                        case sloNotReady:\r\n                            isPaused = true;\r\n                            sloObj.imageClass = \"fa-pause text-info\";\r\n                            break;\r\n                        case sloMet:\r\n                            sloObj.imageClass = \"fa-check-circle-o text-success\";\r\n                            //vm.view.controller.isMet = true;\r\n                            isMet = true;\r\n                            break;\r\n                        case sloWarning:\r\n                            sloObj.imageClass = \"fa-exclamation-circle text-warning\";\r\n                            break;\r\n                        case sloBreached:\r\n                            sloObj.imageClass = \"fa-bell text-danger\";\r\n                            isBreach = true;\r\n                            break;\r\n                        }\r\n\r\n                        var sloImg = sloObj.imageClass; //should remove\r\n\r\n                        var clone = $('<ul/>').addClass(\"slo-status-item\");\r\n                        clone.html(sloTemplate(sloObj));\r\n\r\n                        //alert(sloObjects[key].Time.Hours);\r\n                        SLOCoundown(clone, isMet, isPaused, sloObjects[key].Time.Hours, sloObjects[key].Time.Minutes, sloObjects[key].Time.Seconds,\r\n                            eval(sloObjects[key].WarningDate), eval(sloObjects[key].ServerDatetimeNow), false);\r\n                        sloContainer.append(clone);\r\n                    }\r\n                }\r\n\r\n                var SLOCoundown = function(sloCloned, isMetStat, isPaused, hours, minutes, seconds, warningDate, serverCurrentDate, isBreach) {\r\n                    //force warning image\r\n                    if (!isMetStat && !isBreach && warningDate <= serverCurrentDate) {\r\n                        //reset all classes \r\n                        sloCloned.find(\".slo-icon\").attr('class', \"slo-icon fa fa-exclamation-circle text-warning fa-lg\");\r\n                    }\r\n\r\n                    //set breached\r\n                    if (!isMetStat && (seconds <= 0 && minutes <= 0 && hours <= 0)) {\r\n                        isBreach = true;\r\n                        sloCloned.find(\".slo-icon\").attr('class', \"slo-icon fa fa-bell text-danger fa-lg\");\r\n                        sloCloned.find(\".slo-timer\").addClass(\"text-danger\");\r\n                    }\r\n\r\n                    //set time in view\r\n                    if (!isMetStat) {\r\n                        var secs = (Math.abs(seconds) < 10) ? \"0\" + Math.abs(seconds) : Math.abs(seconds);\r\n                        var mins = (Math.abs(minutes) < 10) ? \"0\" + Math.abs(minutes) : Math.abs(minutes);\r\n                        var hrs = (Math.abs(hours) < 10) ? \"0\" + Math.abs(hours) : Math.abs(hours);\r\n                        if (isBreach) {\r\n                            sloCloned.find(\".slo-timer\").html(\"\");\r\n                        } else\r\n                            sloCloned.find(\".slo-timer\").html((isBreach ? \"-\" : \"\") + Math.abs(hrs) + \":\" + mins + \":\" + secs);\r\n                        //return;\r\n                    } else {\r\n                        sloCloned.find(\".slo-timer\").html(\"&nbsp;\");\r\n                        return;\r\n                    }\r\n\r\n                    if (isPaused) return;\r\n\r\n                    //make the fancy js countdown\r\n                    serverCurrentDate.setSeconds(serverCurrentDate.getSeconds() + 1);\r\n                    seconds = parseInt(seconds) - 1;\r\n\r\n\r\n                    if (seconds <= 0 && minutes <= 0 && hours <= 0) {\r\n                        if (seconds <= -60) {\r\n                            seconds = 0;\r\n                            minutes = parseInt(minutes) - 1;\r\n                        }\r\n\r\n                        if (minutes <= -60) {\r\n                            minutes = 0;\r\n                            hours = parseInt(hours) - 1;\r\n                        }\r\n                    } else {\r\n                        if (minutes < 0) {\r\n                            minutes = 59;\r\n                            hours = parseInt(hours) - 1;\r\n                        }\r\n\r\n                        if (seconds < 0) {\r\n                            seconds = 59;\r\n                            minutes = parseInt(minutes) - 1;\r\n                        }\r\n                    }\r\n\r\n\r\n                    setTimeout(function() {\r\n                        SLOCoundown(sloCloned, isMetStat, isPaused, hours, minutes, seconds,\r\n                            warningDate, serverCurrentDate, isBreach);\r\n                    }, 1000);\r\n                }\r\n\r\n\r\n                callback(view.render());\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\r\n\n","\ndefine('text!forms/header/spacer/view.html',[],function () { return '<div></div>';});\n\n","/**\r\nHeader Spacer\r\n**/\r\ndefine('forms/header/spacer/controller',['require','text!forms/header/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/spacer/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //modify vm for this view\r\n\r\n            var view = new kendo.View(built(), { model: vm });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/title/view.html',[],function () { return '<h1 class=\"page_title\">\\r\\n    <span data-bind=\"html: title\"></span>\\r\\n</h1>\\r\\n\\r\\n';});\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/title/controller',['require','text!forms/header/title/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/title/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            vm.title = (!_.isUndefined(localization[vm.type]) && [vm.type].length > 0) ? localization[vm.type] : vm.type;\r\n\r\n            //set page <title>\r\n            document.title = vm.title;\r\n\r\n            var view = new kendo.View(built(), { wrap: false, model: vm });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/approval/view.html',[],function () { return '<div class=\"container-fluid\" data-bind=\"visible: isDesktopView\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-6 col-xs-12\">\\r\\n            <h1 class=\"page_title\">\\r\\n                <span data-bind=\"text: title\"></span><span>-</span><span class=\"uppercase\" data-bind=\"text: workItemId\"></span>\\r\\n                <span class=\"label label-info label-heading\" id=\"statusName\" data-bind=\"text: statusName\"></span>\\r\\n                <span class=\"label label-heading\" data-bind=\"visible: isParent\"><img src=\"/Content/Images/Icons/WorkItemsStatus/workitem-parent-icon.svg\"></span>\\r\\n            </h1>\\r\\n        </div>\\r\\n        <div class=\"col-md-6 col-xs-12\">       \\r\\n            <div class=\"pull-right ra-approval-space\">\\r\\n                <!-- Support group -->\\r\\n                <div class=\"pull-left\">\\r\\n                    <div class=\"form-control-picker input-sm ra-input\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-bind=\"ciresonDropDownTree: SupportGroupEnumId, value: SupportGroupFieldValue, visible: SupportGroupVisible, click: onChangeSupportGroup, options: {disabled:disabledMAButtons}\"\\r\\n                         data-role=\"SupportGroupField\"\\r\\n                         data-placeholder=\"SupportGroup\"></div>\\r\\n                </div>\\r\\n                <div class=\"pull-right\">\\r\\n                    <!--RA buttons-->\\r\\n                    <button class=\"btn btn-success\"\\r\\n                            data-bind=\"events: { click: onApproveClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                        <%= localization.Approve %>\\r\\n                    </button>\\r\\n                    <button class=\"btn btn-danger\"\\r\\n                            data-bind=\"events: { click: onRejectClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                        <%= localization.Reject %>\\r\\n                    </button>\\r\\n                    <!--RA buttons-->\\r\\n                    <!--MA buttons-->\\r\\n                    <button class=\"btn btn-success\"\\r\\n                            data-bind=\"events: { click: onCompleteClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                        <%= localization.Completed %>\\r\\n                    </button>\\r\\n                    <button class=\"btn btn-danger\"\\r\\n                            data-bind=\"events: { click: onFailClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                        <%= localization.Failed %>\\r\\n                    </button>\\r\\n                    <!--MA buttons-->\\r\\n                    <span>\\r\\n                        <button class=\"btn-link\" data-bind=\"disabled:disablePrevious, events:{click: previousClick}\"><i class=\"fa fa-chevron-left\"></i></button>\\r\\n                        <span data-bind=\"html: pageText\"></span>\\r\\n                        <button class=\"btn-link\" data-bind=\"disabled:disableNext, events:{click: nextClick}\"><i class=\"fa fa-chevron-right\"></i></button>\\r\\n                    </span>\\r\\n                </div>\\r\\n             </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"container-fluid\" data-bind=\"visible: isMobileView\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space pull-right\">\\r\\n                <div>\\r\\n                    <button class=\"btn-link\" data-bind=\"disabled:disablePrevious, events:{click: previousClick}\"><i class=\"fa fa-chevron-left\"></i></button>\\r\\n                    <span data-bind=\"html: pageText\"></span>\\r\\n                    <button class=\"btn-link\" data-bind=\"disabled:disableNext, events:{click: nextClick}\"><i class=\"fa fa-chevron-right\"></i></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <!-- Support group -->\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"form-control-picker ra-input\"\\r\\n                 data-url=\"/api/V3/Enum/GetList\"\\r\\n                 data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                 data-bind=\"ciresonDropDownTree: SupportGroupEnumId, value: SupportGroupFieldValue, visible: SupportGroupVisible, click: onChangeSupportGroup\"\\r\\n                 data-role=\"SupportGroupField\"\\r\\n                 data-placeholder=\"SupportGroup\"></div>\\r\\n        </div>\\r\\n        <!--RA buttons-->\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-success\"\\r\\n                        data-bind=\"events: { click: onApproveClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                    <%= localization.Approve %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-danger\"\\r\\n                        data-bind=\"events: { click: onRejectClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                    <%= localization.Reject %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--RA buttons-->\\r\\n\\r\\n        <!--MA buttons-->\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-success\"\\r\\n                        data-bind=\"events: { click: onCompleteClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                    <%= localization.Completed %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-danger\"\\r\\n                        data-bind=\"events: { click: onFailClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                    <%= localization.Failed %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--MA buttons-->\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-6 col-xs-12\">\\r\\n            <h1 class=\"page_title\">\\r\\n                <span data-bind=\"text: title\"></span><span>-</span><span class=\"uppercase\" data-bind=\"text: workItemId\"></span>\\r\\n                <span class=\"label label-info label-heading\" id=\"statusname\" data-bind=\"text: statusName\"></span>\\r\\n                <span class=\"label label-heading\" data-bind=\"visible: isParent\"><img src=\"/Content/Images/Icons/WorkItemsStatus/workitem-parent-icon.svg\"></span>\\r\\n            </h1>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n';});\n\n","/**\r\nRA Approval controls\r\n**/\r\ndefine('forms/header/approval/controller',['require','text!forms/header/approval/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/approval/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n            var rejected = \"107fc6bd-2bb3-0282-4425-f43b5b32ef13\";\r\n            var approve = \"0e856c6c-04e5-0a8e-6041-bc7715b4747e\";\r\n            var notYetVoted = \"dae75d12-89ac-a8d8-4fe3-516c2a6a26f7\";\r\n\r\n\r\n            vm.view.approvalModel = new kendo.observable({\r\n                decisionEnumId: null,\r\n                comments: \"\",\r\n                onRejectClick: function () {\r\n                    vm.view.approvalModel.decisionEnumId = rejected;\r\n                    this.updateStatus();\r\n                },\r\n                onApproveClick: function () {\r\n                    vm.view.approvalModel.decisionEnumId = approve;\r\n\r\n                    this.updateStatus();\r\n                },\r\n                onCompleteClick: function () {\r\n                    var status = { Id: app.constants.workItemStatuses.ManualActivity.Completed, Name: localization.Completed };\r\n                    vm.view.approvalModel.updateManualActivity(status);\r\n                },\r\n                onFailClick: function () {\r\n                    var status = { Id: app.constants.workItemStatuses.ManualActivity.Failed, Name: localization.Failed }\r\n                    vm.view.approvalModel.updateManualActivity(status);\r\n                },\r\n                updateStatus: function () {\r\n                    if (vm.view.approvalModel.isReviewActivity) {\r\n                        vm.view.approvalModel.updateReviewActivity();\r\n                    }\r\n\r\n                    if (vm.view.approvalModel.isManualActivity) {\r\n                        vm.view.approvalModel.updateManualActivity();\r\n                    }\r\n                },\r\n                updateReviewActivity: function () {\r\n                    $.when(app.controls.ReviewDecisionCommentDialog.show({\r\n                        title: localization.Comments,\r\n                        message: localization.DoYouHaveComments,\r\n                        required: true,\r\n                        height: 250\r\n                    })\r\n                  ).done(function (response) {\r\n                      if (response.button === \"yes\") {\r\n                          vm.view.approvalModel.comments = response.input;\r\n                      }\r\n\r\n\r\n                      _.each(pageForm.viewModel.Reviewer, function (reviewItem) {\r\n\r\n                          var group = _.find(pageForm.userGroup, function (group) {\r\n                              return (!_.isUndefined(reviewItem.User)) ? reviewItem.User.BaseId == group.Id : false;\r\n                          });\r\n\r\n                          if (reviewItem.Decision.Id == notYetVoted\r\n                              && ((!_.isUndefined(reviewItem.User) && reviewItem.User.BaseId == session.user.Id)\r\n                              || !_.isUndefined(group))) {\r\n\r\n                              var comment = \"\";\r\n                              if (_.isNull(reviewItem.Comments)) {\r\n                                  comment = vm.view.approvalModel.comments;\r\n                              }\r\n                              else {\r\n                                  comment = reviewItem.Comments + \" \" + vm.view.approvalModel.comments;\r\n                              }\r\n\r\n                              reviewItem.VotedBy = {};\r\n                              reviewItem.VotedBy.BaseId = session.user.Id;\r\n                              reviewItem.Decision.set(\"Id\", vm.view.approvalModel.decisionEnumId);\r\n                              reviewItem.set(\"Comments\", comment);\r\n                              reviewItem.set(\"DecisionDate\", new Date().toISOString());\r\n\r\n                          }\r\n                      });\r\n\r\n                      //exclude parent workitem details\r\n                      if (pageForm.viewModel.ParentWorkItem) delete pageForm.viewModel.ParentWorkItem;\r\n\r\n                      vm.view.approvalModel.save();\r\n                  });\r\n                },\r\n                updateManualActivity: function (status) {\r\n                    $.when(kendo.ui.ExtYesNoTextAreaDialog.show({\r\n                        title: session.consoleSetting.RequireImplementationNotes ? localization.ImplementationdetailsRequired : localization.Implementationdetails,\r\n                        buttons: [\r\n                            {\r\n                                name: localization.Save,\r\n                                click: function (e) {\r\n                                    var $inputText = $(\"#extInputDialog .k-ext-input-dialog-input\");\r\n                                    var comment = $(\"#extInputDialog .k-ext-input-dialog-input\").val();\r\n                                    var currentNotes = !_.isNull(pageForm.viewModel.Notes) ? pageForm.viewModel.Notes : \"\";\r\n\r\n                                    if (e.dialog.options.required && $inputText.val().length == 0) {\r\n                                        $inputText.addClass(e.dialog.options.requiredCss);\r\n                                    } else {\r\n                                        //exclude parent workitem details\r\n                                        if (pageForm.viewModel.ParentWorkItem) delete pageForm.viewModel.ParentWorkItem;\r\n\r\n                                        //set status \r\n                                        pageForm.viewModel.set(\"Status\", status)\r\n\r\n                                        //set actual end date\r\n                                        pageForm.viewModel.set(\"ActualEndDate\", new Date().toISOString());\r\n\r\n                                        //set notes\r\n                                        pageForm.viewModel.set(\"Notes\", currentNotes + \"\\n\" + comment);\r\n                                        vm.view.approvalModel.save();\r\n                                        e.dialog.close();\r\n                                    }\r\n                                },\r\n                                cls: \"btn-primary\"\r\n                            },\r\n                            {\r\n                                name: localization.Cancel,\r\n                                click: function (e) {\r\n                                    e.dialog.close();\r\n                                }\r\n                        }],\r\n                        required: session.consoleSetting.RequireImplementationNotes,\r\n                        requiredCss: \"k-ext-required\"\r\n                    })\r\n                 );\r\n                },\r\n                save: function () {\r\n                    var postData = encodeURIComponent(JSON.stringify({\r\n                        isDirty: true,\r\n                        current: pageForm.viewModel.toJSON(),\r\n                        original: pageForm.jsonRaw\r\n                    }));\r\n\r\n                    $.ajax({\r\n                        type: 'POST',\r\n                        dataType: 'text',\r\n                        url: pageForm.saveUrl,\r\n                        data: \"formJson=\" + postData,\r\n                        success: function (data, status, xhr) {\r\n                            location.reload();\r\n                            if (data.search('loginForm') < 0) { // Logged out check    \r\n                                var successMessage = vm.view.approvalModel.decisionEnumId == \"0e856c6c-04e5-0a8e-6041-bc7715b4747e\" ?\r\n                                    localization.ReviewActivityApprovedMessage : localization.ReviewActivityRejectedMessage;\r\n                                \r\n                                if (pageForm.viewModel.ClassName == \"System.WorkItem.Activity.ManualActivity\") {\r\n                                    successMessage = (pageForm.viewModel.Status.Id == app.constants.workItemStatuses.ManualActivity.Completed) ?\r\n                                                    localization.ManualActivityCompletedMessage :\r\n                                                    localization.ManualActivityFailedMessage;\r\n                                }\r\n\r\n                                app.lib.message.add(successMessage.replace(\"{0}\", vm.viewModel.Id), \"success\");\r\n                                app.lib.handleMessages();\r\n                            } else {\r\n                                //session expired\r\n                                window.location = \"/Login/Login?ReturnUrl=\" + window.location.pathname;\r\n                            }\r\n                        },\r\n                        error: function (xhr, ajaxOptions, thrownError) {\r\n                            //do we have a data conflict\r\n                            if (xhr.status == 409) {\r\n\r\n                                $.when(kendo.ui.ExtYesNoDialog.show({\r\n                                    title: localization.DataConflict,\r\n                                    message: localization.DataConflictError + \"<br/><br/><small>(\" + localization.DataConflictDescription + \")</small>\",\r\n                                    icon: \"fa fa-exchange text-danger\",\r\n                                    width: \"500px\",\r\n                                    height: \"175px\"\r\n                                })\r\n                                ).done(function (response) {\r\n                                    if (response.button === \"yes\") {\r\n                                        //open in new tab, may not work this way in all browsers\r\n                                        window.open(window.location.pathname);\r\n                                    } else {\r\n                                        //refresh page\r\n                                        location.href = window.location.pathname;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (xhr.status == 503) { //SDK unavailable\r\n                                var jsonRsp = xhr.responseText;\r\n                                app.lib.log(jsonRsp);\r\n                                //determine error Message\r\n                                var errorMsg = localization.ReconnectRequired;\r\n                                if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                    errorMsg = jsonRsp.exception;\r\n                                }\r\n                                //alert the user\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.Failed,\r\n                                    message: errorMsg,\r\n                                    icon: \"fa fa-times-circle text-danger\"\r\n                                });\r\n                            } else if (xhr.status == 403) { //user does not have access\r\n                                var jsonRsp = xhr.responseText;\r\n                                app.lib.log(jsonRsp);\r\n                                //determine error Message\r\n                                var errorMsg = localization.RequestFailed;\r\n                                if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                    errorMsg = jsonRsp.exception;\r\n                                }\r\n                                //alert the user\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.Failed,\r\n                                    message: errorMsg,\r\n                                    icon: \"fa fa-times-circle text-danger\"\r\n                                });\r\n\r\n                            } else {\r\n                                console && app.lib.log(localization.RequestFailed);\r\n                                app.lib.log(thrownError);\r\n\r\n                                var jsonRsp = xhr.responseText;\r\n                                app.lib.log(jsonRsp);\r\n\r\n                                var errorMsg = localization.RequestFailed;\r\n                                if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                    errorMsg = jsonRsp.exception;\r\n                                }\r\n\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.ErrorDescription,\r\n                                    message: errorMsg,\r\n                                    icon: \"fa fa-exclamation\"\r\n                                });\r\n                            }\r\n                        },\r\n                        processData: false,\r\n                        async: false\r\n                    });\r\n                },\r\n                pageDataSource: new kendo.data.DataSource({\r\n                    serverFiltering: true,\r\n                    serverSorting: true,\r\n                    transport: {\r\n                        read: {\r\n                            url: pageForm.viewModel.ClassName.toLowerCase().indexOf(\"reviewactivity\") > -1 ? \"/api/V3/WorkItem/GetGridWorkItemsMyApprovals/\" : \"/api/V3/WorkItem/GetGridWorkItemsMyManualActivities/\",\r\n                            data: {\r\n                                userId: session.user.Id,\r\n                                isScoped: session.user.Security.IsWorkItemScoped,\r\n                                showInActives: false\r\n                            },\r\n                            cache: false\r\n                        }\r\n                    },\r\n                    requestEnd: function (e) {\r\n                        vm.view.approvalModel.updatePageDetails(e.response);\r\n                    }\r\n                }),\r\n                updatePageDetails: function (data) {\r\n                    var index = 1;\r\n                    var pageCount = (data) ? data.length : 0;\r\n\r\n                    _.find(data, function (item, idx) {\r\n                        if (item.Id == vm.viewModel.Id) {\r\n                            index = idx;\r\n                        }\r\n                    });\r\n\r\n                    var pageString = (index + 1) + \" / \" + pageCount;\r\n\r\n                    vm.view.approvalModel.set(\"currentPage\", index);\r\n                    vm.view.approvalModel.set(\"toatPage\", pageCount);\r\n                    vm.view.approvalModel.set(\"pageText\", pageString);\r\n                    vm.view.approvalModel.set(\"disablePrevious\", (index == 0) ? true : false);\r\n                    vm.view.approvalModel.set(\"disableNext\", (index == pageCount - 1) ? true : false);\r\n\r\n                    var statusInProgress = vm.viewModel.Status.Id === \"11fc3cef-15e5-bca4-dee0-9c1155ec8d83\";\r\n\r\n                    if (!statusInProgress || (!_.isUndefined(vm.viewModel.reviewDetails) && (vm.viewModel.reviewDetails.fullDetails.Decision.Id == approve || vm.viewModel.reviewDetails.fullDetails.Decision.Id == rejected) && (vm.viewModel.reviewDetails.fullDetails.User.BaseId == session.user.Id))) {\r\n                        vm.view.approvalModel.set(\"disabledButtons\", true);\r\n                    }\r\n                    else {\r\n                        var review = _.find(pageForm.viewModel.Reviewer, function (reviewItem) {\r\n                            if (_.isUndefined(reviewItem.User)) {\r\n                                return null;\r\n                            }\r\n                            var group = _.find(pageForm.userGroup, function (group) {\r\n                                return reviewItem.User.BaseId == group.Id;\r\n                            });\r\n\r\n                            return !_.isUndefined(reviewItem.User) && reviewItem.Decision.Id == notYetVoted && (reviewItem.User.BaseId == session.user.Id || !_.isUndefined(group));\r\n                        });\r\n\r\n                        if (!review) return;\r\n\r\n                        if (!statusInProgress || (_.isUndefined(review) || _.isNull(review))) {\r\n                            vm.view.approvalModel.set(\"disabledButtons\", true);\r\n                        }\r\n                    }\r\n                },\r\n                nextClick: function () {\r\n                    var index = vm.view.approvalModel.get(\"currentPage\") + 1;\r\n                    vm.view.approvalModel.navigate(index);\r\n                },\r\n                previousClick: function () {\r\n                    var index = vm.view.approvalModel.get(\"currentPage\") - 1;\r\n                    vm.view.approvalModel.navigate(index);\r\n                },\r\n                navigate: function (index) {\r\n                    vm.view.approvalModel.pageDataSource.read();\r\n                    var dSource = vm.view.approvalModel.pageDataSource.data();\r\n\r\n                    var nextItem = dSource[index];\r\n                    var url = vm.view.approvalModel.isReviewActivity ? \"/ReviewActivity/Approval/\" : \"/ManualActivity/Complete/\";\r\n                    var approvalUrl = url + nextItem.Id;\r\n\r\n                    location.href = approvalUrl;\r\n                },\r\n                onChangeSupportGroup: function() {\r\n                    vm.viewModel[pageForm.MASupportGroupField] = vm.view.approvalModel.SupportGroupFieldValue;\r\n                },\r\n                currentPage: 0,\r\n                toatPage: 0,\r\n                pageText: \"\",\r\n                disablePrevious: false,\r\n                disableNext: false,\r\n                title: vm.view.title,\r\n                workItemId: vm.viewModel.Id,\r\n                statusVisible: vm.view.statusVisible,\r\n                statusName: vm.viewModel.Status.Name,\r\n                isParent: vm.viewModel.IsParent,\r\n                isDesktopView: !app.isMobile(),\r\n                isMobileView: app.isMobile(),\r\n                disabledButtons: false,\r\n                reviewResult: null,\r\n                reviewId: 0,\r\n                SupportGroupVisible: pageForm.MASupportGroupField !== \"\",\r\n                SupportGroupEnumId: pageForm.MASupportGroupGuid,\r\n                SupportGroupFieldValue: vm.viewModel[pageForm.MASupportGroupField],\r\n                isManualActivity: pageForm.viewModel.ClassName == \"System.WorkItem.Activity.ManualActivity\",\r\n                isReviewActivity: pageForm.viewModel.ClassName == \"System.WorkItem.Activity.ReviewActivity\",\r\n                disabledMAButtons: pageForm.viewModel.Status.Id == app.constants.workItemStatuses.ManualActivity.Completed ||\r\n                    pageForm.viewModel.Status.Id == app.constants.workItemStatuses.ManualActivity.Failed\r\n                \r\n            });\r\n\r\n            vm.view.approvalModel.pageDataSource.read();\r\n            var view = new kendo.View(built(), { wrap: false, model: vm.view.approvalModel });\r\n\r\n            callback(view.render());\r\n\r\n\r\n        }\r\n    }\r\n    \r\n    return definition;\r\n\r\n});\n","define('forms/headerBuilder',[\r\n    \"forms/header/sticky/controller\",\r\n    \"forms/header/stickyCI/controller\",\r\n    \"forms/header/status/controller\",\r\n    \"forms/header/relationships/controller\",\r\n    \"forms/header/slo/controller\",\r\n    \"forms/header/spacer/controller\",\r\n    \"forms/header/title/controller\",\r\n    \"forms/header/approval/controller\"\r\n\r\n], function (\r\n    sticky,\r\n    stickyCI,\r\n    status,\r\n    relationships,\r\n    slo,\r\n    spacer,\r\n    title,\r\n    approval\r\n        ) {\r\n\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            //loop all rows in header definition\r\n            _.each(vm.headerTemplate.rows, function (row) {\r\n                //create row dom element\r\n                var rowElm = $('<div/>').addClass(\"row\");\r\n                //loop all cols in def\r\n                _.each(row.columns, function (column) {\r\n                    //create col element\r\n                    var colElm = $('<div/>').addClass(column.Class);\r\n\r\n                    // Decide on Template\r\n                    eval(\"var _obj = \" + column.View + \";\");\r\n                    // Check if Template Exists\r\n                    if (!_obj) {\r\n                        //TODO: should we maybe just default to the string object?\r\n                        throw Exception(column.View + \" is not part of the templating system\");\r\n                        return false;\r\n                    }\r\n\r\n                    _obj.build(vm, column, function (view) {\r\n                        //callback(view);\r\n                        colElm.append(view);\r\n                        colElm.appendTo(rowElm);\r\n                    });\r\n\r\n\r\n                });\r\n\r\n                callback(rowElm);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/structure/formPanel/view.html',[],function () { return '<div class=\"form-panel\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nForm Panel\r\n**/\r\ndefine('forms/structure/formPanel/controller',['require','text!forms/structure/formPanel/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/formPanel/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/formPanelFull/view.html',[],function () { return '<div class=\"form-panel\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nForm Panel\r\n**/\r\ndefine('forms/structure/formPanelFull/controller',['require','text!forms/structure/formPanelFull/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/formPanelFull/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/customFieldGroup/view.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"panel panel-default no-shadow\">\\r\\n        <div class=\"panel-heading\"><%= name %></div>\\r\\n        <div class=\"panel-body append-here\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nCustom Field Group\r\n**/\r\ndefine('forms/structure/customFieldGroup/controller',['require','text!forms/structure/customFieldGroup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/customFieldGroup/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            if (!_.isUndefined(node.Visible) && !node.Visible) {\r\n                return;\r\n            }\r\n\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/customFieldGroupRow/view.html',[],function () { return '<div class=\"row\"></div>';});\n\n","/**\r\ncustomFieldGroupRow\r\n**/\r\ndefine('forms/structure/customFieldGroupRow/controller',['require','text!forms/structure/customFieldGroupRow/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/customFieldGroupRow/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            callback(tpl);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/columnField/view.html',[],function () { return '<div class=\"col-md-<%= ColSize %>\"></div>';});\n\n","/**\r\ncolumnField\r\n**/\r\ndefine('forms/structure/columnField/controller',['require','text!forms/structure/columnField/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/columnField/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/tab/view.html',[],function () { return '<div class=\"tab-content\"></div>';});\n\n","/**\r\nTab List\r\n**/\r\ndefine('forms/structure/tab/controller',['require','text!forms/structure/tab/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/tab/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/tabPane/view.html',[],function () { return '<div class=\"tab-pane <%= active %>\" id=\"<%= tabId %>\"></div>   ';});\n\n","/**\r\nTab pane\r\n**/\r\ndefine('forms/structure/tabPane/controller',['require','text!forms/structure/tabPane/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/tabPane/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/structure/tabNavigation/view.html',[],function () { return '<ul class=\"nav nav-pills\" id=\"myTab\" data-bind=\"tabDrop:true\"></ul>';});\n\n","\ndefine('text!forms/structure/tabNavigation/mobile.html',[],function () { return '<div class=\"nav-dropdown\">\\r\\n    <span class=\"nav-dropdown-default\"></span>\\r\\n    <div class=\"nav-dropdown-trigger\">\\r\\n        <i class=\"fa fa-sort-desc\"></i>\\r\\n    </div>\\r\\n    <div class=\"nav-dropdown-content\">\\r\\n        <ul id=\"myTab\" data-bind=\"navDrop:true\"></ul>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nTab navigation\r\n**/\r\ndefine('forms/structure/tabNavigation/controller',['require','text!forms/structure/tabNavigation/view.html','text!forms/structure/tabNavigation/mobile.html'],function (require) {\r\n    var dtpl = require(\"text!forms/structure/tabNavigation/view.html\");\r\n    var mtpl = require(\"text!forms/structure/tabNavigation/mobile.html\");\r\n    \r\n    var tpl = (app.isMobile()) ? mtpl : dtpl;\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/structure/tabData/view.html',[],function () { return '<li class=\"<%= active %>\"><a href=\"#<%= tabId %>\" data-toggle=\"tab\" data-cid=\"<%= cid %>\"><%= name %></a></li>';});\n\n","\ndefine('text!forms/structure/tabData/mobile.html',[],function () { return '<li value=\"<%= tabId %>\" data-cid=\"<%= cid %>\" data-toggle=\"tab\"\\r\\n      <% if ( active ){ %>\\r\\n         class=\"selected\" \\r\\n       <% } %>\\r\\n         > <%= name %>\\r\\n</li>\\r\\n\\r\\n';});\n\n","/**\r\nTab data\r\n**/\r\ndefine('forms/structure/tabData/controller',['require','text!forms/structure/tabData/view.html','text!forms/structure/tabData/mobile.html'],function (require) {\r\n    var dtpl = require(\"text!forms/structure/tabData/view.html\");\r\n    var mtpl = require(\"text!forms/structure/tabData/mobile.html\");\r\n  \r\n    var tpl = (app.isMobile()) ? mtpl : dtpl;\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            node.cid = node.name;\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/predefined/actionLog/view.html',[],function () { return '<div data-control=\"actionLog\">\\r\\n    <div class=\"row hidden-print\" data-bind=\"visible:isDesktop\">\\r\\n        <div class=\"col-md-12\">\\r\\n            <div class=\"form-group\">\\r\\n                <label for=\"commentBoxEditor\" data-localize=\"Comment\"></label>\\r\\n                <textarea id=\"commentBoxEditor\" class=\"k-textbox form-control input-sm action-log-textarea\" data-bind=\"value: commentBoxHTML\"\\r\\n                <% if ( Disabled ){ %>\\r\\n                disabled\\r\\n                <% } %>>\\r\\n                    </textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-12\">\\r\\n            <div class=\"pull-left\">\\r\\n                <span data-bind=\"text: charactersRemaining\"></span>\\r\\n                <span data-localize=\"CharactersRemaining\"> </span>\\r\\n            </div>\\r\\n            <div class=\"pull-right\">\\r\\n                <button type=\"button\" data-bind=\"click: addComment, enabled: addEnabled\" class=\"k-button btn btn-primary action-log-add-button\" data-localize=\"Add\"></button>\\r\\n            </div>\\r\\n            <div data-bind=\"visible: isAnalyst\" class=\"pull-right checkbox action-log-private\">\\r\\n                <input type=\"checkbox\" data-bind=\"checked: isPrivate\" id=\"actionLogisPrivate\" \\r\\n                       <% if (Disabled) { %>\\r\\n                        disabled\\r\\n                    <% } %>>\\r\\n                </input>\\r\\n\\r\\n                <label class=\"label-middle-align checkbox-inline checkbox-label\" data-localize=\"IsPrivate\" for=\"actionLogisPrivate\" />\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\"row hidden-print\" data-bind=\"visible:isMobile\">\\r\\n        <div class=\"action-log-mobile\">\\r\\n            <textarea id=\"commentBoxEditorMobile\" class=\"k-textbox form-control input-sm action-log-textarea\" data-bind=\"value: commentBoxHTML\"\\r\\n            <% if (Disabled) { %>disabled<% } %>></textarea>\\r\\n            <div class=\"action-log-mobile-buttons\">\\r\\n                <button type=\"button\" data-bind=\"click: addComment\" data-localize=\"Add Comment\" class=\"col-xs-7 btn btn-primary\"></button>\\r\\n                <div data-bind=\"visible: isAnalyst\" class=\"pull-left checkbox checkbox-inline action-log-mobile-private\">\\r\\n                    <input type=\"checkbox\" data-bind=\"checked: isPrivate\" id=\"actionLogisPrivate\"><% if (Disabled) { %>\\r\\n                    disabled\\r\\n                    <% } %>></input>\\r\\n                    <label class=\"label-middle-align control-label\" data-localize=\"IsPrivate\" for=\"actionLogisPrivate\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n\\r\\n        <div class=\"col-md-12\" data-bind=\"visible:isDesktop\">\\r\\n\\r\\n            <div data-control-grid=\"actionLogGrid\" class=\"inline-spacing\"></div>\\r\\n\\r\\n            <!-- kendo details template used by action grid -->\\r\\n            <script data-id=\"commentDetailTemplate\" type=\"text/kendo-tmpl\">\\r\\n                <p name=\"CommentBoxDetail\" class=\"action-log-comment\">#=app.lib.decodeHTML(DescriptionDisplay)#</p>\\r\\n            </script>\\r\\n        </div>\\r\\n        <div data-bind=\"visible:isMobile\">\\r\\n            <div data-role=\"listview\" data-bind=\"source: actionLogSource\" data-template=\"action-log-grid-mobile-template\" class=\"action-log-mobile-grid \"></div>\\r\\n            <script type=\"text/x-kendo-template\" id=\"action-log-grid-mobile-template\">\\r\\n                <div class=\"col-md-12 action-log-info\">\\r\\n                    <div class=\"row\">\\r\\n                        <div class=\"col-xs-2 action-log-icon\">\\r\\n                            <img src=\"#:data.Image#\" alt=\"#:data.Image#\" />\\r\\n                        </div>\\r\\n                        <div class=\"col-xs-10 action-log-details\">\\r\\n                            <p>\\r\\n                                #: EnteredBy # &middot; #: (EnteredDate) ? kendo.toString(new Date(EnteredDate), \\'d\\'):\\'\\' #\\r\\n                            </p>\\r\\n                            <p> #: Title #</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"row\">\\r\\n                        <div class=\"col-xs-offset-2 col-xs-10 action-log-content\">\\r\\n                            #: Description #\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </script>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nactionLog\r\n**/\r\n\r\ndefine('forms/predefined/actionLog/controller',['require','text!forms/predefined/actionLog/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/actionLog/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var view = built(properties);\r\n\r\n            callback(view);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/fileAttachments/view.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"col-md-12 fileAttachmentGrid\" data-control=\"fileAttachmentGrid\" data-control-bind=\"FileAttachment\"\\r\\n\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nfileAttachments\r\n**/\r\n\r\ndefine('forms/predefined/fileAttachments/controller',['require','text!forms/predefined/fileAttachments/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/fileAttachments/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/affectedItems/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">#: DisplayName #</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <p>#: (typeof AssetStatus!=\"undefined\") ? !_.isUndefined(AssetStatus.Name)?AssetStatus.Name:\"\" : \"\" #</p>\\r\\n                <p>#: (Path!=null ) ? Path : \"\" # </p>\\r\\n\\r\\n            </div>\\r\\n            <div class=\"gridcard__detailblock hidden-print\" data-bind=\"visible: view.affectedItemController.showAddRemoveButtons\">\\r\\n                <a class=\"k-delete-button\">#: localization.Remove #</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 affecteditems-grid\">\\r\\n        <div class=\"row hidden-print\" data-bind=\"visible: view.affectedItemController.showAddRemoveButtons\">\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\"><%= localization.Configurationitem %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-min-length=\"3\"\\r\\n                               data-bind=\"value: view.affectedItemController.selectedConfigItem, source: view.affectedItemController.configItemDataSource, events:{change:view.affectedItemController.onConfigItemChange }\"\\r\\n                               data-cid=\"ci-searchbox\" <% if ( Disabled ){ %> disabled <% } %>/>\\r\\n                        <span class=\"search\"\\r\\n                              data-bind=\"events:{click: view.affectedItemController.searchConfigItem}\"\\r\\n                              data-cid=\"affecteditemssearchicon\" >\\r\\n                            <i class=\"fa fa-search\" ></i>\\r\\n                        </span>\\r\\n                        <button data-role=\"button\" class=\"search-button two-action-input-group__primary-action\"\\r\\n                                data-bind=\"events:{click: view.affectedItemController.addConfigItem}\"\\r\\n                                data-cid=\"affectedItemsSearchBoxAddButton\"  <% if ( Disabled ){ %> disabled <% } %>>\\r\\n                            <%= localization.Add %>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group affected-user-item-search\" data-bind=\"visible: view.affectedItemController.isUserCIVisible\">\\r\\n                    <label class=\"control-label\"><%= localization.AffectedUserItems %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-bind=\"value: view.affectedItemController.selectedUserConfigItem, source: view.affectedItemController.userConfigItemDataSource, events:{change:view.affectedItemController.onUserConfigItemChange }\"\\r\\n                               data-cid=\"auitems-searchbox\" <% if ( Disabled ){ %> disabled <% } %> />\\r\\n                        <button class=\"two-action-input-group__primary-action\" data-role=\"button\"\\r\\n                                data-bind=\"events:{click: view.affectedItemController.addUserConfigItem}\"\\r\\n                                data-cid=\"affectedItemsComboBoxAddButton\" <% if ( Disabled ){ %> disabled <% } %>>\\r\\n                            <%= localization.Add %>\\r\\n\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div data-role=\"grid\"\\r\\n             data-bind=\"visible: view.affectedItemController.isDesktopView, source: view.affectedItemController.dataSource, events:{dataBinding: view.affectedItemController.onDataBinding}\"\\r\\n             data-selectable=\"false\"\\r\\n             data-sortable=\"true\"\\r\\n             data-filterable=\"true\"\\r\\n             data-scrollable=\"false\"\\r\\n             data-column-menu=\"true\"\\r\\n             data-pageable=\"false\"\\r\\n             data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n             data-columns=\\'[\\r\\n                    { title: \"\", width: \"1%\", template: \"\\\\u003cdiv data-base-id=\\\\\"#=BaseId#\\\\\" base-type=\\\\\"#=BaseType#\\\\\" class=\\\\\"aci-context-menu open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.affectedItemController.isSlideOut\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\\\\u003cdiv class=\\\\\"open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.affectedItemController.isMoreInfo, events:{click:view.affectedItemController.showMoreInfo }\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"/\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\"},\\r\\n                    { field: \"DisplayName\", title: localization.DisplayName, width: \"50%\", attributes:{class: (app.featureSet.isActive(\"CMDBPortalCI\")) ? \"grid-highlight-column\" : \"\"}, template: \"# if \\\\u0028app.featureSet.isActive\\\\u0028\\\\u0022CMDBPortalCI\\\\u0022\\\\u0029\\\\u0029 \\\\u007b # \\\\u003ca target=\\\\u0027_blank\\\\u0027 href=\\\\u0027#var url = app.gridUtils.getObjectLinkUrl\\\\u0028data\\\\u0029;##=url#\\\\u0027\\\\u003e#: DisplayName # \\\\u003c/a\\\\u003e\\\\u003cspan class=\\\\u0027pull-right relatedItems-grid-links\\\\u0027\\\\u003e\\\\u003ca class=\\\\u0027highlight-default-icon\\\\u0027 target=\\\\u0027_blank\\\\u0027 href=\\\\u0027#var url = app.gridUtils.getObjectLinkUrl\\\\u0028data\\\\u0029;##=url#\\\\u0027\\\\u003e\\\\u003ci class=\\\\u0027fa fa fa-external-link\\\\u0027\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/a\\\\u003e\\\\u003c/span\\\\u003e #\\\\u007d else \\\\u007b# #: DisplayName # # \\\\u007d#\"},\\r\\n                    { field: \"BaseId\", title: localization.BaseId, width: \"25%\", hidden: true },\\r\\n                    { field: \"Path\", title: localization.Path, width: \"25%\" },\\r\\n                    { field: \"AssetStatus.Name\", title: localization.Status, width: \"25%\" },\\r\\n                    { title: localization.Actions, width: \"15%\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove, className:\"custom__grid-remove\"}]}\\r\\n                ]\\'>\\r\\n        </div>\\r\\n        <div data-bind=\"visible: view.affectedItemController.isMobileView\">\\r\\n            <div data-bind=\"mobileGrid: HasRelatedWorkItems\" data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\"></div>\\r\\n        </div>\\r\\n        <!--context menu for info icon-->\\r\\n        <ul id=\"tccmenu\" data-role=\"contextmenu\"\\r\\n            data-filter=\".aci-context-menu\"\\r\\n            data-show-on=\"click\"\\r\\n            data-bind=\"events:{select:view.affectedItemController.onContextmenuSelect, activate:view.affectedItemController.onContextmenuActivate}\">\\r\\n        </ul>\\r\\n   </div>\\r\\n</div>';});\n\n","/**\naffectedItems\n**/\n\ndefine('forms/predefined/affectedItems/controller',['require','text!forms/predefined/affectedItems/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\n    var tpl = require(\"text!forms/predefined/affectedItems/view.html\");\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\n\n    var definition = {\n        template: tpl,\n        build: function (vm, node, callback) {\n            var built = _.template(tpl);\n            var properties = {\n                Disabled: !_.isUndefined(node.disabled) ? node.disabled : false\n            };\n           \n            $.extend(true, properties, node);\n\n            var view = new kendo.View();\n\n            var cur_table = false;\n\n            //use setters and getters if you want vm boundOdj to trigger change\n            if (_.isUndefined(vm.HasRelatedWorkItems)) {\n                vm.set('HasRelatedWorkItems', new kendo.data.ObservableArray([]));\n            }\n            var boundArray = vm.get('HasRelatedWorkItems');\n\n            vm.view.affectedItemController = new kendo.observable({\n                showAddRemoveButtons: !properties.Disabled,\n                addConfigItem: function (e) {\n                    if (!_.isUndefined(this.selectedConfigItemId)) { addAffectedItem(this.selectedConfigItemId); }\n                },\n                searchConfigItem: function () {\n                    var popupWindow = objectPickerPopup.getPopup(\"62F0BE9F-ECEA-E73C-F00D-3DD78A7422FC\", \"DisplayName,Path,Status\", null, null, true);\n                    popupWindow.setSaveCallback(function (object) {\n                        addAffectedItem(object.BaseId);\n                    });\n                    popupWindow.open();\n                },\n                selectedConfigItemId: \"\",\n                selectedConfigItem: \"\",\n                configItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: function (data) {\n                                var configItem = (data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                                return \"/api/V3/Config/GetAffectedItemsList?itemFilter=\" + configItem;\n                            },\n                            dataType: \"json\"\n                        }\n                    }\n                }),\n                onConfigItemChange: function (e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedConfigItemId = dataItem.Id;\n                },\n                isUserCIVisible: !_.isUndefined(vm.RequestedWorkItem) ? true : false,\n                selectedUserConfigItemId: \"\",\n                selectedUserConfigItem: \"\",\n                addUserConfigItem: function (e) {\n                    if (!_.isUndefined(this.selectedUserConfigItemId)) { addAffectedItem(this.selectedUserConfigItemId); }\n                },\n                userConfigItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: \"/ConfigItems/GetAffectedUserConfigItemsList\",\n                            data: {\n                                affectedUserId: function () {\n                                    return !_.isUndefined(vm.RequestedWorkItem) && !_.isNull(vm.RequestedWorkItem.BaseId) ? vm.RequestedWorkItem.BaseId : \"\";\n                                }\n                            },\n                            dataType: \"json\",\n                            type: \"GET\"\n                        },\n                        parameterMap: function (data) {\n                            var searchFilter = (data.filter && data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                            return _.extend(data, { searchFilter: searchFilter });\n                        }\n                    }\n                }),\n                onUserConfigItemChange: function (e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedUserConfigItemId = dataItem.Id;\n                },\n                dataSource: new kendo.data.DataSource({\n                    schema: {\n                        data: \"Data\",\n                        total: \"Total\",\n                        errors: \"Errors\",\n                        model: {\n                            id: \"BaseId\",\n                        }\n                    },\n                    data: {\n                        Data: boundArray,\n                        Total: boundArray.length\n                    }\n                }),\n                showMoreInfo: function (e) {\n                    var detailsPopupEle = $(\"<div>\");\n                    detailsPopupEle.appendTo(\"body\");\n\n                    var detailsPopup = detailsPopupEle.kendoCiresonWindow({\n                        title: \"\",\n                        width: 550,\n                        height: 500,\n                        actions: [\"Close\"]\n                    }).data(\"kendoWindow\");\n\n                    var baseId = null;\n                    var displayName = \"\";\n                    if (e.data == null && e.BaseId != null) {\n                        baseId = e.BaseId;\n                        displayName = e.DisplayName;\n                    } else {\n                        baseId = e.data.BaseId;\n                        displayName = e.data.DisplayName;\n                    }\n\n                    detailsPopup.refresh({\n                        url: \"/Search/ObjectViewer\",\n                        data: { id: baseId }\n                    });\n                    detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\n                    detailsPopup.title(displayName).center().open();\n                },\n                onDataBinding: function (e) {\n                    cur_table = e.sender.table;\n                    _.each(boundArray, function (item) {\n                        item.AssetStatus = (!_.isUndefined(item.AssetStatus) && !_.isNull(item.AssetStatus))? item.AssetStatus : { Id: null, Name: null };\n                        item.Status = (!_.isUndefined(item.Status) && !_.isNull(item.Status)) ? item.Status : { Id: null, Name: null };\n                    });\n\n                    //hide remove column on disabled state\n                    if (!vm.view.affectedItemController.showAddRemoveButtons)\n                        e.sender.hideColumn(5);\n                },\n                isDesktopView: !app.isMobileDevice(),\n                isMobileView: app.isMobileDevice(),\n                isWindowsComputer: false,\r\n                isHardwareAsset: false,\r\n                isUser: false,\n                isMoreInfo: function (viewModel) {\n                    var bSlideOut = vm.view.affectedItemController.isSlideOut(viewModel);\n                    return !bSlideOut;\n                },\n                isSlideOut: function (viewModel) {\r\n                    vm.view.affectedItemController.isWindowsComputer = false;\n                    vm.view.affectedItemController.isHardwareAsset = false;\n                    vm.view.affectedItemController.isUser = false;\n                    if (viewModel.BaseType == \"computer\") {\r\n                        vm.view.affectedItemController.isWindowsComputer = true;\r\n                    }\n                    else if (viewModel.BaseType == \"hardwareasset\") {\n                        vm.view.affectedItemController.isHardwareAsset = true;\n                    }\n                    else if (viewModel.BaseType == \"user\") {\r\n                        vm.view.affectedItemController.isUser = true;\r\n                    }\n                    \n                    var bIsWindowsComputer = vm.view.affectedItemController.isWindowsComputer;\n                    var bIsHardwareAsset = vm.view.affectedItemController.isHardwareAsset;\n                    var bIsUser = vm.view.affectedItemController.isUser;\n\n                    var hasControlCenterURL = !_.isNull(session.consoleSetting.TrueControlCenterURL) && (session.consoleSetting.TrueControlCenterURL != \"\");\n\n                    return ((bIsWindowsComputer || bIsUser || bIsHardwareAsset) && hasControlCenterURL && session.user.Analyst) ? true : false;\n                },\n                showTCCInfo: function (dataItem) {\n                    var src = session.consoleSetting.TrueControlCenterURL && session.user.Analyst;\n                    var bIsWindowsComputer = vm.view.affectedItemController.isWindowsComputer;\n                    var bIsHardwareAsset = vm.view.affectedItemController.isHardwareAsset;\n                    var bIsUser = vm.view.affectedItemController.isUser;\n                    var tooltip = localization.ComputerManagement;\n\n                    if (bIsWindowsComputer) {\r\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"computer\");\r\n                        var options = {\r\n                            url: src,\r\n                            tooltip: tooltip\r\n                        }\n                        app.slideOutNav.show(options);\r\n                    } else if (bIsHardwareAsset) {\r\n                        $.get(\"/Search/GetHardwareAssetDevice\", { id: dataItem.BaseId }, function (data) {\r\n                            src = app.slideOutNav.getTCCSourceURL(data, \"computer\");\r\n                            var options = {\r\n                                url: src,\r\n                                tooltip: tooltip\r\n                            }\n                            app.slideOutNav.show(options);\r\n                        });\r\n                    } else if (bIsUser) {\r\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"user\");\n                        tooltip = localization.UserManagement;\r\n                        var options = {\r\n                            url: src,\r\n                            tooltip: tooltip\r\n                        }\n                        app.slideOutNav.show(options);\r\n                    }\n\n                    \n                },\n                onContextmenuSelect: function (e) {\n                    var type = e.item.attributes[\"custom\"].value;\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    var dataItem = _.find(e.data.HasRelatedWorkItems, function (item) { return item.BaseId == baseId; });\n\n                    (type == \"slideout\") ? vm.view.affectedItemController.showTCCInfo(dataItem) : vm.view.affectedItemController.showMoreInfo(dataItem);\n                },\n                onContextmenuActivate: function (e) {\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    var baseType = e.target.attributes[\"base-type\"].value;\n\n                    vm.view.affectedItemController.isWindowsComputer = false;\n                    vm.view.affectedItemController.isHardwareAsset = false;\n                    vm.view.affectedItemController.isUser = false\n\n                    if (baseType == \"computer\") {\r\n                        vm.view.affectedItemController.isWindowsComputer = true;\r\n                    }\n                    else if (baseType == \"hardwareasset\") {\n                        vm.view.affectedItemController.isHardwareAsset = true;\n                    }\n                    else if (baseType == \"user\") {\r\n                        vm.view.affectedItemController.isUser = true;\r\n                    }\n\n                    var managementTitle = localization.UserManagement;\n                    if (vm.view.affectedItemController.isWindowsComputer || vm.view.affectedItemController.isHardwareAsset) {\n                        managementTitle = localization.ComputerManagement;\n                    }\n\n                    var menuItems = [{\n                        text: managementTitle,\n                        imageUrl: \"/Content/Images/Icons/Other/control-center-launcher.png\",\n                        imageAttr: {\n                            height: '16px',\n                            width: '16px'\n                        },\n                        attr: {\n                            custom: 'slideout' //custom attribute holds the link type\n                        }\n                    },\n                     {\n                         text: \"<i class='fa fa-info-circle cursor-pointer'></i>\" + localization.AdditionalDetails,\n                         encoded: false,\n                         attr: {\n                             custom: 'info' //custom attribute holds the link type\n                         }\n                     }];\n\n                    var contextmenu = $(\"#tccmenu\").data(\"kendoContextMenu\");\n                    contextmenu.setOptions({\n                        dataSource: menuItems\n                    });\n                }\n\n            });\n\n            var grid = vm.view.affectedItemController;\n\n            grid.dataSource.originalFilter = grid.dataSource.filter;\n\n            // Replace the original filter function.\n            grid.dataSource.filter = function () {\n\n                // Call the original filter function.\n                var result = grid.dataSource.originalFilter.apply(this, arguments);\n\n                // If a column is about to be filtered, then raise a new \"filtering\" event.\n                if (arguments.length > 0) {\n                    this.trigger(\"filterApplied\", arguments);\n                }\n\n                return result;\n            }\n\n            grid.dataSource.bind(\"filterApplied\", function () {\n\n                $.each($(cur_table).find(\"th a.k-header-column-menu i\"), function () {\n                    $(this).remove();\n                });\n\n                if (grid.dataSource.filter()) {\n\n                    var filters = grid.dataSource.filter().filters || [];\n                    var dsFilters = [];\n                    for (var i in filters) {\n                        if (filters[i].filters) {\n                            var innerFilters = filters[i].filters;\n                            for (var x in innerFilters) {\n                                dsFilters.push(innerFilters[x]);\n                            }\n                        } else {\n                            dsFilters.push(filters[i]);\n                        }\n                    }\n\n                    dsFilters = _.uniq(dsFilters, function (el) { return el.field; });\n\n                    for (var i in dsFilters) {\n                        $(cur_table).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\n                    }\n\n                }\n            });\n\n            var templateFrag = built(properties);\n            view = new kendo.View(templateFrag, { wrap: true, model: vm.view.affectedtemController });\n            callback(templateFrag);\n            \n            if (vm.view.affectedItemController.isUserCIVisible) {\n                vm.RequestedWorkItem.bind(\"change\", function (e) {\n                    vm.view.affectedItemController.userConfigItemDataSource.read();\n                });\n            }\n\n            //more functions\n            var isDuplicate = function (idToAdd) {\n                var n = false;\n                $.each(boundArray, function (i, item) {\n                    if (item.BaseId == idToAdd) {\n                        n = true;\n                    }\n                });\n                return n;\n            }\n\n            var addAffectedItem = function (baseId) {\n                if (isDuplicate(baseId)) { return; }\n                $.getJSON('/ConfigItems/GetAffectedItem', { id: baseId }, function (json) {\n                    var item = {\n                        BaseId: baseId,\n                        DisplayName: json.DisplayName,\n                        ClassName: json.ObjectClassName,\n                        Path: json.Path,\n                        BaseType: json.BaseType,\n                        AssetStatus: !_.isUndefined(json.AssetStatus) ? (json.AssetStatus != null) ? json.AssetStatus : \"\" : { Name: !_.isUndefined(json.AssetStatus) ? json.AssetStatus : \"\" },\n                        Status: !_.isUndefined(json.Status) ? (json.Status != null) ? json.Status : \"\" : { Name: !_.isUndefined(json.Status) ? json.Status : \"\" }\n                    };\n                    boundArray.push(item);\n                });\n            }\n        }\n    }\n\n    return definition;\n\n});\n","\ndefine('text!forms/predefined/relatedItems/view.html',[],function () { return '<div id=\"relatedItemTemplate\" data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">#: DisplayName #</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <p>#: (typeof AssetStatus!=\"undefined\") ? !_.isUndefined(AssetStatus.Name)?AssetStatus.Name:\"\" : \"\" #</p>\\r\\n                <p>#: (Path!=null ) ? Path : \"\" # </p>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"gridcard__detailblock hidden-print\" data-bind=\"visible:view.relatedItemController.showAddRemoveButton\">\\r\\n                <a class=\"k-delete-button\">#: localization.Remove #</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 relateditems-grid\">\\r\\n        <div class=\"row hidden-print\" data-bind=\"visible:view.relatedItemController.showAddRemoveButton\">\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\"><%= localization.Configurationitem %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-bind=\"value: view.relatedItemController.selectedConfigItem, source: view.relatedItemController.configItemDataSource, events:{change:view.relatedItemController.onConfigItemChange }\"\\r\\n                               <% if ( Disabled ){ %> disabled <% } %>/>\\r\\n\\r\\n                        <span data-bind=\"events:{click: view.relatedItemController.searchConfigItem}\"\\r\\n                              data-cid=\"relatedItemsSearchIcon\"\\r\\n                          <% if ( Disabled ){ %> disabled class=\"search search-disabled\" <% } else{ %> class=\"search\" <% } %>\\r\\n                          >\\r\\n                        <i class=\"fa fa-search\"></i>\\r\\n                    </span>\\r\\n                        <button data-role=\"button\" class=\"search-button two-action-input-group__primary-action\"\\r\\n                                data-bind=\"events:{click: view.relatedItemController.addConfigItem}\"\\r\\n                                data-cid=\"relatedItemSearchAddBbtn\"\\r\\n                            <% if ( Disabled ){ %> disabled <% } %>\\r\\n                            >\\r\\n                        <%= localization.Add %>\\r\\n                    </button>\\r\\n                    </div>\\r\\n                 </div>\\r\\n            </div>\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group affected-user-item-search\" data-bind=\"visible: view.relatedItemController.isUserCIVisible\">\\r\\n                    <label class=\"control-label\"><%= localization.AffectedUserItems %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-bind=\"value: view.relatedItemController.selectedUserConfigItem, source: view.relatedItemController.userConfigItemDataSource, events:{change:view.relatedItemController.onUserConfigItemChange }\"\\r\\n                               data-cid=\"affectedItemsUserItemBox\"\\r\\n                               <% if ( Disabled ){ %> disabled <% } %> />\\r\\n\\r\\n                        <button class=\"two-action-input-group__primary-action\"\\r\\n                                data-role=\"button\"\\r\\n                                data-bind=\"events:{click: view.relatedItemController.addUserConfigItem}\"\\r\\n                            <% if ( Disabled ){ %> disabled <% } %>\\r\\n                            >\\r\\n                        <%= localization.Add %>\\r\\n                    </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div data-role=\"grid\"\\r\\n             data-bind=\"visible: view.relatedItemController.isDesktopView, source: view.relatedItemController.dataSource, events:{dataBinding: view.relatedItemController.onDataBinding}\"\\r\\n             data-selectable=\"false\"\\r\\n             data-sortable=\"true\"\\r\\n             data-filterable=\"true\"\\r\\n             data-scrollable=\"false\"\\r\\n             data-column-menu=\"true\"\\r\\n             data-pageable=\"false\"\\r\\n             data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n             data-columns=\\'[\\r\\n                    { title: \"\", width: \"1%\", template: \"\\\\u003cdiv data-base-id=\\\\\"#=BaseId#\\\\\" base-type=\\\\\"#=BaseType#\\\\\" class=\\\\\"ci-context-menu open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.relatedItemController.isSlideOut\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\\\\u003cdiv class=\\\\\"open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.relatedItemController.isMoreInfo, events:{click:view.relatedItemController.showMoreInfo }\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"/\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\"},\\r\\n                    { field: \"DisplayName\", title: localization.DisplayName, width: \"50%\", attributes:{class: (app.featureSet.isActive(\"CMDBPortalCI\")) ? \"grid-highlight-column\" : \"\"}, template: \"# if \\\\u0028app.featureSet.isActive\\\\u0028\\\\u0022CMDBPortalCI\\\\u0022\\\\u0029\\\\u0029 \\\\u007b # \\\\u003ca target=\\\\u0027_blank\\\\u0027 href=\\\\u0027#var url = app.gridUtils.getObjectLinkUrl\\\\u0028data\\\\u0029;##=url#\\\\u0027\\\\u003e#: DisplayName # \\\\u003c/a\\\\u003e\\\\u003cspan class=\\\\u0027pull-right relatedItems-grid-links\\\\u0027\\\\u003e\\\\u003ca class=\\\\u0027highlight-default-icon\\\\u0027 target=\\\\u0027_blank\\\\u0027 href=\\\\u0027#var url = app.gridUtils.getObjectLinkUrl\\\\u0028data\\\\u0029;##=url#\\\\u0027\\\\u003e\\\\u003ci class=\\\\u0027fa fa fa-external-link\\\\u0027\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/a\\\\u003e\\\\u003c/span\\\\u003e #\\\\u007d else \\\\u007b# #: DisplayName # # \\\\u007d#\"},\\r\\n                    { field: \"BaseId\", title: localization.BaseId, width: \"25%\", hidden: true },\\r\\n                    { field: \"Path\", title: localization.Path, width: \"25%\" },\\r\\n                    { field: \"AssetStatus.Name\", title: localization.Status, width: \"25%\" },\\r\\n                    { title: localization.Actions, width: \"15%\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove, className:\"custom__grid-remove\" }] }\\r\\n                ]\\'>\\r\\n        </div>\\r\\n        <div data-bind=\"visible: view.relatedItemController.isMobileView\">\\r\\n            <div data-bind=\"mobileGrid: RelatesToConfigItem\" data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\"></div>\\r\\n        </div>\\r\\n        <!--context menu for info icon-->\\r\\n        <ul id=\"tccmenu-related-ci\" data-role=\"contextmenu\" \\r\\n            data-filter=\".ci-context-menu\"\\r\\n            data-show-on=\"click\"\\r\\n            data-bind=\"events:{select:view.relatedItemController.onContextmenuSelect, activate:view.relatedItemController.onContextmenuActivate}\">\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\nrelatedItems\n**/\n\ndefine('forms/predefined/relatedItems/controller',['require','text!forms/predefined/relatedItems/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\n    var tpl = require(\"text!forms/predefined/relatedItems/view.html\");\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\n\n    var definition = {\n        template: tpl,\n        build: function (vm, node, callback) {\n            var built = _.template(tpl);\n            var properties = {\n                Disabled: !_.isUndefined(node.disabled) ? node.disabled : false\n            };\n\n            $.extend(true, properties, node);\n\n            var view = new kendo.View();\n\n            var cur_table = false;\n\n            //use setters and getters if you want vm boundOdj to trigger change\n            if (_.isUndefined(vm.RelatesToConfigItem)) {\n                vm.set('RelatesToConfigItem', new kendo.data.ObservableArray([]));\n            }\n            var boundArray = vm.get('RelatesToConfigItem');\n\n            vm.view.relatedItemController = new kendo.observable({\n                showAddRemoveButton: !properties.Disabled,\n                addConfigItem: function (e) {\n                    if (!_.isUndefined(this.selectedConfigItemId)) {\n                        addAffectedItem(this.selectedConfigItemId);\n                    }\n                },\n                searchConfigItem: function() {\n                    var popupWindow = objectPickerPopup.getPopup(\"62F0BE9F-ECEA-E73C-F00D-3DD78A7422FC\", \"DisplayName,Path,Status\", null, null, true);\n                    popupWindow.setSaveCallback(function(object) {\n                        addAffectedItem(object.BaseId);\n                    });\n                    popupWindow.open();\n                },\n                selectedConfigItemId: \"\",\n                selectedConfigItem: \"\",\n                configItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: function (data) {\n                                var configItem = (data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                                return \"/api/V3/Config/GetAffectedItemsList?itemFilter=\" + configItem;\n                            },\n                            dataType: \"json\"\n                        }\n                    }\n                }),\n                onConfigItemChange: function(e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedConfigItemId = dataItem.Id;\n                },\n                isUserCIVisible: !_.isUndefined(vm.RequestedWorkItem) ? true : false,\n                selectedUserConfigItemId: \"\",\n                selectedUserConfigItem: \"\",\n                addUserConfigItem: function(e) {\n                    if (!_.isUndefined(this.selectedUserConfigItemId)) {\n                        addAffectedItem(this.selectedUserConfigItemId);\n                    }\n                },\n                userConfigItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: \"/ConfigItems/GetAffectedUserConfigItemsList\",\n                            data: { affectedUserId: function() { return !_.isUndefined(vm.RequestedWorkItem) && !_.isNull(vm.RequestedWorkItem.BaseId) ? vm.RequestedWorkItem.BaseId : \"\" } },\n                            dataType: \"json\",\n                            type: \"GET\"\n                        },\n                        parameterMap: function (data) {\n                            var searchFilter = (data.filter && data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                            return _.extend(data, { searchFilter: searchFilter });\n                        }\n                    }\n                }),\n                onUserConfigItemChange: function(e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedUserConfigItemId = dataItem.Id;\n                },\n                dataSource: new kendo.data.DataSource({\n                    schema: {\n                        data: \"Data\",\n                        total: \"Total\",\n                        errors: \"Errors\",\n                        model: {\n                            id: \"BaseId\",\n                        }\n                    },\n                    data: {\n                        Data: boundArray,\n                        Total: boundArray.length\n                    }\n                }),\n                showMoreInfo: function (e) {\n                    var detailsPopupEle = $(\"<div>\");\n                    detailsPopupEle.appendTo(\"body\");\n\n                    var detailsPopup = detailsPopupEle.kendoCiresonWindow({\n                        title: \"\",\n                        width: 550,\n                        height: 500,\n                        actions: [\"Close\"]\n                    }).data(\"kendoWindow\");\n\n                    var baseId = null;\n                    var displayName = \"\";\n                    if (e.data == null && e.BaseId != null) {\n                        baseId = e.BaseId;\n                        displayName = e.DisplayName;\n                    } else {\n                        baseId = e.data.BaseId;\n                        displayName = e.data.DisplayName;\n                    }\n\n                    detailsPopup.refresh({\n                        url: \"/Search/ObjectViewer\",\n                        data: { id: baseId }\n                    });\n                    detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\n                    detailsPopup.title(displayName).center().open();\n                },\n                onDataBinding: function (e) {\n                    cur_table = e.sender.table;\n                    _.each(boundArray, function(item) {\n                        item.AssetStatus = !_.isUndefined(item.AssetStatus) ? item.AssetStatus : { Id: null, Name: null };\n                        item.Status = !_.isUndefined(item.Status) ? item.Status : { Id: null, Name: null };\n                    });\n                    \n                    //hide remove column on disabled state\n                    if (!vm.view.relatedItemController.showAddRemoveButton)\n                        e.sender.hideColumn(5);\n                },\n                isDesktopView: !app.isMobileDevice(),\n                isMobileView: app.isMobileDevice(),\n                isEnabled: !properties.Disabled,\n                isWindowsComputer: false,\n                isHardwareAsset: false,\n                isUser: false,\n                isMoreInfo: function (viewModel) {\n                    var bSlideOut = vm.view.relatedItemController.isSlideOut(viewModel);\n                    return !bSlideOut;\n                },\n                isSlideOut: function (viewModel) {\n                    vm.view.relatedItemController.isWindowsComputer = false;\n                    vm.view.relatedItemController.isHardwareAsset = false;\n                    vm.view.relatedItemController.isUser = false;\n                    if (viewModel.BaseType == \"computer\") {\r\n                        vm.view.relatedItemController.isWindowsComputer = true;\r\n                    }\n                    else if (viewModel.BaseType == \"hardwareasset\") {\n                        vm.view.relatedItemController.isHardwareAsset = true;\n                    }\n                    else if (viewModel.BaseType == \"user\") {\r\n                        vm.view.relatedItemController.isUser = true;\r\n                    }\n                    \n                    var bIsWindowsComputer = vm.view.relatedItemController.isWindowsComputer;\n                    var bIsHardwareAsset = vm.view.relatedItemController.isHardwareAsset;\n                    var bIsUser = vm.view.relatedItemController.isUser;\n                    var hasControlCenterURL = !_.isNull(session.consoleSetting.TrueControlCenterURL) && (session.consoleSetting.TrueControlCenterURL != \"\");\n                    \n                    return ((bIsWindowsComputer || bIsUser || bIsHardwareAsset) && hasControlCenterURL && session.user.Analyst) ? true : false;\n                },\n                showTCCInfo: function (dataItem) {\n                    var src = session.consoleSetting.TrueControlCenterURL && session.user.Analyst;\n                    var bIsWindowsComputer = vm.view.relatedItemController.isWindowsComputer;\n                    var bIsHardwareAsset = vm.view.relatedItemController.isHardwareAsset;\n                    var bIsUser = vm.view.relatedItemController.isUser;\n                    var tooltip = localization.ComputerManagement;\n\n                    if (bIsWindowsComputer) {\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"computer\");\n\n                        var options = {\r\n                            url: src,\r\n                            tooltip: tooltip\r\n                        }\n                        app.slideOutNav.show(options);\n                    } else if (bIsHardwareAsset) {\n                        $.get(\"/Search/GetHardwareAssetDevice\", { id: dataItem.BaseId }, function (data) {\r\n                            src = app.slideOutNav.getTCCSourceURL(data, \"computer\");\r\n                            var options = {\r\n                                url: src,\r\n                                tooltip: tooltip\r\n                            }\n                            app.slideOutNav.show(options);\r\n                        });\n                    } else if (bIsUser) {\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"user\");\n                        tooltip = localization.UserManagement;\n\n                        var options = {\r\n                            url: src,\r\n                            tooltip: tooltip\r\n                        }\n                        app.slideOutNav.show(options);\n                    }\n\n                    \n                },\n                onContextmenuSelect: function (e) {\n                    var type = e.item.attributes[\"custom\"].value;\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    var dataItem =_.find(e.data.RelatesToConfigItem, function (item) { return item.BaseId==baseId; });\n                   \n                    (type == \"slideout\") ? vm.view.relatedItemController.showTCCInfo(dataItem) : vm.view.relatedItemController.showMoreInfo(dataItem);\n                },\n                onContextmenuActivate: function (e) {\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    var baseType = e.target.attributes[\"base-type\"].value;\n                    \n                    vm.view.relatedItemController.isWindowsComputer = false;\n                    vm.view.relatedItemController.isHardwareAsset = false;\n                    vm.view.relatedItemController.isUser = false\n\n                    if (baseType == \"computer\") {\r\n                        vm.view.relatedItemController.isWindowsComputer = true;\r\n                    }\n                    else if (baseType == \"hardwareasset\") {\n                        vm.view.relatedItemController.isHardwareAsset = true;\n                    }\n                    else if (baseType == \"user\") {\r\n                        vm.view.relatedItemController.isUser = true;\n                    }\n                    \n                    var managementTitle = localization.UserManagement;\n                    if (vm.view.relatedItemController.isWindowsComputer || vm.view.relatedItemController.isHardwareAsset) {\n                        managementTitle = localization.ComputerManagement;\n                    }\n\n                    var menuItems = [{\n                        text: managementTitle,\n                        imageUrl: \"/Content/Images/Icons/Other/control-center-launcher.png\",\n                        imageAttr: {\n                            height: '16px',\n                            width: '16px'\n                        },\n                        attr: {\n                            custom: 'slideout' //custom attribute holds the link type\n                        }\n                     },\n                     {\n                         text: \"<i class='fa fa-info-circle cursor-pointer'></i>\" + localization.AdditionalDetails,\n                        encoded: false,\n                        attr: {\n                            custom: 'info' //custom attribute holds the link type\n                        }\n                     }];\n\n                    var contextmenu = $(\"#tccmenu-related-ci\").data(\"kendoContextMenu\");\n                    contextmenu.setOptions({\n                        dataSource: menuItems\n                    });\n                }\n            });\n\n            var grid = vm.view.relatedItemController;\n\n            grid.dataSource.originalFilter = grid.dataSource.filter;\n\n            // Replace the original filter function.\n            grid.dataSource.filter = function () {\n                    \n                // Call the original filter function.\n                var result = grid.dataSource.originalFilter.apply(this, arguments);\n\n                // If a column is about to be filtered, then raise a new \"filtering\" event.\n                if (arguments.length > 0) {\n                    this.trigger(\"filterApplied\", arguments);\n                }\n\n                return result;\n            }\n\n            grid.dataSource.bind(\"filterApplied\", function (e) {\n\n                $.each($(cur_table).find(\"th a.k-header-column-menu i\"), function () {\n                    $(this).remove();\n                });\n\n                if (grid.dataSource.filter()) {\n\n                    var filters = grid.dataSource.filter().filters || [];\n                    var dsFilters = [];\n                    for (var i in filters) {\n                        if (filters[i].filters) {\n                            var innerFilters = filters[i].filters;\n                            for (var x in innerFilters) {\n                                dsFilters.push(innerFilters[x]);\n                            }\n                        } else {\n                            dsFilters.push(filters[i]);\n                        }\n                    }\n\n                    dsFilters = _.uniq(dsFilters, function(el) { return el.field; });\n\n                    for (var i in dsFilters) {\n                        $(cur_table).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\n                    }\n\n                }\n            });\n                        \n            var templateFrag = built(properties);\n            view = new kendo.View(templateFrag, { wrap: true, model: vm.view.relatedItemController });\n            callback(templateFrag);\n\n            if (properties.Disabled) {\n                var searchButton = $(view.content).find(\".search\");\n                searchButton.addClass(\"search-disabled\");\n            }\n\n            if (vm.view.relatedItemController.isUserCIVisible) {\n                vm.RequestedWorkItem.bind(\"change\", function (e) {\n                    vm.view.relatedItemController.userConfigItemDataSource.read();\n                });\n            }\n\n            //more functions\n            var isDuplicate = function (idToAdd) {\n                var n = false;\n                $.each(boundArray, function (i, item) {\n                    if (item.BaseId == idToAdd) {\n                        n = true;\n                    }\n                });\n                return n;\n            }\n\n            var addAffectedItem = function (baseId) {\n                if (isDuplicate(baseId)) { return; }\n                $.getJSON('/ConfigItems/GetAffectedItem', { id: baseId }, function (json) {\n                    var item = {\n                        BaseId: baseId,\n                        DisplayName: json.DisplayName,\n                        ClassName: json.ObjectClassName,\n                        Path: json.Path,\n                        BaseType: json.BaseType,\n                        AssetStatus: !_.isUndefined(json.AssetStatus) ? (json.AssetStatus != null) ? json.AssetStatus : \"\" : { Name: !_.isUndefined(json.AssetStatus) ? json.AssetStatus : \"\" },\n                        Status: !_.isUndefined(json.Status) ? (json.Status != null) ? json.Status : \"\" : { Name: !_.isUndefined(json.Status) ? json.Status : \"\" }\n                    };\n                    boundArray.push(item);\n                });\n            }\n        }\n    }\n\n    return definition;\n\n});\n","\ndefine('text!forms/predefined/childWorkItems/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">${Id}: ${Title}</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <p>#: localizationHelper.localize(\"Status\") #: #: Status # </p>\\r\\n                <p>#: localizationHelper.localize(\"LastModified\") #: #: kendo.toString(kendo.parseDate(LastModified), \"g\") # </p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 file-attachments\"\\r\\n         data-control=\"childWorkItems\"\\r\\n         data-control-bind=\"ChildWorkItem\"\\r\\n         data-control-show=\"IsParent\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>>\\r\\n\\r\\n    <div >\\r\\n        <button class=\"btn btn-primary hidden-print\" data-role=\"button\" data-click=\"addClick\"><%= localization.Add %> </button>\\r\\n    </div>\\r\\n    \\r\\n    <% if ( IsMobileView == false ){ %>\\r\\n        <div data-control-grid=\"objectGrid\" class=\"inline-spacing\"></div>\\r\\n    <% } %>\\r\\n    \\r\\n    <% if ( IsMobileView ){ %>\\r\\n        <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\" data-bind=\"mobileGrid: ChildWorkItem\"></div>\\r\\n    <% } %>\\r\\n    \\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchildWorkItem\r\n**/\r\n\r\ndefine('forms/predefined/childWorkItems/controller',['require','text!forms/predefined/childWorkItems/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/childWorkItems/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            boundObj = vm;\r\n            \r\n            var properties = {\r\n                Disabled: false,\r\n                PropertyName: \"ChildWorkItem\",\r\n                ClassId: (vm.ClassName === \"System.WorkItem.ReleaseRecord\") ? \"d02dc3b6-d709-46f8-cb72-452fa5e082b8\" : \"a604b942-4c7b-2fb2-28dc-61dc6f465c68\",\r\n                PropertyToDisplay: \"Id,Title,Status,LastModified\",\r\n                ControllerUrl: \"/Search/GetChildWorkItems\",\r\n                IsMobileView: app.isMobileDevice()\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(properties));\r\n            var popupWindow = objectPickerPopup.getPopup(properties.ClassId, properties.PropertyToDisplay, properties.ControllerUrl);\r\n            var objectPicker = new Control(templateFrag.find(\"[data-control='childWorkItems']\"), boundObj, properties.PropertyName, properties, popupWindow);\r\n            var showProp = templateFrag.find(\"[data-control='childWorkItems']\").attr(\"data-control-show\");\r\n            templateFrag.find(\"[data-control='childWorkItems']\").attr(\"data-control\", \"childWorkItemsBound\");\r\n            callback(templateFrag);\r\n\r\n            // Determine if group should be visible (IsParent)\r\n            if (boundObj[showProp] === false || _.isNull(boundObj[showProp])) {\r\n                templateFrag.parents(\".row\").hide();\r\n            }\r\n           \r\n        }\r\n    }\r\n\r\n    var Control = function (targetEle, boundObj, name, properties, popupWindow) {\r\n\r\n        //use setters and getters if you want vm boundOdj to trigger change\r\n        if (_.isUndefined(boundObj[name])) {\r\n            boundObj.set(name, new kendo.data.ObservableArray([]));\r\n        }\r\n        var boundArray = boundObj.get(name);\r\n\r\n        var __construct = function () {\r\n            bindButtonEvents();\r\n            bindEvents();\r\n            createGrid();\r\n        }\r\n\r\n        var bindEvents = function () {\r\n            \r\n        }\r\n\r\n        var bindButtonEvents = function () {\r\n            var actions = {\r\n                addClick: function () {\r\n                    popupWindow.setSaveCallback(function (object) {\r\n                        if (isDuplicate(object.BaseId)) { return; }\r\n                        boundArray.push(object);\r\n                    });\r\n                    popupWindow.open();\r\n                }\r\n            };\r\n\r\n            //bind add click event\r\n            targetEle.find('[data-click]').each(function () {\r\n                if (actions[$(this).attr('data-click')]) {\r\n                    $(this).click(actions[$(this).attr('data-click')]);\r\n                }\r\n            });\r\n        }\r\n\r\n       \r\n        var createGrid = function () {\r\n            var gridEle = targetEle.find(\"[data-control-grid]\");\r\n            \r\n            var grid = gridEle.kendoGrid({\r\n                columns:\r\n                 [\r\n                  { field: \"Id\", title: localization.Id, attributes: { \"class\": \"grid-highlight-column\" } },\r\n                  { field: \"Title\", title: localization.Title },\r\n                  { field: \"Status\", title: localization.Status, template: \"#= (Status.Name)?Status.Name:Status #\", },\r\n                  {\r\n                      field: \"LastModified\",\r\n                      title: localization.LastModified,\r\n                      type: \"date\",\r\n                      template: \"#= (LastModified) ? kendo.toString(new Date(LastModified), 'g'):'' #\"\r\n                  },\r\n                  { field: \"BaseId\", title: \"BaseId\", hidden: \"true\" },\r\n                  { width: \"105px\", command: [{ name: \"destroy\", text: localization.Remove }]}\r\n                 ],\r\n                scrollable: false,\r\n                filterable: {\r\n                    extra: false,\r\n                    messages: {\r\n                        info: localization.Showitemswithvaluethat,\r\n                        and: localization.And,\r\n                        or: localization.Or,\r\n                        filter: localization.Filter,\r\n                        clear: localization.Clear\r\n                    },\r\n                    operators: {\r\n                        string: {\r\n                            startswith: localization.Startswith,\r\n                            contains: localization.Contains,\r\n                            eq: localization.Isequalto,\r\n                            neq: localization.Isnotequalto\r\n                        },\r\n                        date: {\r\n                            gte: localization.GreaterOrEqual,\r\n                            gt: localization.GreaterThan,\r\n                            lte: localization.LessOrEqual,\r\n                            lt: localization.LessThan\r\n                        }\r\n                    }\r\n                },\r\n                reorderable: true,\r\n                sortable: true,\r\n                columnMenu: {\r\n                    messages: {\r\n                        columns: localization.ChooseColumns,\r\n                        filter: localization.Filter,\r\n                        sortAscending: localization.SortAscending,\r\n                        sortDescending: localization.SortDescending\r\n                    }\r\n                },\r\n                editable: {\r\n                    confirmDelete: \"Delete\",\r\n                    cancelDelete: \"Cancel\",\r\n                    mode: \"incell\",\r\n                    template: null,\r\n                    create: true,\r\n                    update: false,\r\n                    destroy: true\r\n                },\r\n                toolbar: {},\r\n                dataSource: {\r\n                    transport: {\r\n                        prefix: \"\",\r\n                        read: {\r\n                            url: \"\"\r\n                        }\r\n                    },\r\n                    type: \"aspnetmvc-ajax\",\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\",\r\n                        model: {\r\n                            id: \"BaseId\",\r\n                        }\r\n                    },\r\n                    data: {\r\n                        Data: boundArray,\r\n                        Total: boundArray.length\r\n                    }\r\n                },\r\n                selectable: true\r\n            });\r\n\r\n            gridEle.on(\"click\", \"td\", function (e) {\r\n                var highlightedColumn = $(e.currentTarget).hasClass(\"grid-highlight-column\");\r\n                if (!highlightedColumn) { return }\r\n\r\n                var kendoGrid = grid.data(\"kendoGrid\");\r\n                var selectedItem = kendoGrid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n                var strClass = selectedItem.ClassName.split(/[\\s.]+/);\r\n                var className = strClass[strClass.length - 1];\r\n                window.open(\"/\" + className + \"/Edit/\" + selectedItem.Id + \"/\", '_blank');\r\n            });\r\n        }\r\n\r\n        var isDuplicate = function (idToAdd) {\r\n            var n = false;\r\n            $.each(boundArray, function (i, item) {\r\n                if (item.BaseId == idToAdd) {\r\n                    n = true;\r\n                }\r\n            });\r\n            return n;\r\n        }\r\n\r\n        __construct();\r\n    }\r\n    return definition;\r\n});\n","\ndefine('text!forms/predefined/userInput/view.html',[],function () { return '<div>\\r\\n    <div class=\"editor-label\">\\r\\n        <label><%= localization.UserInputs %></label>\\r\\n    </div>\\r\\n    <div class=\"editor-field\">\\r\\n        <div data-control=\"userInputs\" data-control-bind=\"UserInput\">\\r\\n            <div data-control-grid=\"userInputsGrid\" class=\"inline-spacing\"></div>\\r\\n        </div>    \\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nuserInput\r\n**/\r\n\r\ndefine('forms/predefined/userInput/controller',['require','text!forms/predefined/userInput/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/userInput/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/activities/view.html',[],function () { return '<div data-control=\"activityDisplay\" data-control-bind=\"Activity\" class=\"activity-list-container\"\\r\\n\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    >\\r\\n</div>\\r\\n';});\n\n","/**\r\nactivities\r\n**/\r\n\r\ndefine('forms/predefined/activities/controller',['require','text!forms/predefined/activities/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/activities/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/multipleObjectPicker/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">${title}</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                # $.each(details, function (index, item) {\\r\\n                # <p>${item}</p>  #\\r\\n                });\\r\\n                #\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12\">\\r\\n    <div data-control=\"multipleObjectPicker\"\\r\\n         data-control-bind=\"HasRelatedWorkItems\"\\r\\n         id=\"<%= PropertyName %>\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n    <% } %>\\r\\n    >\\r\\n\\r\\n        <button data-role=\"button\" class=\"btn btn-primary hidden-print\" data-click=\"addClick\" ><%= localization.Add %> </button>\\r\\n        <div class=\"grid-container\">\\r\\n            <% if ( IsMobileView == false ){ %>\\r\\n            <div data-control-grid=\"objectGrid\" class=\"inline-spacing\"></div>\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( IsMobileView ){ %>\\r\\n            <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\" data-bind=\"mobileGrid: <%= PropertyName %>\" multiple-picker data-columns=\"<%= ClassProperties %>\"></div>\\r\\n            <% } %>\\r\\n        </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nmultipleObjectPicker\r\n**/\r\n\r\ndefine('forms/predefined/multipleObjectPicker/controller',['require','text!forms/predefined/multipleObjectPicker/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/multipleObjectPicker/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\r\n\r\n    var projectionSearchUrl = \"/Search/GetObjectProjectionByCriteria\";\r\n    var definition = {\r\n        template: tpl,\r\n        Grid: null,\r\n        build: function (vm, node, callback) {\r\n            boundObj = node.vm;\r\n            name = node.PropertyName;\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            var properties = {\r\n                Disabled: false,\r\n                ClassId: \"\",\r\n                PropertyToDisplay: [],\r\n                PropertyName: \"\",\r\n                ShowAddButton: true,\r\n                ShowRemoveButton: true,\r\n                Scoped: false,\r\n                ClassProperties: \"\",\r\n                SelectableRow: false,\r\n                SelectProperty: \"Id\",\r\n                ProjectionId: \"\",\r\n                HiddenProperty: null,//separated by comma only\r\n                IsMobileView: app.isMobileDevice()\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            //refresh properties\r\n            this.Disabled = false;\r\n            this.PropertyToDisplay = [];\r\n\r\n            //check if is a valid json. If not, then this will try to parse the string value.\r\n            try {\r\n                properties.PropertyToDisplay = JSON.parse(properties.PropertyToDisplay);\r\n            } catch (e) { }\r\n\r\n\r\n            if (properties.PropertyToDisplay.length <= 0) { properties.PropertyToDisplay = { DisplayName: \"DisplayName\", Path: \"Path\", Status: \"Status\" }; }\r\n            for (var prop in properties.PropertyToDisplay) {\r\n                properties.ClassProperties = properties.ClassProperties.concat(prop).concat(\",\");\r\n            }\r\n\r\n            if ((properties.PropertyName === \"HasRelatedWorkItems\") && (properties.ClassProperties.indexOf(\"AssetStatus\") < 0)) {\r\n                properties.ClassProperties = properties.ClassProperties.concat(\"AssetStatus\");\r\n            }\r\n\r\n            if (!_.isNull(properties.HiddenProperty)) { //This will be use to load properties that is not need to display\r\n                properties.ClassProperties += properties.HiddenProperty.concat(\",\");\r\n            }\r\n\r\n            //set properties for watchlist\r\n            if ((properties.PropertyName === \"WatchList\")) {\r\n                if (!session.consoleSetting.DashboardsLicense.IsValid || !session.enableWatchlist) {\r\n                    properties.Visible = false;\r\n                }\r\n                //hide add/remove option when current user is and enduser and he or she is not the affected user\r\n                if ((!session.user.Analyst) && (typeof boundObj.RequestedWorkItem != 'undefined') && (session.user.Id != boundObj.RequestedWorkItem.BaseId)) {\r\n                    properties.ShowAddButton = false;\r\n                    properties.ShowRemoveButton = false;\r\n                }\r\n            }\r\n\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(properties));\r\n\r\n            //used on RelatesToWorkItem relatinship, exclude current workitem from list\r\n            var filter = { field: \"BaseId\", operator: \"neq\", value: boundObj.BaseId };\r\n\r\n            var popupWindow = (properties.PropertyName === \"RelatesToWorkItem\") ?\r\n                objectPickerPopup.getPopup(properties.ClassId, properties.ClassProperties, null, filter) :\r\n                objectPickerPopup.getPopup(properties.ClassId, properties.ClassProperties);\r\n\r\n            var objectPicker = new Control(templateFrag.find(\"[data-control='multipleObjectPicker']\"), boundObj, name, properties, popupWindow);\r\n            templateFrag.find(\"[data-control='multipleObjectPicker']\").attr(\"data-control\", \"multipleObjectPickerBound\");\r\n\r\n            callback(templateFrag);\r\n\r\n            return this.Grid;\r\n        },\r\n        openObject: function (selectedItem) {\r\n            window.open(app.gridUtils.getObjectLinkUrl(selectedItem), '_blank');\r\n        }\r\n    }\r\n\r\n    var Control = function (targetEle, boundObj, name, properties, popupWindow) {\r\n        //use setters and getters if you want vm boundOdj to trigger change\r\n        if (_.isUndefined(boundObj[name])) {\r\n            boundObj.set(name, new kendo.data.ObservableArray([]));\r\n        }\r\n\r\n        //if related object is of single cardinality, create a new array and add the related object \r\n        var boundArray = !_.isUndefined(boundObj[name].length) ? boundObj.get(name) : new kendo.data.ObservableArray([boundObj.get(name)]);\r\n        boundArray.properties = properties;\r\n\r\n        var self = this;\r\n\r\n        var __construct = function () {\r\n            buildSubProperties();\r\n            bindButtonEvents();\r\n            createGrid();\r\n        }\r\n\r\n        var buildSubProperties = function () {\r\n            var propToFill = [];\r\n            //This will going to build array of display properties that has sub properties. Ex:Target_PurchaseHasPurchaseOrder.DisplayName\r\n            for (var prop in properties.PropertyToDisplay) {\r\n                var propSplit = prop.split(\".\");\r\n                if (propSplit.length > 1) {\r\n                    propToFill.push(propSplit);\r\n                }\r\n            }\r\n\r\n            //This will going to check all properties. If property is not existing, this will going to create a dummy property so that kendo will render the grid.\r\n            _.each(boundArray, function (data) {\r\n                _.each(propToFill, function (prop) {\r\n                    var mainProp = prop[0];\r\n                    var subProp = prop[1];\r\n                    if (_.isUndefined(data[mainProp])) {\r\n                        data[mainProp] = {};\r\n                        data[mainProp][subProp] = \"\";\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        //Make this global so that this can be used when inserting data outside multiple object picker.\r\n        //This is the solution for now since kendo grid doesn't have preDataBinding which I need to manipulate data before binding\r\n        //This function is called also from software asset \"copy license assignment\" task\r\n        boundArray.addItem = function (object) {\r\n            var isItemExist = false;\r\n            if (isDuplicate(object.BaseId)) {\r\n                return;\r\n            }\r\n            _boundArray = this;\r\n            //This will going to get object related items\r\n            if (!_.isUndefined(_boundArray.properties.ProjectionId) && !_.isNull(_boundArray.properties.ProjectionId) && _boundArray.properties.ProjectionId != \"\") {\r\n\r\n                var colNames = \"\";\r\n                var splitedProp = [];\r\n                //This will going to get thos property whos have sub child on it.\r\n                //Ex. PropertyToDisplay: { DisplayName: \"DisplayName\", \"Currency.Name\": \"Currency\", Cost: \"Cost\",\"Target_PurchaseHasPurchaseOrder.DisplayName\":\"Purchase Order\" }\r\n                // => Target_PurchaseHasPurchaseOrder.DisplayName and Currency.Name\r\n                for (var prop in _boundArray.properties.PropertyToDisplay) {\r\n                    var propperty = prop.split(\".\");\r\n                    if (propperty.length > 1) {\r\n                        splitedProp.push(propperty);\r\n                        colNames = colNames == \"\" ? prop : colNames + \",\" + prop;\r\n\r\n                    }\r\n                }\r\n\r\n                $.post(projectionSearchUrl, { baseId: object.BaseId, projectionId: _boundArray.properties.ProjectionId, columnNames: colNames }, function (result) {\r\n                    for (index in result.Data) {\r\n                        for (propIndex in splitedProp) {\r\n                            var value = result.Data[index][splitedProp[propIndex][0]];\r\n                            if (!_.isUndefined(value[splitedProp[propIndex][1]])) { //this will check if this property is undefined or not. This will going to avoid conflict with enums\r\n                                object[splitedProp[propIndex][0]] = value;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    _boundArray.push(object);\r\n                });\r\n            } else {\r\n                _boundArray.push(object);\r\n            }\r\n        }\r\n\r\n        var bindButtonEvents = function () {\r\n            var actions = {\r\n                addClick: function () {\r\n                    popupWindow.setSaveCallback(function (object) {\r\n\r\n                        for (var prop in properties.PropertyToDisplay) {\r\n                            //If property is not existing, this will going to create a dummy property so that kendo will render the grid.\r\n                            if (_.isUndefined(object[prop]))\r\n                                object[prop] = null;\r\n                        }\r\n\r\n                        boundArray.addItem(object);\r\n\r\n                        //if related object is of single cardinality, replace the value\r\n                        if (_.isUndefined(boundObj[name].length)) {\r\n                            boundArray.shift();\r\n                            boundObj.set(name, boundArray[0]);\r\n                        }\r\n                    });\r\n                    popupWindow.open();\r\n                }\r\n            };\r\n\r\n            //bind add click event\r\n            targetEle.find('[data-click]').each(function () {\r\n                if (actions[$(this).attr('data-click')]) {\r\n                    $(this).click(actions[$(this).attr('data-click')]);\r\n                }\r\n            });\r\n\r\n            //hide add button when ShowAddButton=false or if Disabled\r\n            if (!properties.ShowAddButton || properties.Disabled || properties.vm.isDisabled) {\r\n                targetEle.find('[data-click]').each(function () {\r\n                    $(this).hide();\r\n                });\r\n            }\r\n        }\r\n\r\n        var createGrid = function () {\r\n            var gridEle = targetEle.find(\"[data-control-grid]\");\r\n            //always unhide remove button for watchlist \r\n            var hideRemoveButton = (properties.PropertyName === \"WatchList\") ? false : (!properties.ShowRemoveButton || properties.Disabled || properties.vm.isDisabled);\r\n            //building grid columns\r\n            var columnFields = buildColumnFields(properties.PropertyToDisplay);\r\n            var columnToDisplay = buildGridColumns(columnFields, hideRemoveButton);\r\n\r\n            var grid = gridEle.kendoGrid({\r\n                columns: columnToDisplay,\r\n                scrollable: false,\r\n                filterable: {\r\n                    extra: false,\r\n                    messages: {\r\n                        info: localization.Showitemswithvaluethat,\r\n                        and: localization.And,\r\n                        or: localization.Or,\r\n                        filter: localization.Filter,\r\n                        clear: localization.Clear\r\n                    },\r\n                    operators: {\r\n                        string: {\r\n                            startswith: localization.Startswith,\r\n                            contains: localization.Contains,\r\n                            eq: localization.Isequalto,\r\n                            neq: localization.Isnotequalto\r\n                        },\r\n                        date: {\r\n                            gte: localization.GreaterOrEqual,\r\n                            gt: localization.GreaterThan,\r\n                            lte: localization.LessOrEqual,\r\n                            lt: localization.LessThan\r\n                        }\r\n                    }\r\n                },\r\n                reorderable: true,\r\n                sortable: true,\r\n                columnMenu: {\r\n                    messages: {\r\n                        columns: localization.ChooseColumns,\r\n                        filter: localization.Filter,\r\n                        sortAscending: localization.SortAscending,\r\n                        sortDescending: localization.SortDescending\r\n                    }\r\n                },\r\n                editable: {\r\n                    confirmDelete: \"Delete\",\r\n                    cancelDelete: \"Cancel\",\r\n                    mode: \"incell\",\r\n                    template: null,\r\n                    create: true,\r\n                    update: false,\r\n                    destroy: true\r\n                },\r\n                toolbar: {},\r\n                dataSource: {\r\n                    transport: {\r\n                        prefix: \"\",\r\n                        read: {\r\n                            url: \"\"\r\n                        }\r\n                    },\r\n                    type: \"aspnetmvc-ajax\",\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\",\r\n                        model: {\r\n                            id: \"BaseId\",\r\n                            fields: columnFields\r\n                        }\r\n                    },\r\n                    data: {\r\n                        Data: boundArray,\r\n                        Total: boundArray.length\r\n                    }\r\n                },\r\n                dataBinding: function (e) {\r\n                    //Change to only pass specific item\r\n                    if (!_.isUndefined(e.items) && e.items.length > 0) {\r\n                        formatPropertyInBoundArray(e, properties.ClassProperties)\r\n                    }\r\n                },\r\n                dataBound: function (e) {\r\n                    if (properties.Scoped) {\r\n                        scopeBoundArray(this, properties.ClassId, properties.ClassProperties);\r\n                    }\r\n\r\n                },\r\n                selectable: properties.SelectableRow ? \"multiple row\" : false\r\n            });\r\n\r\n            definition.Grid = grid;\r\n\r\n            if (!app.isMobile()) {\r\n                grid.data(\"kendoGrid\").dataSource.originalFilter = grid.data(\"kendoGrid\").dataSource.filter;\r\n\r\n                // Replace the original filter function.\r\n                grid.data(\"kendoGrid\").dataSource.filter = function () {\r\n\r\n                    // Call the original filter function.\r\n                    var result = grid.data(\"kendoGrid\").dataSource.originalFilter.apply(this, arguments);\r\n\r\n                    // If a column is about to be filtered, then raise a new \"filtering\" event.\r\n                    if (arguments.length > 0) {\r\n                        this.trigger(\"filterApplied\", arguments);\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n\r\n                grid.data(\"kendoGrid\").dataSource.bind(\"filterApplied\", function () {\r\n                    $.each($(grid).find(\"th a.k-header-column-menu i\"), function () {\r\n                        $(this).remove();\r\n                    });\r\n\r\n                    if (grid.data(\"kendoGrid\").dataSource.filter()) {\r\n\r\n                        var dsFilters = grid.data(\"kendoGrid\").dataSource.filter().filters || [];\r\n\r\n                        for (var i in dsFilters) {\r\n                            $(grid).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\r\n                        }\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        var isDuplicate = function (idToAdd) {\r\n            var n = false;\r\n            $.each(boundArray, function (i, item) {\r\n                if (item.BaseId == idToAdd) {\r\n                    n = true;\r\n                }\r\n            });\r\n            return n;\r\n        }\r\n\r\n        var buildGridColumns = function (columnFields, showRemovButton) {\r\n            var columns = [];\r\n\r\n            for (var prop in properties.PropertyToDisplay) {\r\n                var propertyKey = prop;\r\n                var localizationKey = properties.PropertyToDisplay[prop];\r\n                var localizedText = (!_.isUndefined(localization[localizationKey]) && [localizationKey].length > 0) ? localization[localizationKey] : localizationKey;\r\n                var columnClass = (properties.SelectableRow && propertyKey === properties.SelectProperty) ? \"grid-highlight-column\" : \"\";\r\n                var templ = (columnFields[propertyKey].type == \"date\")\r\n                            ? \"#= (\" + propertyKey + \") ? kendo.toString(new Date(\" + propertyKey + \"), kendo.culture().calendar.patterns.g) : '' #\"\r\n                            : \"#= (\" + propertyKey + \") ? \" + propertyKey + \" : '' #\";\r\n                var tpl = (properties.SelectableRow && propertyKey === properties.SelectProperty) ? \"<a target='_blank' href='#var url = app.gridUtils.getObjectLinkUrl(data);##=url#'> \" + templ + \" </a><span class='pull-right relatedItems-grid-links'><a class='highlight-default-icon' target='_blank' href='#var url = app.gridUtils.getObjectLinkUrl(data);##=url#'><i class='fa fa fa-external-link'></i></a></span>\" : templ;\r\n                columns.push({\r\n                    title: localizedText,\r\n                    width: \"210px\",\r\n                    field: propertyKey,\r\n                    filterable: {},\r\n                    encoded: true,\r\n                    attributes: {\r\n                        \"class\": columnClass\r\n                    },\r\n                    template: tpl\r\n                });\r\n            }\r\n            columns.push({ title: localization.BaseId, width: \"210px\", field: \"BaseId\", filterable: {}, encoded: true, hidden: true });\r\n            columns.push({ width: \"105px\", command: [{ name: \"destroy\", text: localization.Remove }], hidden: showRemovButton });\r\n\r\n            return columns;\r\n        }\r\n\r\n\r\n        //traverse and format date\r\n        var formatPropertyInBoundArray = function (currentItemEvent, columnString) {\r\n            var currentItem = currentItemEvent.items[0];\r\n            $.each(columnString.split(\",\"), function (i, column) {\r\n                $.each(boundArray, function (index, item) {\r\n                    //mutate poorly structured provided enum data \r\n                    if (column.indexOf('.') > 0) {\r\n                        var property = column.split('.')[0];\r\n                        if (_.isUndefined(item[property])) {\r\n                            if (column.split('.').length === 2) {\r\n                                boundArray[index][property] = { Id: \"\", Name: \"\" }\r\n                            } else {\r\n                                var jsonProperty = \"\";\r\n                                $.each(column.split('.').reverse(), function (inx, propName) {\r\n                                    if (inx === 0) {\r\n                                        jsonProperty = \"{\\\"\" + propName + \"\\\":\" + item[column] + \"}\";\r\n                                    } else {\r\n                                        jsonProperty = \"{\\\"\" + propName + \"\\\":\" + jsonProperty + \"}\";\r\n                                    }\r\n                                });\r\n                                boundArray[index] = $.extend(boundArray[index], JSON.parse(jsonProperty));\r\n                            }\r\n                        }\r\n                    }\r\n                    if (currentItem.BaseId != item.BaseId && currentItemEvent.action == \"add\") return; //This will be only used when adding new items\r\n                    if (_.isUndefined(item[column]) || _.isNull(item[column])) { return; }\r\n                    if (_.isBoolean(item[column]) || _.isNumber(item[column])) { return; }\r\n                    if (!_.isUndefined(item[column].Name)) { boundArray[index][column] = item[column].Name; } //enums\r\n                });\r\n            });\r\n        }\r\n\r\n        var scopeBoundArray = function (grid, scopeClassId, PropertyToDisplay) {\r\n\r\n            if (scopeClassId === \"\") { return; }\r\n\r\n            $.ajax({\r\n                url: \"/Search/GetSearchObjectsByClassId\",\r\n                data: { searchFilter: \"\", classId: scopeClassId, columnNames: PropertyToDisplay },\r\n                async: false,\r\n                timeout: 3000,\r\n                success: function (data) {\r\n                    var objectIds = [];\r\n                    $.each(data.Data, function (ii, iitem) {\r\n                        objectIds.push(iitem[\"BaseId\"]);\r\n                    });\r\n\r\n                    $.each(grid._data, function (ii, iitem) {\r\n                        if (!_.contains(objectIds, this.BaseId)) {\r\n                            var row = grid.tbody.find(\"tr[data-uid='\" + this.uid + \"']\");\r\n                            row.hide();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        var openObject = function (selectedItem) {\r\n            window.open(app.gridUtils.getObjectLinkUrl(selectedItem), '_blank');\r\n        }\r\n\r\n        var buildColumnFields = function (properties) {\r\n            var fields = {};\r\n            for (var prop in properties) {\r\n                if (prop.indexOf(\"Date\") > -1 || prop == \"LastModified\") {\r\n                    fields[prop] = {\r\n                        type: \"date\",\r\n                        parse: function (date) {\r\n                            if (_.isNull(date) || _.isUndefined(date)) {\r\n                                return '';\r\n                            } else {\r\n                                return new Date(date.toString().split('.')[0].concat('Z'));\r\n                            }\r\n                        }\r\n                    };\r\n                } else\r\n                    fields[prop] = { type: \"string\" };\r\n            }\r\n            \r\n            return fields;\r\n        }\r\n        __construct();\r\n    }\r\n    return definition;\r\n});\n","\ndefine('text!CustomSpace/Scripts/forms/predefined/history/view.html',[],function () { return '<div id=\"historyController\" data-role=\"historyController\">\\r\\n  <div class=\"row\">\\r\\n    <div class=\"col-md-12\">\\r\\n      <div class=\"form-group\">\\r\\n        <div class=\"input-group\">\\r\\n          <div\\r\\n            id=\"showHistoryDropDown\"\\r\\n            data-role=\"dropdownlist\"\\r\\n            data-text-field=\"text\"\\r\\n            data-value-field=\"value\"\\r\\n            data-template=\"dropDownHistoryTemplate\"\\r\\n            data-bind=\"source: dropDownDataSource, value: selectedDropDown\"\\r\\n          ></div>\\r\\n          <span class=\"input-group-btn\">\\r\\n            <button data-role=\"button\" class=\"btn btn-primary k-button\" data-bind=\"click: loadHistory\">\\r\\n              <span class=\"fa cursor-pointer\"></span><%= localizationHelper.localize(\\'ShowHistory\\', \\'Show History\\') %>\\r\\n            </button>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\"editor-label\">\\r\\n        <label id=\"showHistoryTitle\" data-bind=\"source: historyLabel\" data-template=\"labelHistoryTemplate\"></label>\\r\\n      </div>\\r\\n      <div id=\"historyView\" data-bind=\"visible: showHistory\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--kendo templates-->\\r\\n<script type=\"text/x-kendo-template\" id=\"labelHistoryTemplate\">\\r\\n  # if (typeof type !== \\'undefined\\') { #\\r\\n    # if (type == \"loading\") { #\\r\\n      <span class=\\'k-icon k-loading\\'></span>\\r\\n    # } else if (type == \"error\") { #\\r\\n      <span class=\\'fa fa-warning\\'></span> Unable to load history. Please try again.\\r\\n    # } else if (type == \"info\") { #\\r\\n      #: text #\\r\\n    # } #\\r\\n  # } #\\r\\n</script>\\r\\n<script type=\"text/x-kendo-template\" id=\"dropDownHistoryTemplate\">\\r\\n  <span style=\\'white-space: pre;\\'>#= data.text #</span>\\r\\n</script>\\r\\n<script type=\"text/x-kendo-template\" id=\"viewHistoryTemplate\">\\r\\n  <ul class=\\'timeline\\' data-template=\\'propertyHistoryTemplate\\' data-bind=\\'source: timelineDataSource\\'></ul>\\r\\n</script>\\r\\n<script type=\"text/x-kendo-template\" id=\"propertyHistoryTemplate\">\\r\\n  # if ((!_.isUndefined(ClassHistory) && ClassHistory.length > 0) || RelationshipHistory.length > 0) { #\\r\\n    <li>\\r\\n    # if (RelationshipHistory.length > 0) { #\\r\\n      <div class=\"timeline-badge primary\">\\r\\n        <i class=\"fa fa-code-fork\"></i>\\r\\n      </div>\\r\\n    # } else { #\\r\\n      <div class=\"timeline-badge\">\\r\\n        <i class=\"fa\"></i>\\r\\n      </div>\\r\\n    # } #\\r\\n      <div class=\"timeline-panel\">\\r\\n        <div class=\"timeline-heading\">\\r\\n          <a><h4 class=\"timeline-title\">#: UserName #</h4></a>\\r\\n          <p><small class=\"text-muted\"><i class=\"fa fa-clock-o\"></i>#: kendo.toString(new Date(DateOccurred),\\'g\\') #</small></p>\\r\\n        </div>\\r\\n        <div class=\"timeline-body\">\\r\\n          # if ((!_.isUndefined(ClassHistory) && ClassHistory.length > 0)) { #\\r\\n            <h5><%= localization.PropertyChanges %>:</h5>\\r\\n            <div class=\"table-responsive\">\\r\\n              <table class=\"table\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th><%= localization.Property %></th>\\r\\n                    <th><%= localization.OldValue %></th>\\r\\n                    <th><%= localization.NewValue %></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  # for (var i = 0; i < ClassHistory.length; i++) { #\\r\\n                    <tr>\\r\\n                      <td>#: localizationHelper.localize(ClassHistory[i].Key.replace(/ /g,\"\"), ClassHistory[i].Key) #</td>\\r\\n                      <td>#: ClassHistory[i].BeforeValue && ClassHistory[i].IsDate ? kendo.toString(new Date(ClassHistory[i].BeforeValue),\\'g\\') : localizationHelper.localize(ClassHistory[i].BeforeValue.replace(/ /g,\"\"), ClassHistory[i].BeforeValue) #</td>\\r\\n                      <td>#: ClassHistory[i].AfterValue && ClassHistory[i].IsDate ? kendo.toString(new Date(ClassHistory[i].AfterValue),\\'g\\') : localizationHelper.localize(ClassHistory[i].AfterValue.replace(/ [0-9]/g,\"\"), ClassHistory[i].AfterValue) #</td>\\r\\n                    </tr>\\r\\n                  # } #\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          # } #\\r\\n          # if (RelationshipHistory.length > 0) { #\\r\\n            <h5><%= localization.RelationshipChanges %>:</h5>\\r\\n            <div class=\"table-responsive\">\\r\\n              <table class=\"table\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th></th>\\r\\n                    <th><%= localization.RelationshipClass %></th>\\r\\n                    <th><%= localization.Item %></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  # for (var i = 0; i < RelationshipHistory.length; i++) { #\\r\\n                    <tr>\\r\\n                      # if (RelationshipHistory[i].ChangeType === \"Insert\") { #\\r\\n                        <td><i class=\"fa fa-plus text-success\"></i></td>\\r\\n                        <td>#: localizationHelper.localize(RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \").replace(/ /g,\"\"), RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \")) #</td>\\r\\n                        <td>#: localizationHelper.localize(RelationshipHistory[i].Item.replace(/ /g,\"\"), RelationshipHistory[i].Item) #</td>\\r\\n                      # } #\\r\\n\\r\\n                      # if (RelationshipHistory[i].ChangeType === \"Delete\") { #\\r\\n                        <td><i class=\"fa fa-minus text-danger\"></i></td>\\r\\n                        <td>#: localizationHelper.localize(RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \").replace(/ /g,\"\"), RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \")) #</td>\\r\\n                        <td>#: localizationHelper.localize(RelationshipHistory[i].Item.replace(/ /g,\"\"), RelationshipHistory[i].Item) #</td>\\r\\n                      # } #\\r\\n\\r\\n                      # if (RelationshipHistory[i].ChangeType === \"Update\") { #\\r\\n                        <td><i class=\"fa fa-exchange text-info\"></i></td>\\r\\n                        <td>#: localizationHelper.localize(RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \").replace(/ /g,\"\"), RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \")) #</td>\\r\\n                        <td><strike class=\"text-danger\">#: localizationHelper.localize(RelationshipHistory[i].PreviousItem.replace(/ /g,\"\"), RelationshipHistory[i].PreviousItem) #</strike> <span class=\"text-success\">#: localizationHelper.localize(RelationshipHistory[i].Item.replace(/ /g,\"\"), RelationshipHistory[i].Item) #</span></td>\\r\\n                      # } #\\r\\n                    </tr>\\r\\n                  # } #\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          # } #\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n  # } #\\r\\n  # for (var i = 0; i < ActionLogHistory.length; i++) { #\\r\\n    <li class=\"timeline-inverted\">\\r\\n      <div class=\"timeline-badge info\"><i class=\"fa fa-user\"></i></div>\\r\\n      <div class=\"timeline-panel\">\\r\\n        <div class=\"timeline-heading\">\\r\\n          <h4 class=\"timeline-title\">#: localizationHelper.localize(ActionLogHistory[i].EnteredBy.replace(/ /g,\"\"), ActionLogHistory[i].EnteredBy) #</h4>\\r\\n          <p><small class=\"text-muted\"><i class=\"fa fa-clock-o\"></i> #: kendo.toString(new Date(DateOccurred),\\'g\\') #</small></p>\\r\\n        </div>\\r\\n        <div class=\"timeline-body\">\\r\\n          <h5>#: localizationHelper.localize(ActionLogHistory[i].ActionType.replace(/ /g,\"\"), ActionLogHistory[i].ActionType) #</h5>\\r\\n          <blockquote>#: localizationHelper.localize(ActionLogHistory[i].Description.replace(/ /g,\"\"), ActionLogHistory[i].Description) #</blockquote>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n  # } #\\r\\n</script>\\r\\n';});\n\n","/* global $, _, app, define, kendo */\r\n\r\n/**\r\n * Work Item History Controller\r\n * @module historyController\r\n */\r\ndefine('CustomSpace/Scripts/forms/predefined/history/controller',[\r\n  'text!CustomSpace/Scripts/forms/predefined/history/view.html',\r\n], function (\r\n  historyTemplate\r\n) {\r\n  'use strict';\r\n  /**\r\n   * @exports historyController\r\n   */\r\n  var definition = {\r\n    template: historyTemplate,\r\n    /**\r\n     * Optional build callback type.\r\n     *\r\n     * @callback buildCallback\r\n     * @param {object} historyElm - History Control container element.\r\n     */\r\n\r\n    /**\r\n     * Build History Controller.\r\n     *\r\n     * @param {object} vm - View Model to add Control View Model to.\r\n     * @param {object} node - Module configuration.\r\n     * @param {buildCallback} [callback] - Callback function once build is complete.\r\n     */\r\n    build: function (vm, node, callback) {\r\n      if (!_.isUndefined(app.storage.custom) && app.storage.custom.get('debug')) {\r\n        app.custom.utils.log('historyController:build', {\r\n          vm: vm,\r\n          node: node,\r\n          callback: callback,\r\n        });\r\n      }\r\n      var historyViewModel;\r\n\r\n      // #region Utility functions\r\n\r\n      /**\r\n       * Get DropDownList data From View Model Activity objects recursively.\r\n       */\r\n      function getDropDownData() {\r\n        var data = [];\r\n        /**\r\n         * Recursive processing of child Activity objects.\r\n         */\r\n        function getChildren(viewModel, prefix) {\r\n          prefix = prefix || '';\r\n          data.push({\r\n            text: prefix + viewModel.Id + ' - ' + viewModel.Title,\r\n            value: viewModel.BaseId,\r\n          });\r\n          if (typeof viewModel.Activity !== 'undefined' && viewModel.Activity.length > 0) {\r\n            _.each(viewModel.Activity, function (activity) {\r\n              getChildren(activity, prefix + '    ');\r\n            });\r\n          }\r\n        };\r\n\r\n        getChildren(vm);\r\n\r\n        return data;\r\n      }\r\n\r\n      /**\r\n       * Check if provided object is a non-empty array.\r\n       * @returns {boolean} Item is a non-empty array.\r\n       */\r\n      function arrayIsNotNullOrEmpty(item) {\r\n        return (typeof item !== 'undefined' && item.length > 0);\r\n      }\r\n\r\n      /**\r\n       * Get current object query's GUID value.\r\n       * @returns {string} Object Id.\r\n       */\r\n      function getObjectQueryId() {\r\n        return historyViewModel.dropdownQuery.value;\r\n      }\r\n\r\n      // #endregion Utility functions\r\n\r\n      /**\r\n       * Get History Controller Kendo View Model.\r\n       */\r\n      function getHistoryViewModel() {\r\n        if (!_.isUndefined(app.storage.custom) && app.storage.custom.get('DEBUG_ENABLED')) {\r\n          app.custom.utils.log('historyController:getHistoryViewModel');\r\n        }\r\n        var historyProperties = {\r\n          historyLabel: { type: 'info', text: '' },\r\n          showHistory: false,\r\n          dropdownQuery: {},\r\n\r\n          dropDownDataSource: new kendo.data.DataSource({\r\n            data: [{\r\n              text: vm.Id + ' - ' + vm.Title,\r\n              value: vm.BaseId,\r\n            }],\r\n          }),\r\n\r\n          timelineDataSource: new kendo.data.DataSource({\r\n            serverFiltering: false,\r\n            transport: {\r\n              read: {\r\n                url: '/Search/GetObjectHistory',\r\n                data: {\r\n                  id: getObjectQueryId,\r\n                },\r\n                dataType: 'json',\r\n                type: 'GET',\r\n              },\r\n            },\r\n            filter: {\r\n              logic: 'or',\r\n              filters: [\r\n                { field: 'RelationshipHistory', operator: arrayIsNotNullOrEmpty},\r\n                { field: 'ClassHistory', operator: arrayIsNotNullOrEmpty},\r\n                { field: 'ActionLogHistory', operator: arrayIsNotNullOrEmpty},\r\n              ],\r\n            },\r\n            /**\r\n             * DataSource requestStart event handler.\r\n             * @see {@link https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/events/requeststart}\r\n             */\r\n            requestStart: function requestStart() {\r\n              historyViewModel.set('historyLabel', { type: 'loading' });\r\n              historyViewModel.set('showHistory', false);\r\n            },\r\n            /**\r\n             * DataSource change event handler.\r\n             * @see {@link https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/events/change}\r\n             *\r\n             * @param {object} data - DataSource read result data..\r\n             */\r\n            change: function change(data) {\r\n              historyViewModel.set('historyLabel', {\r\n                type: 'info',\r\n                text: historyViewModel.dropdownQuery.text,\r\n              });\r\n              historyViewModel.set('showHistory', true);\r\n            },\r\n            /**\r\n             * DataSource error event handler.\r\n             * @see {@link https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/events/error}\r\n             */\r\n            error: function error() {\r\n              historyViewModel.set('historyLabel', { type: 'error' });\r\n            },\r\n          }),\r\n\r\n          /**\r\n          * Load object from current History DropDownList value.\r\n          */\r\n          loadHistory: function () {\r\n            if (!_.isUndefined(app.storage.custom) && app.storage.custom.get('DEBUG_ENABLED')) {\r\n              app.custom.utils.log('historyController:loadHistory');\r\n            }\r\n            var kendoDropDownList = $('#showHistoryDropDown').data('kendoDropDownList'),\r\n            dataItem = kendoDropDownList.dataItem();\r\n            if (dataItem) {\r\n              historyViewModel.getObjectHistory(dataItem);\r\n            }\r\n          },\r\n\r\n          /**\r\n           * Get object history from provided dataItem.\r\n           *\r\n           * @param {object} dataItem - DropDownList dataItem to query.\r\n           */\r\n          getObjectHistory: function getObjectHistory(dataItem) {\r\n            if (!_.isUndefined(app.storage.custom) && app.storage.custom.get('DEBUG_ENABLED')) {\r\n              app.custom.utils.log('historyController:getObjectHistory', {\r\n                dataItem: dataItem,\r\n              });\r\n            }\r\n            var viewModel = this;\r\n            viewModel.set('dropdownQuery', dataItem);\r\n            if(typeof viewModel.historyView === 'undefined') {\r\n              viewModel.historyView = new kendo.View(\r\n                'viewHistoryTemplate',\r\n                {\r\n                  wrap: false,\r\n                  model: viewModel,\r\n                }\r\n              );\r\n              viewModel.historyView.render($('#historyView'));\r\n            } else {\r\n              viewModel.timelineDataSource.read();\r\n            }\r\n          },\r\n        };\r\n\r\n        return kendo.observable(historyProperties);\r\n      }\r\n\r\n      /**\r\n       * Build the History control and bind it to ViewModel.\r\n       *\r\n       * @param {object} historyViewModel - History Controller Kendo viewModel.\r\n       * @returns {object} Bult History DOM element.\r\n       */\r\n      function buildAndRender(historyViewModel) {\r\n        var builtHistory = _.template(historyTemplate),\r\n            historyElm = $(builtHistory(historyViewModel)),\r\n            historyView = new kendo.View(historyElm, {\r\n              model: historyViewModel,\r\n              wrap: false,\r\n            });\r\n\r\n        _.defer(function () {\r\n          historyView.render();\r\n\r\n          var historyDropDown = historyElm.find('#showHistoryDropDown').data('kendoDropDownList');\r\n\r\n          historyDropDown.bind('select', function (event) {\r\n            var dataItem = this.dataItem(event.item);\r\n            historyViewModel.getObjectHistory(dataItem);\r\n          });\r\n\r\n          historyDropDown.bind('open', function (event) {\r\n            historyViewModel.dropDownDataSource.data(getDropDownData());\r\n          });\r\n\r\n          historyDropDown.select(0);\r\n        });\r\n\r\n        historyViewModel.view = historyView;\r\n        historyViewModel.dropDownDataSource.data(getDropDownData());\r\n\r\n        if (typeof callback === 'function') {\r\n          callback(historyElm);\r\n        }\r\n\r\n        return historyElm;\r\n      }\r\n\r\n      /**\r\n       *  Initialize History controller.\r\n       *\r\n       * @returns {object} Bult History DOM element.\r\n       */\r\n      function initHistory() {\r\n        if (!_.isUndefined(app.storage.custom) && app.storage.custom.get('debug')) {\r\n          app.custom.utils.log('historyController:initHistory');\r\n        }\r\n        vm.view.historyController = historyViewModel = getHistoryViewModel();\r\n        return buildAndRender(historyViewModel);\r\n      }\r\n\r\n      return initHistory();\r\n    },\r\n  };\r\n\r\n  return definition;\r\n});\r\n\n","\ndefine('text!forms/predefined/billableTime/view.html',[],function () { return '<div>\\r\\n    <div data-control=\"billableTime\" data-control-bind=\"AppliesToWorkItem\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    <div class=\"row hidden-print\" data-bind=\"visible: view.billableTimeController.isVisible\">\\r\\n        <div class=\"col-md-3\">\\r\\n            <div class=\"form-group\" data-cid=\"work-itemBillableTime\" data-cid-propname=\"hours\">\\r\\n                <label for=\"hourNumeric\"><%= localization.hours %></label>\\r\\n                <div class=\"form-control form-control-picker input-sm\">\\r\\n                    <input id=\"hourNumeric\" data-role=\"numerictextbox\"\\r\\n                           data-format=\"#.##\"\\r\\n                           data-min=\"0\"\\r\\n                           data-bind=\"value: view.billableTimeController.btHour,\\r\\n                               events: {spin: view.billableTimeController.onHourSpin }\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-3\">\\r\\n            <div class=\"form-group\" data-cid=\"work-itemBillableTime\" data-cid-propname=\"minutes\">\\r\\n                <label for=\"minuteNumeric\"><%= localization.minutes %></label>\\r\\n                <div class=\"form-control form-control-picker input-sm\">\\r\\n                    <input id=\"minuteNumeric\" data-role=\"numerictextbox\"\\r\\n                           data-format=\"#.##\"\\r\\n                           data-min=\"0\"\\r\\n                           data-bind=\"value: view.billableTimeController.btMinute,\\r\\n                               events: {spin: view.billableTimeController.onMinuteSpin }\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-6 margin-t30\">\\r\\n            <button class=\"btn btn-primary\" data-role=\"button\" data-bind=\"events: {click: view.billableTimeController.onAddClick}\" data-cid=\"billableTimeAddButton\"><%= localization.Add %> </button>\\r\\n            <button class=\"btn btn-default\" data-role=\"button\" data-bind=\"events: {click: view.billableTimeController.onSubtractClick}\" data-cid=\"billableTimeSubtractButton\"><%= localization.Subtract %> </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-12\">\\r\\n            <div data-control=\"grid\"></div>\\r\\n            <div data-role=\"grid\" class=\"billable-time-grid\"\\r\\n                 data-bind=\"source: view.billableTimeController.dataSource, events:{dataBinding: view.billableTimeController.onDataBinding, dataBound: view.billableTimeController.onDataBound, cellClose: view.billableTimeController.onCellClose, remove: view.billableTimeController.remove}\"\\r\\n                 data-selectable=\"false\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"false\"\\r\\n                 data-editable=\"{mode: \\'incell\\'}\"\\r\\n                 data-columns=\\'[\\r\\n                { field: \"BillableTime.DisplayName\", title: localization.Analyst, width: \"300px\", attributes: { \"class\": \"grid-highlight-column\" } },\\r\\n                { field: \"BaseId\", title: localization.BaseId, width: \"30px\", hidden: true },\\r\\n                { field: \"LastUpdatedDisplay\", title: localization.LastUpdated, width: \"100px\" },\\r\\n                { field: \"TimeInMinutes\", title: localization.TimeInMinutes, width: \"100px\", attributes: { \"class\": \"pull-right\" } },\\r\\n                <% if ( !Disabled ){ %>\\r\\n                 { width: \"100px\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove}]}\\r\\n                <% } %>\\r\\n            ]\\'>\\r\\n            </div>\\r\\n            <div class=\"pull-right\">\\r\\n                <label id=\"btTotalTimeInString\" data-bind=\"html: view.billableTimeController.btTotalTimeInString\"></label>\\r\\n            </div>\\r\\n        </div>\\r\\n        </div>\\r\\n</div>\\r\\n</div>';});\n\n","/**\r\nbillableTime\r\n**/\r\n\r\ndefine('forms/predefined/billableTime/controller',['require','text!forms/predefined/billableTime/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/billableTime/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                Disabled: node.disabled,\r\n                PropertyName: \"AppliesToWorkItem\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var name = properties.PropertyName;\r\n            //use setters and getters if you want vm boundOdj to trigger change\r\n            if (_.isUndefined(vm[name])) {\r\n                vm.set(name, new kendo.data.ObservableArray([]));\r\n            }\r\n            var boundArray = vm.get(name);\r\n            boundArray.LastUpdatedDisplay = \"\";\r\n            \r\n\r\n            vm.view.billableTimeController = new kendo.observable({\r\n                btHour: 0,\r\n                btMinute: 0,\r\n                btTotalTime: 0,\r\n                btTotalTimeInString: \"\",\r\n                onHourSpin: function (e) {\r\n                    vm.view.billableTimeController.set('btHour', e.sender.value());\r\n                },\r\n                onMinuteSpin: function (e) {\r\n                    vm.view.billableTimeController.set('btMinute', e.sender.value());\r\n                },\r\n                dataSource: new kendo.data.DataSource({\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\",\r\n                        model: {\r\n                            id: \"BaseId\",\r\n                        }\r\n                    },\r\n                    data: {\r\n                        Data: boundArray,\r\n                        Total: boundArray.length\r\n                    }\r\n                }),\r\n                onCellClose: function (e) {\r\n                    vm.view.billableTimeController.computeTotalTime();\r\n                },\r\n                remove: function (e) {\r\n                    vm.view.billableTimeController.computeTotalTime();\r\n                },\r\n                onDataBinding: function (e) {\r\n                    $.each(boundArray, function (i, item) {\r\n                        if (_.isUndefined(item.BillableTime)) {\r\n                            item.BillableTime = { BasedId: null, DisplayName: null };\r\n                        }\r\n                        item.LastUpdatedDisplay =\r\n                            !_.isUndefined(item.LastUpdated)\r\n                                ? kendo.toString(new Date(item.LastUpdated), 'g')\r\n                                : null;\r\n                    });\r\n                },\r\n                onDataBound: function (e) {\r\n                    for (var item in e.sender._data) {\r\n                        var dataItem = e.sender._data[item];\r\n                        if (_.isNull(dataItem.BillableTime.BasedId)) {\r\n                            var row = e.sender.tbody.find(\"tr[data-uid='\" + dataItem.uid + \"']\");\r\n                            row.hide();\r\n                        }\r\n                    }\r\n                    vm.view.billableTimeController.computeTotalTime();\r\n                },\r\n                onAddClick: function (e) {\r\n                    var hour = vm.view.billableTimeController.btHour;\r\n                    var minute = vm.view.billableTimeController.btMinute;\r\n                    var totalTime = vm.view.billableTimeController.btTotalTime;\r\n\r\n                    var isExisting = false;\r\n                    \r\n                    $.each(boundArray, function (i, item) {\r\n                        if (item.BillableTime.BaseId === session.user.Id) {\r\n                            item.set(\"LastUpdated\", new Date().toISOString());\r\n                            item.set(\"TimeInMinutes\", parseInt(item.get(\"TimeInMinutes\")) + (hour * 60) + minute);\r\n                            isExisting = true;\r\n                            return false;\r\n                        }\r\n                    });\r\n                    if (!isExisting) {\r\n                        var newBillableModel = {\r\n                            BillableTime: {\r\n                                BaseId: session.user.Id,\r\n                                DisplayName: session.user.Name\r\n                            },\r\n                            LastUpdated: new Date().toISOString(),\r\n                            LastModified: new Date().toISOString(),\r\n                            TimeInMinutes: (hour * 60) + minute,\r\n                            BasedId: app.lib.newGUID(),\r\n                            Image: app.config.iconPath + app.config.icons[\"comment\"],\r\n                            EnteredDate: new Date().toISOString(),\r\n                            ClassTypeId: \"6645cdbe-78a3-ab81-7de9-638b733214fe\",\r\n                            EnteredBy: session.user.Name,\r\n                            Title: null,\r\n                            Description: null\r\n                        }\r\n                        boundArray.push(newBillableModel);\r\n                    }\r\n                    vm.view.billableTimeController.computeTotalTime();\r\n                    vm.view.billableTimeController.resetTime();\r\n                },\r\n                onSubtractClick: function (e) {\r\n                    var hour = vm.view.billableTimeController.btHour;\r\n                    var minute = vm.view.billableTimeController.btMinute;\r\n                    var totalTime = vm.view.billableTimeController.btTotalTime;\r\n\r\n                    if ((totalTime < (hour * 60)) || (totalTime < minute)) {\r\n                        kendo.ui.ExtAlertDialog.show({\r\n                            title: localization.SubtractTimeTitle,\r\n                            message: localization.SubtractTimeMessage\r\n                        });\r\n                    } else {\r\n                        $.each(boundArray, function (i, item) {\r\n                            if (item.BillableTime.BaseId === session.user.Id) {\r\n                                item.set(\"LastUpdated\", new Date().toISOString());\r\n                                item.set(\"TimeInMinutes\", parseInt(item.get(\"TimeInMinutes\")) - (hour * 60) - minute);\r\n                                isExisting = true;\r\n                            }\r\n                        });\r\n                        vm.view.billableTimeController.computeTotalTime();\r\n                        vm.view.billableTimeController.resetTime();\r\n                    }\r\n                },\r\n                computeTotalTime: function (e) {\r\n                    var itemTotalTime = 0;\r\n                    \r\n                    $.each(boundArray, function (i, item) {\r\n                        if (item.get(\"ClassTypeId\") === \"6645cdbe-78a3-ab81-7de9-638b733214fe\") {\r\n                            itemTotalTime += parseInt(item.get(\"TimeInMinutes\"));\r\n                        }\r\n                    });\r\n                    \r\n                    vm.view.billableTimeController.btTotalTime = itemTotalTime;\r\n                    vm.view.billableTimeController.btTotalTimeInString =\r\n                        (\"{0} : {1} {2}\")\r\n                        .replace(\"{0}\", localization.Totaltime)\r\n                        .replace(\"{1}\", vm.view.billableTimeController.btTotalTime)\r\n                        .replace(\"{2}\", localization.minutes);\r\n\r\n                    kendo.bind($(\"#btTotalTimeInString\"), vm);\r\n                },\r\n                resetTime: function () {\r\n                    $('#hourNumeric').data(\"kendoNumericTextBox\").value(0);\r\n                    vm.view.billableTimeController.set('btHour', 0);\r\n                    $('#minuteNumeric').data(\"kendoNumericTextBox\").value(0);\r\n                    vm.view.billableTimeController.set('btMinute', 0);\r\n                },\r\n                isVisible: !vm.isDisabled\r\n            });\r\n\r\n            var view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/knowledgeArticle/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileHTMLGridTemplate\" class=\"\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">${KnowledgeArticleID}: ${Title}</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                # if ( Category && Category.length > 0 ){ #\\r\\n                <p>#: localizationHelper.localize(\"Category\") #: #: Category # </p>\\r\\n                # } #\\r\\n                # if ( Type && Type.length > 0 ){ #\\r\\n                <p>#: localizationHelper.localize(\"Type\") #: #: Type # </p>\\r\\n                # } #\\r\\n            </div>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <a class=\"k-delete-button\">#: localization.Remove #</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 file-attachments\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>>\\r\\n        \\r\\n    <div data-bind=\"visible: view.knowledgeArticleModel.showAddButton\">\\r\\n        <button class=\"btn btn-primary hidden-print\" data-role=\"button\" data-bind=\"events:{click: view.knowledgeArticleModel.addClick}\"><%= localization.Add %> </button>\\r\\n    </div>\\r\\n    \\r\\n    <% if ( IsMobileView == false ){ %>\\r\\n        <div data-role=\"grid\"\\r\\n            data-bind=\"source: RelatedHTMLKB, events:{remove: view.knowledgeArticleModel.removeRelatedKB}\"\\r\\n            data-selectable=\"true\"\\r\\n            data-sortable=\"true\"\\r\\n            data-filterable=\"true\"\\r\\n            data-scrollable=\"false\"\\r\\n            data-column-menu=\"true\"\\r\\n            data-pageable=\"false\"\\r\\n            data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n            data-columns=\\'[\\r\\n                { field: \"KnowledgeArticleID\", title: localization.Id, width: \"10%\", attributes:{class:\"grid-highlight-column\"}},\\r\\n                { field: \"Title\", title: localization.Title, width: \"50%\", attributes:{class:\"grid-highlight-column\"}, template: \"\\\\u003ca target=\\\\u0027_blank\\\\u0027 href=\\\\u0027#var url = \\\\u0022/KnowledgeBase/View/\\\\u0022 + data.KnowledgeArticleID##=url#\\\\u0027\\\\u003e#: Title # \\\\u003c/a\\\\u003e\\\\u003cspan class=\\\\u0027pull-right relatedItems-grid-links\\\\u0027\\\\u003e\\\\u003ca class=\\\\u0027highlight-default-icon\\\\u0027 target=\\\\u0027_blank\\\\u0027 href=\\\\u0027#var url = \\\\u0022/KnowledgeBase/View/\\\\u0022 + data.KnowledgeArticleID;##=url#\\\\u0027\\\\u003e\\\\u003ci class=\\\\u0027fa fa fa-external-link\\\\u0027\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/a\\\\u003e\\\\u003c/span\\\\u003e\"},\\r\\n                { field: \"Category\", title: localization.Category, width: \"20%\" },\\r\\n                { field: \"Type\", title: localization.Type, width: \"20%\" },\\r\\n                { width: \"4%\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove }] }\\r\\n                ]\\'>\\r\\n        </div>\\r\\n    <% } %>\\r\\n    <% if ( IsMobileView ){ %>\\r\\n        <div data-role=\"listview\" data-template=\"mobileHTMLGridTemplate\" data-bind=\"source: RelatedHTMLKB, events: {remove: view.knowledgeArticleModel.removeRelatedKB}\" class=\"mobile-grid-parent\"></div>\\r\\n    <% } %>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/predefined/knowledgeArticle/popup.html',[],function () { return '<div class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-5\">\\r\\n                    <div class=\"form-group\">\\r\\n                        <label><%= localization.SearchText %></label>\\r\\n                        <span class=\"k-textbox k-space-right\">\\r\\n                            <input type=\"text\" data-bind=\"value: searchText\" />\\r\\n                            <span data-bind=\"events:{click: search}\" class=\"fa fa-search cursor-pointer\">&nbsp;</span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <label><%= localization.SelectObjects %></label>\\r\\n\\r\\n            <div class=\"objectPicker-container\">\\r\\n                <div class=\"k-widget k-grid k-secondary\"\\r\\n                     data-role=\"grid\"\\r\\n                     data-bind=\"source: dataSource\"\\r\\n                     data-selectable=\"multiple, row\"\\r\\n                     data-sortable=\"true\"\\r\\n                     data-filterable=\"true\"\\r\\n                     data-scrollable=\"false\"\\r\\n                     data-column-menu=\"true\"\\r\\n                     data-pageable=\"true\"\\r\\n                     data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n                     data-columns=\\'[\\r\\n                { field: \"ArticleId\", title: localization.Id, width: \"10%\"},\\r\\n                { field: \"Title\", title: localization.Title, width: \"90%\"}\\r\\n                ]\\'>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"objectPicker-actions\">\\r\\n                <button data-role=\"button\" data-bind=\"events:{click: add}\" class=\"btn btn-primary k-button\"><%= localization.Add %> </button>\\r\\n                <button data-role=\"button\" data-bind=\"events:{click: remove}\" class=\"btn btn-danger k-button\"><%= localization.Remove %> </button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"k-widget k-grid k-secondary objectPicker-grid2-container\"\\r\\n                 data-role=\"grid\"\\r\\n                 data-bind=\"source: selectedItems\"\\r\\n                 data-selectable=\"multiple, row\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"true\"\\r\\n                 data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n                 data-columns=\\'[\\r\\n                { field: \"ArticleId\", title: localization.Id, width: \"10%\"},\\r\\n                { field: \"Title\", title: localization.Title, width: \"90%\"}\\r\\n                ]\\'>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n';});\n\n","/**\r\nknowledgeArticle\r\n**/\r\n\r\ndefine('forms/predefined/knowledgeArticle/controller',['require','text!forms/predefined/knowledgeArticle/view.html','text!forms/predefined/knowledgeArticle/popup.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/knowledgeArticle/view.html\");\r\n    var popupTpl = require(\"text!forms/predefined/knowledgeArticle/popup.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var properties = {\r\n                Disabled: false,\r\n                IsMobileView: app.isMobileDevice()\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //build the template for the popup window\r\n            var built = _.template(popupTpl);\r\n            var popupView = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in popup window\r\n            callback(popupView.render());\r\n\r\n            //view model\r\n            vm.view.knowledgeArticleModel = kendo.observable({\r\n                addClick: function (e) {\r\n                    var popupWindow= popupView.element; \r\n                    win = popupWindow.kendoCiresonWindow({\r\n                        title: localization.SelectObject,\r\n                        width: 750,\r\n                        height: 710,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the popup element\r\n                    var modalViewModel = new kendo.observable({\r\n                        dataSource: new kendo.data.DataSource({\r\n                            transport: {\r\n                                read: {\r\n                                    url: \"/api/V3/KnowledgeBase/GetHTMLArticles\",\r\n                                    dataType: \"json\",\r\n                                    data: { userId: session.user.Id },\r\n                                    cache: false\r\n                                }\r\n                            },\r\n                            schema: {\r\n                                model: {\r\n                                    fields: {\r\n                                        ArticleId: { type: \"string\" },\r\n                                        Title: { type: \"string\" },\r\n                                        Category: { type: \"string\" },\r\n                                        Type: { type: \"string\" }\r\n                                    }\r\n                                }\r\n                            },\r\n                            pageSize: 5,\r\n                        }),\r\n                        selectedItems: new kendo.data.ObservableArray([]),\r\n                        searchText:\"\",\r\n                        search: function(e){\r\n                            var val = this.get(\"searchText\");\r\n                            this.dataSource.read();\r\n                            this.dataSource.filter({\r\n                                logic: \"or\",\r\n                                filters: [\r\n                                    {\r\n                                        field: \"ArticleId\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Title\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Category\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Type\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    }\r\n                                ]\r\n                            });\r\n                        },\r\n                        add: function (e) {\r\n                            var gridEle = popupWindow.find('[data-role=\"grid\"]').first();\r\n                            var grid = gridEle.data(\"kendoGrid\");\r\n                            var selectedRows = grid.select();\r\n\r\n                            for (var i = 0; i < selectedRows.length; i++) {\r\n                                var dataItem = grid.dataItem(selectedRows[i]);\r\n                                if (dataItem) {\r\n                                    //check first if article is already on the selected list before adding it to the second grid\r\n                                    var articleIds = _.pluck(this.selectedItems, \"ArticleId\");\r\n                                    var isAdded = _.contains(articleIds, dataItem.ArticleId);\r\n\r\n                                    if (!isAdded) {\r\n                                        this.selectedItems.push(dataItem);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var selectedGridEle = popupWindow.find('[data-role=\"grid\"]').last();\r\n                            selectedGridEle.data(\"kendoGrid\").dataSource.query({ page: 1, pageSize: 5 });\r\n                        },\r\n                        remove: function (e) {\r\n                            var gridEle = popupWindow.find('[data-role=\"grid\"]').last();\r\n                            var grid = gridEle.data(\"kendoGrid\");\r\n                            var selectedRows = grid.select();\r\n\r\n                            for (var i = 0; i < selectedRows.length; i++) {\r\n                                var dataItem = grid.dataItem(selectedRows[i]);\r\n                                this.selectedItems.pop(dataItem);\r\n                            }\r\n                        },\r\n                        save: function (e) {\r\n                            var relatedHTMLKB = !_.isUndefined(vm.get(\"RelatedHTMLKB\")) ? vm.get(\"RelatedHTMLKB\") : [];\r\n                            _.each(this.selectedItems, function (item) {\r\n                                relatedHTMLKB.push({\r\n                                    KnowledgeArticleID: item.ArticleId,\r\n                                    WorkItemID: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.BaseId : null,\r\n                                    WorkItemId: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.Id : null,\r\n                                    AssetID: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.BaseId : null,\r\n                                    AssetId: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.Id : null,\r\n                                    Title: item.Title,\r\n                                    Category: item.Category,\r\n                                    Type: item.Type\r\n                                });\r\n                            });\r\n\r\n                            vm.set(\"RelatedHTMLKB\", relatedHTMLKB);\r\n\r\n                            win.close();\r\n                        },\r\n                        cancel: function (e) {\r\n                            win.close();\r\n                        }\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(popupWindow, modalViewModel);\r\n\r\n                    popupWindow.removeClass('hide');\r\n                    popupWindow.show();\r\n\r\n                    win.open();\r\n                },\r\n                bindRowClick: function (e) {\r\n                    var gridEle = view.element.find('[data-role=\"grid\"]').first();\r\n\r\n                    if (!app.isMobile())\r\n                    {\r\n                        var grid = gridEle.data(\"kendoGrid\");\r\n\r\n                        grid.dataSource.originalFilter = grid.dataSource.filter;\r\n\r\n                        // Replace the original filter function.\r\n                        grid.dataSource.filter = function () {\r\n\r\n                            // Call the original filter function.\r\n                            var result = grid.dataSource.originalFilter.apply(this, arguments);\r\n\r\n                            // If a column is about to be filtered, then raise a new \"filtering\" event.\r\n                            if (arguments.length > 0) {\r\n                                this.trigger(\"filterApplied\", arguments);\r\n                            }\r\n\r\n                            return result;\r\n                        }\r\n\r\n                        grid.dataSource.bind(\"filterApplied\", function () {\r\n\r\n                            $.each($(gridEle).find(\"th a.k-header-column-menu i\"), function () {\r\n                                $(this).remove();\r\n                            });\r\n\r\n                            if (grid.dataSource.filter()) {\r\n\r\n                                var filters = grid.dataSource.filter().filters || [];\r\n                                var dsFilters = [];\r\n                                for (var i in filters) {\r\n                                    if (filters[i].filters) {\r\n                                        var innerFilters = filters[i].filters;\r\n                                        for (var x in innerFilters) {\r\n                                            dsFilters.push(innerFilters[x]);\r\n                                        }\r\n                                    } else {\r\n                                        dsFilters.push(filters[i]);\r\n                                    }\r\n                                }\r\n\r\n                                dsFilters = _.uniq(dsFilters, function (el) { return el.field; });\r\n\r\n                                for (var i in dsFilters) {\r\n                                    $(gridEle).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\r\n                                }\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                    },\r\n                    \r\n                getAllRelatedWorkItems: function (e) {\r\n                    //this will hold all the related knowledge article data\r\n                    var relatedHTMLKB = !_.isUndefined(vm.get(\"RelatedHTMLKB\")) ? vm.get(\"RelatedHTMLKB\") : new kendo.data.ObservableArray([]);\r\n\r\n                    var url = '';\r\n\r\n                    if (vm.ClassName.indexOf(\"WorkItem\") != -1)\r\n                        url = app.lib.addUrlParam(\"/api/V3/Article/GetArticlesRelatedToWorkItem\", \"workItemId\", vm.BaseId);\r\n                    else if (vm.ClassName.indexOf(\"AssetManagement\") != -1)\r\n                        url = app.lib.addUrlParam(\"/api/V3/Article/GetArticlesRelatedToAsset\", \"assetId\", vm.BaseId);\r\n\r\n                    $.ajax({\r\n                        url: url,\r\n                        dataType: 'json',\r\n                        type: \"POST\",\r\n                        success: function (data) {\r\n                            //set the value\r\n                            _.each(data, function (item) {\r\n                                relatedHTMLKB.push({\r\n                                    KnowledgeArticleID: item.ArticleID,\r\n                                    WorkItemID: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.BaseId : null,\r\n                                    WorkItemId: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.Id : null,\r\n                                    AssetID: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.BaseId : null,\r\n                                    AssetId: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.Id : null,\r\n                                    Title: item.Title,\r\n                                    Category: item.CategoryName,\r\n                                    Type: item.TypeName\r\n                                });\r\n                            });\r\n\r\n                            //to avoid triggering isDirty, update viewModel only if there is/are related KB\r\n                            if (relatedHTMLKB.length > 0) {\r\n                                vm.set(\"RelatedHTMLKB\", relatedHTMLKB);\r\n                            }\r\n                        },\r\n                        error: function (e) {\r\n                            //log error and display generic error tesxt\r\n                            app.lib.log(e.errorThrown + ' - When retrieving data from /api/V3/Article/GetArticlesRelatedToWorkItem');\r\n                        }\r\n                    });\r\n                },\r\n                removeRelatedKB: function (e) {\r\n                    //this will hold all the to be deleted related knowledge article \r\n                    var removeHTMLKB = !_.isUndefined(vm.get(\"RemoveRelatedHTMLKB\")) ? vm.get(\"RemoveRelatedHTMLKB\") : new kendo.data.ObservableArray([]);\r\n                    removeHTMLKB.push(e.model);\r\n                    vm.set(\"RemoveRelatedHTMLKB\", removeHTMLKB);\r\n                },\r\n                showAddButton: !vm.isDisabled\r\n            });\r\n           \r\n            //build it\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false, model: vm.view.knowledgeArticleModel });\r\n            callback(view.render());\r\n\r\n            vm.view.knowledgeArticleModel.getAllRelatedWorkItems();\r\n            vm.view.knowledgeArticleModel.bindRowClick();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/predefined/serviceComponents/view.html',[],function () { return '<div class=\"configItemComponents\">\\r\\n    <div class=\"configItemComponentsTreeView\">\\r\\n        <div data-role=\"treeview\"\\r\\n             data-drag-and-drop=\"false\"\\r\\n             data-text-field=\"DisplayName\"\\r\\n             data-spritecssclass-field=\"type\"\\r\\n             data-bind=\"source: items, events: { select: onSelect }\">\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\"propSelectedItem\">Properties Of Selected Item</div>\\r\\n    <hr />\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-3\">\\r\\n            <div class=\"form-group\">\\r\\n                <label class=\"control-label\"><span>Name</span></label>\\r\\n                <div class=\"display-field name\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\"col-md-3\">\\r\\n            <div class=\"form-group\">\\r\\n                <label class=\"control-label\"><span>Class Name</span></label>\\r\\n                <div class=\"display-field className\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    \\r\\n    <div class=\"relatedWorkItemsForSelectedItem\">Related Work Items For Selected Item</div>\\r\\n    <hr class=\"relatedWorkItemsForSelectedItem-hr\" />\\r\\n</div>\\r\\n\\r\\n';});\n\n","/**\r\naffectedItems\r\n**/\r\n\r\ndefine('forms/predefined/serviceComponents/controller',['require','text!forms/predefined/serviceComponents/view.html','forms/predefined/multipleObjectPicker/controller'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/serviceComponents/view.html\");\r\n    var relatedItem = require(\"forms/predefined/multipleObjectPicker/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            var properties = {\r\n                Disabled: true,\r\n                ProjectionId: ''\r\n            };\r\n\r\n\r\n            $.extend(true, properties, node);\r\n\r\n\r\n            var templateFrag = $(built(properties));\r\n            callback(templateFrag);\r\n\r\n            node.Disabled = true;\r\n            node.PropertyToDisplay = { DisplayName: \"Title\", Status: \"Status\", LastModified: \"LastModified\" };\r\n            node.ClassId = \"F59821E2-0364-ED2C-19E3-752EFBB1ECE9\";\r\n            node.SelectableRow = true;\r\n            node.SelectProperty = \"DisplayName\";\r\n            node.PropertyName = \"scopeIsAboutConfigItems\";\r\n            var grid = relatedItem.build(vm, node, callback);\r\n\r\n\r\n            _.defer(function () {\r\n\r\n\r\n\r\n                $.get(\"/configItems/GetConfigItemComponents\", { id: vm.BaseId }, function (data) {\r\n                    vm.view.treeController = kendo.observable({\r\n                            isVisible: true,\r\n                            onSelect: function (e) {\r\n                                var treeView = e.sender;\r\n                                var nodeVM =  treeView.dataItem(e.node)\r\n                                templateFrag.find(\".name\").html(nodeVM.DisplayName);\r\n                                templateFrag.find(\".className\").html(nodeVM.ClassName);\r\n\r\n                                $.get(\"/configItems/GetWorkItemsRelatedToConfigItem\", { id: nodeVM.Id }, function (workitems) {\r\n                                    //var workitems = JSON.parse(wiData);\r\n                                    \r\n                                    var tempArr = vm.get(node.PropertyName);\r\n                                    _.each(tempArr, function (wi) {\r\n                                        vm[node.PropertyName].shift(wi);\r\n                                    });\r\n\r\n                                    _.each(workitems, function (wi) {\r\n                                        wi.LastModified = kendo.toString(new Date(wi.LastModified), \"g\");\r\n                                        vm[node.PropertyName].unshift(wi);\r\n                                    });\r\n                                });\r\n                            },\r\n                            items: JSON.parse(data)\r\n                        });\r\n\r\n                        kendo.bind(templateFrag, vm.view.treeController);\r\n                });\r\n\r\n\r\n            });\r\n            \r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/dependentComponents/view.html',[],function () { return '<div>\\r\\n\\r\\n</div>\\r\\n\\r\\n';});\n\n","/**\r\naffectedItems\r\n**/\r\n\r\ndefine('forms/predefined/dependentComponents/controller',['require','text!forms/predefined/dependentComponents/view.html','forms/predefined/multipleObjectPicker/controller'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/dependentComponents/view.html\");\r\n    var relatedItem = require(\"forms/predefined/multipleObjectPicker/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            var properties = {\r\n                Disabled: true,\r\n                ProjectionId: '',\r\n\r\n            };\r\n\r\n\r\n            $.extend(true, properties, node);\r\n\r\n\r\n            var templateFrag = $(built(properties));\r\n            callback(templateFrag);\r\n\r\n            node.PropertyToDisplay = { DisplayName: \"Name\", ClassName: \"Class Name\", IsAffectedByCR: \"Affected By Change\", IsAffectedByIR: \"Affected By Incident\" };\r\n            node.ClassId = \"62F0BE9F-ECEA-E73C-F00D-3DD78A7422FC\";\r\n            node.PropertyName = \"ConfigItem\";\r\n            node.SelectableRow = true;\r\n            node.SelectProperty = \"DisplayName\";\r\n            \r\n            var grid = relatedItem.build(vm, node, callback);\r\n            grid.on(\"click\", \"td\", function (e) {\r\n                var kendoGrid = grid.data(\"kendoGrid\");\r\n                var selectedItem = kendoGrid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n                \r\n\r\n                $.get(\"/configItems/GetWorkItemsRelatedToConfigItem\", { id: selectedItem.BaseId }, function (workitems) {\r\n                    var tempArr = vm.get(\"ConfigItemRelatedWI\");\r\n                    _.each(tempArr, function (wi) {\r\n                        vm[\"ConfigItemRelatedWI\"].shift(wi);\r\n                    });\r\n\r\n                    _.each(workitems, function (wi) {\r\n                        wi.LastModified = kendo.toString(new Date(wi.LastModified), \"g\");\r\n                        vm[\"ConfigItemRelatedWI\"].unshift(wi);\r\n                    });\r\n                });\r\n\r\n            });\r\n\r\n            _.defer(function () {\r\n                var currentItems = vm.get(node.PropertyName);\r\n\r\n                $.get(\"/configItems/GetDependentComponents\", { id: vm.BaseId }, function (configItems) {\r\n                    \r\n                    _.each(configItems, function (item) {\r\n                        for (var i in currentItems)\r\n                        {\r\n                            if (currentItems[i].ClassName == item.ClassName)\r\n                            {\r\n                                currentItems[i].set(\"IsAffectedByCR\", item.IsAffectedByCR ? \"Yes\" : \"None\");\r\n                                currentItems[i].set(\"IsAffectedByIR\", item.IsAffectedByIR ? \"Yes\" : \"None\");\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n\r\n\r\n            _.defer(function () {\r\n                //creat grid for displaying related workitems\r\n                node.Disabled = true;\r\n                node.PropertyToDisplay = { DisplayName: \"Title\", Status: \"Status\", LastModified: \"LastModified\" };\r\n                node.ClassId = \"F59821E2-0364-ED2C-19E3-752EFBB1ECE9\";\r\n                node.PropertyName = \"ConfigItemRelatedWI\";\r\n                node.SelectProperty = \"DisplayName\";\r\n                var grid = relatedItem.build(vm, node, callback);\r\n\r\n\r\n                _.defer(function () {\r\n                    var parentElement = grid.closest(\"#ConfigItemRelatedWI\").parent();\r\n                    parentElement.prepend('<div class=\"configItemComponents\"><div class=\"relatedWorkItemsForSelectedItem\">Related Work Items For Selected Item</div><hr class=\"relatedWorkItemsForSelectedItem-hr\" /></div>');\r\n                });\r\n                \r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/display/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <% if ( !HideLabel ){ %>\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\"></label>\\r\\n    <% } %>\\r\\n    <div class=\"display-field\" data-bind=\"text: <%= PropertyName %>\"></div>\\r\\n</div>';});\n\n","/**\r\nDISPLAY\r\n**/\r\n\r\ndefine('forms/fields/display/controller',['require','text!forms/fields/display/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/display/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                HideLabel: false\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/spacer/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nSPACER\r\n**/\r\n\r\ndefine('forms/fields/spacer/controller',['require','text!forms/fields/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/spacer/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nINT32\r\n**/\r\n\r\ndefine('forms/fields/int/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            var boundObj = node.vm;\r\n            //make sure we have all the vals set\r\n            \r\n            var properties = {\r\n                Required: node.Required,\r\n                DecimalPlaces: 0,\r\n                MinValue: -2147483648,\r\n                MaxValue: 2147483648,\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var templateFrag = $(built(properties));\r\n            new Control(templateFrag.find(\"[data-control='numericTextBox']\"), boundObj, node);\r\n\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n\r\n    var Control = function (targetEle, boundObj, node) {\r\n\r\n        //This will be used for mobile because the numeric event wont triggering when you type in the value.\r\n        if (app.isMobile()) {\r\n            var editor = targetEle.data();\r\n            setTimeout(function () {\r\n                var number = targetEle.parent().find(\"input[type='number']\");\r\n                number.change(function () {\r\n                    boundObj.set(node.PropertyName, number.val());\r\n                });\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nDECIMAL\r\n**/\r\n\r\ndefine('forms/fields/decimal/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                //Required: false,\r\n                DecimalPlaces: 20,\r\n                MinValue: '',\r\n                MaxValue: '',\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nDOUBLE\r\n**/\r\n\r\ndefine('forms/fields/double/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                //Required: false,\r\n                DecimalPlaces: 19,\r\n                MinValue: '',\r\n                MaxValue: '',\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Format:''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/datetime/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <input name=\"<%= PropertyName %>\"\\r\\n           data-control=\"dateTimePicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-from=\"<%= FromFilter %>\"\\r\\n           data-control-to=\"<%= ToFilter %>\"\\r\\n           data-control-from-relative=\"<%= FromRelative %>\"\\r\\n           data-control-to-relative=\"<%= ToRelative %>\"\\r\\n    \\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n\\r\\n    >\\r\\n</div>';});\n\n","/**\r\nDATETIME\r\n**/\r\n\r\ndefine('forms/fields/datetime/controller',['require','text!forms/fields/datetime/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/datetime/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                FromFilter: '',\r\n                ToFilter: '',\r\n                FromRelative: '',\r\n                ToRelative: '',\r\n                Disabled: node.disabled,\r\n                Required: node.Required\r\n            };\r\n\r\n            //set from filter\r\n            if (typeof node.MinValue == \"string\") {\r\n                if (node.MinValue.indexOf(\":\") != -1) {\r\n                    properties.FromRelative = node.MinValue;\r\n                } else {\r\n                    properties.FromFilter = node.MinValue;\r\n                }\r\n            }\r\n\r\n            //set to filter\r\n            if (typeof node.MaxValue == \"string\") {\r\n                if (node.MaxValue.indexOf(\":\") != -1) {\r\n                    properties.ToRelative = node.MaxValue;\r\n                 } else {\r\n                    properties.ToFilter = node.MaxValue;\r\n                 }\r\n            }\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/userPicker/view.html',[],function () { return '<div class=\"form-group\" data-cid=\"userpicker\" data-cid-propname=\"<%= PropertyName %>\"\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>>\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input class=\"input-userpicker\"\\r\\n           data-control=\"userPicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-extra=\"<%= ExtraProps %>\"\\r\\n           data-control-delay=\"<%= Delay %>\"\\r\\n           data-control-minlength=\"<%= MinLength %>\"\\r\\n           data-control-filterbyanalyst=\"<%= FilterByAnalyst%>\"\\r\\n           data-control-maxnumberofresults=\"<%= MaxNumberOfResults%>\"\\r\\n           type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n            <% if ( Disabled ){ %>\\r\\n            disabled\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\nuserPicker\n**/\n\ndefine('forms/fields/userPicker/controller',['require','text!forms/fields/userPicker/view.html','forms/popups/userPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/fields/userPicker/view.html\");\n    var userPickerPopup = require(\"forms/popups/userPickerPopup/controller\");\n    var definition = {\r\n        template: tpl,\n        build: function (vm, node, callback) {\r\n            if (_.isUndefined(node.vm)) {\r\n                boundObj = node;\n                name = node.PropertyName;\r\n            } else {\r\n                boundObj = node.vm;\n                name = node.PropertyName;\r\n            }\n            // add default values\n            var properties = {\r\n                Required: node.Required, // TODO: yo, this is stupid. fix it.\n                Disabled: node.disabled, // TODO: yo, this is stupid. fix it.\n                ExtraProps: false,\n                Delay: 200,\n                MinLength: 3,\n                FilterByAnalyst: false,\n                MaxNumberOfResults: 10\r\n            }\n            $.extend(true, properties, node);\n            var built = _.template(tpl);\n            var templateFrag = $(built(properties));\n            var popupWindow = userPickerPopup.getPopup();\n\n            // comment out next two lines to go back to using app.controls\n            var objectPicker = new Control(templateFrag.find(\"[data-control='userPicker']\"), boundObj, name, popupWindow);\n            templateFrag.find(\"[data-control='userPicker']\").attr(\"data-control\", \"userPickerBound\");\n\n            callback(templateFrag);\r\n        }\r\n    }\n\n    // NAME/ID pair data model\n    // used to map name/id to server or viewModel\n    // Generic getter and setters:  name,id\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\n        this.serverNameProp = nameProp;\n        this.serverIdProp = idProp;\n        var data = {};\n        data[self.serverNameProp];\n        data[self.serverIdProp];\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\n            id: function () { return data[self.serverIdProp]; }\r\n        }\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\n            return data;\r\n        }\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\n            return {\r\n                name: self.get.name(),\n                id: self.get.id()\r\n            }\r\n        }\r\n\n    }\n    // CONTROL\n    var Control = function (targetEle, boundObj, name, popupWindow) {\n        // control parameters\n        var targetEle = targetEle;\n        var extraProps = targetEle.attr(\"data-control-extra\");\n        var delay = targetEle.attr(\"data-control-delay\");\n        var minLength = targetEle.attr(\"data-control-minlength\");\n        var filterByAnalyst = targetEle.attr(\"data-control-filterByAnalyst\");\n        var maxNumberOfResults = targetEle.attr(\"data-control-maxNumberOfResults\");\n        var autoCompleteUrl = \"/api/V3/User/GetUserList\";\n        var detailsPopupUrl = \"/Search/ObjectViewer\";\n        var objectExtraUrl = \"/Search/GetObjectPropertiesByProjection?projectionId=490ab845-b14c-1d91-c39f-bb9e8a350933&id=\";\n        var boundObj = boundObj;\n        var propName = name;\n        var popupWindow = popupWindow;\n\n        // viewModel getters/setters\n        var _textProp = \"DisplayName\";\n        var _idProp = \"BaseId\";\n        var _model = new NameIdModel(_textProp, _idProp);\n        app.lib.forceKendoProp(boundObj, propName, kendo.observable(_model.getObj(null, null)));\n        var get = {\r\n            obj: function () { return boundObj[propName]; },\n            name: function () { return boundObj[propName][_textProp]; },\n            id: function () { return boundObj[propName][_idProp]; }\r\n        }\n        var set = {\r\n            obj: function (name, id) {\r\n                boundObj[propName].set(_idProp, id);\n                boundObj[propName].set(_textProp, name);\r\n            }\r\n        }\n\n        // private properties\n        var helperBlock;\n        var autoComplete;\n\n\n        /*******************/\n        /*** CONSTRUCT *****/\n        /*******************/\n\n        var __construct = function () {\r\n            createHelperBlock();\n            createAutocomplete();\n            refreshDisplayValues();\n            bindEvents();\r\n        }\n\n        /************************/\n        /*** CONTROL EVENTS *****/\n        /************************/\n\n        var bindEvents = function () {\r\n            boundObj[name].bind(\"change\", function () {\r\n                refreshDisplayValues();\r\n            });\r\n        }\n\n        /******************************/\n        /*** CONTROL USER ACTIONS *****/\n        /******************************/\n\n        var onAutoCompleteValueChanged = function (obj) {\r\n            if (obj) {\r\n                set.obj(obj.name, obj.id);\r\n            } else {\r\n                set.obj(null, null);\r\n            }\r\n        }\n        var onSearchIconClick = function () {\r\n            popupWindow.setSaveCallback(function (obj) {\r\n                set.obj(obj.name, obj.id);\r\n            });\n            popupWindow.vm.filterByAnalyst = filterByAnalyst;\n            popupWindow.open();\r\n        }\n\n        /*************************/\n        /*** CONTROL METHODS *****/\n        /*************************/\n\n        //do we have a model set in the bound object\n        //not sure what the get object is -jk\n        var isModelSet = function () {\r\n            return (boundObj && boundObj[name] && get.name() && get.id()) ? true : false;\r\n        }\n\n        //lets check for boundObject that is nulled\n        var isModelSetNulled = function () {\r\n            return (boundObj && boundObj[name] && _.isNull(get.name()) && _.isNull(get.id()) ) ? true : false;\r\n        }\n\n        var hasExtraProps = function () {\r\n            return (extraProps && extraProps != \"false\");\r\n        }\n        var createHelperBlock = function () {\r\n            if (hasExtraProps()) {\r\n                helperBlock = new HelperBlock({\r\n                    url: objectExtraUrl,\n                    container: targetEle.parent(),\n                    props: extraProps.split(\",\")\r\n                });\r\n            }\r\n        }\n        var createAutocomplete = function () {\r\n            autoComplete = new AutoComplete({\r\n                url: autoCompleteUrl,\n                detailsUrl: detailsPopupUrl,\n                targetEle: targetEle,\n                delay: delay,\n                minLength: minLength,\n                callback: onAutoCompleteValueChanged,\n                maxNumberOfResults: maxNumberOfResults\r\n            });\r\n        }\n        var refreshDisplayValues = function () {\r\n\n            if (isModelSet()) {\r\n                if (helperBlock) {\r\n                    helperBlock.setDisplay(get.id());\r\n                }\n                if (autoComplete) {\r\n                    autoComplete.setValue(get.name(), get.id());\r\n                }\r\n            }\n                /**Added to fix Task/BUG 2148: When using the Assign to Analyst by group task (where there is no assigned to user) in the portal, \n                then select an analyst and click \"cancel\" the analyst still appears on the form.**/\n            else if (isModelSetNulled()) {\r\n                if (autoComplete) {\r\n                    autoComplete.setValue(\"\", null);\r\n                }\r\n            }\r\n        }\n\n        /****************************/\n        /*** CONTROL SUBCLASSES *****/\n        /****************************/\n\n        /* -- HelperBlock --\n            // params\n                settings = {\n                    url: \"\", // url to get object extra props\n                    container: jqEle, // where helpblock will get appended\n                    props: [], // array of property names to be displayed in order\n                    delay: \"\", //numeric delay in ms before search is performed\n                    minLength: \"\", //numeric length of chars before search is performed\n                }\n            // public methods\n                obj.setDisplay(objectId) /// goes to server then displays helper data for that objectId\n        */\n        var HelperBlock = function (settings) {\r\n            var self = this;\n            var html;\n            var _vm;\n            var container = settings.container;\n            var url = settings.url;\n            var props = settings.props;\n\n            // CONSTRUCT\n\n            var __construct = function () {\r\n                createHtml();\n                createViewModel();\n                bindEvents();\n                self.setDisplay = _vm.getUserObjectData;\r\n            }\n\n            // EVENTS\n\n            var bindEvents = function () {\r\n                _vm.bind(\"change\", function (e) {\r\n                    if (e.field == \"extraPropText\") {\r\n                        _vm.set(\"isVisible\", (_vm.extraPropText.length > 0));\r\n                    } else if (e.field == \"data\") {\r\n                        setExtraPropsDisplay();\r\n                    }\r\n                });\r\n            }\n\n            // ACTIONS\n\n            // METHODS\n\n            var createHtml = function () {\n                // note: move this to definition.html\n                html = $('<span>', { \"class\": \"help-block\", \"data-bind\": \"text: extraPropText, visible: isVisible\" });\n                setTimeout(function () {\r\n                    container.append(html);\r\n                }, 100);\r\n            }\n            var createViewModel = function () {\r\n                _vm = kendo.observable({\r\n                    isVisible: false,\n                    extraPropText: \"\",\n                    data: {},\n                    getUserObjectData: getUserObjectData\r\n                });\n                kendo.bind(html, _vm);\r\n            }\n\n            var getUserObjectData = function (objectId) {\r\n                $.get(url + objectId, function (data) {\r\n                    if (data && data[0]) {\r\n                        data = data[0];\r\n                    }\n                    _vm.set(\"data\", data);\n                    setExtraPropsDisplay();\r\n                });\r\n            }\n\n            var getDisplayName = function (obj) {\r\n                var displayName = \"\";\n                if (!_.isUndefined(obj.Name) && !_.isNull(obj.Name)) {\r\n                    displayName = obj.Name;\r\n                }\n                if (!_.isUndefined(obj.DisplayName) && !_.isNull(obj.DisplayName)) {\r\n                    displayName = obj.DisplayName;\r\n                }\n                return displayName;\r\n            }\n\n            var setExtraPropsDisplay = function () {\r\n                var str = \"\";\n                $.each(props, function (i, item) {\r\n                    var dataItem = _vm.data[item];\n                    if (dataItem) {\r\n                        str += (_.isObject(dataItem) ? getDisplayName(dataItem) : dataItem) + \", \";\r\n                    }\r\n                });\n                _vm.set(\"extraPropText\", str.substring(0, str.length - 2));\r\n            }\n\n            // END\n\n            __construct();\r\n        }\n\n        /* -- Autocomplete --\n            // params\n                settings = {\n                    url: \"\", // url for datasource\n                    targetEle: jqEle, // element to apply autocomplete\n                    callback: function(obj){} // fired when object is change via autocomplete, provides selected object or null values\n                }\n            // public methods\n        */\n        var AutoComplete = function (settings) {\n            // settings\n            var self = this;\n            var targetEle = settings.targetEle;\n            var url = settings.url;\n            var detailsUrl = settings.detailsUrl;\n            var callback = settings.callback; // \n            var delay = settings.delay; // \n            var minLength = settings.minLength; // \n            var placeHolderText = (targetEle.attr('disabled')) ? \"\" : localization.SearchButton;\n\n            // private params\n            var autoComplete;\n            var dataSource;\n            var focusedItemIndex = false\n            var searchBtn;\n            var detailsBtn;\n            var detailsPopupEle;\n            var detailsPopup;\n            var _textProp = \"Name\";\n            var _idProp = \"Id\";\n            var _model = new NameIdModel(_textProp, _idProp);\n            var hasTCCURL = !_.isNull(session.consoleSetting.TrueControlCenterURL) && (session.consoleSetting.TrueControlCenterURL != \"\") && session.user.Analyst;\n\n            // CONSTRUCT\n\n            var __construct = function () {\r\n                createKendoDataSource();\n                createKendoAutoComplete();\n                createSearchButton();\n                hasTCCURL ? createTCCDetailsButton() : createDetailsButton();\n                createDetailsPopup();\n                bindEvents();\n                self.setValue = setValue;\r\n            }\n\n            // EVENTS\n\n            var bindEvents = function () {\r\n                autoComplete.bind(\"select\", function (e) {\r\n                    var obj = this.dataItem(e.item.index());\n                    callback(_model.getGenericFromObj(obj));\r\n                });\n                autoComplete.bind(\"change\", function (e) {\r\n                    validateAutoCompleteValue();\n                    callback(_model.getGenericFromObj(getDataSourceMatch(autoComplete.value())));\r\n                });\n                autoComplete.bind(\"dataBound\", function (e) {\r\n                    e.sender.ul.find(\"li\").first().addClass(\"k-state-hover\");\r\n                });\n                targetEle.on(\"keyup\", function (e) {\r\n                    if (e.which == 40 && !autoComplete.ul.is(\":visible\")) { //down arrow\n                        autoComplete.search(autoComplete.value());\n                        validateAutoCompleteValue();\r\n                    }\n                    else if (e.which != 13 && e.which != 9) { //enter\n                        focusedItemIndex = getFocusedIndex();\n                        validateAutoCompleteValue();\r\n                    }\r\n\n                });\n                targetEle.on(\"keydown\", function (e) {\r\n                    if (e.which == 13) {\n                        // enter click select first match in dropdown or focused\n                        var children = autoComplete.ul.children();\n                        if (children.length && autoComplete.ul.is(\":visible\")) {\r\n                            var index = (focusedItemIndex !== false) ? focusedItemIndex : 0;\n                            autoComplete.select(autoComplete.ul.children().eq(index));\n                            autoComplete.trigger(\"change\");\n                            validateAutoCompleteValue();\r\n                        } else { //if enter is hit and we have no child do a search\n                            autoComplete.search(autoComplete.value());\r\n                        }\r\n                    }\r\n                });\n\n                //we need blur so we can handle tabbing out\n                targetEle.on(\"blur\", function (e) {\r\n                    focusedItemIndex = getFocusedIndex();\n                    validateAutoCompleteValue(true);\r\n                });\n\n                //handle copy-paste event\n                targetEle.on(\"input propertychange\", function (e) {\n                    //perform autocomplete search if search box is not empty\n                    if (e.currentTarget.value != \"\") {\r\n                        autoComplete.search(e.currentTarget.value);\n                        validateAutoCompleteValue();\r\n                    }\r\n                });\n\n                detailsPopup.bind(\"close\", function () {\r\n                    detailsPopupEle.find(\".k-content\").html('');\r\n                });\n                searchBtn.click(onSearchIconClick);\n                detailsBtn.click(onDetailsBtnClick);\r\n            }\n\n            // ACTIONS\n\n            var onDetailsBtnClick = function (e) {\r\n                hasTCCURL ? e.stopPropagation() : openModal();\r\n            }\n\n            var openSlideout = function (e) {\r\n                var userObj = { BaseId: _model.get.id(), Name: _model.get.name() }\n                var src = app.slideOutNav.getTCCSourceURL(userObj, \"user\");\n                var options = {\r\n                    url: src,\r\n                    tooltip: localization.UserManagement\r\n                }\n                app.slideOutNav.show(options);\r\n            }\n\n            var openModal = function (e) {\r\n                detailsPopup.refresh({\r\n                    url: detailsUrl,\n                    data: { id: _model.get.id() }\r\n                });\n                detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\n                detailsPopup.title(_model.get.name()).center().open();\r\n            }\n\n            // METHODS\n\n            var createSearchButton = function () {\r\n                searchBtn = $(\"<div>\", { \"class\": \"searchIcon\", \"data-control-action\": \"userPickerWindow\" });\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\n                var a = $(\"<i>\", { \"class\": \"fa fa-search cursor-pointer \" + iconColor })\n                searchBtn.append(a);\n                //don't want to  show search icon if field is disabled\n                if (!targetEle.attr('disabled') || app.isMobileDevice()) {\r\n                    searchBtn.insertAfter(targetEle);\r\n                }\r\n            }\n            var createDetailsButton = function () {\r\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\n                detailsBtn = $(\"<i>\", { \"class\": \"fa fa-info-circle cursor-pointer info-icon \" + iconColor });\n                detailsBtn.insertBefore(targetEle);\n                detailsBtn.hide();\r\n            }\n\n            var createTCCDetailsButton = function () {\r\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\n                detailsBtn = $(\"<ul>\", { \"class\": \"menu-usr-mgt\" });\n                detailsBtn.insertBefore(targetEle);\n                detailsBtn.hide();\n\n                detailsBtn.kendoMenu({\r\n                    dataSource: [\n                        {\r\n                            text: \"<i class='fa fa-info-circle cursor-pointer'></i>\",\n                            encoded: false,\n                            items: [\n                                {\r\n                                    text: localization.UserManagement,\n                                    imageUrl: \"/Content/Images/Icons/Other/control-center-launcher.png\",\n                                    imageAttr: {\r\n                                        height: '16px',\n                                        width: '16px'\r\n                                    },\n                                    attr: {\r\n                                        custom: 'tcc' //custom attribute holds the link type\n                                    }\r\n                                },\n                                {\r\n                                    text: \"<i class='fa fa-info-circle cursor-pointer' style='margin: -2px 7px 0 -3px;'></i>\"+localization.AdditionalDetails,\n                                    encoded: false,\n                                    attr: {\r\n                                        custom: 'info' //custom attribute holds the link type\n                                    }\r\n                                }\n                            ]\r\n                        }\n                    ],\n                    select: function (e) {\r\n                        if (!_.isUndefined(e.item.attributes[\"custom\"])) {\r\n                            var type = e.item.attributes[\"custom\"].value;\n                            (type == \"tcc\") ? openSlideout() : openModal();\r\n                        }\r\n                    },\n                    openOnClick: true\r\n                });\r\n            }\n\n            var createKendoDataSource = function () {\r\n                dataSource = new kendo.data.DataSource({\r\n                    transport: {\r\n                        read: {\r\n                            url: url,\n                            data: {\r\n                                userFilter: function () {\r\n                                    return autoComplete.value();\r\n                                },\n                                filterByAnalyst: filterByAnalyst,\n                                maxNumberOfResults: settings.maxNumberOfResults\r\n                            }\r\n                        }\r\n                    },\n                    serverFiltering: true\r\n                });\r\n            }\n            var createKendoAutoComplete = function () {\r\n                autoComplete = targetEle.kendoAutoComplete({\r\n                    dataTextField: _textProp,\n                    suggest: true,\n                    placeholder: placeHolderText + \"...\",\n                    valuePrimitive: false,\n                    dataSource: dataSource,\n                    delay: delay,\n                    minLength: minLength,\n                    enable: (targetEle.attr('disabled')) ? false : true,\n                    clearButton: false\r\n                }).data(\"kendoAutoComplete\");\r\n\n            }\n            var createDetailsPopup = function () {\r\n                detailsPopupEle = $(\"<div>\");\n                detailsPopupEle.appendTo(\"body\");\n                detailsPopup = detailsPopupEle.kendoCiresonWindow({\r\n                    title: \"\",\n                    width: 550,\n                    height: 500,\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\n\n            var validateAutoCompleteValue = function (blurred) {\r\n                var match = getDataSourceMatch(autoComplete.value());\n                if (!match && autoComplete.value() != \"\") { //empty values are valid bug 494\n                    detailsBtn.hide();\n                    if (targetEle.is(\":focus\") && !blurred) {\n                        // invalid while typing\n                        targetEle.css({\r\n                            \"text-decoration\": \"none\",\r\n                        });\r\n                    } else {\n                        // invalid after blur\n                        targetEle.css({\r\n                            \"text-decoration\": \"none\",\n                            \"background-color\": \"#FBE3E4\"\r\n                        });\n\n                        //add the invalid data attribute\n                        targetEle.attr('data-invalid', '');\r\n                    }\r\n                } else {\n                    // valid\n\n                    //remove the invalid data attribute\n                    targetEle.removeAttr('data-invalid', '');\n\n                    //do we actually have a value to show the extension properties for\n                    if (autoComplete.value() === \"\") {\r\n                        detailsBtn.hide();\r\n                    } else {\r\n                        detailsBtn.show();\n\n                        targetEle.css({\r\n                            \"text-decoration\": \"underline\"\r\n                        });\r\n                    }\r\n                }\r\n            }\n\n            var getDataSourceMatch = function (val) {\r\n                var ds = _.clone(dataSource);\n                var view = ds.view();\n\n                // matching needs to be case insensitive\n                var match = false;\n                $.each(view, function (i, item) {\r\n                    if (item.Name.toLowerCase() == val.toLowerCase()) {\r\n                        match = item;\r\n                    }\r\n                });\n                return match;\r\n            }\n            var setValue = function (name, id) {\r\n                dataSource.add(_model.getObj(name, id));\n                autoComplete.value(name);\n                validateAutoCompleteValue();\r\n            }\n            var getFocusedIndex = function () {\r\n                var focused = autoComplete.ul.find(\".k-state-focused\");\n                return (focused.length) ? focused.index() : false;\r\n            }\n\n            // END\n\n            __construct();\r\n        }\n\n        /*************/\n        /*** END *****/\n        /*************/\n\n        __construct();\r\n\n    }\n\n    return definition;\r\n\n});\n","\ndefine('text!forms/fields/objectPicker/view.html',[],function () { return '<div class=\"form-group\" data-cid=\"objectpicker\" data-cid-propname=\"<%= PropertyName %>\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input class=\"input-userpicker\"\\r\\n           data-control=\"objectPicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-extra=\"<%= ExtraProps %>\"\\r\\n           type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n            <% if ( Disabled ){ %>\\r\\n            disabled\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>\\r\\n    />\\r\\n</div>';});\n\n","\ndefine('text!forms/popups/objectPickerPopup/view.html',[],function () { return '<div id=\"ObjectPickerPopupWindow\" class=\"cireson-window defined-form task-window\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"col-group\">\\r\\n                <div class=\"c2\">\\r\\n                    <label data-bind=\"text: searchText\"></label>\\r\\n                    <span class=\"k-textbox\">\\r\\n                        <input class=\"textbox-padding-right\" type=\"text\" data-value-update=\"keyup\" data-bind=\"value: searchValue, events: { keypress: searchOnEnter }\">\\r\\n                        <a data-bind=\"click: search\" class=\"cursor-pointer fa fa-search\"></a>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div>\\r\\n                <label data-bind=\"text: selectObjectText\"></label>\\r\\n                <div data-control-grid=\"userPickerGrid\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\"cireson-window--footer window-buttons objectPicker-single-grid\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nobjectPickerPopup\r\n**/\r\nvar __objectPickerPopupSingleton;\r\n\r\ndefine('forms/popups/objectPickerPopup/controller',['require','text!forms/popups/objectPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/objectPickerPopup/view.html\");\r\n    var singletonName = \"objectPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (classId, BaseId) {\r\n            //BaseId will be used to remove it self from the list.\r\n            //need a specific instance per classId, so this singleton is a hash\r\n            if (__objectPickerPopupSingleton && __objectPickerPopupSingleton[classId]) {\r\n                return __objectPickerPopupSingleton[classId];\r\n            }\r\n\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n            var classId = classId;\r\n            var objectPickerPopup = ele.data(singletonName);\r\n\r\n            $(\"body\").append(ele);\r\n            __objectPickerPopupSingleton = new ObjectPickerPopup(ele, classId, BaseId);\r\n\r\n            return __objectPickerPopupSingleton;\r\n        }\r\n    }\r\n\r\n    /* -- ObjectPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            open = function(classId){ // opens popup with this classId }\r\n            close = function(){ // closes popup }\r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback(obj){  } returns selected user object\r\n    */\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // CONTROL\r\n    var ObjectPickerPopup = function (targetEle, classId, BaseId) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var classId = classId;\r\n        var gridHtml = targetEle.find(\"[data-control-grid]\");\r\n        var grid;\r\n        var gridUrl = \"/ConfigItems/GetObjectSearchResults\";\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"DisplayName\";\r\n        var _idProp = \"Id\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                searchText: localization.SearchText,\r\n                selectObjectText: localization.SelectObject,\r\n                searchValue: \"\",\r\n                okText: localization.OK,\r\n                cancelText: localization.Cancel,\r\n                search: onSearchClick,\r\n                searchOnEnter: function (e) {\r\n                    if (e.which == 13) {\r\n                        e.preventDefault();\r\n                        onSearchClick();\r\n                    }\r\n                },\r\n                save: onSaveClick,\r\n                cancel: onCancelClick\r\n            });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            createGrid();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n            self.vm = _vm;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n\r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSearchClick = function () {\r\n            grid.search(_vm.searchValue);\r\n        }\r\n        var onSaveClick = function () {\r\n            var selectedRow = grid.kendoGrid.select();\r\n            if (selectedRow) {\r\n                var obj = _model.getGenericFromObj(grid.kendoGrid.dataItem(selectedRow));\r\n                $(self).trigger(\"save\", obj);\r\n                closePopup();\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n\r\n        var openPopup = function () {\r\n            //clear out search box value and search results before opening the window\r\n            self.vm.set(\"searchValue\", \"\");\r\n            grid.kendoDataSource.data([]);\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup();\r\n        }\r\n        var createGrid = function () {\r\n            grid = new Grid({\r\n                html: gridHtml,\r\n                url: gridUrl\r\n            });\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function () {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            // ACTIONS\r\n\r\n            // METHODS\r\n\r\n            var createKendoWindow = function () {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: localization.SelectObject,\r\n                    content: null,\r\n                    width: 680,\r\n                    height: 400,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Grid --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n        */\r\n        var Grid = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var html = settings.html;\r\n            var url = settings.url;\r\n            var height = 150;\r\n            var kendoGrid;\r\n            var kendoDataSource;\r\n            var searchValue;\r\n            // private params           \r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoGrid();\r\n                kendoGrid.pager.element.hide();\r\n                bindEvents();\r\n                self.kendoGrid = kendoGrid;\r\n                self.kendoDataSource = kendoDataSource;\r\n                self.search = search;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                kendoGrid.bind(\"dataBound\", function (e) {\r\n                    kendoGrid.pager.element.show();\r\n                });\r\n                kendoGrid.element.on(\"dblclick\", \"tbody>tr\", onRowDblClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onRowDblClick = function () {\r\n                kendoGrid.select($(this));\r\n                onSaveClick();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var search = function (value) {\r\n                searchValue = value;\r\n                kendoDataSource.read();\r\n                if (!_.isUndefined(BaseId) || BaseId != \"\")\r\n                    kendoGrid.dataSource.filter([{ field: \"Id\", operator: \"neq\", value: BaseId }]);\r\n                kendoDataSource.page(1);\r\n            }\r\n            var createKendoDataSource = function () {\r\n                kendoDataSource = new kendo.data.DataSource({\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": url,\r\n                            \"data\": function () {\r\n                                return {\r\n                                    searchFilter: function () {\r\n                                        return searchValue;\r\n                                    },\r\n                                    classId: function () {\r\n                                        return classId;\r\n                                    },\r\n                                    groupFilter: \"\"\r\n                                }\r\n                            },\r\n                            \"type\": \"GET\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": 15,\r\n                    \"page\": 1,\r\n                    \"total\": 0,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                        \"model\": {\r\n                            \"fields\": {\r\n                                \"Id\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"ObjectClassId\": {\r\n                                    \"type\": \"number\"\r\n                                },\r\n                                \"ObjectClassName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"DisplayName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Path\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Hosted\": {\r\n                                    \"type\": \"number\"\r\n                                },\r\n                                \"LastModified\": {\r\n                                    \"type\": \"date\"\r\n                                },\r\n                                \"Status\": {\r\n                                    \"type\": \"string\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            var createKendoGrid = function () {\r\n                kendoGrid = html.kendoGrid({\r\n                    height: height,\r\n                    dataSource: kendoDataSource,\r\n                    selectable: \"Single,Row\",\r\n                    sortable: { mode: \"multiple\" },\r\n                    pageable: true,\r\n                    filterable: {\r\n                        extra: false,\r\n                        operators: {\r\n                            string: {\r\n                                startswith: localization.Startswith,\r\n                                contains: localization.Contains,\r\n                                eq: localization.Isequalto,\r\n                                neq: localization.Isnotequalto\r\n                            },\r\n                            date: {\r\n                                gte: localization.GreaterOrEqual,\r\n                                gt: localization.GreaterThan,\r\n                                lte: localization.LessOrEqual,\r\n                                lt: localization.LessThan\r\n                            }\r\n                        }\r\n                    },\r\n                    autoBind: false,\r\n                    columns: [{\r\n                        \"title\": \"Id\",\r\n                        \"hidden\": true,\r\n                        \"field\": \"Id\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.DisplayName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"field\": \"DisplayName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Class,\r\n                        \"field\": \"ObjectClassName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Path,\r\n                        \"field\": \"Path\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }],\r\n                }).data(\"kendoGrid\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n\r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","/**\r\nobjectPicker\r\n**/\r\n\r\ndefine('forms/fields/objectPicker/controller',['require','text!forms/fields/objectPicker/view.html','forms/popups/objectPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/fields/objectPicker/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/objectPickerPopup/controller\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //console.log(node);\r\n            boundObj = node.vm;\r\n            name = node.PropertyName;\r\n            // add default values\r\n            var properties = {\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                ExtraProps: false,\r\n                ClassId: false // this is a required\r\n            }\r\n            $.extend(true, properties, node);\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(properties));\r\n            var popupWindow = objectPickerPopup.getPopup(properties.ClassId, boundObj.BaseId);\r\n\r\n            // comment out next two lines to go back to using app.controls\r\n            var objectPicker = new Control(templateFrag.find(\"[data-control='objectPicker']\"), boundObj, name, popupWindow, properties.ClassId, callback);\r\n            templateFrag.find(\"[data-control='objectPicker']\").attr(\"data-control\", \"objectPickerBound\");\r\n\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function isArray(ob) {\r\n        return Object.prototype.toString.call(ob) === '[object Array]';\r\n    }\r\n    // CONTROL\r\n    var Control = function (targetEle, boundObj, name, popupWindow, classId, callback) {\r\n        \r\n        // control parameters\r\n        var targetEle = targetEle;\r\n        var extraProps = targetEle.attr(\"data-control-extra\");\r\n        var autoCompleteUrl = \"/ConfigItems/GetObjectSearchResults\";\r\n        var detailsPopupUrl = \"/Search/ObjectViewer\";\r\n        var objectExtraUrl = \"/Search/GetObjectPropertiesByProjection?projectionId=490ab845-b14c-1d91-c39f-bb9e8a350933&id=\";\r\n        var boundObj = boundObj;\r\n        var propName = name;\r\n        var popupWindow = popupWindow;\r\n        var classId = classId;\r\n\r\n        // viewModel getters/setters\r\n        var _textProp = \"DisplayName\";\r\n        var _idProp = \"BaseId\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n        app.lib.forceKendoProp(boundObj, propName, kendo.observable(_model.getObj(null, null)));\r\n        var get = {\r\n            obj: function () { return boundObj[propName].length > 0 ? getIndexZero(boundObj[propName], null) : boundObj[propName]; },\r\n            name: function () { return boundObj[propName].length > 0 ? getIndexZero(boundObj[propName], _textProp) : boundObj[propName][_textProp]; },\r\n            id: function () { return boundObj[propName].length > 0 ? getIndexZero(boundObj[propName], _idProp) : boundObj[propName][_idProp]; }\r\n        }\r\n        var set = {\r\n            obj: function (name, id) {\r\n                if (boundObj[propName].length > 0) {\r\n                    \r\n                    boundObj[propName][0].set(_idProp, id);\r\n                    boundObj[propName][0].set(_textProp, name);\r\n                } else {\r\n                    boundObj[propName].set(_idProp, id);\r\n                    boundObj[propName].set(_textProp, name);\r\n                }\r\n            }\r\n        }\r\n\r\n        var getIndexZero = function (obj, property) {\r\n            var _obj = obj[0];\r\n            if (classId.toLowerCase() == _obj[\"ClassTypeId\"].toLowerCase()) {\r\n                if (property != null) {\r\n                    return _obj[property];\r\n                }\r\n                else {\r\n                    return _obj;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n\r\n        }\r\n\r\n        \r\n\r\n        // private properties\r\n        var helperBlock;\r\n        var autoComplete;\r\n\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            createHelperBlock();\r\n            createAutocomplete();\r\n            refreshDisplayValues();\r\n            bindEvents();\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n            boundObj[name].bind(\"change\", function () {\r\n                refreshDisplayValues();\r\n            });\r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onAutoCompleteValueChanged = function (obj) {\r\n            if (obj) {\r\n                set.obj(obj.name, obj.id);\r\n            } else {\r\n                set.obj(null, null);\r\n            }\r\n        }\r\n        var onSearchIconClick = function () {\r\n            popupWindow.setSaveCallback(function (obj) {\r\n                if (boundObj.BaseId != obj.id) {\r\n                    set.obj(obj.name, obj.id);\r\n                }\r\n            });\r\n            popupWindow.open();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n\r\n        var isModelSet = function () {\r\n            return (boundObj && boundObj[name] && get.name() && get.id()) ? true : false;\r\n        }\r\n        var hasExtraProps = function () {\r\n            return (extraProps && extraProps != \"false\");\r\n        }\r\n        var createHelperBlock = function () {\r\n            if (hasExtraProps()) {\r\n                helperBlock = new HelperBlock({\r\n                    url: objectExtraUrl,\r\n                    container: targetEle.parent(),\r\n                    props: extraProps.split(\",\")\r\n                });\r\n            }\r\n        }\r\n        var createAutocomplete = function () {\r\n            autoComplete = new AutoComplete({\r\n                url: autoCompleteUrl,\r\n                detailsUrl: detailsPopupUrl,\r\n                targetEle: targetEle,\r\n                callback: onAutoCompleteValueChanged\r\n            });\r\n        }\r\n        var refreshDisplayValues = function () {\r\n            if (isModelSet()) {\r\n                if (helperBlock) {\r\n                    helperBlock.setDisplay(get.id());\r\n                }\r\n                if (autoComplete) {\r\n                    autoComplete.setValue(get.name(), get.id());\r\n                }\r\n            }\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- HelperBlock --\r\n            // params\r\n                settings = {\r\n                    url: \"\", // url to get object extra props\r\n                    container: jqEle, // where helpblock will get appended\r\n                    props: [], // array of property names to be displayed in order\r\n                }\r\n            // public methods\r\n                obj.setDisplay(objectId) /// goes to server then displays helper data for that objectId\r\n        */\r\n        var HelperBlock = function (settings) {\r\n            var self = this;\r\n            var html;\r\n            var _vm;\r\n            var container = settings.container;\r\n            var url = settings.url;\r\n            var props = settings.props;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createHtml();\r\n                createViewModel();\r\n                bindEvents();\r\n                self.setDisplay = _vm.getUserObjectData;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                _vm.bind(\"change\", function (e) {\r\n                    if (e.field == \"extraPropText\") {\r\n                        _vm.set(\"isVisible\", (_vm.extraPropText.length > 0));\r\n                    } else if (e.field == \"data\") {\r\n                        setExtraPropsDisplay();\r\n                    }\r\n                });\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            // METHODS\r\n\r\n            var createHtml = function () {\r\n                // note: move this to definition.html\r\n                html = $('<span>', { \"class\": \"help-block\", \"data-bind\": \"text: extraPropText, visible: isVisible\" });\r\n                setTimeout(function () {\r\n                    container.append(html);\r\n                }, 100);\r\n            }\r\n            var createViewModel = function () {\r\n                _vm = kendo.observable({\r\n                    isVisible: false,\r\n                    extraPropText: \"\",\r\n                    data: {},\r\n                    getUserObjectData: getUserObjectData\r\n                });\r\n                kendo.bind(html, _vm);\r\n            }\r\n\r\n            var getUserObjectData = function (objectId) {\r\n                $.get(url + objectId, function (data) {\r\n                    if (data && data[0]) {\r\n                        data = data[0];\r\n                    }\r\n                    _vm.set(\"data\", data);\r\n                    setExtraPropsDisplay();\r\n                });\r\n            }\r\n\r\n            var setExtraPropsDisplay = function () {\r\n                var str = \"\";\r\n                $.each(props, function (i, item) {\r\n                    if (_vm.data[item]) {\r\n                        str += _vm.data[item] + \", \";\r\n                    }\r\n                });\r\n                _vm.set(\"extraPropText\", str.substring(0, str.length - 2));\r\n            }\r\n\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Autocomplete --\r\n            // params\r\n                settings = {\r\n                    url: \"\", // url for datasource\r\n                    targetEle: jqEle, // element to apply autocomplete\r\n                    callback: function(obj){} // fired when object is change via autocomplete, provides selected object or null values\r\n                }\r\n            // public methods\r\n        */\r\n        var AutoComplete = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var targetEle = settings.targetEle;\r\n            var url = settings.url;\r\n            var detailsUrl = settings.detailsUrl;\r\n            var placeHolderText = (targetEle.attr('disabled')) ? \"\" : localization.SearchPlaceholder;\r\n            var callback = settings.callback; // \r\n            // private params\r\n            var autoComplete;\r\n            var dataSource;\r\n            var focusedItemIndex = false\r\n            var searchBtn;\r\n            var detailsBtn;\r\n            var detailsPopupEle;\r\n            var detailsPopup;\r\n            var _textProp = \"DisplayName\";\r\n            var _idProp = \"Id\";\r\n            var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoAutoComplete();\r\n                createSearchButton();\r\n                createDetailsButton();\r\n                createDetailsPopup();\r\n                bindEvents();\r\n                self.setValue = setValue;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                autoComplete.bind(\"select\", function (e) {\r\n                    var obj = this.dataItem(e.item.index());\r\n                    callback(_model.getGenericFromObj(obj));\r\n                });\r\n                autoComplete.bind(\"change\", function (e) {\r\n                    validateAutoCompleteValue();\r\n                    callback(_model.getGenericFromObj(getDataSourceMatch(autoComplete.value())));\r\n                });\r\n                autoComplete.bind(\"dataBound\", function (e) {\r\n                    e.sender.ul.find(\"li\").first().addClass(\"k-state-hover\");\r\n                });\r\n                targetEle.on(\"keyup\", function (e) {\r\n                    if (e.which == 40 && !autoComplete.ul.is(\":visible\")) {\r\n                        autoComplete.search(autoComplete.value());\r\n                        validateAutoCompleteValue();\r\n                    }\r\n                    else if (e.which != 13) {\r\n                        focusedItemIndex = getFocusedIndex();\r\n                        validateAutoCompleteValue();\r\n                    }\r\n\r\n                });\r\n                targetEle.on(\"keydown\", function (e) {\r\n                    if (e.which == 13) {\r\n                        // enter click select first match in dropdown or focused\r\n                        var children = autoComplete.ul.children();\r\n                        if (children.length) {\r\n                            var index = (focusedItemIndex !== false) ? focusedItemIndex : 0;\r\n                            //console.log(\"in: \" + index);\r\n                            autoComplete.select(autoComplete.ul.children().eq(index));\r\n                            validateAutoCompleteValue();\r\n                        }\r\n                    }\r\n                });\r\n\r\n                //handle copy-paste event\r\n                targetEle.on(\"input propertychange\", function (e) {\r\n                    autoComplete.search(e.currentTarget.value);\r\n                    validateAutoCompleteValue();\r\n                });\r\n\r\n                detailsPopup.bind(\"close\", function () {\r\n                    detailsPopupEle.find(\".k-content\").html('');\r\n                });\r\n\r\n                if (boundObj.isDisabled) searchBtn.hide();\r\n\r\n                searchBtn.click(onSearchIconClick);\r\n                detailsBtn.click(onDetailsBtnClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onDetailsBtnClick = function () {\r\n                detailsPopup.refresh({\r\n                    url: detailsUrl,\r\n                    data: { id: _model.get.id() }\r\n                });\r\n                detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\r\n                detailsPopup.title(_model.get.name()).center().open();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var createSearchButton = function () {\r\n                searchBtn = $(\"<div>\", { \"class\": \"searchIcon\", \"data-control-action\": \"userPickerWindow\" });\r\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\r\n                var a = (app.isMobileDevice()) ? $(\"<i>\", { \"class\": \"fa fa-search cursor-pointer \" + iconColor }) : $(\"<div>\", { \"class\": \"search fa fa-search cursor-pointer \" + iconColor });\r\n                searchBtn.append(a);\r\n                searchBtn.insertAfter(targetEle);\r\n            }\r\n            var createDetailsButton = function () {\r\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\r\n                detailsBtn = (app.isMobileDevice()) ? $(\"<i>\", { \"class\": \"fa fa-info-circle cursor-pointer info-icon \" + iconColor }) : $(\"<div>\", { \"class\": \"open-modal fa fa-info-circle\" });\r\n                detailsBtn.insertBefore(targetEle);\r\n                detailsBtn.hide();\r\n            }\r\n            var createKendoDataSource = function () {\r\n                dataSource = new kendo.data.DataSource({\r\n                    transport: {\r\n                        read: {\r\n                            url: url,\r\n                            data: {\r\n                                searchFilter: function () {\r\n                                    return autoComplete.value();\r\n                                },\r\n                                classId: classId\r\n                            },\r\n                            type: \"GET\"\r\n                        }\r\n                    },\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\"\r\n                    },\r\n                    serverFiltering: true\r\n                });\r\n            }\r\n\r\n            var preventClosing = 'init';\r\n            var createKendoAutoComplete = function () {\r\n                autoComplete = targetEle.kendoAutoComplete({\r\n                    dataTextField: _textProp,\r\n                    suggest: false,\r\n                    placeholder: placeHolderText,\r\n                    valuePrimitive: false,\r\n                    dataSource: dataSource,\r\n                    close: function (e) {\r\n                        if ($(window).scrollTop() + $(window).height() == $(document).height() && preventClosing == 'open') {\r\n                            e.preventDefault();\r\n                            preventClosing = 'close';\r\n                        }\r\n                    },\r\n                    change: function (e) {\r\n                        preventClosing = 'change';\r\n                        e.sender.close();\r\n                        \r\n                    },\r\n                    open: function (e) {\r\n                        preventClosing = 'open';\r\n                    },\r\n                    enable: (targetEle.attr('disabled')) ? false : true,\r\n                    clearButton: false\r\n                }).data(\"kendoAutoComplete\");\r\n            }\r\n            var createDetailsPopup = function () {\r\n                detailsPopupEle = $(\"<div>\");\r\n                detailsPopupEle.appendTo(\"body\");\r\n                detailsPopup = detailsPopupEle.kendoCiresonWindow({\r\n                    title: \"\",\r\n                    width: 550,\r\n                    height: 400,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n            var validateAutoCompleteValue = function () {\r\n                var match = getDataSourceMatch(autoComplete.value());\r\n                if (!match) {\r\n                    detailsBtn.hide();\r\n                    if (targetEle.is(\":focus\")) {\r\n                        // invalid while typing\r\n                        targetEle.css({\r\n                            \"text-decoration\": \"none\",\r\n                            \"background-color\": \"#fff\"\r\n                        });\r\n                    } else {\r\n                        // invalid after blur\r\n                        targetEle.css({\r\n                            \"text-decoration\": \"none\",\r\n                            \"background-color\": \"#FBE3E4\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    // valid\r\n                    detailsBtn.show();\r\n                    targetEle.css({\r\n                        \"text-decoration\": \"underline\",\r\n                        \"background-color\": \"#fff\"\r\n                    });\r\n                }\r\n            }\r\n            var getDataSourceMatch = function (val) {\r\n                var ds = _.clone(dataSource);\r\n                var view = ds.view();\r\n\r\n                // matching needs to be case insensitive\r\n                var match = false;\r\n                $.each(view, function (i, item) {\r\n                    if (item.DisplayName.toLowerCase() == val.toLowerCase()) {\r\n                        match = item;\r\n                    }\r\n                });\r\n                return match;\r\n            }\r\n            var setValue = function (name, id) {\r\n                dataSource.add(_model.getObj(name, id));\r\n                autoComplete.value(name);\r\n                validateAutoCompleteValue();\r\n            }\r\n            var getFocusedIndex = function () {\r\n                var focused = autoComplete.ul.find(\".k-state-focused\");\r\n                return (focused.length) ? focused.index() : false;\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/button/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <input type=\"button\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"button btn btn-<%= ButtonType %> btn-<%= ButtonSize %>\"\\r\\n           value=\"<%= PropertyDisplayName %>\"\\r\\n           data-bind=\"click: <%= Action %>\"\\r\\n\\r\\n            <% if ( Disabled ){ %>\\r\\n            disabled\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\r\nBUTTON\r\n**/\r\n\r\ndefine('forms/fields/button/controller',['require','text!forms/fields/button/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/button/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                PropertyName: 'defaultButton',\r\n                ButtonType: (node.ButtonType) ? node.ButtonType : 'default',\r\n                ButtonSize: (node.ButtonSize) ? node.ButtonSize : 'sm',\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/editor/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <textarea class=\"form-editor\" data-control=\"editor\" style=\"height:<%= Height %>px\" name=\"<%= PropertyName %>\">\\r\\n        <%= Content %>\\r\\n    </textarea>\\r\\n</div>\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nEDITOR\r\n**/\r\ndefine('forms/fields/editor/controller',['require','text!forms/fields/editor/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/editor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            boundObj = node.vm;\r\n            //make sure we have all the vals set\r\n            //document.write(JSON.stringify(boundObj));\r\n            var properties = {\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                Content: (boundObj[node.PropertyName]) ? $('<div/>').text(boundObj[node.PropertyName]).html() : boundObj[node.PropertyName],\r\n                Height: node.Height == null ? 440 : node.Height\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var templateFrag = $(built(properties));\r\n\r\n            new Control(templateFrag.find(\"[data-control='editor']\"), boundObj, node);\r\n            // get settings from attrs\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n\r\n    var Control = function (targetEle, boundObj, node) {\r\n        if (node.Options == null) {\r\n            var defaultTools = [\r\n                    \"bold\", \"italic\", \"underline\", \"strikethrough\",\r\n                    \"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\",\r\n                    \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                    \"createLink\", \"unlink\", \"insertImage\",\r\n                    \"superscript\", \"subscript\",\r\n                    \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                    \"viewHtml\",\r\n                    \"formatting\", \"foreColor\", \"backColor\"\r\n            ];\r\n            var mobileTools = [\r\n                \"formatting\",\r\n                \"createLink\", \"unlink\", \"insertImage\",\"viewHtml\",\r\n                \"bold\", \"italic\", \"underline\",\r\n                \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\"\r\n            ];\r\n            node.Options = app.isMobileDevice() ? mobileTools : defaultTools;\r\n        }\r\n        var boundObj = boundObj;\r\n        //Need to review\r\n        setTimeout(function () {\r\n            targetEle.kendoEditor({\r\n                change: function (e) {\r\n                    boundObj.set(node.PropertyName, targetEle.val());\r\n                },\r\n                tools: node.Options,\r\n                encoded: false,\r\n                stylesheets: [\r\n                    \"/Content/Styles/cireson.main.min.css?v=\" + session.staticFileVersion\r\n                ]\r\n            });\r\n            var editor = targetEle.data(\"kendoEditor\");\r\n            boundObj.bind(\"change\", function (e) {\r\n                editor.value(boundObj[node.PropertyName]);\r\n            });\r\n            $(editor.body).addClass(\"k-editor-content-body\");\r\n        }, 100);\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/combo/view.html',[],function () { return '<div class=\"form-group\" data-bind=\"ciresonCombo: ControlObject\"\\r\\n\\r\\n<% if ( Required ){ %>\\r\\n    required\\r\\n<% } %>\\r\\n    >\\r\\n    <label data-template-part=\"labelPart\" class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n    </label>\\r\\n\\r\\n    <input class=\"form-control form-control-picker input-sm\" data-template-part=\"inputControlPart\" data-control-bind=\"<%= PropertyName %>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n         >\\r\\n    </input>\\r\\n</div>\\r\\n';});\n\n","/**\r\nCOMBO - combobox\r\n**/\r\ndefine('forms/fields/combo/controller',['require','text!forms/fields/combo/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/combo/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n            var viewModel = {\r\n                PropertyName: node.PropertyName,\r\n                PropertyDisplayName: node.PropertyDisplayName,\r\n                DataSource: {},\r\n                IsCascading: _.isUndefined(node.IsCascading) ? false : node.IsCascading,\r\n                Cascade: {},\r\n                Required: _.isUndefined(node.Required) ? false : node.Required,\r\n                Disabled: _.isUndefined(node.Disabled) ? false : node.Disabled,\r\n                ControlObject: null,\r\n                serverFiltering: _.isUndefined(node.serverFiltering) ? false : node.serverFiltering,\r\n                pageSize: _.isUndefined(node.pageSize) ? 1000 : node.pageSize,\r\n            };\r\n            $.extend(true, viewModel, node);\r\n\r\n            var view = new kendo.View(built(viewModel), { wrap: false, model: kendo.observable(viewModel) });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/dropDownList/view.html',[],function () { return '<div class=\"form-group\" data-bind=\"ciresonDropDownList: ControlObject\"\\r\\n\\r\\n<% if ( Required ){ %>\\r\\n    required\\r\\n<% } %>\\r\\n    >\\r\\n    <label data-template-part=\"labelPart\" class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n    </label>\\r\\n\\r\\n    <input class=\"form-control form-control-picker input-sm\" data-template-part=\"inputControlPart\" data-control-bind=\"<%= PropertyName %>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n         >\\r\\n    </input>\\r\\n</div>\\r\\n';});\n\n","/**\r\nCOMBO - combobox\r\n**/\r\ndefine('forms/fields/dropDownList/controller',['require','text!forms/fields/dropDownList/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/dropDownList/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n            var viewModel = {\r\n                PropertyName: node.PropertyName,\r\n                PropertyDisplayName: node.PropertyDisplayName,\r\n                DataSource: {},\r\n                Required: _.isUndefined(node.Required) ? false : node.Required,\r\n                Disabled: _.isUndefined(node.Disabled) ? false : node.Disabled,\r\n                ControlObject: null\r\n            };\r\n            $.extend(true, viewModel, node);\r\n\r\n            var view = new kendo.View(built(viewModel), { wrap: false, model: kendo.observable(viewModel) });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/bundle/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n    <button data-role=\"button\"\\r\\n            class=\"btn btn-primary\"\\r\\n            data-sprite-css-class=\"k-icon k-edit\"\\r\\n            data-bind=\"events: { click: view.onClick }\">\\r\\n        <%= localization.Bundle %>\\r\\n    </button>\\r\\n\\r\\n    <div id=\"Bundle\" class=\"cireson-window defined-form hide\">\\r\\n        <div class=\"cireson-window--wrapper\">\\r\\n            <div class=\"cireson-window--body\">\\r\\n\\r\\n\\r\\n                <div id=\"bundleGrid\">\\r\\n                    <div style=\"width: 800px; height: 200px\"\\r\\n                         data-role=\"grid\"\\r\\n                         data-bind=\"source: products,\\r\\n                                visible: isVisible,\\r\\n                                events: {\\r\\n                                  save: onSave\\r\\n                                }\"\\r\\n                         date-scrollable=\"true\"\\r\\n                         data-editable=\"{mode:\\'inline\\', confirmation:false}\"\\r\\n                         data-toolbar=\"[{name:\\'create\\', text:\\'<%= localization.Create %>\\'}]\"\\r\\n                         data-columns=\"[\\r\\n                            { \\'field\\': \\'SoftwarePatternName\\', title: \\'<%= localization.SoftwarePatternName %>\\', \\'width\\': 150 },\\r\\n                            { \\'field\\': \\'SoftwarePattern\\', title: \\'<%= localization.SoftwarePattern %>\\', \\'width\\': 150 },\\r\\n                            { \\'field\\': \\'VersionPattern\\', title: \\'<%= localization.VersionPattern %>\\', \\'width\\': 150 },\\r\\n                            { \\'field\\': \\'ExclusionPattern\\', title: \\'<%= localization.ExclusionPattern %>\\', \\'width\\': 150 },\\r\\n                            { command:[{name:\\'edit\\', text:\\'<%= localization.Edit %>\\'}, {name:\\'destroy\\', text:\\'<%= localization.Delete %>\\'}], title: \\' \\', width: \\'150\\'}\\r\\n                        ]\">\\r\\n                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"cireson-window--footer window-buttons\">\\r\\n                <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-primary\"\\r\\n                        data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                    <%= localization.OK %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancelClick }\">\\r\\n                    <%= localization.Cancel %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nfileAttachments\r\n**/\r\n\r\ndefine('forms/fields/bundle/controller',['require','text!forms/fields/bundle/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/bundle/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var template = $(built(properties));\r\n            \r\n            //k-grid-add\r\n            var bundleData = [];\r\n            var gridViewModel;\r\n            \r\n            var cont = template.find(\"#Bundle\").clone(); //we have the element in memory so no need use a selector\r\n            var win = cont.kendoCiresonWindow({\r\n                title: localization.createOrEditSoftwareBundle,\r\n                width: 850,\r\n                height: 375,\r\n                actions: [],\r\n                activate: function () {}\r\n            }).data(\"kendoWindow\");\r\n\r\n            var _vmWindow = new kendo.observable({\r\n                okClick: function () {\r\n                    var dataList = gridViewModel.products._data;\r\n                    var tempSoftwarePattern = \"\";\r\n                    var tempExclusionPattern = \"\";\r\n                    var tempVersionPattern = \"\";\r\n                    \r\n                    for (var i = 0; i < dataList.length; i++) {\r\n                        if (dataList[i].SoftwarePatternName == \"\") continue;\r\n                        if ((dataList.length - 1) == i) {\r\n                            tempSoftwarePattern = tempSoftwarePattern + dataList[i].SoftwarePatternName + \"__\" + dataList[i].SoftwarePattern;\r\n                            tempExclusionPattern = tempExclusionPattern + dataList[i].ExclusionPattern;\r\n                            tempVersionPattern = tempVersionPattern + dataList[i].VersionPattern;\r\n                        }\r\n                        else {\r\n                            tempSoftwarePattern = tempSoftwarePattern + dataList[i].SoftwarePatternName + \"__\" + dataList[i].SoftwarePattern + \"|\";\r\n                            tempExclusionPattern = tempExclusionPattern + dataList[i].ExclusionPattern + \"|\";\r\n                            tempVersionPattern = tempVersionPattern + dataList[i].VersionPattern + \"|\";\r\n                        }\r\n                    }\r\n                    vm.set(\"SoftwarePattern\", tempSoftwarePattern);\r\n                    vm.set(\"ExclusionPattern\", tempExclusionPattern);\r\n                    vm.set(\"VersionPattern\", tempVersionPattern);\r\n                    var SoftwarePatternTxt = $(\"input[name='SoftwarePattern']\");\r\n                    var ExclusionPatternTxt = $(\"input[name='ExclusionPattern']\");\r\n                    var VersionPatternTxt = $(\"input[name='VersionPattern']\");\r\n                    if (vm.SoftwarePattern!=\"\") {\r\n                        vm.set(\"IsBundle\", true);\r\n                        enableDisableTextbox(SoftwarePatternTxt,false);\r\n                        enableDisableTextbox(ExclusionPatternTxt, false);\r\n                        enableDisableTextbox(VersionPatternTxt, false);\r\n                    } else {\r\n                        vm.set(\"IsBundle\", false);\r\n                        enableDisableTextbox(SoftwarePatternTxt, true);\r\n                        enableDisableTextbox(ExclusionPatternTxt, true);\r\n                        enableDisableTextbox(VersionPatternTxt, true);\r\n                    }\r\n                    win.close();\r\n                },\r\n                cancelClick: function () {\r\n                    win.close();\r\n                },\r\n            });\r\n\r\n            kendo.bind(cont, _vmWindow);\r\n            var enableDisableTextbox = function (txt, isEnable) {\r\n                if (isEnable) {\r\n                    txt.prop(\"disabled\", false).removeClass(\"k-state-disabled\");\r\n                }\r\n                else\r\n                    txt.prop(\"disabled\", true).addClass(\"k-state-disabled\").closest(\".has-error\")\r\n                                        .removeClass(\"has-error\");\r\n            }\r\n\r\n            vm.view.onClick = function () {\r\n                bundleData = [];\r\n                var softwarePatternList = new Array();\r\n                var exclusionPatternList = new Array();\r\n                var versionPatternList = new Array();\r\n                if (!_.isNull(vm.SoftwarePattern) && vm.SoftwarePattern != \"\") {\r\n                    softwarePatternList = vm.SoftwarePattern == \"\" ? \"\" : vm.SoftwarePattern.split(\"|\");\r\n                }\r\n\r\n                if (!_.isNull(vm.ExclusionPattern) && vm.ExclusionPattern != \"\") {\r\n                    exclusionPatternList = vm.ExclusionPattern == \"\" ? \"\" : vm.ExclusionPattern.split(\"|\");\r\n                }\r\n\r\n                if (!_.isNull(vm.VersionPattern) && vm.VersionPattern != \"\") {\r\n                    versionPatternList = vm.VersionPattern == \"\" ? \"\" : vm.VersionPattern.split(\"|\");\r\n                }\r\n\r\n                    \r\n                if (vm.IsBundle) {\r\n                    for (var i in softwarePatternList) {\r\n                        var softwarePattern = softwarePatternList[i].split(\"__\");\r\n                        bundleData.push({ SoftwarePatternName: softwarePattern[0], SoftwarePattern: softwarePattern[1], VersionPattern: versionPatternList[i], ExclusionPattern: exclusionPatternList[i] });\r\n                    }\r\n                }\r\n                \r\n\r\n                gridViewModel = kendo.observable({\r\n                    isVisible: true,\r\n                    onSave: function (e) {\r\n                        \r\n                    },\r\n                    products: new kendo.data.DataSource({\r\n                        schema: {\r\n                            model: {\r\n                                id: \"SoftwarePatternName\",//an id is required to maintain edit/cancel state correctlf TFS3424\r\n                                fields: {\r\n                                    SoftwarePatternName: {\r\n                                        editable: true,\r\n                                        validation: {\r\n                                            SoftwarePatternNamevalidation: function (input) {\r\n                                                if (input.is(\"[name='SoftwarePatternName']\") && input.val() == \"\") {\r\n                                                    input.attr(\"data-SoftwarePatternNamevalidation-msg\", localization.EnterRequiredFields);\r\n                                                    return false;\r\n                                                }\r\n                                                return true;\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    SoftwarePattern: {\r\n                                        editable: true, type: \"string\",\r\n                                        validation: {\r\n                                            SoftwarePatternvalidation: function (input) {\r\n                                                if (input.is(\"[name='SoftwarePattern']\") && input.val() == \"\") {\r\n                                                    input.attr(\"data-SoftwarePatternvalidation-msg\", localization.EnterRequiredFields);\r\n                                                    return false;\r\n                                                }\r\n                                                return true;\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    VersionPattern: { editable: true, type: \"string\", validation: { required: false } },\r\n                                    ExclusionPattern: { editable: true, type: \"string\", validation: { required: false } }\r\n                                }\r\n                            }\r\n                        },\r\n                        batch: false,\r\n                        data: bundleData,\r\n                    })\r\n                });\r\n\r\n                kendo.bind(cont.find(\"#bundleGrid\"), gridViewModel);\r\n\r\n                cont.removeClass('hide');\r\n                cont.show();\r\n\r\n                win.open();\r\n            }\r\n\r\n            callback(template);\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/fields/fileUpload/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <input id=\"<%= PropertyName %>\" type=\"file\"\\r\\n           accept=\"<%= AcceptExtension %>\"\\r\\n           data-role=\"upload\"\\r\\n           name=\"files\"\\r\\n           data-async=\"{ saveUrl: \\'/FileAttachment/FileUpload/?BaseId=<%= BaseId %>&fieldName=<%= PropertyName %>\\', autoUpload: true }\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"events: { select: onSelect, complete:complete, success:success }\" />\\r\\n    <br />\\r\\n    <div id=\"div<%= PropertyName %>\">\\r\\n        <div data-role=\"button\"\\r\\n                data-sprite-css-class=\"k-icon k-edit\"\\r\\n                data-bind=\"events: { click: onRemove }\">\\r\\n            <i class=\"fa fa-close\"></i>\\r\\n        </div>\\r\\n        <div>\\r\\n        <img />\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/fileUpload/controller',['require','text!forms/fields/fileUpload/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/fileUpload/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n\r\n            \r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n            var properties = {\r\n                Required: node.Required,\r\n                BaseId: vm.BaseId,\r\n                AcceptExtension: _.isUndefined(node.AcceptExtension) ? \"\" : vm.AcceptExtension\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            var template = $(built(properties));\r\n\r\n            var viewModel = new kendo.observable({\r\n                isEnabled: true,\r\n                isVisible: true,\r\n                onSelect: function (e) {\r\n                    template.find(\".k-file-error\").remove();\r\n                    $.each(e.files, function (index, value) {\r\n                        if (!_.isUndefined(node.AcceptExtension)\r\n                            && node.AcceptExtension!=\"\"\r\n                            && !(node.AcceptExtension.toLowerCase().indexOf(value.extension.toLowerCase()) > -1)) {\r\n                            kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.ErrorDescription,\r\n                                message: localization.FileExtensionInvalid + node.AcceptExtension,\r\n                                icon: \"fa fa-exclamation\"\r\n                            });\r\n                            e.preventDefault();\r\n                        }\r\n                    });\r\n                },\r\n                complete: function (e) {\r\n                    if (template.find(\".k-file\").length > 1) {\r\n                        template.find(\".k-file:first\").remove();\r\n                        \r\n                    }\r\n                },\r\n                success: function (e) {\r\n                    var img = template.find(\"img\");\r\n                    img.attr(\"src\", \"data:image/png;base64,\" + e.response);\r\n                    vm[node.PropertyName] = {\r\n                        \"streamId\": null,\r\n                        \"data\": \"stream\",\r\n                        \"bufferedMode\": true,\r\n                        \"streamLength\": 0\r\n                    };\r\n\r\n                    template.find(\"#div\" + node.PropertyName).show();\r\n                },\r\n                onRemove: function (e) {\r\n                    $.get(\"/FileAttachment/RemoveFileUpload/\", { BaseId: vm.BaseId, fieldName: node.PropertyName }, function (data) {\r\n                        template.find(\".k-file\").parent().remove();\r\n                        //template.find(\"img\").hide();\r\n                        template.find(\"#div\" + node.PropertyName).hide();\r\n                        vm[node.PropertyName] = null;\r\n                    });\r\n                }\r\n            });\r\n\r\n            $.get(\"/api/V3/Projection/GetBase64String\", { BaseId: vm.BaseId, PropertyName: node.PropertyName }, function (data) {\r\n                var img = template.find(\"#div\" + node.PropertyName);\r\n                if (data != \"\") {\r\n                    template.find(\"img\").attr(\"src\", \"data:image/png;base64,\" + data);\r\n                    img.show();\r\n                } else {\r\n                    img.hide();\r\n                }\r\n            });\r\n            \r\n\r\n            _.defer(function () { kendo.bind(template, viewModel); });\r\n            callback(template);\r\n\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/fields/urlTextbox/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"value: <%= PropertyName %>, events:{change:textChange}\" <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n\\r\\n        />\\r\\n    <div data-role=\"button\"\\r\\n         data-sprite-css-class=\"k-icon k-edit\"\\r\\n         class=\"urlTextboxIcon\"\\r\\n         data-bind=\"events: { click: openURL }\">\\r\\n        <i class=\"fa fa-external-link nav-icon-color\"></i>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/urlTextbox/controller',['require','text!forms/fields/urlTextbox/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/urlTextbox/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            \r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            \r\n            vm.view.buildURLTextbox = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var regexp = new RegExp(/^((ftp|http|https?):\\/\\/)?([w|W]{3}\\.)*?[a-zA-Z0-9\\-\\.]{3,}\\.[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})?$/);\r\n                var disabled = \"urlTextboxButtonDisabled\";\r\n                var error = \"input-error\";\r\n                var url = vm.get(node.PropertyName);\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled\r\n                };\r\n                \r\n                $.extend(true, properties, node);\r\n                var template = $(built(properties));\r\n                var txtBox = template.find(\"input\");\r\n                var link = template.find(\".urlTextboxIcon\");\r\n\r\n                var validateUrl = function () {\r\n                    var isOk = true;\r\n                    url = vm.get(node.PropertyName);\r\n                    link.removeClass(disabled);\r\n                    txtBox.removeClass(error);\r\n                    if (url == \"\" || _.isNull(url)) {\r\n                        isOk = false;\r\n                        link.addClass(disabled);\r\n                    } else if (!regexp.test(url)) {\r\n                        link.addClass(disabled);\r\n                        txtBox.addClass(error);\r\n                        isOk = false;\r\n                    }\r\n                    return isOk;\r\n                }\r\n                validateUrl();\r\n                vm.textChange = function (e) {\r\n                    validateUrl();\r\n                }\r\n\r\n                vm.openURL = function (e) {\r\n                    if (validateUrl()) {\r\n                        //append protocol if does not have one\r\n                        if (!url.match(/^ftp|http([s]?):\\/\\/.*/)) {\r\n                            url = 'http://' + url;\r\n                        }\r\n                        var win = window.open(url, '_blank');\r\n                        win.focus();\r\n                    }\r\n                };\r\n\r\n\r\n                view = new kendo.View(template, { wrap: false, model: vm });\r\n               \r\n               callback(view.render());\r\n            };\r\n            vm.view.buildURLTextbox();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nDECIMAL\r\n**/\r\n\r\ndefine('forms/fields/percentage/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                //Required: false,\r\n                DecimalPlaces: 2,\r\n                MinValue: '',\r\n                MaxValue: '',\r\n                StepIncrement: 0.01,\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Format: \"P0\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\r\n\r\n\r\ndefine('forms/formBuilder',[\r\n    \"forms/structure/formPanel/controller\",\r\n    \"forms/structure/formPanelFull/controller\",\r\n    \"forms/structure/customFieldGroup/controller\",\r\n    \"forms/structure/customFieldGroupRow/controller\",\r\n    \"forms/structure/columnField/controller\",\r\n    \"forms/structure/tab/controller\",\r\n    \"forms/structure/tabPane/controller\",\r\n    \"forms/structure/tabNavigation/controller\",\r\n    \"forms/structure/tabData/controller\",\r\n\r\n    \"forms/predefined/actionLog/controller\",\r\n    \"forms/predefined/fileAttachments/controller\",\r\n    \"forms/predefined/affectedItems/controller\",\r\n    \"forms/predefined/relatedItems/controller\",\r\n    \"forms/predefined/childWorkItems/controller\",\r\n    \"forms/predefined/userInput/controller\",\r\n    \"forms/predefined/activities/controller\",\r\n    \"forms/predefined/multipleObjectPicker/controller\",\r\n    \"CustomSpace/Scripts/forms/predefined/history/controller\", // \"forms/predefined/history/controller\",\r\n    \"forms/predefined/billableTime/controller\",\r\n    \"forms/predefined/knowledgeArticle/controller\",\r\n    \"forms/predefined/fileAttachmentsDragDrop/controller\",\r\n    \"forms/predefined/serviceComponents/controller\",\r\n    \"forms/predefined/dependentComponents/controller\",\r\n\r\n\r\n    \"forms/fields/string/controller\",\r\n    \"forms/fields/longstring/controller\",\r\n    \"forms/fields/boolean/controller\",\r\n    \"forms/fields/display/controller\",\r\n    \"forms/fields/spacer/controller\",\r\n    \"forms/fields/numeric/controller\",\r\n    \"forms/fields/int/controller\",\r\n    \"forms/fields/decimal/controller\",\r\n    \"forms/fields/double/controller\",\r\n    \"forms/fields/date/controller\",\r\n    \"forms/fields/datetime/controller\",\r\n    \"forms/fields/enum/controller\",\r\n    \"forms/fields/userPicker/controller\",\r\n    \"forms/fields/objectPicker/controller\",\r\n    \"forms/fields/button/controller\",\r\n    \"forms/fields/editor/controller\",\r\n    \"forms/fields/combo/controller\",\r\n    \"forms/fields/dropDownList/controller\",\r\n    \"forms/fields/bundle/controller\",\r\n    \"forms/fields/fileUpload/controller\",\r\n    \"forms/fields/urlTextbox/controller\",\r\n    \"forms/fields/percentage/controller\"\r\n\r\n\r\n\r\n], function (formPanel,\r\n    formPanelFull,\r\n    customFieldGroup,\r\n    customFieldGroupRow,\r\n    columnField,\r\n    tab, //.tab-content\r\n    tabPane, //.tab-pane\r\n    tabNavigation, //ul\r\n    tabData,//li\r\n\r\n    actionLog,\r\n    fileAttachments,\r\n    affectedItems,\r\n    relatedItems,\r\n    childWorkItems,\r\n    userInput,\r\n    activities,\r\n    multipleObjectPicker,\r\n    history,\r\n    billableTime,\r\n    knowledgeArticle,\r\n    fileAttachmentsDragDrop,\r\n    serviceComponents,\r\n    dependentComponents,\r\n\r\n\r\n    String,\r\n    LongString,\r\n    Boolean,\r\n    Display,\r\n    Spacer,\r\n    Numeric,\r\n    Int32,\r\n    Decimal,\r\n    Double,\r\n    Date,\r\n    DateTime,\r\n    Enum,\r\n    UserPicker,\r\n    ObjectPicker,\r\n    Button,\r\n    Editor,\r\n    Combo,\r\n    DropDownList,\r\n    Bundle,\r\n    FileUpload,\r\n    UrlTextbox,\r\n    Percentage) {\r\n\r\n    var mainContainer;\r\n    var jsonTemplate;\r\n    var viewModel;\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n\r\n            viewModel = vm.viewModel;\r\n            jsonTemplate = vm.formTemplate;\r\n            if (_.isUndefined(jsonTemplate)) {\r\n                console.log(\"Form ID not found.\", \"You must add a template with the key of 'Default'. This is used for fallback if a specific template is not found.\");\r\n                return;\r\n            }\r\n            // Decide on layout template\r\n            eval(\"var _obj = \" + jsonTemplate.layoutType + \";\");\r\n            // if no template was found, use default ('form')\r\n            if (!_obj) {\r\n                _obj = formPanel;\r\n            }\r\n\r\n            _obj.build(function (tplString) {\r\n                mainContainer = $(tplString);\r\n            });\r\n\r\n            readTemplate(mainContainer, jsonTemplate);\r\n            callback(mainContainer);\r\n            //see if we have a non-default tab selection\r\n            $(\"a[selected='selected']\").tab('show'); //selected tab for loading ex: http://localhost:13463/Incident/Edit/IR430/?tab=activity&activityId=MA798\r\n\r\n        }\r\n    }\r\n\r\n    var readTemplate = function (container, json, columns) {\r\n        var columns = (columns != undefined && columns !== false) ? columns : false;\r\n\r\n        $.each(json, function (key, item) {\r\n            if (key != \"layoutType\") {\r\n                jsonDecision(container, key, item, columns);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Mutate any jsonFormTemplate items by name:value\r\n    var mutationLogic = {\r\n        // Run on all properties\r\n        all: function (propValue) {\r\n            propValue.vm = viewModel; // pass in viewModel\r\n        },\r\n        tabList: function (tabList) {\r\n            jsonTemplate.tabNavigation = {\r\n                nodeCount: tabList.length,\r\n                tabData: []\r\n            }\r\n            tabNavigation.build(viewModel, jsonTemplate, function (tabtplString) {\r\n                var tabnavCont = $(tabtplString);\r\n\r\n                //prevent multiple tabs being set to focus.\r\n                var focusSet = false;\r\n                $.each(tabList, function (i, tabNode) {\r\n                    //this gets ?tab= data from uri if present\r\n                    var focusedTab = app.getParameterByName(\"tab\").toLowerCase();\r\n                    var tabNodeNameKey = tabNode.name;\r\n                    //set vals\r\n                    tabNode.tabId = app.lib.newGUID();\r\n                    tabNode.active = (i == 0) ? \"active\" : \"\";\r\n                    tabNode.content.tabId = tabNode.tabId;\r\n                    tabNode.content.active = tabNode.active;\r\n\r\n                    //call build on each nav node\r\n                    tabData.build(viewModel, tabNode, function (tplString) {\r\n                        //append to tabnavcont\r\n                        var element = $(tplString);\r\n\r\n                        if (app.isMobile()) {\r\n                            tabnavCont.children('.nav-dropdown-content').find('ul').append(element);\r\n                        } else {\r\n                            tabnavCont.append(element);\r\n                        }\r\n\r\n                        if (!app.isMobile()) {\r\n                            //--Start focus tab logic\r\n                            //check if there we found and focused tab param in the uri\r\n                            if (!focusSet && focusedTab.length > 0) {\r\n                                //this statement will set focus if they have a tab name in the uri that matches a tab name on the page\r\n                                if (tabNodeNameKey.toLowerCase() === focusedTab) {\r\n                                    element.find(\"a\").attr(\"selected\", \"true\");\r\n                                    focusSet = true;\r\n                                }\r\n\r\n                                //if focus is on activity tab (i.e. click an activity from the grid) set focus on tab and open activity\r\n                                switch (focusedTab) {\r\n                                    case \"activity\":\r\n                                        //find the activity tab based on control type\r\n                                        $.each(tabNode.content, function (i, content) {\r\n                                            $.each(content.customFieldGroupList, function (i, group) {\r\n                                                if (group.type === \"activities\") {\r\n                                                    element.find(\"a\").attr(\"selected\", \"true\");\r\n                                                    focusSet = true;\r\n                                                };\r\n                                            });\r\n                                        });\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                };\r\n                            };\r\n                            //--End focused tab logic\r\n                        }\r\n                    });\r\n                });\r\n                //append tabnavcont to main form panel\r\n                mainContainer.append(tabnavCont);\r\n            });\r\n\r\n            // ------------ tab dropdown\r\n\r\n        },\r\n        // Run to determine colspan\r\n        columnFieldList: function (columnFieldList) {\r\n            app.lib.setColumnSizes(columnFieldList);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    var getContainer = function (tplReturn) {\r\n        return (typeof (tplReturn) === \"string\") ? $(tplReturn) : tplReturn;\r\n    }\r\n\r\n    var chooseNextAction = function (container, item, objectName, columnCount) {\r\n        if (item.content) { //this denotes a tabPane\r\n            jsonDecision(container, objectName + \"Pane\", item.content);\r\n        } else if (item.type) { //this denotes a FieldGroupList\r\n            jsonDecision(container, item.type, item);\r\n        } else if (item.DataType) { //denotes a standard field, like string or numeric\r\n            jsonDecision(container, item.DataType, item);\r\n        } else if (item.rows) { // predefined\r\n            jsonDecision(container, objectName + \"Row\", item.rows);\r\n        } else { //an array of items, re-loop to comb through the child properties\r\n            readTemplate(container, item, columnCount);\r\n        }\r\n    };\r\n\r\n    //\r\n    var jsonDecision = function (propContainer, propName, propValue, columns) {\r\n        //propName is the name of the obj we will call .build on\r\n        //propValue is the object itself, like { DataType: \"UserPicker\", PropertyDisplayName: \"PrimaryOwner\", PropertyName: \"RelatesToIncident\", FilterByAnalyst: true},\r\n        var objectName = propName;\r\n\r\n        var list = false;\r\n        var row = false;\r\n        var pane = false;\r\n        var columnCount = (columns == undefined) ? false : columns; //TODO: ELI do we need this now, with the mutate function\r\n\r\n        // mutation logic\r\n        if (mutationLogic[propName]) {\r\n            mutationLogic[propName](propValue);\r\n        }\r\n        mutationLogic[\"all\"](propValue);\r\n\r\n        // Check if it is a List\r\n        if (propValue.push) {\r\n            if (propName.indexOf(\"List\") > -1) {\r\n                list = true;\r\n                objectName = propName.split(\"List\")[0];\r\n            }\r\n            else if (propName.indexOf(\"Row\") > -1) {\r\n                row = true;\r\n                columnCount = propValue.length;\r\n            }\r\n            else if (propName.indexOf(\"Pane\") > -1) {\r\n                pane = true;\r\n            }\r\n        }\r\n\r\n        // Decide on Template\r\n        eval(\"var _obj = \" + objectName + \";\");\r\n        // Check if Template Exists\r\n        if (!_obj) {\r\n            throw Exception(objectName + \" is not part of the templating system\");\r\n            return false;\r\n        }\r\n\r\n        // xxxList\r\n        if (list || row || pane) {\r\n            if (_obj == tab) {\r\n                //if it is a tab object, need to call build first, then loop through children\r\n                _obj.build(viewModel, propValue, function (tplReturn) {\r\n                    var _container = getContainer(tplReturn);\r\n                    propContainer.append(_container);\r\n                    $.each(propValue, function (i, item) {\r\n                        chooseNextAction(_container, item, objectName);\r\n                    });\r\n                });\r\n\r\n            } else {\r\n                $.each(propValue, function (i, item) {\r\n                    if (objectName == \"columnField\") {\r\n                        item.columnCount = columnCount;\r\n                    }\r\n\r\n                    if (_obj == tabPane) { //this one passes in propValue, the else statement passes in item\r\n                        _obj.build(viewModel, propValue, function (tplReturn) {\r\n                            var _container = getContainer(tplReturn);\r\n                            propContainer.append(_container);\r\n                            readTemplate(_container, item, columnCount);\r\n                        });\r\n                    }\r\n                        //todo: note, possibly do manipulation here on customFieldGroupList/Row. do account for the bs-panels being wonky.\r\n\r\n                    else {\r\n\r\n                        _obj.build(viewModel, item, function (tplReturn) {\r\n                            var _container = getContainer(tplReturn);\r\n                            propContainer.append(_container);\r\n                            //allow view to define where children should be added\r\n                            if (_container.find(\".append-here\").length != 0) {\r\n                                chooseNextAction(_container.find(\".append-here\"), item, objectName, columnCount);\r\n                            } else {\r\n                                chooseNextAction(_container, item, objectName, columnCount);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            //we should only force a disable state if isDisabled is true\r\n            //otherwise keep default and defined disable value\r\n            if (!_.isUndefined(viewModel) && viewModel.isDisabled) {\r\n                propValue.disabled = true;\r\n            }\r\n\r\n            _obj.build(viewModel, propValue, function (tplReturn) {\r\n                var _container = getContainer(tplReturn);\r\n                propContainer.append(_container);\r\n            });\r\n        }\r\n\r\n    }\r\n    return definition;\r\n});\r\n\n","define('forms/formHelper',[\r\n\r\n], function (\r\n\r\n        ) {\r\n\r\n\r\n    var definition = {\r\n        \r\n        manageDirty: function (vm) {\r\n            //setup is dirty flag\r\n            vm.set('isDirty', false);\r\n            //bind to view model changes to set dirty flag\r\n            vm.bind(\"change\", function (e) {\r\n                //don't trigger isDirty changes on items listed on the excludedProperties list:\r\n                var excludedProperties = [\"isDirty\", \"HistoryButton\", \"ConfigItemRelatedWI\", \"ConfigItem\",\"Activity\"];\r\n                if (!_.contains(excludedProperties, e.field)) {\r\n                    vm.set(\"isDirty\", true);\r\n                }\r\n            });\r\n            //don't let the user leave the page if form is dirty\r\n            window.onbeforeunload = function () {\r\n                //TODO find a way to over write default browser alert\r\n                if (vm.get(\"isDirty\")) {\r\n                    return localization.UnsavedDataMessage;\r\n                }\r\n            }\r\n        },\r\n        mobileDrawerTaskButton: function (taskContainer) { //This will going to create task button to the drawer for mobile task\r\n            //if (app.isMobileDevice()) \r\n            var task = drawermenu.addButton(localization.Tasks, \"fa fa-tasks\", function () { });\r\n            app.lib.makeDrawer(\"bottom\", taskContainer, task, true);\r\n\r\n            function mobileTaskShow() {\r\n                if (app.isMobile()) {\r\n                    task.show();\r\n                } else {\r\n                    task.hide();\r\n                }\r\n            }\r\n\r\n            $(window).resize(function () {\r\n                mobileTaskShow();\r\n            });\r\n\r\n            mobileTaskShow();\r\n        },\r\n        makeFormPristine: function (viewModel) {\r\n            var setFormNotDirty = function (_currentVM) {\r\n                for (var i in _currentVM) {\r\n                    if (i == \"view\" || i == \"_events\" || i == \"_handlers\" || Object.prototype.toString.call(_currentVM[i]) === '[object Function]') continue;\r\n\r\n                    if (_currentVM.isDirty) {\r\n                        _currentVM.isDirty = false;\r\n                    }\r\n\r\n                    if (i == \"Activity\") {\r\n                        for (var activityIndex in _currentVM[i]) {\r\n                            setFormNotDirty(_currentVM[i][activityIndex]);\r\n                            _currentVM[i][activityIndex].isDirty = false;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            setFormNotDirty(viewModel);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return definition;\r\n});\r\n\r\n\n","require.config({\n    waitSeconds: 0,\n    urlArgs: \"v=\" + session.staticFileVersion,\n    baseUrl: \"/Scripts/\",\n    paths: {\n        //kendo: \"kendo/js/kendo.mobile.min\",\n        //jquery: \"jquery/jquery.min\",\n        text: \"require/text\"\n    },\n\n    shim: {\n        //kendo: {\n        //    deps: ['jquery'],\n        //    exports: 'kendo'\n        //}\n    }\n});\n\n//let's let the user know that things are happening\napp.lib.mask.apply();\n$(\"body\").css(\"cursor\", \"wait\");\n$(document).ajaxStop(function () {\n    $(\"body\").css(\"cursor\", \"auto\");\n});\n\nrequire([\"forms/taskBuilder\", \"forms/headerBuilder\", \"forms/formBuilder\", \"forms/formHelper\"], function (taskBuilder, headerBuilder, formBuilder, formHelper, messagesStructure) {\n\n    var saveUrl = pageForm.saveUrl;\n    var mainContainer = $(pageForm.container);\n    var taskContainer = $('<div class=\"task-panel task-panel-narrow\"></div>');\n    var headerContainer = $('.page_bar').empty(); //use new page header div, just clear it out before adding things\n    var formContainer = $('<div/>').addClass(\"page-form\");\n    var formType = pageForm.type;\n    var dataVM = pageForm.viewModel;\n    var dataVMUnchanged = pageForm.jsonRaw;\n    \n    //check for errors\n    if (!_.isUndefined(pageForm.viewModel.WorkItemErrorMessage)) {\n        var jumbotron = $('<div/>').addClass('jumbotron');\n        jumbotron.append($('<h1 />').addClass(\"error uppercase\").html(\"<i class='fa fa-frown-o'></i> \" + localization.Failed));\n        jumbotron.append($('<p />').addClass(\"error\").html(pageForm.viewModel.WorkItemErrorMessage));\n\n        mainContainer.append(jumbotron);\n\n        app.lib.mask.remove();\n        $(\"body\").css(\"cursor\", \"auto\");\n        return;\n    }\n\n    //add the ability to bind to form load\n    var readyArray = [];\n    pageForm.boundReady = function (func) {\n        readyArray.push(func);\n    }\n\n    //add the ability to bind change to viewModel by index, with support for null index\n    var changesArray = [];\n    pageForm.boundChange = function (index, func) {\n        changesArray[index] = func;\n    }\n\n    //add custom viewModel function in the custom space\n    var methods = app.custom.actionMethod.get(formType);\n    if (_.isArray(methods)) {\n        dataVM.custom = {};\n        $.each(methods, function (i, method) {\n            if (_.isFunction(method.func)) {\n                dataVM.custom[method.index] = method.func;\n            }\n        });\n    }\n\n    //add header json definition\n    //since all WI have same header structure we put it in this file\n    //if this changes we need to move this to all the cshtml New/Edit files\n    pageForm.headerTemplate = {\n        rows: [\n                {\n                    columns: [\n                    { View: \"stickyCI\", Class: \"\" }\n                        //{ View: \"status\", Class: \"col-md-5 col-xs-12\" }\n                    ]\n                }\n        ]\n    };\n\n\n    //going to define tasks based on pageForm.type & pageForm.newWI to reduce repetative code\n    pageForm.taskTemplate = {};\n    pageForm.taskTemplate.tasks = [];\n\n    //add custom tasks\n    var tasks = app.custom.formTasks.get(pageForm.type);\n    if (_.isArray(tasks)) {\n        $.each(tasks, function (i, task) {\n            pageForm.taskTemplate.tasks.push({ Task: \"custom\", Type: pageForm.type, Label: task.label, Access: true, Configs: { func: task.func } })\n        });\n    }\n\n    var commonTasks = app.custom.formTasks.get(\"ConfigItem\");\n    if (_.isArray(commonTasks)) {\r\n        $.each(commonTasks, function (i, task) {\r\n            pageForm.taskTemplate.tasks.push({ Task: \"custom\", Type: pageForm.type, Label: task.label, Access: true, Configs: { func: task.func } })\r\n        });\r\n    }\n\n    var init = function () {\n        //strip rtf on Notes\n        for (var i in dataVM) {\r\n            if (i.indexOf(\"Notes\") > -1) {\r\n                if (!_.isUndefined(dataVM[i])) {\r\n                    dataVM[i] = stripRTF(dataVM[i]);\r\n                }\r\n            }\r\n        }\n\n        // select template\n        setTemplateJSONFromSessionAdJSON();\n\n        var alertContainer = $('#alertMessagesContainer');\n        alertContainer.addClass(\"sticky-header\");\n        formContainer.addClass(\"sticky-header\");\n        taskContainer.addClass(\"sticky-header\");\n        headerContainer.addClass(\"sticky-header\");\n\n        if (!app.isMobile()) {\n            //add dynamic containers to main container\n            mainContainer.append(formContainer);\n\n            mainContainer.before(taskContainer);\n        } else {\n            mainContainer.append(formContainer);\n            mainContainer.after(taskContainer);\n        }\n\n        //build out tasks\n        taskContainer.append(\"<h2>\" + localization.Tasks + \"</h2>\");\n        taskBuilder.build(pageForm, function (view) {\n            taskContainer.append(view);\n        });\n        \n        //build and add header container\n        headerBuilder.build(pageForm, function (view) {\n            headerContainer.append(view);\n        });\n\n        //build and add form from json definition\n        formBuilder.build(pageForm, function (html) {\n            formContainer.append(html);\n            app.controls.apply(formContainer, { localize: true, vm: dataVM, bind: true });\n            formContainer.show();\n\n            // make sure we have the drawer before we try to add buttons buttons\n            if (typeof (drawermenu) != 'undefined') {\n                createButtons();\n            } else {\n                app.events.subscribe(\"drawerCreated\", function () {\n                    createButtons();\n                });\n            }\n\n            app.lib.handleMessages();\n\n            //bind change event no that form is built\n            dataVM.bind(\"change\", function (e) {\n                onVmChange(e);\n            });\n\n            // call bound on ready functions\n            _.each(readyArray, function (func, index) {\n                if (_.isFunction(func)) {\n                    func();\n                }\n            });\n\n            // prevent 'enter' key from submitting form on older browsers.\n            formContainer.on('keypress', function (e) {\n                app.lib.stopEnterKeySubmitting(e);\n            });\n\n            if (!app.isMobileDevice()) {\n                var $taskPanel = $('.task-panel').first();\n                $taskPanel.affix({ offset: { top: $taskPanel[0].getBoundingClientRect().top - 84 } });\n                kendo.data.binders.yScrollOnResize($taskPanel[0], { yScrollOnResize: { path: { top: 'auto', bottom: 50 } } }, {});\n            }\n\n            //manage dirty\n            formHelper.manageDirty(dataVM);\n        });\n\n        //remove the mask\n        app.lib.mask.remove();\n    }\n\n    // Template Decider\n    // Chooses template from JSON by session and work item type\n    var setTemplateJSONFromSessionAdJSON = function () {\n        var type = formType;\n        var defaultName = \"Default\";\n        var json = pageForm.formTemplate;\n        var msg = \"A '\" + defaultName + \"' template is required.\";\n        var customMsg = \" \\r\\r When creating a JSON template for '\" + type + \"' you must add a template with the key of '\" + defaultName + \"'. This is used for fallback if a specific template is not found. No Default key is found on the custom template, default template will be used.\";\n        var defaultMsg = \" \\r\\r When creating a JSON template for '\" + type + \"' you must add a template with the key of '\" + defaultName + \"'. This is used for fallback if a specific template is not found.\";\n        if (json.customTemplate != null && json.customTemplate != '') {\r\n            //This will check if the custom form have the Default key.\r\n            json = pageForm.formTemplate.customTemplate;\r\n            if (!json.Default) { //If Default is not found, it will going to alert for a message stating it will use the Default form/Template.\n                if (type) {\r\n                    msg += customMsg;\r\n                }\n                //From here, it will going to get the Default template/Form.\n                json = pageForm.formTemplate.defaultTemplate;\n                if (!json.Default) {\r\n                    if (type) {\r\n                        msg += defaultMsg;\r\n                    }\r\n                }\r\n                \r\n                if (session.user.IsAdmin) {\r\n                    alert(msg);\r\n                }\n                else {\r\n                    console.log(msg);\r\n                }\r\n            }\r\n        }\n        else {\r\n            //If the custom template/form is not found, it will used the default form/template.\n            json = pageForm.formTemplate;\n            if (!json.Default) {\r\n                if (type) {\r\n                    msg += defaultMsg;\r\n                }\n                \r\n                if (session.user.IsAdmin) {\r\n                    alert(msg);\r\n                }\n                else {\r\n                    console.log(msg);\r\n                }\r\n            }\r\n        }\n        // using a matcher in case something changes on either side\n        // this will be easier and faster fix\n        // { \"formType from work item cshtml\": \"prop name from session.user that holds template\" }\n        //var typeToSession = {\n        //    \"ConfigItem\": \"IncidentForm\"\n        //}\n        //var getTemplateNameFromSession = function () {\n        //    if (type && typeToSession[type] && session && session.user &&\n        //        session.user[typeToSession[type]] && json[session.user[typeToSession[type]]]) {\n        //        return session.user[typeToSession[type]];\n        //    }\n        //    return defaultName;\n        //}\n\n\n        //var templateName = getTemplateNameFromSession();\n        //pageForm.formTemplate = json[templateName];\n        pageForm.formTemplate = json[pageForm.CustomFormName];\n\n\n    }\n\n    // Form Buttons\n    var createButtons = function () {\n        // Save Failure\n        //TODO: this could possibly end up being a switch statement to check what the error source is\n        var saveFailure = function (exceptionMessage) {\n            //console.log('save failure');\n            if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\n                app.lib.message.add(exceptionMessage, \"danger\");\n            } else {\n                //fallback to generic message\n                app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\n            }\n            app.lib.message.show();\n            //take use to the error message\n            window.scrollTo(0, 0);\n        }\n\n        // Save Button\n        drawermenu.addButton(localization.Save, \"fa fa-check\", function () {\n\n            save(function (data) {\n                message = localization.ChangeRequestSavedMessage;\n                link = \"/DynamicData/Edit/\" + dataVM.BaseId + \"/\";\n\n                app.lib.message.add(message + \"&nbsp;&nbsp;<a href='\" + link + \"'><strong> CI - \" + dataVM.DisplayName + \"</strong></a> \", \"success\");\n                app.lib.gotoFormReturnUrl();\n\n                return;\n            }, saveFailure);\n        });\n\n        // Apply Button\n        drawermenu.addButton(localization.Apply, \"fa fa-pencil\", function () {\n            save(function (data) {\n                app.lib.message.add(localization.ChangesApplied, \"success\");\n                location.reload();\n            }, saveFailure);\n        });\n\n        // Cancel Button\n        drawermenu.addButton(localization.Cancel, \"fa fa-times\", function () {\n            if (dataVM.get(\"isDirty\")) {\n                $.when(kendo.ui.ExtOkCancelDialog.show({\n                    title: localization.Warning,\n                    message: localization.UnsavedDataMessage,\n                    icon: \"fa fa-exclamation\"\n                })\n                ).done(function (response) {\n                    if (response.button === \"ok\") {\n                        //make the form clean so we don't trigger onbeforeunload\n                        dataVM.set(\"isDirty\", false);\n\n                        app.lib.gotoFormReturnUrl();\n                        return;\n                    }\n                });\n            } else {\n                app.lib.gotoFormReturnUrl();\n                return;\n            }\n        });\n\n        // mobile task Button\n        formHelper.mobileDrawerTaskButton(taskContainer);\n    }\n\n\n    // Ajax Save Method (to be moved)\n    var save = function (success, failure) {\n        //ensure all values inputted have been bound to VM\n        //not sure this is even needed and it causes many problems\n        //need to delete after regression -JK\n        //$(\".page_content *\").blur();\n\n\n        app.lib.mask.apply();\n        var valid = true;\n        var required = true;\n\n        //checks all required fields\n        formContainer.find(\".form-group\").removeClass(\"has-error\");\n        formContainer.find(\"[required]\").each(function () {\n            var jqEle = $(this);\n\n            //This code is to check if enum is required or not for IE9.\n            var property = !_.isUndefined(jqEle.attr(\"data-control-bind\")) ? jqEle.attr(\"data-control-bind\") : jqEle[0].name;\n            if (_.isUndefined(property) || property != \"\") {\n                if (!_.isUndefined(jqEle[0].kendoBindingTarget) && !_.isUndefined(jqEle[0].kendoBindingTarget.options)) {\n                    property = jqEle[0].kendoBindingTarget.options.propertyName;\n                }\n            }\n            if (!_.isUndefined(property)) {\n                var isEnum = _.isObject(pageForm.viewModel[property]) && !_.isUndefined(pageForm.viewModel[property].Id);\n                if ((_.isNull(pageForm.viewModel[property]) || (pageForm.viewModel[property] === \"\")) ||\n                    (_.isObject(pageForm.viewModel[property]) && isEnum && (_.isNull(pageForm.viewModel[property].Id) || pageForm.viewModel[property].Id === \"\")) ||\n                    (((_.isObject(pageForm.viewModel[property]) && !isEnum && (_.isUndefined(pageForm.viewModel[property].BaseId) || _.isNull(pageForm.viewModel[property].BaseId)))))) {\n                    valid = false;\n                    jqEle.parents(\".form-group\").addClass(\"has-error\");\n                }\n            }\n            //END This code is to check if enum is required or not for IE9.\n\n            var nodeName = jqEle[0].nodeName.toLowerCase();\n            if (nodeName != \"input\" && nodeName != \"textarea\") {\n                jqEle = jqEle.find(\"input\");\n            }\n            if (jqEle.val() == \"\") {\n                valid = false;\n                jqEle.parents(\".form-group\").addClass(\"has-error\");\n            }\n\n        });\n\n        //check for valid enums\n        formContainer.find(\".input-error\").each(function () {\n            valid = false;\n        });\n\n        formContainer.find(\"[data-invalid]\").each(function () {\n            valid = false;\n            var jqEle = $(this);\n            jqEle.parents(\".form-group\").addClass(\"has-error\");\n\n            jqEle.css({\n                \"background-color\": \"#FBE3E4\"\n            });\n\n        });\n        if (!required) {\n            failure(localization.RequiredFieldsErrorMessage);\n            app.lib.mask.remove();\n            return;\n        }\n        //end check of req fields\n\n\n        if (!valid) {\n            failure(localization.PleaseCorrectErrors);\n            app.lib.mask.remove();\n            return;\n        }\n        //end check for valid enums\n\n\n        //check for un added action log commnets\n        if (dataVM.get('commentDirty')) {\n            app.lib.message.add(\"<strong>\" + localization.UnAddedActionLogComment + \"</strong>\", \"warning\");\n\n            //only going to warn you once\n            dataVM.set('commentDirty', false);\n\n            app.lib.message.show();\n            //take use to the error message\n            window.scrollTo(0, 0);\n\n            app.lib.mask.remove();\n            return;\n        }\n        //end check for un added action log commnets\n\n        var current = dataVM.toJSON();\n        //This will optimized the passing of mulitple object to only send the deleted or/and added items\n        if (pageForm.newWI == false) {\n            app.lib.optimizeFormMultiObject.BeforeSave(current, pageForm.jsonRaw);\n            \n        }\n        var postData = encodeURIComponent(JSON.stringify({\n            isDirty: true,\n            current: current,\n            original: pageForm.jsonRaw\n        }));\n\n        $.ajax({\n            type: 'POST',\n            dataType: 'text',\n            url: saveUrl,\n            data: \"formJson=\" + postData,\n            success: function (data, status, xhr) {\n                $.post(\"/platform/api/CacheSync\", {}, function (cacheData) {\r\n                    data = JSON.stringify(data);\n                    //make the form clean so we don't trigger onbeforeunload\n                    dataVM.set(\"isDirty\", false);\n\n                    if (data.search('loginForm') < 0) { // Logged out check                   \n                        success(data);\r\n                    } else {\n                        //session expired\n                        window.location = \"/Login/Login?ReturnUrl=\" + window.location.pathname;\r\n                    }\r\n                });\n            },\n            error: function (xhr, ajaxOptions, thrownError) {\n                //do we have a data conflict\n                if (xhr.status == 409) {\n\n                    $.when(kendo.ui.ExtYesNoDialog.show({\n                        title: localization.DataConflict,\n                        message: localization.DataConflictError + \"<br/><br/><small>(\" + localization.DataConflictDescription + \")</small>\",\n                        icon: \"fa fa-exchange text-danger\",\n                        width: \"500px\",\n                        height: \"175px\"\n                    })\n                    ).done(function (response) {\n                        if (response.button === \"yes\") {\n                            //open in new tab, may not work this way in all browsers\n                            window.open(window.location.pathname);\n                        } else {\n                            //refresh page\n                            location.href = window.location.pathname;\n                        }\n                    });\n\n                } else if (xhr.status == 503) { //SDK unavailable\n                    var jsonRsp = xhr.responseText;\n                    app.lib.log(jsonRsp);\n                    var msgResponse = JSON.parse(jsonRsp);\n                    //determine error Message\n                    var errorMsg = localization.RequestFailed;\n                    if (msgResponse.exception && msgResponse.exception.length > 0) {\n                        errorMsg = msgResponse.exception;\n                    }\n                    //alert the user\n                    kendo.ui.ExtAlertDialog.show({\n                        title: localization.Failed,\n                        message: errorMsg,\n                        icon: \"fa fa-times-circle text-danger\"\n                    });\n                } else if (xhr.status == 403) { //user does not have access\n                    var jsonRsp = xhr.responseText;\n                    app.lib.log(jsonRsp);\n                    var msgResponse = JSON.parse(jsonRsp);\n                    //determine error Message\n                    var errorMsg = localization.RequestFailed;\n                    if (msgResponse.exception && msgResponse.exception.length > 0) {\n                        errorMsg = msgResponse.exception;\n                    }\n                    //alert the user\n                    kendo.ui.ExtAlertDialog.show({\n                        title: localization.Failed,\n                        message: errorMsg,\n                        icon: \"fa fa-times-circle text-danger\"\n                    });\n\n\n                } else {\n\n                    failure();\n                    console && app.lib.log(localization.RequestFailed);\n                    app.lib.log(thrownError);\n\n                    var jsonRsp = xhr.responseText;\n                    app.lib.log(jsonRsp);\n\n                    var msgResponse = JSON.parse(jsonRsp);\n                    //determine error Message\n                    var errorMsg = localization.RequestFailed;\n                    if (msgResponse.exception && msgResponse.exception.length > 0) {\n                        errorMsg = msgResponse.exception;\n                    }\n\n                    kendo.ui.ExtAlertDialog.show({\n                        title: localization.ErrorDescription,\n                        message: errorMsg,\n                        icon: \"fa fa-exclamation\"\n                    });\n                }\n            },\n            processData: false,\n            async: true\n        });\n    }\n    //make pageForm Happy\n    pageForm.save = save;\n\n\n    //set a global vm change function\n    var onVmChange = function (e) {\n        //This will optimized the passing of mulitple object to only send the deleted or/and added items\n        app.lib.optimizeFormMultiObject.OnVmChange(e);\n    }\n    //make the things global - grrrr\n    pageForm.onVmChange = onVmChange;\n\n\n    var stripRTF = function stripRtf(str) {\n\n        if (_.isNull(str)) return \"\";\n\n        var basicRtfPattern = /\\{\\*?\\\\[^{}]+;}|[{}]|\\\\[A-Za-z]+\\n?(?:-?\\d+)?[ ]?/g;\n        var newLineSlashesPattern = /\\\\\\n/g;\n        var ctrlCharPattern = /\\n\\\\f[0-9]\\s/g;\n        var rtfString = !_.isNull(str) ? str : \"\";\n\n        //Remove RTF Formatting, replace RTF new lines with real line breaks, and remove whitespace\n        return rtfString\n            .replace(ctrlCharPattern, \"\")\n            .replace(basicRtfPattern, \"\")\n            .replace(newLineSlashesPattern, \"\\n\")\n            .trim();\n    }\n    init();\n\n});\ndefine(\"forms/configItemMain\", function(){});\n\n"]}