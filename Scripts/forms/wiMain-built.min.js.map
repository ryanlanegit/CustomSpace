{"version":3,"sources":["../CustomSpace/Scripts/widgets/historyDropDownTree.js","require/text.js","forms/tasks/anchor/view.html!text","forms/tasks/anchor/controller.js","forms/tasks/analystByGroup/view.html!text","forms/fields/enum/view.html!text","forms/fields/enum/controller.js","forms/tasks/drawerTask/view.html!text","forms/tasks/analystByGroup/controller.js","forms/popups/notificationPopup/view.html!text","forms/tasks/assignToMe/controller.js","forms/tasks/changeStatus/view.html!text","forms/tasks/changeStatus/view.drawer.html!text","forms/fields/longstring/view.html!text","forms/fields/longstring/controller.js","forms/fields/boolean/view.html!text","forms/fields/boolean/controller.js","forms/tasks/changeStatus/controller.js","forms/tasks/amChangeStatus/controller.js","forms/tasks/acknowledge/view.html!text","forms/tasks/acknowledge/controller.js","forms/tasks/convertToParent/controller.js","forms/tasks/linkToParent/view.html!text","forms/header/relationships/view.html!text","forms/tasks/linkToParent/controller.js","forms/tasks/newStatus/view.html!text","forms/tasks/newStatus/controller.js","forms/tasks/sendEmail/mobile_view.html!text","forms/tasks/sendEmail/view.html!text","forms/popups/userPickerPopup/view.html!text","forms/popups/userPickerPopup/controller.js","forms/flyout/fileAttachmentsFlyout/mobile_view.html!text","forms/flyout/fileAttachmentsFlyout/view.html!text","forms/flyout/fileAttachmentsFlyout/controller.js","../CustomSpace/Scripts/forms/tasks/sendEmail/controller.js","forms/tasks/custom/controller.js","forms/tasks/spacer/view.html!text","forms/tasks/spacer/controller.js","forms/tasks/associateItem/controller.js","forms/tasks/setDate/view.html!text","forms/fields/date/view.html!text","forms/fields/date/controller.js","forms/fields/string/view.html!text","forms/fields/string/controller.js","forms/tasks/setDate/controller.js","forms/tasks/updateAssetManagement/controller.js","forms/tasks/updateSupersededHardware/controller.js","forms/tasks/copyLicenseAssignments/view.html!text","forms/tasks/copyLicenseAssignments/controller.js","../CustomSpace/customtasks.tmpl.html!text","forms/tasks/copyToNewWI/controller.js","forms/tasks/increaseAvailableCount/view.html!text","forms/fields/longString/controller.js","forms/fields/numeric/view.html!text","forms/fields/numeric/controller.js","forms/tasks/increaseAvailableCount/controller.js","forms/tasks/decreaseAvailableCount/view.html!text","forms/tasks/decreaseAvailableCount/controller.js","forms/tasks/print/controller.js","forms/tasks/addMeToWatchList/controller.js","forms/taskBuilder.js","forms/header/sticky/view.html!text","forms/flyout/remoteManageWidget/view.html!text","forms/flyout/remoteManageWidget/controller.js","forms/flyout/headerAttachmentWidget/view.html!text","forms/predefined/fileAttachmentsDragDrop/view.html!text","forms/predefined/fileAttachmentsDragDrop/controller.js","forms/flyout/headerAttachmentWidget/controller.js","forms/header/sticky/controller.js","forms/header/status/view.html!text","forms/header/status/controller.js","forms/header/relationships/controller.js","forms/header/slo/view.html!text","forms/header/slo/controller.js","forms/header/spacer/view.html!text","forms/header/spacer/controller.js","forms/header/title/view.html!text","forms/header/title/controller.js","forms/header/approval/view.html!text","forms/header/approval/controller.js","forms/headerBuilder.js","forms/structure/formPanel/view.html!text","forms/structure/formPanel/controller.js","forms/structure/formPanelFull/view.html!text","forms/structure/formPanelFull/controller.js","forms/structure/customFieldGroup/view.html!text","forms/structure/customFieldGroup/controller.js","forms/structure/customFieldGroupRow/view.html!text","forms/structure/customFieldGroupRow/controller.js","forms/structure/columnField/view.html!text","forms/structure/columnField/controller.js","forms/structure/tab/view.html!text","forms/structure/tab/controller.js","forms/structure/tabPane/view.html!text","forms/structure/tabPane/controller.js","forms/structure/tabNavigation/view.html!text","forms/structure/tabNavigation/mobile.html!text","forms/structure/tabNavigation/controller.js","forms/structure/tabData/view.html!text","forms/structure/tabData/mobile.html!text","forms/structure/tabData/controller.js","forms/predefined/actionLog/view.html!text","forms/predefined/actionLog/controller.js","forms/predefined/fileAttachments/view.html!text","forms/predefined/fileAttachments/controller.js","forms/predefined/affectedItems/view.html!text","forms/popups/multipleObjectPickerPopup/view.html!text","forms/popups/multipleObjectPickerPopup/controller.js","../CustomSpace/Scripts/forms/predefined/affectedItems/controller.js","forms/predefined/relatedItems/view.html!text","../CustomSpace/Scripts/forms/predefined/relatedItems/controller.js","forms/predefined/childWorkItems/view.html!text","forms/predefined/childWorkItems/controller.js","forms/predefined/userInput/view.html!text","forms/predefined/userInput/controller.js","forms/predefined/activities/view.html!text","forms/predefined/activities/controller.js","forms/predefined/multipleObjectPicker/view.html!text","forms/predefined/multipleObjectPicker/controller.js","../CustomSpace/Scripts/forms/predefined/history/view.html!text","../CustomSpace/Scripts/forms/predefined/history/controller.js","forms/predefined/billableTime/view.html!text","forms/predefined/billableTime/controller.js","forms/predefined/knowledgeArticle/view.html!text","forms/predefined/knowledgeArticle/popup.html!text","forms/predefined/knowledgeArticle/controller.js","forms/fields/display/view.html!text","forms/fields/display/controller.js","forms/fields/spacer/view.html!text","forms/fields/spacer/controller.js","forms/fields/int/controller.js","forms/fields/decimal/controller.js","forms/fields/double/controller.js","forms/fields/datetime/view.html!text","forms/fields/datetime/controller.js","forms/fields/userPicker/view.html!text","forms/fields/userPicker/controller.js","forms/fields/objectPicker/view.html!text","forms/popups/objectPickerPopup/view.html!text","forms/popups/objectPickerPopup/controller.js","forms/fields/objectPicker/controller.js","forms/fields/button/view.html!text","forms/fields/button/controller.js","forms/fields/editor/view.html!text","forms/fields/editor/controller.js","forms/fields/combo/view.html!text","forms/fields/combo/controller.js","forms/fields/dropDownList/view.html!text","forms/fields/dropDownList/controller.js","forms/fields/bundle/view.html!text","forms/fields/bundle/controller.js","forms/fields/fileUpload/view.html!text","forms/fields/fileUpload/controller.js","forms/fields/urlTextbox/view.html!text","forms/fields/urlTextbox/controller.js","forms/fields/percentage/controller.js","forms/formBuilder.js","forms/formHelper.js","forms/wiMain.js"],"names":["kendo","data","binders","historyDropDownTree","Binder","extend","init","element","bindings","options","getRelatedActivitiesList","viewModel","parentId","activityItem","ParentId","Id","BaseId","Text","Title","Name","HasChildren","Ordinal","EnumNodes","that","relatedActivitiesList","push","_","isUndefined","Activity","length","each","activityViewModel","fn","call","this","path","optionsObject","source","get","showPath","mustSelectLeafNode","leafNodeOnly","disabled","required","$","attr","filterId","showClearButton","placeholder","bShowClearButton","pageForm","app","storage","custom","console","log","name","autoBind","template","getChildActivities","filter","activity","refresh","getBindingName","value","isNull","updateViewModel","sender","selectedItem","id","selectedIndex","text","vm","propertyName","isRequired","isEmpty","isValid","hasClass","input","val","localization","ChooseOne","set","setIsValid","setInputDecoration","treeViewWidgetData","_dropdown","dataItem","_treeview","select","findByUid","uid","css","text-decoration","targetObj","closest","removeClass","addClass","parameterId","treeViewDataSource","comboDataSource","treeViewOptions","comboBoxOptions","extOptions","combobox","ex","eval","lastParameterId","destroy","empty","HierarchicalDataSource","serverFiltering","transport","read","success","treeviewData","schema","model","hasChildren","requestEnd","e","defer","expand","_data","i","item","nodeElm","selectedNode","find","next","slice","DataSource","handler","Key","toLowerCase","indexOf","bindings.value","relatedActivitiesList[0].Name","treeView","dataSource","dataTextField","dataValueField","loadOnDemand","change","selectedValue","messages","loading","Loading","comboBox","suggest","minLength","localizationHelper","localize","clearButton","treeViewWidget","kendoExtDropDownTreeViewV3","list","on","filters","keyCode","children","bind","enable","remove","removeAttr","define","module","fs","Cc","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","location","href","defaultProtocol","protocol","replace","defaultHostName","hostname","defaultPort","port","undefined","buildMap","masterConfig","config","version","strip","content","matches","match","jsEscape","createXhr","xhr","progId","XMLHttpRequest","ActiveXObject","parseName","modName","ext","temp","index","isRelative","substring","moduleName","xdRegExp","useXhr","url","uProtocol","uHostName","uPort","exec","split","finishLoad","onLoad","isBuild","load","req","inlineText","parsed","nonStripName","toUrl","err","error","write","pluginName","hasOwnProperty","asModule","writeFile","extPart","fileName","textWrite","contents","env","process","versions","node","require","nodeRequire","callback","errback","file","readFileSync","headers","header","open","setRequestHeader","onXhr","onreadystatechange","evt","status","readyState","Error","responseText","onXhrComplete","send","Packages","java","stringBuffer","line","io","File","lineSeparator","lang","System","getProperty","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","charAt","append","String","toString","close","Components","classes","interfaces","utils","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString","tpl","build","built","properties","View","wrap","render","EnumId","Required","Disabled","LeafNodeOnly","ShowPath","FilterIds","anchorTemplate","windowTemplate","enumPickerControl","drawerTaskTemplate","configEnumId","configPropertyName","callerType","type","isBulkEdit","originalAssignedName","originalAssignedId","originalSupportGroup","originalSupportName","originalSupportId","getTaskViewModel","modalView","taskVm","observable","analystByGroup","selectedWorkItem","groupPropertyName","groupPropertyEnumId","Configs","enumId","modalEle","clone","modalControl","kendoCiresonWindow","title","AssignToAnalystByGroup","width","height","actions","windowViewModal","assignToDataSource","getUserDataSource","userEnabled","okEnabled","userChange","_prev","AssignedWorkItem","okClick","lib","mask","apply","postData","ProjectionId","projectionId","UpdateServiceManagement","ItemIds","pluck","currentSelection","EditedFields","getBulkEditedFieldData","ajax","JSON","stringify","dataType","contentType","onBulkEditSaveSuccess","onBulkEditSaveFailure","TierQueue","SupportGroup","cancelClick","buildEnumPicker","container","props","vmModel","enumControl","html","controls","groupProperties","PropertyName","PropertyDisplayName","groupPicker","groupDropDownControl","groupTreeViewControl","assignToCombobox","setSupportGroupUsers","current","show","setAdditionBulkTaskProperties","anchorViewModel","drawerTaskVm","assignedWorkItem","displayName","baseId","isEnabled","showTooltip","setEnabled","enabled","targetControlId","onTargetControlChange","grid","selectedDataItems","isMobile","map","toArray","onExceedSelectionCount","selectedTypes","selectedStatusNames","singleSelectedType","reduce","memo","currentVal","singleSelectedStatusName","setTrimmedWiType","constants","projectionIds","SystemWorkItemServiceRequestViewModel","enumPickerIds","ServiceRequestSupportGroup","SystemWorkItemIncidentViewModel","IncidentTierQueue","pop","json","trimmedType","EditedValue","assignedSupportGroup","PropertyType","PropertyRelationshipId","ActionType","Description","RecordAssignedDescription","session","user","DescriptionDisplay","EnteredBy","EnteredDate","Date","toISOString","LastModified","RecordAssigned","Image","iconPath","icons","ui","ExtAlertDialog","message","query","targetGrid","targetGridState","gridUtils","savedState","getCurrentState","recheckGridState","add","getOriginalFormValues","DisplayName","selectedSupportGroupId","addUrlParam","fields","vmWindow","asssignToComboBox","focus","buildAndRender","windowEle","view","taskListItem","builtAnchor","anchorElm","formTaskViewModel","onClick","toolTipMessage","events","subscribe","event","listView","selectedCards","controlId","wrapper","Target","anchor","notificationTpl","notificationTemplate","target","assignToMe","cont","popupNotification","kendoNotification","templates","infoMessage","AssignedToMeNotificationMessage","link","longStringController","CheckLength","setTimeout","elem","currentTarget","helpBlock","maxChars","hide","buildLongStringView","limitLength","MinLength","MaxLength","LimitLength","Rows","visible","IsVisible","Inline","changeStatusTemplate","changeStatusDrawerTemplate","txtAreaControl","checkBoxControl","IsAutoResolve","AutoResolve","resolveChildIncidentSettings","originalVm","Status","ResolutionCategory","ResolutionDescription","ChildWorkItem","Notes","ImplementationResults","RelatesToWorkItem","Resolution","workItemStatuses","incidentResolved","Incident","Resolved","incidentActive","Active","incidentClosed","Closed","incidentActivePending","Pending","serviceRequestCancelled","ServiceRequest","Cancelled","serviceRequestCompleted","Completed","serviceRequestSubmitted","Submitted","serviceRequestInProgress","InProgress","serviceRequestOnHold","OnHold","serviceRequestFailed","Failed","serviceRequestClosed","changeRequestFailed","ChangeRequest","changeRequestClosed","changeRequestInProgress","changeRequestOnHold","changeRequestCancelled","changeRequestSubmitted","changeRequestCompleted","problemResolved","Problem","problemClosed","releaseRecordClosed","ReleaseRecord","releaseRecordCancelled","releaseRecordCompleted","releaseRecordFailed","releaseRecordEditing","Editing","releaseRecordOnHold","releaseRecordInProgress","getFormTaskViewModel","changeStatus","modalWindowEle","modalWindowControl","ChangeStatusTask","activate","selectedWiType","modalWindowViewModel","currentStatusId","onModalActivate","statusTreeViewControl","statusDropDownControl","statusEnumId","resolutionCategoryEnumId","resolveChildSettings","letAnalystDecide","workItemModel","requireResolution","resolveChildIncident","actionLogType","getWorkItemLogType","isString","RequestCategoryRequiredError","ImplementationNotesRequiredError","resDateEle","unshift","dataModels","recordResolved","RelatesToTroubleTicket","IsParent","ResolveChildIncident","ResolvedLetAnalystDecide","resolveChildIncidents","closeDateEle","RelatesToTroubleTicket_","recordClosed","ClosedByUser","recordActivated","comDateEle","resolveRelatedWorkItems","showComment","showResolution","showAutoResolve","createStatusPicker","enableResolutionSettings","createIncidentResolutionFields","createResultFields","createProblemResolutionFields","getDrawerTaskViewModel","currentSelectionOfParents","containsParents","currentStatusName","statusTypeId","resolutionResultEnumId","openModal","handleStatusControlChange","modalViewModel","toggleAdditionalFields","selectedWorkItems","selectedParents","newStatusObj","newResolutionId","resolutionDescription","newResultId","resultNote","resultComment","wiStatusTypeId","irStatusResolved","srStatusCompleted","srStatusCancelled","irCategoryRequired","srNotesRequired","irResolveChildOption","windowViewModel","bulkEditFormIsValid","postBulkEditChangesWithChildren","getDrawerTaskEditedFields","postBulkEditChanges","selectedStatusIds","singleSelectedStatusId","ServiceRequestImplementationResults","parentItems","workItem","IncidentResolution","treeControl","dropDownControl","changeRules","getFormTaskChangeRules","changeRulesFilter","field","operator","itemFilter","setDataSource","getResolveChildIncidentSettings","builtModal","ele","resolutionProperties","implementationNotesProperties","buildTextArea","autoResolveProperties","buildCheckbox","implementationResultProperties","commentProperties","resolutionDescriptionProperties","letAnalystDecideProperties","statusProperties","cbTxtAreaControl","txtCheckboxControl","getDrawerTaskChildEditedFields","resolutionCategoryId","propertyRelationshipId","RecordResolved","statusId","ChildIncidentResolutionCategorySameAsParent","ChildIncidentResolutionCategory","ResolvedDate","Array","logic","windowVm","parentIds","childIds","itemIds","childId","uniqIds","uniq","childResolutionCatId","childrenPostData","wiSelectionPostData","postCallback","drawerTaskViewModel","anchorEleProps","titleKey","anchorTemplateProps","enumPicker","ChangeHardwareAssetStatus","enumName","ChangeHardwareAssetType","ChangeSoftwareAssetStatus","ChangeSoftwareAssetType","tempStatus","win","_vmWindow","acknowledge","Acknowledge","dateTimeNow","dateTimeNowUTC","actionLogComment","isPrivate","charactersRemaining","textCounter","FirstResponseDate","respondDateEle","newActionLog","Analyst","Comment","IsPrivate","ActionLog","isParent","confirmTitle","confirmMessage","convertToParent","when","ExtYesNoDialog","done","response","button","save","ChangesApplied","saveFailure","exceptionMessage","RequiredFieldsErrorMessage","PleaseCorrectErrors","linkToParent","ClassId","LinktoNewParentIncident","LinkToNewParentRecord","refreshDataSource","getChildIncidentSettings","searchText","searchClick","selectedRow","ParentWorkItem","childIncidentSettings","ActiveChildIncidentLinkStatus","buildParentHeaderView","parentView","workItemType","cache","pageSize","gridChange","eventArgs","otherBoundChanges","setNewStatus","newStatusId","addComment","newStatusName","processChildIncidentReactivation","reactivateChildandSave","ChildIncidentReactivatedStatus","parseJSON","ReactivateLetAnalystDecide","ReactivateChildIncidentTitle","ReactivateChildIncidentMessage","ReactivateChildIncident","newStatusConfig","comment","newComment","commentMessage","CancelledStatusCommentMessage","__userPickerPopupSingleton","NameIdModel","nameProp","idProp","self","serverNameProp","serverIdProp","setObj","setFromObj","obj","getFromObj","getObj","getGenericFromObj","UserPickerPopup","targetEle","groupsOnly","popup","_vm","gridHtml","gridUrl","_model","setSaveCallback","unbind","setCancelCallback","bindEvents","onSearchClick","search","searchValue","onSaveClick","isMobileDevice","selectedUser","userObj","trigger","closePopup","kendoGrid","onCancelClick","openPopup","kendoDataSource","kendoWindow","createPopup","Popup","createGrid","Grid","createKendoWindow","SelectGroup","SelectUser","settings","pager","onRowDblClick","page","createKendoDataSource","prefix","userFilter","filterByAnalyst","serverPaging","serverSorting","serverGrouping","total","errors","PrincipalName","UserName","Domain","Company","FirstName","LastName","EmployeeId","createKendoGrid","selectable","sortable","mode","pageable","filterable","extra","operators","string","startswith","Startswith","contains","Contains","eq","Isequalto","neq","Isnotequalto","columns","hidden","encoded","attributes","class","SearchText","selectUserText","searchOnEnter","which","preventDefault","cancel","userDataSource","onListViewChanged","isDesktopView","isMobileView","getPopup","__fileAttachmentsPopupSingleton","FileAttachmentsPopup","task","FileAttachments","selectedFiles","closeModal","onOpenFile","saveCancelBtn","closeBtn","modal","selectFile","el","isImage","getByUid","action","downloadUrl","rootURL","window","document","body","appendChild","createElement","src","dialog","dialogs","kendoDialog","Content","animation","effects","before","off","kendoListView","FileAttachment","dataBound","parent","objectPickerPopup","attachmentPickerFlyout","recipientList","recipientToList","recipientCCList","sendEmail","SendEmail","getAffectedUserEmail","setDefaultWIStatus","emailTo","emailCC","emailSubject","emailHTMLMessage","emailBodyTemplate","emailTextMessage","emailAttachment","emailTemplateDataSource","tempateDataSource","emailTemplateValue","attachmentErrorMessage","addToLog","addToActionLogDefault","forceAddToActionLog","enableAddToLog","setAsPrivate","saveMessageAsPrivate","recipientToEmail","without","findWhere","Email","join","recipientCcEmail","arrEmail","union","InvalidEmailAddress","PleaseProvideEmailAddress","invalidEmailAdress","validateEmailAddress","InvalidEmailAddressMessage","editor","innerText","textContent","trim","MessageRequired","MessageRequiredWhenAddingLogEntry","progress","ExtOkCancelDialog","Warning","UnsavedDataMessage","icon","widget","remoteManageRecepient","shown","emailTemplateChange","_old","dView","subject","Subject","resizeEditor","$this","toggleClass","showChangeStatus","sendEmailAttachments","fromWorkItemAttachementsId","setFirstResponseDate","enableFirstResponseDate","popupWindow","object","recipientType","picker","userEmailObj","users","guid","email","key","viewWorkItemFiles","flyoutWindow","n","filesCount","changeStatusSetting","defaultStatusId","rootStatusEnumId","enableChangeStatus","fetchAll","names","items","subData","concat","initializeUserPicker","initializeUploader","initializeStatusPicker","buildEditor","tooltip","getRemoteManageRecepient","getSendEmailChangeStatusSettings","applyChangeStatus","toPicker","ccPicker","stopImmediatePropagation","addToCommentLog","EMailSent","RequestedWorkItem","affectedUserId","textStatus","jqXHR","affectedUser","ready","recepient","async","invalidEmailAddress","validateEmail","fileAction","blob","Blob","URL","createObjectURL","navigator","msSaveOrOpenBlob","msSaveBlob","a","style","download","click","revokeObjectURL","removeChild","kendoUpload","saveUrl","ClassName","autoUpload","operation","files","rawFile","ErrorDescription","warn","showFileList","dropZone","targetProp","targetKey","userPicker","kendoMultiSelect","Search","maxNumberOfResults","filtering","tagTemplate","currentList","deselect","jQuery","Event","bChangeStatus","bAddActionLog","addToLogSkipped","bHasAttachment","strAttachedFileNames","strMessage","encodeURIComponent","strMessagePlain","workItemFileIds","emailFooterTemplate","emailData","To","Message","AttachedFileNames","WorkItemId","bSetFirstResponsDate","bSuccess","SendEmailSuccessMessage","fileAdded","handleSaveSuccess","SkippedAddingLogEntryTitle","ErrorAddingLogEntryMessage","SendEmailFailedMessage","errorThrown","uploadPastedImage","d","timestamp","getTime","formData","FormData","processData","getBase64Image","img","canvas","getContext","drawImage","toDataURL","dataURItoBlob","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","defaultTools","shift","mobileTools","kendoEditor","tools","stylesheets","paste","pasteCleanup","tagName","dataSRC","setAttribute","one","complete","at_config","at","headerTpl","insertTpl","displayTpl","limit","startWithSpace","editableAtwhoQueryAttrs","iframe","prev","innerDoc","contentDocument","contentWindow","$inputor","atwho","caret","$li","userId","userData","is","activeElement","removedAtWhoId","newList","filterIdParam","getChangeStatusRules","consoleSetting","SendEmailServiceRootStatusEnum","SendEmailServiceDefaultStatusEnum","SendEmailServiceAllowAnalystToChangeStatus","SendEmailChangeRootStatusEnum","SendEmailChangeDefaultStatusEnum","SendEmailChangeAllowAnalystToChangeStatus","SendEmailProblemRootStatusEnum","SendEmailProblemDefaultStatusEnum","SendEmailProblemAllowAnalystToChangeStatus","SendEmailReleaseRootStatusEnum","SendEmailReleaseDefaultStatusEnum","SendEmailReleaseAllowAnalystToChangeStatus","SendEmailIncidentRootStatusEnum","SendEmailIncidentDefaultStatusEnum","SendEmailIncidentAllowAnalystToChangeStatus","Label","func","customFunc","relationshipKey","FromFilter","ToFilter","FromRelative","ToRelative","MinValue","MaxValue","stringController","buildStringView","datePicker","stringArea","checkBox","datePickerCtrl","checkboxCtrl","openWindow","dateLabel","viewType","Disposed","blur","cancelledDate","originalDate","dateProperties","OriginalDisposalReference","recieveCheckbox","OriginalCheckBox","masterContractStartingDateCheckbox","DisposalDate","ReceiveDate","StartDate","propertyKey","buildDatePicker","stringProperties","DisposalReference","buildString","RemoveReceivedDate","RemoveMasterLeaseWarrantyStarts","dateControl","stringControl","checkboxControl","dtm","checked","CommonContract","UpdateStatus","SetSeatsRemaining","UpdateSoftwareAsset","UpdateConsumable","SupersedesParent","CountAssignedConsumableUsers","CountAssignedConsumableAssets","assignedCount","Target_ConsumableHasAssignedUsers","Target_ConsumableHasAssignedAssets","CiresonAssetManagement","SoftwareAssetUpdateConfirmationMsg","isOk","Success","SoftwareAssetUpdated","reload","ErrorOccured","ajaxOptions","thrownError","failure","RequestFailed","jsonRsp","errorMsg","exception","UpdateSupersedesConfirmation","post","UpdatingAssets","TotalNumberofAssetsUpdated","count","ServerError","CopyLicenseAssignments","StartCopyLicenseAsssignements","serialize","bTransferUsers","bTransferComputers","bTranserToAuthorised","targetVM","selected","sourceVM","bTranserToAssigned","computerList","ComputerList","userList","UserList","PerformTransfer","UpdateSoftwareAssetMsg","itemList","targetProperty","isExist","indexTarget","addItem","copyToNewWI","hiddenVm","copy","method","submit","DecimalPlaces","StepIncrement","Format","numericArea","EditConsumableAvailableCount","tempLog","ObservableObject","ClassTypeId","Target_LogHasCreator","AllowCreatedDate","newGUID","Type","TaskRun","countProperties","zeroCount","buildNumeric","currentCount","addedcount","parseInt","newCount","IncreasedAvailableCount","AvailableCount","DecreasedAvailableCountBy","print","addMeToWatchList","isAddWatchlist","removeFromWatchList","AddMeToWatchList","addToWatchList","RemoveMeFromWatchList","WatchList","AddMeToWatchListNotificationMessage","splice","RemoveMeFromWatchListNotificationMessage","amChangeStatus","newStatus","spacer","associateItem","setDate","updateAssetManagement","updateSupersededHardware","copyLicenseAssignments","customTmpl","increaseAvailableCount","decreaseAvailableCount","definition","ulElement","fromDrawerBuilder","taskTemplate","tasks","taskCallback","Access","Task","_obj","Exception","tmpl","__remoteManageWidgetSingleton","getWidget","first","after","addUserContainer","addTemplate","dataUserContainer","dataTemplate","addDeviceContainer","dataDeviceContainer","multipleDataTemplate","widgetActionIcon","createUserComboBox","initializePicker","eleContainer","eleTemplate","getKendoComboBox","createUserDeviceComboBox","createPrimaryDeviceComboBox","createDeviceComboBox","affectedUserText","assignedUserText","primaryOwnerText","affectedDeviceText","primaryDeviceText","userDeviceText","relatedDeviceText","getObjectDetails","details","AffectedUserAppPage","AssignedUser","PrimaryOwner","AffectedDeviceText","RelatedDeviceText","setSelected","parents","widgetType","mailtoLink","mainWidgetAttr","AssetStatus","HasRelatedWorkItems","mainWidgetDeviceAttr","RelatesToConfigItem","replaceAll","ds","searchFilter","classId","columnNames","Data","TrueControlCenterURL","beforeSend","TrueControlCenterAuthToken","className","kendoComboBox","appendTo","Path","Guid","addForm","assignedUser","primaryOwner","RelatesToIncident","affectedDevice","primaryDevice","userDevice","relatedDevice","relatedDeviceArr","affectedDeviceArr","primaryDeviceArr","clickContainer","nodeName","slideOutNav","getTCCSourceURL","UserManagement","ComputerManagement","removeUserCombobox","openCombobox","removeItem","propName","widgetValue","arr","liParent","openSendEmail","relatedDeviceObj","devices","affectedDeviceObj","changeCntr","widgetName","getJSON","parse","toggle","attachmentWidget","then","AcceptExtension","Clas","isDesktop","isVisible","onSelect","extension","FileExtensionInvalid","onUploadSuccess","f","onUploadError","onRemove","fieldName","removeUrl","__headerAttachmentWidgetSingleton","fileAttachmentsDragDrop","getContainer","tplReturn","headerAttachmentContainer","_container","remoteManageWidget","headerAttachmentWidget","statusVisible","newWI","showRemoteManageIcon","DoWork","viewCallBack","controller","parentIncident","ParentRecord","Parentincident","editHref","editLink","unlinkParent","UnlinkToParent","SureUnlinkToParent","isSLOopen","toggleSLODropdown","closeSLODropdown","first_sloObjects","first_sloContainer","DoWorkSLOHeader","sloContainer","sloObjects","isDropdown","sloActive","sloPaused","sloMet","sloWarning","sloBreached","sloNotReady","isMet","isPaused","sloTemplate","sloObj","imageClass","isBreach","sloImg","SLOCoundown","Time","Hours","Minutes","Seconds","WarningDate","ServerDatetimeNow","sloCloned","isMetStat","hours","minutes","seconds","warningDate","serverCurrentDate","secs","Math","abs","mins","hrs","setSeconds","getSeconds","doClick","toggleMore","viewAttachments","isAnalyst","sloViewObj","rejected","approve","notYetVoted","approvalModel","decisionEnumId","comments","onRejectClick","updateStatus","onApproveClick","onCompleteClick","ManualActivity","updateManualActivity","onFailClick","isReviewActivity","updateReviewActivity","isManualActivity","ExtYesNoTextAreaDialog","Comments","DoYouHaveComments","Reviewer","reviewItem","group","userGroup","User","Decision","VotedBy","RequireImplementationNotes","ImplementationdetailsRequired","Implementationdetails","buttons","Save","$inputText","currentNotes","requiredCss","cls","Cancel","isDirty","toJSON","original","jsonRaw","successMessage","ReviewActivityApprovedMessage","ReviewActivityRejectedMessage","ManualActivityCompletedMessage","ManualActivityFailedMessage","handleMessages","pathname","DataConflict","DataConflictError","DataConflictDescription","ReconnectRequired","pageDataSource","isScoped","Security","IsWorkItemScoped","showInActives","updatePageDetails","pageCount","idx","pageString","statusInProgress","reviewDetails","fullDetails","review","nextClick","navigate","previousClick","dSource","nextItem","approvalUrl","onChangeSupportGroup","MASupportGroupField","SupportGroupFieldValue","currentPage","toatPage","pageText","disablePrevious","disableNext","workItemId","statusName","disabledButtons","reviewResult","reviewId","SupportGroupVisible","SupportGroupEnumId","MASupportGroupGuid","disabledMAButtons","sticky","relationships","slo","approval","headerTemplate","rows","row","rowElm","column","colElm","Class","Visible","dtpl","mtpl","cid","ObjectPickerPopup","dataSourceFilter","isConfigItem","controllerUrl","objects","selectedRows","grid2","itm","clearSearchText","gridFunctions","clear","outObjs","ObservableArray","addObject","max","grid2Funcs","removeObject","removeRow","gridFuncs","comboFuncs","getIdValue","onChange","onDataBound","totalPages","ii","iitem","dblClick","item1","combo","SelectObject","createCombo","gc","userColumns","columnMenu","createGrid2","Total","nd","templateFrag","cur_table","boundArray","affectedItemController","addConfigItem","selectedConfigItemId","addAffectedItem","searchConfigItem","selectedConfigItem","configItemDataSource","onConfigItemChange","isUserCIVisible","selectedUserConfigItemId","selectedUserConfigItem","addUserConfigItem","userConfigItemDataSource","parameterMap","onUserConfigItemChange","showMoreInfo","detailsPopupEle","detailsPopup","center","onDataBinding","table","Hidden","isWindowsComputer","isConfigItemWindowsComputer","objectId","result","isUser","isConfigItemUser","IsUser","isMoreInfo","isSlideOut","bIsUser","bIsWindowsComputer","hasControlCenterURL","showTCCInfo","onContextmenuSelect","onContextmenuActivate","managementTitle","menuItems","imageUrl","imageAttr","AdditionalDetails","setOptions","originalFilter","arguments","dsFilters","innerFilters","x","affectedtemController","isDuplicate","idToAdd","ObjectClassName","relatedItemController","Control","boundObj","bindButtonEvents","addClick","gridEle","command","Remove","scrollable","info","Showitemswithvaluethat","and","And","or","Or","Filter","Clear","reorderable","ChooseColumns","sortAscending","SortAscending","sortDescending","SortDescending","editable","confirmDelete","cancelDelete","create","update","toolbar","strClass","PropertyToDisplay","ControllerUrl","IsMobileView","showProp","buildSubProperties","propToFill","prop","propSplit","mainProp","subProp","_boundArray","colNames","splitedProp","propperty","propIndex","ShowAddButton","isDisabled","hideRemoveButton","ShowRemoveButton","columnFields","buildColumnFields","columnToDisplay","buildGridColumns","dataBinding","formatPropertyInBoundArray","ClassProperties","Scoped","scopeBoundArray","SelectableRow","openObject","showRemovButton","localizationKey","localizedText","columnClass","SelectProperty","dateFormat","culture","calendar","patterns","g","format","currentItemEvent","columnString","currentItem","property","isBoolean","isNumber","scopeClassId","timeout","objectIds","tbody","stringProp","HiddenProperty","DashboardsLicense","IsValid","enableWatchlist","setWithNoDirty","variable","isDirtyState","kendoDropDownList","history","getObjectHistory","dataSourceSet","getDropDownDataSource","loadHistory","dropDownDataSet","getChildren","objectGUID","objectTitle","customhistoryModel","nodes","noop","LastUpdatedDisplay","billableTimeController","btHour","btMinute","btTotalTime","btTotalTimeInString","onHourSpin","onMinuteSpin","BillableTime","BasedId","LastUpdated","onAddClick","hour","minute","isExisting","newBillableModel","TimeInMinutes","computeTotalTime","resetTime","onSubtractClick","totalTime","SubtractTimeTitle","SubtractTimeMessage","itemTotalTime","Totaltime","popupTpl","popupView","knowledgeArticleModel","ArticleId","Category","selectedItems","articleIds","last","relatedHTMLKB","KnowledgeArticleID","WorkItemID","AssetID","AssetId","bindRowClick","getAllRelatedWorkItems","ArticleID","CategoryName","TypeName","removeRelatedKB","removeHTMLKB","HideLabel","number","userPickerPopup","ExtraProps","Delay","FilterByAnalyst","MaxNumberOfResults","extraProps","delay","forceKendoProp","helperBlock","autoComplete","refreshDisplayValues","onAutoCompleteValueChanged","onSearchIconClick","isModelSet","isModelSetNulled","hasExtraProps","createHelperBlock","HelperBlock","createAutocomplete","AutoComplete","detailsUrl","setDisplay","setValue","extraPropText","setExtraPropsDisplay","createHtml","data-bind","createViewModel","getUserObjectData","getDisplayName","str","isObject","searchBtn","detailsBtn","placeHolderText","SearchButton","focusedItemIndex","hasTCCURL","validateAutoCompleteValue","getDataSourceMatch","ul","getFocusedIndex","onDetailsBtnClick","stopPropagation","openSlideout","createSearchButton","data-control-action","iconColor","insertAfter","createDetailsButton","insertBefore","createTCCDetailsButton","kendoMenu","openOnClick","createKendoAutoComplete","kendoAutoComplete","valuePrimitive","createDetailsPopup","blurred","background-color","focused","__objectPickerPopupSingleton","groupFilter","ObjectClassId","Hosted","selectObjectText","okText","OK","cancelText","getIndexZero","SearchPlaceholder","preventClosing","scrollTop","ButtonType","ButtonSize","Options","staticFileVersion","Height","IsCascading","Cascade","ControlObject","gridViewModel","bundleData","createOrEditSoftwareBundle","dataList","products","tempSoftwarePattern","tempExclusionPattern","tempVersionPattern","SoftwarePatternName","SoftwarePattern","ExclusionPattern","VersionPattern","SoftwarePatternTxt","ExclusionPatternTxt","VersionPatternTxt","enableDisableTextbox","txt","isEnable","softwarePatternList","exclusionPatternList","versionPatternList","IsBundle","softwarePattern","onSave","validation","SoftwarePatternNamevalidation","EnterRequiredFields","SoftwarePatternvalidation","batch","streamId","bufferedMode","streamLength","buildURLTextbox","regexp","RegExp","txtBox","validateUrl","test","textChange","openURL","formPanel","formPanelFull","customFieldGroup","customFieldGroupRow","columnField","tab","tabPane","tabNavigation","tabData","actionLog","fileAttachments","affectedItems","relatedItems","childWorkItems","userInput","activities","multipleObjectPicker","billableTime","knowledgeArticle","LongString","Boolean","Display","Spacer","Numeric","Int32","Decimal","Double","DateTime","Enum","UserPicker","ObjectPicker","Button","Editor","Combo","DropDownList","Bundle","FileUpload","UrlTextbox","Percentage","mainContainer","jsonTemplate","formTemplate","layoutType","tplString","readTemplate","jsonDecision","mutationLogic","all","propValue","tabList","nodeCount","tabtplString","tabnavCont","focusSet","tabNode","focusedTab","getParameterByName","tabNodeNameKey","tabId","active","customFieldGroupList","columnFieldList","setColumnSizes","chooseNextAction","objectName","columnCount","DataType","propContainer","pane","manageDirty","onbeforeunload","mobileDrawerTaskButton","taskContainer","mobileTaskShow","drawermenu","addButton","Tasks","makeDrawer","resize","waitSeconds","urlArgs","baseUrl","paths","CustomSpace","shim","ajaxStop","taskBuilder","headerBuilder","formBuilder","formHelper","messagesStructure","headerContainer","formContainer","formType","dataVM","priorityJSON","bHasNoInitalAssignee","bShowAddWatchList","onReady","WorkItemErrorMessage","jumbotron","readyArray","boundReady","changesArray","boundChange","methods","actionMethod","isArray","isFunction","reverse","statusCancelled","statusCompleted","statusFailed","showCancelled","AssignToMe","CancelRequest","SureCancelRequest","Print","statusNotResolvedOrClosed","showAcknowledge","showLinkToparent","showRevertToParent","showConvertToParent","statusResolved","ConvertToParent","SureConvertToParent","RevertToParent","SureRevertToParent","LinktoParentIncident","CloseIncident","SureCloseIncident","ReactivateIncident","SureReactivateIncident","CopyToNew","showCloseStatus","CloseServiceRequest","SureCloseServiceRequest","CloseProblem","SureCloseProblem","ReactivateProblem","SureReactivateProblem","showRun","SureConvertToParentRecord","SureRevertToParentRecord","LinktoParentRecord","Run","RunComentMessage","CloseReleaseRecord","SureCloseReleaseRecord","formTasks","label","setTemplateJSONFromSessionAdJSON","Default","msg","alert","typeToSession","templateName","createButtons","scrollTo","ChangeRequestSavedMessage","ServiceRequestSavedMessage","IncidentSavedMessage","ProblemSavedMessage","ReleaseRecordSavedMessage","WorkItemSavedMessage","gotoFormReturnUrl","Apply","sendMentionsMail","processTemplate","givenTemplate","tokens","token","lastIndexOf","isDateValue","parseDate","sendNotificationAsHTML","htmlEntities","valid","ScheduledStartDate","ScheduledEndDate","CheckedManualActivityStartAndEndDate","ScheduledStartDateExceedScheduledEndDate","ActualStartDate","ActualEndDate","ActualStartDateExceedActualEndDate","ScheduledDowntimeStartDate","ScheduledDowntimeEndDate","ScheduledDowntimeStartDateExceedScheduledDowntimeEndDate","ActualDowntimeStartDate","ActualDowntimeEndDate","ActualDowntimeStartDateExceedActualDowntimeEndDate","checkActivityDates","MaActualStartDateExceedActualEndDate","MaScheduledStartDateExceedScheduledEndDate","jqEle","kendoBindingTarget","isEnum","UnAddedActionLogComment","optimizeFormMultiObject","BeforeSave","mailBox","AppliesToTroubleTicket","logs","MentionedUsers","disableActionLogNotification","actionLogNotificationTitle","actionLogNotificationTemplate","DescriptionHTML","AttachedFileName","AppliesToWorkItem","msgResponse","setPriorityByMatrix","priority","Priority","priorityJSONU","Matrix","U","Urgency","I","obj2","Impact","P","setFirstAssignedDateValue","bHasCurrentAssignee","assignedDateEle","FirstAssignedDate","date","isBounded","lastAddedAssignee","addRecordAssignedLog","recordAssigned","isScheduleBounded","setScheduleDuration","scheduledDuration","calculateTimeDuration","actualDuration","scheduledDowntimeDuration","actualDowntimeDuration","startDate","endDate","dtStart","dtEnd","dayDiff","round","hourDiff","getHours","minDiff","getMinutes","ScheduleDurationText","onVmChange","OnVmChange","isClosed","stopEnterKeySubmitting","$taskPanel","affix","offset","top","getBoundingClientRect","yScrollOnResize","bottom"],"mappings":"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","file":"wiMain-built.min.js","sourcesContent":["/*jslint nomen: true */\r\n/*global _, $, app, console, define, kendo, localization, localizationHelper, pageForm */\r\n/*eslint no-console: [\"error\", { allow: [\"log\", \"warn\", \"error\"] }] */\r\n\r\n/**\r\nCustom History Drop Down Tree Binding\r\n**/\r\n\r\nkendo.data.binders.historyDropDownTree = kendo.data.Binder.extend({\r\n    init: function init(element, bindings, options) {\r\n        //call base constructor\r\n        kendo.data.Binder.fn.init.call(this, element, bindings, options);\r\n\r\n        var that = this;\r\n\r\n        if (bindings.options && bindings.options.path) {\r\n            //options are being passed in via data-bind options: {} object\r\n            var optionsObject = bindings.options.source.get();\r\n            that.options.showPath = optionsObject.showPath;\r\n            that.options.mustSelectLeafNode = optionsObject.leafNodeOnly;\r\n            that.options.disabled = optionsObject[bindings.options.path.disabled];\r\n            that.options.required = ($(element).attr(\"required\") === \"required\");\r\n            that.options.filterId = optionsObject.filterId;\r\n            that.options.showClearButton = !_.isUndefined(optionsObject.showClearButton) ? optionsObject.showClearButton : false;\r\n            that.options.placeholder = $(element).attr(\"data-placeholder\");\r\n        } else {\r\n            //options are set as data-* attributes (defined forms)\r\n            var bShowClearButton = $(element).attr(\"data-showclearbutton\") === \"true\" ? true : false;\r\n\r\n            that.options.showPath = $(element).attr(\"data-showpath\") === \"true\" ? true : false;\r\n            that.options.mustSelectLeafNode = $(element).attr(\"data-mustselectleafnode\") === \"true\" ? true : false;\r\n            that.options.disabled = $(element).attr(\"data-disabled\") === \"true\" ? true : false;\r\n            that.options.required = $(element).attr(\"required\") === \"required\";\r\n            that.options.filterId = $(element).attr(\"data-filter\");\r\n            that.options.showClearButton = !_.isUndefined(bShowClearButton) ? bShowClearButton : false;\r\n            that.options.placeholder = $(element).attr(\"data-placeholder\");\r\n        }\r\n\r\n        function getRelatedActivitiesList(viewModel, parentId) {\r\n            parentId = parentId || \"Root\";\r\n            var activityItem = {\r\n                \"ParentId\" : parentId,\r\n                \"Id\": viewModel.BaseId,\r\n                \"Text\": viewModel.Id + \" - \" + viewModel.Title,\r\n                \"Name\": viewModel.Id + \" - \" + viewModel.Title,\r\n                \"HasChildren\": false,\r\n                \"Ordinal\": 0,\r\n                \"EnumNodes\": []\r\n            }\r\n\r\n            that.relatedActivitiesList.push(activityItem);\r\n\r\n            if (!_.isUndefined(viewModel.Activity) && viewModel.Activity.length > 0) {\r\n                activityItem.HasChildren = true;\r\n                _.each(viewModel.Activity, function (activityViewModel) {\r\n                    getRelatedActivitiesList(activityViewModel, activityItem.Id);\r\n                });\r\n            }\r\n        }\r\n\r\n        that.relatedActivitiesList = [];\r\n        getRelatedActivitiesList(pageForm.viewModel);\r\n\r\n        if (app.storage.custom.get(\"debug\")) {\r\n            console.log(\"historyDropDownTree:init\", {\r\n                \"relatedActivitiesList\": that.relatedActivitiesList,\r\n                \"bindings\": bindings,\r\n                \"options\": that.options\r\n            });\r\n        }\r\n    },\r\n    options: {\r\n        name: \"historyDropDownTree\",\r\n        autoBind: false,\r\n        template: \"\",\r\n        showPath: false,\r\n        mustSelectLeafNode: false,\r\n        disabled: false,\r\n        required: false,\r\n        filterId: \"\",\r\n        showClearButton: false\r\n    },\r\n    relatedActivitiesList: [],\r\n    getChildActivities: function getChildActivities(parentId) {\r\n        var that = this;\r\n        return _.filter(that.relatedActivitiesList, function(activity){\r\n            return activity.ParentId === parentId;\r\n        });\r\n    },\r\n    refresh: function refresh() {\r\n        var that = this,\r\n            parameterId,\r\n            treeViewDataSource,\r\n            comboDataSource,\r\n            treeViewOptions,\r\n            comboBoxOptions,\r\n            extOptions,\r\n            combobox;\r\n\r\n        try {\r\n            parameterId = that.bindings[\"historyDropDownTree\"].get();\r\n        } catch (ex) {\r\n            parameterId = eval(that.bindings[\"historyDropDownTree\"].path);\r\n        }\r\n\r\n        if (_.isUndefined(parameterId)) {\r\n            parameterId = \"selectedValue\";\r\n        }\r\n\r\n        if (app.storage.custom.get(\"debug\")) {\r\n            console.log(\"historyDropDownTree:refresh\", {\r\n                \"parameterId\": parameterId\r\n            });\r\n        }\r\n\r\n        //this is necessary in the case when the refresh is called many times and can lead to a stack overflow.\r\n        if (parameterId === that.options.lastParameterId) {\r\n            return;\r\n        }\r\n        that.options.lastParameterId = parameterId;\r\n        that.options.propertyName = that.bindings.value.path;\r\n\r\n        if (that.treeViewWidgetData) {\r\n            that.treeViewWidgetData.destroy();\r\n\r\n            $(that.element).empty();\r\n            //on initial load, if a value is set, then we want it to display, on refresh because the source\r\n            //of the list has changed, we want to clear it so it does not get invalid values.\r\n            that.bindings.value.set({});\r\n        }\r\n\r\n        treeViewDataSource = new kendo.data.HierarchicalDataSource({\r\n            serverFiltering: false,\r\n            transport: {\r\n                read: function (options) {\r\n                    options.filter = options.data.Id || \"Root\";\r\n                    if (app.storage.custom.get(\"debug\")) {\r\n                        console.log(\"historyDropDownTree.treeView:read\", {\r\n                            \"options\": options\r\n                        });\r\n                    }\r\n                    options.success(that.getChildActivities(options.filter));\r\n\r\n                    if (app.storage.custom.get(\"debug\")) {\r\n                        console.log(\"historyDropDownTree.treeView:read\", {\r\n                            \"treeviewData\": that.getChildActivities(options.filter)\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n            schema: {\r\n                model: {\r\n                    id: \"Id\",\r\n                    hasChildren: \"HasChildren\"\r\n                }\r\n            },\r\n            requestEnd: function (e) {\r\n                //wait for datasource to be filled before executing leaf-node-only routine\r\n                _.defer(function () {\r\n                    that.treeViewWidgetData._treeview.expand(\".k-item\");\r\n                    _.each(e.sender._data, function (i, item) {\r\n                        var dataItem = e.sender._data[item],\r\n                            nodeElm,\r\n                            selectedNode;\r\n                        if (that.treeViewWidgetData.options.mustSelectLeafNode && dataItem.HasChildren) {\r\n                            //disable the specific parent's li element only and not the entire treeview node\r\n                            nodeElm = that.treeViewWidgetData._treeview.findByUid(dataItem.uid).find(\"span[role='presentation']\").next();\r\n                            nodeElm.css(\"background\", \"none\");\r\n                            nodeElm.css(\"color\", \"gray\");\r\n                            nodeElm.css(\"border-color\", \"white\");\r\n                            nodeElm.css(\"cursor\", \"default\");\r\n                        }\r\n                        //default node selection to current value\r\n                        if (that.bindings[\"value\"].get().Id === dataItem.Id) {\r\n                            nodeElm = that.treeViewWidgetData._treeview.findByUid(dataItem.uid);\r\n                            selectedNode = (nodeElm.find(\"span[role='presentation']\").length !== 0) ? nodeElm.find(\"span[role='presentation']\").next() : nodeElm.find(\"span\").slice(0, 2);\r\n                            selectedNode.addClass(\"k-state-selected\");\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n        comboDataSource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: function (options) {\r\n                    if (app.storage.custom.get(\"debug\")) {\r\n                        console.log(\"historyDropDownTree.comboBox:read\", {\r\n                            \"options\": options,\r\n                            \"that\": that\r\n                        });\r\n                    }\r\n                    var data = [],\r\n                        filter = (that.treeViewWidgetData) ? that.treeViewWidgetData.handler._dropdown.input.val() : \"\";\r\n                    $.each(that.relatedActivitiesList, function (Key, activity) {\r\n                        if (activity.Name.toLowerCase().indexOf(filter) !== -1) {\r\n                            data.push(activity);\r\n                        }\r\n                    });\r\n\r\n                    if (app.storage.custom.get(\"debug\")) {\r\n                        console.log(\"historyDropDownTree.comboBox:read\", {\r\n                            \"data\": data\r\n                        });\r\n                    }\r\n                    options.success(data);\r\n                }\r\n            },\r\n            schema: {\r\n                model: {\r\n                    id: \"Id\",\r\n                    hasChildren: \"HasChildren\"\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        function getBindingName() {\r\n            var name = that.bindings.value.get(\"\");\r\n            return !_.isNull(name) ? name.Name : \"\";\r\n        };\r\n\r\n        if (app.storage.custom.get(\"debug\")) {\r\n            console.log(\"historyDropDownTree:refresh\", {\r\n                \"bindings.value\": that.bindings.value.get(\"\"),\r\n                \"bindings\": that.bindings,\r\n                \"relatedActivitiesList[0].Name\": _.isUndefined(that.bindings.value.get(\"\")) ? that.relatedActivitiesList[0].Name : getBindingName()\r\n            });\r\n        }\r\n\r\n        treeViewOptions = {\r\n            \"treeView\": {\r\n                \"autoBind\": false,\r\n                \"value\": _.isUndefined(that.bindings.value.get(\"\")) ? that.relatedActivitiesList[0].Name : getBindingName(),\r\n                \"dataSource\": treeViewDataSource,\r\n                \"dataTextField\": \"Name\",\r\n                \"dataValueField\": \"Id\",\r\n                \"loadOnDemand\": false,\r\n                \"change\": function () {\r\n                    var item = this.dataItem(this.select()),\r\n                        vm,\r\n                        propertyName;\r\n                    if (app.storage.custom.get(\"debug\")) {\r\n                        console.log(\"historyDropDownTree.treeView:change\", {\r\n                            \"item\": item\r\n                        });\r\n                    }\r\n\r\n                    if (item && item.HasChildren && that.options.mustSelectLeafNode) {\r\n                        //this is a branch node, not a leaf, so don't set anything\r\n                        return false;\r\n                    } else if (item) {\r\n                        //we let the parent ExtDropDownTree function handle this change -JK\r\n                        //no need to change the vm value again, this caused a double change event to be fired\r\n                        vm = that.bindings.historyDropDownTree.source.get();\r\n\r\n                        if (!(that.options.showPath)) {\r\n                            that.treeViewWidgetData._dropdown.text(that.bindings[\"value\"].source.selectedValue.Name);\r\n                        }\r\n\r\n                        vm.set(\"IsEnumValid\", true);\r\n                        setIsValid(true);\r\n                        setInputDecoration();\r\n                    }\r\n                },\r\n                \"select\": function () {\r\n                    if (app.storage.custom.get(\"debug\")) {\r\n                        console.log(\"historyDropDownTree.treeView:select\");\r\n                    }\r\n                    //we need this empty function to prevent the default ExtDropDownTreeV3 from handeling the select event\r\n                    //if we don't block the default select trigger the change event gets fired twice\r\n                    //a select also triggers a change\r\n                    //this ensure the correct validation\r\n\r\n                    return true;\r\n                },\r\n                \"messages\": {\r\n                    \"loading\": localization.Loading\r\n                }\r\n\r\n            }\r\n        };\r\n\r\n        // comboBox options\r\n        comboBoxOptions = {\r\n            \"comboBox\": {\r\n                \"autoBind\": false,\r\n                \"value\": _.isUndefined(that.bindings.value.get(\"\")) ? that.relatedActivitiesList[0].Name : getBindingName(),\r\n                \"dataTextField\": \"Name\",\r\n                \"dataValueField\": \"Id\",\r\n                \"suggest\": true,\r\n                \"minLength\": 2,\r\n                \"filter\": \"contains\",\r\n                \"placeholder\": localizationHelper.localize(this.options.placeholder, localization.ChooseOne),\r\n                \"dataSource\": comboDataSource,\r\n                \"change\": function () {\r\n                    //this handles all changes to the enum combobox\r\n                    updateViewModel(this);\r\n                },\r\n                \"select\": function () {\r\n                    //we need this empty function to prevent the default ExtDropDownTreeV3 from handeling the select event\r\n                    //if we don't block the default select trigger the change event gets fired twice\r\n                    //a select also triggers a change\r\n                    //this ensure the correct validation\r\n\r\n                    return true;\r\n                },\r\n                \"clearButton\": that.options.showClearButton\r\n            }\r\n        };\r\n\r\n        extOptions = $.extend({\r\n            \"value\": that.bindings.value,\r\n            \"mustSelectLeafNode\": that.options.mustSelectLeafNode\r\n        }, treeViewOptions, comboBoxOptions);\r\n\r\n        that.treeViewWidget = $(that.element).kendoExtDropDownTreeViewV3(extOptions);\r\n        that.treeViewWidgetData = that.treeViewWidget.data(\"kendoExtDropDownTreeViewV3\");\r\n\r\n        combobox = that.treeViewWidgetData._dropdown;\r\n\r\n        //Allow change to vm when item is selected by click event\r\n        combobox.list.on(\"click\", function () {\r\n            updateViewModel(combobox);\r\n        });\r\n\r\n        //Allow change to vm when item is selected by tab and enter event\r\n        combobox.input.on(\"keydown\", function (e) {\r\n            var filter = combobox.dataSource.filter() || { filters: [] };\r\n\r\n            if ((e.keyCode === 9 || e.keyCode === 13) && filter.filters[0]) { //TAB\r\n                updateViewModel(combobox);\r\n            }\r\n        });\r\n\r\n        function updateViewModel(sender) {\r\n            var id = (sender.selectedIndex === -1 || sender.value() === \"00000000-0000-0000-0000-000000000000\") ? null : sender.value(),\r\n                name = sender.selectedIndex === -1 ? null : sender.text(),\r\n                vm = that.bindings.historyDropDownTree.source.get(),\r\n                propertyName = that.bindings.value.path,\r\n                isRequired = that.options.required,\r\n                isEmpty = false,\r\n                isValid = true,\r\n                selectedItem;\r\n\r\n            //did the value actually change\r\n            if (id === vm.get(propertyName).Id) {\r\n                //nothing changed do nothing\r\n                return;\r\n            }\r\n\r\n            if ($(\"html\").hasClass(\"k-ie9\")) {\r\n                isEmpty = (sender.input.val() === \"\" || sender.input.val() === localization.ChooseOne);\r\n            } else {\r\n                isEmpty = (sender.input.val() === \"\");\r\n            }\r\n\r\n            //if a valid value is selected then the selectedIndex will be a positive number\r\n            if (isRequired) {\r\n                if (sender.selectedIndex === -1 || isEmpty) {//required and an invalid selected value or an empty one\r\n                    isValid = false;\r\n                }\r\n            } else if (sender.selectedIndex === -1 && !isEmpty) {//no selected values but we have an entered value\r\n                isValid = false;\r\n            }\r\n\r\n            if (id === name) {\r\n                id = vm.get(propertyName).Id;\r\n            }\r\n\r\n            if (isValid || isEmpty) {\r\n                vm.set(propertyName, {\r\n                    Id: id || \"\",\r\n                    Name: name || \"\"\r\n                });\r\n            }\r\n\r\n            vm.set(\"IsEnumValid\", isValid);\r\n            setIsValid(isValid);\r\n            setInputDecoration();\r\n\r\n            //now select the item in the tree view\r\n            selectedItem = that.treeViewWidgetData._dropdown.dataItem();\r\n            if (!_.isUndefined(selectedItem)) {\r\n                that.treeViewWidgetData._treeview.select(that.treeViewWidgetData._treeview.findByUid(selectedItem.uid));\r\n            } else {\r\n                that.treeViewWidgetData._treeview.select(\"\");\r\n            }\r\n        }\r\n\r\n        //input underline decoration\r\n        function setInputDecoration() {\r\n            var value = that.bindings[\"value\"].get().Name || that.bindings[\"value\"].get().Text;\r\n            if (value && value.length > 0) {\r\n                that.treeViewWidgetData._dropdown.input.css({ \"text-decoration\": \"underline\" });\r\n            } else {\r\n                that.treeViewWidgetData._dropdown.input.css({ \"text-decoration\": \"none\" });\r\n            }\r\n        };\r\n\r\n        //invalid decoration\r\n        function setIsValid(isValid) {\r\n            isValid = isValid || false;\r\n            var targetObj = that.treeViewWidgetData._dropdown.input;\r\n            if (isValid || targetObj.val() === \"\") { //Added targetObj.val()==\"\" so that it will remove the pick background if enum is clear\r\n                targetObj.closest(\".k-dropdown-wrap\").removeClass(\"input-error\");\r\n                targetObj.removeClass(\"input-error\");\r\n            } else {\r\n                targetObj.closest(\".k-dropdown-wrap\").addClass(\"input-error\");\r\n                targetObj.addClass(\"input-error\");\r\n                //leave the value so user can see what they did wrong\r\n            }\r\n        };\r\n\r\n        //display value and make a pretty underline\r\n        //that.treeViewWidgetData._dropdown.value(that.bindings[\"value\"].get().Name);\r\n        setInputDecoration();\r\n\r\n        //leaf node only\r\n        if (that.options.mustSelectLeafNode) {\r\n            $(that.treeViewWidget.children()[0]).find(\"a\").bind(\"click\", function () {\r\n                that.treeViewWidgetData._treeview.dataSource.read();\r\n            });\r\n        }\r\n\r\n        //disable\r\n        if (that.options.disabled) {\r\n            that.treeViewWidgetData._dropdown.enable(false);\r\n            that.treeViewWidgetData._dropdown.input.attr(\"placeholder\", \"\");\r\n            $(that.treeViewWidget.children()[0]).find(\"a\").remove();\r\n        }\r\n\r\n    },\r\n    destroy: function () {\r\n        if (app.storage.custom.get(\"debug\")) {\r\n            console.log(\"historyDropDownTree:destroy\");\r\n        }\r\n        if (this.treeViewWidgetData) {\r\n            $(this.element).removeAttr(\"data-role\");\r\n            $(this.element).empty();\r\n        }\r\n    }\r\n});\ndefine(\"../CustomSpace/Scripts/widgets/historyDropDownTree.js\", function(){});\n\n","/**\r\n * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/requirejs/text for details\r\n */\r\n/*jslint regexp: true */\r\n/*global require, XMLHttpRequest, ActiveXObject,\r\n  define, window, process, Packages,\r\n  java, location, Components, FileUtils */\r\n\r\ndefine('text',['module'], function (module) {\r\n    'use strict';\r\n\r\n    var text, fs, Cc, Ci, xpcIsWindows,\r\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\r\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\r\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\r\n        hasLocation = typeof location !== 'undefined' && location.href,\r\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\r\n        defaultHostName = hasLocation && location.hostname,\r\n        defaultPort = hasLocation && (location.port || undefined),\r\n        buildMap = {},\r\n        masterConfig = (module.config && module.config()) || {};\r\n\r\n    text = {\r\n        version: '2.0.10',\r\n\r\n        strip: function (content) {\r\n            //Strips <?xml ...?> declarations so that external SVG and XML\r\n            //documents can be added to a document without worry. Also, if the string\r\n            //is an HTML document, only the part inside the body tag is returned.\r\n            if (content) {\r\n                content = content.replace(xmlRegExp, \"\");\r\n                var matches = content.match(bodyRegExp);\r\n                if (matches) {\r\n                    content = matches[1];\r\n                }\r\n            } else {\r\n                content = \"\";\r\n            }\r\n            return content;\r\n        },\r\n\r\n        jsEscape: function (content) {\r\n            return content.replace(/(['\\\\])/g, '\\\\$1')\r\n                .replace(/[\\f]/g, \"\\\\f\")\r\n                .replace(/[\\b]/g, \"\\\\b\")\r\n                .replace(/[\\n]/g, \"\\\\n\")\r\n                .replace(/[\\t]/g, \"\\\\t\")\r\n                .replace(/[\\r]/g, \"\\\\r\")\r\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\r\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\r\n        },\r\n\r\n        createXhr: masterConfig.createXhr || function () {\r\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\r\n            var xhr, i, progId;\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                return new XMLHttpRequest();\r\n            } else if (typeof ActiveXObject !== \"undefined\") {\r\n                for (i = 0; i < 3; i += 1) {\r\n                    progId = progIds[i];\r\n                    try {\r\n                        xhr = new ActiveXObject(progId);\r\n                    } catch (e) { }\r\n\r\n                    if (xhr) {\r\n                        progIds = [progId];  // so faster next time\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return xhr;\r\n        },\r\n\r\n        /**\r\n         * Parses a resource name into its component parts. Resource names\r\n         * look like: module/name.ext!strip, where the !strip part is\r\n         * optional.\r\n         * @param {String} name the resource name\r\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\r\n         * where strip is a boolean.\r\n         */\r\n        parseName: function (name) {\r\n            var modName, ext, temp,\r\n                strip = false,\r\n                index = name.indexOf(\".\"),\r\n                isRelative = name.indexOf('./') === 0 ||\r\n                             name.indexOf('../') === 0;\r\n\r\n            if (index !== -1 && (!isRelative || index > 1)) {\r\n                modName = name.substring(0, index);\r\n                ext = name.substring(index + 1, name.length);\r\n            } else {\r\n                modName = name;\r\n            }\r\n\r\n            temp = ext || modName;\r\n            index = temp.indexOf(\"!\");\r\n            if (index !== -1) {\r\n                //Pull off the strip arg.\r\n                strip = temp.substring(index + 1) === \"strip\";\r\n                temp = temp.substring(0, index);\r\n                if (ext) {\r\n                    ext = temp;\r\n                } else {\r\n                    modName = temp;\r\n                }\r\n            }\r\n\r\n            return {\r\n                moduleName: modName,\r\n                ext: ext,\r\n                strip: strip\r\n            };\r\n        },\r\n\r\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\r\n\r\n        /**\r\n         * Is an URL on another domain. Only works for browser use, returns\r\n         * false in non-browser environments. Only used to know if an\r\n         * optimized .js version of a text resource should be loaded\r\n         * instead.\r\n         * @param {String} url\r\n         * @returns Boolean\r\n         */\r\n        useXhr: function (url, protocol, hostname, port) {\r\n            var uProtocol, uHostName, uPort,\r\n                match = text.xdRegExp.exec(url);\r\n            if (!match) {\r\n                return true;\r\n            }\r\n            uProtocol = match[2];\r\n            uHostName = match[3];\r\n\r\n            uHostName = uHostName.split(':');\r\n            uPort = uHostName[1];\r\n            uHostName = uHostName[0];\r\n\r\n            return (!uProtocol || uProtocol === protocol) &&\r\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\r\n                   ((!uPort && !uHostName) || uPort === port);\r\n        },\r\n\r\n        finishLoad: function (name, strip, content, onLoad) {\r\n            content = strip ? text.strip(content) : content;\r\n            if (masterConfig.isBuild) {\r\n                buildMap[name] = content;\r\n            }\r\n            onLoad(content);\r\n        },\r\n\r\n        load: function (name, req, onLoad, config) {\r\n            //Name has format: some.module.filext!strip\r\n            //The strip part is optional.\r\n            //if strip is present, then that means only get the string contents\r\n            //inside a body tag in an HTML string. For XML/SVG content it means\r\n            //removing the <?xml ...?> declarations so the content can be inserted\r\n            //into the current doc without problems.\r\n\r\n            // Do not bother with the work if a build and text will\r\n            // not be inlined.\r\n            if (config.isBuild && !config.inlineText) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            masterConfig.isBuild = config.isBuild;\r\n\r\n            var parsed = text.parseName(name),\r\n                nonStripName = parsed.moduleName +\r\n                    (parsed.ext ? '.' + parsed.ext : ''),\r\n                url = req.toUrl(nonStripName),\r\n                useXhr = (masterConfig.useXhr) ||\r\n                         text.useXhr;\r\n\r\n            // Do not load if it is an empty: url\r\n            if (url.indexOf('empty:') === 0) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            //Load the text. Use XHR if possible and in a browser.\r\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\r\n                text.get(url, function (content) {\r\n                    text.finishLoad(name, parsed.strip, content, onLoad);\r\n                }, function (err) {\r\n                    if (onLoad.error) {\r\n                        onLoad.error(err);\r\n                    }\r\n                });\r\n            } else {\r\n                //Need to fetch the resource across domains. Assume\r\n                //the resource has been optimized into a JS module. Fetch\r\n                //by the module name + extension, but do not include the\r\n                //!strip part to avoid file system issues.\r\n                req([nonStripName], function (content) {\r\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\r\n                                    parsed.strip, content, onLoad);\r\n                });\r\n            }\r\n        },\r\n\r\n        write: function (pluginName, moduleName, write, config) {\r\n            if (buildMap.hasOwnProperty(moduleName)) {\r\n                var content = text.jsEscape(buildMap[moduleName]);\r\n                write.asModule(pluginName + \"!\" + moduleName,\r\n                               \"define(function () { return '\" +\r\n                                   content +\r\n                               \"';});\\n\");\r\n            }\r\n        },\r\n\r\n        writeFile: function (pluginName, moduleName, req, write, config) {\r\n            var parsed = text.parseName(moduleName),\r\n                extPart = parsed.ext ? '.' + parsed.ext : '',\r\n                nonStripName = parsed.moduleName + extPart,\r\n                //Use a '.js' file name so that it indicates it is a\r\n                //script that can be loaded across domains.\r\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\r\n\r\n            //Leverage own load() method to load plugin value, but only\r\n            //write out values that do not have the strip argument,\r\n            //to avoid any potential issues with ! in file names.\r\n            text.load(nonStripName, req, function (value) {\r\n                //Use own write() method to construct full module value.\r\n                //But need to create shell that translates writeFile's\r\n                //write() to the right interface.\r\n                var textWrite = function (contents) {\r\n                    return write(fileName, contents);\r\n                };\r\n                textWrite.asModule = function (moduleName, contents) {\r\n                    return write.asModule(moduleName, fileName, contents);\r\n                };\r\n\r\n                text.write(pluginName, nonStripName, textWrite, config);\r\n            }, config);\r\n        }\r\n    };\r\n\r\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\r\n            typeof process !== \"undefined\" &&\r\n            process.versions &&\r\n            !!process.versions.node &&\r\n            !process.versions['node-webkit'])) {\r\n        //Using special require.nodeRequire, something added by r.js.\r\n        fs = require.nodeRequire('fs');\r\n\r\n        text.get = function (url, callback, errback) {\r\n            try {\r\n                var file = fs.readFileSync(url, 'utf8');\r\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\r\n                if (file.indexOf('\\uFEFF') === 0) {\r\n                    file = file.substring(1);\r\n                }\r\n                callback(file);\r\n            } catch (e) {\r\n                errback(e);\r\n            }\r\n        };\r\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\r\n            text.createXhr())) {\r\n        text.get = function (url, callback, errback, headers) {\r\n            var xhr = text.createXhr(), header;\r\n            xhr.open('GET', url, true);\r\n\r\n            //Allow plugins direct access to xhr headers\r\n            if (headers) {\r\n                for (header in headers) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Allow overrides specified in config\r\n            if (masterConfig.onXhr) {\r\n                masterConfig.onXhr(xhr, url);\r\n            }\r\n\r\n            xhr.onreadystatechange = function (evt) {\r\n                var status, err;\r\n                //Do not explicitly handle errors, those should be\r\n                //visible via console output in the browser.\r\n                if (xhr.readyState === 4) {\r\n                    status = xhr.status;\r\n                    if (status > 399 && status < 600) {\r\n                        //An http 4xx or 5xx error. Signal an error.\r\n                        err = new Error(url + ' HTTP status: ' + status);\r\n                        err.xhr = xhr;\r\n                        errback(err);\r\n                    } else {\r\n                        callback(xhr.responseText);\r\n                    }\r\n\r\n                    if (masterConfig.onXhrComplete) {\r\n                        masterConfig.onXhrComplete(xhr, url);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send(null);\r\n        };\r\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\r\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\r\n        //Why Java, why is this so awkward?\r\n        text.get = function (url, callback) {\r\n            var stringBuffer, line,\r\n                encoding = \"utf-8\",\r\n                file = new java.io.File(url),\r\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\r\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\r\n                content = '';\r\n            try {\r\n                stringBuffer = new java.lang.StringBuffer();\r\n                line = input.readLine();\r\n\r\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\r\n                // http://www.unicode.org/faq/utf_bom.html\r\n\r\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\r\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\r\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\r\n                    // Eat the BOM, since we've already found the encoding on this file,\r\n                    // and we plan to concatenating this buffer with others; the BOM should\r\n                    // only appear at the top of a file.\r\n                    line = line.substring(1);\r\n                }\r\n\r\n                if (line !== null) {\r\n                    stringBuffer.append(line);\r\n                }\r\n\r\n                while ((line = input.readLine()) !== null) {\r\n                    stringBuffer.append(lineSeparator);\r\n                    stringBuffer.append(line);\r\n                }\r\n                //Make sure we return a JavaScript string and not a Java string.\r\n                content = String(stringBuffer.toString()); //String\r\n            } finally {\r\n                input.close();\r\n            }\r\n            callback(content);\r\n        };\r\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\r\n            typeof Components !== 'undefined' && Components.classes &&\r\n            Components.interfaces)) {\r\n        //Avert your gaze!\r\n        Cc = Components.classes,\r\n        Ci = Components.interfaces;\r\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\r\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\r\n\r\n        text.get = function (url, callback) {\r\n            var inStream, convertStream, fileObj,\r\n                readData = {};\r\n\r\n            if (xpcIsWindows) {\r\n                url = url.replace(/\\//g, '\\\\');\r\n            }\r\n\r\n            fileObj = new FileUtils.File(url);\r\n\r\n            //XPCOM, you so crazy\r\n            try {\r\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\r\n                           .createInstance(Ci.nsIFileInputStream);\r\n                inStream.init(fileObj, 1, 0, false);\r\n\r\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\r\n                                .createInstance(Ci.nsIConverterInputStream);\r\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\r\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\r\n\r\n                convertStream.readString(inStream.available(), readData);\r\n                convertStream.close();\r\n                inStream.close();\r\n                callback(readData.value);\r\n            } catch (e) {\r\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\r\n            }\r\n        };\r\n    }\r\n    return text;\r\n});\n","\ndefine('text!forms/tasks/anchor/view.html',[],function () { return '<li class=\"link\" data-bind=\"click: <%= Target %>\"><%= Label %></li>';});\n\n","/**\r\nAnchor\r\n**/\r\n\r\ndefine('forms/tasks/anchor/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = new kendo.View(built(properties), { wrap: false });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/analystByGroup/view.html',[],function () { return '<div id=\"AssignToAnalystByGroupWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div>\\r\\n                <div id=\"groupPicker\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\"form-group\">\\r\\n                <div class=\"control-label\">\\r\\n                    <label><%= localization.AssignedTo %></label>\\r\\n                </div>\\r\\n                <div class=\"editor-field\">\\r\\n                    <input id=\"assignedToCombo\"\\r\\n                           data-role=\"combobox\"\\r\\n                           data-bind=\"source: assignToDataSource, enabled:userEnabled, events: { change: userChange }\"\\r\\n                           data-text-field=\"Name\"\\r\\n                           data-value-field=\"Id\"\\r\\n                           data-placeholder=\"<%=localization.ChooseSupportGroup%>\"></input>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/fields/enum/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <div class=\"form-control form-control-picker input-sm\"\\r\\n         data-url=\"/api/V3/Enum/GetList\"\\r\\n         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n         data-showpath=\"<%= ShowPath %>\"\\r\\n         data-mustselectleafnode=\"<%= LeafNodeOnly %>\"\\r\\n         data-bind=\"ciresonDropDownTree: \\'<%= EnumId %>\\', value: <%= PropertyName %>\"\\r\\n         data-disabled=\"<%= Disabled %>\"\\r\\n         data-role=\"<%= PropertyName %>\"\\r\\n         data-filter=\"<%= FilterIds%>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n        >\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>';});\n\n","/**\r\nENUM - dropDownTree\r\n**/\r\n\r\ndefine('forms/fields/enum/controller',['require','text!forms/fields/enum/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/enum/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                EnumId: '',\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                LeafNodeOnly: false,\r\n                ShowPath: false,\r\n                FilterIds: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/drawerTask/view.html',[],function () { return '<span data-bind=\"visible: showTooltip\" class=\"tooltip-container\" rel=\"dynamictooltip\" title=\"<%= toolTipMessage %>\"></span>\\r\\n<li data-bind=\"click: <%= onClick %>, enabled: isEnabled\"><a data-bind=\"localize: <%= titleKey %>\"></a></li>';});\n\n","/**\r\nanalystByGroup\r\n**/\r\n\r\ndefine('forms/tasks/analystByGroup/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/analystByGroup/view.html','forms/fields/enum/controller','text!forms/tasks/drawerTask/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchorTemplate = require(\"text!forms/tasks/anchor/view.html\");\r\n    var windowTemplate = require(\"text!forms/tasks/analystByGroup/view.html\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n    var drawerTaskTemplate = require(\"text!forms/tasks/drawerTask/view.html\");\r\n\r\n    var definition = {\r\n        template: windowTemplate,\r\n        build: function (vm, node, callback) {\r\n            var callerType = vm.type; //\"Incident\", \"ServiceRequest\", \"BulkEdit\"\r\n            var isBulkEdit = vm.type == \"BulkEdit\";\r\n            var originalAssignedName = null;\r\n            var originalAssignedId = null;\r\n            var originalSupportGroup = null; //Todo: made need to initialize as an object\r\n            var originalSupportName = \"\";\r\n            var originalSupportId = \"00000000-0000-0000-0000-000000000000\";\r\n            var configEnumId;\r\n            var configPropertyName;\r\n\r\n\r\n\r\n            //viewModel set up\r\n            var getTaskViewModel = function (modalView) {\r\n                //this view Model is bound to the anchor element \r\n                var taskVm = kendo.observable({\r\n                    //this is the func that fires on link click\r\n                    analystByGroup: function () {\r\n                        \r\n\r\n                        if (isBulkEdit) {\r\n                            configPropertyName = taskVm.selectedWorkItem.groupPropertyName;\r\n                            configEnumId = taskVm.selectedWorkItem.groupPropertyEnumId;\r\n                        } else {\r\n                            //lets clear out the value for a better UX\r\n                            vm.viewModel.set(\"SupportGroup\", { Id: '', Name: '' });\r\n                            vm.viewModel.set(\"TierQueue\", { Id: '', Name: '' });\r\n                            configPropertyName = node.Configs.propertyName;\r\n                            configEnumId = node.Configs.enumId;\r\n                        }\r\n                        var modalEle = modalView.element.clone();\r\n                        var modalControl = modalEle.kendoCiresonWindow({\r\n                            title: localization.AssignToAnalystByGroup,\r\n                            width: 500,\r\n                            height: 300,\r\n                            actions: []\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //this view Model is bound to the window element\r\n                        var windowViewModal = kendo.observable({\r\n                            propertyName: configPropertyName,       //IR: \"TierQueue\", SR: \"SupportGroup\"\r\n                            enumId: configEnumId,                   //IR: IncidentTierQueue (enum), SR: ServiceRequestSupportGroup (enum)\r\n                            assignToDataSource: getUserDataSource(\"00000000-0000-0000-0000-000000000000\"),\r\n                            userEnabled: false,\r\n                            okEnabled: false,\r\n                            userChange: function (e) {\r\n                                if (isBulkEdit) {\r\n                                    taskVm.set(\"assignedWorkItem.displayName\", e.sender._prev);\r\n                                    taskVm.set(\"assignedWorkItem.baseId\", e.sender.value());\r\n                                } else {\r\n                                    //clear them out first\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", null);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", null);\r\n\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", e.sender._prev);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", e.sender.value());\r\n                                }\r\n                            },\r\n                            okClick: function () {\r\n                                modalControl.close();\r\n                                if (isBulkEdit) {\r\n                                    app.lib.mask.apply();\r\n                                    var postData = {\r\n                                        ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                        UpdateServiceManagement: true,\r\n                                        ItemIds: _.pluck(taskVm.currentSelection, 'BaseId'),\r\n                                        EditedFields: getBulkEditedFieldData(taskVm)\r\n                                    }\r\n\r\n                                    $.ajax({\r\n                                        url: '/api/v3/workitem/BulkEditWorkItems/',\r\n                                        data: JSON.stringify(postData),\r\n                                        dataType: 'json',\r\n                                        contentType: 'application/json',\r\n                                        type: \"POST\",\r\n                                        success: function() {\r\n                                            onBulkEditSaveSuccess(taskVm);\r\n                                        },\r\n                                        error: function() {\r\n                                            onBulkEditSaveFailure();\r\n                                        }\r\n                                    });\r\n\r\n                                } else {\r\n                                    //form task:\r\n                                    //replace original values with new saved values\r\n                                    originalAssignedName = vm.viewModel.AssignedWorkItem.get(\"DisplayName\");\r\n                                    originalAssignedId = vm.viewModel.AssignedWorkItem.get(\"BaseId\");\r\n\r\n                                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                                        originalSupportGroup = vm.viewModel.get(\"TierQueue\");\r\n                                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                                        originalSupportGroup = vm.viewModel.get(\"SupportGroup\");\r\n                                    }\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                modalControl.close();\r\n                                if (isBulkEdit) {\r\n                                    taskVm.set(\"assignedWorkItem.displayName\", null);\r\n                                    taskVm.set(\"assignedWorkItem.baseId\", null);\r\n                                } else {\r\n                                    //lets clean the model\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", null);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", null);\r\n\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", originalAssignedName);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", originalAssignedId);\r\n\r\n                                    \r\n                                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                                        vm.viewModel.set(\"TierQueue\", originalSupportGroup);\r\n                                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                                        vm.viewModel.set(\"SupportGroup\", originalSupportGroup);\r\n                                    }\r\n                                }\r\n                            },\r\n                        });\r\n\r\n                        var createGroupPicker = function (windowViewModal, modalEle) { \r\n                            var groupProperties = {\r\n                                PropertyName: windowViewModal.propertyName,\r\n                                PropertyDisplayName: \"SupportGroup\",\r\n                                EnumId: windowViewModal.enumId\r\n                            };\r\n                            buildEnumPicker(modalEle.find('#groupPicker'), groupProperties, vm.viewModel);\r\n\r\n                            //get the enum picker elm\r\n                            var groupPicker = modalEle.find('div[data-role=\"' + windowViewModal.propertyName + '\"]');\r\n\r\n                            //make sure we have a group picker object and we don't error\r\n                            if (groupPicker) {\r\n                                //get got handlers for event binding\r\n                                var groupDropDownControl = groupPicker.data().handler._dropdown;\r\n                                var groupTreeViewControl = groupPicker.data().handler._treeview;\r\n\r\n                                //bind group picker changes events\r\n                                groupDropDownControl.bind(\"change\", function (e) {\r\n                                    var item = this.dataItem(this.select());\r\n                                    var assignToCombobox = modalEle.find(\"#assignedToCombo\").data(\"kendoComboBox\");\r\n                                    setSupportGroupUsers(item, windowViewModal, assignToCombobox);\r\n                                    taskVm.set(\"assignedSupportGroup\", item);\r\n                                });\r\n                                groupTreeViewControl.bind(\"change\", function (e) {\r\n                                    var item = this.dataItem(this.current());\r\n                                    var assignToCombobox = modalEle.find(\"#assignedToCombo\").data(\"kendoComboBox\");\r\n                                    setSupportGroupUsers(item, windowViewModal, assignToCombobox);\r\n                                    taskVm.set(\"assignedSupportGroup\", item);\r\n                                });\r\n                            }\r\n                        };\r\n\r\n                        //form field helper\r\n                        var buildEnumPicker = function (container, props, vmModel) {\r\n                            enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                                container.html(enumControl);\r\n                                app.controls.apply(container, {\r\n                                    localize: true,\r\n                                    vm: vmModel,\r\n                                    bind: true\r\n                                });\r\n                            });\r\n                        };\r\n\r\n\r\n                        //bind window element to window viewModel\r\n                        kendo.bind(modalEle, windowViewModal);\r\n                        //create status enumPicker\r\n                        createGroupPicker(windowViewModal, modalEle);\r\n\r\n                        modalEle.removeClass('hide');\r\n                        modalEle.show();\r\n\r\n                        modalControl.refresh();\r\n                        modalControl.open();\r\n                    }\r\n                });\r\n\r\n                return taskVm;\r\n            };\r\n            //addition viewModel set up for bulk task\r\n            var setAdditionBulkTaskProperties = function (anchorViewModel) {\r\n                var drawerTaskVm = anchorViewModel;\r\n                //this view Model is bound to the anchor element \r\n                drawerTaskVm.currentSelection = [];\r\n                drawerTaskVm.selectedWorkItem = {\r\n                    type: '',\r\n                    projectionId: '',\r\n                    groupPropertyName: '',\r\n                    groupPropertyEnumId: '',\r\n                };\r\n                drawerTaskVm.assignedWorkItem = {\r\n                    displayName: \"\",\r\n                    baseId: \"\"\r\n                },\r\n                drawerTaskVm.isEnabled = false;\r\n                drawerTaskVm.showTooltip = true;\r\n                drawerTaskVm.setEnabled = function (enabled) {\r\n                    this.set('isEnabled', enabled);\r\n                    this.set('showTooltip', !enabled);\r\n                };;\r\n                drawerTaskVm.targetControlId = '';\r\n                drawerTaskVm.onTargetControlChange = function (grid) {\r\n                    var selectedDataItems = [];\r\n                    if (app.isMobile()) {\r\n                        //grid is selected items array when called from mobile\r\n                        selectedDataItems = grid;\r\n                    } else {\r\n                        selectedDataItems = grid.select().map(function (index, item) {\r\n                            return grid.dataItem($(item));\r\n                        }).toArray();\r\n                    }\r\n\r\n                    //we only update 10 items at a time\r\n                    if (selectedDataItems.length > 10) {\r\n                        onExceedSelectionCount();\r\n                    }\r\n\r\n                    anchorViewModel.set('currentSelection', selectedDataItems);\r\n\r\n                    //if nothing is selected disabled the item\r\n                    if (selectedDataItems.length <= 0 || selectedDataItems.length > 10) {\r\n                        drawerTaskVm.setEnabled(false);\r\n                    } else {\r\n                        var selectedTypes = _.pluck(selectedDataItems, \"WorkItemType\");\r\n                        var selectedStatusNames = _.pluck(selectedDataItems, \"Status\");\r\n\r\n                        //return false if multiple selected, otherwise returns string values\r\n                        var singleSelectedType = _.reduce(selectedTypes, function (memo, currentVal) {\r\n                            return (memo === currentVal) ? memo : false;\r\n                        });\r\n                        drawerTaskVm.set(\"selectedWorkItem.type\", singleSelectedType);\r\n\r\n                        var singleSelectedStatusName = _.reduce(selectedStatusNames, function (memo, currentVal) {\r\n                            return (memo === currentVal) ? memo : false;\r\n                        });\r\n\r\n                        if (singleSelectedType) {\r\n                            switch (singleSelectedType) {\r\n                                case \"System.WorkItem.ServiceRequest\":\r\n                                    drawerTaskVm.setTrimmedWiType();\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemServiceRequestViewModel);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', 'SupportGroup');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', app.constants.enumPickerIds.ServiceRequestSupportGroup);\r\n                                    //if SR is closed do not allow status change from here (TFS 3560)\r\n                                    if (singleSelectedStatusName === \"Closed\") {\r\n                                        drawerTaskVm.setEnabled(false);\r\n                                    } else {\r\n                                        drawerTaskVm.setEnabled(true);\r\n                                    }\r\n                                    break;\r\n                                case \"System.WorkItem.Incident\":\r\n                                    drawerTaskVm.setTrimmedWiType();\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemIncidentViewModel);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', 'TierQueue');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', app.constants.enumPickerIds.IncidentTierQueue);\r\n                                    drawerTaskVm.setEnabled(true);\r\n                                    break;\r\n                                default:\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', '');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', '');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', '');\r\n                                    // not a supported bulk edit Type, disable the edit button\r\n                                    drawerTaskVm.setEnabled(false);\r\n                            }\r\n                        } else {\r\n                            //not same type && status\r\n                            drawerTaskVm.setEnabled(false);\r\n                        }\r\n                    }\r\n                };\r\n                anchorViewModel.setTrimmedWiType = function () {\r\n                    this.set('selectedWorkItem.trimmedType', this.selectedWorkItem.type.split(/[\\s.]+/).pop());\r\n                };\r\n\r\n\r\n            };\r\n            //helper functions\r\n            var getBulkEditedFieldData = function (viewModel) {\r\n                var json = [];\r\n\r\n                switch (viewModel.selectedWorkItem.trimmedType) {\r\n                    case \"Incident\":\r\n                        json = [\r\n                           { \r\n                                PropertyName: \"TierQueue\",\r\n                                EditedValue: viewModel.assignedSupportGroup.Id,\r\n                                PropertyType: \"enum\"\r\n                           },\r\n                           {\r\n                                PropertyName: \"AssignedWorkItem\",\r\n                                EditedValue: viewModel.assignedWorkItem.baseId,\r\n                                PropertyType: \"singleCardinalityObject\",\r\n                                PropertyRelationshipId: \"15e577a3-6bf9-6713-4eac-ba5a5b7c4722\" //magic guid\r\n                            },\r\n                            {\r\n                                PropertyName: \"AppliesToTroubleTicket\",\r\n                                PropertyType: \"multiplecardinalityobject\",\r\n                                PropertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //more magic!\r\n                                EditedValue: {\r\n                                    ActionType: {\r\n                                        Id: \"b04370d9-3d4f-3981-61bb-ac9462a1fe65\", //magic?\r\n                                        Name: \"Record Assigned\"\r\n                                    },\r\n                                    Description: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    DescriptionDisplay: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    EnteredBy: session.user.Name,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Title: localization.RecordAssigned,\r\n                                    Image: app.config.iconPath + app.config.icons[\"Record Assigned\"]\r\n                                }\r\n                            }\r\n                        ];\r\n                        break;\r\n                    case \"ServiceRequest\":\r\n                        json = [\r\n                            {\r\n                                PropertyName: \"SupportGroup\",\r\n                                EditedValue: viewModel.assignedSupportGroup.Id,\r\n                                PropertyType: \"enum\"\r\n                            },\r\n                            {\r\n                                PropertyName: \"AssignedWorkItem\",\r\n                                EditedValue: viewModel.assignedWorkItem.baseId,\r\n                                PropertyType: \"singleCardinalityObject\",\r\n                                PropertyRelationshipId: \"15e577a3-6bf9-6713-4eac-ba5a5b7c4722\" //magic guid\r\n                            },\r\n                            {\r\n                                PropertyName: \"AppliesToWorkItem\",\r\n                                PropertyType: \"multiplecardinalityobject\",\r\n                                PropertyRelationshipId: \"79d27435-5917-b0a1-7911-fb2b678f32a6\", //more magic!\r\n                                EditedValue: {\r\n                                    ActionType: {\r\n                                        Id: \"b04370d9-3d4f-3981-61bb-ac9462a1fe65\", //magic?\r\n                                        Name: \"Record Assigned\"\r\n                                    },\r\n                                    Description: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    DescriptionDisplay: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    EnteredBy: session.user.Name,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Title: localization.RecordAssigned,\r\n                                    Image: app.config.iconPath + app.config.icons[\"Record Assigned\"]\r\n                                }\r\n                            }\r\n                        ];\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                return json;\r\n            }\r\n            var onExceedSelectionCount = function () {\r\n                kendo.ui.ExtAlertDialog.show({\r\n                    title: localizationHelper.localize('Warning'),\r\n                    message: localizationHelper.localize('BulkEditExceedMessage')\r\n                });\r\n            }\r\n            var onBulkEditSaveSuccess = function (taskVm) {\r\n                if (app.isMobile()) {\r\n                    var listControl = $(\"[data-control-id='\" + taskVm.targetControlId + \"']\").data('kendoListView');\r\n                    listControl.dataSource.query();\r\n                } else {\r\n                    //refresh the grid to get updated data.\r\n                    var targetGrid = $('#' + taskVm.targetControlId).data('kendoGrid');\r\n                    var targetGridState = app.gridUtils.savedState.getCurrentState(taskVm.targetControlId);\r\n                    app.lib.recheckGridState(targetGridState, targetGrid);\r\n                    targetGrid.dataSource.query(targetGridState);\r\n                }\r\n                app.lib.message.add(localizationHelper.localize('SaveSuccessMessage'), \"success\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var onBulkEditSaveFailure = function () {\r\n                app.lib.message.add(localizationHelper.localize('SaveErrorMessage'), \"danger\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var getOriginalFormValues = function () {\r\n                if (!_.isUndefined(vm.viewModel.AssignedWorkItem)) {\r\n                    originalAssignedName = vm.viewModel.AssignedWorkItem.DisplayName;\r\n                    originalAssignedId = vm.viewModel.AssignedWorkItem.BaseId;\r\n                }\r\n\r\n                if (callerType == \"Incident\") {\r\n                    originalSupportGroup = vm.viewModel.TierQueue;\r\n                    originalSupportName = (!_.isNull(vm.viewModel.TierQueue) && !_.isUndefined(vm.viewModel.TierQueue))\r\n                                                ? vm.viewModel.TierQueue.Name\r\n                                                : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel.TierQueue) && !_.isUndefined(vm.viewModel.TierQueue))\r\n                                                  ? vm.viewModel.TierQueue.Id\r\n                                                  : \"00000000-0000-0000-0000-000000000000\";\r\n                } else if (callerType == \"ServiceRequest\") {\r\n                    originalSupportGroup = vm.viewModel.SupportGroup;\r\n                    originalSupportName = (!_.isNull(vm.viewModel.SupportGroup) && !_.isUndefined(vm.viewModel.SupportGroup))\r\n                                          ? vm.viewModel.SupportGroup.Name : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel.SupportGroup) && !_.isUndefined(vm.viewModel.SupportGroup))\r\n                                            ? vm.viewModel.SupportGroup.Id : \"00000000-0000-0000-0000-000000000000\";\r\n                }\r\n                originalSupportGroup.Text = originalSupportGroup.Name; //Need this so mapping works later on :-( .  \r\n            }\r\n            var getUserDataSource = function (selectedSupportGroupId) {\r\n                var userDataSource = new kendo.data.DataSource({\r\n                    transport: {\r\n                        read: {\r\n                            url: app.lib.addUrlParam(\"/api/V3/User/GetSupportGroupUsers\", \"id\", selectedSupportGroupId),\r\n                            dataType: \"json\"\r\n                        }\r\n                    },\r\n                    schema: {\r\n                        model: {\r\n                            fields: {\r\n                                Id: { type: \"string\" },\r\n                                Name: { type: \"string\" }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                return userDataSource;\r\n            }\r\n            var setSupportGroupUsers = function (item, vmWindow, asssignToComboBox) {\r\n                if (_.isUndefined(item)) {\r\n                    return;\r\n                }\r\n\r\n                if (!isBulkEdit) {\r\n                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                        vm.viewModel.set(\"TierQueue\", item);\r\n                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                        vm.viewModel.set(\"SupportGroup\", item);\r\n                    }\r\n                }\r\n                vmWindow.set(\"userEnabled\", true);\r\n                vmWindow.set(\"okEnabled\", true);\r\n\r\n                vmWindow.set(\"assignToDataSource\", getUserDataSource(item.Id));\r\n                vmWindow.assignToDataSource.bind(\"change\", function (e) {\r\n                    asssignToComboBox.focus();\r\n                    asssignToComboBox.value(\"\");\r\n                    asssignToComboBox.input.attr(\"placeholder\", localization.ChooseOne);\r\n                });\r\n            }\r\n            var buildAndRender = {\r\n                windowEle: function () {\r\n                    //build the template for the window\r\n                    var built = _.template(windowTemplate);\r\n                    var view = new kendo.View(built(), { wrap: false });\r\n                    //add in hidden window\r\n                    callback(view.render());\r\n                    view.destroy();//there is some issue with the cloned element if we don't destroy the view\r\n                    return view;\r\n                },\r\n                taskListItem: function (properties, anchorViewModel, template) {\r\n                    $.extend(true, properties, node);\r\n                    //build the anchor and bind viewModel to it\r\n                    var builtAnchor = _.template(template);\r\n                    var anchorElm = new kendo.View(builtAnchor(properties), {\r\n                        wrap: false, model: anchorViewModel\r\n                    });\r\n                    //send anchor element back to caller (appended in the callback)\r\n                    callback(anchorElm.render());\r\n                    return anchorElm;\r\n                }\r\n            }\r\n            /* initialization code*/\r\n            function initTask() {\r\n                //build and render window\r\n                var modalView = buildAndRender.windowEle();\r\n                //save orig values for defined form\r\n                if (!isBulkEdit) {\r\n                    getOriginalFormValues();\r\n                }\r\n                //get the view models\r\n                var formTaskViewModel = getTaskViewModel(modalView);\r\n\r\n                if (isBulkEdit) {\r\n                    setAdditionBulkTaskProperties(formTaskViewModel);\r\n                    buildAndRender.taskListItem({ onClick: \"analystByGroup\", toolTipMessage: localizationHelper.localize('MustSelectSameType') }, formTaskViewModel, drawerTaskTemplate);\r\n                    /*subscribe to events*/\r\n                    if (!app.isMobile()) {\r\n                        //called on grid row clicks\r\n                        app.events.subscribe(\"gridChange\", function(event, grid) {\r\n                            formTaskViewModel.onTargetControlChange(grid);\r\n                            formTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                        });\r\n\r\n                        //for initial grid load listen to this event so we can set persisted state information\r\n                        app.events.subscribe(\"gridBound\", function(event, grid) {\r\n                            formTaskViewModel.onTargetControlChange(grid);\r\n                            formTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                        });\r\n                    } else {\r\n                        //called on mobile listview checkbox selection\r\n                        app.events.subscribe(\"mobileWiListSelectionChange\", function (event, listView) {\r\n                            if (!_.isUndefined(listView)) {\r\n                                formTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                                formTaskViewModel.targetControlId = listView.controlId;\r\n                            }\r\n                        });\r\n                        app.events.subscribe(\"mobileWiListInit\", function (event, listView) {\r\n                            if (!_.isUndefined(listView)) {\r\n                                formTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                                formTaskViewModel.targetControlId = listView.controlId;\r\n                            }\r\n                        });\r\n                    }\r\n                    /*END subscribe to events*/\r\n\r\n                    \r\n                } else {\r\n                    //build and render the link\r\n                    buildAndRender.taskListItem({ Target: \"analystByGroup\" }, formTaskViewModel, anchorTemplate);\r\n                }\r\n\r\n            };\r\n\r\n            /* END initialization code*/\r\n\r\n            //do it\r\n            initTask();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/popups/notificationPopup/view.html',[],function () { return '<div class=\"popupNotification\"></div>';});\n\n","/**\r\nAssign To Me\r\n**/\r\n\r\ndefine('forms/tasks/assignToMe/controller',['require','text!forms/tasks/anchor/view.html','text!forms/popups/notificationPopup/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var notificationTpl = require(\"text!forms/popups/notificationPopup/view.html\");\r\n\r\n    var definition = {\r\n        notificationTemplate: notificationTpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(notificationTpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var viewModel = kendo.observable({\r\n                displayName: node.Configs.displayName,\r\n                baseId: node.Configs.baseId,\r\n                target: node.Configs.target,\r\n                assignToMe: function () {\r\n                    //set AssingedWorkitem to current user\r\n                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", this.baseId);\r\n                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", this.displayName);\r\n\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.AssignedToMeNotificationMessage, \"This workitem is assigned to {0}\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"assignToMe\"\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/changeStatus/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"statusPicker\" />\\r\\n            <div id=\"resolutionPicker\" data-bind=\"visible: showResolution\" />\\r\\n            <div id=\"resolutionDescription\" data-bind=\"visible: showResolution\" />\\r\\n            <div id=\"comment\" data-bind=\"visible: showComment\" />\\r\\n            <div id=\"autoResolve\" data-bind=\"visible: showAutoResolve\" />\\r\\n            <div id=\"letAnalystDecide\" data-bind=\"visible: letAnalystDecide\" />\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/tasks/changeStatus/view.drawer.html',[],function () { return '<div class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <!-- status picker for IR or SR statuses -->\\r\\n            <div class=\"form-group\">\\r\\n                <label class=\"control-label\" data-bind=\"localize: Status\">\\r\\n                </label>\\r\\n                <div class=\"form-control form-control-picker input-sm\"\\r\\n                     data-role=\"Status\"\\r\\n                     data-url=\"/api/V3/Enum/GetList\"\\r\\n                     data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                     data-disabled=\"false\"\\r\\n                     data-bind=\"ciresonDropDownTree: wiStatusTypeId, value: newStatusObj, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n            </div>\\r\\n            <!-- resolution category picker for IR -->\\r\\n            <div data-bind=\"visible: irStatusResolved\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: ResolutionCategory\"></span> (<span data-bind=\"localize: Required\"></span>)\\r\\n                    </label>\\r\\n                    <div class=\"form-control form-control-picker input-sm\"\\r\\n                         data-role=\"Resolution\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-disabled=\"false\"\\r\\n                         data-bind=\"ciresonDropDownTree: resolutionResultEnumId, value: newResolutionId, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n\\r\\n                </div>\\r\\n                <!-- resolution description for IR -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\" data-bind=\"localize: ResolutionDescription\">\\r\\n                    </label>\\r\\n                    <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                              data-bind=\"value: resolutionDescription\" maxlength=\"4000\"></textarea>\\r\\n                </div>\\r\\n\\r\\n                <!-- resolve child incidents: let analyst decide option-->\\r\\n                <div class=\"form-group\" data-bind=\"visible: irResolveChildOption\">\\r\\n                    <div class=\"checkbox  checkbox-inline \">\\r\\n                        <input type=\"checkbox\" name=\"resolveChildIncident\" data-bind=\"checked: resolveChildIncident\">\\r\\n                        <label class=\"control-label\" for=\"resolveChildIncident\">\\r\\n                            <span data-bind=\"localize: ResolveChildIncidentMessage\" />\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div data-bind=\"visible: srStatusCompleted\">\\r\\n                <!-- SR Implementation Results -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: ImplementationResults\"></span>\\r\\n                    </label>\\r\\n                    <div class=\"form-control form-control-picker input-sm\"\\r\\n                         data-role=\"Resolution\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-disabled=\"false\"\\r\\n                         data-bind=\"ciresonDropDownTree: resolutionResultEnumId, value: newResultId, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n\\r\\n                </div>\\r\\n                <!-- SR Implementation Notes -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: Implementationnotes\"></span> (<span data-bind=\"localize: Required\"></span>)\\r\\n                    </label>\\r\\n                    <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                              data-bind=\"value: resultNote\" maxlength=\"4000\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- comment for SR in \\'Cancelled\\' status -->\\r\\n            <div class=\"form-group\" data-bind=\"visible: srStatusCancelled\">\\r\\n                <label class=\"control-label\" data-bind=\"localize: Comment\">\\r\\n                </label>\\r\\n                <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                          data-bind=\"value: resultComment\" maxlength=\"4000\"></textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\" class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled,\\r\\n                           events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\" class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/fields/longstring/view.html',[],function () { return '<div class=\"form-group <%= visible %>\" style=\"\">\\r\\n\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <textarea name=\"<%= PropertyName %>\"\\r\\n              class=\"k-textbox form-control input-sm\"\\r\\n              rows=\"<%= Rows %>\"\\r\\n              data-bind=\"value: <%= PropertyName %><% if ( LimitLength ){ %>, events : { blur: view.longStringController.CheckLength }<% } %>\"\\r\\n        <% if ( LimitLength ){ %>\\r\\n        maxlength=\"<%= MaxLength %>\"\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    </textarea>\\r\\n    <% if ( LimitLength ){ %>\\r\\n    <p class=\"help-block validation-summary-errors\" style=\"display: none;\"><%= localization.MaxLengthError.replace(\"{0}\", MaxLength) %></p>\\r\\n    <% } %>\\r\\n</div>\\r\\n<script>\\r\\n    $(\\'textarea[name=ResolutionDescription]\\').removeClass(\\'form-control\\');\\r\\n</script>\\r\\n';});\n\n","/**\r\nLONGSTRING\r\n**/\r\n\r\ndefine('forms/fields/longstring/controller',['require','text!forms/fields/longstring/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/longstring/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.longStringController = {\r\n                CheckLength: function checkLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n            vm.view.buildLongStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength,\r\n                    Rows: 10,\r\n                    visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n                };\r\n                $.extend(true, properties, node);\r\n                //console.log(properties);\r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildLongStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\r\n\n","\ndefine('text!forms/fields/boolean/view.html',[],function () { return '<div class=\"form-group <%= visible %>\">\\r\\n    <% if ( !Inline ){ %>\\r\\n    <label class=\"control-label\" data-localize=\"<%= PropertyDisplayName %>\"><span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span></label>\\r\\n    <% } %>\\r\\n\\r\\n    <div class=\"checkbox <% if ( Inline ){ %> checkbox-inline <% } else { %> checkbox-block <% } %>\">\\r\\n        <input type=\"checkbox\"\\r\\n               name=\"<%= PropertyName %>\"\\r\\n               id=\"<%= PropertyName %>\"\\r\\n               data-bind=\"checked: <%= PropertyName %>\"<% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        />\\r\\n\\r\\n\\r\\n        <label class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n            <% if ( Inline ){ %>\\r\\n            <span data-localize=\"<%= PropertyDisplayName %>\"></span>\\r\\n            <% } %>\\r\\n        </label>\\r\\n\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nBOOLEAN\r\n**/\r\n\r\ndefine('forms/fields/boolean/controller',['require','text!forms/fields/boolean/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/boolean/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Inline: node.Inline || false,\r\n                visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n        };\r\n            \r\n            \r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/changeStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/changeStatus/view.html','text!forms/tasks/changeStatus/view.drawer.html','forms/fields/enum/controller','forms/fields/longstring/controller','forms/fields/boolean/controller','text!forms/tasks/drawerTask/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchorTemplate = require(\"text!forms/tasks/anchor/view.html\");\r\n    var changeStatusTemplate = require(\"text!forms/tasks/changeStatus/view.html\");\r\n    var changeStatusDrawerTemplate = require(\"text!forms/tasks/changeStatus/view.drawer.html\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n    var txtAreaControl = require(\"forms/fields/longstring/controller\");\r\n    var checkBoxControl = require(\"forms/fields/boolean/controller\");\r\n    var drawerTaskTemplate = require(\"text!forms/tasks/drawerTask/view.html\");\r\n\r\n    var definition = {\r\n        template: changeStatusTemplate,\r\n        build: function (vm, node, callback) {\r\n            /*\r\n             * Change mustSelectLeafNode and/or showEnumPath to modify\r\n             * bulk status change enum picker behavior. \r\n             */\r\n            var mustSelectLeafNode = false;\r\n            var showEnumPath = false;\r\n\r\n            //for problem's autoresolve \r\n            if (vm.type == \"Problem\" && _.isUndefined(vm.viewModel.IsAutoResolve)) {\r\n                vm.viewModel.set(\"IsAutoResolve\", vm.viewModel.AutoResolve);\r\n            }\r\n\r\n            /* variables */\r\n            var resolveChildIncidentSettings;\r\n            if (vm.type != \"BulkEdit\") {\r\n                //used for cancel click event on form task\r\n                var originalVm = {\r\n                    Status: _.clone(vm.viewModel.Status),\r\n                    ResolutionCategory: !_.isUndefined(vm.viewModel.ResolutionCategory) ? _.clone(vm.viewModel.ResolutionCategory) : null,\r\n                    ResolutionDescription: _.clone(vm.viewModel.ResolutionDescription),\r\n                    ChildWorkItem: _.clone(vm.viewModel.ChildWorkItem),\r\n                    Notes: _.clone(vm.viewModel.Notes),\r\n                    ImplementationResults: !_.isUndefined(vm.viewModel.ImplementationResults) ? _.clone(vm.viewModel.ImplementationResults) : null,\r\n                    RelatesToWorkItem: _.clone(vm.viewModel.RelatesToWorkItem),\r\n                    Resolution: !_.isUndefined(vm.viewModel.Resolution) ? _.clone(vm.viewModel.Resolution) : null,\r\n                    AutoResolve: !_.isUndefined(vm.viewModel.AutoResolve) ? _.clone(vm.viewModel.AutoResolve) : false,\r\n                }\r\n            }\r\n            var workItemStatuses = app.constants.workItemStatuses;\r\n            //map all the status constants to shorter local vars. used in getFormTaskViewModel() and getFormTaskChangeRules()\r\n            var incidentResolved = workItemStatuses.Incident.Resolved;\r\n            var incidentActive = workItemStatuses.Incident.Active;\r\n            var incidentClosed = workItemStatuses.Incident.Closed;\r\n            var incidentActivePending = workItemStatuses.Incident.Pending;\r\n            var serviceRequestCancelled = workItemStatuses.ServiceRequest.Cancelled;\r\n            var serviceRequestCompleted = workItemStatuses.ServiceRequest.Completed;\r\n            var serviceRequestSubmitted = workItemStatuses.ServiceRequest.Submitted;\r\n            var serviceRequestInProgress = workItemStatuses.ServiceRequest.InProgress;\r\n            var serviceRequestOnHold = workItemStatuses.ServiceRequest.OnHold;\r\n            var serviceRequestFailed = workItemStatuses.ServiceRequest.Failed;\r\n            var serviceRequestClosed = workItemStatuses.ServiceRequest.Closed;\r\n            var changeRequestFailed = workItemStatuses.ChangeRequest.Failed;\r\n            var changeRequestClosed = workItemStatuses.ChangeRequest.Closed;\r\n            var changeRequestInProgress = workItemStatuses.ChangeRequest.InProgress;\r\n            var changeRequestOnHold = workItemStatuses.ChangeRequest.OnHold;\r\n            var changeRequestCancelled = workItemStatuses.ChangeRequest.Cancelled;\r\n            var changeRequestSubmitted = workItemStatuses.ChangeRequest.Submitted;\r\n            var changeRequestCompleted = workItemStatuses.ChangeRequest.Completed;\r\n            var problemResolved = workItemStatuses.Problem.Resolved;\r\n            var problemClosed = workItemStatuses.Problem.Closed;\r\n            var releaseRecordClosed = workItemStatuses.ReleaseRecord.Closed;\r\n            var releaseRecordCancelled = workItemStatuses.ReleaseRecord.Cancelled;\r\n            var releaseRecordCompleted = workItemStatuses.ReleaseRecord.Completed;\r\n            var releaseRecordFailed = workItemStatuses.ReleaseRecord.Failed;\r\n            var releaseRecordEditing = workItemStatuses.ReleaseRecord.Editing;\r\n            var releaseRecordOnHold = workItemStatuses.ReleaseRecord.OnHold;\r\n            var releaseRecordInProgress = workItemStatuses.ReleaseRecord.InProgress;\r\n            /* END variables */\r\n\r\n\r\n            /* functions */\r\n            //main viewModel that holds ALL THE THINGS\r\n            var getFormTaskViewModel = function (modalEle) {\r\n                return kendo.observable({\r\n                    //'changeStatus' function is bound to anchor click event via data-bind=\"click: blahblah\"\r\n                    changeStatus: function () {\r\n                        var modalWindowEle = modalEle.element.clone(); //we have the element in memory so no need use a selector\r\n\r\n                        var modalWindowControl = modalWindowEle.kendoCiresonWindow({\r\n                            title: localization.ChangeStatusTask,\r\n                            width: 600,\r\n                            height: 480,\r\n                            actions: [],\r\n                            //activate trigger when window open animation is complete.\r\n                            activate: function () {\r\n                                var selectedWiType = modalWindowViewModel.type;\r\n                                var currentStatusId = vm.viewModel.Status.Id;\r\n                                onModalActivate(selectedWiType, currentStatusId, statusTreeViewControl, statusDropDownControl, modalWindowViewModel.enumId);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //this view Model is bound to the window element\r\n                        var modalWindowViewModel = kendo.observable({\r\n                            enumId: node.Configs.statusEnumId,\r\n                            resolutionCategoryEnumId: node.Configs.resolutionCategoryEnumId,\r\n                            type: node.Configs.type,\r\n                            resolveChildSettings: null,\r\n                            letAnalystDecide: false,\r\n                            workItemModel: vm.viewModel,\r\n                            okEnabled: false,\r\n                            requireResolution: false,\r\n                            resolveChildIncident: true,\r\n                            okClick: function () {\r\n                                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                if (_.isString(vm.viewModel.Status.Name) && vm.viewModel.Status.Name.length < 1) {\r\n                                    vm.viewModel.set(\"Status\", { Id: originalVm.Status.Id, Name: originalVm.Status.Name });\r\n                                } else if (this.requireResolution && (!_.isUndefined(vm.viewModel.ResolutionCategory) && _.isNull(vm.viewModel.ResolutionCategory.Id))) {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(localization.RequestCategoryRequiredError);\r\n                                } else if (this.requireResolution && _.isNull(vm.viewModel.Notes) && (vm.type == \"ServiceRequest\")) {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(localization.ImplementationNotesRequiredError);\r\n                                } else if (vm.viewModel.Status.Id === incidentResolved) { //resolved incident\r\n                                    //set resolved date\r\n                                    vm.viewModel.set(\"ResolvedDate\", new Date().toISOString());\r\n                                    var resDateEle = $(\"input[name='ResolvedDate']\");\r\n                                    if (resDateEle.attr('data-control') == 'datePicker') {\r\n                                        resDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (resDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        resDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //add to action log\r\n                                   if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordResolved(vm.viewModel.ResolutionDescription));\r\n                                    }\r\n                                    //set resolved by user \r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: session.user.Id };\r\n\r\n                                    //if incident is a parent, check if we need to resolve its child incidents\r\n                                    if (vm.viewModel.IsParent && (this.resolveChildSettings.ResolveChildIncident || (this.resolveChildSettings.ResolvedLetAnalystDecide && this.resolveChildIncident)))\r\n                                        resolveChildIncidents(this.resolveChildSettings);\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === incidentClosed || vm.viewModel.Status.Id === serviceRequestClosed || vm.viewModel.Status.Id === problemClosed) { //closed IR or closed SR\r\n                                    //set closed date\r\n                                    vm.viewModel.set(\"ClosedDate\", new Date().toISOString());\r\n                                    var closeDateEle = $(\"input[name='ClosedDate']\");\r\n                                    if (closeDateEle.attr('data-control') == 'datePicker') {\r\n                                        closeDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (closeDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        closeDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //set closed by user \r\n                                    switch (vm.viewModel.Status.Id) {\r\n                                        case problemClosed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            break;\r\n                                        case incidentClosed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordClosed());\r\n                                            break;\r\n                                        case serviceRequestClosed:\r\n                                            vm.viewModel.ClosedByUser = { BaseId: session.user.Id };\r\n                                            break;\r\n                                    }\r\n                                    \r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                }\r\n                                else if (vm.viewModel.Status.Id === incidentActive) { //activate incident\r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: null };\r\n                                    vm.viewModel.ResolutionCategory.set(\"Id\", null);\r\n                                    vm.viewModel.ResolutionCategory.set(\"Name\", \"\");\r\n                                    vm.viewModel.set(\"ResolutionDescription\", null);\r\n                                    vm.viewModel.set(\"ResolvedDate\", null);\r\n\r\n                                    //add to action log\r\n                                    var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                    if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordActivated());\r\n                                    }\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === serviceRequestCompleted) { //completed service request\r\n                                    //set completed date\r\n                                    vm.viewModel.set(\"CompletedDate\", new Date().toISOString());\r\n                                    var comDateEle = $(\"input[name='CompletedDate']\");\r\n                                    if (comDateEle.attr('data-control') == 'datePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (comDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === problemResolved) { //resolved problem\r\n                                    //set resolve date\r\n                                    vm.viewModel.set(\"ResolvedDate\", new Date().toISOString());\r\n                                    var comDateEle = $(\"input[name='ResolvedDate']\");\r\n                                    if (comDateEle.attr('data-control') == 'datePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (comDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //set resolved by user \r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: session.user.Id };\r\n\r\n                                    if (vm.viewModel.IsAutoResolve) {\r\n                                        resolveRelatedWorkItems();\r\n                                    }\r\n\r\n                                    vm.viewModel.set(\"AutoResolve\", vm.viewModel.IsAutoResolve);\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                //reset to original values\r\n                                vm.viewModel.set(\"Status\", { Id: originalVm.Status.Id, Name: originalVm.Status.Name });\r\n                                if (node.Configs.type === \"Incident\") {\r\n                                    vm.viewModel.set(\"ResolutionCategory\", { Id: originalVm.ResolutionCategory.Id, Name: originalVm.ResolutionCategory.Name });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", originalVm.ResolutionDescription);\r\n                                    vm.viewModel.set(\"ChildWorkItem\", originalVm.ChildWorkItem);\r\n                                }\r\n                                if (node.Configs.type === \"ServiceRequest\") {\r\n                                    vm.viewModel.set(\"ImplementationResults\", { Id: originalVm.ImplementationResults.Id, Name: originalVm.ImplementationResults.Name });\r\n                                    vm.viewModel.set(\"Notes\", originalVm.Notes);\r\n                                }\r\n                                if (node.Configs.type === \"Problem\") {\r\n                                    vm.viewModel.set(\"Resolution\", { Id: originalVm.Resolution.Id, Name: originalVm.Resolution.Name });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", originalVm.ResolutionDescription);\r\n                                    vm.viewModel.set(\"RelatedWorkItems\", originalVm.RelatesToWorkItem);\r\n                                    vm.viewModel.set(\"AutoResolve\", originalVm.AutoResolve);\r\n                                    vm.viewModel.set(\"IsAutoResolve\", originalVm.AutoResolve);\r\n                                }\r\n                                modalWindowControl.close();\r\n                            },\r\n                            showComment: vm.viewModel.Status.Id == serviceRequestCancelled,\r\n                            showResolution: (vm.viewModel.Status.Id == incidentResolved || vm.viewModel.Status.Id == serviceRequestCompleted || vm.viewModel.Status.Id == problemResolved),\r\n                            showAutoResolve: (vm.viewModel.Status.Id == problemResolved)\r\n                        });\r\n\r\n                        //bind window element to window viewModel\r\n                        kendo.bind(modalWindowEle, modalWindowViewModel);\r\n\r\n                        //create status enumPicker\r\n                        createStatusPicker(modalWindowViewModel, modalWindowEle);\r\n                        var statusDropDownControl = modalWindowEle.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                        var statusTreeViewControl = modalWindowEle.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n\r\n                        //bind status picker changes events\r\n                        statusDropDownControl.bind(\"change\", function (e) {\r\n                            //make sure button is disabled again\r\n                            vm.viewModel.set(\"okEnabled\", false);\r\n                            enableResolutionSettings(vm.viewModel.Status.Id, modalWindowViewModel);\r\n                        });\r\n                        statusTreeViewControl.bind(\"change\", function (e) {\r\n                            //make sure button is disabled again\r\n                            vm.viewModel.set(\"okEnabled\", false);\r\n                            enableResolutionSettings(vm.viewModel.Status.Id, modalWindowViewModel);\r\n                        });\r\n\r\n\r\n                        /*\r\n                         * conditionally added fields\r\n                         */\r\n\r\n                        if (modalWindowViewModel.type === \"Incident\") {\r\n                            createIncidentResolutionFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        if (modalWindowViewModel.type === \"ServiceRequest\") {\r\n                            createResultFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        if (modalWindowViewModel.type === \"Problem\") {\r\n                            createProblemResolutionFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        /*\r\n                         * END conditionally added fields\r\n                         */\r\n\r\n\r\n                        modalWindowEle.removeClass('hide');\r\n                        modalWindowEle.show();\r\n                        modalWindowControl.open();\r\n                    }\r\n                });\r\n            };\r\n\r\n            var getDrawerTaskViewModel = function (modalView) {\r\n                //drawerTaskVm is the viewModel that sits between the modal window and the page controls.\r\n                var drawerTaskVm = kendo.observable({\r\n                    currentSelection: [],\r\n                    currentSelectionOfParents: [],\r\n                    containsParents: false,\r\n                    selectedWorkItem: {\r\n                        type: '',\r\n                        trimmedType: '',\r\n                        projectionId: '',\r\n                        currentStatusId: '',\r\n                        currentStatusName: '',\r\n                        statusTypeId: '',\r\n                        resolutionResultEnumId: ''\r\n                    },\r\n                    openModal: function () {\r\n                        if (!this.isEnabled) {\r\n                            return;\r\n                        }\r\n                        var taskVm = this;\r\n                        var modalEle = modalView.element.clone();\r\n                        var modalControl = modalEle.kendoCiresonWindow({\r\n                            title: localization.ChangeStatusTask,\r\n                            actions: [],\r\n                            activate: function () {\r\n                                var selectedWiType = taskVm.selectedWorkItem.trimmedType;\r\n                                var currentStatusId = taskVm.selectedWorkItem.currentStatusId;\r\n                                onModalActivate(selectedWiType, currentStatusId, statusTreeViewControl, statusDropDownControl, taskVm.selectedWorkItem.statusTypeId);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //viewModel for the kendo window control and form\r\n                        var modalViewModel = kendo.observable({\r\n                            selectedWorkItems: taskVm.currentSelection,\r\n                            //parent/child IR fields\r\n                            selectedParents: taskVm.currentSelectionOfParents,\r\n                            resolveChildSettings: null,\r\n                            resolveChildIncident: true,\r\n                            //edited form fields\r\n                            newStatusObj: '',                //IR|SR work item status (enum, required)\r\n                            newResolutionId: '',            //IR 'Resolution' (enum, required)\r\n                            resolutionDescription: '',      //IR 'Resolution Description' (textarea)\r\n                            newResultId: '',                //SR Implementation Results (enum)\r\n                            resultNote: '',                 //SR 'Completed' status 'Implementation Notes' (textarea, required)\r\n                            resultComment: '',              //SR 'Cancelled' status 'Comment' (textarea)\r\n                            showPath: showEnumPath,\r\n                            leafNodeOnly: mustSelectLeafNode,\r\n                            //wiStatusTypeId is the enum id for IR or SR used to get there wi status, resolutionResultEnumId is the enum id for IR resolution or SR result\r\n                            wiStatusTypeId: taskVm.selectedWorkItem.statusTypeId,\r\n                            resolutionResultEnumId: taskVm.selectedWorkItem.resolutionResultEnumId,\r\n\r\n                            //toggles for fields required and visible\r\n                            irStatusResolved: false,\r\n                            srStatusCompleted: false,\r\n                            srStatusCancelled: false,\r\n                            irCategoryRequired: false,\r\n                            srNotesRequired: false,\r\n                            irResolveChildOption: false,\r\n\r\n                            //button events/logic\r\n                            okEnabled: false,\r\n                            okClick: function () {\r\n\r\n                                var windowViewModel = this;\r\n                                var isValid = bulkEditFormIsValid(windowViewModel, modalEle);\r\n                                if (isValid) {\r\n                                    //check if we need to handle child wi resolution\r\n                                    if (windowViewModel.irStatusResolved && (resolveChildIncidentSettings.ResolveChildIncident || (windowViewModel.irResolveChildOption && windowViewModel.resolveChildIncident)) && taskVm.containsParents) {\r\n                                        //handles post for IR-resolved parents and children WIs\r\n                                        postBulkEditChangesWithChildren(taskVm, windowViewModel, modalControl);\r\n                                    } else {\r\n                                        //handles post for everything else\r\n                                        var data = {\r\n                                            ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                            UpdateServiceManagement: true,\r\n                                            ItemIds: _.pluck(windowViewModel.selectedWorkItems, 'BaseId'),\r\n                                            EditedFields: getDrawerTaskEditedFields(windowViewModel)\r\n                                        }\r\n\r\n                                        postBulkEditChanges(data, taskVm, modalControl);\r\n                                    }\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                modalControl.close();\r\n                            }\r\n                        });\r\n\r\n                        kendo.bind(modalEle, modalViewModel);\r\n\r\n                        //create status enumPicker && bind change events\r\n                        var statusDropDownControl = modalEle.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                        var statusTreeViewControl = modalEle.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n                        function handleStatusControlChange() {\r\n                            var item = modalViewModel.get(\"newStatusObj\");\r\n                            if (item) {\r\n                                toggleAdditionalFields(item.Id, taskVm.selectedWorkItem.currentStatusId, modalViewModel);\r\n                            }\r\n                        }\r\n                        statusDropDownControl.bind(\"change\", function (e) {\r\n                             handleStatusControlChange();\r\n                        });\r\n                        statusTreeViewControl.bind(\"change\", function (e) {\r\n                            handleStatusControlChange();\r\n                        });\r\n                        \r\n                        //set vis/require depending on the current status \r\n                        if (taskVm.selectedWorkItem.trimmedType === \"Incident\" && taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.Incident.Resolved) {\r\n                            modalViewModel.set('irStatusResolved', true);\r\n                            modalViewModel.set('irCategoryRequired', true);\r\n                        }\r\n                        if (taskVm.selectedWorkItem.trimmedType === \"ServiceRequest\") {\r\n                            if (taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.ServiceRequest.Completed) {\r\n                                modalViewModel.set('srStatusCompleted', true);\r\n                                modalViewModel.set('srStatusCancelled', false);\r\n                            } else if (taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.ServiceRequest.Cancelled) {\r\n                                modalViewModel.set('srStatusCancelled', true);\r\n                                modalViewModel.set('srStatusCompleted', false);\r\n                            }\r\n                        }\r\n\r\n                        //show the window\r\n                        modalEle.removeClass('hide');\r\n                        modalEle.show();\r\n                        modalControl.open();\r\n                    },\r\n                    isEnabled: false,\r\n                    showTooltip: true,\r\n                    setEnabled: function (enabled) {\r\n                        this.set('isEnabled', enabled);\r\n                        this.set('showTooltip', !enabled);\r\n                    },\r\n                    targetControlId: '',\r\n                    onTargetControlChange: function (grid) {\r\n                        //empty out parentitems and set to false, readded below if applicable\r\n                        drawerTaskVm.set('currentSelectionOfParents', []);\r\n                        drawerTaskVm.set('containsParents', false);\r\n\r\n                        var selectedDataItems = [];\r\n                        if (app.isMobile()) {\r\n                            //grid is selected items array when called from mobile\r\n                            selectedDataItems = grid;\r\n                        } else {\r\n                            selectedDataItems = grid.select().map(function (index, item) {\r\n                                return grid.dataItem($(item));\r\n                            }).toArray();\r\n                        }\r\n\r\n                        //we only update 10 items at a time\r\n                        if (selectedDataItems.length > 10) {\r\n                            this.onExceedSelectionCount();\r\n                        }\r\n\r\n                        drawerTaskVm.set('currentSelection', selectedDataItems);\r\n\r\n                        //if nothing is selected disabled the item\r\n                        if (selectedDataItems.length <= 0 || selectedDataItems.length > 10) {\r\n                            drawerTaskVm.setEnabled(false);\r\n                        } else {\r\n                            var selectedTypes = _.pluck(selectedDataItems, \"WorkItemType\");\r\n                            var selectedStatusIds = _.pluck(selectedDataItems, \"StatusId\");\r\n                            var selectedStatusNames = _.pluck(selectedDataItems, \"Status\");\r\n\r\n                            //return false if multiple selected, otherwise returns string values\r\n                            var singleSelectedType = _.reduce(selectedTypes, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            drawerTaskVm.set(\"selectedWorkItem.type\", singleSelectedType);\r\n\r\n                            //return false if multiple selected, otherwise returns string values\r\n                            var singleSelectedStatusId = _.reduce(selectedStatusIds, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            var singleSelectedStatusName = _.reduce(selectedStatusNames, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            drawerTaskVm.set(\"selectedWorkItem.currentStatusId\", singleSelectedStatusId);\r\n                            drawerTaskVm.set(\"selectedWorkItem.currentStatusName\", singleSelectedStatusName);\r\n\r\n\r\n                            if (singleSelectedStatusId && singleSelectedType) {\r\n                                switch (singleSelectedType) {\r\n                                    case \"System.WorkItem.ServiceRequest\":\r\n                                        drawerTaskVm.setTrimmedWiType();\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemServiceRequestViewModel);\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', app.constants.workItemStatuses.ServiceRequest.Id);\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', app.constants.enumPickerIds.ServiceRequestImplementationResults);\r\n\r\n                                        //if SR is closed do not allow status change from here (TFS 3560)\r\n                                        if (singleSelectedStatusName === \"Closed\") {\r\n                                            drawerTaskVm.setEnabled(false);\r\n                                        } else {\r\n                                            drawerTaskVm.setEnabled(true);\r\n                                        }\r\n\r\n                                        break;\r\n                                    case \"System.WorkItem.Incident\":\r\n                                        var parentItems = [];\r\n                                        _.each(selectedDataItems, function (workItem) {\r\n                                            if (workItem.IsParent) {\r\n                                                drawerTaskVm.set('containsParents', true);\r\n                                                parentItems.push(workItem);\r\n                                            }\r\n                                        });\r\n                                        drawerTaskVm.set('currentSelectionOfParents', parentItems);\r\n\r\n                                        drawerTaskVm.setTrimmedWiType();\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemIncidentViewModel);\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', app.constants.workItemStatuses.Incident.Id);\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', app.constants.enumPickerIds.IncidentResolution);\r\n                                        drawerTaskVm.setEnabled(true);\r\n                                        break;\r\n                                    default:\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', '');\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', '');\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', '');\r\n                                        // not a supported bulk edit Type, disable the edit button\r\n                                        drawerTaskVm.setEnabled(false);\r\n                                }\r\n                            } else {\r\n                                //not same type && status\r\n                                drawerTaskVm.setEnabled(false);\r\n                            }\r\n                        }\r\n                    },\r\n                    setTrimmedWiType: function () {\r\n                        this.set('selectedWorkItem.trimmedType', this.selectedWorkItem.type.split(/[\\s.]+/).pop());\r\n                    },\r\n                    onExceedSelectionCount: function() {\r\n                        kendo.ui.ExtAlertDialog.show({\r\n                            title: localizationHelper.localize('Warning'),\r\n                            message: localizationHelper.localize('BulkEditExceedMessage')\r\n                        });\r\n                    }\r\n                });\r\n\r\n                return drawerTaskVm;\r\n            };\r\n\r\n            //executes when modal dialog is opening\r\n            var onModalActivate = function (selectedWiType, currentStatusId, treeControl, dropDownControl, statusEnumId) {\r\n                //determine allowed status changes based on current type and status\r\n                var changeRules = getFormTaskChangeRules();\r\n                var changeRulesFilter = changeRules[selectedWiType][currentStatusId];\r\n                \r\n                //since Incident can have custom enums we need to check here if no rules were set then its not resolved\r\n                if (selectedWiType == \"Incident\" && _.isUndefined(changeRulesFilter)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"neq\", value: app.constants.workItemStatuses.Incident.Closed };\r\n                }\r\n\r\n                //apply allowed status filtering\r\n                treeControl.dataSource.options.serverFiltering = false;\r\n                treeControl.dataSource.filter(changeRulesFilter);\r\n\r\n                //reassign dropdown datasource with filtered data so that users will not be able to access restricted status by typing\r\n                $.get(\"/api/V3/Enum/GetFlatList/\", { id: statusEnumId, itemFilter: \"\" }, function (data) {\r\n                    var comboDataSource = new kendo.data.DataSource();\r\n                    comboDataSource.data(data);\r\n                    comboDataSource.filter(changeRulesFilter);\r\n                    if (comboDataSource.view().length > 0) {\r\n                        dropDownControl.setDataSource(comboDataSource.view());\r\n                    }\r\n                });\r\n                \r\n                resolveChildIncidentSettings = getResolveChildIncidentSettings();\r\n            };\r\n\r\n            //template .build() and view.renderererers.\r\n            var buildAndRender = {\r\n                windowEle: function (windowTemplate) {\r\n                    //build the template for the window\r\n                    var builtModal = _.template(windowTemplate);\r\n                    var ele = new kendo.View(builtModal(), { wrap: false });\r\n                    //send hidden window back to caller (appended in the callback)\r\n                    callback(ele.render());\r\n                    return ele;\r\n                },\r\n                taskListItem: function (properties, anchorViewModel, template) {\r\n                    $.extend(true, properties, node);\r\n                    //build the anchor and bind viewModel to it\r\n                    var builtAnchor = _.template(template);\r\n                    var anchorElm = new kendo.View(builtAnchor(properties), {\r\n                        wrap: false, model: anchorViewModel\r\n                    });\r\n                    //send anchor element back to caller (appended in the callback)\r\n                    callback(anchorElm.render());\r\n                    return anchorElm;\r\n                }\r\n            }\r\n            //creators of controls in the window\r\n            var createProblemResolutionFields = function (modalWindowViewModel, modalWindowEle) {\r\n                var resolutionProperties = {\r\n                    PropertyName: \"Resolution\",\r\n                    PropertyDisplayName: \"Resolution\",\r\n                    Required: false,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), resolutionProperties, vm.viewModel);\r\n\r\n                var implementationNotesProperties = {\r\n                    PropertyName: \"ResolutionDescription\",\r\n                    PropertyDisplayName: \"ResolutionDescription\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), implementationNotesProperties, vm.viewModel);\r\n\r\n                var autoResolveProperties = {\r\n                    PropertyName: \"IsAutoResolve\",\r\n                    PropertyDisplayName: \"ProblemAutoResolveIncident\",\r\n                    Inline: true,\r\n                    Disabled: false\r\n                };\r\n                buildCheckbox(modalWindowEle.find(\"#autoResolve\"), autoResolveProperties, vm.viewModel);\r\n            };\r\n            var createResultFields = function (modalWindowViewModel, modalWindowEle) {\r\n                var implementationResultProperties = {\r\n                    PropertyName: \"ImplementationResults\",\r\n                    PropertyDisplayName: \"ImplementationResults\",\r\n                    Required: false,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), implementationResultProperties, vm.viewModel);\r\n\r\n                var implementationNotesProperties = {\r\n                    PropertyName: \"Notes\",\r\n                    PropertyDisplayName: \"Implementationnotes\",\r\n                    Required: true,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), implementationNotesProperties, vm.viewModel);\r\n\r\n                var commentProperties = {\r\n                    PropertyName: \"Notes\",\r\n                    PropertyDisplayName: \"Comment\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#comment\"), commentProperties, vm.viewModel);\r\n            };\r\n            var createIncidentResolutionFields = function (modalWindowViewModel, modalWindowEle) {\r\n                //resolution picker\r\n                var resolutionProperties = {\r\n                    PropertyName: \"ResolutionCategory\",\r\n                    PropertyDisplayName: \"ResolutionCategory\",\r\n                    Required: true,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), resolutionProperties, vm.viewModel);\r\n\r\n                //resolution description\r\n                var resolutionDescriptionProperties = {\r\n                    PropertyName: \"ResolutionDescription\",\r\n                    PropertyDisplayName: \"ResolutionDescription\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), resolutionDescriptionProperties, vm.viewModel);\r\n\r\n                var letAnalystDecideProperties = {\r\n                    PropertyName: \"resolveChildIncident\",\r\n                    PropertyDisplayName: \"ResolveChildIncidentMessage\",\r\n                    Inline: true,\r\n                    Disabled: false\r\n                };\r\n                buildCheckbox(modalWindowEle.find(\"#letAnalystDecide\"), letAnalystDecideProperties, vm.viewModel);\r\n            };\r\n            var createStatusPicker = function (modalWindowViewModel, modalWindowEle) {\r\n                var statusProperties = {\r\n                    PropertyName: \"Status\",\r\n                    PropertyDisplayName: \"Status\",\r\n                    EnumId: modalWindowViewModel.enumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#statusPicker'), statusProperties, vm.viewModel);\r\n            };\r\n            //form field helper\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n            var buildTextArea = function (container, props, vmModel) {\r\n                txtAreaControl.build(vmModel, props, function (cbTxtAreaControl) {\r\n                    container.html(cbTxtAreaControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n            var buildCheckbox = function (container, props, vmModel) {\r\n                checkBoxControl.build(vmModel, props, function (txtCheckboxControl) {\r\n                    container.html(txtCheckboxControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true, vm: vmModel, bind: true\r\n                    });\r\n                });\r\n            }\r\n            var getDrawerTaskChildEditedFields = function (viewModel, resolutionCategoryId) {\r\n                var json = [\r\n                    {\r\n                        PropertyName: \"Status\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: viewModel.get(\"newStatusObj\").Id\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolutionCategory\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: resolutionCategoryId\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolutionDescription\",\r\n                        PropertyType: \"string\",\r\n                        EditedValue: viewModel.get(\"resolutionDescription\")\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolvedDate\",\r\n                        PropertyType: \"date\",\r\n                        EditedValue: new Date().toISOString()\r\n                    },\r\n                    {\r\n                        //resolved by user \r\n                        PropertyName: \"RelatesToTroubleTicket\",\r\n                        PropertyType: \"singlecardinalityobject\",\r\n                        PropertyRelationshipId: \"f7d9b385-a84d-3884-7cde-e2c926d931a5\", //TroubleTicketResolvedByUserRelationshipString\r\n                        EditedValue: session.user.Id\r\n                    },\r\n                    {\r\n                        //action log for IR resolved.\r\n                        PropertyName: \"AppliesToTroubleTicket\",\r\n                        PropertyType: \"multiplecardinalityobject\",\r\n                        propertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //TroubleTicketHasActionLogId\r\n                        EditedValue: {\r\n                            ActionType: {\r\n                                Id: \"5ca2cfee-6740-1576-540B-ce17222840b8\",\r\n                                Name: \"Record Resolved\"\r\n                            },\r\n                            Description: viewModel.get(\"resolutionDescription\"),\r\n                            DescriptionDisplay: viewModel.get(\"resolutionDescription\"),\r\n                            EnteredBy: session.user.Name,\r\n                            EnteredDate: new Date().toISOString(),\r\n                            LastModified: new Date().toISOString(),\r\n                            Title: localization.RecordResolved,\r\n                            Image: app.config.iconPath + app.config.icons[\"Record Resolved\"]\r\n                        }\r\n                    }];\r\n\r\n                return json;\r\n            }\r\n            var getDrawerTaskEditedFields = function (viewModel) {\r\n                var json = [\r\n                    {\r\n                        PropertyName: \"Status\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: viewModel.get(\"newStatusObj\").Id\r\n                    }\r\n                ];\r\n                switch (viewModel.get(\"newStatusObj\").Id) {\r\n                    case app.constants.workItemStatuses.Incident.Closed:\r\n                        json.push({\r\n                            PropertyName: \"ClosedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                           //closed by user \r\n                           PropertyName: \"RelatesToTroubleTicket_\",\r\n                           PropertyType: \"singlecardinalityobject\",\r\n                           PropertyRelationshipId: \"76bc6c3b-a77b-2468-0a63-169d23dfcdf0\", //TroubleTicketClosedByUserRelationshipString\r\n                           EditedValue: session.user.Id\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Closed:\r\n                        json.push({\r\n                            PropertyName: \"ClosedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                            //closed by user \r\n                            PropertyName: \"ClosedByUser\",\r\n                            PropertyType: \"singlecardinalityobject\",\r\n                            PropertyRelationshipId: \"ba8180d3-5bf9-1bbd-ae87-145dd8fc520f\", //WorkItemClosedByUserRelationshipString\r\n                            EditedValue: session.user.Id\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.Incident.Resolved:\r\n                        json.push({\r\n                            PropertyName: \"ResolutionCategory\",\r\n                            PropertyType: \"enum\",\r\n                            EditedValue: viewModel.get(\"newResolutionId\").Id\r\n                        },\r\n                        {\r\n                            PropertyName: \"ResolutionDescription\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resolutionDescription\")\r\n                        },\r\n                        {\r\n                            PropertyName: \"ResolvedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                            //resolved by user \r\n                            PropertyName: \"RelatesToTroubleTicket\",\r\n                            PropertyType: \"singlecardinalityobject\",\r\n                            PropertyRelationshipId: \"f7d9b385-a84d-3884-7cde-e2c926d931a5\", //TroubleTicketResolvedByUserRelationshipString\r\n                            EditedValue: session.user.Id\r\n                        },\r\n                        {\r\n                            //action log for IR resolved.\r\n                            PropertyName: \"AppliesToTroubleTicket\",\r\n                            PropertyType: \"multiplecardinalityobject\",\r\n                            propertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //TroubleTicketHasActionLogId\r\n                            EditedValue: {\r\n                                ActionType: {\r\n                                    Id: \"5ca2cfee-6740-1576-540B-ce17222840b8\",\r\n                                    Name: \"Record Resolved\"\r\n                                },\r\n                                Description: viewModel.get(\"resolutionDescription\"),\r\n                                DescriptionDisplay: viewModel.get(\"resolutionDescription\"),\r\n                                EnteredBy: session.user.Name,\r\n                                EnteredDate: new Date().toISOString(),\r\n                                LastModified: new Date().toISOString(),\r\n                                Title: localization.RecordResolved,\r\n                                Image: app.config.iconPath + app.config.icons[\"Record Resolved\"]\r\n                            }\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Completed:\r\n\r\n                        json.push({\r\n                            PropertyName: \"Notes\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resultNote\")\r\n                        },\r\n                        {\r\n                            PropertyName: \"CompletedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        });\r\n\r\n                        if (!_.isUndefined(viewModel.get(\"newResultId\").Id)) {\r\n                            json.push({\r\n                                PropertyName: \"ImplementationResults\",\r\n                                PropertyType: \"enum\",\r\n                                EditedValue: viewModel.get(\"newResultId\").Id\r\n                            });\r\n                        }\r\n\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Cancelled:\r\n                        json.push({\r\n                            PropertyName: \"Notes\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resultComment\")\r\n                        });\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                return json;\r\n            }\r\n            //resolution funcs\r\n            var getResolveChildIncidentSettings = function () {\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    resolveChildIncidentSettings = data;\r\n                });\r\n            };\r\n            var toggleAdditionalFields = function (statusId, currentStatusId, vmWindow) {\r\n                \r\n                switch (statusId) {\r\n                    case incidentResolved:\r\n                        vmWindow.set(\"irStatusResolved\", true);\r\n                        vmWindow.set(\"irCategoryRequired\", true);\r\n                        vmWindow.set(\"irResolveChildOption\", vmWindow.selectedParents.length>0 && resolveChildIncidentSettings.ResolvedLetAnalystDecide);\r\n                        break;\r\n                    case serviceRequestCancelled:\r\n                        vmWindow.set(\"srStatusCancelled\", true);\r\n                        vmWindow.set(\"srStatusCompleted\", false);\r\n                        break;\r\n                    case serviceRequestCompleted:\r\n                        vmWindow.set(\"srStatusCompleted\", true);\r\n                        vmWindow.set(\"srNotesRequired\", true);\r\n                        vmWindow.set(\"srStatusCancelled\", false);\r\n                        break;\r\n                    default:\r\n                        vmWindow.set(\"irStatusResolved\", false);\r\n                        vmWindow.set(\"irCategoryRequired\", false);\r\n                        vmWindow.set(\"srStatusCancelled\", false);\r\n                        vmWindow.set(\"srStatusCompleted\", false);\r\n                        vmWindow.set(\"srNotesRequired\", false);\r\n                        break;\r\n                }\r\n\r\n                vmWindow.set(\"okEnabled\", true);\r\n\r\n            };\r\n            var enableResolutionSettings = function (statusId, vmWindow) {\r\n                switch (statusId) {\r\n                    case incidentResolved: // incident resolved (check for resolve child settings ans how resolution section)\r\n                        vmWindow.set(\"resolveChildSettings\", resolveChildIncidentSettings);\r\n                        vmWindow.set(\"letAnalystDecide\", (resolveChildIncidentSettings.ResolvedLetAnalystDecide && vm.viewModel.IsParent));\r\n                        vmWindow.set(\"requireResolution\", true);\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        break;\r\n                    case serviceRequestCancelled: //sr cancelled (show comment section)\r\n                        vmWindow.set(\"showComment\", true);\r\n                        break;\r\n                    case serviceRequestCompleted: //sr completed (show implementation section)\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        vmWindow.set(\"requireResolution\", true)\r\n                        break;\r\n                    case problemResolved: //problem resolved (show resolution and auto resolve option)\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        vmWindow.set(\"requireResolution\", true);\r\n                        vmWindow.set(\"showAutoResolve\", true);\r\n                        break;\r\n                    default:\r\n                        vmWindow.set(\"showComment\", false);\r\n                        vmWindow.set(\"showResolution\", false);\r\n                        vmWindow.set(\"requireResolution\", false);\r\n                        vmWindow.set(\"showAutoResolve\", false);\r\n                        vmWindow.set(\"letAnalystDecide\", false);\r\n                        break;\r\n                }\r\n\r\n                //make sure we have a new value\r\n                if (_.isString(vm.viewModel.Status.Name) && vm.viewModel.Status.Name.length > 0) {\r\n                    vmWindow.set(\"okEnabled\", true);\r\n                } else {\r\n                    vmWindow.set(\"okEnabled\", false); //turn off the button now\r\n                }\r\n            };\r\n            var resolveChildIncidents = function (resolveChildSettings) {\r\n                var resolutionCategoryId = resolveChildSettings.ChildIncidentResolutionCategorySameAsParent\r\n                                           ? vm.viewModel.ResolutionCategory.Id\r\n                                           : resolveChildSettings.ChildIncidentResolutionCategory.Id;\r\n\r\n                $.each(vm.viewModel.ChildWorkItem, function (i, item) {\r\n                    item.set(\"Status\", { Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name });\r\n                    item.set(\"ResolutionCategory\", { Id: resolutionCategoryId }); //TODO: I have some concearns here need to ask david -jk\r\n                    item.set(\"ResolutionDescription\", vm.viewModel.ResolutionDescription);\r\n                    item.set(\"ResolvedDate\", vm.viewModel.ResolvedDate);\r\n                });\r\n            };\r\n\r\n            var resolveRelatedWorkItems = function () {\r\n\r\n                $.each(vm.viewModel.RelatesToWorkItem, function (i, item) {\r\n                    item.set(\"Status\", { Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name });\r\n                    item.set(\"ResolutionDescription\", vm.viewModel.ResolutionDescription);\r\n                    item.set(\"ResolvedDate\", vm.viewModel.ResolvedDate);\r\n                });\r\n            };\r\n\r\n            //rules on what statuses are available based on current WI status\r\n            var getFormTaskChangeRules = function () {\r\n                //define change rules and states\r\n                var changeRules = new Array();\r\n\r\n                /*ServiceRequest*/\r\n                changeRules['ServiceRequest'] = new Array();\r\n\r\n                changeRules['ServiceRequest'][serviceRequestSubmitted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestSubmitted }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestInProgress] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestOnHold },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestInProgress }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                /*END ServiceRequest*/\r\n\r\n\r\n                /*Release Record*/\r\n                changeRules['ReleaseRecord'] = new Array();\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordInProgress] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordEditing] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCompleted }\r\n                    ]\r\n                };\r\n\r\n                /*END Release Record*/\r\n\r\n\r\n                /*Change Request*/\r\n                changeRules['ChangeRequest'] = new Array();\r\n\r\n                changeRules['ChangeRequest'][changeRequestSubmitted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestSubmitted }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestInProgress] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestOnHold },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestInProgress }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n                /*END Change Request*/\r\n\r\n                /*Incident*/\r\n                changeRules['Incident'] = new Array();\r\n\r\n                changeRules['Incident'][incidentActive] = {\r\n                    field: \"Id\",\r\n                    operator: \"neq\",\r\n                    value: incidentClosed\r\n                };\r\n\r\n                changeRules['Incident'][incidentActivePending] = {\r\n                    field: \"Id\",\r\n                    operator: \"neq\",\r\n                    value: incidentClosed\r\n                };\r\n\r\n                changeRules['Incident'][incidentResolved] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: incidentActive },\r\n                        { field: \"Id\", operator: \"eq\", value: incidentClosed }\r\n                    ]\r\n                };\r\n\r\n                /*END Incident*/\r\n\r\n                /*Problem*/\r\n                changeRules['Problem'] = new Array();\r\n                /*END Problem*/\r\n\r\n\r\n                return changeRules;\r\n            }\r\n            //bulk edit form funcs\r\n            var bulkEditFormIsValid = function (windowViewModel, modalEle) {\r\n                if (windowViewModel.irCategoryRequired\r\n                    && (_.isUndefined(windowViewModel.newResolutionId.Id)\r\n                        || windowViewModel.newResolutionId.Id.length <= 0)) {\r\n\r\n                    modalEle.find('#changeStatusErrorWin').html(localization.RequestCategoryRequiredError);\r\n                    return false;\r\n                } else if (windowViewModel.srNotesRequired && windowViewModel.resultNote.length <= 0) {\r\n                    modalEle.find('#changeStatusErrorWin').html(localization.ImplementationNotesRequiredError);\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            };\r\n\r\n            var postBulkEditChangesWithChildren = function (taskVm, windowVm, modalControl) {\r\n                var parentIds = _.pluck(taskVm.currentSelectionOfParents, 'BaseId'); \r\n                $.ajax({\r\n                    url: '/api/v3/workitem/GetChildWorkItems/',\r\n                    data: JSON.stringify(parentIds),\r\n                    dataType: 'json',\r\n                    contentType: 'application/json',\r\n                    type: \"POST\",\r\n                    success: function (childIds) {\r\n                        //determine if we set resolution category to same as parent\r\n                        if (resolveChildIncidentSettings.ChildIncidentResolutionCategorySameAsParent) {\r\n                            //parent and non-children wi base ids\r\n                            var itemIds = _.pluck(windowVm.selectedWorkItems, 'BaseId');\r\n                            //add in children\r\n                            _.each(childIds, function (childId) {\r\n                                itemIds.push(childId);\r\n                            });\r\n                            var uniqIds = _.uniq(itemIds);\r\n                            var postData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: uniqIds,\r\n                                EditedFields: getDrawerTaskEditedFields(windowVm)\r\n                            }\r\n\r\n                            postBulkEditChanges(postData, taskVm, modalControl);\r\n\r\n                        } else {\r\n                            //get child resolution cat\r\n                            var childResolutionCatId = resolveChildIncidentSettings.ChildIncidentResolutionCategory.Id;\r\n                            var childrenPostData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: childIds,\r\n                                EditedFields: getDrawerTaskChildEditedFields(windowVm, childResolutionCatId)\r\n                            }\r\n\r\n                            var wiSelectionPostData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: _.pluck(windowVm.selectedWorkItems, 'BaseId'),\r\n                                EditedFields: getDrawerTaskEditedFields(windowVm)\r\n                            }\r\n                            \r\n                            postBulkEditChanges(wiSelectionPostData, taskVm, modalControl, function (success) {\r\n                                if (success) {\r\n                                    postBulkEditChanges(childrenPostData, taskVm, modalControl);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n\r\n            };\r\n            var postBulkEditChanges = function (postData, taskVm, modalControl, postCallback) {\r\n                modalControl.close();\r\n                app.lib.mask.apply();\r\n                $.ajax({\r\n                    url: '/api/v3/workitem/BulkEditWorkItems/',\r\n                    data: JSON.stringify(postData),\r\n                    dataType: 'json',\r\n                    contentType: 'application/json',\r\n                    type: \"POST\",\r\n                    success: function () {\r\n                        if (!_.isUndefined(postCallback)) {\r\n                            postCallback(true);\r\n                        } else {\r\n                            onBulkEditSaveSuccess(taskVm);\r\n                        }\r\n                    },\r\n                    error: function () {\r\n                        if (!_.isUndefined(postCallback)) {\r\n                            postCallback(false);\r\n                        } else {\r\n                            onBulkEditSaveFailure();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            var onBulkEditSaveSuccess = function (taskVm) {\r\n                if (app.isMobile()) {\r\n                    var listControl = $(\"[data-control-id='\" + taskVm.targetControlId + \"']\").data('kendoListView');\r\n                    listControl.dataSource.query();\r\n                } else {\r\n                    //refresh the grid to get updated data.\r\n                    var targetGrid = $('#' + taskVm.targetControlId).data('kendoGrid');\r\n                    var targetGridState = app.gridUtils.savedState.getCurrentState(taskVm.targetControlId);\r\n                    app.lib.recheckGridState(targetGridState, targetGrid);\r\n                    targetGrid.dataSource.query(targetGridState);\r\n                }\r\n                app.lib.message.add(localizationHelper.localize('SaveSuccessMessage'), \"success\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var onBulkEditSaveFailure = function () {\r\n                app.lib.message.add(localizationHelper.localize('SaveErrorMessage'), \"danger\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            /* END functions */\r\n\r\n            /* initialization code*/\r\n            function initFormTask() {\r\n                var modalEle = buildAndRender.windowEle(changeStatusTemplate);\r\n                var formTaskViewModel = getFormTaskViewModel(modalEle);\r\n                var anchorTemplateProps = { Target: \"changeStatus\" };\r\n                buildAndRender.taskListItem(anchorTemplateProps, formTaskViewModel, anchorTemplate);\r\n            };\r\n\r\n            function initBulkTask() {\r\n                var modalView = buildAndRender.windowEle(changeStatusDrawerTemplate);\r\n                var drawerTaskViewModel = getDrawerTaskViewModel(modalView);\r\n                var anchorEleProps = { onClick: \"openModal\", titleKey: node.titleKey, toolTipMessage: localizationHelper.localize('MustSelectSameTypeStatus') };\r\n                buildAndRender.taskListItem(anchorEleProps, drawerTaskViewModel, drawerTaskTemplate);\r\n\r\n                /*subscribe to events*/\r\n                if (!app.isMobile()) {\r\n                    //called on grid row clicks\r\n                    app.events.subscribe(\"gridChange\", function(event, grid) {\r\n                        drawerTaskViewModel.onTargetControlChange(grid);\r\n                        drawerTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                    });\r\n\r\n                    //for initial grid load listen to this event so we can set persisted state information\r\n                    app.events.subscribe(\"gridBound\", function(event, grid) {\r\n                        drawerTaskViewModel.onTargetControlChange(grid);\r\n                        drawerTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                    });\r\n                } else {\r\n                    app.events.subscribe(\"mobileWiListSelectionChange\", function (event, listView) {\r\n                        if (!_.isUndefined(listView)) {\r\n                            drawerTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                            drawerTaskViewModel.targetControlId = listView.controlId;\r\n                        }\r\n                    });\r\n                    app.events.subscribe(\"mobileWiListInit\", function (event, listView) {\r\n                        if (!_.isUndefined(listView)) {\r\n                            drawerTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                            drawerTaskViewModel.targetControlId = listView.controlId;\r\n                        }\r\n                    });\r\n                }\r\n                /*END subscribe to events*/\r\n            };\r\n            /* END initialization code*/\r\n\r\n            //do it\r\n            if (vm.type == \"BulkEdit\") {\r\n                initBulkTask();\r\n            } else {\r\n                initFormTask();\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/amChangeStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/changeStatus/view.html','forms/fields/enum/controller','forms/fields/longstring/controller','forms/fields/boolean/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/changeStatus/view.html\");\r\n    var enumPicker = require(\"forms/fields/enum/controller\");\r\n    var txtArea = require(\"forms/fields/longstring/controller\");\r\n    var checkBox = require(\"forms/fields/boolean/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.ChangeHardwareAssetStatus;\r\n            var statusPropertyName;\r\n            if (node.Configs.type == \"HardwareAsset\") {\r\n                if (node.Configs.enumName == \"HardwareAssetStatus\") {\r\n                    \r\n                } else if (node.Configs.enumName == \"HardwareAssetType\") {\r\n                    title = localization.ChangeHardwareAssetType;\r\n                } \r\n            } else if (node.Configs.type == \"SoftwareAsset\") {\r\n                if (node.Configs.enumName == \"SoftwareAssetStatus\") {\r\n                    title = localization.ChangeSoftwareAssetStatus;\r\n                } else if (node.Configs.enumName == \"SoftwareAssetType\") {\r\n                    title = localization.ChangeSoftwareAssetType;\r\n                }\r\n            }\r\n\r\n            var tempStatus = { \"Id\": vm.viewModel[node.Configs.enumName].Id, \"Name\": vm.viewModel[node.Configs.enumName].Name };\r\n            \r\n\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        enumId: node.Configs.statusEnumId,\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            vm.viewModel.set(node.Configs.enumName, tempStatus);\r\n                            win.close();\r\n                        },\r\n                       \r\n                    });\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    //create status enumPicker\r\n                    var statusProperties = {\r\n                        PropertyName: node.Configs.enumName,\r\n                        PropertyDisplayName: 'Status',\r\n                        EnumId: _vmWindow.enumId\r\n                    };\r\n                    buildEnumPicker(cont.find('#statusPicker'), statusProperties, vm.viewModel);\r\n\r\n                    //var statusDropDown = cont.find('div[data-role=\"HardwareAssetStatus\"]').data().handler._dropdown;\r\n                    //var statusTreeView = cont.find('div[data-role=\"status\"]').data().handler._treeview;\r\n\r\n\r\n\r\n                    //bind status change\r\n                    //vm.viewModel.HardwareAssetStatus.bind(\"change\", function (e) {\r\n                    vm.viewModel[node.Configs.enumName].bind(\"change\", function (e) {\r\n                        switch (e.sender.Id) {\r\n                            \r\n                            default:\r\n                                //_vmWindow.set(\"showComment\", false);\r\n                                //_vmWindow.set(\"showResolution\", false);\r\n                                //_vmWindow.set(\"requireResolution\", false);\r\n                                break;\r\n                        }\r\n                        _vmWindow.set(\"okEnabled\", true);\r\n                    });\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPicker.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n          \r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/acknowledge/view.html',[],function () { return '<div id=\"AcknowledgeIncidentWindow\" class=\"hide task-window cireson-window defined-form\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"inline-spacing\">\\r\\n                <label><%= localization.AcknowledgementTime %> : <span data-bind=\"html:dateTimeNow\"></span></label>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"inline-spacing\">\\r\\n                <label><%= localization.AcknowledgementComment %></label>\\r\\n                <textarea data-bind=\"value: actionLogComment, events: {keyup:textCounter}\"\\r\\n                          data-value-update=\"keyup\"\\r\\n                          class=\"k-textbox\" rows=5></textarea>\\r\\n            </div>\\r\\n            <div class=\"inline-spacing\">\\r\\n                <span data-bind=\"html:charactersRemaining\"></span>\\r\\n                <span><%= localization.CharactersRemaining %></span>\\r\\n            </div>\\r\\n            <div class=\"inline-spacing checkbox checkbox-inline\">\\r\\n                <input id=\"IsPrivate\" type=\"checkbox\" data-bind=\"checked: isPrivate\" />\\r\\n                <label for=\"IsPrivate\" class=\"checkbox-label\"><%= localization.IsPrivate %></label>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button class=\"btn btn-primary\"\\r\\n                    data-role=\"button\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button class=\"btn btn-default\"\\r\\n                    data-role=\"button\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nacknowledge incident\r\n**/\r\n\r\ndefine('forms/tasks/acknowledge/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/acknowledge/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/acknowledge/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            \r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                acknowledge: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: localization.Acknowledge,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        dateTimeNow: kendo.toString(new Date(), \"g\"),\r\n                        dateTimeNowUTC: new Date().toISOString(),\r\n                        actionLogComment: \"\",\r\n                        isPrivate: false,\r\n                        charactersRemaining: \"4000\",\r\n                        textCounter: function () {\r\n                            var maximumLength = 4000;\r\n                            var val = this.actionLogComment.length;\r\n\r\n                            if (val > maximumLength) {\r\n                                this.actionLogComment.substring(0, maximumLength);\r\n                            } else {\r\n                                this.set(\"charactersRemaining\", maximumLength - val);\r\n                            }\r\n                        },\r\n                        okClick: function () {\r\n                            if (vm.viewModel.FirstResponseDate == null){\r\n                                vm.viewModel.FirstResponseDate = this.dateTimeNowUTC;\r\n                                var respondDateEle = $(\"input[name='FirstResponseDate']\");\r\n                                if (respondDateEle.attr('data-control') == 'datePicker') {\r\n                                    respondDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                } else if (respondDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                    respondDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                }\r\n                            }\r\n                            if (this.actionLogComment.length) {\r\n                                var newActionLog = {\r\n                                    EnteredBy: session.user.Name,\r\n                                    Title: localization.Analyst + \" \" + localization.Comment,\r\n                                    IsPrivate: this.isPrivate,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Description: this.actionLogComment,\r\n                                    DescriptionDisplay: this.actionLogComment,\r\n                                    Image: (this.isPrivate) ? app.config.iconPath + app.config.icons[\"privateComment\"] : app.config.iconPath + app.config.icons[\"comment\"],\r\n                                    ActionType: \"AnalystComment\"\r\n                                }\r\n                                if (!vm.viewModel.ActionLog) {\r\n                                    vm.viewModel.ActionLog = [];\r\n                                }\r\n                                var actionLogType = app.controls.getWorkItemLogType(pageForm.viewModel);\r\n                                if (actionLogType) {\r\n                                    pageForm.viewModel[actionLogType].push(newActionLog);\r\n                                }\r\n                            }\r\n\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        }\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"acknowledge\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nconvert To Parent\r\n**/\r\n\r\ndefine('forms/tasks/convertToParent/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //first add the anchor\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"convertToParent\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n           \r\n           //create view model \r\n            var viewModel = kendo.observable({\r\n                isParent: node.Configs.isParent,\r\n                confirmTitle: node.Configs.confirmTitle,\r\n                confirmMessage: node.Configs.confirmMessage,\r\n                convertToParent: function () {\r\n                    $.when(kendo.ui.ExtYesNoDialog.show({\r\n                        title: this.confirmTitle,\r\n                        message: this.confirmMessage\r\n                    })).done(function (response) {\r\n                        if (response.button === \"yes\") {\r\n                            vm.viewModel.IsParent = node.Configs.isParent;\r\n                            if (!vm.viewModel.IsParent) {\r\n                                if (vm.viewModel.ChildWorkItem != null) {\r\n                                    delete vm.viewModel.ChildWorkItem;\r\n                                }\r\n                            }\r\n                            vm.save(function (data) {\r\n                                app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                switch (pageForm.type) {\r\n                                    case \"ReleaseRecord\":\r\n                                        location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                        break;\r\n                                    default:\r\n                                        location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                        break;\r\n                                }\r\n                            }, saveFailure);\r\n                        } else {\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/linkToParent/view.html',[],function () { return '<div id=\"AssignParentWindow\" class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"margin-b20\">\\r\\n                <label><%= localization.SearchText %></label>\\r\\n                <span class=\"k-textbox k-space-right\">\\r\\n                    <input type=\"text\" data-bind=\"value: searchText\" />\\r\\n                    <a data-bind=\"click: searchClick\" href=\"javascript:void(0)\" class=\"\">\\r\\n                        <i class=\"fa fa-search\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n            </div>\\r\\n            <label><%= localization.SelectParent %></label>\\r\\n            <div data-role=\"grid\"\\r\\n                 data-bind=\"source: dataSource, events: { change: gridChange }\"\\r\\n                 data-selectable=\"true\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"true\"\\r\\n                 data-columns=\\'[\\r\\n                    { field: \"Id\", title: \" <%= localization.Id %>\", width: \"50px\", attributes: {\"class\": \"grid-highlight-column\"} },\\r\\n                    { field: \"Title\", title: \" <%= localization.Title %>\", width: \"300px\", attributes: {\"class\": \"grid-highlight-column\"} },\\r\\n                    { field: \"Status\", title: \" <%= localization.Status %>\", width: \"100px\" }\\r\\n                    ]\\'>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/header/relationships/view.html',[],function () { return '<div class=\"parent-header-link\" >\\r\\n    <label data-bind=\"text: view.controller.parentIncident\"></label> :\\r\\n    <a data-bind=\"attr: { href: view.controller.editHref}, text: view.controller.editLink\" target=\"_blank\"></a>\\r\\n    <span class=\"fa fa-trash-o fa-lg cursor-pointer\" data-bind=\"click: view.controller.unlinkParent\"></span>\\r\\n</div>';});\n\n","/**\r\nlink To Parent\r\n**/\r\n\r\ndefine('forms/tasks/linkToParent/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/linkToParent/view.html','text!forms/header/relationships/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/linkToParent/view.html\");\r\n    var headerLinkTpl = require(\"text!forms/header/relationships/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            \r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                linkToParent: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n                    var releaseRecordClassId = \"d02dc3b6-d709-46f8-cb72-452fa5e082b8\"; //classid for release record\r\n\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: (vm.viewModel.ClassId == releaseRecordClassId) ? localization.LinktoNewParentIncident : localization.LinkToNewParentRecord,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            _vmWindow.refreshDataSource();\r\n                            getChildIncidentSettings();\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        searchText: \"\",\r\n                        searchClick: function () {\r\n                            var val = this.get(\"searchText\");\r\n                            this.refreshDataSource();\r\n                            this.dataSource.filter({\r\n                                logic: \"or\",\r\n                                filters: [\r\n                                    {\r\n                                        field: \"Id\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Title\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Status.Name\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    }\r\n                                ]\r\n                            });\r\n                        },\r\n                        okEnabled: false, \r\n                        okClick: function () {\r\n                            if (!this.selectedRow)\r\n                                return;\r\n\r\n                            if (vm.viewModel.ParentWorkItem == null) {\r\n                                vm.viewModel.ParentWorkItem = {};\r\n                            }\r\n\r\n                            vm.viewModel.ParentWorkItem.BaseId = this.selectedRow.BaseId;\r\n                            vm.viewModel.ParentWorkItem.Id = this.selectedRow.Id;\r\n                            vm.viewModel.ParentWorkItem.Title = this.selectedRow.Title;\r\n\r\n                            //check if we need to change child's status\r\n                            if (!_.isUndefined(childIncidentSettings.ActiveChildIncidentLinkStatus.Id)) {\r\n                                vm.viewModel.set(\"Status\", { Id: childIncidentSettings.ActiveChildIncidentLinkStatus.Id, Name: childIncidentSettings.ActiveChildIncidentLinkStatus.Name });\r\n                            }\r\n\r\n                            vm.view.buildParentHeaderView(function (tpl) {\r\n                                parentView = new kendo.View(tpl, { wrapper: false, model: vm });\r\n                                $('#parent-header-space').html(parentView.render()).show();\r\n                            });\r\n\r\n                            this.dataSource.filter([]);\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            this.dataSource.filter([]);\r\n                            win.close();\r\n                        },\r\n                        dataSource: new kendo.data.DataSource({\r\n                            transport: {\r\n                                read: {\r\n                                    type: \"GET\",\r\n                                    dataType: \"json\",\r\n                                    url: \"/Search/GetParentWorkItems\",\r\n                                    data: { workItemType: vm.type },\r\n                                    cache: false\r\n                                }\r\n                            },\r\n                            schema: {\r\n                                model: {\r\n                                    fields: {\r\n                                        Id: { type: \"string\" },\r\n                                        Title: { type: \"string\" },\r\n                                        Status: { type: \"string\" },\r\n                                        BaseId: { type: \"string\" }\r\n                                    }\r\n                                }\r\n                            },\r\n                            pageSize: 5,\r\n                        }),\r\n                        selectedRow: null,\r\n                        gridChange: function (eventArgs) {\r\n                            this.set(\"okEnabled\", true);\r\n                            this.set(\"selectedRow\", eventArgs.sender.dataItem(eventArgs.sender.select()));\r\n                        },\r\n                        refreshDataSource: function () {\r\n                            this.dataSource.read();\r\n                        }\r\n                    });\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"linkToParent\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var childIncidentSettings;\r\n            var getChildIncidentSettings = function () {\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    childIncidentSettings = data;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/newStatus/view.html',[],function () { return '<div class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"col-group\">\\r\\n                <span data-bind=\"html: commentMessage\"></span>\\r\\n            </div>\\r\\n            <div class=\"col-group\">\\r\\n                <div class=\"editor-label\">\\r\\n                    <label><%= localization.Comment %></label>\\r\\n                </div>\\r\\n                <div class=\"editor-field\">\\r\\n                    <textarea data-bind=\"value: comment, events: {keyup:textCounter}\"\\r\\n                              data-value-update=\"keyup\"\\r\\n                              class=\"k-textbox\"\\r\\n                              rows=\"6\" />\\r\\n                    <div class=\"inline-spacing\">\\r\\n                        <span data-bind=\"html:charactersRemaining\"></span>\\r\\n                        <span><%= localization.CharactersRemaining %></span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nNew Status\r\n**/\r\n\r\ndefine('forms/tasks/newStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/newStatus/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/newStatus/view.html\");\r\n\r\n    var incidentResolved = \"2b8830b6-59f0-f574-9c2a-f4b4682f1681\";\r\n    var incidentActive = \"5e2d3932-ca6d-1515-7310-6f58584df73e\";\r\n    var IncidentClosed = \"bd0ae7c4-3315-2eb3-7933-82dfc482dbaf\";\r\n    var IncidentActivePending = \"b6679968-e84e-96fa-1fec-8cd4ab39c3de\";\r\n\r\n    var serviceRequestCancelled = \"674e87e4-a58e-eab0-9a05-b48881de784c\";\r\n    var serviceRequestCompleted = \"b026fdfd-89bd-490b-e1fd-a599c78d440f\";\r\n    var serviceRequestSubmitted = \"72b55e17-1c7d-b34c-53ae-f61f8732e425\";\r\n    var serviceRequestInProgress = \"59393f48-d85f-fa6d-2ebe-dcff395d7ed1\";\r\n    var serviceRequestOnHold = \"05306bf5-a6b9-b5ad-326b-ba4e9724bf37\";\r\n    var serviceRequestFailed = \"21dbfcb4-05f3-fcc0-a58e-a9c48cde3b0e\";\r\n    var serviceRequestClosed = \"c7b65747-f99e-c108-1e17-3c1062138fc4\";\r\n\r\n    var releaseRecordInProgress = \"1840bfdc-3589-88a5-cea9-67536fd95a3b\";\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //first add the anchor\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"setNewStatus\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n           \r\n            //all other bound changes to be triggered\r\n            if (!_.isUndefined(node.Configs.otherBoundChanges)) {\r\n                //var otherBoundChanges = $.parseJSON(node.Configs.otherBoundChanges);\r\n                var otherBoundChanges = node.Configs.otherBoundChanges;\r\n            } else {\r\n                var otherBoundChanges = {};\r\n            }\r\n\r\n            //create view model \r\n            var viewModel = kendo.observable({\r\n                setNewStatus: function () {\r\n                    //show comment for cancelled service request\r\n                    if (node.Configs.newStatusId === serviceRequestCancelled || node.Configs.newStatusId === releaseRecordInProgress) {\r\n                        addComment(view.element, node.Configs);\r\n                    } else {\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: node.Configs.confirmTitle,\r\n                            message: node.Configs.confirmMessage\r\n                        })).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n\r\n                                //set new status\r\n                                vm.viewModel.set(\"Status\", { Id: node.Configs.newStatusId, Name: node.Configs.newStatusName });\r\n\r\n                                //re-initiate resolution details on re-activate(active status) only\r\n                                if (vm.viewModel.Status.Id == app.constants.workItemStatuses.Incident.Active) {\r\n                                    vm.viewModel.set(\"ResolutionCategory\", { Name: null, Id: null });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", null);\r\n                                    vm.viewModel.set(\"ResolvedDate\", null);\r\n\r\n                                   \r\n                                    if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordActivated());\r\n                                    }\r\n                                }\r\n\r\n                                //make other changes\r\n                                $.each(otherBoundChanges, function (index, val) {\r\n                                    vm.viewModel.set(index, val);\r\n                                });\r\n\r\n                                //if IR or SR closed set closed date.\r\n                                if (node.Configs.newStatusId == app.constants.workItemStatuses.Incident.Closed || \r\n                                    node.Configs.newStatusId == app.constants.workItemStatuses.ServiceRequest.Closed) {\r\n                                    vm.viewModel.set(\"ClosedDate\", new Date().toISOString());\r\n\r\n                                    //set closed by user \r\n                                    switch (node.Configs.newStatusId) {\r\n                                        case app.constants.workItemStatuses.Incident.Closed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordClosed());\r\n                                            break;\r\n                                        case app.constants.workItemStatuses.ServiceRequest.Closed:\r\n                                            vm.viewModel.ClosedByUser = { BaseId: session.user.Id };\r\n                                            break;\r\n                                    }\r\n                                }\r\n\r\n                                //reactivating child incidents when a parent is reactivated\r\n                                if (vm.type === \"Incident\" && vm.viewModel.IsParent && vm.viewModel.Status.Id == incidentActive) {\r\n                                    processChildIncidentReactivation();\r\n                                } else {\r\n                                    save();\r\n                                }\r\n                            } else {\r\n                                //reset the viewModel\r\n                                vm.viewModel.set(\"Status\",{Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name});\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var save = function () {\r\n                //save/apply the current changes\r\n                vm.save(function (data) {\r\n                    app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                    switch (vm.type) {\r\n                        case \"ChangeRequest\":\r\n                            location.href = \"/ChangeRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"ServiceRequest\":\r\n                            location.href = \"/ServiceRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"Incident\":\r\n                            location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"ReleaseRecord\":\r\n                            location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"Problem\":\r\n                            location.href = \"/Problem/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        default:\r\n                            location.href = \"/WorkItems/MyItems/\";\r\n                            break;\r\n                    }\r\n                }, saveFailure);\r\n            }\r\n\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n\r\n            var reactivateChildandSave = function () {\r\n                $.each(vm.viewModel.ChildWorkItem, function (i, item) {\r\n                    item.set(\"Status\", {Name: childIncidentSettings.ChildIncidentReactivatedStatus.Name, Id: childIncidentSettings.ChildIncidentReactivatedStatus.Id});\r\n                    item.set(\"ResolutionCategory\", {Name: null,Id: null});\r\n                    item.set(\"ResolutionDescription\", null);\r\n                    item.set(\"ResolvedDate\", null);\r\n                });\r\n                save();\r\n            }\r\n\r\n            var processChildIncidentReactivation = function () {\r\n                var childIncidentSettings;\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    childIncidentSettings = $.parseJSON(data);\r\n\r\n                    if (childIncidentSettings.ReactivateLetAnalystDecide) { //let analyst decide setting\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: localization.ReactivateChildIncidentTitle,\r\n                            message: localization.ReactivateChildIncidentMessage\r\n                        })).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                reactivateChildandSave();\r\n                            } else {\r\n                                save();\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (childIncidentSettings.ReactivateChildIncident) { //automatic reactivate setting\r\n                        reactivateChildandSave();\r\n                    } else { // do nothing setting\r\n                        save();\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n            var addComment = function (cont, newStatusConfig) {\r\n                //var cont = view.element; //we have the element in memory so no need use a selector\r\n                win = cont.kendoCiresonWindow({\r\n                    title: localization.Comment,\r\n                    width: 500,\r\n                    height: 300,\r\n                    actions: []\r\n                }).data(\"kendoWindow\");\r\n                \r\n                //this view Model is bound to the window element\r\n                var _vmWindow = new kendo.observable({\r\n                    comment: \"\",\r\n                    okEnabled: false,\r\n                    charactersRemaining: \"4000\",\r\n                    textCounter: function () {\r\n                        var maximumLength = 4000;\r\n                        var val = this.comment.length;\r\n\r\n                        if (val > maximumLength) {\r\n                            this.comment.substring(0, maximumLength);\r\n                        } else {\r\n                            this.set(\"charactersRemaining\", maximumLength - val);\r\n                        }\r\n\r\n                        if (val > 0) {\r\n                            this.set(\"okEnabled\", true);\r\n                        } else {\r\n                            this.set(\"okEnabled\", false);\r\n                        }\r\n                    },\r\n                    okClick: function () {\r\n                        //set new status\r\n                        vm.viewModel.set(\"Status\",{Id: newStatusConfig.newStatusId, Name: newStatusConfig.newStatusName});\r\n\r\n                        //set comment\r\n                        var newComment = _.isNull(vm.viewModel.Notes) ? this.comment : vm.viewModel.Notes + \"\\r\\n\" + this.comment;\r\n                        vm.viewModel.set(\"Notes\", newComment);\r\n\r\n                        //save changes\r\n                        win.close();\r\n                        save();\r\n                    },\r\n                    cancelClick: function () {\r\n                        win.close();\r\n                    },\r\n                    commentMessage: !_.isUndefined(newStatusConfig.commentMessage) ? newStatusConfig.commentMessage : localization.CancelledStatusCommentMessage\r\n                });\r\n                //add control to the window\r\n                kendo.bind(cont, _vmWindow);\r\n\r\n                cont.removeClass('hide');\r\n                cont.show();\r\n\r\n                win.open();\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/sendEmail/mobile_view.html',[],function () { return '<div id=\"EmailNotificationWindow\" class=\"cireson-window defined-form task-window hide\">\\n    <div class=\"cireson-window--wrapper\">\\n        <div class=\"cireson-window--body\">\\n            <div class=\"col-md-6 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailTo %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <div class=\"k-autocomplete\">\\r\\n                        <select id=\"userPickerTo\"></select>\\r\\n                        <button id=\"toField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailCC %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <div class=\"k-autocomplete\">\\r\\n                        <select id=\"userPickerCc\"></select>\\r\\n                        <button id=\"ccField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"col-md-12 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.Subject %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <input data-bind=\"value: emailSubject\" class=\" k-textbox\" type=\"text\">\\n                </div>\\n            </div>\\n            \\n            <div class=\"col-md-12 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailTemplate %></label>\\n                </div>\\n                <div class=\"editor-field\" id=\"templateDiv\">\\n                    <input data-role=\"combobox\"\\n                           data-placeholder=\"<%= localization.ChooseOne %>\"\\n                           data-value-primitive=\"true\"\\n                           data-text-field=\"Name\"\\n                           data-value-field=\"Id\"\\n                           data-filter=\"contains\"\\n                           data-bind=\"value: emailTemplateValue, source: emailTemplateDataSource, events:{change:emailTemplateChange }\"/>\\n                </div>\\n            </div>\\n\\n            <div class=\"col-md-12 pad10\">\\r\\n                <div id=\"mobileStatusPicker\" />\\r\\n            </div>\\n            <div class=\"col-md-12 pad10\">\\r\\n                <div class=\"col-md-6 pad0\">\\r\\n                    <label><%= localization.Message %></label>\\r\\n                </div>\\r\\n                <div class=\"col-md-6 pad0\">\\r\\n                    <a href=\"#\" data-bind=\"events: { click: resizeEditor }\" role=\"button\" title=\"Expand Editor\" class=\"pull-right\"><i class=\"fa fa-expand\"></i></a>\\r\\n                </div>\\r\\n                <hr>\\r\\n                <div class=\"editor-field\">\\r\\n                    <textarea id=\"messageEditor\" class=\"form-editor hidden\" data-bind=\"value: emailHTMLMessage\" />\\r\\n                </div>\\r\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <div id=\"statusPicker\" />\\n                <div class=\"checkbox\">\\n                    <input id=\"IsAddToLog\" type=\"checkbox\" data-bind=\"checked: addToLog, enabled: enableAddToLog\" />\\r\\n                    <label for=\"IsAddToLog\" class=\"control-label \">\\n                        <%= localization.SendEmailAddToLog %>\\n                    </label>\\n                </div>\\n                <div class=\"checkbox col-md-12 margin-l30\" data-bind=\"visible: addToLog\">\\n                    <input id=\"setAsPrivate\" type=\"checkbox\" data-bind=\"checked: setAsPrivate\" />\\n                    <label for=\"setAsPrivate\" class=\"control-label col-md-10\">\\n                        <%= localization.SetAsPrivate %>\\n                        <i class=\"fa fa-info-circle info-icon text-primary\" data-toggle=\"tooltip\" title=\"<%= localization.SaveMessageAsPrivateTooltip %>\"></i>\\n                    </label>\\n                </div>\\n                <div data-bind=\"visible: showChangeStatus\" class=\"checkbox\">\\n                    <input id=\"SetFirstResponseDate\" type=\"checkbox\" data-bind=\"checked: setFirstResponseDate, enabled:enableFirstResponseDate\" />\\n                    <label for=\"SetFirstResponseDate\" class=\"control-label\"><%= localization.SetFirstResponseDate %></label>\\n                </div>\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <label><%= localization.SendEmailAttachment %></label>\\n                <div class=\"form-group\">\\r\\n                    <div class=\"drop-zone-element\">\\r\\n                        <div class=\"text-wrapper\">\\r\\n                            <span class=\"drag-image-text\">\\n                                <a class=\"browse-file\"><b><%= localization.Browse %></b></a>\\n                                <span data-bind=\"visible: filesCount > 0\"><span class=\"lowercase\"> <%= localization.Or %> </span><a data-bind=\"events: { click: viewWorkItemFiles }\"><b><%= localization.BrowseWorkItemFiles %></b></a></span>\\r\\n                            </span>\\r\\n                            <div style=\"display:none\"><input name=\"files\" id=\"email-attachment\" type=\"file\" /></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\n                <div>\\r\\n                    <div class=\"fileattachment-list\"></div>\\r\\n                    <div class=\"fileattachment-img-modal\"></div>\\r\\n                    <script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n                        <div class=\"thumbnail-file\">\\r\\n                            <div class=\"cursor-pointer thumbnail-img\">\\r\\n                                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                                # } else{ #\\r\\n                                <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                                # } #\\r\\n                            </div>\\r\\n                            <div class=\"thumbnail-caption\">\\r\\n                                <span>#: DisplayName #</span>\\r\\n                                <!--<div class=\"overlay transparent\">\\r\\n                                    <span class=\"pull-right\">\\r\\n                                        <a class=\"k-delete-button\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                    </span>\\r\\n                                </div>-->\\r\\n                                <div class=\"overlay\">\\r\\n                                    # if (DisplayName.match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                                            <i class=\"fa fa-eye\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                                            <i class=\"fa fa-external-link\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    # } #\\r\\n                                    # if (BaseId!=null) { #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                                            <i class=\"fa fa-download\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    # } #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </script>\\r\\n                </div>\\n                <!--<input data-bind=\"value: emailAttachment\" class=\"k-textbox\" type=\"text\" readonly=\"readonly\">\\n                <span data-bind=\"text: attachmentErrorMessage\" class=\"send-email-attachment-error\"></span>\\n                <div>\\n                    <input type=\"file\" name=\"files\" id=\"fileUploader\" />\\n                    <div class=\"k-widget k-upload\">\\n                        <input type=\"button\" value=\"<%= localization.Remove %>\" class=\"k-button\" />\\n                    </div>\\n                </div>-->\\n            </div>\\n        </div>\\n        <div class=\"window-buttons cireson-window--footer\">\\n            <button id=\"emailOk\" data-role=\"button\"\\n                    class=\"btn btn-primary\"\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\n                <%= localization.OK %>\\n            </button>\\n            <button data-role=\"button\"\\n                    class=\"btn btn-default\"\\n                    data-bind=\"events: { click: cancelClick }\">\\n                <%= localization.Cancel %>\\n            </button>\\n        </div>\\n    </div>\\n</div>';});\n\n","\ndefine('text!forms/tasks/sendEmail/view.html',[],function () { return '<div id=\"EmailNotificationWindow\" tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\">\\n    <div class=\"modal-dialog modal-lg\">\\n        <div class=\"modal-content\">\\n            <div class=\"modal-header\">\\n                 <h4 class=\"modal-title\"><%= localization.SendEmail %></h4>\\n            </div> \\n            <div class=\"modal-body\">\\n                <div class=\"row\">\\n                    <div class=\"col-md-6 pad10\">\\n                        <div class=\"editor-label\">\\n                            <label><%= localization.SendEmailTo %></label>\\n                        </div>\\n                        <div class=\"editor-field\">\\n                            <div class=\"k-autocomplete\">\\r\\n                                <select id=\"userPickerTo\"></select>\\r\\n                                <button id=\"toField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\n                            <label><%= localization.SendEmailCC %></label>\\n                        </div>\\n                        <div class=\"editor-field\">\\n                            <div class=\"k-autocomplete\">\\n                                <select id=\"userPickerCc\"></select>\\n                                <button id=\"ccField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\r\\n                            <label><%= localization.Subject %></label>\\r\\n                        </div>\\r\\n                        <div class=\"editor-field\">\\r\\n                            <input data-bind=\"value: emailSubject\" class=\"k-textbox\" type=\"text\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\r\\n                            <label><%= localization.SendEmailTemplate %></label>\\r\\n                        </div>\\r\\n                        <div class=\"editor-field\" id=\"templateDiv\">\\r\\n                            <input data-role=\"combobox\"\\r\\n                                   data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                                   data-value-primitive=\"true\"\\r\\n                                   data-text-field=\"Name\"\\r\\n                                   data-value-field=\"Id\"\\r\\n                                   data-filter=\"contains\"\\r\\n                                   data-bind=\"value: emailTemplateValue, source: emailTemplateDataSource, events:{change:emailTemplateChange }\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-12 pad10\">\\r\\n                        <div class=\"col-md-6 pad0\">\\r\\n                            <label><%= localization.Message %></label>\\r\\n                        </div>\\r\\n                        <div class=\"col-md-6 pad0\">\\r\\n                            <a href=\"#\" data-bind=\"events: { click: resizeEditor }\" role=\"button\" title=\"Expand Editor\" class=\"pull-right\"><i class=\"fa fa-expand\"></i></a>\\r\\n                        </div>\\r\\n                        <hr>\\r\\n                        <div class=\"editor-field\">\\r\\n                            <textarea id=\"messageEditor\" class=\"form-editor hidden\" data-bind=\"value: emailHTMLMessage\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div id=\"statusPicker\" />\\r\\n                        <div class=\"checkbox\">\\r\\n                            <input id=\"IsAddToLog\" type=\"checkbox\" data-bind=\"checked: addToLog, enabled: enableAddToLog\" />\\r\\n                            <label for=\"IsAddToLog\" class=\"control-label \">\\r\\n                                <%= localization.SendEmailAddToLog %>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\"checkbox col-md-12 margin-l30\" data-bind=\"visible: addToLog\">\\r\\n                            <input id=\"setAsPrivate\" type=\"checkbox\" data-bind=\"checked: setAsPrivate\" />\\r\\n                            <label for=\"setAsPrivate\" class=\"control-label col-md-10\">\\r\\n                                <%= localization.SetAsPrivate %>\\r\\n                                <i class=\"fa fa-info-circle info-icon text-primary\" data-toggle=\"tooltip\" title=\"<%= localization.SaveMessageAsPrivateTooltip %>\"></i>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div data-bind=\"visible: showChangeStatus\" class=\"checkbox \">\\r\\n                            <input id=\"SetFirstResponseDate\" type=\"checkbox\" data-bind=\"checked: setFirstResponseDate, enabled:enableFirstResponseDate\" />\\r\\n                            <label for=\"SetFirstResponseDate\" class=\"control-label\"><%= localization.SetFirstResponseDate %></label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <label><%= localization.SendEmailAttachment %></label>\\r\\n                        <div class=\"form-group\">\\r\\n                            <div class=\"drop-zone-element\">\\r\\n                                <div class=\"text-wrapper\">\\r\\n                                    <span class=\"drag-image-text\">\\r\\n                                        <img src=\"/Content/Images/Icons/FileUpload/upload_to_cloud.svg\" />\\r\\n                                        <b><%= localization.DragAndDrop %> </b> <%= localization.YourFilesOr %>\\r\\n                                        <a class=\"browse-file\"><b><%= localization.Browse %></b></a>\\r\\n                                        <span data-bind=\"visible: filesCount > 0\">\\r\\n                                            <span class=\"lowercase\">  <%= localization.Or %>  </span>\\r\\n                                            <a data-bind=\"events: { click: viewWorkItemFiles }\"><b><%= localization.BrowseWorkItemFiles %></b></a>\\r\\n                                        </span>\\r\\n                                    </span>\\r\\n                                    <div style=\"display:none\"><input name=\"files\" id=\"email-attachment\" type=\"file\" /></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <div class=\"fileattachment-list\"></div>\\r\\n                            <div class=\"fileattachment-img-modal\"></div>\\r\\n                        </div>\\r\\n                        <script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n                            <div class=\"thumbnail-file\">\\r\\n                                <div class=\"cursor-pointer thumbnail-img\">\\r\\n                                    # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                    <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                                    # } else{ #\\r\\n                                    <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                                    # } #\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\"thumbnail-caption\">\\r\\n                                    <span>#: DisplayName #</span>\\r\\n                                    <!--<div class=\"overlay transparent\">\\r\\n                            <span class=\"pull-right\">\\r\\n                                <a class=\"k-delete-button\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                            </span>\\r\\n                        </div>-->\\r\\n                                    <div class=\"overlay\">\\r\\n                                        # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                                                <i class=\"fa fa-eye\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                                                <i class=\"fa fa-external-link\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        # } #\\r\\n                                        # if (BaseId!=null) { #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                                                <i class=\"fa fa-download\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        # } #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </script>\\r\\n                    </div>\\r\\n                </div> \\n            </div>\\n\\n            <div class=\"modal-footer\">\\r\\n            <button id=\"emailOk\" data-role=\"button\"\\n                    class=\"btn btn-primary\"\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\n                <%= localization.OK %>\\n            </button>\\n            <button data-role=\"button\"\\n                    class=\"btn btn-default\"\\n                    data-bind=\"events: { click: cancelClick }\">\\n                <%= localization.Cancel %>\\n            </button>\\n        </div>\\n    </div>\\n</div>\\r\\n\\r\\n\\r\\n    \\r\\n</div>';});\n\n","\ndefine('text!forms/popups/userPickerPopup/view.html',[],function () { return '<div id=\"UserPickerPopupWindow\" class=\"cireson-window defined-form task-window\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-6\">\\r\\n                    <div class=\"form-group popup-search-box\">\\r\\n                        <input type=\"text\" data-value-update=\"keyup\" placeholder=\"<%= localization.SearchText %>\" data-bind=\"value: searchValue, events: { keypress: searchOnEnter }\" class=\"search-input\">\\r\\n                        <span data-bind=\"events:{click: search}\" class=\"search-icon\">\\r\\n                            <i class=\"fa fa-search\"></i>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div data-bind=\"visible: isDesktopView\">\\r\\n                <div data-control-grid=\"userPickerGrid\"></div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\"row\" data-bind=\"visible: isMobileView\">\\r\\n                <div class=\"col-md-4\">\\r\\n                    <div data-role=\"listview\"\\r\\n                         data-bind=\"source: userDataSource, events:{change: onListViewChanged}\"\\r\\n                         data-template=\"user-grid-mobile-template\"\\r\\n                         data-selectable=\"true\"\\r\\n                         class=\"user-listBox\"></div>\\r\\n                    <div data-role=\"pager\"\\r\\n                         data-bind=\"source: userDataSource\"\\r\\n                         data-numeric=\"false\"></div>\\r\\n                    <script type=\"text/x-kendo-template\" id=\"user-grid-mobile-template\">\\r\\n                        <div class=\"user-info\">\\r\\n                            <dl>\\r\\n                                <dt>#: FirstName # #: LastName #</dt>\\r\\n                                <dd>#: UserName # &middot; #: Title #</dd>\\r\\n                                <dd>#: Domain # &middot; #: Company #</dd>\\r\\n                            </dl>\\r\\n                        </div>\\r\\n\\r\\n                    </script>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons objectPicker-single-grid\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nuserPickerPopup\r\n**/\r\nvar __userPickerPopupSingleton;\r\n\r\ndefine('forms/popups/userPickerPopup/controller',['require','text!forms/popups/userPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/userPickerPopup/view.html\");\r\n    var singletonName = \"userPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (groupsOnly) {\r\n            // keep popup window as singleton\r\n            if (__userPickerPopupSingleton) {\r\n                return __userPickerPopupSingleton;\r\n            }\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            $(\"body\").append(ele);\r\n            __userPickerPopupSingleton = new UserPickerPopup(ele, groupsOnly);\r\n            \r\n            return __userPickerPopupSingleton;\r\n        }\r\n    }\r\n\r\n    /* -- UserPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback returns selected user object\r\n    */\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // CONTROL\r\n    var UserPickerPopup = function (targetEle, groupsOnly) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var gridHtml = targetEle.find(\"[data-control-grid]\");\r\n        var grid;\r\n        var gridUrl = groupsOnly\r\n            ? \"/User/GetUserSearchResults?groupsOnly=true\"\r\n            : \"/User/GetUserSearchResults\";\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"Name\";\r\n        var _idProp = \"Id\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                searchText: localization.SearchText,\r\n                selectUserText: groupsOnly ? localization.SelectGroup : localization.SelectUser,\r\n                searchValue: \"\",\r\n                //okText: localization.OK,\r\n                //cancelText: localization.Cancel,\r\n                search: onSearchClick,\r\n                searchOnEnter: function(e) {\r\n                    if (e.which == 13) {\r\n                        e.preventDefault();\r\n                        onSearchClick();\r\n                    }\r\n                },\r\n                save: onSaveClick,\r\n                cancel: onCancelClick,\r\n                userDataSource: new kendo.data.DataSource(),\r\n                onListViewChanged: function (e) {\r\n                    var index = e.sender.select().index();\r\n                    var dataItem = e.sender.dataSource.view()[index];\r\n                    this.set(\"selectedUser\", dataItem);\r\n                },\r\n                selectedUser: null,\r\n                isDesktopView: !app.isMobileDevice(),\r\n                isMobileView: app.isMobileDevice()\r\n\r\n        });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            createGrid();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n            self.vm = _vm;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n            \r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSearchClick = function () {\r\n            grid.search(_vm.searchValue);\r\n        }\r\n        var onSaveClick = function (e) {\r\n            var onMobile = app.isMobileDevice();\r\n            if (onMobile) {\r\n                if (!_.isNull(_vm.selectedUser)) {\r\n                    var userObj = _model.getGenericFromObj(_vm.selectedUser);\r\n                    $(self).trigger(\"save\", userObj);\r\n                    closePopup();\r\n                }\r\n            } else {\r\n                var selectedRow = grid.kendoGrid.select();\r\n                if (selectedRow) {\r\n                    var obj = _model.getGenericFromObj(grid.kendoGrid.dataItem(selectedRow));\r\n                    $(self).trigger(\"save\", obj);\r\n                    closePopup();\r\n                }\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n        var openPopup = function () {\r\n            //clear out search box value and search results before opening the window\r\n            self.vm.set(\"searchValue\", \"\");\r\n            grid.kendoDataSource.data([]);\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup(groupsOnly);\r\n        }        \r\n        var createGrid = function () {\r\n            grid = new Grid({\r\n                html: gridHtml,\r\n                url: gridUrl\r\n            });\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function (groupsOnly) {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n           \r\n            // ACTIONS\r\n\r\n            // METHODS\r\n            \r\n            var createKendoWindow = function() {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: groupsOnly ? localization.SelectGroup : localization.SelectUser,\r\n                    content: null,\r\n                    width: 680,\r\n                    height: 420,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Grid --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n        */\r\n        var Grid = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var html = settings.html;\r\n            var url = settings.url;\r\n            var height = 200;\r\n            var kendoGrid;\r\n            var kendoDataSource;\r\n            var searchValue;\r\n            // private params           \r\n           \r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoGrid();\r\n                kendoGrid.pager.element.hide();\r\n                bindEvents();\r\n                self.kendoGrid = kendoGrid;\r\n                self.kendoDataSource = kendoDataSource;\r\n                self.search = search;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                kendoGrid.bind(\"dataBound\", function (e) {\r\n                    kendoGrid.pager.element.show();\r\n                });\r\n                kendoGrid.element.on(\"dblclick\", \"tbody>tr\", onRowDblClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onRowDblClick = function () {\r\n                kendoGrid.select($(this));\r\n                onSaveClick();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var search = function(value){\r\n                searchValue = value;\r\n                kendoDataSource.read();\r\n                kendoDataSource.page(1);\r\n\r\n                _vm.set(\"userDataSource\", kendoDataSource);\r\n            }\r\n            var createKendoDataSource = function () {\r\n                kendoDataSource = new kendo.data.DataSource({\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": url,\r\n                            \"data\": function() {\r\n                                return {\r\n                                    userFilter: function() {\r\n                                        return searchValue;\r\n                                    },\r\n                                    filterByAnalyst: _vm.filterByAnalyst\r\n                                }\r\n                            },\r\n                            \"type\": \"GET\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": app.isMobileDevice ? 3 : 15,\r\n                    \"serverPaging\": true,\r\n                    \"serverSorting\": true,\r\n                    \"serverFiltering\": true,\r\n                    \"serverGrouping\": true,\r\n                    \"total\": 0,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                        \"model\": {\r\n                            \"fields\": {\r\n                                \"Id\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Name\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"PrincipalName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"UserName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Domain\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Company\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Title\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"FirstName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"LastName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"EmployeeId\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Analyst\": {\r\n                                    \"type\": \"number\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            var createKendoGrid = function () {\r\n                kendoGrid = html.kendoGrid({\r\n                    height: height,\r\n                    dataSource: kendoDataSource,\r\n                    selectable: \"Single,Row\",\r\n                    sortable: { mode: \"multiple\" },\r\n                    pageable: true,\r\n                    filterable: {\r\n                        extra: false,\r\n                        operators: {\r\n                            string: {\r\n                                startswith: localization.Startswith,\r\n                                contains: localization.Contains,\r\n                                eq: localization.Isequalto,\r\n                                neq: localization.Isnotequalto\r\n                            }\r\n                        }\r\n                    },\r\n                    autoBind: false,\r\n                    columns: [{\r\n                        \"title\": localization.id,\r\n                        \"hidden\": true,\r\n                        \"field\": \"Id\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.FirstName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"width\": \"110px\",\r\n                        \"field\": \"FirstName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.LastName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"width\": \"110px\",\r\n                        \"field\": \"LastName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Title,\r\n                        \"field\": \"Title\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.UserName,\r\n                        \"field\": \"UserName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Domain,\r\n                        \"field\": \"Domain\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Company,\r\n                        \"field\": \"Company\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }],\r\n                }).data(\"kendoGrid\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n        \r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/flyout/fileAttachmentsFlyout/mobile_view.html',[],function () { return '<div class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div>\\r\\n                <div class=\"fileattachment-list\"></div>\\r\\n                <div class=\"fileattachment-img-modal\"></div>\\r\\n            </div>\\r\\n\\r\\n            <script type=\"text/x-kendo-template\" id=\"filesTemplate\">\\r\\n                <div class=\"thumbnail-file\">\\r\\n                    <div class=\"cursor-pointer thumbnail-img\">\\r\\n                        # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                        <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                        # } else{ #\\r\\n                        <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                        # } #\\r\\n                    </div>\\r\\n                    <div class=\"thumbnail-caption\">\\r\\n                        <span>#: DisplayName #</span>\\r\\n                        <div class=\"overlay\">\\r\\n                            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"View Image\" action=\"view\">\\r\\n                                    <i class=\"fa fa-eye\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"Open in New Tab\" action=\"opennewtab\">\\r\\n                                    <i class=\"fa fa-external-link\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                            # } #\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"Download\" action=\"download\">\\r\\n                                    <i class=\"fa fa-download\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </script>\\r\\n            <script>\\r\\n                function selectFile(el, action) {\\r\\n                    //var listView = $(\".fileattachment-list\").data(\"kendoListView\");\\r\\n                    //var item = $(el).closest(\"[role=\\'option\\']\");\\r\\n                    //var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\\r\\n\\r\\n                    //if (action === \"download\") {\\r\\n                    //    var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\\r\\n                    //    location.href = downloadUrl + dataItem.BaseId;\\r\\n                    //} else if (action === \"opennewtab\") {\\r\\n                    //    var win = window.open(\\'about:blank\\');\\r\\n                    //    setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\\r\\n                    //        win.document.body.appendChild(win.document.createElement(\\'img\\')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\\r\\n                    //        win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\\r\\n                    //        win.focus();\\r\\n                    //    }, 0);\\r\\n\\r\\n\\r\\n                    //} else {\\r\\n                    //    var dialog = $(\\'.fileattachment-img-modal\\');\\r\\n                    //    dialog.kendoDialog({\\r\\n                    //        modal: true,\\r\\n                    //        title: dataItem.DisplayName,\\r\\n                    //        content: \"<div class=\\'file-img-container\\'><img src=\\\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\\\" onerror=\\\\\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\\\\\" alt=\\\\\"\" + dataItem.DisplayName + \"\\\\\" /></div>\",\\r\\n                    //        animation: {\\r\\n                    //            open: {\\r\\n                    //                effects: \"fade:in\"\\r\\n                    //            }\\r\\n                    //        }\\r\\n                    //    });\\r\\n                    //    $(\\'.k-window.k-widget\\').addClass(\\'acivity-popup-window\\');\\r\\n                    //    dialog.data(\"kendoDialog\").open();\\r\\n                    //}\\r\\n                }\\r\\n\\r\\n            </script>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }, visible: saveCancelBtn\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }, visible: saveCancelBtn\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel}, visible: closeBtn \">\\r\\n                <%= localization.Close %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/flyout/fileAttachmentsFlyout/view.html',[],function () { return '<div tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\">\\r\\n    <div class=\"modal-dialog\">\\r\\n        <div class=\"modal-content\">\\r\\n            <div class=\"modal-header\">\\r\\n                <h4 class=\"modal-title\"><%= localization.FileAttachments %></h4>\\r\\n            </div>\\r\\n            <div class=\"modal-body\">\\r\\n                <div>\\r\\n                    <div class=\"fileattachment-list\"></div>\\r\\n                    <div class=\"fileattachment-img-modal\"></div>\\r\\n                </div>\\r\\n\\r\\n                <script type=\"text/x-kendo-template\" id=\"filesTemplate\">\\r\\n                    <div class=\"thumbnail-file\">\\r\\n                        <div class=\"cursor-pointer thumbnail-img\">\\r\\n                            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                            <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                            # } else{ #\\r\\n                            <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" action=\"download\" onerror=\"    this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                            # } #\\r\\n                        </div>\\r\\n                        <div class=\"thumbnail-caption\">\\r\\n                            <span>#: DisplayName #</span>\\r\\n                            <div class=\"overlay\">\\r\\n                                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" view-image action=\"view\" title=\"View Image\">\\r\\n                                        <i class=\"fa fa-eye\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" title=\"Open in New Tab\" action=\"opennewtab\">\\r\\n                                        <i class=\"fa fa-external-link\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                # } #\\r\\n                                # if (BaseId!=null) { #\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" title=\"Download\" action=\"download\">\\r\\n                                        <i class=\"fa fa-download\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                # } #\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </script>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"modal-footer\">\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-primary\"\\r\\n                        data-bind=\"events: { click: save }, visible: saveCancelBtn\">\\r\\n                    <%= localization.OK %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancel }, visible: saveCancelBtn\">\\r\\n                    <%= localization.Cancel %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancel}, visible: closeBtn \">\\r\\n                    <%= localization.Close %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>';});\n\n","/**\r\nfileAttachmentsFlyout\r\n**/\r\n\r\nvar __fileAttachmentsPopupSingleton;\r\n\r\ndefine('forms/flyout/fileAttachmentsFlyout/controller',['require','text!forms/flyout/fileAttachmentsFlyout/mobile_view.html','text!forms/flyout/fileAttachmentsFlyout/view.html'],function (require) {\r\n    var tpl = app.isMobile() ? require(\"text!forms/flyout/fileAttachmentsFlyout/mobile_view.html\") : require(\"text!forms/flyout/fileAttachmentsFlyout/view.html\");\r\n    var singletonName = \"fileAttachmentsFlyout\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (vm, task) {\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            $(\"body\").append(ele);\r\n            __fileAttachmentsPopupSingleton = new FileAttachmentsPopup(vm, ele, task);\r\n\r\n            return __fileAttachmentsPopupSingleton;\r\n        }\r\n    }\r\n\r\n    // CONTROL\r\n    var FileAttachmentsPopup = function (vm, targetEle, task) {\r\n        var self = this;\r\n        var html = targetEle;\r\n\r\n        var _vmWindow, win;\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n\r\n            if (app.isMobile()) {\r\n                win = html.kendoCiresonWindow({\r\n                    title: localization.FileAttachments,\r\n                    width: 650,\r\n                    height: 740,\r\n                    actions: []\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            _vmWindow = kendo.observable({\r\n                save: function() {\r\n                    $(self).trigger(\"save\", { selectedFiles: _vmWindow.selectedFiles });\r\n                    _vmWindow.closeModal();\r\n                },\r\n                cancel: function() {\r\n                    $(self).trigger(\"cancel\");\r\n                    _vmWindow.closeModal();\r\n                },\r\n                isDesktopView: !app.isMobileDevice(),\r\n                isMobileView: app.isMobileDevice(),\r\n                selectedFiles: [],\r\n                onOpenFile: function(e) {\r\n                    var data = this.dataSource.view();\r\n\r\n                    _vmWindow.selectedFiles = $.map(this.select(),\r\n                        function(item) {\r\n                            return data[$(item).index()];\r\n                        });\r\n                },\r\n                saveCancelBtn: (task),\r\n                closeBtn: (!task),\r\n                openModal: function () {\r\n                    if (!app.isMobile())\r\n                        html.modal('show');\r\n                    else {\r\n                        html.removeClass('hide');\r\n                        html.show();\r\n                        win.open();\r\n                    }\r\n                },\r\n                closeModal: function() {\r\n                    if (app.isMobile())\r\n                        win.close();\r\n                    else\r\n                        html.modal('hide');\r\n                },\r\n                selectFile: function(el, isImage) {\r\n                    var listView = html.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                    var item = el.closest(\"[role='option']\");\r\n                    var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n\r\n                    if (isImage && task == \"sendEmail\") return;\r\n\r\n                    action = el.attr(\"action\");\r\n                    if (action === \"download\") {\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        location.href = downloadUrl + dataItem.BaseId;\r\n                    } else if (action === \"opennewtab\") {\r\n                        var win = window.open('about:blank');\r\n                        setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                            win.document.body.appendChild(win.document.createElement('img')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.focus();\r\n                        }, 0);\r\n                        \r\n                        \r\n                    } else {\r\n                        var dialog = $('.fileattachment-img-modal');\r\n\r\n                        if (dialog.length > 1) {\r\n                            for (var i = 1; i < dialog.length; i++) {\r\n                                if ($(dialog[i]).data(\"kendoDialog\"))\r\n                                    $(dialog[i]).data(\"kendoDialog\").destroy();\r\n                                dialog.eq(i).remove();\r\n                            }\r\n                        }\r\n\r\n                        if (dataItem) {\r\n\r\n                            var dialogs = $('.acivity-popup-window');\r\n                            if (dialogs.length > 1) {\r\n                                for (var i = 1; i < dialogs.length; i++) {\r\n                                    dialogs.eq(i).remove();\r\n                                }\r\n                            }\r\n\r\n                            dialog.kendoDialog({\r\n                                modal: true,\r\n                                title: dataItem.DisplayName,\r\n                                content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" +\r\n                                    dataItem.Content.data +\r\n                                    \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" +\r\n                                    dataItem.DisplayName +\r\n                                    \"\\\" /></div>\",\r\n                                animation: {\r\n                                    open: {\r\n                                        effects: \"fade:in\"\r\n                                    }\r\n                                }\r\n                            });\r\n                            $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                            dialog.data(\"kendoDialog\").open();\r\n\r\n                            //close preview window on overlay click\r\n                            $('.k-overlay').on(\"click\", function () {\r\n                                dialog.data(\"kendoDialog\").close();\r\n                            });\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            });\r\n            kendo.bind(html, _vmWindow);\r\n\r\n            if (!app.isMobile()) {\r\n\r\n                html.on('shown.bs.modal',\r\n                    function() {\r\n                        //reposition modal backdrop\r\n                        $('.modal-backdrop').each(function(i, obj) {\r\n                            html.before(obj);\r\n                        });\r\n\r\n                        //remove modal focus so tools with popup would work\r\n                        $(document).off('focusin.modal');\r\n                    });\r\n\r\n                html.on('hidden.bs.modal',\r\n                    function() {\r\n                        $('.modal-backdrop').remove();\r\n                    });\r\n\r\n            }\r\n\r\n            self.open = _vmWindow.openModal;\r\n            self.close = _vmWindow.closeModal;\r\n            self.vm = _vmWindow;\r\n\r\n            html.find(\".fileattachment-list\").kendoListView({\r\n                dataSource: vm.viewModel.FileAttachment,\r\n                template: kendo.template($(\"#filesTemplate\").html()),\r\n                selectable: (task) ? \"multiple\" : \"single\",\r\n                change: _vmWindow.onOpenFile,\r\n                dataBound: function () {\r\n                    //Remove view image icon if from send email.\r\n                    if (task == undefined && task != \"sendEmail\") {\r\n                        html.find(\"a[view-image]\").parent().hide();\r\n                    }\r\n\r\n                    html.find(\".custom-click\").on(\"click\", function () {\r\n                        _vmWindow.selectFile($(this), false);\r\n                    });\r\n\r\n                    if (!app.isMobile()) {\r\n                        html.find(\".thumbnail-img img\").on(\"click\", function () {\r\n                            _vmWindow.selectFile($(this), true);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        __construct();\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nsend email\r\n**/\r\n\r\n\r\ndefine('CustomSpace/Scripts/forms/tasks/sendEmail/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/sendEmail/mobile_view.html','text!forms/tasks/sendEmail/view.html','forms/popups/userPickerPopup/controller','forms/flyout/fileAttachmentsFlyout/controller','forms/fields/enum/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = app.isMobile() ?  require(\"text!forms/tasks/sendEmail/mobile_view.html\") : require(\"text!forms/tasks/sendEmail/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/userPickerPopup/controller\");\r\n    var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            var filter = {};\r\n            var recipientList = {\r\n                recipientToList: [],\r\n                recipientCCList: []\r\n            };\r\n\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            view.destroy();//there is some issue with the cloned element if we don't destroy the view\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                sendEmail: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n\r\n                    if (app.isMobile()) {\r\n                        win = cont.kendoCiresonWindow({\r\n                            title: localization.SendEmail,\r\n                            width: 650,\r\n                            height: 740,\r\n                            actions: [],\r\n                            activate: function () {\r\n                                getAffectedUserEmail(_vmWindow);\r\n                                setDefaultWIStatus(_vmWindow);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n                    }\r\n                    \r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        emailTo: \"\",\r\n                        emailCC: \"\",\r\n                        emailSubject: \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title,\r\n                        emailHTMLMessage: (session.emailBodyTemplate.length > 0) ? $('<div/>').html(session.emailBodyTemplate).text() : \"\",\r\n                        emailTextMessage:\"\",\r\n                        emailAttachment: \"\",\r\n                        emailTemplateDataSource: tempateDataSource,\r\n                        emailTemplateValue: \"\",\r\n                        attachmentErrorMessage: \"\",\r\n                        addToLog: (session.addToActionLogDefault === \"true\" || session.forceAddToActionLog === \"true\") ? true : false,\r\n                        enableAddToLog: (session.forceAddToActionLog === \"true\") ? false : true,\r\n                        okEnabled: true,\r\n                        setAsPrivate: (session.saveMessageAsPrivate === \"true\") ? true : false,\r\n                        okClick: function (e) {\r\n                            var recipientToEmail = _.without(recipientList[\"recipientToList\"], _.findWhere(recipientList[\"recipientToList\"], {\r\n                                Email: \"\"\r\n                            }));\r\n                            recipientToEmail = _.uniq(_.pluck(recipientToEmail, \"Email\"));\r\n                            _vmWindow.set(\"emailTo\", recipientToEmail.join(\";\"));\r\n\r\n                            var recipientCcEmail = _.without(recipientList[\"recipientCCList\"], _.findWhere(recipientList[\"recipientCCList\"], {\r\n                                Email: \"\"\r\n                            }));\r\n                            recipientCcEmail = _.uniq(_.pluck(recipientCcEmail, \"Email\"));\r\n                            _vmWindow.set(\"emailCC\", recipientCcEmail.join(\";\"));\r\n\r\n\r\n                            //validate email addresses first\r\n                            var arrEmail = _.union(recipientToEmail, recipientCcEmail);\r\n                            if (recipientToEmail.length <= 0) {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.InvalidEmailAddress,\r\n                                    message: localization.PleaseProvideEmailAddress\r\n                                });\r\n                                return;\r\n                            }\r\n                            else {\r\n                                var invalidEmailAdress = validateEmailAddress(arrEmail);\r\n\r\n                                if (invalidEmailAdress != null) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.InvalidEmailAddress,\r\n                                        message: localization.InvalidEmailAddressMessage.replace(\"{0}\", invalidEmailAdress)\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            //if we are adding to action log we require there to be message content\r\n                            if (this.addToLog) {\r\n                                var editor = cont.find(\"#messageEditor\").data(\"kendoEditor\");\r\n                                this.set(\"emailTextMessage\", editor.body.innerText || editor.body.textContent);\r\n\r\n                                var trimmedMessage = (this.emailTextMessage && _.isString(this.emailTextMessage)) ? this.emailTextMessage.trim() : \"\";\r\n\r\n                                if (trimmedMessage.length <= 0) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.MessageRequired,\r\n                                        message: localization.MessageRequiredWhenAddingLogEntry\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            //send email\r\n                            kendo.ui.progress(cont, true);\r\n                            sendEmail(this, cont);\r\n\r\n                        },\r\n                        cancelClick: function (e) {\r\n                            if (app.isMobile()) {\r\n                                win.close();\r\n                            } else {\r\n                                $.when(kendo.ui.ExtOkCancelDialog.show({\r\n                                    title: localization.Warning,\r\n                                    message: localization.UnsavedDataMessage,\r\n                                    icon: \"fa fa-exclamation\"\r\n                                })\r\n                                   ).done(function (response) {\r\n                                       if (response.button === \"ok\") {\r\n                                           if (vm.widget)\r\n                                               vm.widget.remoteManageRecepient = null;\r\n                                           shown = false;\r\n                                           cont.modal('hide');\r\n                                       }\r\n                                   });\r\n                            }\r\n                        },\r\n                        emailTemplateChange: function (e) {\r\n                            var filter = {\r\n                                field: \"Id\",\r\n                                operator: \"eq\",\r\n                                value: e.sender._old //_old stores the selected value's id\r\n                            };\r\n                            tempateDataSource.filter(filter);\r\n                        \r\n                            var dView = tempateDataSource.view();\r\n                            var subject = (dView.length > 0) ? \"[\" + vm.viewModel.Id + \"] \" + dView[0].Subject : \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title;\r\n                            var content = (dView.length > 0) ? dView[0].Content : \"\";\r\n                            \r\n                            content = cont.find(\"#messageEditor\").html(content).text();\r\n\r\n                            //change new line (\\n) to line break (<br>) on non-html template only\r\n                            if (!content.match(/<(\\w+)((?:\\s+\\w+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/)) {\r\n                                content = cont.find(\"#messageEditor\").html(content).text().replace(/\\r\\n|\\r|\\n/g, \"<br />\");\r\n                            }\r\n                            \r\n                            this.set(\"emailSubject\", subject);\r\n                            this.set(\"emailHTMLMessage\", content);\r\n\r\n                            tempateDataSource.filter({});\r\n                        },\r\n                        resizeEditor: function (e) {\r\n                            e.preventDefault();\r\n\r\n                            var $this = $(e.currentTarget);\r\n\r\n                            if ($this.children('i').hasClass('fa-expand')) {\r\n                                $this.children('i').removeClass('fa-expand');\r\n                                $this.children('i').addClass('fa-compress');\r\n                            }\r\n                            else if ($this.children('i').hasClass('fa-compress')) {\r\n                                $this.children('i').removeClass('fa-compress');\r\n                                $this.children('i').addClass('fa-expand');\r\n                            }\r\n                            $('#EmailNotificationWindow').find('table.k-editor').toggleClass('editor-expanded');\r\n                        },\r\n                        showChangeStatus: (vm.type === \"Incident\"),\r\n                        changeStatus: false,\r\n                        sendEmailAttachments: [],\r\n                        fromWorkItemAttachementsId: [],\r\n                        setFirstResponseDate: (_.isNull(vm.viewModel.FirstResponseDate)) ? true : false,\r\n                        enableFirstResponseDate: (_.isNull(vm.viewModel.FirstResponseDate)) ? true : false,\r\n                        openPopup: function (e) {\r\n                            var popupWindow = objectPickerPopup.getPopup();\r\n                            popupWindow.setSaveCallback(function (object) {\r\n                                var recipientType = (e.currentTarget.id === \"toField\") ? \"recipientToList\" : \"recipientCCList\";\r\n\r\n                                var picker = (e.currentTarget.id === \"toField\")\r\n                                    ? cont.find(\"#userPickerTo\").data(\"kendoMultiSelect\")\r\n                                    : cont.find(\"#userPickerCc\").data(\"kendoMultiSelect\");\r\n\r\n                                var userEmailObj = _.find(_vmWindow.users, function (item) {\r\n                                    return item.guid === object.id;\r\n                                });\r\n\r\n                                var selectedUser = !_.isUndefined(userEmailObj)\r\n                                    ? { Id: object.id, Name: object.name, Email: userEmailObj.email }\r\n                                    : { Id: object.id, Name: object.name, Email: \"\" };\r\n\r\n                                var isUserExist = picker.dataSource.data().find(function (element) {\r\n                                    return element.Id === selectedUser.Id;\r\n                                });\r\n\r\n                                if (!isUserExist) {\r\n                                    var key = (recipientType.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                                    filter[key] = selectedUser.Name;\r\n                                    picker.dataSource.add(selectedUser);\r\n                                }\r\n\r\n                                recipientList[recipientType].push(selectedUser);\r\n                                picker.value(_.pluck(recipientList[recipientType], \"Id\"));\r\n                            });\r\n                            popupWindow.vm.filterByAnalyst = false;\r\n                            popupWindow.open();\r\n                        },\r\n                        viewWorkItemFiles: function() {\r\n                            var flyoutWindow = attachmentPickerFlyout.getPopup(vm, \"sendEmail\");\r\n                            flyoutWindow.setSaveCallback(function(data) {\r\n                                var selectedFiles = data.selectedFiles || [];\r\n                                for (var n = 0; n < selectedFiles.length; n++) {\r\n                                    _vmWindow.sendEmailAttachments.push(selectedFiles[n]);\r\n                                }\r\n                            });\r\n                            flyoutWindow.open();\r\n                        },\r\n                        filesCount: vm.viewModel.FileAttachment.length || 0,\r\n                        users: [],\r\n                        Status: { Id: \"\", Name: \"\" },\r\n                        changeStatusSetting: {\r\n                            statusTypeId: \"\",\r\n                            defaultStatusId: \"\",\r\n                            rootStatusEnumId: \"\",\r\n                            enableChangeStatus: true\r\n                        }\r\n                    });\r\n                   \r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    if (!app.isMobile()) {\r\n                        cont.on('shown.bs.modal',\r\n                            function () {\r\n                                //prevent shown event from duplicate trigger\r\n                                $(this).off('shown.bs.modal');\r\n                                //prevent body from scrolling when flyout is open\r\n                                $(\"body\").addClass(\"modal-open\");\r\n                                //set to true when flyout is open\r\n                                shown = true;\r\n                                //reposition modal backdrop\r\n                                $('.modal-backdrop').each(function (i, obj) {\r\n                                    cont.before(obj);\r\n                                });\r\n                                //remove modal focus so tools with popup would work\r\n                                $(document).off('focusin.modal');\r\n\r\n                                $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n                                //set defaults\r\n                                if (vm.widget.remoteManageRecepient && vm.widget.remoteManageRecepient.BaseId != null)\r\n                                    getRemoteManageRecepient();\r\n                                else\r\n                                    getAffectedUserEmail(_vmWindow);\r\n\r\n                                getSendEmailChangeStatusSettings(_vmWindow);\r\n                                setDefaultWIStatus(_vmWindow);\r\n\r\n                                //build editor\r\n                                buildEditor(cont.find(\"#messageEditor\"), _vmWindow);\r\n\r\n                                //build uploader\r\n                                initializeUploader(cont, _vmWindow);\r\n\r\n                                //build userpicker\r\n                                initializeUserPicker(cont.find(\"#userPickerTo\"), _vmWindow, \"recipientToList\");\r\n                                initializeUserPicker(cont.find(\"#userPickerCc\"), _vmWindow, \"recipientCCList\");\r\n\r\n                                //build status picker\r\n                                initializeStatusPicker(cont.find(\"#statusPicker\"), _vmWindow);\r\n\r\n                                //apply change status rule if root enum is not specified\r\n                                if (_.isNull(_vmWindow.changeStatusSetting.rootStatusEnumId)) {\r\n                                    applyChangeStatus(cont, vm, _vmWindow);\r\n                                }\r\n\r\n                            });\r\n\r\n                        cont.on('hidden.bs.modal', function () {\r\n                            $(\"body\").removeClass(\"modal-open\");\r\n\r\n                            $('.modal-backdrop').remove();\r\n\r\n                            var toPicker = cont.find(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                            var ccPicker = cont.find(\"#userPickerCc\").data(\"kendoMultiSelect\");\r\n\r\n                            //clear userpicker values on modal close\r\n                            toPicker.value(\"\");\r\n                            ccPicker.value(\"\");\r\n\r\n                            //clear filters and recipients vars\r\n                            filter = {};\r\n                            recipientList = {\r\n                                recipientToList: [],\r\n                                recipientCCList: []\r\n                            };\r\n                        });\r\n\r\n                        cont.on('hide.bs.modal',\r\n                            function (e) {\r\n                                if (shown && $('#extOkCancelDialog').length <= 1) {\r\n                                    _vmWindow.cancelClick(e);\r\n                                    e.preventDefault();\r\n                                    e.stopImmediatePropagation();\r\n                                    return false;\r\n                                }\r\n                            });\r\n\r\n                        $.get(\r\n                            \"/api/V3/User/GetUserList\",\r\n                            {\r\n                                fetchAll: true\r\n                            },\r\n                            function (data) {                                \r\n                                var names = [],\r\n                                    items = [];\r\n                                for (var i = 0; i<data.length; (i = i + 10000)) {\r\n                                    var subData = data.slice(i, i + 10000);\r\n                                    items = $.map(subData, function(value, i) {\r\n                                        return { 'id': i, 'name': value.Name, 'guid': value.Id, 'email': value.Email };\r\n                                    });\r\n                                    names = names.concat(items);\r\n                                }\r\n\r\n                                //store user data to viewmodel\r\n                                _vmWindow.users = names;\r\n                                cont.modal('show');\r\n                        });                        \r\n                    } else {\r\n                        $.get(\"/api/V3/User/GetUserList\",\r\n                            {\r\n                                fetchAll: true\r\n                            },\r\n                            function(data) {\r\n                                var names = [],\r\n                                    items = [];\r\n                                for (var i = 0; i < data.length; (i = i + 10000)) {\r\n                                    var subData = data.slice(i, i + 10000);\r\n                                    items = $.map(subData, function(value, i) {\r\n                                        return { 'id': i, 'name': value.Name, 'guid': value.Id, 'email': value.Email };\r\n                                    });\r\n                                    names = names.concat(items);\r\n                                }\r\n\r\n                                //store user data to viewmodel\r\n                                _vmWindow.users = names;\r\n\r\n                                //build userpicker\r\n                                initializeUserPicker(cont.find(\"#userPickerTo\"), _vmWindow, \"recipientToList\");\r\n                                initializeUserPicker(cont.find(\"#userPickerCc\"), _vmWindow, \"recipientCCList\");\r\n\r\n                                //build uploader\r\n                                initializeUploader(cont, _vmWindow);\r\n\r\n                                //build status picker\r\n                                initializeStatusPicker(cont.find(\"#statusPicker\"), _vmWindow);\r\n\r\n                                //init editor\r\n                                buildEditor(cont.find(\"#messageEditor\"), _vmWindow);\r\n\r\n                                $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n                                cont.removeClass('hide');\r\n                                cont.show();\r\n\r\n                                win.open();\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"sendEmail\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var tempateDataSource = new kendo.data.DataSource({\r\n                transport: {\r\n                    read: \"/EmailNotification/GetNotificationTemplates\",\r\n                    dataType: \"json\"\r\n                },\r\n                schema: {\r\n                    model: {\r\n                        fields: {\r\n                            Id: { type: \"string\" },\r\n                            Name: { type: \"string\" }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            var addToCommentLog = function (commentMessage,  setAsPrivate) {\r\n                var newActionLog = {\r\n                    EnteredBy: session.user.Name,\r\n                    Title: localization.EMailSent,\r\n                    IsPrivate: setAsPrivate,\r\n                    EnteredDate: new Date().toISOString(),\r\n                    LastModified: new Date().toISOString(),\r\n                    Description: commentMessage,\r\n                    DescriptionDisplay: commentMessage,\r\n                    Image: app.config.iconPath + app.config.icons[\"E-Mail Sent\"], \r\n\t\t            ActionType: {\r\n\t\t                Id: \"15e86d4a-1b55-01be-C9fa-660a3cb3fc26\",\r\n\t\t                Name: \"Email Sent\"\r\n\t\t            }\r\n                    //ActionType: { Id: \"15E86D4A-1B55-01BE-C9FA-660A3CB3FC26\", Name: \"E-Mail Sent\" }\r\n                }\r\n                if (!vm.viewModel.ActionLog) {\r\n                    vm.viewModel.ActionLog = [];\r\n                }\r\n                \r\n                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                if (actionLogType) {\r\n                    vm.viewModel[actionLogType].push(newActionLog);\r\n                }\r\n            }\r\n\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n\r\n            var getAffectedUserEmail = function (_vmWindow) {\r\n                if (viewModel.RequestedWorkItem && viewModel.RequestedWorkItem.DisplayName != null) {\r\n                    filter['TO'] = vm.viewModel.RequestedWorkItem.DisplayName;\r\n                }\r\n                var affectedUserId = (vm.viewModel.RequestedWorkItem) ? vm.viewModel.RequestedWorkItem.BaseId : \"\";\r\n                $.ajax({\r\n                    url: \"/EmailNotification/GetffectedUserEmail\",\r\n                    type: \"GET\",\r\n                    data: { baseId: affectedUserId },\r\n                    success: function (data, textStatus, jqXHR) {\r\n                        if (!_.isUndefined(data) && data != \"\") {\r\n                            var affectedUser = { Id: vm.viewModel.RequestedWorkItem.BaseId, Name: vm.viewModel.RequestedWorkItem.DisplayName, Email: data };\r\n                            var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                            var isUserExist = picker.dataSource.data().find(function (element) {\r\n                                return element.Id === affectedUser.Id;\r\n                            });\r\n\r\n                            //add affected user to userpicker data source if id does not exist\r\n                            if (!isUserExist) {\r\n                                picker.dataSource.add(affectedUser);\r\n                            }\r\n\r\n                            //add affected user to recipient list\r\n                            recipientList[\"recipientToList\"].push(affectedUser);\r\n\r\n                            //set userpicker value to affected user\r\n                            picker.value(affectedUser.Id);\r\n                        }\r\n                    }\r\n                }); \r\n            }\r\n\r\n            var getRemoteManageRecepient = function () {\r\n                $(document).ready(function() {\r\n                    var recepient = { Id: vm.widget.remoteManageRecepient.BaseId, Name: vm.widget.remoteManageRecepient.DisplayName, Email: vm.widget.remoteManageRecepient.Email };\r\n                    filter['TO'] = recepient.DisplayName;\r\n                    var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                    var isUserExist = picker.dataSource.data().find(function (element) {\r\n                        return element.Id === recepient.Id;\r\n                    });\r\n\r\n                    //add affected user to userpicker data source if id does not exist\r\n                    if (!isUserExist) {\r\n                        picker.dataSource.add(recepient);\r\n                    }\r\n\r\n                    //add affected user to recipient list\r\n                    recipientList[\"recipientToList\"].push(recepient);\r\n\r\n                    //set userpicker value to affected user\r\n                    picker.value(recepient.Id);\r\n                });\r\n            }\r\n\r\n            var setDefaultWIStatus = function (_vmWindow) {\r\n                var enumId = _vmWindow.changeStatusSetting.defaultStatusId;\r\n\r\n                if (enumId == null) {\r\n                    _vmWindow.Status.set(\"Id\", vm.viewModel.Status.Id);\r\n                    _vmWindow.Status.set(\"Name\", vm.viewModel.Status.Name);\r\n                } else {\r\n                    $.ajax({\r\n                        url: \"/api/V3/Enum/GetEnumDisplayName\",\r\n                        type: \"GET\",\r\n                        data: { id: enumId },\r\n                        async: false,\r\n                        success: function (data, textStatus, jqXHR) {\r\n                            _vmWindow.Status.set(\"Id\", enumId);\r\n                            _vmWindow.Status.set(\"Name\", data);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            var validateEmailAddress = function (arrEmail) {\r\n                var invalidEmailAddress = null;\r\n                for (var i in arrEmail) {\r\n                    var email = arrEmail[i].trim();\r\n                    if (email == \"\") continue;\r\n                    if (app.validateEmail(email) == false) {\r\n                        invalidEmailAddress = email;\r\n                        break;\r\n                    }\r\n                }\r\n                return invalidEmailAddress;\r\n            }\r\n\r\n            var initializeUploader = function (cont, _vmWindow) {\r\n                _vmWindow.set(\"sendEmailAttachments\", []);\r\n                _vmWindow.set(\"filesCount\", 0);\r\n\r\n                var fileAction = function (el) {\r\n\r\n                    if (el.hasClass(\"opennewtab\")) {\r\n                        var win = window.open('about:blank');\r\n                        setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                            win.document.body.appendChild(win.document.createElement('img')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.focus();\r\n                        }, 0);\r\n\r\n                    }\r\n                    else {\r\n                        var dialog = $('.fileattachment-img-modal');\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        var listView = cont.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                        var item = el.closest(\"[role='option']\");\r\n                        var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n\r\n\r\n                        if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/) && !el.hasClass(\"download\")) {\r\n                            dialog.kendoDialog({\r\n                                modal: true,\r\n                                title: dataItem.DisplayName,\r\n                                content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" + dataItem.DisplayName + \"\\\" /></div>\",\r\n                                animation: {\r\n                                    open: {\r\n                                        effects: \"fade:in\"\r\n                                    }\r\n                                }\r\n                            });\r\n                            $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                            dialog.data(\"kendoDialog\").open();\r\n                        } else {\r\n                            if (dataItem.Content.data && !dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                                var blob = new Blob([dataItem.Content.data]);\r\n                                var url = window.URL.createObjectURL(blob);\r\n                                var fileName = dataItem.DisplayName;\r\n\r\n                                if (navigator.msSaveOrOpenBlob) {\r\n                                    navigator.msSaveOrOpenBlob(blob, fileName);\r\n                                    return;\r\n                                } else if (window.navigator.msSaveBlob) { // for IE browser\r\n                                    window.navigator.msSaveBlob(blob, fileName);\r\n                                    return;\r\n                                }\r\n\r\n                                var a = document.createElement(\"a\");\r\n                                document.body.appendChild(a);\r\n                                a.style = \"display: none\";\r\n\r\n                                a.href = url;\r\n                                a.download = fileName;\r\n                                a.click();\r\n                                window.URL.revokeObjectURL(url);\r\n                                document.body.removeChild(a);\r\n                            } else if (dataItem.BaseId) {\r\n                                if (dataItem.BaseId != null) {\r\n                                    location.href = downloadUrl + dataItem.BaseId;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                cont.find(\".fileattachment-list\").kendoListView({\r\n                    dataSource: _vmWindow.sendEmailAttachments,\r\n                    template: kendo.template(cont.find(\"#fileTemplate\").html()),\r\n                    selectable: \"single\",\r\n                    dataBound: function (e) {\r\n\r\n                        cont.find(\".custom-click\").on(\"click\", function () {\r\n                            fileAction($(this));\r\n                        });\r\n\r\n                        if (!app.isMobile()) {\r\n                            //Remove view image icon if not in mobile.\r\n                            cont.find(\"a[view-image]\").parent().hide();\r\n\r\n                            cont.find(\".thumbnail-img img\").on(\"click\", function () {\r\n                                fileAction($(this));\r\n                            });\r\n                        }\r\n                        \r\n                        /*var dialog = $('.fileattachment-img-modal');\r\n                        var index = this.select().index(),\r\n                        dataItem = this.dataSource.view()[index];\r\n\r\n                        if (dialog.length > 1) {\r\n                            for (var i = 1; i < dialog.length; i++) {\r\n                                if ($(dialog[i]).data(\"kendoDialog\"))\r\n                                    $(dialog[i]).data(\"kendoDialog\").destroy();\r\n                                dialog.eq(i).remove();\r\n                            }\r\n                        }\r\n\r\n                        if (dataItem) {\r\n\r\n                            var dialogs = $('.acivity-popup-window');\r\n                            if (dialogs.length > 1) {\r\n                                for (var i = 1; i < dialogs.length; i++) {\r\n                                    dialogs.eq(i).remove();\r\n                                }\r\n                            }\r\n\r\n                            if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                                dialog.kendoDialog({\r\n                                    modal: true,\r\n                                    title: dataItem.DisplayName,\r\n                                    content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" +\r\n                                        dataItem.Content.data +\r\n                                        \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" +\r\n                                        dataItem.DisplayName +\r\n                                        \"\\\" /></div>\",\r\n                                    animation: {\r\n                                        open: {\r\n                                            effects: \"fade:in\"\r\n                                        }\r\n                                    }\r\n                                });\r\n                                $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                                dialog.data(\"kendoDialog\").open();\r\n                            } else {\r\n                                if (dataItem.Content.data) {\r\n                                    var blob = new Blob([dataItem.Content.data]);\r\n                                    var url = window.URL.createObjectURL(blob);\r\n                                    var fileName = dataItem.DisplayName;\r\n\r\n                                    if (navigator.msSaveOrOpenBlob) {\r\n                                        navigator.msSaveOrOpenBlob(blob, fileName);\r\n                                        return;\r\n                                    } else if (window.navigator.msSaveBlob) { // for IE browser\r\n                                        window.navigator.msSaveBlob(blob, fileName);\r\n                                        return;\r\n                                    }\r\n\r\n                                    var a = document.createElement(\"a\");\r\n                                    document.body.appendChild(a);\r\n                                    a.style = \"display: none\";\r\n\r\n                                    a.href = url;\r\n                                    a.download = fileName;\r\n                                    a.click();\r\n                                    window.URL.revokeObjectURL(url);\r\n                                    document.body.removeChild(a);\r\n                                }else if (dataItem.BaseId) {\r\n                                    var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                                    location.href = downloadUrl + dataItem.BaseId;\r\n                                }\r\n                            }\r\n                        }\r\n                        */\r\n                    },\r\n                    remove: function (e) {\r\n                        //console.warn(_vmWindow)\r\n                    }\r\n                });\r\n\r\n\r\n               \r\n                var uploader = cont.find(\"#email-attachment\").kendoUpload({\r\n                    async: {\r\n                        saveUrl: \"/FileAttachment/UploadAttachment/\" + vm.viewModel.BaseId + \"?className=\" + vm.viewModel.ClassName + \"&count=\" + vm.viewModel.FileAttachment.length,\r\n                        autoUpload: true\r\n                    },\r\n                    success: function (e) {\r\n                        kendo.ui.progress(cont.find(\".fileattachment-list\"), true);\r\n                        var response = e.response;\r\n                        if (e.operation == \"upload\") {\r\n                            for (var i = 0; i < e.files.length; i++) {\r\n                                var file = e.files[i].rawFile;\r\n                                if (file) {\r\n                                    if (!_.isUndefined(response.FileAttachment)) {\r\n                                        _vmWindow.sendEmailAttachments.push(response.FileAttachment);\r\n                                        _vmWindow.set(\"attachmentErrorMessage\", \"\");\r\n                                        _vmWindow.set(\"okEnabled\", true);\r\n                                    } else if (!_.isUndefined(response.success) && response.success == false) {\r\n                                        _vmWindow.set(\"okEnabled\", false);\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.ErrorDescription,\r\n                                            message: response.message,\r\n                                            icon: \"fa fa-exclamation\"\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        kendo.ui.progress(cont.find(\".fileattachment-list\"), false);\r\n                    },\r\n                    error: function (e) {\r\n                        var err = $.parseJSON(e.XMLHttpRequest.responseText);\r\n                        $.map(e.files, function (file) {\r\n                            console.warn(\"Could not upload \" + file.name);\r\n                        });\r\n                    },\r\n                    showFileList: false,\r\n                    dropZone: \".drop-zone-element\"\r\n                }).data(\"kendoUpload\");\r\n              \r\n                cont.find(\".browse-file\").click(function (e) {\r\n                    $(\"#email-attachment\").trigger(\"click\");\r\n                });\r\n\r\n\r\n            }\r\n\r\n            var initializeUserPicker = function (targetEle, viewModel, targetProp) {\r\n                //skipped initialization if we already have one created\r\n                if (!_.isUndefined(targetEle.data(\"kendoMultiSelect\"))) { return; }\r\n\r\n                var targetKey = (targetEle[0].id.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                var userPicker = targetEle.kendoMultiSelect({\r\n                    placeholder: localization.Search,\r\n                    dataTextField: \"Name\",\r\n                    dataValueField: \"Id\",\r\n                    autoBind: false,\r\n                    filter: \"contains\",\r\n                    dataSource: new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/api/V3/User/GetUserListWithEmail\",\r\n                                data: {\r\n                                    filterByAnalyst: false,\r\n                                    maxNumberOfResults: 10,\r\n                                    userFilter: function () {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true //,\r\n                        // filter: [{ field: \"Email\", operator: \"neq\", value: \"\" }]\r\n                    }),\r\n                    filtering: function (e) {\r\n                        if (e.filter != undefined) {\r\n                            var key = (e.sender.element[0].id.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                            filter[key] = e.filter.value;\r\n                        }\r\n                    },\r\n                    open: function () {\r\n                        var filters = this.dataSource.filter();\r\n                        if (filters!=null) {\r\n                            //clear applied filters\r\n                            //Filter should be cleared to remove conflict with assigning the affected users.\r\n                            //this.dataSource.filter({});\r\n                        }\r\n                    },\r\n                    tagTemplate: \"<span title='#: data.Email #'>#: data.Name #;</span>\",\r\n                    select: function (e) {\r\n                        var currentList = recipientList[targetProp];\r\n                        currentList.push(e.dataItem);\r\n                        recipientList[targetProp] = currentList;\r\n                    },\r\n                    deselect: function (e) {\r\n                        var currentList = recipientList[targetProp];\r\n                        if (e.dataItem.Id) {\r\n                            currentList = _.filter(currentList,\r\n                                function(item) {\r\n                                    return item.Id !== e.dataItem.Id;\r\n                                });\r\n                        }\r\n                        recipientList[targetProp] = currentList;\r\n                    },\r\n                    clearButton: false\r\n                }).data(\"kendoMultiSelect\");\r\n              \r\n                userPicker.input.on(\"keydown\", function (e) {\r\n                    if (e.keyCode === 9) {\r\n                        //treat tab event as \"enter\"\r\n                        var e = jQuery.Event(\"keydown\");\r\n                        e.which = 13; // # Some key code value\r\n                        e.keyCode = 13;\r\n                        userPicker.input.trigger(e);\r\n                    }\r\n                });\r\n            }\r\n\r\n            var sendEmail = function (_vmWindow, cont) {\r\n                var bChangeStatus = _vmWindow.changeStatus;\r\n                var bAddActionLog = _vmWindow.addToLog;\r\n                var addToLogSkipped = false;\r\n                var bHasAttachment = (_vmWindow.sendEmailAttachments.length > 0);\r\n                var strAttachedFileNames = (_vmWindow.sendEmailAttachments.length > 0)\r\n                    ? _.pluck(_vmWindow.sendEmailAttachments, \"DisplayName\").join(',') : \"\"; //multiple filenames, comma delimited\r\n                var strMessage = encodeURIComponent(_vmWindow.emailHTMLMessage);\r\n                var strMessagePlain = _vmWindow.emailTextMessage;\r\n\r\n                var workItemFileIds = (_vmWindow.fromWorkItemAttachementsId.length > 0)\r\n                    ? _vmWindow.fromWorkItemAttachementsId.join(',') : \"\";\r\n\r\n\r\n                strMessage = (session.emailFooterTemplate.length > 0)\r\n                    ? strMessage + \"\\r\\n\" + encodeURIComponent($('<div/>').html(session.emailFooterTemplate).text())\r\n                    : strMessage;\r\n                \r\n                var emailData = {\r\n                    To: _vmWindow.emailTo,\r\n                    Cc: _vmWindow.emailCC,\r\n                    Subject: _vmWindow.emailSubject.replace(/</g, \"%3C\").replace(/>/g, \"%3E\"),\r\n                    Message: strMessage,\r\n                    AttachedFileNames: strAttachedFileNames,\r\n                    WorkItemId: vm.viewModel.BaseId,\r\n                    workItemFileIds: workItemFileIds\r\n                };\r\n                var sendEmailAttachments = _vmWindow.sendEmailAttachments;\r\n                var bSetFirstResponsDate = _vmWindow.setFirstResponseDate;\r\n                \r\n                $.ajax({\r\n                    url: \"/EmailNotification/SendEmailNotification\",\r\n                    type: \"POST\",\r\n                    data: emailData,\r\n                    success: function (data, textStatus, jqXHR) {\r\n                        var bSuccess = data.toLowerCase() == \"true\" ? true : false;\r\n                        kendo.ui.progress(cont, false);\r\n                        if (bSuccess) {\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.SendEmail,\r\n                                message: localization.SendEmailSuccessMessage\r\n                            })).done(function (response) {\r\n                                //change status if status in dropdown has value\r\n                                if (_vmWindow.Status != null && _vmWindow.Status.Id != \"\") {\r\n                                    vm.viewModel.Status.set(\"Id\", _vmWindow.Status.Id);\r\n                                    bChangeStatus = true;\r\n                                }\r\n\r\n                                if (bHasAttachment) {\r\n                                    //add file attachment details to vm after email is sent\r\n                                    if (!_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                                        _.each(sendEmailAttachments, function (item) {\r\n                                            vm.viewModel.FileAttachment.push(item);\r\n\r\n                                            var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                            if (actionLogType) {\r\n                                                vm.viewModel[actionLogType].unshift(new app.dataModels[actionLogType].fileAdded(item.DisplayName));\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (bAddActionLog) {\r\n                                    strMessagePlain = _.isUndefined(strMessagePlain) ? \"\" : strMessagePlain.substring(0, 4000);\r\n\r\n                                    if (strMessagePlain.length > 0) {\r\n                                        addToCommentLog(strMessagePlain.replace(/</g, '&lt;').replace(/>/g, '&gt;'), _vmWindow.setAsPrivate);\r\n                                    } else {\r\n                                        bAddActionLog = false;\r\n                                        addToLogSkipped = true;\r\n                                    }\r\n                                }\r\n\r\n                                if (bSetFirstResponsDate) {\r\n                                    vm.viewModel.set(\"FirstResponseDate\", new Date().toISOString());\r\n                                }\r\n\r\n                                //--end additional change checks/processing\r\n\r\n                                //save changes and show warnings, if any\r\n                                var handleSaveSuccess = function () {\r\n                                    vm.save(function () {\r\n                                        app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                        switch (vm.type) {\r\n                                        case \"ChangeRequest\":\r\n                                            location.href = \"/ChangeRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"ServiceRequest\":\r\n                                            location.href = \"/ServiceRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"Incident\":\r\n                                            location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"Problem\":\r\n                                            location.href = \"/Problem/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"ReleaseRecord\":\r\n                                            location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        default:\r\n                                            //my workitem view\r\n                                            location.href = \"/View/cca5abda-6803-4833-accd-d59a43e2d2cf/\";\r\n                                            break;\r\n                                        }\r\n                                    }, saveFailure);\r\n                                }\r\n                                if (addToLogSkipped) {\r\n                                    //note: addToLogSkipped dialog will only show if the empty message validation fails\r\n                                    $.when(kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.SkippedAddingLogEntryTitle,\r\n                                        message: localization.ErrorAddingLogEntryMessage,\r\n                                        icon: \"fa fa-warning\"\r\n                                    })).done(function() {\r\n                                        handleSaveSuccess();\r\n                                    });\r\n                                } else {\r\n                                    handleSaveSuccess();\r\n                                }\r\n                                //--end save changes and warnings\r\n                            });\r\n                        } else {\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.SendEmail,\r\n                                message: localization.SendEmailFailedMessage\r\n                            }));\r\n                            kendo.ui.progress(cont, false);\r\n                        }\r\n                    },\r\n                    error: function (jqXHR, textStatus, errorThrown) {\r\n                        console.log(jqXHR, textStatus, errorThrown)\r\n                    }\r\n                });\r\n            }\r\n\r\n            var buildEditor = function (targetEle, _vmWindow) {\r\n                var defaultTools = [\r\n                     \"bold\", \"italic\", \"underline\",\r\n                     \"formatting\", \"foreColor\", \"backColor\",\r\n                     \"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\",\r\n                     \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                     \"createLink\", \"unlink\", \"insertImage\",\r\n                     \"viewHtml\",\r\n                     \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                     { name: \"insertLineBreak\", shift: true },\r\n                     { name: \"insertParagraph\", shift: true }\r\n                ];\r\n                var mobileTools = [\r\n                    \"formatting\",\r\n                    \"createLink\", \"unlink\", \"insertImage\", \"viewHtml\",\r\n                    \"bold\", \"italic\", \"underline\",\r\n                    \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                    \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                    { name: \"insertLineBreak\", shift: true },\r\n                    { name: \"insertParagraph\", shift: true }\r\n                ];\r\n                var editor = targetEle.data(\"kendoEditor\");\r\n                if (!_.isUndefined(editor)) { return; }\r\n                editor = targetEle.kendoEditor({\r\n                    change: function (e) {\r\n                        var content = e.sender.body.innerText || e.sender.body.textContent;\r\n                        _vmWindow.set(\"emailTextMessage\", content);\r\n                    },\r\n                    tools: app.isMobileDevice() ? mobileTools : defaultTools,\r\n                    stylesheets: [\"/Content/Styles/cireson.mentions-in-keditor.min.css\"],\r\n                    encoded: true,\r\n                    paste: function (e) {\r\n                    },\r\n                    pasteCleanup: {\r\n                        custom: function (html) {\r\n\r\n                            try {\r\n                                if ($(html)[0].tagName === \"IMG\") {\r\n\r\n                                    var dataSRC = $(html).attr('src');\r\n                                    var blob;\r\n\r\n                                    if (dataSRC.match(/^data:image\\/(png|jpg);base64,/) === null) {\r\n                                        var img = new Image;\r\n\r\n                                        img.setAttribute('crossOrigin', 'anonymous');\r\n\r\n                                        img.src = dataSRC;\r\n\r\n                                        $(img).one(\"load\",\r\n                                            function () {\r\n                                                setTimeout(function () {\r\n                                                        dataSRC = getBase64Image(img);\r\n                                                        blob = dataURItoBlob(dataSRC);\r\n                                                        uploadPastedImage(blob, _vmWindow);\r\n                                                    },\r\n                                                    0);\r\n                                            }).each(function () {\r\n                                            if (this.complete) $(this).load();\r\n                                        });\r\n                                    } else {\r\n                                        blob = dataURItoBlob(dataSRC);\r\n                                        uploadPastedImage(blob, _vmWindow);\r\n                                    }\r\n                                }\r\n                            } catch (err) {\r\n                                //console.error(err);\r\n                            }\r\n\r\n                            return html;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                function uploadPastedImage(file, _vmWindow) {\r\n                    var d = new Date();\r\n                    var timestamp = d.getTime();\r\n\r\n                    var formData = new FormData();\r\n                    formData.append('files', file, \"screenshot_\" + timestamp + \".png\");\r\n\r\n                    $.ajax({\r\n                        url: \"/FileAttachment/UploadAttachment/\" +\r\n                            vm.viewModel.BaseId +\r\n                            \"?className=\" +\r\n                            vm.viewModel.ClassName +\r\n                            \"&count=\" +\r\n                            vm.viewModel.FileAttachment.length,\r\n                        data: formData,\r\n                        type: 'POST',\r\n                        async: true,\r\n                        contentType: false,\r\n                        processData: false,\r\n                        dataType: \"json\",\r\n                        success: function (response) {\r\n                            if (!_.isUndefined(response.FileAttachment)) {\r\n                                _vmWindow.sendEmailAttachments.push(response.FileAttachment);\r\n                                _vmWindow.set(\"attachmentErrorMessage\", \"\");\r\n                                _vmWindow.set(\"okEnabled\", true);\r\n                            } else {\r\n                                _vmWindow.set(\"attachmentErrorMessage\", response.message);\r\n                                _vmWindow.set(\"okEnabled\", false);\r\n                                _vmWindow.set(\"emailAttachment\", \"\");\r\n                            }\r\n                        },\r\n                        error: function(err) {\r\n                            console.warn(err);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                function getBase64Image(img) {\r\n                    // Create an empty canvas element\r\n                    var canvas = document.createElement(\"canvas\");\r\n                    canvas.width = img.width;\r\n                    canvas.height = img.height;\r\n                    // Copy the image contents to the canvas\r\n                    var ctx = canvas.getContext(\"2d\");\r\n                    ctx.drawImage(img, 0, 0);\r\n                    // Get the data-URL formatted image\r\n                    // Firefox supports PNG and JPEG. You could check img.src to\r\n                    // guess the original format, but be aware the using \"image/jpg\"\r\n                    // will re-encode the image.\r\n                    var dataURL = canvas.toDataURL(\"image/png\");\r\n                    return dataURL;\r\n                }\r\n\r\n                function dataURItoBlob(dataURI) {\r\n                    // convert base64 to raw binary data held in a string\r\n                    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n                    var byteString = atob(dataURI.split(',')[1]);\r\n\r\n                    // separate out the mime component\r\n                    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\r\n\r\n                    // write the bytes of the string to an ArrayBuffer\r\n                    var ab = new ArrayBuffer(byteString.length);\r\n\r\n                    // create a view into the buffer\r\n                    var ia = new Uint8Array(ab);\r\n\r\n                    // set the bytes of the buffer to the correct values\r\n                    for (var i = 0; i < byteString.length; i++) {\r\n                        ia[i] = byteString.charCodeAt(i);\r\n                    }\r\n\r\n                    // write the ArrayBuffer to a blob, and you're done\r\n                    var blob = new Blob([ab], { type: mimeString });\r\n                    return blob;\r\n\r\n                }\r\n\r\n\r\n                var at_config = {\r\n                    at: \"@\",\r\n                    data: _vmWindow.users,\r\n                    headerTpl: '<div class=\"atwho-header\">Search Users</div>',\r\n                    insertTpl: '${atwho-at}${name}',\r\n                    displayTpl: \"<li id='${guid}'> ${name} <br><span>${email}</span> </li>\",\r\n                    limit: 5,\r\n                    startWithSpace: false,\r\n                    editableAtwhoQueryAttrs: {}\r\n                }\r\n\r\n                var iframe = editor.prev()[0];\r\n                var innerDoc = iframe.contentDocument || iframe.contentWindow.document;\r\n\r\n                $inputor = $(innerDoc).find('body').atwho(at_config);\r\n                $inputor.caret('pos', 47);\r\n                $inputor.atwho('run');\r\n\r\n                $inputor.on(\"inserted.atwho\", function (event, $li) {\r\n                    var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                    var userId = $($li)[0].id;\r\n                    var user = _.filter(at_config.data,\r\n                        function (el) {\r\n                            return el.guid === userId;\r\n                        });\r\n\r\n                    if (!_.isUndefined(user[0]) && !_.isNull(user[0])) {\r\n                        var userData = { Id: user[0].guid, Name: user[0].name, Email: user[0].email }\r\n                        recipientList[\"recipientToList\"].push(userData);\r\n\r\n                        var isUserExist = picker.dataSource.data().find(function (element) {\r\n                            return element.Id === userData.Id;\r\n                        });\r\n\r\n                        //add at-mentioned user to userpicker data source if id does not exist\r\n                        if (!isUserExist) {\r\n                            picker.dataSource.add(userData);\r\n                        }\r\n                    }\r\n\r\n                    picker.value(_.pluck(recipientList[\"recipientToList\"], \"Id\"));\r\n                });\r\n\r\n                $(document).on(\"removed.atwho\", function (e) {\r\n                    var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                    if ($(iframe).is($(e.target.activeElement))) {\r\n                        var userId = e.removedAtWhoId;\r\n                        var newList = _.without(recipientList[\"recipientToList\"], _.findWhere(recipientList[\"recipientToList\"], {\r\n                            Id: userId\r\n                        }));\r\n                        recipientList[\"recipientToList\"] = newList;\r\n                        picker.value(_.pluck(recipientList[\"recipientToList\"], \"Id\"));\r\n                    }\r\n                });\r\n            }\r\n\r\n            var initializeStatusPicker = function (targetEle, viewModel) {\r\n                var filterIdParam = \"\";\r\n                var filterId = viewModel.changeStatusSetting.rootStatusEnumId;\r\n                if (filterId != null) {\r\n                    if (filterId.toLowerCase() == viewModel.Status.Id.toLowerCase()) {\r\n                        filterIdParam = filterId;\r\n                    } else {\r\n                        filterIdParam = filterId + \",\" + viewModel.Status.Id;\r\n                    }\r\n                }\r\n                var enumId = viewModel.changeStatusSetting.statusTypeId;\r\n\r\n                var statusProperties = {\r\n                    PropertyName: \"Status\",\r\n                    PropertyDisplayName: \"ChangeStatus\",\r\n                    EnumId: viewModel.changeStatusSetting.statusTypeId,\r\n                    FilterIds: filterIdParam,\r\n                    Disabled: !viewModel.changeStatusSetting.enableChangeStatus\r\n                };\r\n\r\n                buildEnumPicker(targetEle, statusProperties, viewModel);\r\n            };\r\n\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n           \r\n            var applyChangeStatus = function (cont, vm, _vmWindow) {\r\n                var selectedWiType = vm.type;\r\n                var currentStatusId = vm.viewModel.Status.Id;\r\n                var statusEnumId = _vmWindow.changeStatusSetting.statusTypeId;\r\n                var rootStatusEnumId = _vmWindow.changeStatusSetting.rootStatusEnumId;\r\n                var dropDownControl = cont.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                var treeControl = cont.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n\r\n                //determine allowed status changes based on current type and status\r\n                var changeRules = app.lib.getChangeStatusRules();\r\n                var changeRulesFilter = changeRules[selectedWiType][currentStatusId];\r\n\r\n                //since Incident can have custom enums we need to check here if no rules were set then its not resolved\r\n                if (selectedWiType == \"Incident\" && _.isUndefined(changeRulesFilter)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"neq\", value: app.constants.workItemStatuses.Incident.Closed };\r\n                }\r\n\r\n                if (!_.isNull(rootStatusEnumId)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"eq\", value: rootStatusEnumId };\r\n                }\r\n\r\n                //apply allowed status filtering\r\n                treeControl.dataSource.options.serverFiltering = false;\r\n                treeControl.dataSource.filter(changeRulesFilter);\r\n\r\n                //reassign dropdown datasource with filtered data so that users will not be able to access restricted status by typing\r\n                $.get(\"/api/V3/Enum/GetFlatList/\", { id: statusEnumId, itemFilter: \"\" }, function (data) {\r\n                    var comboDataSource = new kendo.data.DataSource();\r\n                    comboDataSource.data(data);\r\n                    comboDataSource.filter(changeRulesFilter);\r\n                    if (comboDataSource.view().length > 0) {\r\n                        dropDownControl.setDataSource(comboDataSource.view());\r\n                    }\r\n                });\r\n            };\r\n           \r\n            var getSendEmailChangeStatusSettings = function (viewModel) {\r\n                switch (vm.type) {\r\n                    case \"ServiceRequest\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ServiceRequest.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailServiceRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailServiceDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailServiceAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"ChangeRequest\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ChangeRequest.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailChangeRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailChangeDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailChangeAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"Problem\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.Problem.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailProblemRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailProblemDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailProblemAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"ReleaseRecord\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ReleaseRecord.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailReleaseRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailReleaseDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailReleaseAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"Incident\":\r\n                    default:\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.Incident.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailIncidentRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailIncidentDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailIncidentAllowAnalystToChangeStatus;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nCustom\r\n**/\r\n\r\ndefine('forms/tasks/custom/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            if (_.isNull(node.Label)) {\r\n                //if no label (achot no link, just call the function)\r\n                node.Configs.func(vm, vm.viewModel);\r\n\r\n            } else {\r\n                //first add the anchor\r\n                var link = _.template(anchor);\r\n\r\n                //make sure we have all the node set\r\n                var properties = {\r\n                    Target: \"customFunc\"\r\n                };\r\n\r\n                $.extend(true, properties, node);\r\n\r\n                //create view model \r\n                var viewModel = kendo.observable({\r\n                    //call custom defined function\r\n                    customFunc: function () {\r\n                        node.Configs.func(vm, vm.viewModel);\r\n                    }\r\n                });\r\n\r\n                var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n                callback(anchorElm.render());\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/spacer/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nSPACER\r\n**/\r\n\r\ndefine('forms/tasks/spacer/controller',['require','text!forms/tasks/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/tasks/spacer/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/associateItem/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    $(\"input[name='\" + node.Configs.relationshipKey + \"']\").parent().find(\".searchIcon\").click();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            \r\n\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/setDate/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"datePicker\"/>\\r\\n            <div id=\"disposalReference\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/fields/date/view.html',[],function () { return '<div class=\"form-group\"\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n    >\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input name=\"<%= PropertyName %>\"\\r\\n           data-control=\"datePicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-from=\"<%= FromFilter %>\"\\r\\n           data-control-to=\"<%= ToFilter %>\"\\r\\n           data-control-from-relative=\"<%= FromRelative %>\"\\r\\n           data-control-to-relative=\"<%= ToRelative %>\"\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n     />\\r\\n</div>';});\n\n","/**\r\nDate\r\n**/\r\n\r\ndefine('forms/fields/date/controller',['require','text!forms/fields/date/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/date/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                FromFilter: '',\r\n                ToFilter: '',\r\n                FromRelative: '',\r\n                ToRelative: '',\r\n                Disabled: node.disabled,\r\n                Required: node.Required\r\n            };\r\n\r\n            //set from filter\r\n            if (node.MinValue != undefined) {\r\n                if (node.MinValue.indexOf(\":\") != -1) {\r\n                    properties.FromRelative = node.MinValue;\r\n                } else if (typeof node.MinValue == \"string\") {\r\n                    properties.FromFilter = node.MinValue;\r\n                }\r\n            }\r\n\r\n            //set to filter\r\n            if (node.MaxValue != undefined) {\r\n                if (node.MaxValue.indexOf(\":\") != -1) {\r\n                    properties.ToRelative = node.MaxValue;\r\n                } else if (typeof node.MaxValue == \"string\") {\r\n                    properties.ToFilter = node.MaxValue;\r\n                }\r\n            }\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/string/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"value: <%= PropertyName %><% if ( LimitLength ){ %>, events : { blur: view.stringController.CheckLength }<% } %>\"\\r\\n\\r\\n\\r\\n    <% if ( LimitLength ){ %>\\r\\n    maxlength=\"<%= MaxLength %>\"\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n\\r\\n    />\\r\\n\\r\\n    <% if ( LimitLength ){ %>\\r\\n    <p class=\"help-block validation-summary-errors\" style=\"display: none;\"><%= localization.MaxLengthError.replace(\"{0}\", MaxLength) %></p>\\r\\n    <% } %>\\r\\n\\r\\n</div>';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/string/controller',['require','text!forms/fields/string/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/string/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.stringController = {\r\n                CheckLength: function CheckLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n\r\n            vm.view.buildStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength\r\n                };\r\n                $.extend(true, properties, node);\r\n                \r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/setDate/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/setDate/view.html','forms/fields/date/controller','forms/fields/string/controller','forms/fields/longstring/controller','forms/fields/boolean/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/setDate/view.html\");\r\n    var datePicker = require(\"forms/fields/date/controller\");\r\n    var stringArea = require(\"forms/fields/string/controller\");\r\n    var txtArea = require(\"forms/fields/longstring/controller\");\r\n    var checkBox = require(\"forms/fields/boolean/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = node.Configs.Title;//localization.ChangeStatusTask;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            var datePickerCtrl;\r\n            var checkboxCtrl;\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            switch(node.Configs.viewType){\r\n                                case \"hdDisposal\":\r\n                                    vm.viewModel.set(\"HardwareAssetStatus\", { Id: \"020822bd-7d3a-4c0f-1be4-325ef1aa52b4\", Name: localization.Disposed });\r\n                                    break;\r\n                                case \"hdREcieveDate\":\r\n                                case \"MasterContractRenewedOn\":\r\n                                    if (vm.viewModel.get(checkboxCtrl.attr(\"name\"))) {\r\n                                        datePickerCtrl.val(\"\").blur();\r\n\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            var cancelledDate = \"\";\r\n                            if (!_.isNull(originalDate)) {\r\n                                cancelledDate = kendo.toString(new Date(originalDate), \"g\");\r\n                            }\r\n                            $('[name=\"' + dateProperties.PropertyName + '\"]').val(cancelledDate).blur();\r\n                            if (node.Configs.viewType == \"hdDisposal\") {\r\n                                vm.viewModel.set(\"DisposalReference\", OriginalDisposalReference);\r\n                            } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                                vm.viewModel.recieveCheckbox = OriginalCheckBox;\r\n                            }\r\n                            else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                                vm.viewModel.masterContractStartingDateCheckbox = OriginalCheckBox;\r\n                            }\r\n\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    if (node.Configs.viewType == \"hdDisposal\") {\r\n                        dateLabel = localization.DisposalDate;\r\n                    } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                        dateLabel = localization.ReceiveDate;\r\n                    } else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                        dateLabel = localization.StartDate;\r\n                    }\r\n\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    //create status enumPicker\r\n                    \r\n                    var originalDate = vm.viewModel.get(node.Configs.propertyKey);\r\n                    var dateProperties = {\r\n                        PropertyName: node.Configs.propertyKey,\r\n                        PropertyDisplayName: dateLabel,\r\n                        vm: vm.viewModel,\r\n                        disabled:false\r\n                    };\r\n                    \r\n                    buildDatePicker(cont.find('#datePicker'), dateProperties, vm.viewModel);\r\n\r\n                    if (node.Configs.viewType == \"hdDisposal\") {\r\n                        var OriginalDisposalReference = vm.viewModel.get(\"DisposalReference\");\r\n                        var stringProperties = {\r\n                            PropertyName: \"DisposalReference\",\r\n                            PropertyDisplayName: localization.DisposalReference,\r\n                            vm: vm.viewModel\r\n                        };\r\n                        buildString(cont.find(\"#disposalReference\"), stringProperties, vm.viewModel);\r\n                    } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                        var OriginalCheckBox = vm.viewModel.recieveCheckbox;\r\n                        var properties = {\r\n                            PropertyName: \"recieveCheckbox\",\r\n                            PropertyDisplayName: localization.RemoveReceivedDate,\r\n                            Inline: true\r\n                        };\r\n                        buildCheckbox(cont.find(\"#disposalReference\"), properties, vm.viewModel);\r\n                    } else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                        var OriginalCheckBox = vm.viewModel.masterContractStartingDateCheckbox;\r\n                        var properties = {\r\n                            PropertyName: \"masterContractStartingDateCheckbox\",\r\n                            PropertyDisplayName: localization.RemoveMasterLeaseWarrantyStarts,\r\n                            Inline: true\r\n                        };\r\n                        buildCheckbox(cont.find(\"#disposalReference\"), properties, vm.viewModel);\r\n                    }\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var buildDatePicker = function (container, props, vmModel) {\r\n                if (_.isNull(vmModel[props.PropertyName]) || vmModel[props.PropertyName] == \"\") {\r\n                    vmModel.set(props.PropertyName, kendo.toString(new Date(), \"g\"));\r\n                } else {\r\n                    vmModel.set(props.PropertyName, kendo.toString(new Date(vmModel[props.PropertyName]), \"g\"));\r\n                }\r\n                \r\n                datePicker.build(vmModel, props, function (dateControl) {\r\n                    container.html(dateControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                    datePickerCtrl = container.find(\"input[name='\" + props.PropertyName + \"']\");\r\n\r\n                    //will make sure date will reflect back to the main control from the form\r\n                    datePickerCtrl.focus();\r\n                    datePickerCtrl.blur();\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildCheckbox = function (container, props, vmModel) {\r\n                checkBox.build(vmModel, props, function (checkboxControl) {\r\n                    container.html(checkboxControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                    checkboxCtrl = container.find(\"input[name='\" + props.PropertyName + \"']\");\r\n                    vm.viewModel.set(props.PropertyName,false);\r\n                    checkboxCtrl.click(function () {\r\n                        var dtm = datePickerCtrl.data(\"kendoDatePicker\");\r\n                        if (this.checked) {\r\n                            dtm.enable(false);\r\n                        } else {\r\n                            dtm.enable(true);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nupdate Asset Management\r\n**/\r\n\r\n\r\ndefine('forms/tasks/updateAssetManagement/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n            var onloadTaskTrigger = function () {\r\n                switch (node.Configs.type) {\r\n                    case \"WarrantyContract\":\r\n                    case \"SupportAndMaintenance\":\r\n                    case \"ContractLease\":\r\n                        CommonContract.UpdateStatus(vm.viewModel,true);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            onloadTaskTrigger();\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    switch (node.Configs.type) {\r\n                        case \"License\":\r\n                            pageForm.SetSeatsRemaining(pageForm.viewModel);\r\n                            break;\r\n                        case \"SoftwareAsset\":\r\n                            UpdateSoftwareAsset(vm.viewModel);\r\n                            break;\r\n                        case \"Consumables\":\r\n                            UpdateConsumable(vm.viewModel);\r\n                            break;\r\n                        default:\r\n                            CommonContract.SupersedesParent(vm.viewModel);\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            \r\n\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            var UpdateConsumable = function (vmModel) {\r\n                if (vmModel.CountAssignedConsumableUsers || vmModel.CountAssignedConsumableAssets) {\r\n                    var assignedCount = 0;\r\n                    if (!_.isNull(vmModel.Target_ConsumableHasAssignedUsers) && vmModel.CountAssignedConsumableUsers) {\r\n                        assignedCount += vmModel.Target_ConsumableHasAssignedUsers.length;\r\n                    }\r\n                    if (!_.isNull(vmModel.Target_ConsumableHasAssignedAssets) && vmModel.CountAssignedConsumableAssets) {\r\n                        assignedCount += vmModel.Target_ConsumableHasAssignedAssets.length;\r\n                    }\r\n                    vmModel.set(\"AssignedCount\", assignedCount);\r\n                }\r\n            }\r\n\r\n            var UpdateSoftwareAsset = function (vmModel) {\r\n\r\n                $.when(kendo.ui.ExtYesNoDialog.show({\r\n                    title: localization.CiresonAssetManagement,\r\n                    message: localization.SoftwareAssetUpdateConfirmationMsg\r\n                })).done(function (response) {\r\n                    if (response.button === \"yes\") {\r\n                        vmModel.save(function (isOk, postData) {\r\n                            if (isOk == true) {\r\n                                $.ajax({\r\n                                    type: 'POST',\r\n                                    dataType: 'json',\r\n                                    url: \"/AssetManagement/SoftwareAsset/UpdateSoftwareAsset/\",\r\n                                    data: \"formJson=\" + postData + \"&id=\" + vmModel.BaseId,\r\n                                    success: function (data, status, xhr) {\r\n                                        if (data.Success == true) {\r\n                                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                                title: localization.CiresonAssetManagement,\r\n                                                message: localization.SoftwareAssetUpdated\r\n                                            })).done(function (response) {\r\n                                                vmModel.set(\"isDirty\", false);\r\n                                                app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                                window.location.reload(true);\r\n                                            });;\r\n                                        } else {\r\n                                            kendo.ui.ExtAlertDialog.show({\r\n                                                title: localization.CiresonAssetManagement,\r\n                                                message: localization.ErrorOccured\r\n                                            });\r\n                                        }\r\n                                    },\r\n                                    error: function (xhr, ajaxOptions, thrownError) {\r\n                                        failure();\r\n                                        console && app.lib.log(localization.RequestFailed);\r\n                                        app.lib.log(thrownError);\r\n\r\n                                        var jsonRsp = xhr.responseText;\r\n                                        app.lib.log(jsonRsp);\r\n\r\n                                        var errorMsg = localization.RequestFailed;\r\n                                        if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                            errorMsg = jsonRsp.exception;\r\n                                        }\r\n\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.ErrorDescription,\r\n                                            message: errorMsg,\r\n                                            icon: \"fa fa-exclamation\"\r\n                                        });\r\n                                    },\r\n                                    processData: false,\r\n                                    async: false\r\n                                });\r\n\r\n                            \r\n                            }\r\n\r\n                        }, vmModel.saveFailure, true);\r\n                    }\r\n                });\r\n            }\r\n\r\n            \r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    return definition;\r\n\r\n});\r\n\r\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/updateSupersededHardware/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    $.when(kendo.ui.ExtYesNoDialog.show({\r\n                        title: localization.CiresonAssetManagement,\r\n                        message: localization.UpdateSupersedesConfirmation\r\n                    })).done(function (response) {\r\n                        if (response.button === \"yes\") {\r\n                            $.post(node.Configs.url, { baseId: node.Configs.baseId }, function (data) {\r\n                                if (data.success === true) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.UpdatingAssets,\r\n                                        message: localization.TotalNumberofAssetsUpdated + \": \" + data.count\r\n                                    });\r\n                                } else {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.ServerError,\r\n                                        message: data.error\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/copyLicenseAssignments/view.html',[],function () { return '<div id=\"CopyLicenseAssignmentsWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div id=\"windowContent\" class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <form>\\r\\n                <fieldset id=\"source\">\\r\\n                    <legend><%= localization.RelatedLicenseAssignmentSource %></legend>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input class=\"control-label\" type=\"radio\" id=\"Computers\" value=\"Computers\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Computers %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Users\" value=\"Users\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Users %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Both\" value=\"Both\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Both %>\\r\\n                    </label>\\r\\n                </fieldset>\\r\\n                <br />\\r\\n                <br />\\r\\n                <fieldset id=\"target\">\\r\\n                    <legend><%= localization.SelectedSoftwareAssetTargetList %></legend>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input class=\"control-label\" type=\"radio\" id=\"AuthorizedList\" value=\"AuthorizedList\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.AuthorizedList %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"AssignedList\" value=\"AssignedList\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.AssignedListNamedLicenses %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Both\" value=\"Both\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Both %>\\r\\n                    </label>\\r\\n                </fieldset>\\r\\n            </form>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\" />    \\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/copyLicenseAssignments/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/copyLicenseAssignments/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/copyLicenseAssignments/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: localization.CopyLicenseAssignments,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        okClick: function () {\r\n                            \r\n\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.CiresonAssetManagement,\r\n                                message: localization.StartCopyLicenseAsssignements\r\n                            })).done(function (response) {\r\n                                $.post(\"/AssetManagement/SoftwareAsset/CopyLicenseAssignments/\", cont.find(\"#windowContent form\").serialize() + \"&id=\" + vm.viewModel.BaseId, function (data) {\r\n                                    if (data.success == true) {\r\n                                        //console.log(data);\r\n                                        //source.selected\r\n\r\n                                        var bTransferUsers = false;\r\n                                        var bTransferComputers = false;\r\n                                        var bTranserToAuthorised = false;\r\n                                        \r\n                                        var target = targetVM.selected;\r\n                                        var source = sourceVM.selected;\r\n                                        var bTranserToAssigned = target==\"AssignedList\";\r\n\r\n                                        var computerList = data.ComputerList;\r\n                                        var userList = data.UserList;\r\n\r\n                                        if (target==\"AuthorizedList\") bTranserToAuthorised = true;\r\n                                        if (source==\"Users\") bTransferUsers = true;\r\n                                        if (source==\"Computers\") bTransferComputers = true;\r\n\r\n                                        if (source==\"Both\") {\r\n                                            bTransferUsers = true;\r\n                                            bTransferComputers = true;\r\n                                        }\r\n\r\n                                        if (target==\"Both\") {\r\n                                            bTranserToAssigned = true;\r\n                                            bTranserToAuthorised = true;\r\n                                        }\r\n\r\n\r\n                                        if (bTransferUsers && bTranserToAssigned) {\r\n                                            PerformTransfer(vm.viewModel, userList, \"Target_SoftwareAssetHasAssignedUsers\");\r\n                                        }\r\n\r\n                                        if (bTransferComputers && bTranserToAssigned) {\r\n                                            PerformTransfer(vm.viewModel, computerList, \"Target_SoftwareAssetHasAssignedComputers\");\r\n                                        }\r\n\r\n                                        if (bTransferUsers && bTranserToAuthorised) \r\n                                        {\r\n                                            PerformTransfer(vm.viewModel, userList, \"Target_SoftwareAssetHasAuthorisedUser\");\r\n                                        }\r\n\r\n                                        if (bTransferComputers && bTranserToAuthorised)\r\n                                        {\r\n                                            PerformTransfer(vm.viewModel, computerList, \"Target_SoftwareAssetHasAuthorisedComputer\");\r\n                                        }\r\n\r\n                                        \r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.CiresonAssetManagement,\r\n                                            message: localization.UpdateSoftwareAssetMsg\r\n                                        });\r\n                                    } else {\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.CiresonAssetManagement,\r\n                                            message: data.error\r\n                                        });\r\n                                    }\r\n                                });\r\n                            });\r\n                            \r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            \r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    var PerformTransfer = function (viewModel, itemList, targetProperty) {\r\n                        var target = viewModel[targetProperty];\r\n                        var isExist = false;\r\n                        for (var index in itemList) {\r\n                            isExist = false;\r\n                            for (var indexTarget in target) {\r\n                                if (target[indexTarget].BaseId == itemList[index].BaseId) {\r\n                                    isExist = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (isExist) continue;\r\n                            target.addItem(itemList[index]);\r\n                        }\r\n                    }\r\n\r\n                    var sourceVM = kendo.observable({\r\n                        selected: \"Computers\"\r\n                    });\r\n\r\n                    kendo.bind(cont.find(\"#source\"), sourceVM);\r\n\r\n                    var targetVM = kendo.observable({\r\n                        selected: \"AuthorizedList\"\r\n                    });\r\n\r\n                    kendo.bind(cont.find(\"#target\"), targetVM);\r\n                    \r\n                    //create status enumPicker\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!CustomSpace/customtasks.tmpl.html',[],function () { return '<div>\\r\\n<div id=\"commentHTML\" class=\"form-horiztontal\">\\r\\n<div>\\r\\n<div class=\"col-group\">\\r\\n<div class=\"inline-spacing\">\\r\\n<label>What do you want to search?</label>\\r\\n</div>\\r\\n<div class=\"inline-spacing\">\\r\\n<textarea data-bind=\"value: comment, events: {keyup:textCounter}\"\\r\\ndata-value-update=\"keyup\"\\r\\nclass=\"k-textbox\"\\r\\nrows=\"7\" ></textarea>\\r\\n<div class=\"inline-spacing\">\\r\\n<span data-bind=\"html:charactersRemaining\"></span>\\r\\n<span>characters remaining</span>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\"window-buttons\">\\r\\n<button data-role=\"button\"\\r\\nclass=\"btn btn-primary\"\\r\\ndata-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\nOK\\r\\n</button>\\r\\n<button data-role=\"button\"\\r\\nclass=\"btn btn-primary\"\\r\\ndata-bind=\"events: { click: cancelClick }\">\\r\\nCancel\\r\\n</button>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n</div>';});\n\n","/**\r\nCopy To New Workitem\r\n**/\r\n\r\ndefine('forms/tasks/copyToNewWI/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(anchor);\r\n            \r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"copyToNewWI\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = built(properties);\r\n\r\n            var viewModel = kendo.observable({\r\n                copyToNewWI: function () {\r\n                    var hiddenVm;\r\n                    var copy;\r\n                    copy = $(\"<form>\", { \"method\": \"post\", \"target\": \"_blank\" });\r\n                    hiddenVm = $(\"<input>\", { \"type\": \"hidden\", \"name\": \"vm\" });\r\n                    copy.append(hiddenVm);\r\n                    $(\"body\").append(copy);\r\n                    hiddenVm.val(JSON.stringify(vm.viewModel));\r\n                    if (vm.type == \"Incident\")\r\n                        copy.attr(\"action\", \"/Incident/New/\");\r\n                    if (vm.type == \"ServiceRequest\")\r\n                        copy.attr(\"action\", \"/ServiceRequest/New/\");\r\n                    copy.submit();\r\n                    copy.remove();\r\n                }\r\n            });\r\n\r\n            var view = new kendo.View(built(properties), { wrap: false, model: viewModel });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/increaseAvailableCount/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"increaseAvailableCount\"/>\\r\\n            <div id=\"commentAvailableCount\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nLONGSTRING\r\n**/\r\n\r\ndefine('forms/fields/longString/controller',['require','text!forms/fields/longstring/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/longstring/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.longStringController = {\r\n                CheckLength: function checkLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n            vm.view.buildLongStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength,\r\n                    Rows: 10,\r\n                    visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n                };\r\n                $.extend(true, properties, node);\r\n                //console.log(properties);\r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildLongStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\r\n\n","\ndefine('text!forms/fields/numeric/view.html',[],function () { return '<div data-cid=\"NumericControl\" data-cid-propname=\"<%= PropertyName %>\" class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"number\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"form-control form-control-picker input-sm\"\\r\\n           data-control=\"numericTextBox\"\\r\\n           data-bind=\"value: <%= PropertyName %>\"\\r\\n           data-control-decimals=\"<%= DecimalPlaces %>\"\\r\\n           data-control-min=\"<%= MinValue%>\"\\r\\n           data-control-max=\"<%= MaxValue %>\"\\r\\n           data-step=\"<%= StepIncrement %>\"\\r\\n           data-format=\"<%= Format%>\"\\r\\n\\r\\n            <% if ( Disabled ){ %>\\r\\n                disabled\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\r\nNUMERIC\r\n**/\r\n\r\ndefine('forms/fields/numeric/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                Required: node.Required,\r\n                DecimalPlaces: 2,\r\n                MinValue: 0,\r\n                MaxValue: 100,\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/increaseAvailableCount/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/increaseAvailableCount/view.html','forms/fields/longString/controller','forms/fields/numeric/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/increaseAvailableCount/view.html\");\r\n    var stringArea = require(\"forms/fields/longString/controller\");\r\n    var numericArea = require(\"forms/fields/numeric/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.EditConsumableAvailableCount;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            var tempLog;\r\n            \r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 380,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            tempLog = new kendo.data.ObservableObject({\r\n                                ClassTypeId: \"67ce5b07-835d-246d-478d-29cee397c66e\",\r\n                                Comment: \"\",\r\n                                Target_LogHasCreator: {\r\n                                    ClassTypeId: \"eca3c52a-f273-5cdc-f165-3eb95a2b26cf\",\r\n                                    BaseId: session.user.Id,\r\n                                },\r\n                                AllowCreatedDate: true,\r\n                                Name: app.lib.newGUID(),\r\n                                Type: {\r\n                                    Id: \"884650a1-632a-0532-b0d4-8c6b1d990752\",\r\n                                    Name: localization.TaskRun\r\n                                }\r\n                            });\r\n\r\n                            var countProperties = {\r\n                                PropertyName: \"zeroCount\",\r\n                                PropertyDisplayName: \"IncreaseConsumableAvailableCountBy\",\r\n                                DecimalPlaces: 0,\r\n                                Required: true,\r\n                                vm: zeroCount\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#increaseAvailableCount\"), countProperties, zeroCount);\r\n\r\n                            var commentProperties = {\r\n                                PropertyName: \"Comment\",\r\n                                PropertyDisplayName: \"Comment\",\r\n                                Required: true,\r\n                                vm: tempLog,\r\n                                Rows: 5\r\n                            };\r\n\r\n\r\n                            buildString(cont.find(\"#commentAvailableCount\"), commentProperties, tempLog);\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var currentCount = vm.viewModel.get(\"Count\");\r\n                    var zeroCount = new kendo.data.ObservableObject({ zeroCount: 0 });\r\n                    \r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            var addedcount = parseInt(zeroCount.get(\"zeroCount\"));\r\n                            if (addedcount == 0 || tempLog.get(\"Comment\") == \"\") {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.CiresonAssetManagement,\r\n                                    message: localization.RequiredFieldsErrorMessage\r\n                                });\r\n                            } else {\r\n                                var newCount = parseInt(currentCount) + addedcount;\r\n                                vm.viewModel.set(\"Count\", newCount);\r\n                                //tempLog.set(\"Title\",\"Increased Available Count by \" + currentCount + \" to \" + newCount);\r\n                                tempLog.set(\"Title\", localization.IncreasedAvailableCount.replace(\"{0}\", currentCount) + newCount);\r\n                                tempLog.set(\"CreatedDate\",new Date());\r\n                                vm.viewModel[\"Target_ConsumableHasLogs\"].unshift(tempLog);\r\n                                win.close();\r\n                            }\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    \r\n                    \r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n           \r\n            var buildNumeric = function (container, props, vmModel) {\r\n                numericArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/decreaseAvailableCount/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"decreaseCount\"/>\\r\\n            <div id=\"decreaseAvailableCount\"/>\\r\\n            <div id=\"commentAvailableCount\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/decreaseAvailableCount/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/decreaseAvailableCount/view.html','forms/fields/longString/controller','forms/fields/numeric/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/decreaseAvailableCount/view.html\");\r\n    var stringArea = require(\"forms/fields/longString/controller\");\r\n    var numericArea = require(\"forms/fields/numeric/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.EditConsumableAvailableCount;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var tempLog;\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            tempLog = new kendo.data.ObservableObject({\r\n                                ClassTypeId: \"67ce5b07-835d-246d-478d-29cee397c66e\",\r\n                                Comment: \"\",\r\n                                Target_LogHasCreator: {\r\n                                    ClassTypeId: \"eca3c52a-f273-5cdc-f165-3eb95a2b26cf\",\r\n                                    BaseId: session.user.Id,\r\n                                },\r\n                                AllowCreatedDate: true,\r\n                                Name: app.lib.newGUID(),\r\n                                Type: {\r\n                                    Id: \"884650a1-632a-0532-b0d4-8c6b1d990752\",\r\n                                    Name: localization.TaskRun\r\n                                }\r\n                            });\r\n                            var countProperties = {\r\n                                PropertyName: \"zeroCount\",\r\n                                PropertyDisplayName: \"DecreaseConsumableCountBy\",\r\n                                Required: true,\r\n                                DecimalPlaces: 0,\r\n                                MaxValue: currentCount\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#decreaseCount\"), countProperties, zeroCount);\r\n\r\n                            var countProperties = {\r\n                                PropertyName: \"AvailableCount\",\r\n                                PropertyDisplayName: \"AvailableCount\",\r\n                                DecimalPlaces: 0,\r\n                                Disabled: true,\r\n                                vm: { AvailableCount: currentCount }\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#decreaseAvailableCount\"), countProperties, countProperties.vm);\r\n\r\n                            var commentProperties = {\r\n                                PropertyName: \"Comment\",\r\n                                PropertyDisplayName: \"Comment\",\r\n                                Required: true,\r\n                                vm: tempLog,\r\n                                Rows: 5\r\n                            };\r\n\r\n                            buildString(cont.find(\"#commentAvailableCount\"), commentProperties, tempLog);\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var currentCount = vm.viewModel.get(\"Count\");\r\n                    var zeroCount = new kendo.data.ObservableObject({ zeroCount: 0 });\r\n                    \r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            var addedcount = parseInt(zeroCount.get(\"zeroCount\"));\r\n                            if (addedcount == 0 || tempLog.get(\"Comment\") == \"\") {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.CiresonAssetManagement,\r\n                                    message: localization.RequiredFieldsErrorMessage\r\n                                });\r\n                            } else {\r\n                                var newCount = parseInt(currentCount) - addedcount;\r\n                                vm.viewModel.set(\"Count\", newCount);\r\n                                tempLog.set(\"Title\", localization.DecreasedAvailableCountBy.replace(\"{0}\", currentCount) + newCount);\r\n                                tempLog.set(\"CreatedDate\", new Date());\r\n                                vm.viewModel[\"Target_ConsumableHasLogs\"].unshift(tempLog);\r\n                                win.close();\r\n                            }\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    \r\n                    \r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n           \r\n            var buildNumeric = function (container, props, vmModel) {\r\n                numericArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nPrint Page\r\n**/\r\n\r\ndefine('forms/tasks/print/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    \r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"print\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = built(properties);\r\n\r\n            var viewModel = kendo.observable({\r\n                print: function () {\r\n                    window.print();\r\n                }\r\n            });\r\n\r\n            var view = new kendo.View(built(properties), { wrap: false, model: viewModel });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nAdd Me to Watchlist\r\n**/\r\n\r\ndefine('forms/tasks/addMeToWatchList/controller',['require','text!forms/tasks/anchor/view.html','text!forms/popups/notificationPopup/view.html'],function (require) {\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var notificationTpl = require(\"text!forms/popups/notificationPopup/view.html\");\r\n\r\n    var definition = {\r\n        notificationTemplate: notificationTpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(notificationTpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var viewModel = kendo.observable({\r\n                addMeToWatchList: function (ele) {\r\n                    if (!_.isUndefined(node.Configs.isAddWatchlist)) {\r\n                        switch (node.Configs.isAddWatchlist) {\r\n                            case false:\r\n                                this.removeFromWatchList();\r\n                                node.Configs.isAddWatchlist = true;\r\n                                $(ele.currentTarget).html(localization.AddMeToWatchList);\r\n                                break;\r\n                            case true:\r\n                            default:\r\n                                this.addToWatchList();\r\n                                node.Configs.isAddWatchlist = false;\r\n                                $(ele.currentTarget).html(localization.RemoveMeFromWatchList);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                },\r\n                addToWatchList: function () {\r\n                    //set current user's baseid in case it is missing\r\n                    var currentUser = session.user;\r\n                    currentUser.BaseId = session.user.Id;\r\n\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n\r\n                    //if user is not yet on the watchlist, add it in\r\n                    var isAdded = !_.isUndefined(_.find(vm.viewModel.WatchList, function (user) { return (user.Id == session.user.Id || user.BaseId == session.user.Id); }));\r\n                    if (!isAdded) {\r\n                        if (_.isUndefined(vm.viewModel.WatchList)) {\r\n                            vm.viewModel.set(\"WatchList\", []);\r\n                        }\r\n                        vm.viewModel.WatchList.push(session.user);\r\n\r\n                    }\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.AddMeToWatchListNotificationMessage, \"{0} is added to the watchlist\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                },\r\n                removeFromWatchList: function () {\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n                    var index = -1;\r\n\r\n                    _.find(vm.viewModel.WatchList, function (user, i) {\r\n                        if (user.Id == session.user.Id || user.BaseId == session.user.Id) {\r\n                            index = i;\r\n                            return user;\r\n                        }\r\n                    });\r\n\r\n                    //remove current user from watchlist\r\n                    if (index !== -1) vm.viewModel.WatchList.splice(index, 1);\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.RemoveMeFromWatchListNotificationMessage, \"{0} is removed from the watchlist\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"addMeToWatchList\"\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","define('forms/taskBuilder',[\r\n    \"forms/tasks/anchor/controller\",\r\n    \"forms/tasks/analystByGroup/controller\",\r\n    \"forms/tasks/assignToMe/controller\",\r\n    \"forms/tasks/changeStatus/controller\",\r\n    \"forms/tasks/amChangeStatus/controller\",\r\n    \"forms/tasks/acknowledge/controller\",\r\n    \"forms/tasks/convertToParent/controller\",\r\n    \"forms/tasks/linkToParent/controller\",\r\n    \"forms/tasks/newStatus/controller\",\r\n    \"CustomSpace/Scripts/forms/tasks/sendEmail/controller\", // \"forms/tasks/sendEmail/controller\",\r\n    \"forms/tasks/custom/controller\",\r\n    \"forms/tasks/spacer/controller\",\r\n    \"forms/tasks/associateItem/controller\",\r\n    \"forms/tasks/setDate/controller\",\r\n    \"forms/tasks/updateAssetManagement/controller\",\r\n    \"forms/tasks/updateSupersededHardware/controller\",\r\n    \"forms/tasks/copyLicenseAssignments/controller\",\r\n    \"text!CustomSpace/customtasks.tmpl.html\",\r\n    \"forms/tasks/copyToNewWI/controller\",\r\n    \"forms/tasks/increaseAvailableCount/controller\",\r\n    \"forms/tasks/decreaseAvailableCount/controller\",\r\n    \"forms/tasks/print/controller\",\r\n    \"forms/tasks/addMeToWatchList/controller\"\r\n\r\n], function (\r\n    anchor,\r\n    analystByGroup,\r\n    assignToMe,\r\n    changeStatus,\r\n    amChangeStatus,\r\n    acknowledge,\r\n    convertToParent,\r\n    linkToParent,\r\n    newStatus,\r\n    sendEmail,\r\n    custom,\r\n    spacer,\r\n    associateItem,\r\n    setDate,\r\n    updateAssetManagement,\r\n    updateSupersededHardware,\r\n    copyLicenseAssignments,\r\n    customTmpl,\r\n    copyToNewWI,\r\n    increaseAvailableCount,\r\n    decreaseAvailableCount,\r\n    print,\r\n    addMeToWatchList\r\n        ) {\r\n\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            var ulElement = $('<ul/>');\r\n\r\n            if (vm.fromDrawerBuilder) {\r\n                //remap the list of tasks to match what form builder does\r\n                vm.taskTemplate = {\r\n                    tasks: vm.tasks\r\n                }\r\n                ulElement.addClass(\"drawer-task-menu dropdown-menu\");\r\n                ulElement.attr('role', 'menu');\r\n            } else {\r\n                ulElement.addClass(\"taskmenu\");\r\n            }\r\n            \r\n            var taskCallback = function (view) {\r\n                ulElement.append(view);\r\n            };\r\n\r\n            //set up each task\r\n            _.each(vm.taskTemplate.tasks, function (task) {\r\n                \r\n                if (_.isString(task.Access)) {\r\n                    //coming from drawerbuild task.Access needs to be evaluated here\r\n                    task.Access = eval(task.Access);\r\n                }\r\n                \r\n                if (task.Access) {\r\n                    //get template and check for existance\r\n                    eval(\"var _obj = \" + task.Task + \";\");\r\n                    if (!_obj) {\r\n                        throw Exception(task.Task + \" is not part of the templating system\");\r\n                        return false;\r\n                    }\r\n\r\n                    _obj.build(vm, task, function (view) {\r\n                        taskCallback(view);\r\n                    });\r\n                }\r\n            });\r\n\r\n            //send back <ul> with <li> of each task\r\n            callback(ulElement);\r\n\r\n            if (!vm.fromDrawerBuilder) {\r\n                //not drawer tasks so now add custom template html\r\n                var tmpl = $('<div/>').addClass(\"hide\");\r\n                tmpl.append(customTmpl);\r\n                //add the menu\r\n                callback(tmpl);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/header/sticky/view.html',[],function () { return '<div class=\"content-header__container\">\\r\\n    <div class=\"content-header\">\\r\\n        <div class=\"content-header__main\">\\r\\n            <div class=\"content-header__main__title\" data-bind=\"text: viewModel.Title\">\\r\\n            </div>\\r\\n            <div class=\"content-header__main__details\">\\r\\n                <div class=\"content-header__main__breadcrumbs-container\">\\r\\n                    <div class=\"content-header__main__breadcrumb content-header__main__breadcrumb--button\" data-bind=\"visible: view.controller.isParent\">\\r\\n                        <a class=\"content-header__main__breadcrumbs__link\" data-bind=\"attr: { href: view.controller.editHref}, text: viewModel.ParentWorkItem.Id\">\\r\\n                        </a>\\r\\n                        <a class=\"content-header__main__breadcrumbs__link content-header__main__breadcrumb--button__icon-link\" data-bind=\"click: view.controller.unlinkParent\">\\r\\n                            <i class=\"fa fa-unlink\"></i>\\r\\n                        </a>\\r\\n                    </div>\\r\\n                    <div class=\"content-header__main__breadcrumb\" data-bind=\"visible: view.controller.isParent\">\\r\\n                        <strong class=\"content-header__main__breadcrumbs__link\" data-bind=\"text: viewModel.Id\"></strong>\\r\\n                    </div>\\r\\n                    <strong class=\"content-header__main__breadcrumbs__link\" data-bind=\"visible: view.controller.isParent === false, text: viewModel.Id\"></strong>\\r\\n                </div>\\r\\n                <span class=\"status-pill status-pill--active\" data-bind=\"visible: view.statusVisible, text: viewModel.Status.Name\">\\r\\n                    Active\\r\\n                </span>\\r\\n                <div class=\"content-header__main__icon-stack\">\\r\\n                    <button id=\"headerAttachmentBtn\" class=\"btn k-button btn-icon-stack\" data-bind=\"click: view.viewAttachments\">\\r\\n                        <img src=\"../../../../Content/Images/Icons/RemoteManage/attach.svg\" alt=\"attach\" />\\r\\n                    </button>\\r\\n                    <button id=\"remoteManageBtn\" class=\"btn k-button btn-icon-stack\" data-bind=\"click: view.doClick, visible: view.showRemoteManageIcon\">\\r\\n                        <img src=\"../../../../Content/Images/Icons/RemoteManage/remote.svg\" alt=\"remote\" />\\r\\n                    </button>\\r\\n                    <button class=\"btn k-button btn-icon-stack  visible-xs visible-sm\" data-bind=\"click: view.toggleMore\">\\r\\n                        <span class=\"fa fa-ellipsis-v\"></span>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"content-header__collapser hidden-xs hidden-sm\">\\r\\n            <div class=\"first-header-slo-container\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\"content-header__collapser__dropdown\">\\r\\n                <div class=\"header-slo-container\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div id=\"content-header-backdrop\" class=\"content-header__flyout__overlay\">\\r\\n</div>\\r\\n<script id=\"header-slo-template\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"content-header__collapser__icon-container\">\\r\\n        <div class=\"header-slo-icon fa #: imageClass # content-header__collapser__icon\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"content-header__collapser__main\">\\r\\n        <div class=\"content-header__collapser__main__title header-slo-title\">#: Title #</div>\\r\\n        <div class=\"content-header__collapser__main__datetime header-slo-timer\"></div>\\r\\n    </div>\\r\\n    # if (index === \\'0\\') { #\\r\\n    <button class=\"content-header__collapser__caret-button fa fa-angle-up\" onclick=\"closeSLODropdown()\"></button>\\r\\n    # } #\\r\\n</script>\\r\\n<script id=\"first-header-slo-template\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"content-header__collapser__icon-container\">\\r\\n        <div class=\"header-slo-icon fa #: imageClass # content-header__collapser__icon\">\\r\\n        </div>\\r\\n        # if (count > 1) { #\\r\\n        <div class=\"content-header__collapser__icon-badge\"> #: count #\\r\\n        </div>\\r\\n        # } #\\r\\n    </div>\\r\\n    <div class=\"content-header__collapser__main\">\\r\\n        <div class=\"content-header__collapser__main__title header-slo-title\">#: Title #</div>\\r\\n        <div class=\"content-header__collapser__main__datetime header-slo-timer\"></div>\\r\\n    </div>\\r\\n    # if (count > 1) { #\\r\\n    <button class=\"content-header__collapser__caret-button fa fa-angle-down\" onclick=\"closeSLODropdown()\"></button>\\r\\n    # } #\\r\\n</script>\\r\\n<div id=\"openmore\" tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\" style=\"display: none\">\\r\\n    <div class=\"modal-dialog modal-sm\">\\r\\n        <div class=\"modal-content\">\\r\\n            <div class=\"content-header__collapser content-header__collapser--side\">\\r\\n                <div class=\"first-header-slo-container\">\\r\\n                </div>\\r\\n                <div class=\"content-header__collapser__dropdown\">\\r\\n                    <div class=\"header-slo-container\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/flyout/remoteManageWidget/view.html',[],function () { return '<div id=\"expanded_widget\" class=\"content-header__flyout\">\\r\\n    <h3 class=\"content-header__flyout__title\">\\r\\n        <img src=\"../../../../Content/Images/Icons/RemoteManage/remote_management.svg\" class=\"content-header__flyout__title__logo\" />\\r\\n        <span><%= localization.RemoteManagementText %></span>\\r\\n    </h3>\\r\\n    <div class=\"content-header__flyout__section\">\\r\\n        <div class=\"content-header__flyout__section__title\"><%= localization.Users %></div>\\r\\n        <div class=\"content-header__flyout__section__main\">\\r\\n        \\r\\n            <div class=\"dataUserContainer\"></div>\\r\\n            <div class=\"addUserContainer\"></div>\\r\\n\\r\\n            <div data-bind=\"attr: { class: widget.mainWidgetAttr }\">\\r\\n                <div class=\"support-tools__widget__selection\">\\r\\n                    <a class=\"support-tools__widget__select-type\" id=\"affectedUserAddLink\" data-bind=\"click: widget.addForm, value: widget.affectedUser.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/affected_user.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.AffectedText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" id=\"assignedUserAddLink\" data-bind=\"click: widget.addForm, value: widget.assignedUser.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/assigned_user.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.AssignedText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" id=\"primaryOwnerAddLink\" data-bind=\"click: widget.addForm, value: widget.primaryOwner.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/primary_user.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.PrimaryText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__label\">\\r\\n                    <div class=\"support-tools__widget__icon-container\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/add_user.svg\" class=\"support-tools__widget__icon\"/>\\r\\n                    </div>\\r\\n                    <div class=\"support-tools__widget__main support-tools__widget__input\">\\r\\n                        <div class=\"support-tools__widget__input__label\">\\r\\n                            <%= localization.AddaUserText  %>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"content-header__flyout__section\">\\r\\n        <div class=\"content-header__flyout__section__title\"><%= localization.DevicesText  %></div>\\r\\n        <div class=\"content-header__flyout__section__main\">\\r\\n\\r\\n            <div class=\"dataDeviceContainer\"></div>\\r\\n            <div class=\"addDeviceContainer\"></div>\\r\\n    \\r\\n            <div data-bind=\"attr: { class: widget.mainWidgetDeviceAttr }\">\\r\\n                <div class=\"support-tools__widget__selection\">\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.affectedDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/affected_device.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.AffectedText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.relatedDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/related_device.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.RelatedText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <!--<a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.primaryDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/primary_device.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            Primary\\r\\n                        </div>\\r\\n                    </a>-->\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.userDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/user_device.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.UserDeviceText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__label\">\\r\\n                    <div class=\"support-tools__widget__icon-container\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/add_device.svg\" class=\"support-tools__widget__icon\"/>\\r\\n                    </div>\\r\\n                    <div class=\"support-tools__widget__main support-tools__widget__input\" ng-show=\"assignedUser1 == null\">\\r\\n                        <div class=\"support-tools__widget__input__label\">\\r\\n                            <%= localization.AddaDeviceText  %>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<script id=\"multipleDataTemplate\" type=\"text/x-kendo-template\">\\r\\n    # for (var i = 0; i < devices.length; i++) { #\\r\\n    # var device = devices[i] #\\r\\n    <div class=\"support-tools__widget support-tools__widget--item-selected support-tools__widget--user-selected #:type#dataTemplate\" data-bind=\"click: widget.clickContainer, value: widget.#:type#[#:i#]\">\\r\\n        <div class=\"support-tools__widget__icon-container\">\\r\\n            <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/#:icon#\" class=\"support-tools__widget__icon\" />\\r\\n        </div>\\r\\n        <div class=\"support-tools__widget__main\">\\r\\n            <div class=\"support-tools__widget__selected-item\">\\r\\n                <div class=\"support-tools__widget__selected-item__title\" data-bind=\"text: widget.#:type#[#:i#].DisplayName\">\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__selected-item__details\">\\r\\n                    #: title #\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"support-tools__widget__action\" data-bind=\"click: widget.removeItem, value: widget.#:type#[#:i#]\">\\r\\n                <a class=\"support-tools__widget__action__link\">\\r\\n                    <div class=\"support-tools__widget__action-icon\">\\r\\n                    </div>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    # } #\\r\\n</script>\\r\\n\\r\\n<script id=\"dataTemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"support-tools__widget support-tools__widget--item-selected support-tools__widget--user-selected\" id=\"#:type#dataTemplate\" data-bind=\"click: widget.clickContainer, value: widget.#:type#\">\\r\\n        <div class=\"support-tools__widget__icon-container\">\\r\\n            <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/#:icon#\" class=\"support-tools__widget__icon\" />\\r\\n        </div>\\r\\n        <div class=\"support-tools__widget__main\">\\r\\n            <div class=\"support-tools__widget__selected-item\">\\r\\n                <div class=\"support-tools__widget__selected-item__title\" data-bind=\"text: widget.#:type#.DisplayName\">\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__selected-item__details\">\\r\\n                    #: title #\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__selected-item__email\" data-bind=\"visible: widget.#:type#.Email\">\\r\\n                    <a data-bind=\"click: widget.openSendEmail, value: widget.#:type#\">\\r\\n                        <span data-bind=\"text: widget.#:type#.Email\"></span>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"support-tools__widget__action\" data-bind=\"click: widget.removeItem, value: widget.#:type#\">\\r\\n                <a class=\"support-tools__widget__action__link\">\\r\\n                    <div class=\"support-tools__widget__action-icon\">\\r\\n                    </div>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</script>\\r\\n\\r\\n<script id=\"addTemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"support-tools__widget\">\\r\\n        <div class=\"support-tools__widget__icon-container\">\\r\\n            <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/#:icon#\" class=\"support-tools__widget__icon\" />\\r\\n        </div>\\r\\n        <div class=\"support-tools__widget__main support-tools__widget__input\">\\r\\n            <div class=\"support-tools__widget__input__form\">\\r\\n                <span class=\"fa fa-search support-tools__widget__input__form__icon\" data-bind=\"click: widget.openCombobox, value: widget.#:type#.widgetType\"></span>\\r\\n                <input id=\"#:type#Combobox1\" class=\"support-tools__widget__input__form__input\" />\\r\\n                <div id=\"#:type#Container\" class=\"support-tools__widget__input__form__dropdown\"></div>\\r\\n            </div>\\r\\n            <div class=\"support-tools__widget__action\" data-bind=\"click: widget.removeUserCombobox, value: widget.#:type#.widgetType\">\\r\\n                <a class=\"support-tools__widget__action__link\">\\r\\n                    <div class=\"support-tools__widget__action-icon\">\\r\\n                    </div>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<script id=\"comboboxusertemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"multi-query__list__selected-items multi-query__list__selected-items--no-border\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-sm-12\">\\r\\n                <div class=\"multi-query__list__selected-items__name\">#: Name #</div>\\r\\n                <div class=\"multi-query__list__selected-items__details\">#: (Email) ? Email : \"\" #</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<script id=\"comboboxdevicetemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"multi-query__list__selected-items multi-query__list__selected-items--no-border\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-sm-12\">\\r\\n                <div class=\"multi-query__list__selected-items__name\">#: DisplayName #</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<script id=\"comboboxuserdevicetemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"multi-query__list__selected-items multi-query__list__selected-items--no-border\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-sm-12\">\\r\\n                <div class=\"multi-query__list__selected-items__name\">#: Text #</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<script id=\"comboboxprimarydevicetemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"multi-query__list__selected-items multi-query__list__selected-items--no-border\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-sm-12\">\\r\\n                <div class=\"multi-query__list__selected-items__name\">#: Name #</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>';});\n\n","var __remoteManageWidgetSingleton;\r\n\r\ndefine('forms/flyout/remoteManageWidget/controller',['require','text!forms/flyout/remoteManageWidget/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/flyout/remoteManageWidget/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        getWidget: function (vm) {\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            var main_row = $('.page_bar.sticky-header').first().children('.row').first();\r\n            main_row.after(ele);\r\n\r\n            var addUserContainer = $(\".addUserContainer\");\r\n            var addTemplate = kendo.template($(\"#addTemplate\").html());\r\n\r\n            var dataUserContainer = $(\".dataUserContainer\");\r\n            var dataTemplate = kendo.template($(\"#dataTemplate\").html());\r\n\r\n            var addDeviceContainer = $(\".addDeviceContainer\");\r\n\r\n            var dataDeviceContainer = $(\".dataDeviceContainer\");\r\n            var multipleDataTemplate = kendo.template($(\"#multipleDataTemplate\").html());\r\n\r\n            var deleteicon = '<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#403f40\"><path d=\"M12,2C6.47,2,2,6.47,2,12s4.47,10,10,10s10-4.47,10-10S17.53,2,12,2z M17,15.59L15.59,17L12,13.41L8.41,17L7,15.59 L10.59,12L7,8.41L8.41,7L12,10.59L15.59,7L17,8.41L13.41,12L17,15.59z\" fill=\"#403f40\"/></svg>';\r\n            var widgetActionIcon = $(\"<div class='support-tools__widget__action-icon'>\" + deleteicon + \"</div>\");\r\n\r\n            var createUserComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxusertemplate\"),\r\n                    type: 'user',\r\n                    dataTextField: \"Name\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var createUserDeviceComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxuserdevicetemplate\"),\r\n                    type: 'userdevice',\r\n                    affectedUserId: vm.widget.affectedUser.BaseId,\r\n                    dataTextField: \"Text\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var createPrimaryDeviceComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxprimarydevicetemplate\"),\r\n                    type: 'primarydevice',\r\n                    dataTextField: \"Name\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var createDeviceComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxdevicetemplate\"),\r\n                    type: 'device',\r\n                    dataTextField: \"DisplayName\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var affectedUserText = \"affectedUser\";\r\n            var assignedUserText = \"assignedUser\";\r\n            var primaryOwnerText = \"primaryOwner\";\r\n\r\n            var affectedDeviceText = \"affectedDevice\";\r\n            var primaryDeviceText = \"primaryDevice\";\r\n            var userDeviceText = \"userDevice\";\r\n            var relatedDeviceText = \"relatedDevice\";\r\n\r\n            var getObjectDetails = function (type) {\r\n                var details;\r\n                if (type === affectedUserText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.AffectedUserAppPage,\r\n                        icon: \"affected_user.svg\"\r\n                    }\r\n\r\n                } else if (type === assignedUserText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.AssignedUser,\r\n                        icon: \"assigned_user.svg\"\r\n                    }\r\n\r\n                } else if (type === primaryOwnerText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.PrimaryOwner,\r\n                        icon: \"primary_user.svg\"\r\n                    }\r\n                } else if (type === affectedDeviceText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.AffectedDeviceText,\r\n                        icon: \"affected_device.svg\"\r\n                    }\r\n                } else if (type === primaryDeviceText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: \"Primary Device\",\r\n                        icon: \"primary_device.svg\"\r\n                    }\r\n                } else if (type === userDeviceText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: \"User Device\",\r\n                        icon: \"user_device.svg\"\r\n                    }\r\n                } else if (type === relatedDeviceText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.RelatedDeviceText,\r\n                        icon: \"related_device.svg\"\r\n                    }\r\n                }\r\n\r\n                return details;\r\n            }\r\n\r\n            var filter = {};\r\n            var selected = { };\r\n            \r\n            var setSelected = function (key, picker) {\r\n\r\n                var tpl = $(picker).parents(\".support-tools__widget\").first();\r\n                tpl.remove();\r\n                \r\n                if (key.toLowerCase().indexOf(affectedUserText.toLowerCase()) > -1) {\r\n\r\n                    vm.widget[affectedUserText] = _.extend(selected[key] || {},\r\n                        {\r\n                            widgetType: affectedUserText,\r\n                            mailtoLink: (selected[key][\"Email\"]) ? \"mailto:\" + selected[key][\"Email\"] + \"?Subject=\" + \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title : \"\"\r\n                        });\r\n\r\n                    $(\"#\" + affectedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n                    dataUserContainer.append(dataTemplate(getObjectDetails(affectedUserText)));\r\n\r\n                    vm.viewModel.set(\"RequestedWorkItem\", selected[key]);\r\n                    input = $(\"input[data-control-bind='RequestedWorkItem']\").data(\"kendoAutoComplete\");\r\n                    input.value(selected[key].DisplayName);\r\n\r\n                    vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(assignedUserText.toLowerCase()) > -1) {\r\n\r\n                    vm.widget[assignedUserText] = _.extend(selected[key] || {},\r\n                        {\r\n                            widgetType: assignedUserText,\r\n                            mailtoLink: (selected[key][\"Email\"]) ? \"mailto:\" +selected[key][\"Email\"]+ \"?Subject=\" + \"[\" +vm.viewModel.Id + \"] \" +vm.viewModel.Title: \"\"\r\n                        });\r\n\r\n                    $(\"#\" + assignedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n                    dataUserContainer.append(dataTemplate(getObjectDetails(assignedUserText)));\r\n\r\n                    vm.viewModel.set(\"AssignedWorkItem\", selected[key]);\r\n                    input = $(\"input[data-control-bind='AssignedWorkItem']\").data(\"kendoAutoComplete\");\r\n                    input.value(selected[key].DisplayName);\r\n\r\n                    vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(primaryOwnerText.toLowerCase()) > -1) {\r\n\r\n                    vm.widget[primaryOwnerText] = _.extend(selected[key] || {},\r\n                        {\r\n                            widgetType: primaryOwnerText,\r\n                            mailtoLink: (selected[key][\"Email\"]) ? \"mailto:\" + selected[key][\"Email\"] + \"?Subject=\" + \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title : \"\"\r\n                        });\r\n\r\n                    $(\"#\" + primaryOwnerText + \"AddLink\").addClass(\"isDisabled\");\r\n                    dataUserContainer.append(dataTemplate(getObjectDetails(primaryOwnerText)));\r\n\r\n                    vm.viewModel.set(\"RelatesToIncident\", selected[key]);\r\n                    input = $(\"input[data-control-bind='RelatesToIncident']\").data(\"kendoAutoComplete\");\r\n                    input.value(selected[key].DisplayName);\r\n\r\n                    vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(affectedDeviceText.toLowerCase()) > -1) {\r\n\r\n                    if (selected[key] && !_.findWhere(vm.widget[affectedDeviceText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.HasRelatedWorkItems.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(primaryDeviceText.toLowerCase()) > -1) {\r\n                    if (selected[key] && !_.findWhere(vm.widget[primaryDeviceText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.HasRelatedWorkItems.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(userDeviceText.toLowerCase()) > -1) {\r\n                    if (selected[key] && !_.findWhere(vm.widget[affectedDeviceText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.HasRelatedWorkItems.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(relatedDeviceText.toLowerCase()) > -1) {\r\n\r\n                    if (selected[key]&& !_.findWhere(vm.widget[relatedDeviceText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.RelatesToConfigItem.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                }\r\n\r\n\r\n                selected[key] = null;\r\n                filter[key] = \"\";\r\n\r\n                if (vm.widget[affectedUserText].BaseId && vm.widget[assignedUserText].BaseId && vm.widget[primaryOwnerText].BaseId)\r\n                    $(\"#\" + primaryOwnerText + \"AddLink\").parents(\".support-tools__widget\").first().hide();\r\n\r\n                widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n                kendo.bind(ele, vm);\r\n            }\r\n\r\n            var initializePicker = function (config) {\r\n\r\n                var targetKey = config.element[0].id;\r\n\r\n                var ds;\r\n                if (config.type === \"user\") {\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/api/V3/User/GetUserList\",\r\n                                data: {\r\n                                    filterByAnalyst: false,\r\n                                    maxNumberOfResults: 1000,\r\n                                    userFilter: function() {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true\r\n                    });\r\n                }else if (config.type === \"device\") {\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/Search/GetSearchObjectsWithEnumObjectByClassId\",\r\n                                data: {\r\n                                    searchFilter: function() {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    },\r\n                                    classId: '7ad221e0-e4bb-39a8-6514-33b60bba46f5',\r\n                                    columnNames: 'DisplayName, Id'\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true,\r\n                        schema: {\r\n                            data: function(response) {\r\n                                return response.Data;\r\n                            }\r\n                        }\r\n                    });\r\n                } else if (config.type === \"primarydevice\") {\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: session.consoleSetting.TrueControlCenterURL + \"/api/CmDevice\",\r\n                                data: {\r\n                                    search: function () {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                },\r\n                                beforeSend: function (req) {\r\n                                    req.setRequestHeader('Authorization', 'Bearer ' + session.consoleSetting.TrueControlCenterAuthToken);\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true,\r\n                        schema: {\r\n                            data: function (response) {\r\n                                return response.value;\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/ConfigItems/GetAffectedUserConfigItemsList\",\r\n                                data: {\r\n                                    affectedUserId: config.affectedUserId,\r\n                                    className: \"Microsoft.Windows.Computer\",\r\n                                    searchFilter: function () {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true\r\n                    });\r\n                }\r\n\r\n                var picker = config.element.kendoComboBox({\r\n                    dataSource: ds,\r\n                    template: kendo.template(config.eleTemplate.html()),\r\n                    placeholder: localization.Search,\r\n                    dataTextField: config.dataTextField,\r\n                    dataValueField: \"Id\",\r\n                    autoBind: false,\r\n                    filter: \"contains\",\r\n                    suggest: true,\r\n                    popup: {\r\n                        appendTo: config.eleContainer\r\n                    },\r\n                    filtering: function (e) {\r\n                        if (e.filter != undefined) {\r\n                            var key = e.sender.element[0].id;\r\n                            filter[key] = e.filter.value;\r\n                        }\r\n                    },\r\n                    select: function (e) {\r\n                        var key = e.sender.element[0].id;\r\n\r\n                        if (config.type === \"user\") {\r\n                            selected[key] = {\r\n                                DisplayName: e.dataItem.Name,\r\n                                BaseId: e.dataItem.Id,\r\n                                Email: e.dataItem.Email,\r\n                                Path: \"\"\r\n                            };\r\n                        } else if (config.type === \"device\") {\r\n                            selected[key] = e.dataItem;\r\n                        } else if (config.type === \"primarydevice\") {\r\n                            selected[key] = {\r\n                                DisplayName: e.dataItem.Name,\r\n                                BaseId: e.dataItem.Guid,\r\n                                Path: \"\"\r\n                            };\r\n                        } else {\r\n                            selected[key] = {\r\n                                DisplayName: e.dataItem.Text,\r\n                                BaseId: e.dataItem.Id,\r\n                                ClassName: e.dataItem.ClassName,\r\n                                Path: \"\"\r\n                            }\r\n                        }\r\n                        if ($(e.item[0]).hasClass('k-state-hover')) {\r\n                            setSelected(key, config.element);\r\n                        }\r\n                    }\r\n                }).data(\"kendoComboBox\");\r\n\r\n                picker.input.on(\"keydown\", function (e) {\r\n                    if (e.keyCode === 9 || e.keyCode === 13) {\r\n\r\n                        setSelected(targetKey, config.element);\r\n                    }\r\n                });\r\n            };\r\n\r\n            vm.widget = {\r\n                open: false,\r\n                mainWidgetAttr: 'support-tools__widget support-tools__widget--add-item',\r\n                mainWidgetDeviceAttr: 'support-tools__widget support-tools__widget--add-item',\r\n                addForm: function(e) {\r\n                    if ($(e.currentTarget).hasClass(\"isDisabled\")) return;\r\n\r\n                    var type = e.currentTarget.value;\r\n                    if (type === affectedUserText) {\r\n                        addUserContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addUserContainer);\r\n                        createUserComboBox(type);\r\n                        vm.widget.mainWidgetAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === assignedUserText) {\r\n                        addUserContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addUserContainer);\r\n                        createUserComboBox(type);\r\n                        vm.widget.mainWidgetAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === primaryOwnerText) {\r\n                        addUserContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addUserContainer);\r\n                        createUserComboBox(type);\r\n                        vm.widget.mainWidgetAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === affectedDeviceText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createDeviceComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === primaryDeviceText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createPrimaryDeviceComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === userDeviceText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createUserDeviceComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === relatedDeviceText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createDeviceComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    }\r\n\r\n                    widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n\r\n                    kendo.bind(ele, vm);\r\n                },\r\n                affectedUser: _.extend(vm.viewModel.RequestedWorkItem || {},\r\n                    {\r\n                        widgetType: affectedUserText,\r\n                        mailtoLink: (vm.viewModel.RequestedWorkItem && vm.viewModel.RequestedWorkItem[\"Email\"]) ? \"mailto:\" +vm.viewModel.RequestedWorkItem[\"Email\"]+ \"?Subject=\" + \"[\" +vm.viewModel.Id + \"] \" +vm.viewModel.Title: \"\"\r\n                    }),\r\n                assignedUser: _.extend(vm.viewModel.AssignedWorkItem || {},\r\n                    {\r\n                        widgetType: assignedUserText,\r\n                        mailtoLink: (vm.viewModel.AssignedWorkItem && vm.viewModel.AssignedWorkItem[\"Email\"]) ? \"mailto:\" + vm.viewModel.AssignedWorkItem[\"Email\"] + \"?Subject=\" + \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title : \"\"\r\n                    }),\r\n                primaryOwner: _.extend(vm.viewModel.RelatesToIncident || {},\r\n                    {\r\n                        widgetType: primaryOwnerText,\r\n                        mailtoLink: (vm.viewModel.RelatesToIncident && vm.viewModel.RelatesToIncident[\"Email\"]) ? \"mailto:\" + vm.viewModel.RelatesToIncident[\"Email\"] + \"?Subject=\" + \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title : \"\"\r\n                    }),\r\n                affectedDevice: {\r\n                        widgetType: affectedDeviceText\r\n                    },\r\n                primaryDevice: {\r\n                        widgetType: primaryDeviceText\r\n                    },\r\n                userDevice: {\r\n                        widgetType: userDeviceText\r\n                    },\r\n                relatedDevice:  {\r\n                    widgetType: relatedDeviceText\r\n                },\r\n                relatedDeviceArr: _.filter(vm.viewModel.RelatesToConfigItem,\r\n                    function (el) {\r\n                        el = _.extend(el,\r\n                            {\r\n                                widgetType: relatedDeviceText\r\n                            });\r\n                        return el.ClassName === \"Microsoft.Windows.Computer\";\r\n                    }),\r\n                affectedDeviceArr: _.filter(vm.viewModel.HasRelatedWorkItems,\r\n                    function (el) {\r\n                        el = _.extend(el,\r\n                            {\r\n                                widgetType: affectedDeviceText\r\n                            });\r\n                        return el.ClassName === \"Microsoft.Windows.Computer\";\r\n                    }),\r\n                primaryDeviceArr: [],\r\n                clickContainer: function (e) {\r\n                    if (e.target.nodeName === \"DIV\" && e.target.className.indexOf(\"multi-query__list__selected-items\") === -1) {\r\n                        var value = e.currentTarget.value;\r\n                        if (value.BaseId) {\r\n                            var obj = { BaseId: value.BaseId, Name: value.DisplayName }\r\n                            var type = [affectedUserText, assignedUserText, primaryOwnerText].indexOf(value.widgetType) > -1 ? \"user\" : \"computer\";\r\n                            var src = app.slideOutNav.getTCCSourceURL(obj, type);\r\n                            var options = {\r\n                                url: src,\r\n                                tooltip: (type === \"user\") ? localization.UserManagement : localization.ComputerManagement\r\n                            }\r\n                            app.slideOutNav.show(options);\r\n                        }\r\n                    }\r\n                },\r\n                removeUserCombobox: function (e) {\r\n                    var widgetType = e.currentTarget.value;\r\n                    var tpl = $(e.currentTarget).parents(\".support-tools__widget\").first();\r\n                    tpl.remove();\r\n\r\n                    if ([affectedUserText, assignedUserText, primaryOwnerText].indexOf(widgetType) > -1)\r\n                        vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                    else\r\n                        vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n\r\n                    kendo.bind(ele, vm);\r\n                },\r\n                openCombobox: function (e) {\r\n                    var widgetType = e.currentTarget.value;\r\n                    var widget = $(\"#\" + widgetType + \"Combobox1\").getKendoComboBox();\r\n                    widget.open();\r\n                },\r\n                removeItem: function (e) {\r\n                    var widgetValue = e.currentTarget.value;\r\n                    var widgetType = widgetValue.widgetType;\r\n                    var propName;\r\n\r\n                    switch (widgetType) {\r\n                        case affectedUserText:\r\n                            propName = \"RequestedWorkItem\";\r\n                            vm.viewModel.set(propName,\r\n                                {\r\n                                    DisplayName: \"\",\r\n                                    BaseId: \"\"\r\n                                });\r\n                            $(\"#\" + affectedUserText + \"AddLink\").removeClass(\"isDisabled\");\r\n                            vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case assignedUserText:\r\n                            propName = \"AssignedWorkItem\";\r\n                            vm.viewModel.set(propName,\r\n                                {\r\n                                    DisplayName: \"\",\r\n                                    BaseId: \"\"\r\n                                });\r\n                            $(\"#\" + assignedUserText + \"AddLink\").removeClass(\"isDisabled\");\r\n                            vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case primaryOwnerText:\r\n                            propName = \"RelatesToIncident\";\r\n                            vm.viewModel.set(propName,\r\n                                {\r\n                                    DisplayName: \"\",\r\n                                    BaseId: \"\"\r\n                                });\r\n                            $(\"#\" + primaryOwnerText + \"AddLink\").removeClass(\"isDisabled\");\r\n                            vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case affectedDeviceText:\r\n                            var arr = _.map(vm.viewModel.HasRelatedWorkItems,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.HasRelatedWorkItems.splice(i, 1);\r\n\r\n                            vm.widget[affectedDeviceText + \"Arr\"] = _.filter(vm.widget[affectedDeviceText + \"Arr\"],\r\n                                function (el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case primaryDeviceText:\r\n                            var arr = _.map(vm.viewModel.HasRelatedWorkItems,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.HasRelatedWorkItems.splice(i, 1);\r\n\r\n                            vm.widget[primaryDeviceText + \"Arr\"] = _.filter(vm.widget[primaryDeviceText + \"Arr\"],\r\n                                function (el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case userDeviceText:\r\n                            var arr = _.map(vm.viewModel.HasRelatedWorkItems,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.HasRelatedWorkItems.splice(i, 1);\r\n\r\n                            vm.widget[affectedDeviceText + \"Arr\"] = _.filter(vm.widget[affectedDeviceText + \"Arr\"],\r\n                                function (el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case relatedDeviceText:\r\n\r\n                            var arr = _.map(vm.viewModel.RelatesToConfigItem,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.RelatesToConfigItem.splice(i, 1);\r\n\r\n                            vm.widget[relatedDeviceText + \"Arr\"] = _.filter(vm.widget[relatedDeviceText + \"Arr\"],\r\n                                function(el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                    }\r\n\r\n                    if (propName && propName.length > 0) {\r\n                        var input = $(\"input[data-control-bind='\" + propName + \"']\");\r\n                        input.data(\"kendoAutoComplete\").value(\"\");\r\n                        var liParent = input.parent().children(\".menu-usr-mgt\");\r\n                        $(liParent).hide();\r\n                    }\r\n\r\n                    var tpl = $(e.currentTarget).parents(\".support-tools__widget\").first();\r\n                    tpl.remove();\r\n\r\n                    if (typeof (vm.widget[affectedUserText].BaseId && vm.widget[assignedUserText].BaseId && vm.widget[primaryOwnerText].BaseId) !== \"undefined\")\r\n                        $(\"#\" + primaryOwnerText + \"AddLink\").parents(\".support-tools__widget\").first().show();\r\n\r\n                    kendo.bind(ele, vm);\r\n                },\r\n                remoteManageRecepient: null,\r\n                openSendEmail: function (e) {\r\n                    var widgetValue = e.currentTarget.value;\r\n                    vm.widget.remoteManageRecepient = widgetValue;\r\n                    $('li.link[data-bind=\"click: sendEmail\"]').click();\r\n                }\r\n            }\r\n\r\n            if (vm.widget.affectedUser.BaseId) {\r\n                $(\"#\" + affectedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n                dataUserContainer.append(dataTemplate(getObjectDetails(affectedUserText)));\r\n            }\r\n\r\n            if (vm.widget.assignedUser.BaseId) {\r\n                $(\"#\" + assignedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n                dataUserContainer.append(dataTemplate(getObjectDetails(assignedUserText)));\r\n            }\r\n\r\n            if (vm.widget.primaryOwner.BaseId) {\r\n                $(\"#\" + primaryOwnerText + \"AddLink\").addClass(\"isDisabled\");\r\n                dataUserContainer.append(dataTemplate(getObjectDetails(primaryOwnerText)));\r\n            }\r\n\r\n            if (vm.widget.relatedDeviceArr.length > 0) {\r\n\r\n                var relatedDeviceObj = {\r\n                    devices: vm.widget[relatedDeviceText + \"Arr\"],\r\n                    type: relatedDeviceText + \"Arr\",\r\n                    title: localization.RelatedDeviceText,\r\n                    icon: \"related_device.svg\"\r\n                }\r\n                dataDeviceContainer.append(multipleDataTemplate(relatedDeviceObj));\r\n                kendo.bind(dataDeviceContainer);\r\n            }\r\n\r\n            if (vm.widget.affectedDeviceArr.length > 0) {\r\n\r\n                var affectedDeviceObj = {\r\n                    devices: vm.widget[affectedDeviceText + \"Arr\"],\r\n                    type: affectedDeviceText + \"Arr\",\r\n                    title: localization.AffectedDeviceText,\r\n                    icon: \"affected_device.svg\"\r\n                }\r\n                dataDeviceContainer.append(multipleDataTemplate(affectedDeviceObj));\r\n                kendo.bind(dataDeviceContainer);\r\n            }\r\n\r\n            if (!vm.viewModel.hasOwnProperty('RelatesToIncident'))\r\n                $(\"#\" + primaryOwnerText + \"AddLink\").addClass(\"isDisabled\");\r\n\r\n            if (!vm.viewModel.hasOwnProperty('RequestedWorkItem')) \r\n                $(\"#\" + affectedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n\r\n            widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n\r\n            var changeCntr = 0;\r\n            vm.bind(\"change\",\r\n                function (e) {\r\n\r\n                    if (e.field.indexOf(\"RequestedWorkItem\") > -1 || e.field.indexOf(\"RelatesToIncident\") > -1 || e.field.indexOf(\"AssignedWorkItem\") > -1) {\r\n\r\n                        var propName, widgetName;\r\n\r\n                        if (e.field.indexOf(\"RequestedWorkItem\") > -1) {\r\n                            propName = \"RequestedWorkItem\";\r\n                            widgetName = affectedUserText;\r\n                        }\r\n\r\n                        if (e.field.indexOf(\"RelatesToIncident\") > -1) {\r\n                            propName = \"RelatesToIncident\";\r\n                            widgetName = primaryOwnerText;\r\n                        }\r\n\r\n                        if (e.field.indexOf(\"AssignedWorkItem\") > -1) {\r\n                            propName = \"AssignedWorkItem\";\r\n                            widgetName = assignedUserText;\r\n                        }\r\n\r\n                        if (e.field.indexOf(\"BaseId\") > -1) changeCntr++;\r\n                        if (e.field.indexOf(\"DisplayName\") > -1) changeCntr++;\r\n\r\n                        if (changeCntr === 2) {\r\n\r\n                            if (vm.viewModel[propName].BaseId) {\r\n\r\n                                $.getJSON('/api/V3/User/GetUserRelatedInfoByUserId',\r\n                                    { userId: vm.viewModel[propName].BaseId },\r\n                                    function(json) {\r\n\r\n                                        vm.widget[widgetName] = _.extend(JSON.parse(json) || {},\r\n                                            {\r\n                                                widgetType: widgetName\r\n                                            });\r\n\r\n                                        $('#' + widgetName + 'dataTemplate').remove();\r\n                                        changeCntr = 0;\r\n\r\n                                        $(\"#\" + widgetName + \"AddLink\").addClass(\"isDisabled\");\r\n                                        dataUserContainer.append(dataTemplate(getObjectDetails(widgetName)));\r\n\r\n                                        kendo.bind(dataUserContainer, vm);\r\n\r\n                                        widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n\r\n                                    });\r\n\r\n                            } else {\r\n\r\n                                $('#' + widgetName + 'dataTemplate').remove();\r\n                                $(\"#\" + widgetName + \"AddLink\").removeClass(\"isDisabled\");\r\n                                changeCntr = 0;\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (e.field.indexOf(\"RelatesToConfigItem\") > -1 || e.field.indexOf(\"HasRelatedWorkItems\") > -1) {\r\n                        var propName, widgetName;\r\n\r\n                        if(e.field.indexOf(\"RelatesToConfigItem\") > -1) {\r\n                            propName = \"RelatesToConfigItem\";\r\n                            widgetName = relatedDeviceText;\r\n                        }\r\n\r\n                        if(e.field.indexOf(\"HasRelatedWorkItems\") > -1) {\r\n                            propName = \"HasRelatedWorkItems\";\r\n                            widgetName = affectedDeviceText;\r\n                        }\r\n\r\n                        var item = e.items[0];\r\n\r\n                        if (item.ClassName && (item.ClassName === \"Microsoft.Windows.Computer\" || item.ClassName === \"Computer\")) {\r\n\r\n                            if (e.action === \"add\") {\r\n\r\n                                item = _.extend(item,\r\n                                    {\r\n                                        widgetType: widgetName\r\n                                    });\r\n\r\n                                vm.widget[widgetName + \"Arr\"].push(item);\r\n                            }\r\n\r\n                            if (e.action === \"remove\") {\r\n\r\n                                vm.widget[widgetName + \"Arr\"] = _.filter(vm.widget[widgetName + \"Arr\"],\r\n                                    function(el) {\r\n                                        return el.BaseId !== item.BaseId;\r\n                                    });\r\n                            }\r\n\r\n                            $('.' + widgetName + 'ArrdataTemplate').remove();\r\n\r\n                            var obj = {\r\n                                devices: vm.widget[widgetName + \"Arr\"],\r\n                                type: widgetName + \"Arr\",\r\n                                title: (e.field.indexOf(\"RelatesToConfigItem\") > -1)\r\n                                    ? localization.RelatedDeviceText\r\n                                    : localization.AffectedDeviceText,\r\n                                icon: (e.field.indexOf(\"RelatesToConfigItem\") > -1)\r\n                                    ? \"related_device.svg\"\r\n                                    : \"affected_device.svg\"\r\n                            }\r\n                            dataDeviceContainer.append(multipleDataTemplate(obj));\r\n                            kendo.bind(dataDeviceContainer, vm);\r\n\r\n                            widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n            kendo.bind(ele, vm);\r\n\r\n            return __remoteManageWidgetSingleton;\r\n        },\r\n        toggle: function (vm) {\r\n            vm.widget.open = !vm.widget.open;\r\n\r\n            if (vm.widget.open) {\r\n                if (vm.attachmentWidget) vm.attachmentWidget.open = false;\r\n                $(\"#headerAttachmentBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#attachment_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#expanded_widget\").addClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").addClass('content-header__flyout__overlay--open');\r\n            } else {\r\n                $(\"#remoteManageBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#expanded_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").removeClass('content-header__flyout__overlay--open');\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/flyout/headerAttachmentWidget/view.html',[],function () { return '<div id=\"attachment_widget\" class=\"content-header__flyout\">\\r\\n    <h3 class=\"content-header__flyout__title\">\\r\\n        <span><%= localization.FileAttachments %></span>\\r\\n    </h3>\\r\\n    <div id=\"headerAttachmentContainer\" class=\"panel-body\"></div>\\r\\n</div>';});\n\n","\ndefine('text!forms/predefined/fileAttachmentsDragDrop/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <div class=\"drop-zone-element\">\\r\\n        <div class=\"text-wrapper\">\\r\\n            <span class=\"drag-image-text\">\\r\\n                <img data-bind=\"visible:isDesktop\" src=\"/Content/Images/Icons/FileUpload/upload_to_cloud.svg\" />\\r\\n                <span data-bind=\"visible:isDesktop\"><b><%= localization.DragAndDrop %> </b> <%= localization.YourFilesOr %> <a class=\"browse-file\"><b><%= localization.Browse %></b></a></span>\\r\\n                <a  data-bind=\"visible:isMobile\" class=\"browse-file\"><b><%= localization.Browse %></b></a>\\r\\n                <div style=\"display:none\"><input name=\"files\" id=\"files\" type=\"file\"/></div>\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div>\\r\\n    <div class=\"fileattachment-list\"></div>\\r\\n    <div class=\"fileattachment-img-modal\"></div>\\r\\n</div>\\r\\n\\r\\n<script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n    <div class=\"thumbnail-file\">\\r\\n        <div class=\"cursor-pointer thumbnail-img\">\\r\\n            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n            <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n            # } else{ #\\r\\n            <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n            # } #\\r\\n        </div>\\r\\n        <div class=\"thumbnail-caption\">\\r\\n            <span>#: DisplayName #</span>\\r\\n            <div class=\"overlay\">\\r\\n                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                        <i class=\"fa fa-eye\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                        <i class=\"fa fa-external-link\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (BaseId!=null) { #\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                        <i class=\"fa fa-download\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n                # } #\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\"  title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<style>\\r\\n\\r\\n</style>';});\n\n","/**\r\nfileAttachmentsDragDrop\r\n**/\r\n\r\ndefine('forms/predefined/fileAttachmentsDragDrop/controller',['require','text!forms/predefined/fileAttachmentsDragDrop/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/fileAttachmentsDragDrop/view.html\");\r\n   \r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            //get file content for images\r\n            if (!_.isUndefined(vm.FileAttachment) && vm.FileAttachment.length > 0) {\r\n                _.each(vm.FileAttachment, function (file) {\r\n                    if (file.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                        $.ajax({\r\n                            type: \"GET\",\r\n                            async: false,\r\n                            url: \"/FileAttachment/GetFileContent/\",\r\n                            data: { id: file.BaseId }\r\n                        }).then(function (data) {\r\n                            file.Content.data = data;\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            var properties = {\r\n                Required: node.Required,\r\n                BaseId: vm.BaseId,\r\n                AcceptExtension: _.isUndefined(node.AcceptExtension) ? \"\" : vm.AcceptExtension,\r\n                ClassName: vm.Clas\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            var template = $(built(properties));\r\n\r\n            var viewModel = new kendo.observable({\r\n                isDesktop: !app.isMobile(),\r\n                isMobile: app.isMobile(),\r\n                isEnabled: true,\r\n                isVisible: true,\r\n                onSelect: function (e) {\r\n                    template.find(\".k-file-error\").remove();\r\n                    $.each(e.files, function (index, value) {\r\n                        if (!_.isUndefined(node.AcceptExtension)\r\n                            && node.AcceptExtension != \"\"\r\n                            && !(node.AcceptExtension.toLowerCase().indexOf(value.extension.toLowerCase()) > -1)) {\r\n                            kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.ErrorDescription,\r\n                                message: localization.FileExtensionInvalid + node.AcceptExtension,\r\n                                icon: \"fa fa-exclamation\"\r\n                            });\r\n                            e.preventDefault();\r\n                        }\r\n                    });\r\n                },\r\n                onUploadSuccess: function (e) {\r\n                    var vmFiles = !_.isUndefined(vm.FileAttachment) ? vm.FileAttachment : [];\r\n                    var response = e.response;\r\n\r\n                    if (e.operation == \"upload\") {\r\n                        for (var i = 0; i < e.files.length; i++) {\r\n                            var file = e.files[i].rawFile;\r\n                            if (file) {\r\n                                if (!_.isUndefined(response.FileAttachment)) {\r\n                                    var f = _.filter(vm.FileAttachment,\r\n                                        function(el) {\r\n                                            return el.Content.data === response.FileAttachment.Content.data && el.BaseId === response.FileAttachment.BaseId;\r\n                                        });\r\n                                    if(f.length === 0)\r\n                                        vm.FileAttachment.push(response.FileAttachment); //save to viewModel\r\n                                } else if (!_.isUndefined(response.success) && response.success == false) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.ErrorDescription,\r\n                                        message: response.message,\r\n                                        icon: \"fa fa-exclamation\"\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                onUploadError: function (e) {\r\n                    var err = $.parseJSON(e.XMLHttpRequest.responseText);\r\n                    $.map(e.files, function (file) {\r\n                        console.warn(\"Could not upload \" + file.name);\r\n                    });\r\n                },\r\n                onRemove: function (e) {\r\n                    $.get(\"/FileAttachment/RemoveFileUpload/\", { BaseId: vm.BaseId, fieldName: node.PropertyName }, function (data) {\r\n                        template.find(\".k-file\").parent().remove();\r\n                        //template.find(\"img\").hide();\r\n                        template.find(\"#div\" + node.PropertyName).hide();\r\n                        vm[node.PropertyName] = null;\r\n                    });\r\n                },\r\n                onOpenFile: function (el) {\r\n\r\n                    if (el.hasClass(\"opennewtab\")) {\r\n                        var win = window.open('about:blank');\r\n                        setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                            win.document.body.appendChild(win.document.createElement('img')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.focus();\r\n                        }, 0);\r\n\r\n                    }\r\n                    else {\r\n                        var dialog = $('.fileattachment-img-modal');\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        var listView = template.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                        var item = el.closest(\"[role='option']\");\r\n                        var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n                        \r\n                        \r\n                        if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/) && !el.hasClass(\"download\")) {\r\n                            dialog.kendoDialog({\r\n                                modal: true,\r\n                                title: dataItem.DisplayName,\r\n                                content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" + dataItem.DisplayName + \"\\\" /></div>\",\r\n                                animation: {\r\n                                    open: {\r\n                                        effects: \"fade:in\"\r\n                                    }\r\n                                }\r\n                            });\r\n                            $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                            dialog.data(\"kendoDialog\").open();\r\n                            dialog.parent().css(\"position\", \"fixed\");\r\n\r\n                            //close preview window on overlay click\r\n                            $('.k-overlay').on(\"click\", function () {\r\n                                dialog.data(\"kendoDialog\").close();\r\n                            });\r\n\r\n                        } else {\r\n                            if (dataItem.Content.data && !dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                                var blob = new Blob([dataItem.Content.data]);\r\n                                var url = window.URL.createObjectURL(blob);\r\n                                var fileName = dataItem.DisplayName;\r\n\r\n                                if (navigator.msSaveOrOpenBlob) {\r\n                                    navigator.msSaveOrOpenBlob(blob, fileName);\r\n                                    return;\r\n                                } else if (window.navigator.msSaveBlob) { // for IE browser\r\n                                    window.navigator.msSaveBlob(blob, fileName);\r\n                                    return;\r\n                                }\r\n\r\n                                var a = document.createElement(\"a\");\r\n                                document.body.appendChild(a);\r\n                                a.style = \"display: none\";\r\n\r\n                                a.href = url;\r\n                                a.download = fileName;\r\n                                a.click();\r\n                                window.URL.revokeObjectURL(url);\r\n                                document.body.removeChild(a);\r\n                            } else if (dataItem.BaseId) {\r\n                                if (dataItem.BaseId != null) {\r\n                                    location.href = downloadUrl + dataItem.BaseId;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            _.defer(function () {\r\n                kendo.bind(template, viewModel);\r\n                template.find(\".fileattachment-list\").kendoListView({\r\n                    dataSource: vm.FileAttachment,\r\n                    template: kendo.template($(\"#fileTemplate\").html()),\r\n                    selectable: \"single\",\r\n                    //change: viewModel.onOpenFile,\r\n                    dataBound: function () {\r\n                        template.find(\".custom-click\").on(\"click\", function () {\r\n                            viewModel.onOpenFile($(this));\r\n                        });\r\n\r\n                        if (!app.isMobile()) {\r\n                            //Remove view image icon if not in mobile.\r\n                            template.find(\"a[view-image]\").parent().hide();\r\n\r\n                            template.find(\".thumbnail-img img\").on(\"click\", function () {\r\n                                viewModel.onOpenFile($(this));\r\n                            });\r\n                        }\r\n                        \r\n                    }\r\n                });\r\n\r\n                $(\"#files\").kendoUpload({\r\n                    async: {\r\n                        saveUrl: \"/FileAttachment/UploadAttachment/\" + vm.BaseId + \"?className=\" + vm.ClassName,\r\n                        removeUrl: \"remove\",\r\n                        autoUpload: true\r\n                    },\r\n                    success:  viewModel.onUploadSuccess,\r\n                    error: viewModel.onUploadError,\r\n                    showFileList: false,\r\n                    dropZone: \".drop-zone-element\"\r\n                });\r\n\r\n                $(\".browse-file\").off('click').on('click', function () {\r\n                    $(\"#files\").trigger(\"click\");\r\n                });\r\n\r\n               \r\n            });\r\n            callback(template);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","var __headerAttachmentWidgetSingleton;\r\n\r\ndefine('forms/flyout/headerAttachmentWidget/controller',['require','text!forms/flyout/headerAttachmentWidget/view.html','text!forms/predefined/fileAttachmentsDragDrop/view.html','forms/predefined/fileAttachmentsDragDrop/controller'],function (require) {\r\n    var tpl = require(\"text!forms/flyout/headerAttachmentWidget/view.html\");\r\n    var attachmentTpl = require(\"text!forms/predefined/fileAttachmentsDragDrop/view.html\");\r\n    var fileAttachmentsDragDrop = require(\"forms/predefined/fileAttachmentsDragDrop/controller\");\r\n    var definition = {\r\n        template: tpl,\r\n        getWidget: function (vm) {\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            var main_row = $('.page_bar.sticky-header').first().children('.row').first();\r\n            main_row.after(ele);\r\n\r\n            var getContainer = function (tplReturn) {\r\n                return (typeof (tplReturn) === \"string\") ? $(tplReturn) : tplReturn;\r\n            }\r\n\r\n            var headerAttachmentContainer = $('#headerAttachmentContainer');\r\n            //headerAttachmentContainer.append(eleAttachment);\r\n\r\n            fileAttachmentsDragDrop.build(vm.viewModel, { name: \"File Attachments\", type: \"fileAttachmentsDragDrop\" }, function (tplReturn) {\r\n                var _container = getContainer(tplReturn);\r\n                headerAttachmentContainer.append(_container);\r\n            });\r\n\r\n            vm.attachmentWidget = {\r\n                open: false\r\n            }\r\n\r\n            kendo.bind(ele, vm);\r\n\r\n            return __headerAttachmentWidgetSingleton;\r\n        },\r\n        toggle: function (vm) {\r\n            vm.attachmentWidget.open = !vm.attachmentWidget.open;\r\n\r\n            if (vm.attachmentWidget.open) {\r\n                if (vm.widget) vm.widget.open = false;\r\n                $(\"#remoteManageBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#expanded_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#attachment_widget\").addClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").addClass('content-header__flyout__overlay--open');\r\n            } else {\r\n                $(\"#headerAttachmentBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#attachment_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").removeClass('content-header__flyout__overlay--open');\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nHeader Sticky\r\n**/\r\ndefine('forms/header/sticky/controller',['require','text!forms/header/sticky/view.html','forms/flyout/fileAttachmentsFlyout/controller','forms/flyout/remoteManageWidget/controller','forms/flyout/headerAttachmentWidget/controller'],function (require) {\r\n    var tpl = require(\"text!forms/header/sticky/view.html\");\r\n    var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n    var remoteManageWidget = require(\"forms/flyout/remoteManageWidget/controller\");\r\n    var headerAttachmentWidget = require(\"forms/flyout/headerAttachmentWidget/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n\r\n            //modify vm for this view\r\n            //vm.view.viewAttachments = function () {\r\n\r\n            //    var flyoutWindow = attachmentPickerFlyout.getPopup(vm);\r\n            //    flyoutWindow.open();\r\n            //}\r\n\r\n            //vm.view.filesCount = vm.viewModel.FileAttachment.length;\r\n\r\n            vm.view.statusVisible = function () {\r\n                if (vm.newWI) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            vm.view.showRemoteManageIcon = (session.consoleSetting.TrueControlCenterURL && !app.isMobile()) ? true : false;\r\n\r\n            var view = new kendo.View(built(), {\r\n                wrap: false,\r\n                init: function () {\r\n\r\n                    setTimeout(function() {\r\n                        DoWork(); \r\n                        if ($(\"#expanded_widget\").length === 0) {\r\n                            remoteManageWidget.getWidget(vm);\r\n                        }\r\n                        if ($(\"#attachment_widget\").length === 0) {\r\n                            headerAttachmentWidget.getWidget(vm);\r\n                        }\r\n                    }, 100);\r\n                },\r\n                model: vm\r\n            });\r\n\r\n            //this function is called from the link parent task so we need to allow callback function to be an input\r\n            vm.view.buildParentHeaderView = function (viewCallBack) {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n\r\n                //modify vm for this view\r\n                vm.view.controller = {\r\n                    parentIncident: (vm.type === \"ReleaseRecord\") ? localization.ParentRecord : localization.Parentincident,\r\n                    editHref: \"/\" + vm.type + \"/Edit/\" + vm.viewModel.ParentWorkItem.Id + \"/\",\r\n                    editLink: vm.viewModel.ParentWorkItem.Id + \"-\" + vm.viewModel.ParentWorkItem.Title,\r\n                    unlinkParent: function () {\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: localization.UnlinkToParent,\r\n                            message: localization.SureUnlinkToParent\r\n                        })\r\n                        ).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                delete vm.viewModel.ParentWorkItem;\r\n                                vm.viewModel.set(\"isDirty\", true);\r\n                                vm.view.controller.isParent = false;\r\n                                view.destroy();\r\n                                view = new kendo.View(built(), {\r\n                                    wrap: false,\r\n                                    init: function () {\r\n\r\n                                        setTimeout(function () {\r\n                                            DoWork();\r\n                                            if ($(\"#expanded_widget\").length === 0) {\r\n                                                remoteManageWidget.getWidget(vm);\r\n                                            }\r\n                                            if ($(\"#attachment_widget\").length === 0) {\r\n                                                headerAttachmentWidget.getWidget(vm);\r\n                                            }\r\n                                        }, 100);\r\n                                    },\r\n                                    model: vm\r\n                                });\r\n\r\n                                callback(view.render());\r\n                            }\r\n                        });\r\n                    },\r\n                    isParent: (vm.viewModel.ParentWorkItem) ? true : false\r\n                }\r\n\r\n                view.destroy();\r\n\r\n                view = new kendo.View(built(), {\r\n                    wrap: false,\r\n                    init: function () {\r\n\r\n                        setTimeout(function () {\r\n                            DoWork();\r\n                            if ($(\"#expanded_widget\").length === 0) {\r\n                                remoteManageWidget.getWidget(vm);\r\n                            }\r\n                            if ($(\"#attachment_widget\").length === 0) {\r\n                                headerAttachmentWidget.getWidget(vm);\r\n                            }\r\n                        }, 100);\r\n                    },\r\n                    model: vm\r\n                });\r\n\r\n\r\n                viewCallBack(callback(view.render()));\r\n            }\r\n\r\n            vm.view.isSLOopen = false;\r\n\r\n            vm.view.toggleSLODropdown = function () {\r\n                vm.view.isSLOopen = !vm.view.isSLOopen;\r\n\r\n                if(vm.view.isSLOopen)\r\n                    $(\".content-header__collapser__dropdown\").addClass(\"content-header__collapser__dropdown--show\");\r\n                else\r\n                    $(\".content-header__collapser__dropdown\").removeClass(\"content-header__collapser__dropdown--show\");\r\n            }\r\n\r\n            window.closeSLODropdown = function() {\r\n                vm.view.toggleSLODropdown();\r\n            }\r\n\r\n            var DoWork = function () {\r\n\r\n                if (vm.viewModel[\"SLO\"] && vm.viewModel[\"SLO\"].length > 0) {\r\n\r\n                    var first_sloObjects = [vm.viewModel[\"SLO\"][0]],\r\n                        first_sloContainer = $(\".first-header-slo-container\");\r\n\r\n                    DoWorkSLOHeader(first_sloContainer, first_sloObjects, false);\r\n\r\n                    var sloContainer = $(\".header-slo-container\"),\r\n                        sloObjects = vm.viewModel[\"SLO\"];\r\n\r\n                    DoWorkSLOHeader(sloContainer, sloObjects, true);\r\n\r\n                } else {\r\n                    $(\".first-header-slo-container\").parent().hide();\r\n                }\r\n            }\r\n\r\n            var DoWorkSLOHeader = function (sloContainer, sloObjects, isDropdown) {\r\n                var sloActive = \"SLAInstance.Status.Active\",\r\n                    sloPaused = \"SLAInstance.Status.Paused\",\r\n                    sloMet = \"SLAInstance.Status.Met\",\r\n                    sloWarning = \"SLAInstance.Status.Warning\",\r\n                    sloBreached = \"SLAInstance.Status.Breached\",\r\n                    sloNotReady = \"SLAInstance.Status.NotReady\";\r\n\r\n                for (var key in sloObjects) {\r\n                    if (sloObjects[key].DisplayName == null) continue;\r\n                    var isMet = false;\r\n                    var isPaused = false;\r\n\r\n                    //var sloTemplate = kendo.template(sloViewObj.find(\"#slo-template\").html());\r\n                    var sloTemplate = (isDropdown) ? kendo.template($(\"#header-slo-template\").html()) : kendo.template($(\"#first-header-slo-template\").html());\r\n\r\n                    var sloObj = {};\r\n                    sloObj.index = key;\r\n                    sloObj.count = vm.viewModel[\"SLO\"].length;\r\n                    sloObj.Id = sloObjects[key].DisplayName.replace(\" \", \"\");\r\n                    sloObj.Title = sloObjects[key].DisplayName;\r\n\r\n                    switch (sloObjects[key].Status) {\r\n                        case sloActive:\r\n                            sloObj.imageClass = \"fa-clock-o text-primary\";\r\n                            break;\r\n                        case sloPaused:\r\n                        case sloNotReady:\r\n                            isPaused = true;\r\n                            sloObj.imageClass = \"fa-pause text-info\";\r\n                            break;\r\n                        case sloMet:\r\n                            sloObj.imageClass = \"fa-check-circle-o text-success\";\r\n                            //vm.view.controller.isMet = true;\r\n                            isMet = true;\r\n                            break;\r\n                        case sloWarning:\r\n                            sloObj.imageClass = \"fa-exclamation-circle text-warning\";\r\n                            break;\r\n                        case sloBreached:\r\n                            sloObj.imageClass = \"fa-bell text-danger\";\r\n                            isBreach = true;\r\n                            break;\r\n                    }\r\n\r\n                    var sloImg = sloObj.imageClass; //should remove\r\n\r\n                    var clone = $('<div/>').addClass(\"content-header__collapser\");\r\n                    clone.html(sloTemplate(sloObj));\r\n\r\n                    //alert(sloObjects[key].Time.Hours);\r\n                    SLOCoundown(clone, isMet, isPaused, sloObjects[key].Time.Hours, sloObjects[key].Time.Minutes, sloObjects[key].Time.Seconds,\r\n                        eval(sloObjects[key].WarningDate), eval(sloObjects[key].ServerDatetimeNow), false);\r\n                    sloContainer.append(clone);\r\n                }\r\n            }\r\n\r\n            var SLOCoundown = function (sloCloned, isMetStat, isPaused, hours, minutes, seconds, warningDate, serverCurrentDate, isBreach) {\r\n                //force warning image\r\n                if (!isMetStat && !isBreach && warningDate <= serverCurrentDate) {\r\n                    //reset all classes \r\n                    sloCloned.find(\".header-slo-icon\").attr('class', \"header-slo-icon fa fa-exclamation-circle text-warning fa-lg\");\r\n                }\r\n\r\n                //set breached\r\n                if (!isMetStat && (seconds <= 0 && minutes <= 0 && hours <= 0)) {\r\n                    isBreach = true;\r\n                    sloCloned.find(\".header-slo-icon\").attr('class', \"header-slo-icon fa fa-bell text-danger fa-lg\");\r\n                    sloCloned.find(\".header-slo-timer\").addClass(\"text-danger\");\r\n                }\r\n\r\n                //set time in view\r\n                if (!isMetStat) {\r\n                    var secs = (Math.abs(seconds) < 10) ? \"0\" + Math.abs(seconds) : Math.abs(seconds);\r\n                    var mins = (Math.abs(minutes) < 10) ? \"0\" + Math.abs(minutes) : Math.abs(minutes);\r\n                    var hrs = (Math.abs(hours) < 10) ? \"0\" + Math.abs(hours) : Math.abs(hours);\r\n                    if (isBreach) {\r\n                        sloCloned.find(\".header-slo-timer\").html(\"\");\r\n                    } else\r\n                        sloCloned.find(\".header-slo-timer\").html((isBreach ? \"-\" : \"\") + Math.abs(hrs) + \":\" + mins + \":\" + secs);\r\n                    //return;\r\n                } else {\r\n                    sloCloned.find(\".header-slo-timer\").html(\"&nbsp;\");\r\n                    return;\r\n                }\r\n\r\n                if (isPaused) return;\r\n\r\n                //make the fancy js countdown\r\n                serverCurrentDate.setSeconds(serverCurrentDate.getSeconds() + 1);\r\n                seconds = parseInt(seconds) - 1;\r\n\r\n\r\n                if (seconds <= 0 && minutes <= 0 && hours <= 0) {\r\n                    if (seconds <= -60) {\r\n                        seconds = 0;\r\n                        minutes = parseInt(minutes) - 1;\r\n                    }\r\n\r\n                    if (minutes <= -60) {\r\n                        minutes = 0;\r\n                        hours = parseInt(hours) - 1;\r\n                    }\r\n                } else {\r\n                    if (minutes < 0) {\r\n                        minutes = 59;\r\n                        hours = parseInt(hours) - 1;\r\n                    }\r\n\r\n                    if (seconds < 0) {\r\n                        seconds = 59;\r\n                        minutes = parseInt(minutes) - 1;\r\n                    }\r\n                }\r\n\r\n\r\n                setTimeout(function () {\r\n                    SLOCoundown(sloCloned, isMetStat, isPaused, hours, minutes, seconds,\r\n                        warningDate, serverCurrentDate, isBreach);\r\n                }, 1000);\r\n            }\r\n\r\n            vm.view.doClick = function (e) {\r\n                if ($(e.currentTarget).hasClass(\"btn-icon-stack--active\"))\r\n                    $(e.currentTarget).removeClass(\"btn-icon-stack--active\");\r\n                else\r\n                    $(e.currentTarget).addClass(\"btn-icon-stack--active\");\r\n                remoteManageWidget.toggle(vm);\r\n            }\r\n\r\n            vm.view.toggleMore = function() {\r\n                $('#openmore').modal('show');\r\n\r\n                $('#openmore').on('shown.bs.modal',\r\n                    function() {\r\n                        $('.modal-backdrop').each(function (i, obj) {\r\n                            $('#openmore').before(obj);\r\n                        });\r\n                    });\r\n            }\r\n\r\n            vm.view.viewAttachments = function (e) {\r\n                if ($(e.currentTarget).hasClass(\"btn-icon-stack--active\"))\r\n                    $(e.currentTarget).removeClass(\"btn-icon-stack--active\");\r\n                else\r\n                    $(e.currentTarget).addClass(\"btn-icon-stack--active\");\r\n                headerAttachmentWidget.toggle(vm);\r\n            }\r\n\r\n            //set page <title>\r\n            document.title = vm.view.title + ' - ' + vm.view.id;\r\n\r\n            if (!_.isNull(vm.viewModel.ParentWorkItem) &&\r\n                !_.isUndefined(vm.viewModel.ParentWorkItem)) {\r\n                vm.view.buildParentHeaderView(function(tpl) {\r\n                });\r\n            } else {\r\n                vm.view.controller = {\r\n                    isParent: (vm.viewModel.ParentWorkItem) ? true : false\r\n                }\r\n            }\r\n\r\n            $('body').click(function (e) {\r\n\r\n                if (e.target.id === 'expanded_widget' || $(e.target).parents('#expanded_widget').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'remoteManageBtn' || $(e.target).parents('#remoteManageBtn').length > 0)\r\n                    return;\r\n\r\n                if ($(e.target).hasClass(\"support-tools__widget__action\") || $(e.target).parents('.support-tools__widget__action').length > 0)\r\n                    return;\r\n\r\n                if ($(e.target).hasClass(\"multi-query__list__selected-items\") || $(e.target).parents('.multi-query__list__selected-items').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'attachment_widget' || $(e.target).parents('#attachment_widget').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'headerAttachmentContainer' || $(e.target).parents('#headerAttachmentContainer').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'headerAttachmentBtn' || $(e.target).parents('#headerAttachmentBtn').length > 0)\r\n                    return;\r\n\r\n                if ($(e.target).hasClass(\"thumbnail-file\") || $(e.target).parents('.thumbnail-file').length > 0)\r\n                    return;\r\n\r\n                if (vm.widget) vm.widget.open = false;\r\n                $(\"#remoteManageBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#expanded_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").removeClass('content-header__flyout__overlay--open');\r\n\r\n                if (vm.attachmentWidget) vm.attachmentWidget.open = false;\r\n                $(\"#headerAttachmentBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#attachment_widget\").removeClass('content-header__flyout--open');\r\n            });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/status/view.html',[],function () { return '<h1 class=\"page_title\">\\r\\n    <span data-bind=\"text: view.title\"></span><span>-</span><span class=\"uppercase\" data-bind=\"text: view.id\"></span>\\r\\n    <span class=\"cursor-pointer\" id=\"viewAttachments\" data-bind=\"click: view.viewAttachments, visible: view.filesCount > 0\"><i class=\"fa fa-paperclip text-primary\" style=\"font-size: inherit\"></i></span>\\r\\n    <span class=\"label label-info label-heading\" id=\"statusname\" data-bind=\"visible: view.statusVisible, text: viewModel.Status.Name\"></span>\\r\\n    <span class=\"label label-heading\" data-bind=\"visible: viewModel.IsParent\"><img src=\"/Content/Images/Icons/WorkItemsStatus/workitem-parent-icon.svg\"></span>\\r\\n</h2>\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/status/controller',['require','text!forms/header/status/view.html','forms/flyout/fileAttachmentsFlyout/controller'],function (require) {\r\n    var tpl = require(\"text!forms/header/status/view.html\");\r\n    var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n            \r\n            //modify vm for this view\r\n            vm.view.viewAttachments = function () {\r\n\r\n                var flyoutWindow = attachmentPickerFlyout.getPopup(vm);\r\n                flyoutWindow.open();\r\n            }\r\n\r\n            vm.view.filesCount = vm.viewModel.FileAttachment.length;\r\n\r\n            vm.view.statusVisible = function () {\r\n                if (vm.newWI) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            //set page <title>\r\n            document.title = vm.view.title + ' - ' + vm.view.id;\r\n\r\n            var view = new kendo.View(built(), { wrap: false, model: vm });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/relationships/controller',['require','text!forms/header/relationships/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/relationships/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //we need to have a container to add to via task\r\n            var container = $('<div/>').attr(\"id\", \"parent-header-space\");\r\n            var view = new kendo.View(container, { wrapper: false });\r\n           \r\n            //this function is called from the link parent task so we need to allow callback function to be an input\r\n            vm.view.buildParentHeaderView = function (viewCallBack) {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                \r\n                //modify vm for this view\r\n                vm.view.controller = {\r\n                    parentIncident: (vm.type === \"ReleaseRecord\") ? localization.ParentRecord : localization.Parentincident,\r\n                    editHref: \"/\"+vm.type+\"/Edit/\" + vm.viewModel.ParentWorkItem.Id + \"/\",\r\n                    editLink: vm.viewModel.ParentWorkItem.Id + \"-\" + vm.viewModel.ParentWorkItem.Title,\r\n                    unlinkParent: function () {\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: localization.UnlinkToParent,\r\n                            message: localization.SureUnlinkToParent\r\n                        })\r\n                        ).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                delete vm.viewModel.ParentWorkItem;\r\n                                vm.viewModel.set(\"isDirty\", true);\r\n                                view.content.hide();\r\n                            } else {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                viewCallBack(built());\r\n            }\r\n\r\n            if (!_.isNull(vm.viewModel.ParentWorkItem) &&\r\n                !_.isUndefined(vm.viewModel.ParentWorkItem)) {\r\n                vm.view.buildParentHeaderView(function (tpl) {\r\n                    //destroy default container\r\n                    view.destroy();\r\n\r\n                    container.append(tpl);\r\n                    view = new kendo.View(container, { wrapper: false, model: vm });\r\n                    callback(view.render());\r\n                });\r\n            } else {\r\n                callback(view.render());\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/slo/view.html',[],function () { return '<div class=\"slo-container pull-right\">\\r\\n\\r\\n</div>\\r\\n<script id=\"slo-template\" type=\"text/x-kendo-template\">\\r\\n        <li class=\"slo-timer\"></li>\\r\\n        <li class=\"slo-icon fa #: imageClass # fa-lg\"></li>\\r\\n        <li class=\"slo-title\">#: Title #</li>\\r\\n</script>';});\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/slo/controller',['require','text!forms/header/slo/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/slo/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function(vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            if (vm.isAnalyst) {\r\n                var built = _.template(tpl);\r\n\r\n                var view = new kendo.View(built(), {\r\n                    wrap: false,\r\n                    init: function() {\r\n                        setTimeout(function() { DoWork(); }, 100);\r\n                    },\r\n                    model: vm\r\n                });\r\n                view.render(); //so we can manipulate it\r\n\r\n                var DoWork = function() {\r\n\r\n                    if (vm.viewModel[\"SLO\"] == null) return;\r\n\r\n                    var sloViewObj = view.element,\r\n                        sloObjects = vm.viewModel[\"SLO\"],\r\n                        sloActive = \"SLAInstance.Status.Active\",\r\n                        sloPaused = \"SLAInstance.Status.Paused\",\r\n                        sloMet = \"SLAInstance.Status.Met\",\r\n                        sloWarning = \"SLAInstance.Status.Warning\",\r\n                        sloBreached = \"SLAInstance.Status.Breached\",\r\n                        sloNotReady = \"SLAInstance.Status.NotReady\";\r\n\r\n                    //var sloContainer = sloViewObj.find(\".slo-container\");\r\n                    var sloContainer = $(\".slo-container\");\r\n\r\n                    for (var key in sloObjects) {\r\n                        if (sloObjects[key].DisplayName == null) continue;\r\n                        var isMet = false;\r\n                        var isPaused = false;\r\n\r\n                        //var sloTemplate = kendo.template(sloViewObj.find(\"#slo-template\").html());\r\n                        var sloTemplate = kendo.template($(\"#slo-template\").html());\r\n\r\n                        var sloObj = {};\r\n                        sloObj.Id = sloObjects[key].DisplayName.replace(\" \", \"\");\r\n                        sloObj.Title = sloObjects[key].DisplayName;\r\n\r\n                        switch (sloObjects[key].Status) {\r\n                        case sloActive:\r\n                            sloObj.imageClass = \"fa-clock-o text-primary\";\r\n                            break;\r\n                        case sloPaused:\r\n                        case sloNotReady:\r\n                            isPaused = true;\r\n                            sloObj.imageClass = \"fa-pause text-info\";\r\n                            break;\r\n                        case sloMet:\r\n                            sloObj.imageClass = \"fa-check-circle-o text-success\";\r\n                            //vm.view.controller.isMet = true;\r\n                            isMet = true;\r\n                            break;\r\n                        case sloWarning:\r\n                            sloObj.imageClass = \"fa-exclamation-circle text-warning\";\r\n                            break;\r\n                        case sloBreached:\r\n                            sloObj.imageClass = \"fa-bell text-danger\";\r\n                            isBreach = true;\r\n                            break;\r\n                        }\r\n\r\n                        var sloImg = sloObj.imageClass; //should remove\r\n\r\n                        var clone = $('<ul/>').addClass(\"slo-status-item\");\r\n                        clone.html(sloTemplate(sloObj));\r\n\r\n                        //alert(sloObjects[key].Time.Hours);\r\n                        SLOCoundown(clone, isMet, isPaused, sloObjects[key].Time.Hours, sloObjects[key].Time.Minutes, sloObjects[key].Time.Seconds,\r\n                            eval(sloObjects[key].WarningDate), eval(sloObjects[key].ServerDatetimeNow), false);\r\n                        sloContainer.append(clone);\r\n                    }\r\n                }\r\n\r\n                var SLOCoundown = function(sloCloned, isMetStat, isPaused, hours, minutes, seconds, warningDate, serverCurrentDate, isBreach) {\r\n                    //force warning image\r\n                    if (!isMetStat && !isBreach && warningDate <= serverCurrentDate) {\r\n                        //reset all classes \r\n                        sloCloned.find(\".slo-icon\").attr('class', \"slo-icon fa fa-exclamation-circle text-warning fa-lg\");\r\n                    }\r\n\r\n                    //set breached\r\n                    if (!isMetStat && (seconds <= 0 && minutes <= 0 && hours <= 0)) {\r\n                        isBreach = true;\r\n                        sloCloned.find(\".slo-icon\").attr('class', \"slo-icon fa fa-bell text-danger fa-lg\");\r\n                        sloCloned.find(\".slo-timer\").addClass(\"text-danger\");\r\n                    }\r\n\r\n                    //set time in view\r\n                    if (!isMetStat) {\r\n                        var secs = (Math.abs(seconds) < 10) ? \"0\" + Math.abs(seconds) : Math.abs(seconds);\r\n                        var mins = (Math.abs(minutes) < 10) ? \"0\" + Math.abs(minutes) : Math.abs(minutes);\r\n                        var hrs = (Math.abs(hours) < 10) ? \"0\" + Math.abs(hours) : Math.abs(hours);\r\n                        if (isBreach) {\r\n                            sloCloned.find(\".slo-timer\").html(\"\");\r\n                        } else\r\n                            sloCloned.find(\".slo-timer\").html((isBreach ? \"-\" : \"\") + Math.abs(hrs) + \":\" + mins + \":\" + secs);\r\n                        //return;\r\n                    } else {\r\n                        sloCloned.find(\".slo-timer\").html(\"&nbsp;\");\r\n                        return;\r\n                    }\r\n\r\n                    if (isPaused) return;\r\n\r\n                    //make the fancy js countdown\r\n                    serverCurrentDate.setSeconds(serverCurrentDate.getSeconds() + 1);\r\n                    seconds = parseInt(seconds) - 1;\r\n\r\n\r\n                    if (seconds <= 0 && minutes <= 0 && hours <= 0) {\r\n                        if (seconds <= -60) {\r\n                            seconds = 0;\r\n                            minutes = parseInt(minutes) - 1;\r\n                        }\r\n\r\n                        if (minutes <= -60) {\r\n                            minutes = 0;\r\n                            hours = parseInt(hours) - 1;\r\n                        }\r\n                    } else {\r\n                        if (minutes < 0) {\r\n                            minutes = 59;\r\n                            hours = parseInt(hours) - 1;\r\n                        }\r\n\r\n                        if (seconds < 0) {\r\n                            seconds = 59;\r\n                            minutes = parseInt(minutes) - 1;\r\n                        }\r\n                    }\r\n\r\n\r\n                    setTimeout(function() {\r\n                        SLOCoundown(sloCloned, isMetStat, isPaused, hours, minutes, seconds,\r\n                            warningDate, serverCurrentDate, isBreach);\r\n                    }, 1000);\r\n                }\r\n\r\n\r\n                callback(view.render());\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\r\n\n","\ndefine('text!forms/header/spacer/view.html',[],function () { return '<div></div>';});\n\n","/**\r\nHeader Spacer\r\n**/\r\ndefine('forms/header/spacer/controller',['require','text!forms/header/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/spacer/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //modify vm for this view\r\n\r\n            var view = new kendo.View(built(), { model: vm });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/title/view.html',[],function () { return '<h1 class=\"page_title\">\\r\\n    <span data-bind=\"html: title\"></span>\\r\\n</h1>\\r\\n\\r\\n';});\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/title/controller',['require','text!forms/header/title/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/title/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            vm.title = (!_.isUndefined(localization[vm.type]) && [vm.type].length > 0) ? localization[vm.type] : vm.type;\r\n\r\n            //set page <title>\r\n            document.title = vm.title;\r\n\r\n            var view = new kendo.View(built(), { wrap: false, model: vm });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/approval/view.html',[],function () { return '<div class=\"container-fluid\" data-bind=\"visible: isDesktopView\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-6 col-xs-12\">\\r\\n            <h1 class=\"page_title\">\\r\\n                <span data-bind=\"text: title\"></span><span>-</span><span class=\"uppercase\" data-bind=\"text: workItemId\"></span>\\r\\n                <span class=\"label label-info label-heading\" id=\"statusName\" data-bind=\"text: statusName\"></span>\\r\\n                <span class=\"label label-heading\" data-bind=\"visible: isParent\"><img src=\"/Content/Images/Icons/WorkItemsStatus/workitem-parent-icon.svg\"></span>\\r\\n            </h1>\\r\\n        </div>\\r\\n        <div class=\"col-md-6 col-xs-12\">       \\r\\n            <div class=\"pull-right ra-approval-space\">\\r\\n                <!-- Support group -->\\r\\n                <div class=\"pull-left\">\\r\\n                    <div class=\"form-control-picker input-sm ra-input\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-bind=\"ciresonDropDownTree: SupportGroupEnumId, value: SupportGroupFieldValue, visible: SupportGroupVisible, click: onChangeSupportGroup, options: {disabled:disabledMAButtons}\"\\r\\n                         data-role=\"SupportGroupField\"\\r\\n                         data-placeholder=\"SupportGroup\"></div>\\r\\n                </div>\\r\\n                <div class=\"pull-right\">\\r\\n                    <!--RA buttons-->\\r\\n                    <button class=\"btn btn-success\"\\r\\n                            data-bind=\"events: { click: onApproveClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                        <%= localization.Approve %>\\r\\n                    </button>\\r\\n                    <button class=\"btn btn-danger\"\\r\\n                            data-bind=\"events: { click: onRejectClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                        <%= localization.Reject %>\\r\\n                    </button>\\r\\n                    <!--RA buttons-->\\r\\n                    <!--MA buttons-->\\r\\n                    <button class=\"btn btn-success\"\\r\\n                            data-bind=\"events: { click: onCompleteClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                        <%= localization.Completed %>\\r\\n                    </button>\\r\\n                    <button class=\"btn btn-danger\"\\r\\n                            data-bind=\"events: { click: onFailClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                        <%= localization.Failed %>\\r\\n                    </button>\\r\\n                    <!--MA buttons-->\\r\\n                    <span>\\r\\n                        <button class=\"btn-link\" data-bind=\"disabled:disablePrevious, events:{click: previousClick}\"><i class=\"fa fa-chevron-left\"></i></button>\\r\\n                        <span data-bind=\"html: pageText\"></span>\\r\\n                        <button class=\"btn-link\" data-bind=\"disabled:disableNext, events:{click: nextClick}\"><i class=\"fa fa-chevron-right\"></i></button>\\r\\n                    </span>\\r\\n                </div>\\r\\n             </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"container-fluid\" data-bind=\"visible: isMobileView\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space pull-right\">\\r\\n                <div>\\r\\n                    <button class=\"btn-link\" data-bind=\"disabled:disablePrevious, events:{click: previousClick}\"><i class=\"fa fa-chevron-left\"></i></button>\\r\\n                    <span data-bind=\"html: pageText\"></span>\\r\\n                    <button class=\"btn-link\" data-bind=\"disabled:disableNext, events:{click: nextClick}\"><i class=\"fa fa-chevron-right\"></i></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <!-- Support group -->\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"form-control-picker ra-input\"\\r\\n                 data-url=\"/api/V3/Enum/GetList\"\\r\\n                 data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                 data-bind=\"ciresonDropDownTree: SupportGroupEnumId, value: SupportGroupFieldValue, visible: SupportGroupVisible, click: onChangeSupportGroup\"\\r\\n                 data-role=\"SupportGroupField\"\\r\\n                 data-placeholder=\"SupportGroup\"></div>\\r\\n        </div>\\r\\n        <!--RA buttons-->\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-success\"\\r\\n                        data-bind=\"events: { click: onApproveClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                    <%= localization.Approve %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-danger\"\\r\\n                        data-bind=\"events: { click: onRejectClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                    <%= localization.Reject %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--RA buttons-->\\r\\n\\r\\n        <!--MA buttons-->\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-success\"\\r\\n                        data-bind=\"events: { click: onCompleteClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                    <%= localization.Completed %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-danger\"\\r\\n                        data-bind=\"events: { click: onFailClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                    <%= localization.Failed %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--MA buttons-->\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-6 col-xs-12\">\\r\\n            <h1 class=\"page_title\">\\r\\n                <span data-bind=\"text: title\"></span><span>-</span><span class=\"uppercase\" data-bind=\"text: workItemId\"></span>\\r\\n                <span class=\"label label-info label-heading\" id=\"statusname\" data-bind=\"text: statusName\"></span>\\r\\n                <span class=\"label label-heading\" data-bind=\"visible: isParent\"><img src=\"/Content/Images/Icons/WorkItemsStatus/workitem-parent-icon.svg\"></span>\\r\\n            </h1>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n';});\n\n","/**\r\nRA Approval controls\r\n**/\r\ndefine('forms/header/approval/controller',['require','text!forms/header/approval/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/approval/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n            var rejected = \"107fc6bd-2bb3-0282-4425-f43b5b32ef13\";\r\n            var approve = \"0e856c6c-04e5-0a8e-6041-bc7715b4747e\";\r\n            var notYetVoted = \"dae75d12-89ac-a8d8-4fe3-516c2a6a26f7\";\r\n\r\n\r\n            vm.view.approvalModel = new kendo.observable({\r\n                decisionEnumId: null,\r\n                comments: \"\",\r\n                onRejectClick: function () {\r\n                    vm.view.approvalModel.decisionEnumId = rejected;\r\n                    this.updateStatus();\r\n                },\r\n                onApproveClick: function () {\r\n                    vm.view.approvalModel.decisionEnumId = approve;\r\n\r\n                    this.updateStatus();\r\n                },\r\n                onCompleteClick: function () {\r\n                    var status = { Id: app.constants.workItemStatuses.ManualActivity.Completed, Name: localization.Completed };\r\n                    vm.view.approvalModel.updateManualActivity(status);\r\n                },\r\n                onFailClick: function () {\r\n                    var status = { Id: app.constants.workItemStatuses.ManualActivity.Failed, Name: localization.Failed }\r\n                    vm.view.approvalModel.updateManualActivity(status);\r\n                },\r\n                updateStatus: function () {\r\n                    if (vm.view.approvalModel.isReviewActivity) {\r\n                        vm.view.approvalModel.updateReviewActivity();\r\n                    }\r\n\r\n                    if (vm.view.approvalModel.isManualActivity) {\r\n                        vm.view.approvalModel.updateManualActivity();\r\n                    }\r\n                },\r\n                updateReviewActivity: function () {\r\n                    $.when(kendo.ui.ExtYesNoTextAreaDialog.show({\r\n                        title: localization.Comments,\r\n                        message: localization.DoYouHaveComments,\r\n                        required: true,\r\n                        height: 250\r\n                    })\r\n                  ).done(function (response) {\r\n                      if (response.button === \"yes\") {\r\n                          vm.view.approvalModel.comments = response.input;\r\n                      }\r\n\r\n\r\n                      _.each(pageForm.viewModel.Reviewer, function (reviewItem) {\r\n\r\n                          var group = _.find(pageForm.userGroup, function (group) {\r\n                              return (!_.isUndefined(reviewItem.User)) ? reviewItem.User.BaseId == group.Id : false;\r\n                          });\r\n\r\n                          if (reviewItem.Decision.Id == notYetVoted\r\n                              && ((!_.isUndefined(reviewItem.User) && reviewItem.User.BaseId == session.user.Id)\r\n                              || !_.isUndefined(group))) {\r\n\r\n                              var comment = \"\";\r\n                              if (_.isNull(reviewItem.Comments)) {\r\n                                  comment = vm.view.approvalModel.comments;\r\n                              }\r\n                              else {\r\n                                  comment = reviewItem.Comments + \" \" + vm.view.approvalModel.comments;\r\n                              }\r\n\r\n                              reviewItem.VotedBy = {};\r\n                              reviewItem.VotedBy.BaseId = session.user.Id;\r\n                              reviewItem.Decision.set(\"Id\", vm.view.approvalModel.decisionEnumId);\r\n                              reviewItem.set(\"Comments\", comment);\r\n                              reviewItem.set(\"DecisionDate\", new Date().toISOString());\r\n\r\n                          }\r\n                      });\r\n\r\n                      //exclude parent workitem details\r\n                      if (pageForm.viewModel.ParentWorkItem) delete pageForm.viewModel.ParentWorkItem;\r\n\r\n                      vm.view.approvalModel.save();\r\n                  });\r\n                },\r\n                updateManualActivity: function (status) {\r\n                    $.when(kendo.ui.ExtYesNoTextAreaDialog.show({\r\n                        title: session.consoleSetting.RequireImplementationNotes ? localization.ImplementationdetailsRequired : localization.Implementationdetails,\r\n                        buttons: [\r\n                            {\r\n                                name: localization.Save,\r\n                                click: function (e) {\r\n                                    var $inputText = $(\"#extInputDialog .k-ext-input-dialog-input\");\r\n                                    var comment = $(\"#extInputDialog .k-ext-input-dialog-input\").val();\r\n                                    var currentNotes = !_.isNull(pageForm.viewModel.Notes) ? pageForm.viewModel.Notes : \"\";\r\n\r\n                                    if (e.dialog.options.required && $inputText.val().length == 0) {\r\n                                        $inputText.addClass(e.dialog.options.requiredCss);\r\n                                    } else {\r\n                                        //exclude parent workitem details\r\n                                        if (pageForm.viewModel.ParentWorkItem) delete pageForm.viewModel.ParentWorkItem;\r\n\r\n                                        //set status \r\n                                        pageForm.viewModel.set(\"Status\", status)\r\n\r\n                                        //set notes\r\n                                        pageForm.viewModel.set(\"Notes\", currentNotes + \"\\n\" + comment);\r\n                                        vm.view.approvalModel.save();\r\n                                        e.dialog.close();\r\n                                    }\r\n                                },\r\n                                cls: \"btn-primary\"\r\n                            },\r\n                            {\r\n                                name: localization.Cancel,\r\n                                click: function (e) {\r\n                                    e.dialog.close();\r\n                                }\r\n                        }],\r\n                        required: session.consoleSetting.RequireImplementationNotes,\r\n                        requiredCss: \"k-ext-required\"\r\n                    })\r\n                 );\r\n                },\r\n                save: function () {\r\n                    var postData = encodeURIComponent(JSON.stringify({\r\n                        isDirty: true,\r\n                        current: pageForm.viewModel.toJSON(),\r\n                        original: pageForm.jsonRaw\r\n                    }));\r\n\r\n                    $.ajax({\r\n                        type: 'POST',\r\n                        dataType: 'text',\r\n                        url: pageForm.saveUrl,\r\n                        data: \"formJson=\" + postData,\r\n                        success: function (data, status, xhr) {\r\n                            location.reload();\r\n                            if (data.search('loginForm') < 0) { // Logged out check    \r\n                                var successMessage = vm.view.approvalModel.decisionEnumId == \"0e856c6c-04e5-0a8e-6041-bc7715b4747e\" ?\r\n                                    localization.ReviewActivityApprovedMessage : localization.ReviewActivityRejectedMessage;\r\n                                \r\n                                if (pageForm.viewModel.ClassName == \"System.WorkItem.Activity.ManualActivity\") {\r\n                                    successMessage = (pageForm.viewModel.Status.Id == app.constants.workItemStatuses.ManualActivity.Completed) ?\r\n                                                    localization.ManualActivityCompletedMessage :\r\n                                                    localization.ManualActivityFailedMessage;\r\n                                }\r\n\r\n                                app.lib.message.add(successMessage.replace(\"{0}\", vm.viewModel.Id), \"success\");\r\n                                app.lib.handleMessages();\r\n                            } else {\r\n                                //session expired\r\n                                window.location = \"/Login/Login?ReturnUrl=\" + window.location.pathname;\r\n                            }\r\n                        },\r\n                        error: function (xhr, ajaxOptions, thrownError) {\r\n                            //do we have a data conflict\r\n                            if (xhr.status == 409) {\r\n\r\n                                $.when(kendo.ui.ExtYesNoDialog.show({\r\n                                    title: localization.DataConflict,\r\n                                    message: localization.DataConflictError + \"<br/><br/><small>(\" + localization.DataConflictDescription + \")</small>\",\r\n                                    icon: \"fa fa-exchange text-danger\",\r\n                                    width: \"500px\",\r\n                                    height: \"175px\"\r\n                                })\r\n                                ).done(function (response) {\r\n                                    if (response.button === \"yes\") {\r\n                                        //open in new tab, may not work this way in all browsers\r\n                                        window.open(window.location.pathname);\r\n                                    } else {\r\n                                        //refresh page\r\n                                        location.href = window.location.pathname;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (xhr.status == 503) { //SDK unavailable\r\n                                var jsonRsp = xhr.responseText;\r\n                                app.lib.log(jsonRsp);\r\n                                //determine error Message\r\n                                var errorMsg = localization.ReconnectRequired;\r\n                                if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                    errorMsg = jsonRsp.exception;\r\n                                }\r\n                                //alert the user\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.Failed,\r\n                                    message: errorMsg,\r\n                                    icon: \"fa fa-times-circle text-danger\"\r\n                                });\r\n                            } else if (xhr.status == 403) { //user does not have access\r\n                                var jsonRsp = xhr.responseText;\r\n                                app.lib.log(jsonRsp);\r\n                                //determine error Message\r\n                                var errorMsg = localization.RequestFailed;\r\n                                if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                    errorMsg = jsonRsp.exception;\r\n                                }\r\n                                //alert the user\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.Failed,\r\n                                    message: errorMsg,\r\n                                    icon: \"fa fa-times-circle text-danger\"\r\n                                });\r\n\r\n                            } else {\r\n                                console && app.lib.log(localization.RequestFailed);\r\n                                app.lib.log(thrownError);\r\n\r\n                                var jsonRsp = xhr.responseText;\r\n                                app.lib.log(jsonRsp);\r\n\r\n                                var errorMsg = localization.RequestFailed;\r\n                                if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                    errorMsg = jsonRsp.exception;\r\n                                }\r\n\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.ErrorDescription,\r\n                                    message: errorMsg,\r\n                                    icon: \"fa fa-exclamation\"\r\n                                });\r\n                            }\r\n                        },\r\n                        processData: false,\r\n                        async: false\r\n                    });\r\n                },\r\n                pageDataSource: new kendo.data.DataSource({\r\n                    serverFiltering: true,\r\n                    serverSorting: true,\r\n                    transport: {\r\n                        read: {\r\n                            url: pageForm.viewModel.ClassTypeId.toLowerCase() == \"bfd90aaa-80dd-0fbb-6eaf-65d92c1d8e36\" ? \"/api/V3/WorkItem/GetGridWorkItemsMyApprovals/\" : \"/api/V3/WorkItem/GetGridWorkItemsMyManualActivities/\",\r\n                            data: {\r\n                                userId: session.user.Id,\r\n                                isScoped: session.user.Security.IsWorkItemScoped,\r\n                                showInActives: false\r\n                            },\r\n                            cache: false\r\n                        }\r\n                    },\r\n                    requestEnd: function (e) {\r\n                        vm.view.approvalModel.updatePageDetails(e.response);\r\n                    }\r\n                }),\r\n                updatePageDetails: function (data) {\r\n                    var index = 1;\r\n                    var pageCount = (data) ? data.length : 0;\r\n\r\n                    _.find(data, function (item, idx) {\r\n                        if (item.Id == vm.viewModel.Id) {\r\n                            index = idx;\r\n                        }\r\n                    });\r\n\r\n                    var pageString = (index + 1) + \" / \" + pageCount;\r\n\r\n                    vm.view.approvalModel.set(\"currentPage\", index);\r\n                    vm.view.approvalModel.set(\"toatPage\", pageCount);\r\n                    vm.view.approvalModel.set(\"pageText\", pageString);\r\n                    vm.view.approvalModel.set(\"disablePrevious\", (index == 0) ? true : false);\r\n                    vm.view.approvalModel.set(\"disableNext\", (index == pageCount - 1) ? true : false);\r\n\r\n                    var statusInProgress = vm.viewModel.Status.Id === \"11fc3cef-15e5-bca4-dee0-9c1155ec8d83\";\r\n\r\n                    if (!statusInProgress || (!_.isUndefined(vm.viewModel.reviewDetails) && (vm.viewModel.reviewDetails.fullDetails.Decision.Id == approve || vm.viewModel.reviewDetails.fullDetails.Decision.Id == rejected) && (vm.viewModel.reviewDetails.fullDetails.User.BaseId == session.user.Id))) {\r\n                        vm.view.approvalModel.set(\"disabledButtons\", true);\r\n                    }\r\n                    else {\r\n                        var review = _.find(pageForm.viewModel.Reviewer, function (reviewItem) {\r\n                            if (_.isUndefined(reviewItem.User)) {\r\n                                return null;\r\n                            }\r\n                            var group = _.find(pageForm.userGroup, function (group) {\r\n                                return reviewItem.User.BaseId == group.Id;\r\n                            });\r\n\r\n                            return !_.isUndefined(reviewItem.User) && reviewItem.Decision.Id == notYetVoted && (reviewItem.User.BaseId == session.user.Id || !_.isUndefined(group));\r\n                        });\r\n\r\n                        if (!review) return;\r\n\r\n                        if (!statusInProgress || (_.isUndefined(review) || _.isNull(review))) {\r\n                            vm.view.approvalModel.set(\"disabledButtons\", true);\r\n                        }\r\n                    }\r\n                },\r\n                nextClick: function () {\r\n                    var index = vm.view.approvalModel.get(\"currentPage\") + 1;\r\n                    vm.view.approvalModel.navigate(index);\r\n                },\r\n                previousClick: function () {\r\n                    var index = vm.view.approvalModel.get(\"currentPage\") - 1;\r\n                    vm.view.approvalModel.navigate(index);\r\n                },\r\n                navigate: function (index) {\r\n                    vm.view.approvalModel.pageDataSource.read();\r\n                    var dSource = vm.view.approvalModel.pageDataSource.data();\r\n\r\n                    var nextItem = dSource[index];\r\n                    var url = vm.view.approvalModel.isReviewActivity ? \"/ReviewActivity/Approval/\" : \"/ManualActivity/Complete/\";\r\n                    var approvalUrl = url + nextItem.Id;\r\n\r\n                    location.href = approvalUrl;\r\n                },\r\n                onChangeSupportGroup: function() {\r\n                    vm.viewModel[pageForm.MASupportGroupField] = vm.view.approvalModel.SupportGroupFieldValue;\r\n                },\r\n                currentPage: 0,\r\n                toatPage: 0,\r\n                pageText: \"\",\r\n                disablePrevious: false,\r\n                disableNext: false,\r\n                title: vm.view.title,\r\n                workItemId: vm.viewModel.Id,\r\n                statusVisible: vm.view.statusVisible,\r\n                statusName: vm.viewModel.Status.Name,\r\n                isParent: vm.viewModel.IsParent,\r\n                isDesktopView: !app.isMobile(),\r\n                isMobileView: app.isMobile(),\r\n                disabledButtons: false,\r\n                reviewResult: null,\r\n                reviewId: 0,\r\n                SupportGroupVisible: pageForm.MASupportGroupField !== \"\",\r\n                SupportGroupEnumId: pageForm.MASupportGroupGuid,\r\n                SupportGroupFieldValue: vm.viewModel[pageForm.MASupportGroupField],\r\n                isManualActivity: pageForm.viewModel.ClassName == \"System.WorkItem.Activity.ManualActivity\",\r\n                isReviewActivity: pageForm.viewModel.ClassName == \"System.WorkItem.Activity.ReviewActivity\",\r\n                disabledMAButtons: pageForm.viewModel.Status.Id == app.constants.workItemStatuses.ManualActivity.Completed ||\r\n                    pageForm.viewModel.Status.Id == app.constants.workItemStatuses.ManualActivity.Failed\r\n                \r\n            });\r\n\r\n            vm.view.approvalModel.pageDataSource.read();\r\n            var view = new kendo.View(built(), { wrap: false, model: vm.view.approvalModel });\r\n\r\n            callback(view.render());\r\n\r\n\r\n        }\r\n    }\r\n    \r\n    return definition;\r\n\r\n});\n","define('forms/headerBuilder',[\r\n    \"forms/header/sticky/controller\",\r\n    \"forms/header/status/controller\",\r\n    \"forms/header/relationships/controller\",\r\n    \"forms/header/slo/controller\",\r\n    \"forms/header/spacer/controller\",\r\n    \"forms/header/title/controller\",\r\n    \"forms/header/approval/controller\"\r\n\r\n], function (\r\n    sticky,\r\n    status,\r\n    relationships,\r\n    slo,\r\n    spacer,\r\n    title,\r\n    approval\r\n        ) {\r\n\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            //loop all rows in header definition\r\n            _.each(vm.headerTemplate.rows, function (row) {\r\n                //create row dom element\r\n                var rowElm = $('<div/>').addClass(\"row\");\r\n                //loop all cols in def\r\n                _.each(row.columns, function (column) {\r\n                    //create col element\r\n                    var colElm = $('<div/>').addClass(column.Class);\r\n\r\n                    // Decide on Template\r\n                    eval(\"var _obj = \" + column.View + \";\");\r\n                    // Check if Template Exists\r\n                    if (!_obj) {\r\n                        //TODO: should we maybe just default to the string object?\r\n                        throw Exception(column.View + \" is not part of the templating system\");\r\n                        return false;\r\n                    }\r\n\r\n                    _obj.build(vm, column, function (view) {\r\n                        //callback(view);\r\n                        colElm.append(view);\r\n                        colElm.appendTo(rowElm);\r\n                    });\r\n\r\n\r\n                });\r\n\r\n                callback(rowElm);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/structure/formPanel/view.html',[],function () { return '<div class=\"form-panel\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nForm Panel\r\n**/\r\ndefine('forms/structure/formPanel/controller',['require','text!forms/structure/formPanel/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/formPanel/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/formPanelFull/view.html',[],function () { return '<div class=\"form-panel\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nForm Panel\r\n**/\r\ndefine('forms/structure/formPanelFull/controller',['require','text!forms/structure/formPanelFull/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/formPanelFull/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/customFieldGroup/view.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"panel panel-default no-shadow\">\\r\\n        <div class=\"panel-heading\"><%= name %></div>\\r\\n        <div class=\"panel-body append-here\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nCustom Field Group\r\n**/\r\ndefine('forms/structure/customFieldGroup/controller',['require','text!forms/structure/customFieldGroup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/customFieldGroup/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            if (!_.isUndefined(node.Visible) && !node.Visible) {\r\n                return;\r\n            }\r\n\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/customFieldGroupRow/view.html',[],function () { return '<div class=\"row\"></div>';});\n\n","/**\r\ncustomFieldGroupRow\r\n**/\r\ndefine('forms/structure/customFieldGroupRow/controller',['require','text!forms/structure/customFieldGroupRow/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/customFieldGroupRow/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            callback(tpl);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/columnField/view.html',[],function () { return '<div class=\"col-md-<%= ColSize %>\"></div>';});\n\n","/**\r\ncolumnField\r\n**/\r\ndefine('forms/structure/columnField/controller',['require','text!forms/structure/columnField/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/columnField/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/tab/view.html',[],function () { return '<div class=\"tab-content\"></div>';});\n\n","/**\r\nTab List\r\n**/\r\ndefine('forms/structure/tab/controller',['require','text!forms/structure/tab/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/tab/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/tabPane/view.html',[],function () { return '<div class=\"tab-pane <%= active %>\" id=\"<%= tabId %>\"></div>   ';});\n\n","/**\r\nTab pane\r\n**/\r\ndefine('forms/structure/tabPane/controller',['require','text!forms/structure/tabPane/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/tabPane/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/structure/tabNavigation/view.html',[],function () { return '<ul class=\"nav nav-pills\" id=\"myTab\" data-bind=\"tabDrop:true\"></ul>';});\n\n","\ndefine('text!forms/structure/tabNavigation/mobile.html',[],function () { return '<div class=\"nav-dropdown\">\\r\\n    <span class=\"nav-dropdown-default\"></span>\\r\\n    <div class=\"nav-dropdown-trigger\">\\r\\n        <i class=\"fa fa-sort-desc\"></i>\\r\\n    </div>\\r\\n    <div class=\"nav-dropdown-content\">\\r\\n        <ul id=\"myTab\" data-bind=\"navDrop:true\"></ul>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nTab navigation\r\n**/\r\ndefine('forms/structure/tabNavigation/controller',['require','text!forms/structure/tabNavigation/view.html','text!forms/structure/tabNavigation/mobile.html'],function (require) {\r\n    var dtpl = require(\"text!forms/structure/tabNavigation/view.html\");\r\n    var mtpl = require(\"text!forms/structure/tabNavigation/mobile.html\");\r\n    \r\n    var tpl = (app.isMobile()) ? mtpl : dtpl;\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/structure/tabData/view.html',[],function () { return '<li class=\"<%= active %>\"><a href=\"#<%= tabId %>\" data-toggle=\"tab\" data-cid=\"<%= cid %>\"><%= name %></a></li>';});\n\n","\ndefine('text!forms/structure/tabData/mobile.html',[],function () { return '<li value=\"<%= tabId %>\" data-cid=\"<%= cid %>\" data-toggle=\"tab\"\\r\\n      <% if ( active ){ %>\\r\\n         class=\"selected\" \\r\\n       <% } %>\\r\\n         > <%= name %>\\r\\n</li>\\r\\n\\r\\n';});\n\n","/**\r\nTab data\r\n**/\r\ndefine('forms/structure/tabData/controller',['require','text!forms/structure/tabData/view.html','text!forms/structure/tabData/mobile.html'],function (require) {\r\n    var dtpl = require(\"text!forms/structure/tabData/view.html\");\r\n    var mtpl = require(\"text!forms/structure/tabData/mobile.html\");\r\n  \r\n    var tpl = (app.isMobile()) ? mtpl : dtpl;\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            node.cid = node.name;\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/predefined/actionLog/view.html',[],function () { return '<div data-control=\"actionLog\">\\r\\n    <div class=\"row\" data-bind=\"visible:isDesktop\">\\r\\n        <div class=\"col-md-12\">\\r\\n            <div class=\"form-group\">\\r\\n                <label for=\"commentBoxEditor\" data-localize=\"Comment\"></label>\\r\\n                <textarea id=\"commentBoxEditor\" class=\"k-textbox form-control input-sm action-log-textarea\" data-bind=\"value: commentBoxHTML\"\\r\\n                <% if ( Disabled ){ %>\\r\\n                disabled\\r\\n                <% } %>>\\r\\n                    </textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-12\">\\r\\n            <div class=\"pull-left\">\\r\\n                <span data-bind=\"text: charactersRemaining\"></span>\\r\\n                <span data-localize=\"CharactersRemaining\"> </span>\\r\\n            </div>\\r\\n            <div class=\"pull-right\">\\r\\n                <button type=\"button\" data-bind=\"click: addComment, enabled: addEnabled\" class=\"k-button btn btn-primary action-log-add-button\" data-localize=\"Add\"></button>\\r\\n            </div>\\r\\n            <div data-bind=\"visible: isAnalyst\" class=\"pull-right checkbox action-log-private\">\\r\\n                <input type=\"checkbox\" data-bind=\"checked: isPrivate\" id=\"actionLogisPrivate\" \\r\\n                       <% if (Disabled) { %>\\r\\n                        disabled\\r\\n                    <% } %>>\\r\\n                </input>\\r\\n\\r\\n                <label class=\"label-middle-align checkbox-inline checkbox-label\" data-localize=\"IsPrivate\" for=\"actionLogisPrivate\" />\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\"row\" data-bind=\"visible:isMobile\">\\r\\n        <div class=\"action-log-mobile\">\\r\\n            <textarea id=\"commentBoxEditorMobile\" class=\"k-textbox form-control input-sm action-log-textarea\" data-bind=\"value: commentBoxHTML\"\\r\\n            <% if (Disabled) { %>disabled<% } %>></textarea>\\r\\n            <div class=\"action-log-mobile-buttons\">\\r\\n                <button type=\"button\" data-bind=\"click: addComment\" data-localize=\"Add Comment\" class=\"col-xs-7 btn btn-primary\"></button>\\r\\n                <div data-bind=\"visible: isAnalyst\" class=\"pull-left checkbox checkbox-inline action-log-mobile-private\">\\r\\n                    <input type=\"checkbox\" data-bind=\"checked: isPrivate\" id=\"actionLogisPrivate\"><% if (Disabled) { %>\\r\\n                    disabled\\r\\n                    <% } %>></input>\\r\\n                    <label class=\"label-middle-align control-label\" data-localize=\"IsPrivate\" for=\"actionLogisPrivate\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n\\r\\n        <div class=\"col-md-12\" data-bind=\"visible:isDesktop\">\\r\\n\\r\\n            <div data-control-grid=\"actionLogGrid\" class=\"inline-spacing\"></div>\\r\\n\\r\\n            <!-- kendo details template used by action grid -->\\r\\n            <script data-id=\"commentDetailTemplate\" type=\"text/kendo-tmpl\">\\r\\n                <p name=\"CommentBoxDetail\" class=\"action-log-comment\">#=DescriptionDisplay#</p>\\r\\n            </script>\\r\\n        </div>\\r\\n        <div data-bind=\"visible:isMobile\">\\r\\n            <div data-role=\"listview\" data-bind=\"source: actionLogSource\" data-template=\"action-log-grid-mobile-template\" class=\"action-log-mobile-grid \"></div>\\r\\n            <script type=\"text/x-kendo-template\" id=\"action-log-grid-mobile-template\">\\r\\n                <div class=\"col-md-12 action-log-info\">\\r\\n                    <div class=\"row\">\\r\\n                        <div class=\"col-xs-2 action-log-icon\">\\r\\n                            <img src=\"#:data.Image#\" alt=\"#:data.Image#\" />\\r\\n                        </div>\\r\\n                        <div class=\"col-xs-10 action-log-details\">\\r\\n                            <p>\\r\\n                                #: EnteredBy # &middot; #: (EnteredDate) ? kendo.toString(new Date(EnteredDate), \\'d\\'):\\'\\' #\\r\\n                            </p>\\r\\n                            <p> #: Title #</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"row\">\\r\\n                        <div class=\"col-xs-offset-2 col-xs-10 action-log-content\">\\r\\n                            #: Description #\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </script>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nactionLog\r\n**/\r\n\r\ndefine('forms/predefined/actionLog/controller',['require','text!forms/predefined/actionLog/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/actionLog/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var view = built(properties);\r\n\r\n            callback(view);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/fileAttachments/view.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"col-md-12 fileAttachmentGrid\" data-control=\"fileAttachmentGrid\" data-control-bind=\"FileAttachment\"\\r\\n\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nfileAttachments\r\n**/\r\n\r\ndefine('forms/predefined/fileAttachments/controller',['require','text!forms/predefined/fileAttachments/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/fileAttachments/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/affectedItems/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">#: DisplayName #</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <p>#: (typeof AssetStatus!=\"undefined\") ? !_.isUndefined(AssetStatus.Name)?AssetStatus.Name:\"\" : \"\" #</p>\\r\\n                <p># if ((typeof AssetStatus!=\"undefined\") && !_.isUndefined(AssetStatus.Name)) { # &middot # } # </p>\\r\\n                <p>#: (Path!=null ) ? Path : \"\" # </p>\\r\\n                <p># if (Path!=null && Path!=\"\") { # &middot # } # </p>\\r\\n\\r\\n            </div>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <a class=\"k-delete-button\">#: localization.Remove #</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 affecteditems-grid\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\"><%= localization.Configurationitem %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-min-length=\"3\"\\r\\n                               data-bind=\"value: view.affectedItemController.selectedConfigItem, source: view.affectedItemController.configItemDataSource, events:{change:view.affectedItemController.onConfigItemChange }\"\\r\\n                               data-cid=\"ci-searchbox\" />\\r\\n                        <span class=\"search\"\\r\\n                              data-bind=\"events:{click: view.affectedItemController.searchConfigItem}\"\\r\\n                              data-cid=\"affecteditemssearchicon\">\\r\\n                            <i class=\"fa fa-search\"></i>\\r\\n                        </span>\\r\\n                        <button data-role=\"button\" class=\"search-button two-action-input-group__primary-action\"\\r\\n                                data-bind=\"events:{click: view.affectedItemController.addConfigItem}\"\\r\\n                                data-cid=\"affectedItemsSearchBoxAddButton\">\\r\\n                            <%= localization.Add %>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group affected-user-item-search\" data-bind=\"visible: view.affectedItemController.isUserCIVisible\">\\r\\n                    <label class=\"control-label\"><%= localization.AffectedUserItems %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-bind=\"value: view.affectedItemController.selectedUserConfigItem, source: view.affectedItemController.userConfigItemDataSource, events:{change:view.affectedItemController.onUserConfigItemChange }\"\\r\\n                               data-cid=\"auitems-searchbox\" />\\r\\n                        <button class=\"two-action-input-group__primary-action\" data-role=\"button\"\\r\\n                                data-bind=\"events:{click: view.affectedItemController.addUserConfigItem}\"\\r\\n                                data-cid=\"affectedItemsComboBoxAddButton\">\\r\\n                            <%= localization.Add %>\\r\\n\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div data-role=\"grid\"\\r\\n             data-bind=\"visible: view.affectedItemController.isDesktopView, source: view.affectedItemController.dataSource, events:{dataBinding: view.affectedItemController.onDataBinding}\"\\r\\n             data-selectable=\"false\"\\r\\n             data-sortable=\"true\"\\r\\n             data-filterable=\"true\"\\r\\n             data-scrollable=\"false\"\\r\\n             data-column-menu=\"true\"\\r\\n             data-pageable=\"false\"\\r\\n             data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n             data-columns=\\'[\\r\\n                    { title: \"\", width: \"1%\", template: \"\\\\u003cdiv data-base-id=\\\\\"#=BaseId#\\\\\" class=\\\\\"aci-context-menu open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.affectedItemController.isSlideOut\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\\\\u003cdiv class=\\\\\"open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.affectedItemController.isMoreInfo, events:{click:view.affectedItemController.showMoreInfo }\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"/\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\"},\\r\\n                    { field: \"DisplayName\", title: localization.DisplayName, width: \"50%\"},\\r\\n                    { field: \"BaseId\", title: localization.BaseId, width: \"25%\", hidden: true },\\r\\n                    { field: \"Path\", title: localization.Path, width: \"25%\" },\\r\\n                    { field: \"AssetStatus.Name\", title: localization.Status, width: \"25%\" },\\r\\n                    { title: localization.Actions, width: \"15%\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove, className:\"custom__grid-remove\" }] }\\r\\n                ]\\'>\\r\\n        </div>\\r\\n        <div data-bind=\"visible: view.affectedItemController.isMobileView\">\\r\\n            <div data-bind=\"mobileGrid: HasRelatedWorkItems\" data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\"></div>\\r\\n        </div>\\r\\n        <!--context menu for info icon-->\\r\\n        <ul id=\"tccmenu\" data-role=\"contextmenu\"\\r\\n            data-filter=\".aci-context-menu\"\\r\\n            data-show-on=\"click\"\\r\\n            data-bind=\"events:{select:view.affectedItemController.onContextmenuSelect, activate:view.affectedItemController.onContextmenuActivate}\">\\r\\n        </ul>\\r\\n   </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/popups/multipleObjectPickerPopup/view.html',[],function () { return '<div id=\"MultiObjectPickerWindow\" class=\"cireson-window defined-form task-window\" data-cid=\"MultiObjectPickerWindow\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-5\">\\r\\n                    <div class=\"form-group\">\\r\\n                        <label><%= localization.SearchText %></label>\\r\\n                        <span class=\"k-textbox k-space-right object-picker-search\">\\r\\n                            <input type=\"text\" data-objectpicker-action=\"search\" data-objectpicker-action-value=\"search\" value=\"\" data-cid=\"MultiObjectPickerWindowSearchBox\" />\\r\\n                            <span data-objectpicker-action=\"search\" class=\"fa fa-search text-primary cursor-pointer\"></span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"col-md-5\">\\r\\n                    <div class=\"form-group\">\\r\\n                        <label><%= localization.SearchObjectText %></label>\\r\\n                        <input type=\"text\" data-objectpicker-control=\"comboBox\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <label><%= localization.SelectObjects %></label>\\r\\n\\r\\n            <div class=\"objectPicker-container\">\\r\\n                <div class=\"k-widget k-grid k-secondary\" data-objectpicker-control=\"objectPickerGrid\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"objectPicker-actions\">\\r\\n                <button data-objectpicker-action=\"addObject\" class=\"btn btn-primary k-button\" data-cid=\"multiobject-picker-add-object-btn\"><%= localization.Add %></button>\\r\\n                <button data-objectpicker-action=\"removeObject\" class=\"btn btn-danger k-button\" data-cid=\"multiobject-picker-remove-object-btn\"><%= localization.Remove %></button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"k-widget k-grid k-secondary objectPicker-grid2-container\" data-objectpicker-control=\"objectPickerGrid2\"></div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\"\\r\\n                    data-cid=\"multiobject-picker-ok-btn\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\"\\r\\n                    data-cid=\"multiobject-picker-cancel-btn\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nmultipleObjectPickerPopup\r\n**/\r\n\r\ndefine('forms/popups/multipleObjectPickerPopup/controller',['require','text!forms/popups/multipleObjectPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/multipleObjectPickerPopup/view.html\");\r\n    var singletonName = \"objectPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (classId, columnNames, gridUrl, dataSourceFilter, isConfigItem) {\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built());\r\n            //var classId = classId;\r\n            //var columnNames = columnNames;\r\n            //var gridUrl = gridUrl;\r\n            // keep popup window as singleton\r\n            // check to see if dom element exists, if so get userPickerPopup object from it\r\n            var ele = $('[datasingleton=\"' + singletonName + '\"]');\r\n            var objectPickerPopup = ele.data(singletonName);\r\n            if (!ele.length) {\r\n                ele = templateFrag;\r\n                $(\"body\").append(ele);\r\n                objectPickerPopup = new ObjectPickerPopup(ele, classId, columnNames, gridUrl, dataSourceFilter, isConfigItem);\r\n                ele.data(singletonName, objectPickerPopup);\r\n            }\r\n            return objectPickerPopup;\r\n\r\n        }\r\n    }\r\n\r\n    /* -- ObjectPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            open = function(classId){ // opens popup with this classId }\r\n            close = function(){ // closes popup }\r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback(obj){  } returns selected user object\r\n    */\r\n    \r\n    // CONTROL\r\n    var ObjectPickerPopup = function (targetEle, classId, columnNames, gridUrl, dataSourceFilter, isConfigItem) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var classId = classId;\r\n        var columnNames = columnNames;\r\n        var controllerUrl = gridUrl;\r\n        var filter = dataSourceFilter;\r\n        var isConfigItem = isConfigItem;\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"DisplayName\";\r\n        var _idProp = \"Id\";\r\n       // var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, objects) { callback(objects); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, objects) { callback(objects); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                save: onSaveClick,\r\n                cancel: onCancelClick\r\n            });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n\r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSaveClick = function () {\r\n            var selectedRows = popup.grid2.dataSource.data();\r\n            if (selectedRows) {\r\n                $.each(selectedRows, function (i, itm) {\r\n                    if (_.isUndefined(itm.BaseId)) { itm.BaseId = itm.Id;}\r\n                    $(self).trigger(\"save\", itm);\r\n                });\r\n                closePopup();\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n\r\n        var openPopup = function () {\r\n            popup.actions.clearSearchText();\r\n            popup.gridFunctions.clear();\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup();\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function () {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            var gridUrl = (!_.isUndefined(controllerUrl) && !_.isNull(controllerUrl)) ? controllerUrl : \"/Search/GetSearchObjectsWithEnumObjectByClassId\";\r\n            var comboUrl = \"/Search/GetSearchClasses\";\r\n            var combo;\r\n            var grid;\r\n            var grid2;\r\n            var searchText;\r\n            var gridFunctions;\r\n            var actions;\r\n            var outObjs = new kendo.data.ObservableArray([]);\r\n            // CONSTRUCT\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                createCombo();\r\n                createGrid();\r\n                createGrid2();\r\n                bindEvents();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            // ACTIONS\r\n           \r\n\r\n            var callback = function () { }\r\n\r\n            var actions = new (function () {\r\n                this.addObject = function () {\r\n                    var selected = grid.select();\r\n                    for (var i = 0, max = selected.length; i < max; i++) {\r\n                        var item = grid.dataItem(selected[i]);\r\n                        if (item) grid2Funcs.addItem(item);\r\n                    }\r\n\r\n                    //var item = grid.dataItem(grid.select());\r\n                    //if (item) grid2Funcs.addItem(item);\r\n                }\r\n                this.removeObject = function () {\r\n                    //grid2.removeRow(grid2.select());\r\n                    var selected = grid2.select();\r\n                    for (var i = 0, max = selected.length; i < max; i++) {\r\n                        grid2.removeRow(selected[i]);\r\n                    }\r\n                }\r\n                this.search = function () {\r\n                    var ele = html.find('[data-objectpicker-action-value=\"search\"]');\r\n                    searchText = (ele) ? ele.val() : \"\";\r\n                    grid.dataSource.read();\r\n\r\n                    //used on RelatesToWorkItem relatinship, exclude current workitem from list\r\n                    if (!_.isUndefined(filter) && !_.isNull(filter)) {\r\n                        grid.dataSource.filter(filter);\r\n                    }\r\n                    grid.dataSource.page(1);\r\n                }\r\n                this.clearSearchText = function () {\r\n                    html.find('[data-objectpicker-action-value=\"search\"]').val('');\r\n                    searchText = \"\";\r\n                }\r\n            })();\r\n            self.actions = actions;\r\n\r\n            var gridFuncs = new (function () {\r\n                this.searchFilter = function () {\r\n                    return { searchFilter: searchText, classId: comboFuncs.getIdValue, columnNames: columnNames };\r\n                }\r\n                this.onChange = function () {\r\n\r\n                }\r\n                this.onDataBound = function () {\r\n                    if (grid.dataSource.totalPages() == 1) {\r\n                        grid.pager.element.hide();\r\n                    }\r\n                }\r\n                this.clear = function () {\r\n                    self.grid.dataSource.data([]);\r\n                    while (outObjs.length != 0) {\r\n                        $.each(self.grid2.items(), function (ii, iitem) {\r\n                            self.grid2.removeRow(iitem)\r\n                        });\r\n                    }\r\n                }\r\n                this.dblClick = function () {\r\n                    // $(this) add to grid 2\r\n                    grid2Funcs.addItem(grid.dataItem($(this)));\r\n                }\r\n                \r\n            })();\r\n            self.gridFunctions = gridFuncs;\r\n\r\n            var grid2Funcs = new (function () {\r\n                this.addItem = function (item) {\r\n                    var a = true;\r\n                    $.each(outObjs, function (i, itm) {\r\n                        if (item.uid == itm.uid) {\r\n                            a = false;\r\n                        }\r\n                    })\r\n                    if (a) outObjs.push(item);\r\n                }\r\n            })();\r\n\r\n            var comboFuncs = new (function () {\r\n                this.getIdValue = function () {\r\n                    var item1 = self.combo.value();\r\n                    return !_.isNull(item1) ? item1 : classId.toLowerCase();\r\n                }\r\n            })();\r\n\r\n            // METHODS\r\n            var createKendoWindow = function () {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: localization.SelectObject,\r\n                    content: null,\r\n                    width: 750,\r\n                    height: 710,\r\n                    actions: [\"Close\"],\r\n                    activate: function () {\r\n                        self.combo.value(classId.toLowerCase());\r\n                    }\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n\r\n            //combo\r\n            var createCombo = function () {\r\n                self.combo = html.find(\"[data-objectpicker-control='comboBox']\").kendoComboBox({\r\n                    \"dataSource\": {\r\n                        \"transport\": {\r\n                            \"prefix\": \"\",\r\n                            \"read\": {\r\n                                \"url\": comboUrl,\r\n                                \"data\": { classId: classId }\r\n                            }\r\n                        },\r\n                        \"schema\": {\r\n                            \"errors\": \"Errors\"\r\n                        }\r\n                    },\r\n                    \"dataTextField\": \"Item2\",\r\n                    \"autoBind\": true,\r\n                    \"dataValueField\": \"Item1\",\r\n                    \"filter\": \"contains\"\r\n                }).data(\"kendoComboBox\");\r\n            }\r\n\r\n            //first grid\r\n            var createGrid = function () {\r\n                var gc = html.find('[data-objectpicker-control=\"objectPickerGrid\"]');\r\n                var gridSettings = function () {\r\n                    var dataSource = {\r\n                        \"transport\": {\r\n                            \"prefix\": \"\",\r\n                            \"read\": {\r\n                                \"url\": gridUrl,\r\n                                \"data\": gridFuncs.searchFilter,\r\n                                \"type\": \"GET\",\r\n                                \"cache\": false\r\n                            }\r\n                        },\r\n                        \"pageSize\": 5,\r\n                        \"type\": \"aspnetmvc-ajax\",\r\n                        \"schema\": {\r\n                            \"data\": \"Data\",\r\n                            \"total\": \"Total\",\r\n                            \"errors\": \"Errors\",\r\n                        }\r\n                    }\r\n                    var columns = [\r\n                        {\r\n                            \"title\": \"Id\",\r\n                            \"hidden\": true,\r\n                            \"field\": \"Id\",\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.DisplayName,\r\n                            \"attributes\": {\r\n                                \"class\": \"grid-highlight-column\"\r\n                            },\r\n                            \"field\": \"DisplayName\",\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Class,\r\n                            \"field\": \"FullClassName\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Path,\r\n                            \"field\": \"Path\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }\r\n                    ];\r\n                    var userClassId = \"10a7f898-e672-ccf3-8881-360bfb6a8f9a\";\r\n                    var userColumns = [\r\n                       {\r\n                           \"title\": localization.FirstName,\r\n                           \"attributes\": {\r\n                               \"class\": \"grid-highlight-column\"\r\n                           },\r\n                           \"field\": \"FirstName\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }, {\r\n                           \"title\": localization.LastName,\r\n                           \"attributes\": {\r\n                               \"class\": \"grid-highlight-column\"\r\n                           },\r\n                           \"field\": \"LastName\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }, {\r\n                           \"title\": localization.Title,\r\n                           \"field\": \"Title\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }, {\r\n                           \"title\": localization.UserName,\r\n                           \"field\": \"UserName\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       },{\r\n                           \"title\": localization.Domain,\r\n                           \"field\": \"Domain\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       },{\r\n                           \"title\": localization.Company,\r\n                           \"field\": \"Company\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }\r\n                    ];\r\n                    return {\r\n                        \"columns\": (classId.toLowerCase() == userClassId) ? userColumns : columns,\r\n                        \"sortable\": {\r\n                            \"mode\": \"multiple\"\r\n                        },\r\n                        \"selectable\": \"Multiple, Row\",\r\n                        \"filterable\": {\r\n                            \"operators\": {\r\n                                \"string\": {\r\n                                    \"startswith\": localization.Startswith,\r\n                                    \"contains\": localization.Contains,\r\n                                    \"eq\": localization.Isequalto,\r\n                                    \"neq\": localization.Isnotequalto\r\n                                }\r\n                            }\r\n                        },\r\n                        \"columnMenu\": false,\r\n                        \"autoBind\": false,\r\n                        \"dataSource\": dataSource,\r\n                        \"pageable\": true\r\n                    }\r\n                }\r\n                grid = gc.kendoGrid(gridSettings()).data(\"kendoGrid\");\r\n                gridFuncs.onDataBound();\r\n                gc.on(\"dblclick\", \"tbody>tr\", gridFuncs.dblClick);\r\n                self.grid = grid;\r\n            }\r\n\r\n            //second grid\r\n            var createGrid2 = function () {\r\n                var gc = html.find('[data-objectpicker-control=\"objectPickerGrid2\"]');\r\n                var dataSource = {\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": \"\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": 5,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    data: {\r\n                        Data: outObjs,\r\n                        Total: outObjs.length\r\n                    },\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                    }\r\n                }\r\n                var columns = [\r\n                        {\r\n                            \"title\": \"Id\",\r\n                            \"hidden\": true,\r\n                            \"field\": \"Id\",\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.DisplayName,\r\n                            \"attributes\": {\r\n                                \"class\": \"grid-highlight-column\"\r\n                            },\r\n                            \"field\": \"DisplayName\",\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Class,\r\n                            \"field\": \"FullClassName\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Path,\r\n                            \"field\": \"Path\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }\r\n                ];\r\n                var userClassId = \"10a7f898-e672-ccf3-8881-360bfb6a8f9a\";\r\n                var userColumns = [\r\n                   {\r\n                       \"title\": localization.FirstName,\r\n                       \"attributes\": {\r\n                           \"class\": \"grid-highlight-column\"\r\n                       },\r\n                       \"field\": \"FirstName\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.LastName,\r\n                       \"attributes\": {\r\n                           \"class\": \"grid-highlight-column\"\r\n                       },\r\n                       \"field\": \"LastName\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.Title,\r\n                       \"field\": \"Title\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.UserName,\r\n                       \"field\": \"UserName\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.Domain,\r\n                       \"field\": \"Domain\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.Company,\r\n                       \"field\": \"Company\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }\r\n                ];\r\n                grid2 = gc.kendoGrid({\r\n                    \"columns\": (classId.toLowerCase() == userClassId) ? userColumns : columns,\r\n                    \"pageable\": true,\r\n                    \"dataSource\": dataSource,\r\n                    \"selectable\": \"Multiple, Row\",\r\n                    \"filterable\": {\r\n                        \"operators\": {\r\n                            \"string\": {\r\n                                \"startswith\": localization.Startswith,\r\n                                \"contains\": localization.contains,\r\n                                \"eq\": localization.Isequalto,\r\n                                \"neq\": localization.Isnotequalto\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    \"columnMenu\": false\r\n                }).data(\"kendoGrid\");\r\n\r\n                self.grid2 = grid2;\r\n            }\r\n\r\n            //bind events\r\n            var bindEvents = function () {\r\n                html.find('[data-objectpicker-action]').each(function (i, ele) {\r\n                    var action = $(this).attr('data-objectpicker-action');\r\n                    var nd = ele.nodeName.toLowerCase();\r\n                    if (!actions[action]) { app.lib.exception(\"The method action.\" + action + \" does not exist\"); }\r\n                    if ((nd == \"input\" && $(this).attr(\"type\").toLowerCase() == \"text\") || nd == \"textarea\") {\r\n                        $(this).bind('enter', actions[action]);\r\n                    } else {\r\n                        $(this).click(actions[action]);\r\n                    }\r\n                });\r\n            }\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        __construct();\r\n\r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","/**\naffectedItems\n**/\n\ndefine('CustomSpace/Scripts/forms/predefined/affectedItems/controller',['require','text!forms/predefined/affectedItems/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\n    var tpl = require(\"text!forms/predefined/affectedItems/view.html\");\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\n\n    var definition = {\n        template: tpl,\n        build: function (vm, node, callback) {\n            var built = _.template(tpl);\n            var properties = {\n                Disabled: !_.isUndefined(node.disabled) ? node.disabled : false\n            };\n\n            $.extend(true, properties, node);\n\n            var view = new kendo.View();\n\n            var cur_table = false;\n\n            //use setters and getters if you want vm boundOdj to trigger change\n            if (_.isUndefined(vm.HasRelatedWorkItems)) {\n                vm.set('HasRelatedWorkItems', new kendo.data.ObservableArray([]));\n            }\n            var boundArray = vm.get('HasRelatedWorkItems');\n\n            vm.view.affectedItemController = new kendo.observable({\n                addConfigItem: function (e) {\n                    if (!_.isUndefined(this.selectedConfigItemId)) { addAffectedItem(this.selectedConfigItemId); }\n                },\n                searchConfigItem: function () {\n                    var popupWindow = objectPickerPopup.getPopup(\"62F0BE9F-ECEA-E73C-F00D-3DD78A7422FC\", \"DisplayName,Path,Status\", null, null, true);\n                    popupWindow.setSaveCallback(function (object) {\n                        addAffectedItem(object.BaseId);\n                    });\n                    popupWindow.open();\n                },\n                selectedConfigItemId: \"\",\n                selectedConfigItem: \"\",\n                configItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: function (data) {\n                                var configItem = (data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                                return \"/api/V3/Config/GetAffectedItemsList?itemFilter=\" + configItem;\n                            },\n                            dataType: \"json\"\n                        }\n                    }\n                }),\n                onConfigItemChange: function (e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedConfigItemId = dataItem.Id;\n                },\n                isUserCIVisible: !_.isUndefined(vm.RequestedWorkItem) ? true : false,\n                selectedUserConfigItemId: \"\",\n                selectedUserConfigItem: \"\",\n                addUserConfigItem: function (e) {\n                    if (!_.isUndefined(this.selectedUserConfigItemId)) { addAffectedItem(this.selectedUserConfigItemId); }\n                },\n                userConfigItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: \"/ConfigItems/GetAffectedUserConfigItemsList\",\n                            data: {\n                                affectedUserId: function () {\n                                    return !_.isUndefined(vm.RequestedWorkItem) && !_.isNull(vm.RequestedWorkItem.BaseId) ? vm.RequestedWorkItem.BaseId : \"\";\n                                }\n                            },\n                            dataType: \"json\",\n                            type: \"GET\"\n                        },\n                        parameterMap: function (data) {\n                            var searchFilter = (data.filter && data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                            return _.extend(data, { searchFilter: searchFilter });\n                        }\n                    }\n                }),\n                onUserConfigItemChange: function (e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedUserConfigItemId = dataItem.Id;\n                },\n                dataSource: new kendo.data.DataSource({\n                    schema: {\n                        data: \"Data\",\n                        total: \"Total\",\n                        errors: \"Errors\",\n                        model: {\n                            id: \"BaseId\",\n                        }\n                    },\n                    data: {\n                        Data: boundArray,\n                        Total: boundArray.length\n                    }\n                }),\n                showMoreInfo: function (e) {\n                    var detailsPopupEle = $(\"<div>\");\n                    detailsPopupEle.appendTo(\"body\");\n\n                    var detailsPopup = detailsPopupEle.kendoCiresonWindow({\n                        title: \"\",\n                        width: 550,\n                        height: 500,\n                        actions: [\"Close\"]\n                    }).data(\"kendoWindow\");\n\n                    var baseId = null;\n                    var displayName = \"\";\n                    if (e.data == null && e.BaseId != null) {\n                        baseId = e.BaseId;\n                        displayName = e.DisplayName;\n                    } else {\n                        baseId = e.data.BaseId;\n                        displayName = e.data.DisplayName;\n                    }\n\n                    detailsPopup.refresh({\n                        url: \"/Search/ObjectViewer\",\n                        data: { id: baseId }\n                    });\n                    detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\n                    detailsPopup.title(displayName).center().open();\n                },\n                onDataBinding: function (e) {\n                    cur_table = e.sender.table;\n                    _.each(boundArray, function (item) {\n                        item.AssetStatus = (!_.isUndefined(item.AssetStatus) && !_.isNull(item.AssetStatus))? item.AssetStatus : { Id: null, Name: null };\n                        item.Status = (!_.isUndefined(item.Status) && !_.isNull(item.Status)) ? item.Status : { Id: null, Name: null };\n                        item.Hidden = properties.Disabled;\n                    });\n                },\n                isDesktopView: !app.isMobileDevice(),\n                isMobileView: app.isMobileDevice(),\n                isWindowsComputer: false,\n                isConfigItemWindowsComputer: function (id) {\n                    $.ajax({\r\n                        type: \"GET\",\n                        async: false,\n                        url: \"/ConfigItems/IsComputer\",\n                        data: { objectId: id },\n                        success: function (result) {\r\n                            vm.view.affectedItemController.isWindowsComputer = (result.toLowerCase() === \"true\");\r\n                        }\r\n                    });\n                },\n                isUser: false,\n                isConfigItemUser: function (id) {\n                    // Replaced IsUser call due to large delays in returning data\n                    /*\n                    $.ajax({\r\n                        type: \"GET\",\n                        async: false,\n                        url: \"/ConfigItems/IsUser\",\n                        data: { objectId: id },\n                        success: function (result) {\r\n                            vm.view.affectedItemController.isUser = (result.toLowerCase() === \"true\");\r\n                        }\r\n                    });\n                    */\n                    $.ajax({\n                        type: \"GET\",\n                        async: false,\n                        url: \"/Search/GetObjectProperties\",\n                        data: {\n\t\t\t\t\t\t\tid: id\n\t\t\t\t\t\t},\n                        success: function (result) {\n                            vm.view.affectedItemController.isUser = (result.IsUser === true);\n                        }\n                    });\n                },\n                isMoreInfo: function (viewModel) {\n                    var bSlideOut = vm.view.affectedItemController.isSlideOut(viewModel);\n                    return !bSlideOut;\n                },\n                isSlideOut: function (viewModel) {\n                    // Replaced unneeded calls to IsUser/IsWindowsComputer\n                    /*\n                    vm.view.affectedItemController.isConfigItemWindowsComputer(viewModel.BaseId);\n                    vm.view.affectedItemController.isConfigItemUser(viewModel.BaseId);\n\n                    var bIsWindowsComputer = vm.view.affectedItemController.isWindowsComputer;\n                    var bIsUser = vm.view.affectedItemController.isUser;\n                    */\n                    // Get IsUser Result\n                    vm.view.affectedItemController.isConfigItemUser(viewModel.BaseId);\n\t\t\t\t\tvar bIsUser = vm.view.affectedItemController.isUser;\n\n                    // Set Default IsWindowsComputer Result\n                    vm.view.affectedItemController.isWindowsComputer = false;\n\t\t\t\t\tvar bIsWindowsComputer = false;\n\n                    // If ConfigItem is not a user then check if it is a computer\n                    if (!bIsUser) {\n                        // Get IsWindowsComputer Result\n                        vm.view.affectedItemController.isConfigItemWindowsComputer(viewModel.BaseId);\n                        bIsWindowsComputer = vm.view.affectedItemController.isWindowsComputer;\n                    }\n\n                    var hasControlCenterURL = !_.isNull(session.consoleSetting.TrueControlCenterURL) && (session.consoleSetting.TrueControlCenterURL != \"\");\n\n                    return ((bIsWindowsComputer || bIsUser) && hasControlCenterURL) ? true : false;\n                },\n                showTCCInfo: function (dataItem) {\n                    var src = session.consoleSetting.TrueControlCenterURL;\n                    var bIsWindowsComputer = vm.view.affectedItemController.isWindowsComputer;\n                    var bIsUser = vm.view.affectedItemController.isUser;\n                    var tooltip = localization.ComputerManagement;\n\n                    if (bIsWindowsComputer) {\r\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"computer\");\r\n                    } else if (bIsUser) {\r\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"user\");\n                        tooltip = localization.UserManagement;\r\n                    }\n\n                    var options = {\r\n                        url: src,\r\n                        tooltip: tooltip\r\n                    }\n                    app.slideOutNav.show(options);\n                },\n                onContextmenuSelect: function (e) {\n                    var type = e.item.attributes[\"custom\"].value;\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    var dataItem = _.find(e.data.HasRelatedWorkItems, function (item) { return item.BaseId == baseId; });\n\n                    (type == \"slideout\") ? vm.view.affectedItemController.showTCCInfo(dataItem) : vm.view.affectedItemController.showMoreInfo(dataItem);\n                },\n                onContextmenuActivate: function (e) {\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    // Replaced unneeded calls to IsUser/IsWindowsComputer\n                    /*\n                    vm.view.affectedItemController.isConfigItemWindowsComputer(baseId);\n                    vm.view.affectedItemController.isConfigItemUser(baseId);\n                    */\n                    // Get IsUser Result\n                    vm.view.affectedItemController.isConfigItemUser(baseId);\n                    vm.view.affectedItemController.isWindowsComputer = false;\n\n                    // If ConfigItem is not a user then check if it is a computer\n                    if (!vm.view.affectedItemController.isUser) {\n                        vm.view.affectedItemController.isConfigItemWindowsComputer(baseId);\n                    }\n\n                    var managementTitle = localization.UserManagement;\n                    if (vm.view.affectedItemController.isWindowsComputer) {\n                        managementTitle = localization.ComputerManagement;\n                    }\n\n                    var menuItems = [{\n                        text: managementTitle,\n                        imageUrl: \"/Content/Images/Icons/Other/control-center-launcher.png\",\n                        imageAttr: {\n                            height: '16px',\n                            width: '16px'\n                        },\n                        attr: {\n                            custom: 'slideout' //custom attribute holds the link type\n                        }\n                    },\n                     {\n                         text: \"<i class='fa fa-info-circle cursor-pointer'></i>\" + localization.AdditionalDetails,\n                         encoded: false,\n                         attr: {\n                             custom: 'info' //custom attribute holds the link type\n                         }\n                     }];\n\n                    var contextmenu = $(\"#tccmenu\").data(\"kendoContextMenu\");\n                    contextmenu.setOptions({\n                        dataSource: menuItems\n                    });\n                }\n\n            });\n\n            var grid = vm.view.affectedItemController;\n\n            grid.dataSource.originalFilter = grid.dataSource.filter;\n\n            // Replace the original filter function.\n            grid.dataSource.filter = function () {\n\n                // Call the original filter function.\n                var result = grid.dataSource.originalFilter.apply(this, arguments);\n\n                // If a column is about to be filtered, then raise a new \"filtering\" event.\n                if (arguments.length > 0) {\n                    this.trigger(\"filterApplied\", arguments);\n                }\n\n                return result;\n            }\n\n            grid.dataSource.bind(\"filterApplied\", function () {\n\n                $.each($(cur_table).find(\"th a.k-header-column-menu i\"), function () {\n                    $(this).remove();\n                });\n\n                if (grid.dataSource.filter()) {\n\n                    var filters = grid.dataSource.filter().filters || [];\n                    var dsFilters = [];\n                    for (var i in filters) {\n                        if (filters[i].filters) {\n                            var innerFilters = filters[i].filters;\n                            for (var x in innerFilters) {\n                                dsFilters.push(innerFilters[x]);\n                            }\n                        } else {\n                            dsFilters.push(filters[i]);\n                        }\n                    }\n\n                    dsFilters = _.uniq(dsFilters, function (el) { return el.field; });\n\n                    for (var i in dsFilters) {\n                        $(cur_table).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\n                    }\n\n                }\n            });\n\n            var templateFrag = built(properties);\n            view = new kendo.View(templateFrag, { wrap: true, model: vm.view.affectedtemController });\n            callback(templateFrag);\n\n            if (vm.view.affectedItemController.isUserCIVisible) {\n                vm.RequestedWorkItem.bind(\"change\", function (e) {\n                    vm.view.affectedItemController.userConfigItemDataSource.read();\n                });\n            }\n\n            //more functions\n            var isDuplicate = function (idToAdd) {\n                var n = false;\n                $.each(boundArray, function (i, item) {\n                    if (item.BaseId == idToAdd) {\n                        n = true;\n                    }\n                });\n                return n;\n            }\n\n            var addAffectedItem = function (baseId) {\n                if (isDuplicate(baseId)) { return; }\n                $.getJSON('/ConfigItems/GetAffectedItem', { id: baseId }, function (json) {\n                    var item = {\n                        BaseId: baseId,\n                        DisplayName: json.DisplayName,\n                        ClassName: json.ObjectClassName,\n                        Path: json.Path,\n                        AssetStatus: !_.isUndefined(json.AssetStatus) ? (json.AssetStatus != null) ? json.AssetStatus : \"\" : { Name: !_.isUndefined(json.AssetStatus) ? json.AssetStatus : \"\" },\n                        Status: !_.isUndefined(json.Status) ? (json.Status != null) ? json.Status : \"\" : { Name: !_.isUndefined(json.Status) ? json.Status : \"\" }\n                    };\n                    boundArray.push(item);\n                });\n            }\n        }\n    }\n\n    return definition;\n\n});\n","\ndefine('text!forms/predefined/relatedItems/view.html',[],function () { return '<div id=\"relatedItemTemplate\" data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">#: DisplayName #</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <p>#: (typeof AssetStatus!=\"undefined\") ? !_.isUndefined(AssetStatus.Name)?AssetStatus.Name:\"\" : \"\" #</p>\\r\\n                <p># if ((typeof AssetStatus!=\"undefined\") && !_.isUndefined(AssetStatus.Name)) { # &middot # } # </p>\\r\\n                <p>#: (Path!=null ) ? Path : \"\" # </p>\\r\\n                <p># if (Path!=null && Path!=\"\") { # &middot # } # </p>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <a class=\"k-delete-button\">#: localization.Remove #</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 relateditems-grid\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\"><%= localization.Configurationitem %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-bind=\"value: view.relatedItemController.selectedConfigItem, source: view.relatedItemController.configItemDataSource, events:{change:view.relatedItemController.onConfigItemChange }\"\\r\\n                               <% if ( Disabled ){ %> disabled <% } %>/>\\r\\n\\r\\n                        <span data-bind=\"events:{click: view.relatedItemController.searchConfigItem}\"\\r\\n                              data-cid=\"relatedItemsSearchIcon\"\\r\\n                          <% if ( Disabled ){ %> disabled class=\"search search-disabled\" <% } else{ %> class=\"search\" <% } %>\\r\\n                          >\\r\\n                        <i class=\"fa fa-search\"></i>\\r\\n                    </span>\\r\\n                        <button data-role=\"button\" class=\"search-button two-action-input-group__primary-action\"\\r\\n                                data-bind=\"events:{click: view.relatedItemController.addConfigItem}\"\\r\\n                                data-cid=\"relatedItemSearchAddBbtn\"\\r\\n                            <% if ( Disabled ){ %> disabled <% } %>\\r\\n                            >\\r\\n                        <%= localization.Add %>\\r\\n                    </button>\\r\\n                    </div>\\r\\n                 </div>\\r\\n            </div>\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group affected-user-item-search\" data-bind=\"visible: view.relatedItemController.isUserCIVisible\">\\r\\n                    <label class=\"control-label\"><%= localization.AffectedUserItems %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-bind=\"value: view.relatedItemController.selectedUserConfigItem, source: view.relatedItemController.userConfigItemDataSource, events:{change:view.relatedItemController.onUserConfigItemChange }\"\\r\\n                               data-cid=\"affectedItemsUserItemBox\"\\r\\n                               <% if ( Disabled ){ %> disabled <% } %> />\\r\\n\\r\\n                        <button class=\"two-action-input-group__primary-action\"\\r\\n                                data-role=\"button\"\\r\\n                                data-bind=\"events:{click: view.relatedItemController.addUserConfigItem}\"\\r\\n                            <% if ( Disabled ){ %> disabled <% } %>\\r\\n                            >\\r\\n                        <%= localization.Add %>\\r\\n                    </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div data-role=\"grid\"\\r\\n             data-bind=\"visible: view.relatedItemController.isDesktopView, source: view.relatedItemController.dataSource, events:{dataBinding: view.relatedItemController.onDataBinding}\"\\r\\n             data-selectable=\"false\"\\r\\n             data-sortable=\"true\"\\r\\n             data-filterable=\"true\"\\r\\n             data-scrollable=\"false\"\\r\\n             data-column-menu=\"true\"\\r\\n             data-pageable=\"false\"\\r\\n             data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n             data-columns=\\'[\\r\\n                    { title: \"\", width: \"1%\", template: \"\\\\u003cdiv data-base-id=\\\\\"#=BaseId#\\\\\" class=\\\\\"ci-context-menu open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.relatedItemController.isSlideOut\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\\\\u003cdiv class=\\\\\"open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.relatedItemController.isMoreInfo, events:{click:view.relatedItemController.showMoreInfo }\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"/\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\"},\\r\\n                    { field: \"DisplayName\", title: localization.DisplayName, width: \"50%\"},\\r\\n                    { field: \"BaseId\", title: localization.BaseId, width: \"25%\", hidden: true },\\r\\n                    { field: \"Path\", title: localization.Path, width: \"25%\" },\\r\\n                    { field: \"AssetStatus.Name\", title: localization.Status, width: \"25%\" },\\r\\n                    { title: localization.Actions, width: \"15%\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove, className:\"custom__grid-remove\" }] }\\r\\n                ]\\'>\\r\\n        </div>\\r\\n        <div data-bind=\"visible: view.relatedItemController.isMobileView\">\\r\\n            <div data-bind=\"mobileGrid: RelatesToConfigItem\" data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\"></div>\\r\\n        </div>\\r\\n        <!--context menu for info icon-->\\r\\n        <ul id=\"tccmenu-related-ci\" data-role=\"contextmenu\" \\r\\n            data-filter=\".ci-context-menu\"\\r\\n            data-show-on=\"click\"\\r\\n            data-bind=\"events:{select:view.relatedItemController.onContextmenuSelect, activate:view.relatedItemController.onContextmenuActivate}\">\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\nrelatedItems\n**/\n\ndefine('CustomSpace/Scripts/forms/predefined/relatedItems/controller',['require','text!forms/predefined/relatedItems/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\n    var tpl = require(\"text!forms/predefined/relatedItems/view.html\");\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\n\n    var definition = {\n        template: tpl,\n        build: function (vm, node, callback) {\n            var built = _.template(tpl);\n            var properties = {\n                Disabled: !_.isUndefined(node.disabled) ? node.disabled : false\n            };\n\n            $.extend(true, properties, node);\n\n            var view = new kendo.View();\n\n            var cur_table = false;\n\n            //use setters and getters if you want vm boundOdj to trigger change\n            if (_.isUndefined(vm.RelatesToConfigItem)) {\n                vm.set('RelatesToConfigItem', new kendo.data.ObservableArray([]));\n            }\n            var boundArray = vm.get('RelatesToConfigItem');\n\n            vm.view.relatedItemController = new kendo.observable({\n                addConfigItem: function (e) {\n                    if (!_.isUndefined(this.selectedConfigItemId)) {\n                        addAffectedItem(this.selectedConfigItemId);\n                    }\n                },\n                searchConfigItem: function() {\n                    var popupWindow = objectPickerPopup.getPopup(\"62F0BE9F-ECEA-E73C-F00D-3DD78A7422FC\", \"DisplayName,Path,Status\", null, null, true);\n                    popupWindow.setSaveCallback(function(object) {\n                        addAffectedItem(object.BaseId);\n                    });\n                    popupWindow.open();\n                },\n                selectedConfigItemId: \"\",\n                selectedConfigItem: \"\",\n                configItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: function (data) {\n                                var configItem = (data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                                return \"/api/V3/Config/GetAffectedItemsList?itemFilter=\" + configItem;\n                            },\n                            dataType: \"json\"\n                        }\n                    }\n                }),\n                onConfigItemChange: function(e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedConfigItemId = dataItem.Id;\n                },\n                isUserCIVisible: !_.isUndefined(vm.RequestedWorkItem) ? true : false,\n                selectedUserConfigItemId: \"\",\n                selectedUserConfigItem: \"\",\n                addUserConfigItem: function(e) {\n                    if (!_.isUndefined(this.selectedUserConfigItemId)) {\n                        addAffectedItem(this.selectedUserConfigItemId);\n                    }\n                },\n                userConfigItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: \"/ConfigItems/GetAffectedUserConfigItemsList\",\n                            data: { affectedUserId: function() { return !_.isUndefined(vm.RequestedWorkItem) && !_.isNull(vm.RequestedWorkItem.BaseId) ? vm.RequestedWorkItem.BaseId : \"\" } },\n                            dataType: \"json\",\n                            type: \"GET\"\n                        },\n                        parameterMap: function (data) {\n                            var searchFilter = (data.filter && data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                            return _.extend(data, { searchFilter: searchFilter });\n                        }\n                    }\n                }),\n                onUserConfigItemChange: function(e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedUserConfigItemId = dataItem.Id;\n                },\n                dataSource: new kendo.data.DataSource({\n                    schema: {\n                        data: \"Data\",\n                        total: \"Total\",\n                        errors: \"Errors\",\n                        model: {\n                            id: \"BaseId\",\n                        }\n                    },\n                    data: {\n                        Data: boundArray,\n                        Total: boundArray.length\n                    }\n                }),\n                showMoreInfo: function (e) {\n                    var detailsPopupEle = $(\"<div>\");\n                    detailsPopupEle.appendTo(\"body\");\n\n                    var detailsPopup = detailsPopupEle.kendoCiresonWindow({\n                        title: \"\",\n                        width: 550,\n                        height: 500,\n                        actions: [\"Close\"]\n                    }).data(\"kendoWindow\");\n\n                    var baseId = null;\n                    var displayName = \"\";\n                    if (e.data == null && e.BaseId != null) {\n                        baseId = e.BaseId;\n                        displayName = e.DisplayName;\n                    } else {\n                        baseId = e.data.BaseId;\n                        displayName = e.data.DisplayName;\n                    }\n\n                    detailsPopup.refresh({\n                        url: \"/Search/ObjectViewer\",\n                        data: { id: baseId }\n                    });\n                    detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\n                    detailsPopup.title(displayName).center().open();\n                },\n                onDataBinding: function (e) {\n                    cur_table = e.sender.table;\n                    _.each(boundArray, function(item) {\n                        item.AssetStatus = !_.isUndefined(item.AssetStatus) ? item.AssetStatus : { Id: null, Name: null };\n                        item.Status = !_.isUndefined(item.Status) ? item.Status : { Id: null, Name: null };\n                    });\n                },\n                isDesktopView: !app.isMobileDevice(),\n                isMobileView: app.isMobileDevice(),\n                isEnabled: !properties.Disabled,\n                isWindowsComputer: false,\n                isConfigItemWindowsComputer: function (id) {\n                    $.ajax({\r\n                        type: \"GET\",\n                        async: false,\n                        url: \"/ConfigItems/IsComputer\",\n                        data: { objectId: id },\n                        success: function (result) {\r\n                            vm.view.relatedItemController.isWindowsComputer = (result.toLowerCase() === \"true\");\r\n                        }\r\n                    });\n                },\n                isUser: false,\n                isConfigItemUser: function (id) {\n                    // Replaced IsUser call due to large delays in returning data\n                    /*\n                    $.ajax({\r\n                        type: \"GET\",\n                        async: false,\n                        url: \"/ConfigItems/IsUser\",\n                        data: { objectId: id },\n                        success: function (result) {\r\n                            vm.view.relatedItemController.isUser = (result.toLowerCase() === \"true\");\r\n                        }\r\n                    });\n                    */\n                    $.ajax({\n                        type: \"GET\",\n                        async: false,\n                        url: \"/Search/GetObjectProperties\",\n                        data: {\n\t\t\t\t\t\t\tid: id\n\t\t\t\t\t\t},\n                        success: function (result) {\n                            vm.view.relatedItemController.isUser = (result.IsUser === true);\n                        }\n                    });\n                },\n                isMoreInfo: function (viewModel) {\n                    var bSlideOut = vm.view.relatedItemController.isSlideOut(viewModel);\n                    return !bSlideOut;\n                },\n                isSlideOut: function (viewModel) {\n                    // Replaced unneeded calls to IsUser/IsWindowsComputer\n                    /*\n                    vm.view.relatedItemController.isConfigItemWindowsComputer(viewModel.BaseId);\n                    vm.view.relatedItemController.isConfigItemUser(viewModel.BaseId);\n\n                    var bIsWindowsComputer = vm.view.relatedItemController.isWindowsComputer;\n                    var bIsUser = vm.view.relatedItemController.isUser;\n                    */\n                    // Get IsUser Result\n                    vm.view.relatedItemController.isConfigItemUser(viewModel.BaseId);\n\t\t\t\t\tvar bIsUser = vm.view.relatedItemController.isUser;\n\n                    // Set Default IsWindowsComputer Result\n                    vm.view.relatedItemController.isWindowsComputer = false;\n\t\t\t\t\tvar bIsWindowsComputer = false;\n\n                    // If ConfigItem is not a user then check if it is a computer\n                    if (!bIsUser) {\n                        // Get IsWindowsComputer Result\n                        vm.view.relatedItemController.isConfigItemWindowsComputer(viewModel.BaseId);\n                        bIsWindowsComputer = vm.view.relatedItemController.isWindowsComputer;\n                    }\n\n                    var hasControlCenterURL = !_.isNull(session.consoleSetting.TrueControlCenterURL) && (session.consoleSetting.TrueControlCenterURL != \"\");\n\n                    return ((bIsWindowsComputer || bIsUser) && hasControlCenterURL) ? true : false;\n                },\n                showTCCInfo: function (dataItem) {\n                    var src = session.consoleSetting.TrueControlCenterURL;\n                    var bIsWindowsComputer = vm.view.relatedItemController.isWindowsComputer;\n                    var bIsUser = vm.view.relatedItemController.isUser;\n                    var tooltip = localization.ComputerManagement;\n\n                    if (bIsWindowsComputer) {\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"computer\");\n                    } else if (bIsUser) {\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"user\");\n                        tooltip = localization.UserManagement;\n                    }\n\n                    var options = {\r\n                        url: src,\r\n                        tooltip: tooltip\r\n                    }\n                    app.slideOutNav.show(options);\n                },\n                onContextmenuSelect: function (e) {\n                    var type = e.item.attributes[\"custom\"].value;\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    var dataItem =_.find(e.data.RelatesToConfigItem, function (item) { return item.BaseId==baseId; });\n\n                    (type == \"slideout\") ? vm.view.relatedItemController.showTCCInfo(dataItem) : vm.view.relatedItemController.showMoreInfo(dataItem);\n                },\n                onContextmenuActivate: function (e) {\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    // Replaced unneeded calls to IsUser/IsWindowsComputer\n                    /*\n                    vm.view.relatedItemController.isConfigItemWindowsComputer(baseId);\n                    vm.view.relatedItemController.isConfigItemUser(baseId);\n                    */\n                    // Get IsUser Result\n                    vm.view.relatedItemController.isConfigItemUser(baseId);\n                    vm.view.relatedItemController.isWindowsComputer = false;\n\n                    // If ConfigItem is not a user then check if it is a computer\n                    if (!vm.view.relatedItemController.isUser) {\n                        vm.view.relatedItemController.isConfigItemWindowsComputer(baseId);\n                    }\n\n                    var managementTitle = localization.UserManagement;\n                    if (vm.view.relatedItemController.isWindowsComputer) {\n                        managementTitle = localization.ComputerManagement;\n                    }\n\n                    var menuItems = [{\n                        text: managementTitle,\n                        imageUrl: \"/Content/Images/Icons/Other/control-center-launcher.png\",\n                        imageAttr: {\n                            height: '16px',\n                            width: '16px'\n                        },\n                        attr: {\n                            custom: 'slideout' //custom attribute holds the link type\n                        }\n                     },\n                     {\n                         text: \"<i class='fa fa-info-circle cursor-pointer'></i>\" + localization.AdditionalDetails,\n                        encoded: false,\n                        attr: {\n                            custom: 'info' //custom attribute holds the link type\n                        }\n                     }];\n\n                    var contextmenu = $(\"#tccmenu-related-ci\").data(\"kendoContextMenu\");\n                    contextmenu.setOptions({\n                        dataSource: menuItems\n                    });\n                }\n            });\n\n            var grid = vm.view.relatedItemController;\n\n            grid.dataSource.originalFilter = grid.dataSource.filter;\n\n            // Replace the original filter function.\n            grid.dataSource.filter = function () {\n\n                // Call the original filter function.\n                var result = grid.dataSource.originalFilter.apply(this, arguments);\n\n                // If a column is about to be filtered, then raise a new \"filtering\" event.\n                if (arguments.length > 0) {\n                    this.trigger(\"filterApplied\", arguments);\n                }\n\n                return result;\n            }\n\n            grid.dataSource.bind(\"filterApplied\", function (e) {\n\n                $.each($(cur_table).find(\"th a.k-header-column-menu i\"), function () {\n                    $(this).remove();\n                });\n\n                if (grid.dataSource.filter()) {\n\n                    var filters = grid.dataSource.filter().filters || [];\n                    var dsFilters = [];\n                    for (var i in filters) {\n                        if (filters[i].filters) {\n                            var innerFilters = filters[i].filters;\n                            for (var x in innerFilters) {\n                                dsFilters.push(innerFilters[x]);\n                            }\n                        } else {\n                            dsFilters.push(filters[i]);\n                        }\n                    }\n\n                    dsFilters = _.uniq(dsFilters, function(el) { return el.field; });\n\n                    for (var i in dsFilters) {\n                        $(cur_table).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\n                    }\n\n                }\n            });\n\n            var templateFrag = built(properties);\n            view = new kendo.View(templateFrag, { wrap: true, model: vm.view.relatedItemController });\n            callback(templateFrag);\n\n\n            if (properties.Disabled) {\n                var searchButton = $(view.content).find(\".search\");\n                searchButton.addClass(\"search-disabled\");\n            }\n\n            if (vm.view.relatedItemController.isUserCIVisible) {\n                vm.RequestedWorkItem.bind(\"change\", function (e) {\n                    vm.view.relatedItemController.userConfigItemDataSource.read();\n                });\n            }\n\n            //more functions\n            var isDuplicate = function (idToAdd) {\n                var n = false;\n                $.each(boundArray, function (i, item) {\n                    if (item.BaseId == idToAdd) {\n                        n = true;\n                    }\n                });\n                return n;\n            }\n\n            var addAffectedItem = function (baseId) {\n                if (isDuplicate(baseId)) { return; }\n                $.getJSON('/ConfigItems/GetAffectedItem', { id: baseId }, function (json) {\n                    var item = {\n                        BaseId: baseId,\n                        DisplayName: json.DisplayName,\n                        ClassName: json.ObjectClassName,\n                        Path: json.Path,\n                        AssetStatus: !_.isUndefined(json.AssetStatus) ? (json.AssetStatus != null) ? json.AssetStatus : \"\" : { Name: !_.isUndefined(json.AssetStatus) ? json.AssetStatus : \"\" },\n                        Status: !_.isUndefined(json.Status) ? (json.Status != null) ? json.Status : \"\" : { Name: !_.isUndefined(json.Status) ? json.Status : \"\" }\n                    };\n                    boundArray.push(item);\n                });\n            }\n        }\n    }\n\n    return definition;\n\n});\n","\ndefine('text!forms/predefined/childWorkItems/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">${Id}: ${Title}</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <p>#: localizationHelper.localize(\"Status\") #: #: Status # </p>\\r\\n                <p>#: localizationHelper.localize(\"LastModified\") #: #: kendo.toString(kendo.parseDate(LastModified), \"g\") # </p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 file-attachments\"\\r\\n         data-control=\"childWorkItems\"\\r\\n         data-control-bind=\"ChildWorkItem\"\\r\\n         data-control-show=\"IsParent\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>>\\r\\n\\r\\n    <div >\\r\\n        <button class=\"btn btn-primary\" data-role=\"button\" data-click=\"addClick\"><%= localization.Add %> </button>\\r\\n    </div>\\r\\n    \\r\\n    <% if ( IsMobileView == false ){ %>\\r\\n        <div data-control-grid=\"objectGrid\" class=\"inline-spacing\"></div>\\r\\n    <% } %>\\r\\n    \\r\\n    <% if ( IsMobileView ){ %>\\r\\n        <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\" data-bind=\"mobileGrid: ChildWorkItem\"></div>\\r\\n    <% } %>\\r\\n    \\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchildWorkItem\r\n**/\r\n\r\ndefine('forms/predefined/childWorkItems/controller',['require','text!forms/predefined/childWorkItems/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/childWorkItems/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            boundObj = vm;\r\n            \r\n            var properties = {\r\n                Disabled: false,\r\n                PropertyName: \"ChildWorkItem\",\r\n                ClassId: (vm.ClassName === \"System.WorkItem.ReleaseRecord\") ? \"d02dc3b6-d709-46f8-cb72-452fa5e082b8\" : \"a604b942-4c7b-2fb2-28dc-61dc6f465c68\",\r\n                PropertyToDisplay: \"Id,Title,Status,LastModified\",\r\n                ControllerUrl: \"/Search/GetChildWorkItems\",\r\n                IsMobileView: app.isMobileDevice()\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(properties));\r\n            var popupWindow = objectPickerPopup.getPopup(properties.ClassId, properties.PropertyToDisplay, properties.ControllerUrl);\r\n            var objectPicker = new Control(templateFrag.find(\"[data-control='childWorkItems']\"), boundObj, properties.PropertyName, properties, popupWindow);\r\n            var showProp = templateFrag.find(\"[data-control='childWorkItems']\").attr(\"data-control-show\");\r\n            templateFrag.find(\"[data-control='childWorkItems']\").attr(\"data-control\", \"childWorkItemsBound\");\r\n            callback(templateFrag);\r\n\r\n            // Determine if group should be visible (IsParent)\r\n            if (boundObj[showProp] === false || _.isNull(boundObj[showProp])) {\r\n                templateFrag.parents(\".row\").hide();\r\n            }\r\n           \r\n        }\r\n    }\r\n\r\n    var Control = function (targetEle, boundObj, name, properties, popupWindow) {\r\n\r\n        //use setters and getters if you want vm boundOdj to trigger change\r\n        if (_.isUndefined(boundObj[name])) {\r\n            boundObj.set(name, new kendo.data.ObservableArray([]));\r\n        }\r\n        var boundArray = boundObj.get(name);\r\n\r\n        var __construct = function () {\r\n            bindButtonEvents();\r\n            bindEvents();\r\n            createGrid();\r\n        }\r\n\r\n        var bindEvents = function () {\r\n            \r\n        }\r\n\r\n        var bindButtonEvents = function () {\r\n            var actions = {\r\n                addClick: function () {\r\n                    popupWindow.setSaveCallback(function (object) {\r\n                        if (isDuplicate(object.BaseId)) { return; }\r\n                        boundArray.push(object);\r\n                    });\r\n                    popupWindow.open();\r\n                }\r\n            };\r\n\r\n            //bind add click event\r\n            targetEle.find('[data-click]').each(function () {\r\n                if (actions[$(this).attr('data-click')]) {\r\n                    $(this).click(actions[$(this).attr('data-click')]);\r\n                }\r\n            });\r\n        }\r\n\r\n       \r\n        var createGrid = function () {\r\n            var gridEle = targetEle.find(\"[data-control-grid]\");\r\n            \r\n            var grid = gridEle.kendoGrid({\r\n                columns:\r\n                 [\r\n                  { field: \"Id\", title: localization.Id, attributes: { \"class\": \"grid-highlight-column\" } },\r\n                  { field: \"Title\", title: localization.Title },\r\n                  { field: \"Status\", title: localization.Status, template: \"#= (Status.Name)?Status.Name:Status #\", },\r\n                  {\r\n                      field: \"LastModified\",\r\n                      title: localization.LastModified,\r\n                      type: \"date\",\r\n                      template: \"#= (LastModified) ? kendo.toString(new Date(LastModified), 'g'):'' #\"\r\n                  },\r\n                  { field: \"BaseId\", title: \"BaseId\", hidden: \"true\" },\r\n                  { width: \"105px\", command: [{ name: \"destroy\", text: localization.Remove }]}\r\n                 ],\r\n                scrollable: false,\r\n                filterable: {\r\n                    extra: false,\r\n                    messages: {\r\n                        info: localization.Showitemswithvaluethat,\r\n                        and: localization.And,\r\n                        or: localization.Or,\r\n                        filter: localization.Filter,\r\n                        clear: localization.Clear\r\n                    },\r\n                    operators: {\r\n                        string: {\r\n                            startswith: localization.Startswith,\r\n                            contains: localization.Contains,\r\n                            eq: localization.Isequalto,\r\n                            neq: localization.Isnotequalto\r\n                        }\r\n                    }\r\n                },\r\n                reorderable: true,\r\n                sortable: true,\r\n                columnMenu: {\r\n                    messages: {\r\n                        columns: localization.ChooseColumns,\r\n                        filter: localization.Filter,\r\n                        sortAscending: localization.SortAscending,\r\n                        sortDescending: localization.SortDescending\r\n                    }\r\n                },\r\n                editable: {\r\n                    confirmDelete: \"Delete\",\r\n                    cancelDelete: \"Cancel\",\r\n                    mode: \"incell\",\r\n                    template: null,\r\n                    create: true,\r\n                    update: false,\r\n                    destroy: true\r\n                },\r\n                toolbar: {},\r\n                dataSource: {\r\n                    transport: {\r\n                        prefix: \"\",\r\n                        read: {\r\n                            url: \"\"\r\n                        }\r\n                    },\r\n                    type: \"aspnetmvc-ajax\",\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\",\r\n                        model: {\r\n                            id: \"BaseId\",\r\n                        }\r\n                    },\r\n                    data: {\r\n                        Data: boundArray,\r\n                        Total: boundArray.length\r\n                    }\r\n                },\r\n                selectable: true\r\n            });\r\n\r\n            gridEle.on(\"click\", \"td\", function (e) {\r\n                var highlightedColumn = $(e.currentTarget).hasClass(\"grid-highlight-column\");\r\n                if (!highlightedColumn) { return }\r\n\r\n                var kendoGrid = grid.data(\"kendoGrid\");\r\n                var selectedItem = kendoGrid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n                var strClass = selectedItem.ClassName.split(/[\\s.]+/);\r\n                var className = strClass[strClass.length - 1];\r\n                window.open(\"/\" + className + \"/Edit/\" + selectedItem.Id + \"/\", '_blank');\r\n            });\r\n        }\r\n\r\n        var isDuplicate = function (idToAdd) {\r\n            var n = false;\r\n            $.each(boundArray, function (i, item) {\r\n                if (item.BaseId == idToAdd) {\r\n                    n = true;\r\n                }\r\n            });\r\n            return n;\r\n        }\r\n\r\n        __construct();\r\n    }\r\n    return definition;\r\n});\n","\ndefine('text!forms/predefined/userInput/view.html',[],function () { return '<div>\\r\\n    <div class=\"editor-label\">\\r\\n        <label><%= localization.UserInputs %></label>\\r\\n    </div>\\r\\n    <div class=\"editor-field\">\\r\\n        <div data-control=\"userInputs\" data-control-bind=\"UserInput\">\\r\\n            <div data-control-grid=\"userInputsGrid\" class=\"inline-spacing\"></div>\\r\\n        </div>    \\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nuserInput\r\n**/\r\n\r\ndefine('forms/predefined/userInput/controller',['require','text!forms/predefined/userInput/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/userInput/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/activities/view.html',[],function () { return '<div data-control=\"activityDisplay\" data-control-bind=\"Activity\" class=\"activity-list-container\"\\r\\n\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    >\\r\\n</div>\\r\\n';});\n\n","/**\r\nactivities\r\n**/\r\n\r\ndefine('forms/predefined/activities/controller',['require','text!forms/predefined/activities/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/activities/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/multipleObjectPicker/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">${title}</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                # $.each(details, function (index, item) {\\r\\n                # <p>${item}</p>  #\\r\\n                });\\r\\n                #\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12\">\\r\\n    <div data-control=\"multipleObjectPicker\"\\r\\n         data-control-bind=\"HasRelatedWorkItems\"\\r\\n         id=\"<%= PropertyName %>\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n    <% } %>\\r\\n    >\\r\\n\\r\\n        <button data-role=\"button\" class=\"btn btn-primary\" data-click=\"addClick\"><%= localization.Add %> </button>\\r\\n        <div class=\"grid-container\">\\r\\n            <% if ( IsMobileView == false ){ %>\\r\\n            <div data-control-grid=\"objectGrid\" class=\"inline-spacing\"></div>\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( IsMobileView ){ %>\\r\\n            <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\" data-bind=\"mobileGrid: <%= PropertyName %>\" multiple-picker data-columns=\"<%= ClassProperties %>\"></div>\\r\\n            <% } %>\\r\\n        </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nmultipleObjectPicker\r\n**/\r\n\r\ndefine('forms/predefined/multipleObjectPicker/controller',['require','text!forms/predefined/multipleObjectPicker/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/multipleObjectPicker/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\r\n\r\n    var projectionSearchUrl = \"/Search/GetObjectProjectionByCriteria\";\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            boundObj = node.vm;\r\n            name = node.PropertyName;\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            var properties = {\r\n                Disabled: false,\r\n                ClassId: \"\",\r\n                PropertyToDisplay: [],\r\n                PropertyName: \"\",\r\n                ShowAddButton: true,\r\n                ShowRemoveButton: true,\r\n                Scoped: false,\r\n                ClassProperties: \"\",\r\n                SelectableRow: false,\r\n                SelectProperty: \"Id\",\r\n                ProjectionId: \"\",\r\n                HiddenProperty: null,//separated by comma only\r\n                IsMobileView: app.isMobileDevice()\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            if (properties.PropertyToDisplay.length <= 0) { properties.PropertyToDisplay = { DisplayName: \"DisplayName\", Path: \"Path\", Status: \"Status\" }; }\r\n            for (var prop in properties.PropertyToDisplay) {\r\n                properties.ClassProperties = properties.ClassProperties.concat(prop).concat(\",\");\r\n            }\r\n\r\n            if ((properties.PropertyName === \"HasRelatedWorkItems\") && (properties.ClassProperties.indexOf(\"AssetStatus\") < 0)) {\r\n                properties.ClassProperties = properties.ClassProperties.concat(\"AssetStatus\");\r\n            }\r\n\r\n            if (!_.isNull(properties.HiddenProperty)) { //This will be use to load properties that is not need to display\r\n                properties.ClassProperties += properties.HiddenProperty.concat(\",\");\r\n            }\r\n\r\n            //set properties for watchlist\r\n            if ((properties.PropertyName === \"WatchList\")) {\r\n                if (!session.consoleSetting.DashboardsLicense.IsValid || !session.enableWatchlist) {\r\n                    properties.Visible = false;\r\n                }\r\n                //hide add/remove option when current user is and enduser and he or she is not the affected user\r\n                if ((!session.user.Analyst) && (typeof boundObj.RequestedWorkItem != 'undefined') && (session.user.Id != boundObj.RequestedWorkItem.BaseId)) {\r\n                    properties.ShowAddButton = false;\r\n                    properties.ShowRemoveButton = false;\r\n                }\r\n            }\r\n\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(properties));\r\n\r\n            //used on RelatesToWorkItem relatinship, exclude current workitem from list\r\n            var filter = { field: \"BaseId\", operator: \"neq\", value: boundObj.BaseId };\r\n\r\n            var popupWindow = (properties.PropertyName === \"RelatesToWorkItem\") ?\r\n                objectPickerPopup.getPopup(properties.ClassId, properties.ClassProperties, null, filter) :\r\n                objectPickerPopup.getPopup(properties.ClassId, properties.ClassProperties);\r\n\r\n            var objectPicker = new Control(templateFrag.find(\"[data-control='multipleObjectPicker']\"), boundObj, name, properties, popupWindow);\r\n            templateFrag.find(\"[data-control='multipleObjectPicker']\").attr(\"data-control\", \"multipleObjectPickerBound\");\r\n\r\n            callback(templateFrag);\r\n        },\r\n        openObject: function (selectedItem) {\r\n            var strClass = selectedItem.ClassName.split(/[\\s.]+/);\r\n            var className = strClass[strClass.length - 1];\r\n            switch (className) {\r\n                case \"HardwareAsset\":\r\n                case \"SoftwareAsset\":\r\n                    window.open(\"/AssetManagement/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Lease\":\r\n                case \"Warranty\":\r\n                    window.open(\"/AssetManagement/Contract/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"SupportContract\":\r\n                    window.open(\"/AssetManagement/Contract/SupportandMaintenance/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Location\":\r\n                case \"NoticeEvent\":\r\n                case \"Organization\":\r\n                case \"Standard\":\r\n                case \"Subnet\":\r\n                case \"Vendor\":\r\n                case \"CatalogItem\":\r\n                case \"CostCenter\":\r\n                case \"Invoice\":\r\n                case \"PurchaseOrder\":\r\n                case \"Purchase\":\r\n                    window.open(\"/AssetManagement/Administration/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Licence\":\r\n                    window.open(\"/AssetManagement/Administration/License/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Consumable\":\r\n                    window.open(\"/AssetManagement/Administration/Consumables/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"ManualActivity\":\r\n                case \"ReviewActivity\":\r\n                case \"SequentialActivity\":\r\n                case \"ParallelActivity\":\r\n                case \"DependentActivity\":\r\n                    window.open(\"/Activity/Edit/\" + selectedItem.Id, '_blank');\r\n                    break;\r\n                case \"Incident\":\r\n                case \"ServiceRequest\":\r\n                case \"ChangeRequest\":\r\n                case \"Problem\":\r\n                case \"ReleaseRecord\":\r\n                    window.open(\"/\" + className + \"/Edit/\" + selectedItem.Id + \"/\", '_blank');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    var Control = function (targetEle, boundObj, name, properties, popupWindow) {\r\n\r\n        //use setters and getters if you want vm boundOdj to trigger change\r\n        if (_.isUndefined(boundObj[name])) {\r\n            boundObj.set(name, new kendo.data.ObservableArray([]));\r\n        }\r\n\r\n        //if related object is of single cardinality, create a new array and add the related object \r\n        var boundArray = !_.isUndefined(boundObj[name].length) ? boundObj.get(name) : new kendo.data.ObservableArray([boundObj.get(name)]);\r\n        boundArray.properties = properties;\r\n\r\n        var self = this;\r\n\r\n        var __construct = function () {\r\n            buildSubProperties();\r\n            bindButtonEvents();\r\n            createGrid();\r\n        }\r\n\r\n        var buildSubProperties = function () {\r\n            var propToFill = [];\r\n            //This will going to build array of display properties that has sub properties. Ex:Target_PurchaseHasPurchaseOrder.DisplayName\r\n            for (var prop in properties.PropertyToDisplay) {\r\n                var propSplit = prop.split(\".\");\r\n                if (propSplit.length > 1) {\r\n                    propToFill.push(propSplit);\r\n                }\r\n            }\r\n\r\n            //This will going to check all properties. If property is not existing, this will going to create a dummy property so that kendo will render the grid.\r\n            _.each(boundArray, function (data) {\r\n                _.each(propToFill, function (prop) {\r\n                    var mainProp = prop[0];\r\n                    var subProp = prop[1];\r\n                    if (_.isUndefined(data[mainProp])) {\r\n                        data[mainProp] = {};\r\n                        data[mainProp][subProp] = \"\";\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        //Make this global so that this can be used when inserting data outside multiple object picker.\r\n        //This is the solution for now since kendo grid doesn't have preDataBinding which I need to manipulate data before binding\r\n        //This function is called also from software asset \"copy license assignment\" task\r\n        boundArray.addItem = function (object) {\r\n            var isItemExist = false;\r\n            if (isDuplicate(object.BaseId)) {\r\n                return;\r\n            }\r\n            _boundArray = this;\r\n            //This will going to get object related items\r\n            if (!_.isUndefined(_boundArray.properties.ProjectionId) && !_.isNull(_boundArray.properties.ProjectionId) && _boundArray.properties.ProjectionId != \"\") {\r\n\r\n                var colNames = \"\";\r\n                var splitedProp = [];\r\n                //This will going to get thos property whos have sub child on it.\r\n                //Ex. PropertyToDisplay: { DisplayName: \"DisplayName\", \"Currency.Name\": \"Currency\", Cost: \"Cost\",\"Target_PurchaseHasPurchaseOrder.DisplayName\":\"Purchase Order\" }\r\n                // => Target_PurchaseHasPurchaseOrder.DisplayName and Currency.Name\r\n                for (var prop in _boundArray.properties.PropertyToDisplay) {\r\n                    var propperty = prop.split(\".\");\r\n                    if (propperty.length > 1) {\r\n                        splitedProp.push(propperty);\r\n                        colNames = colNames == \"\" ? prop : colNames + \",\" + prop;\r\n\r\n                    }\r\n                }\r\n\r\n                $.post(projectionSearchUrl, { baseId: object.BaseId, projectionId: _boundArray.properties.ProjectionId, columnNames: colNames }, function (result) {\r\n                    for (index in result.Data) {\r\n                        for (propIndex in splitedProp) {\r\n                            var value = result.Data[index][splitedProp[propIndex][0]];\r\n                            if (!_.isUndefined(value[splitedProp[propIndex][1]])) { //this will check if this property is undefined or not. This will going to avoid conflict with enums\r\n                                object[splitedProp[propIndex][0]] = value;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    _boundArray.push(object);\r\n                });\r\n            } else {\r\n                _boundArray.push(object);\r\n            }\r\n        }\r\n\r\n        var bindButtonEvents = function () {\r\n            var actions = {\r\n                addClick: function () {\r\n                    popupWindow.setSaveCallback(function (object) {\r\n                        boundArray.addItem(object);\r\n\r\n                        //if related object is of single cardinality, replace the value\r\n                        if (_.isUndefined(boundObj[name].length)) {\r\n                            boundArray.shift();\r\n                            boundObj.set(name, boundArray[0]);\r\n                        }\r\n                    });\r\n                    popupWindow.open();\r\n                }\r\n            };\r\n\r\n            //bind add click event\r\n            targetEle.find('[data-click]').each(function () {\r\n                if (actions[$(this).attr('data-click')]) {\r\n                    $(this).click(actions[$(this).attr('data-click')]);\r\n                }\r\n            });\r\n\r\n            //hide add button when ShowAddButton=false or if Disabled\r\n            if (!properties.ShowAddButton || properties.Disabled || properties.vm.isDisabled) {\r\n                targetEle.find('[data-click]').each(function () {\r\n                    $(this).hide();\r\n                });\r\n            }\r\n        }\r\n\r\n        var createGrid = function () {\r\n            var gridEle = targetEle.find(\"[data-control-grid]\");\r\n            //always unhide remove button for watchlist \r\n            var hideRemoveButton = (properties.PropertyName === \"WatchList\") ? false : (!properties.ShowRemoveButton || properties.Disabled || properties.vm.isDisabled);\r\n            //building grid columns\r\n            var columnFields = buildColumnFields(properties.PropertyToDisplay);\r\n            var columnToDisplay = buildGridColumns(columnFields, hideRemoveButton);\r\n\r\n            var grid = gridEle.kendoGrid({\r\n                columns: columnToDisplay,\r\n                scrollable: false,\r\n                filterable: {\r\n                    extra: false,\r\n                    messages: {\r\n                        info: localization.Showitemswithvaluethat,\r\n                        and: localization.And,\r\n                        or: localization.Or,\r\n                        filter: localization.Filter,\r\n                        clear: localization.Clear\r\n                    },\r\n                    operators: {\r\n                        string: {\r\n                            startswith: localization.Startswith,\r\n                            contains: localization.Contains,\r\n                            eq: localization.Isequalto,\r\n                            neq: localization.Isnotequalto\r\n                        }\r\n                    }\r\n                },\r\n                reorderable: true,\r\n                sortable: true,\r\n                columnMenu: {\r\n                    messages: {\r\n                        columns: localization.ChooseColumns,\r\n                        filter: localization.Filter,\r\n                        sortAscending: localization.SortAscending,\r\n                        sortDescending: localization.SortDescending\r\n                    }\r\n                },\r\n                editable: {\r\n                    confirmDelete: \"Delete\",\r\n                    cancelDelete: \"Cancel\",\r\n                    mode: \"incell\",\r\n                    template: null,\r\n                    create: true,\r\n                    update: false,\r\n                    destroy: true\r\n                },\r\n                toolbar: {},\r\n                dataSource: {\r\n                    transport: {\r\n                        prefix: \"\",\r\n                        read: {\r\n                            url: \"\"\r\n                        }\r\n                    },\r\n                    type: \"aspnetmvc-ajax\",\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\",\r\n                        model: {\r\n                            id: \"BaseId\",\r\n                            fields: columnFields\r\n                        }\r\n                    },\r\n                    data: {\r\n                        Data: boundArray,\r\n                        Total: boundArray.length\r\n                    }\r\n                },\r\n                dataBinding: function (e) {\r\n                    //Change to only pass specific item\r\n                    if (!_.isUndefined(e.items) && e.items.length > 0) {\r\n                        formatPropertyInBoundArray(e, properties.ClassProperties)\r\n                    }\r\n                },\r\n                dataBound: function (e) {\r\n                    if (properties.Scoped) {\r\n                        scopeBoundArray(this, properties.ClassId, properties.ClassProperties);\r\n                    }\r\n\r\n                },\r\n                selectable: properties.SelectableRow ? \"multiple row\" : false\r\n            });\r\n\r\n            gridEle.on(\"click\", \"td\", function (e) {\r\n                var highlightedColumn = $(e.currentTarget).hasClass(\"grid-highlight-column\");\r\n                if (!highlightedColumn) { return }\r\n\r\n                var kendoGrid = grid.data(\"kendoGrid\");\r\n                var selectedItem = kendoGrid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n                openObject(selectedItem);\r\n            });\r\n\r\n            if (!app.isMobile())\r\n            {\r\n                grid.data(\"kendoGrid\").dataSource.originalFilter = grid.data(\"kendoGrid\").dataSource.filter;\r\n\r\n                // Replace the original filter function.\r\n                grid.data(\"kendoGrid\").dataSource.filter = function () {\r\n\r\n                    // Call the original filter function.\r\n                    var result = grid.data(\"kendoGrid\").dataSource.originalFilter.apply(this, arguments);\r\n\r\n                    // If a column is about to be filtered, then raise a new \"filtering\" event.\r\n                    if (arguments.length > 0) {\r\n                        this.trigger(\"filterApplied\", arguments);\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n\r\n                grid.data(\"kendoGrid\").dataSource.bind(\"filterApplied\", function () {\r\n                    $.each($(grid).find(\"th a.k-header-column-menu i\"), function () {\r\n                        $(this).remove();\r\n                    });\r\n\r\n                    if (grid.data(\"kendoGrid\").dataSource.filter()) {\r\n\r\n                        var dsFilters = grid.data(\"kendoGrid\").dataSource.filter().filters || [];\r\n\r\n                        for (var i in dsFilters) {\r\n                            $(grid).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\r\n                        }\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n            \r\n\r\n        }\r\n\r\n        var isDuplicate = function (idToAdd) {\r\n            var n = false;\r\n            $.each(boundArray, function (i, item) {\r\n                if (item.BaseId == idToAdd) {\r\n                    n = true;\r\n                }\r\n            });\r\n            return n;\r\n        }\r\n\r\n        var buildGridColumns = function (columnFields, showRemovButton) {\r\n            var columns = [];\r\n\r\n            for (var prop in properties.PropertyToDisplay) {\r\n                var propertyKey = prop;\r\n                var localizationKey = properties.PropertyToDisplay[prop];\r\n                var localizedText = (!_.isUndefined(localization[localizationKey]) && [localizationKey].length > 0) ? localization[localizationKey] : localizationKey;\r\n                var columnClass = (properties.SelectableRow && propertyKey === properties.SelectProperty) ? \"grid-highlight-column\" : \"\";\r\n                var dateFormat = (columnFields[propertyKey].type == \"date\") ? \"{0:\" + kendo.culture().calendar.patterns.g + \"}\" : null;\r\n\r\n                columns.push({\r\n                    title: localizedText,\r\n                    width: \"210px\",\r\n                    field: propertyKey,\r\n                    filterable: {},\r\n                    encoded: true,\r\n                    attributes: {\r\n                        \"class\": columnClass\r\n                    },\r\n                    format: dateFormat\r\n                });\r\n            }\r\n            columns.push({ title: localization.BaseId, width: \"210px\", field: \"BaseId\", filterable: {}, encoded: true, hidden: true });\r\n            columns.push({ width: \"105px\", command: [{ name: \"destroy\", text: localization.Remove }], hidden: showRemovButton });\r\n\r\n            return columns;\r\n        }\r\n\r\n\r\n        //traverse and format date\r\n        var formatPropertyInBoundArray = function (currentItemEvent, columnString) {\r\n            var currentItem = currentItemEvent.items[0];\r\n            $.each(columnString.split(\",\"), function (i, column) {\r\n                $.each(boundArray, function (index, item) {\r\n                    //mutate poorly structured provided enum data \r\n                    if (column.indexOf('.') > 0) {\r\n                        var property = column.split('.')[0];\r\n                        if (_.isUndefined(item[property])) {\r\n                            boundArray[index][property] = { Id: \"\", Name: \"\" }\r\n                        }\r\n                    }\r\n                    if (currentItem.BaseId != item.BaseId && currentItemEvent.action == \"add\") return; //This will be only used when adding new items\r\n                    if (_.isUndefined(item[column]) || _.isNull(item[column])) { return; }\r\n                    if (_.isBoolean(item[column]) || _.isNumber(item[column])) { return; }\r\n                    if (!_.isUndefined(item[column].Name)) { boundArray[index][column] = item[column].Name; } //enums\r\n                });\r\n            });\r\n        }\r\n\r\n        var scopeBoundArray = function (grid, scopeClassId, PropertyToDisplay) {\r\n\r\n            if (scopeClassId === \"\") { return; }\r\n\r\n            $.ajax({\r\n                url: \"/Search/GetSearchObjectsByClassId\",\r\n                data: { searchFilter: \"\", classId: scopeClassId, columnNames: PropertyToDisplay },\r\n                async: false,\r\n                timeout: 3000,\r\n                success: function (data) {\r\n                    var objectIds = [];\r\n                    $.each(data.Data, function (ii, iitem) {\r\n                        objectIds.push(iitem[\"BaseId\"]);\r\n                    });\r\n\r\n                    $.each(grid._data, function (ii, iitem) {\r\n                        if (!_.contains(objectIds, this.BaseId)) {\r\n                            var row = grid.tbody.find(\"tr[data-uid='\" + this.uid + \"']\");\r\n                            row.hide();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        var openObject = function (selectedItem) {\r\n            var strClass = selectedItem.ClassName.split(/[\\s.]+/);\r\n            var className = strClass[strClass.length - 1];\r\n            switch (className) {\r\n                case \"HardwareAsset\":\r\n                case \"SoftwareAsset\":\r\n                    window.open(\"/AssetManagement/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Lease\":\r\n                case \"Warranty\":\r\n                    window.open(\"/AssetManagement/Contract/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"SupportContract\":\r\n                    window.open(\"/AssetManagement/Contract/SupportandMaintenance/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Location\":\r\n                case \"NoticeEvent\":\r\n                case \"Organization\":\r\n                case \"Standard\":\r\n                case \"Subnet\":\r\n                case \"Vendor\":\r\n                case \"CatalogItem\":\r\n                case \"CostCenter\":\r\n                case \"Invoice\":\r\n                case \"PurchaseOrder\":\r\n                case \"Purchase\":\r\n                    window.open(\"/AssetManagement/Administration/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Licence\":\r\n                    window.open(\"/AssetManagement/Administration/License/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Consumable\":\r\n                    window.open(\"/AssetManagement/Administration/Consumables/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"ManualActivity\":\r\n                case \"ReviewActivity\":\r\n                case \"SequentialActivity\":\r\n                case \"ParallelActivity\":\r\n                case \"DependentActivity\":\r\n                    window.open(\"/Activity/Edit/\" + selectedItem.Id, '_blank');\r\n                    break;\r\n                case \"Incident\":\r\n                case \"ServiceRequest\":\r\n                case \"ChangeRequest\":\r\n                case \"Problem\":\r\n                case \"ReleaseRecord\":\r\n                    window.open(\"/\" + className + \"/Edit/\" + selectedItem.Id + \"/\", '_blank');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        var buildColumnFields = function (properties) {\r\n            var stringProp;\r\n\r\n            stringProp = '{';\r\n            for (var prop in properties) {\r\n                var type = (prop.indexOf(\"Date\") > -1 || prop == \"LastModified\") ? \"date\" : \"string\";\r\n                stringProp += '\"' + prop + '\":{\"type\":\"' + type + '\"},';\r\n            }\r\n            stringProp = stringProp.replace(/,([^,]*)$/, '$1');\r\n            stringProp += '}';\r\n\r\n            return JSON.parse(stringProp);\r\n        }\r\n        __construct();\r\n    }\r\n    return definition;\r\n\r\n});\n","\ndefine('text!CustomSpace/Scripts/forms/predefined/history/view.html',[],function () { return '<div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-12\">\\r\\n            <div class=\"form-group\">\\r\\n                <div class=\"input-group\">\\r\\n                    <div id=\"showHistoryDropDown\"\\r\\n                        data-role=\"dropdownlist\"\\r\\n                        data-text-field=\"text\"\\r\\n                        data-value-field=\"value\"\\r\\n                        data-template=\"dropDownHistoryTemplate\"\\r\\n                    ></div>\\r\\n                    <span class=\"input-group-btn\">\\r\\n                        <button data-role=\"button\" class=\"btn btn-primary k-button\" data-bind=\"events: {click: view.history.loadHistory}\">\\r\\n                            <span class=\"fa cursor-pointer\"></span><%= localization.ShowHistory %>\\r\\n                        </button>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"editor-label\">\\r\\n                <label id=\"showHistoryTitle\" data-bind=\"source: historyLabel\" data-template=\"labelHistoryTemplate\">PRE TEMPLATE</label>\\r\\n            </div>\\r\\n            <div id=\"historyView\" data-bind=\"visible: showHistory\"></div>  \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--kendo templates-->\\r\\n<script type=\"text/x-kendo-template\" id=\"labelHistoryTemplate\">\\r\\n    # if (type == \"loading\") { #\\r\\n        <span class=\\'k-icon k-loading\\'></span>\\r\\n    # } else if (type == \"error\") { #\\r\\n        <span class=\\'fa fa-warning\\'></span> Unable to load history. Please try again.\\r\\n    # } else if (type == \"info\") { #\\r\\n        #: text #\\r\\n    # } #\\r\\n</script>\\r\\n<script type=\"text/x-kendo-template\" id=\"dropDownHistoryTemplate\">\\r\\n    <span style=\\'white-space: pre;\\'>#= data.text #</span>\\r\\n</script>\\r\\n<script type=\"text/x-kendo-template\" id=\"viewHistoryTemplate\">\\r\\n    <ul class=\\'timeline\\' data-template=\\'propertyHistoryTemplate\\' data-bind=\\'source: nodes\\'></ul>\\r\\n</script>\\r\\n<script type=\"text/x-kendo-template\" id=\"propertyHistoryTemplate\">\\r\\n    # if ((!_.isUndefined(ClassHistory) && ClassHistory.length > 0) || RelationshipHistory.length > 0) { #\\r\\n    <li>\\r\\n\\r\\n        # if (RelationshipHistory.length > 0) { #\\r\\n        <div class=\"timeline-badge primary\">\\r\\n            <i class=\"fa fa-code-fork\"></i>\\r\\n        </div>\\r\\n        # } else{ #\\r\\n        <div class=\"timeline-badge\">\\r\\n            <i class=\"fa\"></i>\\r\\n        </div>\\r\\n        # } #\\r\\n        <div class=\"timeline-panel\">\\r\\n            <div class=\"timeline-heading\">\\r\\n                <a><h4 class=\"timeline-title\">#: UserName #</h4></a>\\r\\n                <p><small class=\"text-muted\"><i class=\"fa fa-clock-o\"></i>#: kendo.toString(new Date(DateOccurred),\\'g\\') #</small></p>\\r\\n            </div>\\r\\n            <div class=\"timeline-body\">\\r\\n                # if ((!_.isUndefined(ClassHistory) && ClassHistory.length > 0)) { #\\r\\n                <h5><%= localization.PropertyChanges %>:</h5>\\r\\n                <div class=\"table-responsive\">\\r\\n                    <table class=\"table\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th><%= localization.Property %></th>\\r\\n                                <th><%= localization.OldValue %></th>\\r\\n                                <th><%= localization.NewValue %></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            # for (var i = 0; i < ClassHistory.length; i++) { #\\r\\n                            <tr>\\r\\n                                <td>#: localizationHelper.localize(ClassHistory[i].Key.replace(/ /g,\"\"), ClassHistory[i].Key) #</td>\\r\\n                                <td>#: ClassHistory[i].BeforeValue && ClassHistory[i].IsDate ? kendo.toString(new Date(ClassHistory[i].BeforeValue),\\'g\\') : localizationHelper.localize(ClassHistory[i].BeforeValue.replace(/ /g,\"\"), ClassHistory[i].BeforeValue) #</td>\\r\\n                                <td>#: ClassHistory[i].AfterValue && ClassHistory[i].IsDate ? kendo.toString(new Date(ClassHistory[i].AfterValue),\\'g\\') : localizationHelper.localize(ClassHistory[i].AfterValue.replace(/ [0-9]/g,\"\"), ClassHistory[i].AfterValue) #</td>\\r\\n                            </tr>\\r\\n                            # } #\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                # } #\\r\\n                # if (RelationshipHistory.length > 0) { #\\r\\n                <h5><%= localization.RelationshipChanges %>:</h5>\\r\\n                <div class=\"table-responsive\">\\r\\n                    <table class=\"table\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th></th>\\r\\n                                <th><%= localization.RelationshipClass %></th>\\r\\n                                <th><%= localization.Item %></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            # for (var i = 0; i < RelationshipHistory.length; i++) { #\\r\\n                            <tr>\\r\\n                                # if (RelationshipHistory[i].ChangeType === \"Insert\") { #\\r\\n                                <td><i class=\"fa fa-plus text-success\"></i></td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \").replace(/ /g,\"\"), RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \")) #</td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].Item.replace(/ /g,\"\"), RelationshipHistory[i].Item) #</td>\\r\\n                                # } #\\r\\n\\r\\n                                # if (RelationshipHistory[i].ChangeType === \"Delete\") { #\\r\\n                                <td><i class=\"fa fa-minus text-danger\"></i></td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \").replace(/ /g,\"\"), RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \")) #</td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].Item.replace(/ /g,\"\"), RelationshipHistory[i].Item) #</td>\\r\\n                                # } #\\r\\n\\r\\n                                # if (RelationshipHistory[i].ChangeType === \"Update\") { #\\r\\n                                <td><i class=\"fa fa-exchange text-info\"></i></td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \").replace(/ /g,\"\"), RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \")) #</td>\\r\\n                                <td><strike class=\"text-danger\">#: localizationHelper.localize(RelationshipHistory[i].PreviousItem.replace(/ /g,\"\"), RelationshipHistory[i].PreviousItem) #</strike> <span class=\"text-success\">#: localizationHelper.localize(RelationshipHistory[i].Item.replace(/ /g,\"\"), RelationshipHistory[i].Item) #</span></td>\\r\\n                                # } #\\r\\n\\r\\n                            </tr>\\r\\n                            # } #\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                # } #\\r\\n            </div>\\r\\n        </div>\\r\\n    </li>\\r\\n    # } #\\r\\n    # for (var i = 0; i < ActionLogHistory.length; i++) { #\\r\\n    <li class=\"timeline-inverted\">\\r\\n        <div class=\"timeline-badge info\"><i class=\"fa fa-user\"></i></div>\\r\\n        <div class=\"timeline-panel\">\\r\\n            <div class=\"timeline-heading\">\\r\\n                <h4 class=\"timeline-title\">#: localizationHelper.localize(ActionLogHistory[i].EnteredBy.replace(/ /g,\"\"), ActionLogHistory[i].EnteredBy) #</h4>\\r\\n                <p><small class=\"text-muted\"><i class=\"fa fa-clock-o\"></i> #: kendo.toString(new Date(DateOccurred),\\'g\\') #</small></p>\\r\\n            </div>\\r\\n            <div class=\"timeline-body\">\\r\\n                <h5>#: localizationHelper.localize(ActionLogHistory[i].ActionType.replace(/ /g,\"\"), ActionLogHistory[i].ActionType) #</h5>\\r\\n                <blockquote>#: localizationHelper.localize(ActionLogHistory[i].Description.replace(/ /g,\"\"), ActionLogHistory[i].Description) #</blockquote>\\r\\n            </div>\\r\\n        </div>\\r\\n    </li>\\r\\n    # } #\\r\\n</script>\\r\\n';});\n\n","/**\r\nhistory\r\n**/\r\n\r\ndefine('CustomSpace/Scripts/forms/predefined/history/controller',['require','text!CustomSpace/Scripts/forms/predefined/history/view.html'],function (require) {\r\n    var tpl = require(\"text!CustomSpace/Scripts/forms/predefined/history/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            \r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(node));\r\n\r\n            vm.setWithNoDirty = function(variable, value) {\r\n                var isDirtyState = vm.get(\"isDirty\");\r\n                vm.set(variable, value);\r\n                vm.set(\"isDirty\", isDirtyState);\r\n            };\r\n            \r\n            /*\r\n            if (!_.isUndefined(pageForm.newWI)) { vm.set(\"HistoryButton\", !pageForm.newWI); } //workitem\r\n            if (!_.isUndefined(pageForm.isNew)) { vm.set(\"HistoryButton\", !pageForm.isNew); } //AM \r\n            */\r\n\r\n            templateFrag.find(\"#showHistoryDropDown\").kendoDropDownList({\r\n                dataSource: [{\r\n                    text: pageForm.viewModel.Id + ' - ' + pageForm.viewModel.Title,\r\n                    value: pageForm.viewModel.BaseId\r\n                }],\r\n                select: function(event) {\r\n                    var dataItem = this.dataItem(event.item);\r\n                    vm.view.history.getObjectHistory(dataItem.value, dataItem.text);\r\n                },\r\n                open: function(event) {\r\n                    if(!vm.view.history.dataSourceSet) {\r\n                        event.sender.setDataSource(vm.view.history.getDropDownDataSource());\r\n                        vm.view.history.dataSourceSet = true;\r\n                    }\r\n                }\r\n            }).data(\"kendoDropDownList\");\r\n            \r\n            vm.setWithNoDirty(\"historyLabel\", { type: \"info\", text: \"\" });\r\n            \r\n            $.extend(vm.view, {\r\n                history: {                \r\n                    loadHistory: function() {\r\n                        var kendoDropDownList = $(\"#showHistoryDropDown\").data(\"kendoDropDownList\");\r\n                        vm.view.history.getObjectHistory(kendoDropDownList.value(), kendoDropDownList.text());                  \r\n                    },\r\n                    \r\n                    dropDownDataSet: false,\r\n\r\n                    getDropDownDataSource: function () {\r\n                        var data = [];\r\n                        var getChildren = function (viewModel, prefix) {\r\n                            prefix = prefix || \"\";\r\n                            data.push({\r\n                                text: prefix + viewModel.Id + \" - \" + viewModel.Title,\r\n                                value: viewModel.BaseId\r\n                            });\r\n                            if (viewModel.Activity !== undefined && viewModel.Activity.length > 0) {\r\n                                $.each(viewModel.Activity, function (Key, activity) {\r\n                                    getChildren(activity, prefix + \"    \");\r\n                                });\r\n                            }\r\n                        };\r\n\r\n                        getChildren(pageForm.viewModel);  \r\n\r\n                        return data;\r\n                    },\r\n                    \r\n                    getObjectHistory: function (objectGUID, objectTitle) {\r\n                        vm.setWithNoDirty(\"historyLabel\", { type: \"loading\" });\r\n                        vm.setWithNoDirty(\"showHistory\", false);\r\n\r\n                        $.ajax({\r\n                            url: \"/Search/GetObjectHistory\",\r\n                            data: { id: objectGUID },\r\n                            type: \"GET\",\r\n                            cache: false,\r\n                            success: function (data) {\r\n                                vm.setWithNoDirty(\"historyLabel\", { type: \"info\", text: objectTitle });\r\n                                \r\n                                /*\r\n                                if(vm.view.history.model !== undefined) {\r\n                                    vm.view.history.view.destroy();\r\n                                }*/\r\n                                \r\n                                try {\r\n                                    if(vm.view.history.model === undefined) {\r\n                                        var customhistoryModel = kendo.observable({\r\n                                            nodes: data\r\n                                        });\r\n\r\n                                        vm.view.history.model = customhistoryModel;\r\n\r\n                                        vm.view.history.view = new kendo.View(\r\n                                            \"viewHistoryTemplate\",\r\n                                            {\r\n                                                model: customhistoryModel,\r\n                                                wrap: false,\r\n                                                init: $.noop //empty function\r\n                                            }\r\n                                        );\r\n\r\n                                        vm.view.history.view.render($(\"#historyView\"));\r\n                                    } else {\r\n                                        vm.view.history.model.set(\"nodes\", data);\r\n                                    }\r\n                                }\r\n                                catch (err) {\r\n                                    \r\n                                }\r\n                                \r\n                                vm.setWithNoDirty(\"showHistory\", true);\r\n                            },\r\n                            error: function (data) {\r\n                                vm.setWithNoDirty(\"historyLabel\", { type: \"error\" });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/billableTime/view.html',[],function () { return '<div>\\r\\n    <div data-control=\"billableTime\" data-control-bind=\"AppliesToWorkItem\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    <div class=\"row\" data-bind=\"visible: view.billableTimeController.isVisible\">\\r\\n        <div class=\"col-md-3\">\\r\\n            <div class=\"form-group\" data-cid=\"work-itemBillableTime\" data-cid-propname=\"hours\">\\r\\n                <label for=\"hourNumeric\"><%= localization.hours %></label>\\r\\n                <div class=\"form-control form-control-picker input-sm\">\\r\\n                    <input id=\"hourNumeric\" data-role=\"numerictextbox\"\\r\\n                           data-format=\"n0\"\\r\\n                           data-min=\"0\"\\r\\n                           data-bind=\"value: view.billableTimeController.btHour,\\r\\n                               events: {spin: view.billableTimeController.onHourSpin }\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-3\">\\r\\n            <div class=\"form-group\" data-cid=\"work-itemBillableTime\" data-cid-propname=\"minutes\">\\r\\n                <label for=\"minuteNumeric\"><%= localization.minutes %></label>\\r\\n                <div class=\"form-control form-control-picker input-sm\">\\r\\n                    <input id=\"minuteNumeric\" data-role=\"numerictextbox\"\\r\\n                           data-format=\"n0\"\\r\\n                           data-min=\"0\"\\r\\n                           data-bind=\"value: view.billableTimeController.btMinute,\\r\\n                               events: {spin: view.billableTimeController.onMinuteSpin }\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-6 margin-t30\">\\r\\n            <button class=\"btn btn-primary\" data-role=\"button\" data-bind=\"events: {click: view.billableTimeController.onAddClick}\" data-cid=\"billableTimeAddButton\"><%= localization.Add %> </button>\\r\\n            <button class=\"btn btn-default\" data-role=\"button\" data-bind=\"events: {click: view.billableTimeController.onSubtractClick}\" data-cid=\"billableTimeSubtractButton\"><%= localization.Subtract %> </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-12\">\\r\\n            <div data-control=\"grid\"></div>\\r\\n            <div data-role=\"grid\" class=\"billable-time-grid\"\\r\\n                 data-bind=\"source: view.billableTimeController.dataSource, events:{dataBinding: view.billableTimeController.onDataBinding, dataBound: view.billableTimeController.onDataBound}\"\\r\\n                 data-selectable=\"false\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"false\"\\r\\n                 data-editable=\"{mode: \\'incell\\'}\"\\r\\n                 data-columns=\\'[\\r\\n                { field: \"BillableTime.DisplayName\", title: localization.Analyst, width: \"300px\", attributes: { \"class\": \"grid-highlight-column\" } },\\r\\n                { field: \"BaseId\", title: localization.BaseId, width: \"30px\", hidden: true },\\r\\n                { field: \"LastUpdatedDisplay\", title: localization.LastUpdated, width: \"100px\" },\\r\\n                { field: \"TimeInMinutes\", title: localization.TimeInMinutes, width: \"100px\", attributes: { \"class\": \"pull-right\" } },\\r\\n                <% if ( !Disabled ){ %>\\r\\n                 { width: \"100px\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove}]}\\r\\n                <% } %>\\r\\n            ]\\'>\\r\\n            </div>\\r\\n            <div class=\"pull-right\">\\r\\n                <label data-bind=\"html: view.billableTimeController.btTotalTimeInString\"></label>\\r\\n            </div>\\r\\n        </div>\\r\\n        </div>\\r\\n</div>\\r\\n</div>';});\n\n","/**\r\nbillableTime\r\n**/\r\n\r\ndefine('forms/predefined/billableTime/controller',['require','text!forms/predefined/billableTime/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/billableTime/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                Disabled: node.disabled,\r\n                PropertyName: \"AppliesToWorkItem\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var name = properties.PropertyName;\r\n            var boundArray = _.isUndefined(boundObj[name]) ? boundObj[name] = new kendo.data.ObservableArray([]) : boundObj[name];\r\n            boundArray.LastUpdatedDisplay = \"\";\r\n            \r\n\r\n            vm.view.billableTimeController = new kendo.observable({\r\n                btHour: 0,\r\n                btMinute: 0,\r\n                btTotalTime: 0,\r\n                btTotalTimeInString: \"\",\r\n                onHourSpin: function (e) {\r\n                    vm.view.billableTimeController.set('btHour', e.sender.value());\r\n                },\r\n                onMinuteSpin: function (e) {\r\n                    vm.view.billableTimeController.set('btMinute', e.sender.value());\r\n                },\r\n                dataSource: new kendo.data.DataSource({\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\",\r\n                        model: {\r\n                            id: \"BaseId\",\r\n                        }\r\n                    },\r\n                    data: {\r\n                        Data: boundArray,\r\n                        Total: boundArray.length\r\n                    }\r\n                }),\r\n                onDataBinding: function (e) {\r\n                    $.each(boundArray, function (i, item) {\r\n                        if (_.isUndefined(item.BillableTime)) {\r\n                            item.BillableTime = { BasedId: null, DisplayName: null };\r\n                        }\r\n                        item.LastUpdatedDisplay =\r\n                            !_.isUndefined(item.LastUpdated)\r\n                                ? kendo.toString(new Date(item.LastUpdated), 'g')\r\n                                : null;\r\n                    });\r\n                },\r\n                onDataBound: function (e) {\r\n                    for (var item in e.sender._data) {\r\n                        var dataItem = e.sender._data[item];\r\n                        if (_.isNull(dataItem.BillableTime.BasedId)) {\r\n                            var row = e.sender.tbody.find(\"tr[data-uid='\" + dataItem.uid + \"']\");\r\n                            row.hide();\r\n                        }\r\n                    }\r\n                },\r\n                onAddClick: function (e) {\r\n                    var hour = vm.view.billableTimeController.btHour;\r\n                    var minute = vm.view.billableTimeController.btMinute;\r\n                    var totalTime = vm.view.billableTimeController.btTotalTime;\r\n\r\n                    var isExisting = false;\r\n                    \r\n                    $.each(boundArray, function (i, item) {\r\n                        if (item.BillableTime.BaseId === session.user.Id) {\r\n                            item.set(\"LastUpdated\", new Date().toISOString());\r\n                            item.set(\"TimeInMinutes\", parseInt(item.get(\"TimeInMinutes\")) + (hour * 60) + minute);\r\n                            isExisting = true;\r\n                            return false;\r\n                        }\r\n                    });\r\n                    if (!isExisting) {\r\n                        var newBillableModel = {\r\n                            BillableTime: {\r\n                                BaseId: session.user.Id,\r\n                                DisplayName: session.user.Name\r\n                            },\r\n                            LastUpdated: new Date().toISOString(),\r\n                            LastModified: new Date().toISOString(),\r\n                            TimeInMinutes: (hour * 60) + minute,\r\n                            BasedId: app.lib.newGUID(),\r\n                            Image: app.config.iconPath + app.config.icons[\"comment\"],\r\n                            EnteredDate: new Date().toISOString(),\r\n                            ClassTypeId: \"6645cdbe-78a3-ab81-7de9-638b733214fe\",\r\n                            EnteredBy: session.user.Name,\r\n                            Title: null,\r\n                            Description: null\r\n                        }\r\n                        boundArray.push(newBillableModel);\r\n                    }\r\n                    vm.view.billableTimeController.computeTotalTime();\r\n                    vm.view.billableTimeController.resetTime();\r\n                },\r\n                onSubtractClick: function (e) {\r\n                    var hour = vm.view.billableTimeController.btHour;\r\n                    var minute = vm.view.billableTimeController.btMinute;\r\n                    var totalTime = vm.view.billableTimeController.btTotalTime;\r\n\r\n                    if ((totalTime < (hour * 60)) || (totalTime < minute)) {\r\n                        kendo.ui.ExtAlertDialog.show({\r\n                            title: localization.SubtractTimeTitle,\r\n                            message: localization.SubtractTimeMessage\r\n                        });\r\n                    } else {\r\n                        $.each(boundArray, function (i, item) {\r\n                            if (item.BillableTime.BaseId === session.user.Id) {\r\n                                item.set(\"LastUpdated\", new Date().toISOString());\r\n                                item.set(\"TimeInMinutes\", parseInt(item.get(\"TimeInMinutes\")) - (hour * 60) - minute);\r\n                                isExisting = true;\r\n                            }\r\n                        });\r\n                        vm.view.billableTimeController.computeTotalTime();\r\n                        vm.view.billableTimeController.resetTime();\r\n                    }\r\n                },\r\n                computeTotalTime: function (e) {\r\n                    var itemTotalTime = 0;\r\n                    \r\n                    $.each(boundArray, function (i, item) {\r\n                        if (item.get(\"ClassTypeId\") === \"6645cdbe-78a3-ab81-7de9-638b733214fe\") {\r\n                            itemTotalTime += parseInt(item.get(\"TimeInMinutes\"));\r\n                        }\r\n                    });\r\n\r\n                    if (boundArray.length > 1) {\r\n                        if (vm.view.billableTimeController.get(\"btTotalTime\") != null)\r\n                            itemTotalTime += parseInt(vm.view.billableTimeController.get(\"btTotalTime\"));\r\n                    }\r\n                    \r\n                    vm.view.billableTimeController.btTotalTime = itemTotalTime;\r\n                    vm.view.billableTimeController.btTotalTimeInString =\r\n                        (\"{0} : {1} {2}\")\r\n                        .replace(\"{0}\", localization.Totaltime)\r\n                        .replace(\"{1}\", vm.view.billableTimeController.btTotalTime)\r\n                        .replace(\"{2}\", localization.minutes);\r\n                },\r\n                resetTime: function () {\r\n                    $('#hourNumeric').data(\"kendoNumericTextBox\").value(0);\r\n                    vm.view.billableTimeController.set('btHour', 0);\r\n                    $('#minuteNumeric').data(\"kendoNumericTextBox\").value(0);\r\n                    vm.view.billableTimeController.set('btMinute', 0);\r\n                },\r\n                isVisible: !vm.isDisabled\r\n            });\r\n            vm.view.billableTimeController.computeTotalTime();\r\n            var view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/knowledgeArticle/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileHTMLGridTemplate\" class=\"mobile-grid\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">${KnowledgeArticleID}: ${Title}</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                # if ( Category && Category.length > 0 ){ #\\r\\n                <p>#: localizationHelper.localize(\"Category\") #: #: Category # </p>\\r\\n                # } #\\r\\n                # if ( Type && Type.length > 0 ){ #\\r\\n                <p>#: localizationHelper.localize(\"Type\") #: #: Type # </p>\\r\\n                # } #\\r\\n            </div>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <a class=\"k-delete-button\">#: localization.Remove #</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 file-attachments\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>>\\r\\n    <div>\\r\\n        <button class=\"btn btn-primary\" data-role=\"button\" data-bind=\"events:{click: view.knowledgeArticleModel.addClick}\"><%= localization.Add %> </button>\\r\\n    </div>\\r\\n    \\r\\n    <% if ( IsMobileView == false ){ %>\\r\\n        <div data-role=\"grid\"\\r\\n            data-bind=\"source: RelatedHTMLKB, events:{remove: view.knowledgeArticleModel.removeRelatedKB}\"\\r\\n            data-selectable=\"true\"\\r\\n            data-sortable=\"true\"\\r\\n            data-filterable=\"true\"\\r\\n            data-scrollable=\"false\"\\r\\n            data-column-menu=\"true\"\\r\\n            data-pageable=\"false\"\\r\\n            data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n            data-columns=\\'[\\r\\n                { field: \"KnowledgeArticleID\", title: localization.Id, width: \"10%\", attributes:{class:\"grid-highlight-column\"}},\\r\\n                { field: \"Title\", title: localization.Title, width: \"50%\", attributes:{class:\"grid-highlight-column\"}},\\r\\n                { field: \"Category\", title: localization.Category, width: \"20%\" },\\r\\n                { field: \"Type\", title: localization.Type, width: \"20%\" },\\r\\n                { width: \"4%\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove }] }\\r\\n                ]\\'>\\r\\n        </div>\\r\\n    <% } %>\\r\\n    <% if ( IsMobileView ){ %>\\r\\n        <div data-role=\"listview\" data-template=\"mobileHTMLGridTemplate\" data-bind=\"source: RelatedHTMLKB, events: {remove: view.knowledgeArticleModel.removeRelatedKB}\" class=\"mobile-grid-parent\"></div>\\r\\n    <% } %>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/predefined/knowledgeArticle/popup.html',[],function () { return '<div class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-5\">\\r\\n                    <div class=\"form-group\">\\r\\n                        <label><%= localization.SearchText %></label>\\r\\n                        <span class=\"k-textbox k-space-right\">\\r\\n                            <input type=\"text\" data-bind=\"value: searchText\" />\\r\\n                            <span data-bind=\"events:{click: search}\" class=\"fa fa-search cursor-pointer\">&nbsp;</span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <label><%= localization.SelectObjects %></label>\\r\\n\\r\\n            <div class=\"objectPicker-container\">\\r\\n                <div class=\"k-widget k-grid k-secondary\"\\r\\n                     data-role=\"grid\"\\r\\n                     data-bind=\"source: dataSource\"\\r\\n                     data-selectable=\"multiple, row\"\\r\\n                     data-sortable=\"true\"\\r\\n                     data-filterable=\"true\"\\r\\n                     data-scrollable=\"false\"\\r\\n                     data-column-menu=\"true\"\\r\\n                     data-pageable=\"true\"\\r\\n                     data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n                     data-columns=\\'[\\r\\n                { field: \"ArticleId\", title: localization.Id, width: \"10%\"},\\r\\n                { field: \"Title\", title: localization.Title, width: \"90%\"}\\r\\n                ]\\'>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"objectPicker-actions\">\\r\\n                <button data-role=\"button\" data-bind=\"events:{click: add}\" class=\"btn btn-primary k-button\"><%= localization.Add %> </button>\\r\\n                <button data-role=\"button\" data-bind=\"events:{click: remove}\" class=\"btn btn-danger k-button\"><%= localization.Remove %> </button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"k-widget k-grid k-secondary objectPicker-grid2-container\"\\r\\n                 data-role=\"grid\"\\r\\n                 data-bind=\"source: selectedItems\"\\r\\n                 data-selectable=\"multiple, row\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"true\"\\r\\n                 data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n                 data-columns=\\'[\\r\\n                { field: \"ArticleId\", title: localization.Id, width: \"10%\"},\\r\\n                { field: \"Title\", title: localization.Title, width: \"90%\"}\\r\\n                ]\\'>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n';});\n\n","/**\r\nknowledgeArticle\r\n**/\r\n\r\ndefine('forms/predefined/knowledgeArticle/controller',['require','text!forms/predefined/knowledgeArticle/view.html','text!forms/predefined/knowledgeArticle/popup.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/knowledgeArticle/view.html\");\r\n    var popupTpl = require(\"text!forms/predefined/knowledgeArticle/popup.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var properties = {\r\n                Disabled: false,\r\n                IsMobileView: app.isMobileDevice()\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //build the template for the popup window\r\n            var built = _.template(popupTpl);\r\n            var popupView = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in popup window\r\n            callback(popupView.render());\r\n\r\n            //view model\r\n            vm.view.knowledgeArticleModel = kendo.observable({\r\n                addClick: function (e) {\r\n                    var popupWindow= popupView.element; \r\n                    win = popupWindow.kendoCiresonWindow({\r\n                        title: localization.SelectObject,\r\n                        width: 750,\r\n                        height: 710,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the popup element\r\n                    var modalViewModel = new kendo.observable({\r\n                        dataSource: new kendo.data.DataSource({\r\n                            transport: {\r\n                                read: {\r\n                                    url: \"/api/V3/KnowledgeBase/GetHTMLArticles\",\r\n                                    dataType: \"json\",\r\n                                    data: { userId: session.user.Id },\r\n                                    cache: false\r\n                                }\r\n                            },\r\n                            schema: {\r\n                                model: {\r\n                                    fields: {\r\n                                        ArticleId: { type: \"string\" },\r\n                                        Title: { type: \"string\" },\r\n                                        Category: { type: \"string\" },\r\n                                        Type: { type: \"string\" }\r\n                                    }\r\n                                }\r\n                            },\r\n                            pageSize: 5,\r\n                        }),\r\n                        selectedItems: new kendo.data.ObservableArray([]),\r\n                        searchText:\"\",\r\n                        search: function(e){\r\n                            var val = this.get(\"searchText\");\r\n                            this.dataSource.read();\r\n                            this.dataSource.filter({\r\n                                logic: \"or\",\r\n                                filters: [\r\n                                    {\r\n                                        field: \"ArticleId\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Title\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Category\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Type\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    }\r\n                                ]\r\n                            });\r\n                        },\r\n                        add: function (e) {\r\n                            var gridEle = popupWindow.find('[data-role=\"grid\"]').first();\r\n                            var grid = gridEle.data(\"kendoGrid\");\r\n                            var selectedRows = grid.select();\r\n\r\n                            for (var i = 0; i < selectedRows.length; i++) {\r\n                                var dataItem = grid.dataItem(selectedRows[i]);\r\n                                if (dataItem) {\r\n                                    //check first if article is already on the selected list before adding it to the second grid\r\n                                    var articleIds = _.pluck(this.selectedItems, \"ArticleId\");\r\n                                    var isAdded = _.contains(articleIds, dataItem.ArticleId);\r\n\r\n                                    if (!isAdded) {\r\n                                        this.selectedItems.push(dataItem);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var selectedGridEle = popupWindow.find('[data-role=\"grid\"]').last();\r\n                            selectedGridEle.data(\"kendoGrid\").dataSource.query({ page: 1, pageSize: 5 });\r\n                        },\r\n                        remove: function (e) {\r\n                            var gridEle = popupWindow.find('[data-role=\"grid\"]').last();\r\n                            var grid = gridEle.data(\"kendoGrid\");\r\n                            var selectedRows = grid.select();\r\n\r\n                            for (var i = 0; i < selectedRows.length; i++) {\r\n                                var dataItem = grid.dataItem(selectedRows[i]);\r\n                                this.selectedItems.pop(dataItem);\r\n                            }\r\n                        },\r\n                        save: function (e) {\r\n                            var relatedHTMLKB = !_.isUndefined(vm.get(\"RelatedHTMLKB\")) ? vm.get(\"RelatedHTMLKB\") : [];\r\n                            _.each(this.selectedItems, function (item) {\r\n                                relatedHTMLKB.push({\r\n                                    KnowledgeArticleID: item.ArticleId,\r\n                                    WorkItemID: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.BaseId : null,\r\n                                    WorkItemId: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.Id : null,\r\n                                    AssetID: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.BaseId : null,\r\n                                    AssetId: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.Id : null,\r\n                                    Title: item.Title,\r\n                                    Category: item.Category,\r\n                                    Type: item.Type\r\n                                });\r\n                            });\r\n\r\n                            vm.set(\"RelatedHTMLKB\", relatedHTMLKB);\r\n\r\n                            win.close();\r\n                        },\r\n                        cancel: function (e) {\r\n                            win.close();\r\n                        }\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(popupWindow, modalViewModel);\r\n\r\n                    popupWindow.removeClass('hide');\r\n                    popupWindow.show();\r\n\r\n                    win.open();\r\n                },\r\n                bindRowClick: function (e) {\r\n                    var gridEle = view.element.find('[data-role=\"grid\"]').first();\r\n                    gridEle.on(\"click\", \"td\", function (e) {\r\n                        var highlightedColumn = $(e.currentTarget).hasClass(\"grid-highlight-column\");\r\n                        if (!highlightedColumn) { return }\r\n\r\n                        var kendoGrid = gridEle.data(\"kendoGrid\");\r\n                        var selectedItem = kendoGrid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n\r\n                        //open kb on a new tab when clicked\r\n                        window.open(\"/KnowledgeBase/View/\" + selectedItem.KnowledgeArticleID, '_blank');\r\n                    });\r\n\r\n\r\n                    if (!app.isMobile())\r\n                    {\r\n                        var grid = gridEle.data(\"kendoGrid\");\r\n\r\n                        grid.dataSource.originalFilter = grid.dataSource.filter;\r\n\r\n                        // Replace the original filter function.\r\n                        grid.dataSource.filter = function () {\r\n\r\n                            // Call the original filter function.\r\n                            var result = grid.dataSource.originalFilter.apply(this, arguments);\r\n\r\n                            // If a column is about to be filtered, then raise a new \"filtering\" event.\r\n                            if (arguments.length > 0) {\r\n                                this.trigger(\"filterApplied\", arguments);\r\n                            }\r\n\r\n                            return result;\r\n                        }\r\n\r\n                        grid.dataSource.bind(\"filterApplied\", function () {\r\n\r\n                            $.each($(gridEle).find(\"th a.k-header-column-menu i\"), function () {\r\n                                $(this).remove();\r\n                            });\r\n\r\n                            if (grid.dataSource.filter()) {\r\n\r\n                                var filters = grid.dataSource.filter().filters || [];\r\n                                var dsFilters = [];\r\n                                for (var i in filters) {\r\n                                    if (filters[i].filters) {\r\n                                        var innerFilters = filters[i].filters;\r\n                                        for (var x in innerFilters) {\r\n                                            dsFilters.push(innerFilters[x]);\r\n                                        }\r\n                                    } else {\r\n                                        dsFilters.push(filters[i]);\r\n                                    }\r\n                                }\r\n\r\n                                dsFilters = _.uniq(dsFilters, function (el) { return el.field; });\r\n\r\n                                for (var i in dsFilters) {\r\n                                    $(gridEle).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\r\n                                }\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                    },\r\n                    \r\n                getAllRelatedWorkItems: function (e) {\r\n                    //this will hold all the related knowledge article data\r\n                    var relatedHTMLKB = !_.isUndefined(vm.get(\"RelatedHTMLKB\")) ? vm.get(\"RelatedHTMLKB\") : new kendo.data.ObservableArray([]);\r\n\r\n                    var url = '';\r\n\r\n                    if (vm.ClassName.indexOf(\"WorkItem\") != -1)\r\n                        url = app.lib.addUrlParam(\"/api/V3/Article/GetArticlesRelatedToWorkItem\", \"workItemId\", vm.BaseId);\r\n                    else if (vm.ClassName.indexOf(\"AssetManagement\") != -1)\r\n                        url = app.lib.addUrlParam(\"/api/V3/Article/GetArticlesRelatedToAsset\", \"assetId\", vm.BaseId);\r\n\r\n                    $.ajax({\r\n                        url: url,\r\n                        dataType: 'json',\r\n                        type: \"POST\",\r\n                        success: function (data) {\r\n                            //set the value\r\n                            _.each(data, function (item) {\r\n                                relatedHTMLKB.push({\r\n                                    KnowledgeArticleID: item.ArticleID,\r\n                                    WorkItemID: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.BaseId : null,\r\n                                    WorkItemId: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.Id : null,\r\n                                    AssetID: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.BaseId : null,\r\n                                    AssetId: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.Id : null,\r\n                                    Title: item.Title,\r\n                                    Category: item.CategoryName,\r\n                                    Type: item.TypeName\r\n                                });\r\n                            });\r\n\r\n                            //to avoid triggering isDirty, update viewModel only if there is/are related KB\r\n                            if (relatedHTMLKB.length > 0) {\r\n                                vm.set(\"RelatedHTMLKB\", relatedHTMLKB);\r\n                            }\r\n                        },\r\n                        error: function (e) {\r\n                            //log error and display generic error tesxt\r\n                            app.lib.log(e.errorThrown + ' - When retrieving data from /api/V3/Article/GetArticlesRelatedToWorkItem');\r\n                        }\r\n                    });\r\n                },\r\n                removeRelatedKB: function (e) {\r\n                    //this will hold all the to be deleted related knowledge article \r\n                    var removeHTMLKB = !_.isUndefined(vm.get(\"RemoveRelatedHTMLKB\")) ? vm.get(\"RemoveRelatedHTMLKB\") : new kendo.data.ObservableArray([]);\r\n                    removeHTMLKB.push(e.model);\r\n                    vm.set(\"RemoveRelatedHTMLKB\", removeHTMLKB);\r\n                }\r\n            });\r\n\r\n            //build it\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false, model: vm.view.knowledgeArticleModel });\r\n            callback(view.render());\r\n\r\n            vm.view.knowledgeArticleModel.getAllRelatedWorkItems();\r\n            vm.view.knowledgeArticleModel.bindRowClick();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/fields/display/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <% if ( !HideLabel ){ %>\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\"></label>\\r\\n    <% } %>\\r\\n    <div class=\"display-field\" data-bind=\"text: <%= PropertyName %>\"></div>\\r\\n</div>';});\n\n","/**\r\nDISPLAY\r\n**/\r\n\r\ndefine('forms/fields/display/controller',['require','text!forms/fields/display/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/display/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                HideLabel: false\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/spacer/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nSPACER\r\n**/\r\n\r\ndefine('forms/fields/spacer/controller',['require','text!forms/fields/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/spacer/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nINT32\r\n**/\r\n\r\ndefine('forms/fields/int/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            var boundObj = node.vm;\r\n            //make sure we have all the vals set\r\n            \r\n            var properties = {\r\n                Required: node.Required,\r\n                DecimalPlaces: 0,\r\n                MinValue: -2147483648,\r\n                MaxValue: 2147483648,\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var templateFrag = $(built(properties));\r\n            new Control(templateFrag.find(\"[data-control='numericTextBox']\"), boundObj, node);\r\n\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n\r\n    var Control = function (targetEle, boundObj, node) {\r\n\r\n        //This will be used for mobile because the numeric event wont triggering when you type in the value.\r\n        if (app.isMobile()) {\r\n            var editor = targetEle.data();\r\n            setTimeout(function () {\r\n                var number = targetEle.parent().find(\"input[type='number']\");\r\n                number.change(function () {\r\n                    boundObj.set(node.PropertyName, number.val());\r\n                });\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nDECIMAL\r\n**/\r\n\r\ndefine('forms/fields/decimal/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                //Required: false,\r\n                DecimalPlaces: 20,\r\n                MinValue: '',\r\n                MaxValue: '',\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nDOUBLE\r\n**/\r\n\r\ndefine('forms/fields/double/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                //Required: false,\r\n                DecimalPlaces: 19,\r\n                MinValue: '',\r\n                MaxValue: '',\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Format:''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/datetime/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <input name=\"<%= PropertyName %>\"\\r\\n           data-control=\"dateTimePicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-from=\"<%= FromFilter %>\"\\r\\n           data-control-to=\"<%= ToFilter %>\"\\r\\n           data-control-from-relative=\"<%= FromRelative %>\"\\r\\n           data-control-to-relative=\"<%= ToRelative %>\"\\r\\n    \\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n\\r\\n    >\\r\\n</div>';});\n\n","/**\r\nDATETIME\r\n**/\r\n\r\ndefine('forms/fields/datetime/controller',['require','text!forms/fields/datetime/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/datetime/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                FromFilter: '',\r\n                ToFilter: '',\r\n                FromRelative: '',\r\n                ToRelative: '',\r\n                Disabled: node.disabled,\r\n                Required: node.Required\r\n            };\r\n\r\n            //set from filter\r\n            if (typeof node.MinValue == \"string\") {\r\n                if (node.MinValue.indexOf(\":\") != -1) {\r\n                    properties.FromRelative = node.MinValue;\r\n                } else {\r\n                    properties.FromFilter = node.MinValue;\r\n                }\r\n            }\r\n\r\n            //set to filter\r\n            if (typeof node.MaxValue == \"string\") {\r\n                if (node.MaxValue.indexOf(\":\") != -1) {\r\n                    properties.ToRelative = node.MaxValue;\r\n                 } else {\r\n                    properties.ToFilter = node.MaxValue;\r\n                 }\r\n            }\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/userPicker/view.html',[],function () { return '<div class=\"form-group\" data-cid=\"userpicker\" data-cid-propname=\"<%= PropertyName %>\"\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>>\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input class=\"input-userpicker\"\\r\\n           data-control=\"userPicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-extra=\"<%= ExtraProps %>\"\\r\\n           data-control-delay=\"<%= Delay %>\"\\r\\n           data-control-minlength=\"<%= MinLength %>\"\\r\\n           data-control-filterbyanalyst=\"<%= FilterByAnalyst%>\"\\r\\n           data-control-maxnumberofresults=\"<%= MaxNumberOfResults%>\"\\r\\n           type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n            <% if ( Disabled ){ %>\\r\\n            disabled\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\nuserPicker\n**/\n\ndefine('forms/fields/userPicker/controller',['require','text!forms/fields/userPicker/view.html','forms/popups/userPickerPopup/controller'],function (require) {\n    var tpl = require(\"text!forms/fields/userPicker/view.html\");\n    var userPickerPopup = require(\"forms/popups/userPickerPopup/controller\");\n    var definition = {\n        template: tpl,\n        build: function (vm, node, callback) {\n            if (_.isUndefined(node.vm)) {\n                boundObj = node;\n                name = node.PropertyName;\n            } else {\n                boundObj = node.vm;\n                name = node.PropertyName;\n            }\n            // add default values\n            var properties = {\n                Required: node.Required, // TODO: yo, this is stupid. fix it.\n                Disabled: node.disabled, // TODO: yo, this is stupid. fix it.\n                ExtraProps: false,\n                Delay: 200,\n                MinLength: 3,\n                FilterByAnalyst: false,\n                MaxNumberOfResults: 10\n            }\n            $.extend(true, properties, node);\n            var built = _.template(tpl);\n            var templateFrag = $(built(properties));\n            var popupWindow = userPickerPopup.getPopup();\n\n            // comment out next two lines to go back to using app.controls\n            var objectPicker = new Control(templateFrag.find(\"[data-control='userPicker']\"), boundObj, name, popupWindow);\n            templateFrag.find(\"[data-control='userPicker']\").attr(\"data-control\", \"userPickerBound\");\n\n            callback(templateFrag);\n        }\n    }\n\n    // NAME/ID pair data model\n    // used to map name/id to server or viewModel\n    // Generic getter and setters:  name,id\n    var NameIdModel = function (nameProp, idProp) {\n        var self = this;\n        this.serverNameProp = nameProp;\n        this.serverIdProp = idProp;\n        var data = {};\n        data[self.serverNameProp];\n        data[self.serverIdProp];\n        this.set = {\n            name: function (val) { data[self.serverNameProp] = val; },\n            id: function (val) { data[self.serverIdProp] = val; }\n        }\n        this.setObj = function (name, id) {\n            self.set.name(name); self.set.id(id);\n        }\n        this.setFromObj = function (obj) {\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\n        }\n        this.get = {\n            name: function () { return data[self.serverNameProp]; },\n            id: function () { return data[self.serverIdProp]; }\n        }\n        this.getFromObj = function (obj) {\n            self.setFromObj(obj);\n            return data;\n        }\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\n        this.getGenericFromObj = function (obj) {\n            this.setFromObj(obj);\n            return {\n                name: self.get.name(),\n                id: self.get.id()\n            }\n        }\n\n    }\n    // CONTROL\n    var Control = function (targetEle, boundObj, name, popupWindow) {\n        // control parameters\n        var targetEle = targetEle;\n        var extraProps = targetEle.attr(\"data-control-extra\");\n        var delay = targetEle.attr(\"data-control-delay\");\n        var minLength = targetEle.attr(\"data-control-minlength\");\n        var filterByAnalyst = targetEle.attr(\"data-control-filterByAnalyst\");\n        var maxNumberOfResults = targetEle.attr(\"data-control-maxNumberOfResults\");\n        var autoCompleteUrl = \"/api/V3/User/GetUserList\";\n        var detailsPopupUrl = \"/Search/ObjectViewer\";\n        var objectExtraUrl = \"/Search/GetObjectPropertiesByProjection?projectionId=490ab845-b14c-1d91-c39f-bb9e8a350933&id=\";\n        var boundObj = boundObj;\n        var propName = name;\n        var popupWindow = popupWindow;\n\n        // viewModel getters/setters\n        var _textProp = \"DisplayName\";\n        var _idProp = \"BaseId\";\n        var _model = new NameIdModel(_textProp, _idProp);\n        app.lib.forceKendoProp(boundObj, propName, kendo.observable(_model.getObj(null, null)));\n        var get = {\n            obj: function () { return boundObj[propName]; },\n            name: function () { return boundObj[propName][_textProp]; },\n            id: function () { return boundObj[propName][_idProp]; }\n        }\n        var set = {\n            obj: function (name, id) {\n                boundObj[propName].set(_idProp, id);\n                boundObj[propName].set(_textProp, name);\n            }\n        }\n\n        // private properties\n        var helperBlock;\n        var autoComplete;\n\n\n        /*******************/\n        /*** CONSTRUCT *****/\n        /*******************/\n\n        var __construct = function () {\n            createHelperBlock();\n            createAutocomplete();\n            refreshDisplayValues();\n            bindEvents();\n        }\n\n        /************************/\n        /*** CONTROL EVENTS *****/\n        /************************/\n\n        var bindEvents = function () {\n            boundObj[name].bind(\"change\", function () {\n                refreshDisplayValues();\n            });\n        }\n\n        /******************************/\n        /*** CONTROL USER ACTIONS *****/\n        /******************************/\n\n        var onAutoCompleteValueChanged = function (obj) {\n            if (obj) {\n                set.obj(obj.name, obj.id);\n            } else {\n                set.obj(null, null);\n            }\n        }\n        var onSearchIconClick = function () {\n            popupWindow.setSaveCallback(function (obj) {\n                set.obj(obj.name, obj.id);\n            });\n            popupWindow.vm.filterByAnalyst = filterByAnalyst;\n            popupWindow.open();\n        }\n\n        /*************************/\n        /*** CONTROL METHODS *****/\n        /*************************/\n\n        //do we have a model set in the bound object\n        //not sure what the get object is -jk\n        var isModelSet = function () {\n            return (boundObj && boundObj[name] && get.name() && get.id()) ? true : false;\n        }\n\n        //lets check for boundObject that is nulled\n        var isModelSetNulled = function () {\n            return (boundObj && boundObj[name] && _.isNull(get.name()) && _.isNull(get.id()) ) ? true : false;\n        }\n\n        var hasExtraProps = function () {\n            return (extraProps && extraProps != \"false\");\n        }\n        var createHelperBlock = function () {\n            if (hasExtraProps()) {\n                helperBlock = new HelperBlock({\n                    url: objectExtraUrl,\n                    container: targetEle.parent(),\n                    props: extraProps.split(\",\")\n                });\n            }\n        }\n        var createAutocomplete = function () {\n            autoComplete = new AutoComplete({\n                url: autoCompleteUrl,\n                detailsUrl: detailsPopupUrl,\n                targetEle: targetEle,\n                delay: delay,\n                minLength: minLength,\n                callback: onAutoCompleteValueChanged,\n                maxNumberOfResults: maxNumberOfResults\n            });\n        }\n        var refreshDisplayValues = function () {\n\n            if (isModelSet()) {\n                if (helperBlock) {\n                    helperBlock.setDisplay(get.id());\n                }\n                if (autoComplete) {\n                    autoComplete.setValue(get.name(), get.id());\n                }\n            }\n            /**Added to fix Task/BUG 2148: When using the Assign to Analyst by group task (where there is no assigned to user) in the portal, \n            then select an analyst and click \"cancel\" the analyst still appears on the form.**/\n            else if (isModelSetNulled()) {\n                if (autoComplete) {\n                    autoComplete.setValue(\"\", null);\n                }\n            }\n        }\n\n        /****************************/\n        /*** CONTROL SUBCLASSES *****/\n        /****************************/\n\n        /* -- HelperBlock --\n            // params\n                settings = {\n                    url: \"\", // url to get object extra props\n                    container: jqEle, // where helpblock will get appended\n                    props: [], // array of property names to be displayed in order\n                    delay: \"\", //numeric delay in ms before search is performed\n                    minLength: \"\", //numeric length of chars before search is performed\n                }\n            // public methods\n                obj.setDisplay(objectId) /// goes to server then displays helper data for that objectId\n        */\n        var HelperBlock = function (settings) {\n            var self = this;\n            var html;\n            var _vm;\n            var container = settings.container;\n            var url = settings.url;\n            var props = settings.props;\n\n            // CONSTRUCT\n\n            var __construct = function () {\n                createHtml();\n                createViewModel();\n                bindEvents();\n                self.setDisplay = _vm.getUserObjectData;\n            }\n\n            // EVENTS\n\n            var bindEvents = function () {\n                _vm.bind(\"change\", function (e) {\n                    if (e.field == \"extraPropText\") {\n                        _vm.set(\"isVisible\", (_vm.extraPropText.length > 0));\n                    } else if (e.field == \"data\") {\n                        setExtraPropsDisplay();\n                    }\n                });\n            }\n\n            // ACTIONS\n\n            // METHODS\n\n            var createHtml = function () {\n                // note: move this to definition.html\n                html = $('<span>', { \"class\": \"help-block\", \"data-bind\": \"text: extraPropText, visible: isVisible\" });\n                setTimeout(function () {\n                    container.append(html);\n                }, 100);\n            }\n            var createViewModel = function () {\n                _vm = kendo.observable({\n                    isVisible: false,\n                    extraPropText: \"\",\n                    data: {},\n                    getUserObjectData: getUserObjectData\n                });\n                kendo.bind(html, _vm);\n            }\n\n            var getUserObjectData = function (objectId) {\n                $.get(url + objectId, function (data) {\n                    if (data && data[0]) {\n                        data = data[0];\n                    }\n                    _vm.set(\"data\", data);\n                    setExtraPropsDisplay();\n                });\n            }\n\n            var getDisplayName = function (obj) {\n                var displayName = \"\";\n                if (!_.isUndefined(obj.Name) && !_.isNull(obj.Name)) {\n                    displayName = obj.Name;\n                }\n                if (!_.isUndefined(obj.DisplayName) && !_.isNull(obj.DisplayName)) {\n                    displayName = obj.DisplayName;\n                }\n                return displayName;\n            }\n\n            var setExtraPropsDisplay = function () {\n                var str = \"\";\n                $.each(props, function (i, item) {\n                    var dataItem = _vm.data[item];\n                    if (dataItem) {\n                        str += (_.isObject(dataItem) ? getDisplayName(dataItem) : dataItem) + \", \";\n                    }\n                });\n                _vm.set(\"extraPropText\", str.substring(0, str.length - 2));\n            }\n\n            // END\n\n            __construct();\n        }\n\n        /* -- Autocomplete --\n            // params\n                settings = {\n                    url: \"\", // url for datasource\n                    targetEle: jqEle, // element to apply autocomplete\n                    callback: function(obj){} // fired when object is change via autocomplete, provides selected object or null values\n                }\n            // public methods\n        */\n        var AutoComplete = function (settings) {\n            // settings\n            var self = this;\n            var targetEle = settings.targetEle;\n            var url = settings.url;\n            var detailsUrl = settings.detailsUrl;\n            var callback = settings.callback; // \n            var delay = settings.delay; // \n            var minLength = settings.minLength; // \n            var placeHolderText = (targetEle.attr('disabled')) ? \"\" : localization.SearchButton;\n\n            // private params\n            var autoComplete;\n            var dataSource;\n            var focusedItemIndex = false\n            var searchBtn;\n            var detailsBtn;\n            var detailsPopupEle;\n            var detailsPopup;\n            var _textProp = \"Name\";\n            var _idProp = \"Id\";\n            var _model = new NameIdModel(_textProp, _idProp);\n            var hasTCCURL = !_.isNull(session.consoleSetting.TrueControlCenterURL) && (session.consoleSetting.TrueControlCenterURL != \"\");\n\n            // CONSTRUCT\n\n            var __construct = function () {\n                createKendoDataSource();\n                createKendoAutoComplete();\n                createSearchButton();\n                hasTCCURL ? createTCCDetailsButton() : createDetailsButton();\n                createDetailsPopup();\n                bindEvents();\n                self.setValue = setValue;\n            }\n\n            // EVENTS\n\n            var bindEvents = function () {\n                autoComplete.bind(\"select\", function (e) {\n                    var obj = this.dataItem(e.item.index());\n                    callback(_model.getGenericFromObj(obj));\n                });\n                autoComplete.bind(\"change\", function (e) {\n                    validateAutoCompleteValue();\n                    callback(_model.getGenericFromObj(getDataSourceMatch(autoComplete.value())));\n                });\n                autoComplete.bind(\"dataBound\", function (e) {\n                    e.sender.ul.find(\"li\").first().addClass(\"k-state-hover\");\n                });\n                targetEle.on(\"keyup\", function (e) {\n                    if (e.which == 40 && !autoComplete.ul.is(\":visible\")) { //down arrow\n                        autoComplete.search(autoComplete.value());\n                        validateAutoCompleteValue();\n                    }\n                    else if (e.which != 13 && e.which != 9) { //enter\n                        focusedItemIndex = getFocusedIndex();\n                        validateAutoCompleteValue();\n                    }\n\n                });\n                targetEle.on(\"keydown\", function (e) {\n                    if (e.which == 13) {\n                        // enter click select first match in dropdown or focused\n                        var children = autoComplete.ul.children();\n                        if (children.length && autoComplete.ul.is(\":visible\")) {\n                            var index = (focusedItemIndex !== false) ? focusedItemIndex : 0;\n                            autoComplete.select(autoComplete.ul.children().eq(index));\n                            validateAutoCompleteValue();\n                        } else { //if enter is hit and we have no child do a search\n                            autoComplete.search(autoComplete.value());\n                        }\n                    }\n                });\n\n                //we need blur so we can handle tabbing out\n                targetEle.on(\"blur\", function (e) {\n                    focusedItemIndex = getFocusedIndex();\n                    validateAutoCompleteValue(true);\n                });\n\n                //handle copy-paste event\n                targetEle.on(\"input propertychange\", function (e) {\n                    //perform autocomplete search if search box is not empty\n                    if (e.currentTarget.value != \"\") {\n                        autoComplete.search(e.currentTarget.value);\n                        validateAutoCompleteValue();\n                    }\n                });\n\n                detailsPopup.bind(\"close\", function () {\n                    detailsPopupEle.find(\".k-content\").html('');\n                });\n                searchBtn.click(onSearchIconClick);\n                detailsBtn.click(onDetailsBtnClick);\n            }\n\n            // ACTIONS\n\n            var onDetailsBtnClick = function (e) {\n                hasTCCURL ? e.stopPropagation() : openModal();\n            }\n\n            var openSlideout = function (e) {\n                var userObj = { BaseId: _model.get.id(), Name: _model.get.name() }\n                var src = app.slideOutNav.getTCCSourceURL(userObj, \"user\");\n                var options = {\r\n                    url: src,\r\n                    tooltip: localization.UserManagement\r\n                }\n                app.slideOutNav.show(options);\n            }\n\n            var openModal = function (e) {\n                detailsPopup.refresh({\n                    url: detailsUrl,\n                    data: { id: _model.get.id() }\n                });\n                detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\n                detailsPopup.title(_model.get.name()).center().open();\n            }\n\n            // METHODS\n\n            var createSearchButton = function () {\n                searchBtn = $(\"<div>\", { \"class\": \"searchIcon\", \"data-control-action\": \"userPickerWindow\" });\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\n                var a = $(\"<i>\", { \"class\": \"fa fa-search cursor-pointer \" + iconColor })\n                searchBtn.append(a);\n                //don't want to  show search icon if field is disabled\n                if (!targetEle.attr('disabled') || app.isMobileDevice()) {\n                    searchBtn.insertAfter(targetEle);\n                }\n            }\n            var createDetailsButton = function () {\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\n                detailsBtn = $(\"<i>\", { \"class\": \"fa fa-info-circle cursor-pointer info-icon \" + iconColor });\n                detailsBtn.insertBefore(targetEle);\n                detailsBtn.hide();\n            }\n\n            var createTCCDetailsButton = function () {\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\n                detailsBtn = $(\"<ul>\", { \"class\": \"menu-usr-mgt\" });\n                detailsBtn.insertBefore(targetEle);\n                detailsBtn.hide();\n\n                detailsBtn.kendoMenu({\n                    dataSource: [\n                        {\n                            text: \"<i class='fa fa-info-circle cursor-pointer'></i>\",\n                            encoded: false,\n                            items: [\n                                {\n                                    text: localization.UserManagement,\n                                    imageUrl: \"/Content/Images/Icons/Other/control-center-launcher.png\",\n                                    imageAttr: {\n                                        height: '16px',\n                                        width: '16px'\n                                    },\n                                    attr: {\n                                        custom: 'tcc' //custom attribute holds the link type\n                                    }\n                                },\n                                {\n                                    text: \"<i class='fa fa-info-circle cursor-pointer' style='margin: -2px 7px 0 -3px;'></i>\"+localization.AdditionalDetails,\n                                    encoded: false,\n                                    attr: {\n                                        custom: 'info' //custom attribute holds the link type\n                                    }\n                                }\n                            ]\n                        }\n                    ],\n                    select: function (e) {\n                        if (!_.isUndefined(e.item.attributes[\"custom\"])) {\n                            var type = e.item.attributes[\"custom\"].value;\n                            (type == \"tcc\") ? openSlideout() : openModal();\n                        }\n                    },\n                    openOnClick: true\n                });\n            }\n\n            var createKendoDataSource = function () {\n                dataSource = new kendo.data.DataSource({\n                    transport: {\n                        read: {\n                            url: url,\n                            data: {\n                                userFilter: function () {\n                                    return autoComplete.value();\n                                },\n                                filterByAnalyst: filterByAnalyst,\n                                maxNumberOfResults: settings.maxNumberOfResults\n                            }\n                        }\n                    },\n                    serverFiltering: true\n                });\n            }\n            var createKendoAutoComplete = function () {\n                autoComplete = targetEle.kendoAutoComplete({\n                    dataTextField: _textProp,\n                    suggest: true,\n                    placeholder: placeHolderText + \"...\",\n                    valuePrimitive: false,\n                    dataSource: dataSource,\n                    delay: delay,\n                    minLength: minLength,\n                    enable: (targetEle.attr('disabled')) ? false : true,\n                    clearButton: false\n                }).data(\"kendoAutoComplete\");\n\n            }\n            var createDetailsPopup = function () {\n                detailsPopupEle = $(\"<div>\");\n                detailsPopupEle.appendTo(\"body\");\n                detailsPopup = detailsPopupEle.kendoCiresonWindow({\n                    title: \"\",\n                    width: 550,\n                    height: 500,\n                    actions: [\"Close\"]\n                }).data(\"kendoWindow\");\n            }\n\n            var validateAutoCompleteValue = function (blurred) {\n                var match = getDataSourceMatch(autoComplete.value());\n                if (!match && autoComplete.value() != \"\") { //empty values are valid bug 494\n                    detailsBtn.hide();\n                    if (targetEle.is(\":focus\") && !blurred) {\n                        // invalid while typing\n                        targetEle.css({\n                            \"text-decoration\": \"none\",\n                            \"background-color\": (targetEle.attr('disabled')) ? \"#a1a1a1\" : \"#fff\"\n                        });\n                    } else {\n                        // invalid after blur\n                        targetEle.css({\n                            \"text-decoration\": \"none\",\n                            \"background-color\": \"#FBE3E4\"\n                        });\n                        //add the invalid data attribute\n                        targetEle.attr('data-invalid', '');\n                    }\n                } else {\n                    // valid\n\n                    //remove the invalid data attribute\n                    targetEle.removeAttr('data-invalid', '');\n\n                    //do we actually have a value to show the extension properties for\n                    if (autoComplete.value() === \"\") {\n                        detailsBtn.hide();\n                    } else {\n                        detailsBtn.show();\n\n                        targetEle.css({\n                            \"text-decoration\": \"underline\"\n                        });\n                    }\n\n                    targetEle.css({\n                        \"background-color\": (targetEle.attr('disabled')) ? \"#eee\" : \"#fff\"\n                    });\n                }\n            }\n\n            var getDataSourceMatch = function (val) {\n                var ds = _.clone(dataSource);\n                var view = ds.view();\n\n                // matching needs to be case insensitive\n                var match = false;\n                $.each(view, function (i, item) {\n                    if (item.Name.toLowerCase() == val.toLowerCase()) {\n                        match = item;\n                    }\n                });\n                return match;\n            }\n            var setValue = function (name, id) {\n                dataSource.add(_model.getObj(name, id));\n                autoComplete.value(name);\n                validateAutoCompleteValue();\n            }\n            var getFocusedIndex = function () {\n                var focused = autoComplete.ul.find(\".k-state-focused\");\n                return (focused.length) ? focused.index() : false;\n            }\n\n            // END\n\n            __construct();\n        }\n\n        /*************/\n        /*** END *****/\n        /*************/\n\n        __construct();\n\n    }\n\n    return definition;\n\n});\n","\ndefine('text!forms/fields/objectPicker/view.html',[],function () { return '<div class=\"form-group\" data-cid=\"objectpicker\" data-cid-propname=\"<%= PropertyName %>\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input class=\"input-userpicker\"\\r\\n           data-control=\"objectPicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-extra=\"<%= ExtraProps %>\"\\r\\n           type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n            <% if ( Disabled ){ %>\\r\\n            disabled\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>\\r\\n    />\\r\\n</div>';});\n\n","\ndefine('text!forms/popups/objectPickerPopup/view.html',[],function () { return '<div id=\"ObjectPickerPopupWindow\" class=\"cireson-window defined-form task-window\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"col-group\">\\r\\n                <div class=\"c2\">\\r\\n                    <label data-bind=\"text: searchText\"></label>\\r\\n                    <span class=\"k-textbox\">\\r\\n                        <input class=\"textbox-padding-right\" type=\"text\" data-value-update=\"keyup\" data-bind=\"value: searchValue, events: { keypress: searchOnEnter }\">\\r\\n                        <a data-bind=\"click: search\" class=\"cursor-pointer fa fa-search\"></a>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div>\\r\\n                <label data-bind=\"text: selectObjectText\"></label>\\r\\n                <div data-control-grid=\"userPickerGrid\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\"cireson-window--footer window-buttons objectPicker-single-grid\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nobjectPickerPopup\r\n**/\r\nvar __objectPickerPopupSingleton;\r\n\r\ndefine('forms/popups/objectPickerPopup/controller',['require','text!forms/popups/objectPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/objectPickerPopup/view.html\");\r\n    var singletonName = \"objectPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (classId, BaseId) {\r\n            //BaseId will be used to remove it self from the list.\r\n            //need a specific instance per classId, so this singleton is a hash\r\n            if (__objectPickerPopupSingleton && __objectPickerPopupSingleton[classId]) {\r\n                return __objectPickerPopupSingleton[classId];\r\n            }\r\n\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n            var classId = classId;\r\n            var objectPickerPopup = ele.data(singletonName);\r\n\r\n            $(\"body\").append(ele);\r\n            __objectPickerPopupSingleton = new ObjectPickerPopup(ele, classId, BaseId);\r\n\r\n            return __objectPickerPopupSingleton;\r\n        }\r\n    }\r\n\r\n    /* -- ObjectPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            open = function(classId){ // opens popup with this classId }\r\n            close = function(){ // closes popup }\r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback(obj){  } returns selected user object\r\n    */\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // CONTROL\r\n    var ObjectPickerPopup = function (targetEle, classId, BaseId) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var classId = classId;\r\n        var gridHtml = targetEle.find(\"[data-control-grid]\");\r\n        var grid;\r\n        var gridUrl = \"/ConfigItems/GetObjectSearchResults\";\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"DisplayName\";\r\n        var _idProp = \"Id\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                searchText: localization.SearchText,\r\n                selectObjectText: localization.SelectObject,\r\n                searchValue: \"\",\r\n                okText: localization.OK,\r\n                cancelText: localization.Cancel,\r\n                search: onSearchClick,\r\n                searchOnEnter: function (e) {\r\n                    if (e.which == 13) {\r\n                        e.preventDefault();\r\n                        onSearchClick();\r\n                    }\r\n                },\r\n                save: onSaveClick,\r\n                cancel: onCancelClick\r\n            });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            createGrid();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n            self.vm = _vm;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n\r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSearchClick = function () {\r\n            grid.search(_vm.searchValue);\r\n        }\r\n        var onSaveClick = function () {\r\n            var selectedRow = grid.kendoGrid.select();\r\n            if (selectedRow) {\r\n                var obj = _model.getGenericFromObj(grid.kendoGrid.dataItem(selectedRow));\r\n                $(self).trigger(\"save\", obj);\r\n                closePopup();\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n\r\n        var openPopup = function () {\r\n            //clear out search box value and search results before opening the window\r\n            self.vm.set(\"searchValue\", \"\");\r\n            grid.kendoDataSource.data([]);\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup();\r\n        }\r\n        var createGrid = function () {\r\n            grid = new Grid({\r\n                html: gridHtml,\r\n                url: gridUrl\r\n            });\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function () {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            // ACTIONS\r\n\r\n            // METHODS\r\n\r\n            var createKendoWindow = function () {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: localization.SelectObject,\r\n                    content: null,\r\n                    width: 680,\r\n                    height: 400,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Grid --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n        */\r\n        var Grid = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var html = settings.html;\r\n            var url = settings.url;\r\n            var height = 150;\r\n            var kendoGrid;\r\n            var kendoDataSource;\r\n            var searchValue;\r\n            // private params           \r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoGrid();\r\n                kendoGrid.pager.element.hide();\r\n                bindEvents();\r\n                self.kendoGrid = kendoGrid;\r\n                self.kendoDataSource = kendoDataSource;\r\n                self.search = search;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                kendoGrid.bind(\"dataBound\", function (e) {\r\n                    kendoGrid.pager.element.show();\r\n                });\r\n                kendoGrid.element.on(\"dblclick\", \"tbody>tr\", onRowDblClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onRowDblClick = function () {\r\n                kendoGrid.select($(this));\r\n                onSaveClick();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var search = function (value) {\r\n                searchValue = value;\r\n                kendoDataSource.read();\r\n                if (!_.isUndefined(BaseId) || BaseId != \"\")\r\n                    kendoGrid.dataSource.filter([{ field: \"Id\", operator: \"neq\", value: BaseId }]);\r\n                kendoDataSource.page(1);\r\n            }\r\n            var createKendoDataSource = function () {\r\n                kendoDataSource = new kendo.data.DataSource({\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": url,\r\n                            \"data\": function () {\r\n                                return {\r\n                                    searchFilter: function () {\r\n                                        return searchValue;\r\n                                    },\r\n                                    classId: function () {\r\n                                        return classId;\r\n                                    },\r\n                                    groupFilter: \"\"\r\n                                }\r\n                            },\r\n                            \"type\": \"GET\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": 15,\r\n                    \"page\": 1,\r\n                    \"total\": 0,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                        \"model\": {\r\n                            \"fields\": {\r\n                                \"Id\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"ObjectClassId\": {\r\n                                    \"type\": \"number\"\r\n                                },\r\n                                \"ObjectClassName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"DisplayName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Path\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Hosted\": {\r\n                                    \"type\": \"number\"\r\n                                },\r\n                                \"LastModified\": {\r\n                                    \"type\": \"date\"\r\n                                },\r\n                                \"Status\": {\r\n                                    \"type\": \"string\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            var createKendoGrid = function () {\r\n                kendoGrid = html.kendoGrid({\r\n                    height: height,\r\n                    dataSource: kendoDataSource,\r\n                    selectable: \"Single,Row\",\r\n                    sortable: { mode: \"multiple\" },\r\n                    pageable: true,\r\n                    filterable: {\r\n                        extra: false,\r\n                        operators: {\r\n                            string: {\r\n                                startswith: localization.Startswith,\r\n                                contains: localization.Contains,\r\n                                eq: localization.Isequalto,\r\n                                neq: localization.Isnotequalto\r\n                            }\r\n                        }\r\n                    },\r\n                    autoBind: false,\r\n                    columns: [{\r\n                        \"title\": \"Id\",\r\n                        \"hidden\": true,\r\n                        \"field\": \"Id\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.DisplayName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"field\": \"DisplayName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Class,\r\n                        \"field\": \"ObjectClassName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Path,\r\n                        \"field\": \"Path\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }],\r\n                }).data(\"kendoGrid\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n\r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","/**\r\nobjectPicker\r\n**/\r\n\r\ndefine('forms/fields/objectPicker/controller',['require','text!forms/fields/objectPicker/view.html','forms/popups/objectPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/fields/objectPicker/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/objectPickerPopup/controller\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //console.log(node);\r\n            boundObj = node.vm;\r\n            name = node.PropertyName;\r\n            // add default values\r\n            var properties = {\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                ExtraProps: false,\r\n                ClassId: false // this is a required\r\n            }\r\n            $.extend(true, properties, node);\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(properties));\r\n            var popupWindow = objectPickerPopup.getPopup(properties.ClassId, boundObj.BaseId);\r\n\r\n            // comment out next two lines to go back to using app.controls\r\n            var objectPicker = new Control(templateFrag.find(\"[data-control='objectPicker']\"), boundObj, name, popupWindow, properties.ClassId, callback);\r\n            templateFrag.find(\"[data-control='objectPicker']\").attr(\"data-control\", \"objectPickerBound\");\r\n\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function isArray(ob) {\r\n        return Object.prototype.toString.call(ob) === '[object Array]';\r\n    }\r\n    // CONTROL\r\n    var Control = function (targetEle, boundObj, name, popupWindow, classId, callback) {\r\n        \r\n        // control parameters\r\n        var targetEle = targetEle;\r\n        var extraProps = targetEle.attr(\"data-control-extra\");\r\n        var autoCompleteUrl = \"/ConfigItems/GetObjectSearchResults\";\r\n        var detailsPopupUrl = \"/Search/ObjectViewer\";\r\n        var objectExtraUrl = \"/Search/GetObjectPropertiesByProjection?projectionId=490ab845-b14c-1d91-c39f-bb9e8a350933&id=\";\r\n        var boundObj = boundObj;\r\n        var propName = name;\r\n        var popupWindow = popupWindow;\r\n        var classId = classId;\r\n\r\n        // viewModel getters/setters\r\n        var _textProp = \"DisplayName\";\r\n        var _idProp = \"BaseId\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n        app.lib.forceKendoProp(boundObj, propName, kendo.observable(_model.getObj(null, null)));\r\n        var get = {\r\n            obj: function () { return boundObj[propName].length > 0 ? getIndexZero(boundObj[propName], null) : boundObj[propName]; },\r\n            name: function () { return boundObj[propName].length > 0 ? getIndexZero(boundObj[propName], _textProp) : boundObj[propName][_textProp]; },\r\n            id: function () { return boundObj[propName].length > 0 ? getIndexZero(boundObj[propName], _idProp) : boundObj[propName][_idProp]; }\r\n        }\r\n        var set = {\r\n            obj: function (name, id) {\r\n                if (boundObj[propName].length > 0) {\r\n                    \r\n                    boundObj[propName][0].set(_idProp, id);\r\n                    boundObj[propName][0].set(_textProp, name);\r\n                } else {\r\n                    boundObj[propName].set(_idProp, id);\r\n                    boundObj[propName].set(_textProp, name);\r\n                }\r\n            }\r\n        }\r\n\r\n        var getIndexZero = function (obj, property) {\r\n            var _obj = obj[0];\r\n            if (classId.toLowerCase() == _obj[\"ClassTypeId\"].toLowerCase()) {\r\n                if (property != null) {\r\n                    return _obj[property];\r\n                }\r\n                else {\r\n                    return _obj;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n\r\n        }\r\n\r\n        \r\n\r\n        // private properties\r\n        var helperBlock;\r\n        var autoComplete;\r\n\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            createHelperBlock();\r\n            createAutocomplete();\r\n            refreshDisplayValues();\r\n            bindEvents();\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n            boundObj[name].bind(\"change\", function () {\r\n                refreshDisplayValues();\r\n            });\r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onAutoCompleteValueChanged = function (obj) {\r\n            if (obj) {\r\n                set.obj(obj.name, obj.id);\r\n            } else {\r\n                set.obj(null, null);\r\n            }\r\n        }\r\n        var onSearchIconClick = function () {\r\n            popupWindow.setSaveCallback(function (obj) {\r\n                if (boundObj.BaseId != obj.id) {\r\n                    set.obj(obj.name, obj.id);\r\n                }\r\n            });\r\n            popupWindow.open();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n\r\n        var isModelSet = function () {\r\n            return (boundObj && boundObj[name] && get.name() && get.id()) ? true : false;\r\n        }\r\n        var hasExtraProps = function () {\r\n            return (extraProps && extraProps != \"false\");\r\n        }\r\n        var createHelperBlock = function () {\r\n            if (hasExtraProps()) {\r\n                helperBlock = new HelperBlock({\r\n                    url: objectExtraUrl,\r\n                    container: targetEle.parent(),\r\n                    props: extraProps.split(\",\")\r\n                });\r\n            }\r\n        }\r\n        var createAutocomplete = function () {\r\n            autoComplete = new AutoComplete({\r\n                url: autoCompleteUrl,\r\n                detailsUrl: detailsPopupUrl,\r\n                targetEle: targetEle,\r\n                callback: onAutoCompleteValueChanged\r\n            });\r\n        }\r\n        var refreshDisplayValues = function () {\r\n            if (isModelSet()) {\r\n                if (helperBlock) {\r\n                    helperBlock.setDisplay(get.id());\r\n                }\r\n                if (autoComplete) {\r\n                    autoComplete.setValue(get.name(), get.id());\r\n                }\r\n            }\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- HelperBlock --\r\n            // params\r\n                settings = {\r\n                    url: \"\", // url to get object extra props\r\n                    container: jqEle, // where helpblock will get appended\r\n                    props: [], // array of property names to be displayed in order\r\n                }\r\n            // public methods\r\n                obj.setDisplay(objectId) /// goes to server then displays helper data for that objectId\r\n        */\r\n        var HelperBlock = function (settings) {\r\n            var self = this;\r\n            var html;\r\n            var _vm;\r\n            var container = settings.container;\r\n            var url = settings.url;\r\n            var props = settings.props;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createHtml();\r\n                createViewModel();\r\n                bindEvents();\r\n                self.setDisplay = _vm.getUserObjectData;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                _vm.bind(\"change\", function (e) {\r\n                    if (e.field == \"extraPropText\") {\r\n                        _vm.set(\"isVisible\", (_vm.extraPropText.length > 0));\r\n                    } else if (e.field == \"data\") {\r\n                        setExtraPropsDisplay();\r\n                    }\r\n                });\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            // METHODS\r\n\r\n            var createHtml = function () {\r\n                // note: move this to definition.html\r\n                html = $('<span>', { \"class\": \"help-block\", \"data-bind\": \"text: extraPropText, visible: isVisible\" });\r\n                setTimeout(function () {\r\n                    container.append(html);\r\n                }, 100);\r\n            }\r\n            var createViewModel = function () {\r\n                _vm = kendo.observable({\r\n                    isVisible: false,\r\n                    extraPropText: \"\",\r\n                    data: {},\r\n                    getUserObjectData: getUserObjectData\r\n                });\r\n                kendo.bind(html, _vm);\r\n            }\r\n\r\n            var getUserObjectData = function (objectId) {\r\n                $.get(url + objectId, function (data) {\r\n                    if (data && data[0]) {\r\n                        data = data[0];\r\n                    }\r\n                    _vm.set(\"data\", data);\r\n                    setExtraPropsDisplay();\r\n                });\r\n            }\r\n\r\n            var setExtraPropsDisplay = function () {\r\n                var str = \"\";\r\n                $.each(props, function (i, item) {\r\n                    if (_vm.data[item]) {\r\n                        str += _vm.data[item] + \", \";\r\n                    }\r\n                });\r\n                _vm.set(\"extraPropText\", str.substring(0, str.length - 2));\r\n            }\r\n\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Autocomplete --\r\n            // params\r\n                settings = {\r\n                    url: \"\", // url for datasource\r\n                    targetEle: jqEle, // element to apply autocomplete\r\n                    callback: function(obj){} // fired when object is change via autocomplete, provides selected object or null values\r\n                }\r\n            // public methods\r\n        */\r\n        var AutoComplete = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var targetEle = settings.targetEle;\r\n            var url = settings.url;\r\n            var detailsUrl = settings.detailsUrl;\r\n            var placeHolderText = (targetEle.attr('disabled')) ? \"\" : localization.SearchPlaceholder;\r\n            var callback = settings.callback; // \r\n            // private params\r\n            var autoComplete;\r\n            var dataSource;\r\n            var focusedItemIndex = false\r\n            var searchBtn;\r\n            var detailsBtn;\r\n            var detailsPopupEle;\r\n            var detailsPopup;\r\n            var _textProp = \"DisplayName\";\r\n            var _idProp = \"Id\";\r\n            var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoAutoComplete();\r\n                createSearchButton();\r\n                createDetailsButton();\r\n                createDetailsPopup();\r\n                bindEvents();\r\n                self.setValue = setValue;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                autoComplete.bind(\"select\", function (e) {\r\n                    var obj = this.dataItem(e.item.index());\r\n                    callback(_model.getGenericFromObj(obj));\r\n                });\r\n                autoComplete.bind(\"change\", function (e) {\r\n                    validateAutoCompleteValue();\r\n                    callback(_model.getGenericFromObj(getDataSourceMatch(autoComplete.value())));\r\n                });\r\n                autoComplete.bind(\"dataBound\", function (e) {\r\n                    e.sender.ul.find(\"li\").first().addClass(\"k-state-hover\");\r\n                });\r\n                targetEle.on(\"keyup\", function (e) {\r\n                    if (e.which == 40 && !autoComplete.ul.is(\":visible\")) {\r\n                        autoComplete.search(autoComplete.value());\r\n                        validateAutoCompleteValue();\r\n                    }\r\n                    else if (e.which != 13) {\r\n                        focusedItemIndex = getFocusedIndex();\r\n                        validateAutoCompleteValue();\r\n                    }\r\n\r\n                });\r\n                targetEle.on(\"keydown\", function (e) {\r\n                    if (e.which == 13) {\r\n                        // enter click select first match in dropdown or focused\r\n                        var children = autoComplete.ul.children();\r\n                        if (children.length) {\r\n                            var index = (focusedItemIndex !== false) ? focusedItemIndex : 0;\r\n                            //console.log(\"in: \" + index);\r\n                            autoComplete.select(autoComplete.ul.children().eq(index));\r\n                            validateAutoCompleteValue();\r\n                        }\r\n                    }\r\n                });\r\n\r\n                //handle copy-paste event\r\n                targetEle.on(\"input propertychange\", function (e) {\r\n                    autoComplete.search(e.currentTarget.value);\r\n                    validateAutoCompleteValue();\r\n                });\r\n\r\n                detailsPopup.bind(\"close\", function () {\r\n                    detailsPopupEle.find(\".k-content\").html('');\r\n                });\r\n                searchBtn.click(onSearchIconClick);\r\n                detailsBtn.click(onDetailsBtnClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onDetailsBtnClick = function () {\r\n                detailsPopup.refresh({\r\n                    url: detailsUrl,\r\n                    data: { id: _model.get.id() }\r\n                });\r\n                detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\r\n                detailsPopup.title(_model.get.name()).center().open();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var createSearchButton = function () {\r\n                searchBtn = $(\"<div>\", { \"class\": \"searchIcon\", \"data-control-action\": \"userPickerWindow\" });\r\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\r\n                var a = (app.isMobileDevice()) ? $(\"<i>\", { \"class\": \"fa fa-search cursor-pointer \" + iconColor }) : $(\"<div>\", { \"class\": \"search fa fa-search cursor-pointer \" + iconColor });\r\n                searchBtn.append(a);\r\n                searchBtn.insertAfter(targetEle);\r\n            }\r\n            var createDetailsButton = function () {\r\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\r\n                detailsBtn = (app.isMobileDevice()) ? $(\"<i>\", { \"class\": \"fa fa-info-circle cursor-pointer info-icon \" + iconColor }) : $(\"<div>\", { \"class\": \"open-modal fa fa-info-circle\" });\r\n                detailsBtn.insertBefore(targetEle);\r\n                detailsBtn.hide();\r\n            }\r\n            var createKendoDataSource = function () {\r\n                dataSource = new kendo.data.DataSource({\r\n                    transport: {\r\n                        read: {\r\n                            url: url,\r\n                            data: {\r\n                                searchFilter: function () {\r\n                                    return autoComplete.value();\r\n                                },\r\n                                classId: classId\r\n                            },\r\n                            type: \"GET\"\r\n                        }\r\n                    },\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\"\r\n                    },\r\n                    serverFiltering: true\r\n                });\r\n            }\r\n\r\n            var preventClosing = 'init';\r\n            var createKendoAutoComplete = function () {\r\n                autoComplete = targetEle.kendoAutoComplete({\r\n                    dataTextField: _textProp,\r\n                    suggest: false,\r\n                    placeholder: placeHolderText,\r\n                    valuePrimitive: false,\r\n                    dataSource: dataSource,\r\n                    close: function (e) {\r\n                        if ($(window).scrollTop() + $(window).height() == $(document).height() && preventClosing == 'open') {\r\n                            e.preventDefault();\r\n                            preventClosing = 'close';\r\n                        }\r\n                    },\r\n                    change: function (e) {\r\n                        preventClosing = 'change';\r\n                        e.sender.close();\r\n                        \r\n                    },\r\n                    open: function (e) {\r\n                        preventClosing = 'open';\r\n                    },\r\n                    enable: (targetEle.attr('disabled')) ? false : true,\r\n                    clearButton: false\r\n                }).data(\"kendoAutoComplete\");\r\n            }\r\n            var createDetailsPopup = function () {\r\n                detailsPopupEle = $(\"<div>\");\r\n                detailsPopupEle.appendTo(\"body\");\r\n                detailsPopup = detailsPopupEle.kendoCiresonWindow({\r\n                    title: \"\",\r\n                    width: 550,\r\n                    height: 400,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n            var validateAutoCompleteValue = function () {\r\n                var match = getDataSourceMatch(autoComplete.value());\r\n                if (!match) {\r\n                    detailsBtn.hide();\r\n                    if (targetEle.is(\":focus\")) {\r\n                        // invalid while typing\r\n                        targetEle.css({\r\n                            \"text-decoration\": \"none\",\r\n                            \"background-color\": \"#fff\"\r\n                        });\r\n                    } else {\r\n                        // invalid after blur\r\n                        targetEle.css({\r\n                            \"text-decoration\": \"none\",\r\n                            \"background-color\": \"#FBE3E4\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    // valid\r\n                    detailsBtn.show();\r\n                    targetEle.css({\r\n                        \"text-decoration\": \"underline\",\r\n                        \"background-color\": \"#fff\"\r\n                    });\r\n                }\r\n            }\r\n            var getDataSourceMatch = function (val) {\r\n                var ds = _.clone(dataSource);\r\n                var view = ds.view();\r\n\r\n                // matching needs to be case insensitive\r\n                var match = false;\r\n                $.each(view, function (i, item) {\r\n                    if (item.DisplayName.toLowerCase() == val.toLowerCase()) {\r\n                        match = item;\r\n                    }\r\n                });\r\n                return match;\r\n            }\r\n            var setValue = function (name, id) {\r\n                dataSource.add(_model.getObj(name, id));\r\n                autoComplete.value(name);\r\n                validateAutoCompleteValue();\r\n            }\r\n            var getFocusedIndex = function () {\r\n                var focused = autoComplete.ul.find(\".k-state-focused\");\r\n                return (focused.length) ? focused.index() : false;\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/button/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <input type=\"button\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"button btn btn-<%= ButtonType %> btn-<%= ButtonSize %>\"\\r\\n           value=\"<%= PropertyDisplayName %>\"\\r\\n           data-bind=\"click: <%= Action %>\"\\r\\n\\r\\n            <% if ( Disabled ){ %>\\r\\n            disabled\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\r\nBUTTON\r\n**/\r\n\r\ndefine('forms/fields/button/controller',['require','text!forms/fields/button/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/button/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                PropertyName: 'defaultButton',\r\n                ButtonType: (node.ButtonType) ? node.ButtonType : 'default',\r\n                ButtonSize: (node.ButtonSize) ? node.ButtonSize : 'sm',\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/editor/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <textarea class=\"form-editor\" data-control=\"editor\" style=\"height:<%= Height %>px\" name=\"<%= PropertyName %>\">\\r\\n        <%= Content %>\\r\\n    </textarea>\\r\\n</div>\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nEDITOR\r\n**/\r\ndefine('forms/fields/editor/controller',['require','text!forms/fields/editor/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/editor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            boundObj = node.vm;\r\n            //make sure we have all the vals set\r\n            //document.write(JSON.stringify(boundObj));\r\n            var properties = {\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                Content: (boundObj[node.PropertyName]) ? $('<div/>').text(boundObj[node.PropertyName]).html() : boundObj[node.PropertyName],\r\n                Height: node.Height == null ? 440 : node.Height\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var templateFrag = $(built(properties));\r\n\r\n            new Control(templateFrag.find(\"[data-control='editor']\"), boundObj, node);\r\n            // get settings from attrs\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n\r\n    var Control = function (targetEle, boundObj, node) {\r\n        if (node.Options == null) {\r\n            var defaultTools = [\r\n                    \"bold\", \"italic\", \"underline\", \"strikethrough\",\r\n                    \"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\",\r\n                    \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                    \"createLink\", \"unlink\", \"insertImage\",\r\n                    \"superscript\", \"subscript\",\r\n                    \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                    \"viewHtml\",\r\n                    \"formatting\", \"foreColor\", \"backColor\"\r\n            ];\r\n            var mobileTools = [\r\n                \"formatting\",\r\n                \"createLink\", \"unlink\", \"insertImage\",\"viewHtml\",\r\n                \"bold\", \"italic\", \"underline\",\r\n                \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\"\r\n            ];\r\n            node.Options = app.isMobileDevice() ? mobileTools : defaultTools;\r\n        }\r\n        var boundObj = boundObj;\r\n        //Need to review\r\n        setTimeout(function () {\r\n            targetEle.kendoEditor({\r\n                change: function (e) {\r\n                    boundObj.set(node.PropertyName, targetEle.val());\r\n                },\r\n                tools: node.Options,\r\n                encoded: false,\r\n                stylesheets: [\r\n                    \"/Content/Styles/cireson.main.min.css?v=\" + session.staticFileVersion\r\n                ]\r\n            });\r\n            var editor = targetEle.data(\"kendoEditor\");\r\n            boundObj.bind(\"change\", function (e) {\r\n                editor.value(boundObj[node.PropertyName]);\r\n            });\r\n            $(editor.body).addClass(\"k-editor-content-body\");\r\n        }, 100);\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/combo/view.html',[],function () { return '<div class=\"form-group\" data-bind=\"ciresonCombo: ControlObject\"\\r\\n\\r\\n<% if ( Required ){ %>\\r\\n    required\\r\\n<% } %>\\r\\n    >\\r\\n    <label data-template-part=\"labelPart\" class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n    </label>\\r\\n\\r\\n    <input class=\"form-control form-control-picker input-sm\" data-template-part=\"inputControlPart\" data-control-bind=\"<%= PropertyName %>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n         >\\r\\n    </input>\\r\\n</div>\\r\\n';});\n\n","/**\r\nCOMBO - combobox\r\n**/\r\ndefine('forms/fields/combo/controller',['require','text!forms/fields/combo/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/combo/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n            var viewModel = {\r\n                PropertyName: node.PropertyName,\r\n                PropertyDisplayName: node.PropertyDisplayName,\r\n                DataSource: {},\r\n                IsCascading: _.isUndefined(node.IsCascading) ? false : node.IsCascading,\r\n                Cascade: {},\r\n                Required: _.isUndefined(node.Required) ? false : node.Required,\r\n                Disabled: _.isUndefined(node.Disabled) ? false : node.Disabled,\r\n                ControlObject: null,\r\n                serverFiltering: _.isUndefined(node.serverFiltering) ? false : node.serverFiltering,\r\n                pageSize: _.isUndefined(node.pageSize) ? 1000 : node.pageSize,\r\n            };\r\n            $.extend(true, viewModel, node);\r\n\r\n            var view = new kendo.View(built(viewModel), { wrap: false, model: kendo.observable(viewModel) });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/dropDownList/view.html',[],function () { return '<div class=\"form-group\" data-bind=\"ciresonDropDownList: ControlObject\"\\r\\n\\r\\n<% if ( Required ){ %>\\r\\n    required\\r\\n<% } %>\\r\\n    >\\r\\n    <label data-template-part=\"labelPart\" class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n    </label>\\r\\n\\r\\n    <input class=\"form-control form-control-picker input-sm\" data-template-part=\"inputControlPart\" data-control-bind=\"<%= PropertyName %>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n         >\\r\\n    </input>\\r\\n</div>\\r\\n';});\n\n","/**\r\nCOMBO - combobox\r\n**/\r\ndefine('forms/fields/dropDownList/controller',['require','text!forms/fields/dropDownList/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/dropDownList/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n            var viewModel = {\r\n                PropertyName: node.PropertyName,\r\n                PropertyDisplayName: node.PropertyDisplayName,\r\n                DataSource: {},\r\n                Required: _.isUndefined(node.Required) ? false : node.Required,\r\n                Disabled: _.isUndefined(node.Disabled) ? false : node.Disabled,\r\n                ControlObject: null\r\n            };\r\n            $.extend(true, viewModel, node);\r\n\r\n            var view = new kendo.View(built(viewModel), { wrap: false, model: kendo.observable(viewModel) });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/bundle/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n    <button data-role=\"button\"\\r\\n            class=\"btn btn-primary\"\\r\\n            data-sprite-css-class=\"k-icon k-edit\"\\r\\n            data-bind=\"events: { click: view.onClick }\">\\r\\n        <%= localization.Bundle %>\\r\\n    </button>\\r\\n\\r\\n    <div id=\"Bundle\" class=\"cireson-window defined-form hide\">\\r\\n        <div class=\"cireson-window--wrapper\">\\r\\n            <div class=\"cireson-window--body\">\\r\\n\\r\\n\\r\\n                <div id=\"bundleGrid\">\\r\\n                    <div style=\"width: 800px; height: 200px\"\\r\\n                         data-role=\"grid\"\\r\\n                         data-bind=\"source: products,\\r\\n                                visible: isVisible,\\r\\n                                events: {\\r\\n                                  save: onSave\\r\\n                                }\"\\r\\n                         date-scrollable=\"true\"\\r\\n                         data-editable=\"{mode:\\'inline\\', confirmation:false}\"\\r\\n                         data-toolbar=\"[{name:\\'create\\', text:\\'<%= localization.Create %>\\'}]\"\\r\\n                         data-columns=\"[\\r\\n                            { \\'field\\': \\'SoftwarePatternName\\', title: \\'<%= localization.SoftwarePatternName %>\\', \\'width\\': 150 },\\r\\n                            { \\'field\\': \\'SoftwarePattern\\', title: \\'<%= localization.SoftwarePattern %>\\', \\'width\\': 150 },\\r\\n                            { \\'field\\': \\'VersionPattern\\', title: \\'<%= localization.VersionPattern %>\\', \\'width\\': 150 },\\r\\n                            { \\'field\\': \\'ExclusionPattern\\', title: \\'<%= localization.ExclusionPattern %>\\', \\'width\\': 150 },\\r\\n                            { command:[{name:\\'edit\\', text:\\'<%= localization.Edit %>\\'}, {name:\\'destroy\\', text:\\'<%= localization.Delete %>\\'}], title: \\' \\', width: \\'150\\'}\\r\\n                        ]\">\\r\\n                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"cireson-window--footer window-buttons\">\\r\\n                <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-primary\"\\r\\n                        data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                    <%= localization.OK %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancelClick }\">\\r\\n                    <%= localization.Cancel %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nfileAttachments\r\n**/\r\n\r\ndefine('forms/fields/bundle/controller',['require','text!forms/fields/bundle/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/bundle/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var template = $(built(properties));\r\n            \r\n            //k-grid-add\r\n            var bundleData = [];\r\n            var gridViewModel;\r\n            \r\n            var cont = template.find(\"#Bundle\").clone(); //we have the element in memory so no need use a selector\r\n            var win = cont.kendoCiresonWindow({\r\n                title: localization.createOrEditSoftwareBundle,\r\n                width: 850,\r\n                height: 375,\r\n                actions: [],\r\n                activate: function () {}\r\n            }).data(\"kendoWindow\");\r\n\r\n            var _vmWindow = new kendo.observable({\r\n                okClick: function () {\r\n                    var dataList = gridViewModel.products._data;\r\n                    var tempSoftwarePattern = \"\";\r\n                    var tempExclusionPattern = \"\";\r\n                    var tempVersionPattern = \"\";\r\n                    \r\n                    for (var i = 0; i < dataList.length; i++) {\r\n                        if (dataList[i].SoftwarePatternName == \"\") continue;\r\n                        if ((dataList.length - 1) == i) {\r\n                            tempSoftwarePattern = tempSoftwarePattern + dataList[i].SoftwarePatternName + \"__\" + dataList[i].SoftwarePattern;\r\n                            tempExclusionPattern = tempExclusionPattern + dataList[i].ExclusionPattern;\r\n                            tempVersionPattern = tempVersionPattern + dataList[i].VersionPattern;\r\n                        }\r\n                        else {\r\n                            tempSoftwarePattern = tempSoftwarePattern + dataList[i].SoftwarePatternName + \"__\" + dataList[i].SoftwarePattern + \"|\";\r\n                            tempExclusionPattern = tempExclusionPattern + dataList[i].ExclusionPattern + \"|\";\r\n                            tempVersionPattern = tempVersionPattern + dataList[i].VersionPattern + \"|\";\r\n                        }\r\n                    }\r\n                    vm.set(\"SoftwarePattern\", tempSoftwarePattern);\r\n                    vm.set(\"ExclusionPattern\", tempExclusionPattern);\r\n                    vm.set(\"VersionPattern\", tempVersionPattern);\r\n                    var SoftwarePatternTxt = $(\"input[name='SoftwarePattern']\");\r\n                    var ExclusionPatternTxt = $(\"input[name='ExclusionPattern']\");\r\n                    var VersionPatternTxt = $(\"input[name='VersionPattern']\");\r\n                    if (vm.SoftwarePattern!=\"\") {\r\n                        vm.set(\"IsBundle\", true);\r\n                        enableDisableTextbox(SoftwarePatternTxt,false);\r\n                        enableDisableTextbox(ExclusionPatternTxt, false);\r\n                        enableDisableTextbox(VersionPatternTxt, false);\r\n                    } else {\r\n                        vm.set(\"IsBundle\", false);\r\n                        enableDisableTextbox(SoftwarePatternTxt, true);\r\n                        enableDisableTextbox(ExclusionPatternTxt, true);\r\n                        enableDisableTextbox(VersionPatternTxt, true);\r\n                    }\r\n                    win.close();\r\n                },\r\n                cancelClick: function () {\r\n                    win.close();\r\n                },\r\n            });\r\n\r\n            kendo.bind(cont, _vmWindow);\r\n            var enableDisableTextbox = function (txt, isEnable) {\r\n                if (isEnable) {\r\n                    txt.prop(\"disabled\", false).removeClass(\"k-state-disabled\");\r\n                }\r\n                else\r\n                    txt.prop(\"disabled\", true).addClass(\"k-state-disabled\").closest(\".has-error\")\r\n                                        .removeClass(\"has-error\");\r\n            }\r\n\r\n            vm.view.onClick = function () {\r\n                bundleData = [];\r\n                var softwarePatternList = new Array();\r\n                var exclusionPatternList = new Array();\r\n                var versionPatternList = new Array();\r\n                if (!_.isNull(vm.SoftwarePattern) && vm.SoftwarePattern != \"\") {\r\n                    softwarePatternList = vm.SoftwarePattern == \"\" ? \"\" : vm.SoftwarePattern.split(\"|\");\r\n                }\r\n\r\n                if (!_.isNull(vm.ExclusionPattern) && vm.ExclusionPattern != \"\") {\r\n                    exclusionPatternList = vm.ExclusionPattern == \"\" ? \"\" : vm.ExclusionPattern.split(\"|\");\r\n                }\r\n\r\n                if (!_.isNull(vm.VersionPattern) && vm.VersionPattern != \"\") {\r\n                    versionPatternList = vm.VersionPattern == \"\" ? \"\" : vm.VersionPattern.split(\"|\");\r\n                }\r\n\r\n                    \r\n                if (vm.IsBundle) {\r\n                    for (var i in softwarePatternList) {\r\n                        var softwarePattern = softwarePatternList[i].split(\"__\");\r\n                        bundleData.push({ SoftwarePatternName: softwarePattern[0], SoftwarePattern: softwarePattern[1], VersionPattern: versionPatternList[i], ExclusionPattern: exclusionPatternList[i] });\r\n                    }\r\n                }\r\n                \r\n\r\n                gridViewModel = kendo.observable({\r\n                    isVisible: true,\r\n                    onSave: function (e) {\r\n                        \r\n                    },\r\n                    products: new kendo.data.DataSource({\r\n                        schema: {\r\n                            model: {\r\n                                id: \"SoftwarePatternName\",//an id is required to maintain edit/cancel state correctlf TFS3424\r\n                                fields: {\r\n                                    SoftwarePatternName: {\r\n                                        editable: true,\r\n                                        validation: {\r\n                                            SoftwarePatternNamevalidation: function (input) {\r\n                                                if (input.is(\"[name='SoftwarePatternName']\") && input.val() == \"\") {\r\n                                                    input.attr(\"data-SoftwarePatternNamevalidation-msg\", localization.EnterRequiredFields);\r\n                                                    return false;\r\n                                                }\r\n                                                return true;\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    SoftwarePattern: {\r\n                                        editable: true, type: \"string\",\r\n                                        validation: {\r\n                                            SoftwarePatternvalidation: function (input) {\r\n                                                if (input.is(\"[name='SoftwarePattern']\") && input.val() == \"\") {\r\n                                                    input.attr(\"data-SoftwarePatternvalidation-msg\", localization.EnterRequiredFields);\r\n                                                    return false;\r\n                                                }\r\n                                                return true;\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    VersionPattern: { editable: true, type: \"string\", validation: { required: false } },\r\n                                    ExclusionPattern: { editable: true, type: \"string\", validation: { required: false } }\r\n                                }\r\n                            }\r\n                        },\r\n                        batch: false,\r\n                        data: bundleData,\r\n                    })\r\n                });\r\n\r\n                kendo.bind(cont.find(\"#bundleGrid\"), gridViewModel);\r\n\r\n                cont.removeClass('hide');\r\n                cont.show();\r\n\r\n                win.open();\r\n            }\r\n\r\n            callback(template);\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/fields/fileUpload/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <input id=\"<%= PropertyName %>\" type=\"file\"\\r\\n           accept=\"<%= AcceptExtension %>\"\\r\\n           data-role=\"upload\"\\r\\n           name=\"files\"\\r\\n           data-async=\"{ saveUrl: \\'/FileAttachment/FileUpload/?BaseId=<%= BaseId %>&fieldName=<%= PropertyName %>\\', autoUpload: true }\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"events: { select: onSelect, complete:complete, success:success }\" />\\r\\n    <br />\\r\\n    <div id=\"div<%= PropertyName %>\">\\r\\n        <div data-role=\"button\"\\r\\n                data-sprite-css-class=\"k-icon k-edit\"\\r\\n                data-bind=\"events: { click: onRemove }\">\\r\\n            <i class=\"fa fa-close\"></i>\\r\\n        </div>\\r\\n        <div>\\r\\n        <img />\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/fileUpload/controller',['require','text!forms/fields/fileUpload/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/fileUpload/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n\r\n            \r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n            var properties = {\r\n                Required: node.Required,\r\n                BaseId: vm.BaseId,\r\n                AcceptExtension: _.isUndefined(node.AcceptExtension) ? \"\" : vm.AcceptExtension\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            var template = $(built(properties));\r\n\r\n            var viewModel = new kendo.observable({\r\n                isEnabled: true,\r\n                isVisible: true,\r\n                onSelect: function (e) {\r\n                    template.find(\".k-file-error\").remove();\r\n                    $.each(e.files, function (index, value) {\r\n                        if (!_.isUndefined(node.AcceptExtension)\r\n                            && node.AcceptExtension!=\"\"\r\n                            && !(node.AcceptExtension.toLowerCase().indexOf(value.extension.toLowerCase()) > -1)) {\r\n                            kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.ErrorDescription,\r\n                                message: localization.FileExtensionInvalid + node.AcceptExtension,\r\n                                icon: \"fa fa-exclamation\"\r\n                            });\r\n                            e.preventDefault();\r\n                        }\r\n                    });\r\n                },\r\n                complete: function (e) {\r\n                    if (template.find(\".k-file\").length > 1) {\r\n                        template.find(\".k-file:first\").remove();\r\n                        \r\n                    }\r\n                },\r\n                success: function (e) {\r\n                    var img = template.find(\"img\");\r\n                    img.attr(\"src\", \"data:image/png;base64,\" + e.response);\r\n                    vm[node.PropertyName] = {\r\n                        \"streamId\": null,\r\n                        \"data\": \"stream\",\r\n                        \"bufferedMode\": true,\r\n                        \"streamLength\": 0\r\n                    };\r\n\r\n                    template.find(\"#div\" + node.PropertyName).show();\r\n                },\r\n                onRemove: function (e) {\r\n                    $.get(\"/FileAttachment/RemoveFileUpload/\", { BaseId: vm.BaseId, fieldName: node.PropertyName }, function (data) {\r\n                        template.find(\".k-file\").parent().remove();\r\n                        //template.find(\"img\").hide();\r\n                        template.find(\"#div\" + node.PropertyName).hide();\r\n                        vm[node.PropertyName] = null;\r\n                    });\r\n                }\r\n            });\r\n\r\n            $.get(\"/api/V3/Projection/GetBase64String\", { BaseId: vm.BaseId, PropertyName: node.PropertyName }, function (data) {\r\n                var img = template.find(\"#div\" + node.PropertyName);\r\n                if (data != \"\") {\r\n                    template.find(\"img\").attr(\"src\", \"data:image/png;base64,\" + data);\r\n                    img.show();\r\n                } else {\r\n                    img.hide();\r\n                }\r\n            });\r\n            \r\n\r\n            _.defer(function () { kendo.bind(template, viewModel); });\r\n            callback(template);\r\n\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/fields/urlTextbox/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"value: <%= PropertyName %>, events:{change:textChange}\" <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n\\r\\n        />\\r\\n    <div data-role=\"button\"\\r\\n         data-sprite-css-class=\"k-icon k-edit\"\\r\\n         class=\"urlTextboxIcon\"\\r\\n         data-bind=\"events: { click: openURL }\">\\r\\n        <i class=\"fa fa-external-link nav-icon-color\"></i>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/urlTextbox/controller',['require','text!forms/fields/urlTextbox/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/urlTextbox/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            \r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            \r\n            vm.view.buildURLTextbox = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var regexp = new RegExp(/^((ftp|http|https?):\\/\\/)?([w|W]{3}\\.)*?[a-zA-Z0-9\\-\\.]{3,}\\.[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})?$/);\r\n                var disabled = \"urlTextboxButtonDisabled\";\r\n                var error = \"input-error\";\r\n                var url = vm.get(node.PropertyName);\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled\r\n                };\r\n                \r\n                $.extend(true, properties, node);\r\n                var template = $(built(properties));\r\n                var txtBox = template.find(\"input\");\r\n                var link = template.find(\".urlTextboxIcon\");\r\n\r\n                var validateUrl = function () {\r\n                    var isOk = true;\r\n                    url = vm.get(node.PropertyName);\r\n                    link.removeClass(disabled);\r\n                    txtBox.removeClass(error);\r\n                    if (url == \"\" || _.isNull(url)) {\r\n                        isOk = false;\r\n                        link.addClass(disabled);\r\n                    } else if (!regexp.test(url)) {\r\n                        link.addClass(disabled);\r\n                        txtBox.addClass(error);\r\n                        isOk = false;\r\n                    }\r\n                    return isOk;\r\n                }\r\n                validateUrl();\r\n                vm.textChange = function (e) {\r\n                    validateUrl();\r\n                }\r\n\r\n                vm.openURL = function (e) {\r\n                    if (validateUrl()) {\r\n                        //append protocol if does not have one\r\n                        if (!url.match(/^ftp|http([s]?):\\/\\/.*/)) {\r\n                            url = 'http://' + url;\r\n                        }\r\n                        var win = window.open(url, '_blank');\r\n                        win.focus();\r\n                    }\r\n                };\r\n\r\n\r\n                view = new kendo.View(template, { wrap: false, model: vm });\r\n               \r\n               callback(view.render());\r\n            };\r\n            vm.view.buildURLTextbox();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nDECIMAL\r\n**/\r\n\r\ndefine('forms/fields/percentage/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                //Required: false,\r\n                DecimalPlaces: 2,\r\n                MinValue: '',\r\n                MaxValue: '',\r\n                StepIncrement: 0.01,\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Format: \"P0\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\r\n\r\n\r\ndefine('forms/formBuilder',[\r\n    \"forms/structure/formPanel/controller\",\r\n    \"forms/structure/formPanelFull/controller\",\r\n    \"forms/structure/customFieldGroup/controller\",\r\n    \"forms/structure/customFieldGroupRow/controller\",\r\n    \"forms/structure/columnField/controller\",\r\n    \"forms/structure/tab/controller\",\r\n    \"forms/structure/tabPane/controller\",\r\n    \"forms/structure/tabNavigation/controller\",\r\n    \"forms/structure/tabData/controller\",\r\n\r\n    \"forms/predefined/actionLog/controller\",\r\n    \"forms/predefined/fileAttachments/controller\",\r\n    \"CustomSpace/Scripts/forms/predefined/affectedItems/controller\", // \"forms/predefined/affectedItems/controller\",\r\n    \"CustomSpace/Scripts/forms/predefined/relatedItems/controller\", // \"forms/predefined/relatedItems/controller\",\r\n    \"forms/predefined/childWorkItems/controller\",\r\n    \"forms/predefined/userInput/controller\",\r\n    \"forms/predefined/activities/controller\",\r\n    \"forms/predefined/multipleObjectPicker/controller\",\r\n    \"CustomSpace/Scripts/forms/predefined/history/controller\", // \"forms/predefined/history/controller\",\r\n    \"forms/predefined/billableTime/controller\",\r\n    \"forms/predefined/knowledgeArticle/controller\",\r\n    \"forms/predefined/fileAttachmentsDragDrop/controller\",\r\n    \r\n\r\n    \"forms/fields/string/controller\",\r\n    \"forms/fields/longstring/controller\",\r\n    \"forms/fields/boolean/controller\",\r\n    \"forms/fields/display/controller\",\r\n    \"forms/fields/spacer/controller\",\r\n    \"forms/fields/numeric/controller\",\r\n    \"forms/fields/int/controller\",\r\n    \"forms/fields/decimal/controller\",\r\n    \"forms/fields/double/controller\",\r\n    \"forms/fields/date/controller\",\r\n    \"forms/fields/datetime/controller\",\r\n    \"forms/fields/enum/controller\",\r\n    \"forms/fields/userPicker/controller\",\r\n    \"forms/fields/objectPicker/controller\",\r\n    \"forms/fields/button/controller\",\r\n    \"forms/fields/editor/controller\",\r\n    \"forms/fields/combo/controller\",\r\n    \"forms/fields/dropDownList/controller\",\r\n    \"forms/fields/bundle/controller\",\r\n    \"forms/fields/fileUpload/controller\",\r\n    \"forms/fields/urlTextbox/controller\",\r\n    \"forms/fields/percentage/controller\"\r\n    \r\n\r\n\r\n], function (formPanel,\r\n    formPanelFull,\r\n    customFieldGroup,\r\n    customFieldGroupRow,\r\n    columnField,\r\n    tab, //.tab-content\r\n    tabPane, //.tab-pane\r\n    tabNavigation, //ul\r\n    tabData,//li\r\n\r\n    actionLog,\r\n    fileAttachments,\r\n    affectedItems,\r\n    relatedItems,\r\n    childWorkItems,\r\n    userInput,\r\n    activities,\r\n    multipleObjectPicker,\r\n    history,\r\n    billableTime,\r\n    knowledgeArticle,\r\n    fileAttachmentsDragDrop,\r\n    \r\n\r\n    String,\r\n    LongString,\r\n    Boolean,\r\n    Display,\r\n    Spacer,\r\n    Numeric,\r\n    Int32,\r\n    Decimal,\r\n    Double,\r\n    Date,\r\n    DateTime,\r\n    Enum,\r\n    UserPicker,\r\n    ObjectPicker,\r\n    Button,\r\n    Editor,\r\n    Combo,\r\n    DropDownList,\r\n    Bundle,\r\n    FileUpload,\r\n    UrlTextbox,\r\n    Percentage) {\r\n\r\n    var mainContainer;\r\n    var jsonTemplate;\r\n    var viewModel;\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            viewModel = vm.viewModel;\r\n            jsonTemplate = vm.formTemplate;\r\n\r\n            // Decide on layout template\r\n            eval(\"var _obj = \" + jsonTemplate.layoutType + \";\");\r\n            // if no template was found, use default ('form')\r\n            if (!_obj) {\r\n                _obj = formPanel;\r\n            }\r\n\r\n            _obj.build(function (tplString) {\r\n                mainContainer = $(tplString);\r\n            });\r\n\r\n            readTemplate(mainContainer, jsonTemplate);\r\n            callback(mainContainer);\r\n            //see if we have a non-default tab selection\r\n            $(\"a[selected='selected']\").tab('show'); //selected tab for loading ex: http://localhost:13463/Incident/Edit/IR430/?tab=activity&activityId=MA798\r\n        }\r\n    }\r\n\r\n    var readTemplate = function (container, json, columns) {\r\n        var columns = (columns != undefined && columns !== false) ? columns : false;\r\n\r\n        $.each(json, function (key, item) {\r\n            if (key != \"layoutType\") {\r\n                jsonDecision(container, key, item, columns);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Mutate any jsonFormTemplate items by name:value\r\n    var mutationLogic = {\r\n        // Run on all properties\r\n        all: function (propValue) {\r\n            propValue.vm = viewModel; // pass in viewModel\r\n        },\r\n        tabList: function (tabList) {\r\n            jsonTemplate.tabNavigation = {\r\n                nodeCount: tabList.length,\r\n                tabData: []\r\n            }\r\n            tabNavigation.build(viewModel, jsonTemplate, function (tabtplString) {\r\n                var tabnavCont = $(tabtplString);\r\n\r\n                //prevent multiple tabs being set to focus. \r\n                var focusSet = false;\r\n                $.each(tabList, function (i, tabNode) {\r\n                    //this gets ?tab= data from uri if present\r\n                    var focusedTab = app.getParameterByName(\"tab\").toLowerCase();\r\n                    var tabNodeNameKey = tabNode.name;\r\n                    //set vals\r\n                    tabNode.tabId = app.lib.newGUID();\r\n                    tabNode.active = (i == 0) ? \"active\" : \"\";\r\n                    tabNode.content.tabId = tabNode.tabId;\r\n                    tabNode.content.active = tabNode.active;\r\n\r\n                    //call build on each nav node \r\n                    tabData.build(viewModel, tabNode, function (tplString) {\r\n                        //append to tabnavcont\r\n                        var element = $(tplString);\r\n\r\n                        if (app.isMobile()) {\r\n                            tabnavCont.children('.nav-dropdown-content').find('ul').append(element);\r\n                        } else {\r\n                            tabnavCont.append(element);\r\n                        }\r\n                      \r\n                        if (!app.isMobile()) {\r\n                            //--Start focus tab logic\r\n                            //check if there we found and focused tab param in the uri\r\n                            if (!focusSet && focusedTab.length > 0) {\r\n                                //this statement will set focus if they have a tab name in the uri that matches a tab name on the page\r\n                                if (tabNodeNameKey.toLowerCase() === focusedTab) {\r\n                                    element.find(\"a\").attr(\"selected\", \"true\");\r\n                                    focusSet = true;\r\n                                }\r\n\r\n                                //if focus is on activity tab (i.e. click an activity from the grid) set focus on tab and open activity\r\n                                switch (focusedTab) {\r\n                                    case \"activity\":\r\n                                        //find the activity tab based on control type\r\n                                        $.each(tabNode.content, function (i, content) {\r\n                                            $.each(content.customFieldGroupList, function (i, group) {\r\n                                                if (group.type === \"activities\") {\r\n                                                    element.find(\"a\").attr(\"selected\", \"true\");\r\n                                                    focusSet = true;\r\n                                                };\r\n                                            });\r\n                                        });\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                };\r\n                            };\r\n                            //--End focused tab logic\r\n                        } \r\n                    });\r\n                });\r\n                //append tabnavcont to main form panel\r\n                mainContainer.append(tabnavCont);\r\n            });\r\n\r\n            // ------------ tab dropdown\r\n\r\n        },\r\n        // Run to determine colspan\r\n        columnFieldList: function (columnFieldList) {\r\n            app.lib.setColumnSizes(columnFieldList);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    var getContainer = function (tplReturn) {\r\n        return (typeof (tplReturn) === \"string\") ? $(tplReturn) : tplReturn;\r\n    }\r\n\r\n    var chooseNextAction = function (container, item, objectName, columnCount) {\r\n        if (item.content) { //this denotes a tabPane\r\n            jsonDecision(container, objectName + \"Pane\", item.content);\r\n        } else if (item.rows) { //this denotes a FieldGroupList\r\n            jsonDecision(container, objectName + \"Row\", item.rows);\r\n        } else if (item.DataType) { //denotes a standard field, like string or numeric\r\n            jsonDecision(container, item.DataType, item);\r\n        } else if (item.type) { // predefined\r\n            jsonDecision(container, item.type, item);\r\n        } else { //an array of items, re-loop to comb through the child properties\r\n            readTemplate(container, item, columnCount);\r\n        }\r\n    };\r\n\r\n    // \r\n    var jsonDecision = function (propContainer, propName, propValue, columns) {\r\n        //propName is the name of the obj we will call .build on\r\n        //propValue is the object itself, like { DataType: \"UserPicker\", PropertyDisplayName: \"PrimaryOwner\", PropertyName: \"RelatesToIncident\", FilterByAnalyst: true},\r\n        var objectName = propName;\r\n\r\n        var list = false;\r\n        var row = false;\r\n        var pane = false;\r\n        var columnCount = (columns == undefined) ? false : columns; //TODO: ELI do we need this now, with the mutate function\r\n\r\n        // mutation logic\r\n        if (mutationLogic[propName]) {\r\n            mutationLogic[propName](propValue);\r\n        }\r\n        mutationLogic[\"all\"](propValue);\r\n\r\n        // Check if it is a List\r\n        if (propValue.push) {\r\n            if (propName.indexOf(\"List\") > -1) {\r\n                list = true;\r\n                objectName = propName.split(\"List\")[0];\r\n            }\r\n            else if (propName.indexOf(\"Row\") > -1) {\r\n                row = true;\r\n                columnCount = propValue.length;\r\n            }\r\n            else if (propName.indexOf(\"Pane\") > -1) {\r\n                pane = true;\r\n            }\r\n        }\r\n\r\n        // Decide on Template\r\n        eval(\"var _obj = \" + objectName + \";\");\r\n        // Check if Template Exists\r\n        if (!_obj) {\r\n            throw Exception(objectName + \" is not part of the templating system\");\r\n            return false;\r\n        }\r\n\r\n        // xxxList \r\n        if (list || row || pane) {\r\n            if (_obj == tab) {\r\n                //if it is a tab object, need to call build first, then loop through children\r\n                _obj.build(viewModel, propValue, function (tplReturn) {\r\n                    var _container = getContainer(tplReturn);\r\n                    propContainer.append(_container);\r\n                    $.each(propValue, function (i, item) {\r\n                        chooseNextAction(_container, item, objectName);\r\n                    });\r\n                });\r\n\r\n            } else {\r\n                $.each(propValue, function (i, item) {\r\n                    if (objectName == \"columnField\") {\r\n                        item.columnCount = columnCount;\r\n                    }\r\n\r\n                    if (_obj == tabPane) { //this one passes in propValue, the else statement passes in item\r\n                        _obj.build(viewModel, propValue, function (tplReturn) {\r\n                            var _container = getContainer(tplReturn);\r\n                            propContainer.append(_container);\r\n                            readTemplate(_container, item, columnCount);\r\n                        });\r\n                    }\r\n                        //todo: note, possibly do manipulation here on customFieldGroupList/Row. do account for the bs-panels being wonky.\r\n\r\n                    else {\r\n\r\n                        _obj.build(viewModel, item, function (tplReturn) {\r\n                            var _container = getContainer(tplReturn);\r\n                            propContainer.append(_container);\r\n                            //allow view to define where children should be added \r\n                            if (_container.find(\".append-here\").length != 0) {\r\n                                chooseNextAction(_container.find(\".append-here\"), item, objectName, columnCount);\r\n                            } else {\r\n                                chooseNextAction(_container, item, objectName, columnCount);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            //we should only force a disable state if isDisabled is true\r\n            //otherwise keep default and defined disable value\r\n            if (!_.isUndefined(viewModel) && viewModel.isDisabled) {\r\n                propValue.disabled = true;\r\n            }\r\n\r\n            _obj.build(viewModel, propValue, function (tplReturn) {\r\n                var _container = getContainer(tplReturn);\r\n                propContainer.append(_container);\r\n            });\r\n        }\r\n\r\n    }\r\n    return definition;\r\n});\r\n\r\n\r\n\n","define('forms/formHelper',[\n\n], function (\n\n        ) {\n\n\n    var definition = {\n        \n        manageDirty: function (vm) {\n            //setup is dirty flag\n            vm.set('isDirty', false);\n            //bind to view model changes to set dirty flag\n            vm.bind(\"change\", function (e) {\n                //console.log(e.field); // will output the changed field once the event is raised\n                //TODO: may need to make this a little smarter\n                //don't trigger isDirty changes\n                if (e.field !== \"isDirty\" &&\n                    e.field !== \"HistoryButton\") {\n                    vm.set(\"isDirty\", true);\n                }\n            });\n            //don't let the user leave the page if form is dirty\n            window.onbeforeunload = function () {\n                //TODO find a way to over write default browser alert\n                if (vm.get(\"isDirty\")) {\n                    return localization.UnsavedDataMessage;\n                }\n            }\n        },\n\n        mobileDrawerTaskButton: function (taskContainer) { //This will going to create task button to the drawer for mobile task\n            //if (app.isMobileDevice()) \n            var task = drawermenu.addButton(localization.Tasks, \"fa fa-tasks\", function () { });\n            app.lib.makeDrawer(\"bottom\", taskContainer, task, true);\n\n            function mobileTaskShow() {\r\n                if (app.isMobile()) {\r\n                    task.show();\r\n                } else {\r\n                    task.hide();\r\n                }\n            }\n\n            $(window).resize(function () {\r\n                mobileTaskShow();\r\n            });\n\n            mobileTaskShow();\n        }\n    }\n\n\n    return definition;\n});\n\n\n","require.config({\n    waitSeconds: 0,\n    urlArgs: \"v=\" + session.staticFileVersion,\n    baseUrl: \"/Scripts/\",\n    paths: {\n        //kendo: \"kendo/js/kendo.mobile.min\",\n        //jquery: \"jquery/jquery.min\",\n        text: \"require/text\",\n        \"CustomSpace\": \"../CustomSpace\"\n    },\n\n    shim: {\n        //kendo: {\n        //    deps: ['jquery'],\n        //    exports: 'kendo'\n        //}\n    }\n});\n\n//let's let the user know that things are happening\napp.lib.mask.apply();\n$(\"body\").css(\"cursor\", \"wait\");\n$(document).ajaxStop(function () {\n    $(\"body\").css(\"cursor\", \"auto\");\n});\n\nrequire([\"forms/taskBuilder\", \"forms/headerBuilder\", \"forms/formBuilder\", \"forms/formHelper\"], function (taskBuilder, headerBuilder, formBuilder, formHelper, messagesStructure) {\n\n    var saveUrl = pageForm.saveUrl;\n    var mainContainer = $(pageForm.container);\n    var taskContainer = $('<div class=\"task-panel task-panel-narrow\"></div>');\n    //var headerContainer = $('<div/>').addClass(\"form-header form-panel\");\n    var headerContainer = $('.page_bar').empty(); //use new page header div, just clear it out before adding things\n    var formContainer = $('<div/>').addClass(\"page-form\");\n    var formType = pageForm.type;\n    var dataVM = pageForm.viewModel;\n    var dataVMUnchanged = pageForm.jsonRaw;\n    var priorityJSON = (pageForm.priorityJSON) ? pageForm.priorityJSON : false; // for priority matrix in Incident\n    var bHasNoInitalAssignee = (_.isUndefined(pageForm.viewModel.AssignedWorkItem) || _.isNull(pageForm.viewModel.AssignedWorkItem)) ? true : false; //for set first assigned date in incident\n    var bShowAddWatchList = _.isUndefined(_.find(pageForm.viewModel.WatchList, function (user) { return (user.Id == session.user.Id || user.BaseId == session.user.Id); }));\n    var bShowRemoveWatchList = !bShowAddWatchList;\n\n    //set a check for unsubmitted action log commnets\n    dataVM.set('commentDirty', false);\n\n    //seems like the activity builder calls this on ready function once all the activity stuff is loaded\n    pageForm.onReady = function () {\n        //make sure activities did not make the form dirty\n        pageForm.viewModel.set(\"isDirty\", false);\n        //pageForm.jsonRaw = dataVM.toJSON();\n    }\n\n    //check for errors\n    if (!_.isUndefined(pageForm.viewModel.WorkItemErrorMessage)) {\n        var jumbotron = $('<div/>').addClass('jumbotron');\n        jumbotron.append($('<h1 />').addClass(\"error uppercase\").html(\"<i class='fa fa-frown-o'></i> \" + localization.Failed));\n        jumbotron.append($('<p />').addClass(\"error\").html(pageForm.viewModel.WorkItemErrorMessage));\n\n        mainContainer.append(jumbotron);\n\n        app.lib.mask.remove();\n        $(\"body\").css(\"cursor\", \"auto\");\n        return;\n    }\n\n    //add the ability to bind to form load\n    var readyArray = [];\n    pageForm.boundReady = function (func) {\n        readyArray.push(func);\n    }\n\n    //add the ability to bind change to viewModel by index, with support for null index\n    var changesArray = [];\n    pageForm.boundChange = function (index, func) {\n        changesArray[index] = func;\n    }\n\n    //add custom viewModel function in the custom space\n    var methods = app.custom.actionMethod.get(formType);\n    if (_.isArray(methods)) {\n        dataVM.custom = {};\n        $.each(methods, function (i, method) {\n            if (_.isFunction(method.func)) {\n                dataVM.custom[method.index] = method.func;\n            }\n        });\n    }\n\n    //add header json definition\n    //since all WI have same header structure we put it in this file\n    //if this changes we need to move this to all the cshtml New/Edit files\n    pageForm.headerTemplate = {\n        rows: [\n                {\n                    columns: [\n                        { View: \"sticky\", Class: \"\" }\n                        //{ View: \"status\", Class: \"col-md-6 col-xs-12\" },\n                        //{ View: \"relationships\", Class: \"col-md-4 col-xs-12\" },\n                        //{ View: \"slo\", Class: \"col-md-3 col-xs-12\" }\n                    ]\n                }\n        ]\n    };\n\n    if ($(\"html\").attr(\"dir\")==\"rtl\") {\r\n        pageForm.headerTemplate.rows[0].columns.reverse();\r\n    }\n\n\n    //going to define tasks based on pageForm.type & pageForm.newWI to reduce repetative code\n    pageForm.taskTemplate = {};\n    pageForm.taskTemplate.task = [];\n\n    //Change Request Tasks\n\n    var ChangeStatus = \"0bf0a71b-9e9e-f719-0271-c9a4ff352600\";\n    var ChangeStatus_New = \"a87c003e-8c19-a25f-f8b2-151b56670e5c\";\n    var ChangeStatus_Failed = \"85f00ead-2603-6c68-dfec-531c83bf900f\";\n    var ChangeStatus_Closed = \"f228d50b-2b5a-010f-b1a4-5c7d95703a9b\";\n    var ChangeStatus_InProgress = \"6d6c64dd-07ac-aaf5-f812-6a7cceb5154d\";\n    var ChangeStatus_OnHold = \"dd6b0870-bcea-1520-993d-9f1337e39d4d\";\n    var ChangeStatus_Cancelled = \"877defb6-0d21-7d19-89d5-a1107d621270\";\n    var ChangeStatus_Submitted = \"504f294c-ae38-2a65-f395-bff4f085698b\";\n    var ChangeStatus_Completed = \"68277330-a0d3-cfdd-298d-d5c31d1d126f\";\n\n    if (pageForm.type === 'ChangeRequest') {\n        var statusCancelled = (pageForm.viewModel.Status.Id == ChangeStatus_Cancelled);\n        var statusCompleted = (pageForm.viewModel.Status.Id == ChangeStatus_Completed);\n        var statusFailed = (pageForm.viewModel.Status.Id == ChangeStatus_Failed);\n        var showCancelled = (session.user.Analyst && !pageForm.newWI) && !statusCancelled && !statusCompleted && !statusFailed;\n        var showChangeStatus = (session.user.Analyst && !pageForm.newWI);\n\n        pageForm.taskTemplate = {\n            tasks: [\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: ChangeStatus } },\n                        { Task: \"newStatus\", Label: localization.CancelRequest, Access: showCancelled, Configs: { confirmTitle: localization.CancelRequest, confirmMessage: localization.SureCancelRequest, newStatusName: localization.Cancelled, newStatusId: ChangeStatus_Cancelled } },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n            ]\n        };\n    }\n\n\n    //Incident Tasks\n\n    var IncidentStatus = \"89b34802-671e-e422-5e38-7dae9a413ef8\";\n    var IncidentStatus_Active = \"5e2d3932-ca6d-1515-7310-6f58584df73e\";\n    var IncidentStatus_Closed = \"bd0ae7c4-3315-2eb3-7933-82dfc482dbaf\";\n    var IncidentStatus_Resolved = \"2b8830b6-59f0-f574-9c2a-f4b4682f1681\";\n    var IncidentStatus_Active_Pending = \"b6679968-e84e-96fa-1fec-8cd4ab39c3de\";\n    var IncidentTierQueue = \"c3264527-a501-029f-6872-31300080b3bf\";\n    var IncidentResolution = \"72674491-02cb-1d90-a48f-1b269eb83602\";\n\n    if (pageForm.type === 'Incident') {\n        var statusNotResolvedOrClosed = (pageForm.viewModel.Status.Id !== IncidentStatus_Resolved && pageForm.viewModel.Status.Id !== IncidentStatus_Closed);\n        var showAcknowledge = session.user.Analyst && statusNotResolvedOrClosed && pageForm.viewModel.FirstResponseDate == null;\n        var showLinkToparent = session.user.Analyst && statusNotResolvedOrClosed && !pageForm.viewModel.IsParent;\n        var showRevertToParent = session.user.Analyst && statusNotResolvedOrClosed && pageForm.viewModel.IsParent;\n        var showConvertToParent = session.user.Analyst && statusNotResolvedOrClosed && !pageForm.viewModel.IsParent && (_.isNull(pageForm.viewModel.ParentWorkItem) || _.isUndefined(pageForm.viewModel.ParentWorkItem));\n        var statusResolved = (pageForm.viewModel.Status.Id == IncidentStatus_Resolved);\n        var showChangeStatus = (session.user.Analyst && !pageForm.newWI);\n\n        pageForm.taskTemplate = {\n            tasks: [\n                        { Task: \"analystByGroup\", Label: localization.AssignToAnalystByGroup, Access: session.user.Analyst, Configs: { propertyName: \"TierQueue\", enumId: IncidentTierQueue } },\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"acknowledge\", Label: localization.Acknowledge, Access: showAcknowledge, Configs: {} },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: IncidentStatus, resolutionCategoryEnumId: IncidentResolution } },\n                        { Task: \"convertToParent\", Label: localization.ConvertToParent, Access: showConvertToParent, Configs: { isParent: true, confirmTitle: localization.ConvertToParent, confirmMessage: localization.SureConvertToParent } },\n                        { Task: \"convertToParent\", Label: localization.RevertToParent, Access: showRevertToParent, Configs: { isParent: false, confirmTitle: localization.RevertToParent, confirmMessage: localization.SureRevertToParent } },\n                        { Task: \"linkToParent\", Label: localization.LinktoParentIncident, Access: showLinkToparent, Configs: {} },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"newStatus\", Label: localization.CloseIncident, Access: statusResolved, Configs: { confirmTitle: localization.CloseIncident, confirmMessage: localization.SureCloseIncident, newStatusName: localization.Closed, newStatusId: IncidentStatus_Closed } },\n                        { Task: \"newStatus\", Label: localization.ReactivateIncident, Access: statusResolved, Configs: { confirmTitle: localization.ReactivateIncident, confirmMessage: localization.SureReactivateIncident, newStatusName: localization.Active, newStatusId: IncidentStatus_Active, otherBoundChanges: { \"ResolutionDescription\": null, \"ResolutionCategory\": null, \"RelatesToTroubleTicket\": null } } },\n                        { Task: \"copyToNewWI\", Label: localization.CopyToNew, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n\n            ]\n        };\n    }\n\n\n\n    //Service Request Tasks\n\n    var ServiceRequestStatus = \"4e0ab24a-0b46-efe6-c7d2-5704d95824c7\";\n    var ServiceRequestStatus_New = \"a52fbc7d-0ee3-c630-f820-37eae24d6e9b\";\n    var ServiceRequestStatus_Closed = \"c7b65747-f99e-c108-1e17-3c1062138fc4\";\n    var ServiceRequestStatus_Completed = \"b026fdfd-89bd-490b-e1fd-a599c78d440f\";\n    var ServiceRequestStatus_Failed = \"21dbfcb4-05f3-fcc0-a58e-a9c48cde3b0e\";\n    var ServiceRequestStatus_Cancelled = \"674e87e4-a58e-eab0-9a05-b48881de784c\";\n    var ServiceRequestStatus_OnHold = \"05306bf5-a6b9-b5ad-326b-ba4e9724bf37\";\n    var ServiceRequestStatus_InProgress = \"59393f48-d85f-fa6d-2ebe-dcff395d7ed1\";\n    var ServiceRequestStatus_Submitted = \"72b55e17-1c7d-b34c-53ae-f61f8732e425\";\n    var ServiceRequestSupportGroup = \"23c243f6-9365-d46f-dff2-03826e24d228\";\n    var ServiceRequestImplementationResults = \"4ea37c27-9b24-615a-94da-510539371f4c\";\n\n\n\n    if (pageForm.type === 'ServiceRequest') {\n        var statusCancelled = (pageForm.viewModel.Status.Id == ServiceRequestStatus_Cancelled);\n        var statusCompleted = (pageForm.viewModel.Status.Id == ServiceRequestStatus_Completed);\n        var statusFailed = (pageForm.viewModel.Status.Id == ServiceRequestStatus_Failed);\n        var showCancelled = !pageForm.newWI && !statusCancelled && !statusCompleted && !statusFailed;\n        var showChangeStatus = (session.user.Analyst && pageForm.viewModel.Status.Id != ServiceRequestStatus_New);\n        var showCloseStatus = !pageForm.newWI && (statusCancelled || statusCompleted || statusFailed);\n        var showAcknowledge = session.user.Analyst && !statusCompleted && pageForm.viewModel.FirstResponseDate == null;\n\n        pageForm.taskTemplate = {\n            tasks: [\n                        { Task: \"analystByGroup\", Label: localization.AssignToAnalystByGroup, Access: session.user.Analyst, Configs: { propertyName: \"SupportGroup\", enumId: ServiceRequestSupportGroup } },\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"acknowledge\", Label: localization.Acknowledge, Access: showAcknowledge, Configs: {} },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: ServiceRequestStatus, resolutionCategoryEnumId: ServiceRequestImplementationResults } },\n                        { Task: \"newStatus\", Label: localization.CancelRequest, Access: showCancelled, Configs: { confirmTitle: localization.CancelRequest, confirmMessage: localization.SureCancelRequest, newStatusName: localization.Cancelled, newStatusId: ServiceRequestStatus_Cancelled } },\n                        { Task: \"newStatus\", Label: localization.CloseServiceRequest, Access: showCloseStatus, Configs: { confirmTitle: localization.CloseServiceRequest, confirmMessage: localization.SureCloseServiceRequest, newStatusName: localization.Closed, newStatusId: ServiceRequestStatus_Closed } },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"copyToNewWI\", Label: localization.CopyToNew, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n            ]\n        };\n    }\n\n\n\n    //Problem Tasks\n\n    var ProblemStatus = \"56c99a7d-6ac7-ab3c-e6c0-bbf5fe76a65c\";\n    var ProblemStatus_Active = \"720438eb-ba08-1263-0944-6791fcb48991\";\n    var ProblemStatus_Closed = \"25eac210-e091-8ae8-a713-fea2472f32ff\";\n    var ProblemStatus_Resolved = \"7ff92b06-1694-41e5-2df7-b4d5970d2d2b\";\n    //var ProblemStatus_Active_Pending = \"b6679968-e84e-96fa-1fec-8cd4ab39c3de\";\n    //var ProblemTierQueue = \"c3264527-a501-029f-6872-31300080b3bf\";\n    var ProblemResolution = \"52a0bfb0-b7e6-d16e-d06e-97ce62b4a335\";\n\n    if (pageForm.type === 'Problem') {\n        var statusNotResolvedOrClosed = (pageForm.viewModel.Status.Id !== ProblemStatus_Resolved && pageForm.viewModel.Status.Id !== ProblemStatus_Closed);\n        var statusResolved = (pageForm.viewModel.Status.Id == ProblemStatus_Resolved);\n        var showChangeStatus = (session.user.Analyst && !pageForm.newWI);\n\n        pageForm.taskTemplate = {\n            tasks: [\n                        //{ Task: \"analystByGroup\", Label: localization.AssignToAnalystByGroup, Access: session.user.Analyst, Configs: { propertyName: \"TierQueue\", enumId: ProblemTierQueue } },\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: ProblemStatus, resolutionCategoryEnumId: ProblemResolution } },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"newStatus\", Label: localization.CloseProblem, Access: statusResolved, Configs: { confirmTitle: localization.CloseProblem, confirmMessage: localization.SureCloseProblem, newStatusName: localization.Closed, newStatusId: ProblemStatus_Closed } },\n                        { Task: \"newStatus\", Label: localization.ReactivateProblem, Access: statusResolved, Configs: { confirmTitle: localization.ReactivateProblem, confirmMessage: localization.SureReactivateProblem, newStatusName: localization.Active, newStatusId: ProblemStatus_Active, otherBoundChanges: { \"ResolutionDescription\": null, \"ResolutionCategory\": null } } },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n\n\n            ]\n        };\n    }\n\n\n\n    //Release Record Tasks\n\n    var ReleaseRecordStatus = \"8909ce55-a87f-2d7e-eb64-aba670596696\";\n    var ReleaseRecordStatus_New = \"9b3c924a-3f95-b9d8-6711-42aa8271dd30\";\n    var ReleaseRecordStatus_Closed = \"221155fc-ad9f-1e40-c50e-9028ee303137\";\n    var ReleaseRecordStatus_Completed = \"c46ca677-e6c5-afe0-b51e-6aaad1f50e58\";\n    var ReleaseRecordStatus_Failed = \"f0073e33-fdda-a1ba-cd93-40b7c88afff4\";\n    var ReleaseRecordStatus_Cancelled = \"a000ff0a-2897-4184-73cb-308f533c0dca\";\n    var ReleaseRecordStatus_Editing = \"f71c86cf-afbd-debf-4464-52fe122b888b\";\n    var ReleaseRecordStatus_OnHold = \"bab68d61-1e58-96ff-9f64-33a530fdaf98\";\n    var ReleaseRecordStatus_InProgress = \"1840bfdc-3589-88a5-cea9-67536fd95a3b\";\n    //var ReleaseRecordSupportGroup = \"23c243f6-9365-d46f-dff2-03826e24d228\";\n    var ReleaseRecordImplementationResults = \"3f02cab3-0d33-804a-1b3e-7266e2728d69\";\n\n\n\n    if (pageForm.type === 'ReleaseRecord') {\n        var statusCancelled = (pageForm.viewModel.Status.Id == ReleaseRecordStatus_Cancelled);\n        var statusCompleted = (pageForm.viewModel.Status.Id == ReleaseRecordStatus_Completed);\n        var statusFailed = (pageForm.viewModel.Status.Id == ReleaseRecordStatus_Failed);\n        var showCancelled = !pageForm.newWI && !statusCancelled && !statusCompleted && !statusFailed;\n        var showChangeStatus = (session.user.Analyst && !pageForm.newWI);\n        var showCloseStatus = !pageForm.newWI && (statusCancelled || statusCompleted || statusFailed);\n        var showAcknowledge = session.user.Analyst && !statusCompleted && pageForm.viewModel.FirstResponseDate == null;\n        var statusNotResolvedOrClosed = (pageForm.viewModel.Status.Id !== ReleaseRecordStatus_Completed && pageForm.viewModel.Status.Id !== ReleaseRecordStatus_Failed && pageForm.viewModel.Status.Id !== ReleaseRecordStatus_Closed);\n        var showLinkToparent = session.user.Analyst && statusNotResolvedOrClosed && !pageForm.viewModel.IsParent;\n        var showRevertToParent = session.user.Analyst && statusNotResolvedOrClosed && pageForm.viewModel.IsParent;\n        var showConvertToParent = session.user.Analyst && statusNotResolvedOrClosed && !pageForm.viewModel.IsParent && (_.isNull(pageForm.viewModel.ParentWorkItem) || _.isUndefined(pageForm.viewModel.ParentWorkItem));\n        var showRun = (pageForm.viewModel.Status.Id == ReleaseRecordStatus_Editing || pageForm.viewModel.Status.Id == ReleaseRecordStatus_OnHold);\n\n        pageForm.taskTemplate = {\n            tasks: [\n                       //{ Task: \"analystByGroup\", Label: localization.AssignToAnalystByGroup, Access: session.user.Analyst, Configs: { propertyName: \"SupportGroup\", enumId: ReleaseRecordSupportGroup } },\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: ReleaseRecordStatus, resolutionCategoryEnumId: ReleaseRecordImplementationResults } },\n                        { Task: \"convertToParent\", Label: localization.ConvertToParent, Access: showConvertToParent, Configs: { isParent: true, confirmTitle: localization.ConvertToParent, confirmMessage: localization.SureConvertToParentRecord } },\n                        { Task: \"convertToParent\", Label: localization.RevertToParent, Access: showRevertToParent, Configs: { isParent: false, confirmTitle: localization.RevertToParent, confirmMessage: localization.SureRevertToParentRecord } },\n                        { Task: \"linkToParent\", Label: localization.LinktoParentRecord, Access: showLinkToparent, Configs: {} },\n                        { Task: \"newStatus\", Label: localization.Run, Access: showRun, Configs: { newStatusName: localization.Run, newStatusId: ReleaseRecordStatus_InProgress, commentMessage: localization.RunComentMessage } },\n                        { Task: \"newStatus\", Label: localization.CancelRequest, Access: showCancelled, Configs: { confirmTitle: localization.CancelRequest, confirmMessage: localization.SureCancelRequest, newStatusName: localization.Cancelled, newStatusId: ReleaseRecordStatus_Cancelled } },\n                        { Task: \"newStatus\", Label: localization.CloseReleaseRecord, Access: showCloseStatus, Configs: { confirmTitle: localization.CloseReleaseRecord, confirmMessage: localization.SureCloseReleaseRecord, newStatusName: localization.Closed, newStatusId: ReleaseRecordStatus_Closed } },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n            ]\n        };\n\n    }\n\n\n    //add custom tasks\n    var tasks = app.custom.formTasks.get(pageForm.type);\n    if (_.isArray(tasks)) {\n        $.each(tasks, function (i, task) {\n            pageForm.taskTemplate.tasks.push({ Task: \"custom\", Type: pageForm.type, Label: task.label, Access: true, Configs: { func: task.func } })\n        });\n    }\n\n\n    var init = function () {\n        var isClosed = false;\n        // select template\n        setTemplateJSONFromSessionAdJSON();\n\n        //check if form is disabled\n        if (!pageForm.newWI) {\n            //if status is closed then disable the form\n            if (pageForm.viewModel.Status.Id === ServiceRequestStatus_Closed || // \"c7b65747-f99e-c108-1e17-3c1062138fc4\" ||  // SR Closed\n                pageForm.viewModel.Status.Id === ChangeStatus_Closed ||// \"f228d50b-2b5a-010f-b1a4-5c7d95703a9b\" || // CR Closed\n                pageForm.viewModel.Status.Id === IncidentStatus_Closed || // \"bd0ae7c4-3315-2eb3-7933-82dfc482dbaf\") { // Incident Closed\n                pageForm.viewModel.Status.Id === ProblemStatus_Closed ||\n                pageForm.viewModel.Status.Id === ReleaseRecordStatus_Closed) {\n                isClosed = true;\n                pageForm.viewModel.isDisabled = true;\n            }\n        }\n\n        var alertContainer = $('#alertMessagesContainer');\n        alertContainer.addClass(\"sticky-header\");\n        formContainer.addClass(\"sticky-header\");\n        taskContainer.addClass(\"sticky-header\");\n        headerContainer.addClass(\"sticky-header\");\n        \n        if (!app.isMobile()) {\n\n            //add dynamic containers to main container\n            //mainContainer.append(headerContainer, formContainer);\n            mainContainer.append(formContainer);\r\n\n            //add task container before main\n            mainContainer.before(taskContainer);\n\n        } else {\n            mainContainer.append(formContainer);\n            mainContainer.after(taskContainer);\n        }\n\n        if (!isClosed) {\n            //build out tasks\n            taskContainer.append(\"<h2>\" + localization.Tasks + \"</h2>\");\n            taskBuilder.build(pageForm, function (view) {\n                taskContainer.append(view);\n            });\n\n        }\n\n        //build and add header container\n        headerBuilder.build(pageForm, function (view) {\n            headerContainer.append(view);\n        });\n\n        //build and add form from json definition\n        formBuilder.build(pageForm, function (html) {\n            formContainer.append(html);\n            app.controls.apply(formContainer, { localize: true, vm: dataVM, bind: true });\n            formContainer.show();\n\n            // make sure we have the drawer before we try to add buttons buttons\n            //if (!_.isUndefined(drawermenu)) { //stupid underscore need to move to lo-dash\n            if (typeof (drawermenu) != 'undefined') {\n                createButtons();\n            } else {\n                app.events.subscribe(\"drawerCreated\", function () {\n                    createButtons();\n                });\n            }\n\n            setPriorityByMatrix();\n            addRecordAssignedLog();\n            setScheduleDuration();\n            app.lib.handleMessages();\n\n            //bind change event no that form is built\n            dataVM.bind(\"change\", function (e) {\n                onVmChange(e);\n            });\n\n            // call bound on ready functions\n            _.each(readyArray, function (func, index) {\n                if (_.isFunction(func)) {\n                    func();\n                }\n            });\n\n            // prevent 'enter' key from submitting form on older browsers.\n            formContainer.on('keypress', function (e) {\n                app.lib.stopEnterKeySubmitting(e);\n            });\n\n            if (!app.isMobileDevice()) {\n                var $taskPanel = $('.task-panel').first();\n                $taskPanel.affix({ offset: { top: $taskPanel[0].getBoundingClientRect().top - 84 } });\n                kendo.data.binders.yScrollOnResize($taskPanel[0], { yScrollOnResize: { path: { top: 'auto', bottom: 50 } } }, {});\n            }\n            //manage dirty\n            formHelper.manageDirty(dataVM);\n        });\n\n        //remove the mask\n        app.lib.mask.remove();\n    }\n\n    // Template Decider\n    // Chooses template from JSON by session and work item type\n    var setTemplateJSONFromSessionAdJSON = function () {\n        var type = formType;\n        var defaultName = \"Default\";\n        var json = pageForm.formTemplate;\n        if (!json.Default) {\n            var msg = \"A '\" + defaultName + \"' template is required.\";\n            if (type) {\n                msg += \" \\r\\r When creating a JSON template for '\" + type + \"' you must add a template with the key of '\" + defaultName + \"'. This is used for fallback if a specific template is not found.\";\n            }\n            alert(msg);\n        }\n        // using a matcher in case something changes on either side\n        // this will be easier and faster fix\n        // { \"formType from work item cshtml\": \"prop name from session.user that holds template\" }\n        var typeToSession = {\n            \"Incident\": \"IncidentForm\",\n            \"ChangeRequest\": \"ChangeRequestForm\",\n            \"ServiceRequest\": \"ServiceRequestForm\",\n            \"Problem\": \"ProblemForm\",\n            \"ReleaseRecord\": \"ReleaseRecordForm\"\n        }\n        var getTemplateNameFromSession = function () {\n            if (type && typeToSession[type] && session && session.user &&\n                session.user[typeToSession[type]] && json[session.user[typeToSession[type]]]) {\n                return session.user[typeToSession[type]];\n            }\n            return defaultName;\n        }\n        var templateName = getTemplateNameFromSession();\n        pageForm.formTemplate = json[templateName];\n\n\n    }\n\n    // Form Buttons\n    var createButtons = function () {\n        // Save Failure\n        //TODO: this could possibly end up being a switch statement to check what the error source is\n        var saveFailure = function (exceptionMessage) {\n            //console.log('save failure');\n            if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\n                app.lib.message.add(exceptionMessage, \"danger\");\n            } else {\n                //fallback to generic message\n                app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\n            }\n            app.lib.message.show();\n            //take use to the error message\n            window.scrollTo(0, 0);\n        }\n\n        // Save Button\n        drawermenu.addButton(localization.Save, \"fa fa-check\", function () {\n\n            save(function (data) {\n                //console.log('save form type check');\n                //this message needs to be tailored to the different types of WIs\n                var message = \"\";\n                var link = \"\";\n                switch (pageForm.type) {\n                    case \"ChangeRequest\":\n                        message = localization.ChangeRequestSavedMessage;\n                        link = \"/ChangeRequest/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    case \"ServiceRequest\":\n                        message = localization.ServiceRequestSavedMessage;\n                        link = \"/ServiceRequest/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    case \"Incident\":\n                        message = localization.IncidentSavedMessage;\n                        link = \"/Incident/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    case \"Problem\":\n                        message = localization.ProblemSavedMessage;\n                        link = \"/Problem/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    case \"ReleaseRecord\":\n                        message = localization.ReleaseRecordSavedMessage;\n                        link = \"/ReleaseRecord/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    default:\n                        message = localization.WorkItemSavedMessage;\n                        break;\n\n                }\n\n                app.lib.message.add(message + \"&nbsp;&nbsp;<a href='\" + link + \"'><strong>\" + dataVM.Id + \"</strong></a> \", \"success\");\n                //forward the user along\n                app.lib.gotoFormReturnUrl();\n                return;\n\n            }, saveFailure);\n        });\n        // Apply Button\n        drawermenu.addButton(localization.Apply, \"fa fa-pencil\", function () {\n\n            save(function (data) {\n                app.lib.message.add(localization.ChangesApplied, \"success\");\n                //forcing the page to reload allows use to make sure change in status and form disable is handled\n                //we should only do this if status was changed to a value that requires the form tb be disabled\n                switch (pageForm.type) {\n                    case \"ChangeRequest\":\n                        location.href = \"/ChangeRequest/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    case \"ServiceRequest\":\n                        location.href = \"/ServiceRequest/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    case \"Incident\":\n                        location.href = \"/Incident/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    case \"Problem\":\n                        location.href = \"/Problem/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    case \"ReleaseRecord\":\n                        location.href = \"/ReleaseRecord/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    default:\n                        location.href = \"/WorkItems/MyItems/\";\n                        break;\n                }\n\n            }, saveFailure);\n        });\n        // Cancel Button\n        drawermenu.addButton(localization.Cancel, \"fa fa-times\", function () {\n            if (dataVM.get(\"isDirty\")) {\n                $.when(kendo.ui.ExtOkCancelDialog.show({\n                    title: localization.Warning,\n                    message: localization.UnsavedDataMessage,\n                    icon: \"fa fa-exclamation\"\n                })\n                ).done(function (response) {\n                    if (response.button === \"ok\") {\n                        //make the form clean so we don't trigger onbeforeunload\n                        dataVM.set(\"isDirty\", false);\n\n                        app.lib.gotoFormReturnUrl();\n                        return;\n                    }\n                });\n            } else {\n                app.lib.gotoFormReturnUrl();\n                return;\n            }\n        });\n\n\n        // mobile task Button\n        formHelper.mobileDrawerTaskButton(taskContainer);\n\n\n    }\n\n    var sendMentionsMail = function (emailData) {\n        $.ajax({\n            url: \"/EmailNotification/SendMentionsNotification\",\n            type: \"POST\",\n            data: emailData,\n            success: function () {\n                kendo.ui.progress($(\".k-window\"), false);\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                console.log(jqXHR, textStatus, errorThrown);\n            }\n        });\n    }\n\n    var processTemplate = function (actionLog, workItem, givenTemplate) {\n        //replace tokens in action log notification template\n        var template = $('<div/>').html(givenTemplate).text();\n\n        var tokens = template.match(/{{([^}]+)}}/g);\n        _.each(tokens, function (key) {\n            var token = key.replace('{{', '').replace('}}', '').replace(/\\s/g, '');\n            var type = token.substring(token.lastIndexOf(':') + 1, token.length)\n            token = token.substring(0, token.lastIndexOf(':'));\n            var value = \"\";\n            if (type === \"ActionLog\") \n                value = actionLog[token];\n\n            if (type === \"WorkItem\") {\n                if (token === \"URL\") {\n                    value = window.location.pathname;\n                } else\n                    value = workItem[token];\n            }\n            if (app.lib.isDateValue(value))\n                value = kendo.toString(kendo.parseDate(new Date(value)), \"g\");\n\n            template = template.replace(key, value);\n        });\n\n        if (!session.sendNotificationAsHTML)\n            template = app.lib.htmlEntities(template);\n\n        return template;\n    }\n\n    // Ajax Save Method (to be moved)\n    var save = function (success, failure) {\n        //ensure all values inputted have been bound to VM\n        //not sure this is even needed and it causes many problems\n        //need to delete after regression -JK\n        //$(\".page_content *\").blur();\n\n\n        app.lib.mask.apply();\n        var valid = true;\n        var required = true;\n        //todo separate function for CR and RR\n        //if separate function page is slows\n\n        if (pageForm.type === 'ReleaseRecord') {\n            if (!_.isNull(dataVM.ScheduledStartDate) || !_.isNull(dataVM.ScheduledEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ScheduledStartDate, dataVM.ScheduledEndDate, localization.ScheduledStartDateExceedScheduledEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n            if (!_.isNull(dataVM.ActualStartDate) || !_.isNull(dataVM.ActualEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ActualStartDate, dataVM.ActualEndDate, localization.ActualStartDateExceedActualEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n            if (!_.isNull(dataVM.ScheduledDowntimeStartDate) || !_.isNull(dataVM.ScheduledDowntimeEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ScheduledDowntimeStartDate, dataVM.ScheduledDowntimeEndDate, localization.ScheduledDowntimeStartDateExceedScheduledDowntimeEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n            if (!_.isNull(dataVM.ActualDowntimeStartDate) || !_.isNull(dataVM.ActualDowntimeEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ActualDowntimeStartDate, dataVM.ActualDowntimeEndDate, localization.ActualDowntimeStartDateExceedActualDowntimeEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n        }\n        if (pageForm.type === 'ChangeRequest') {\n            if (!_.isNull(dataVM.ScheduledStartDate) || !_.isNull(dataVM.ScheduledEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ScheduledStartDate, dataVM.ScheduledEndDate, localization.ScheduledStartDateExceedScheduledEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n\n        }\n\n        var checkActivityDates = function (dataVM) {\n            if (dataVM.Activity && dataVM.Activity.length > 0) {\n                _.each(dataVM.Activity, function (activity) {\n                    if (activity.ClassName == \"System.WorkItem.Activity.ManualActivity\") {\n                        //check actual end dates\n                        if (!_.isNull(activity.ActualStartDate) || !_.isNull(activity.ActualEndDate)) {\n                            if (!app.lib.CheckedManualActivityStartAndEndDate(activity.ActualStartDate, activity.ActualEndDate, localization.MaActualStartDateExceedActualEndDate)) {\n                                app.lib.mask.remove();\n                                valid = false;\n                                return;\n                            }\n                        }\n                        //check scheduled end dates \n                        if (!_.isNull(activity.ScheduledStartDate) || !_.isNull(activity.ScheduledEndDate)) {\n                            if (!app.lib.CheckedManualActivityStartAndEndDate(activity.ScheduledStartDate, activity.ScheduledEndDate, localization.MaScheduledStartDateExceedScheduledEndDate)) {\n                                app.lib.mask.remove();\n                                valid = false;\n                                return;\n                            }\n                        }\n                    }\n                    if (activity.ClassName == \"System.WorkItem.Activity.ParallelActivity\" || activity.ClassName == \"System.WorkItem.Activity.SequentialActivity\") {\n                        if (valid) {\n                            checkActivityDates(activity);\n                        }\n                    }\n                });\n            }\n            return;\n        }\n\n        //check for MA dates\n        if (dataVM.Activity && dataVM.Activity.length > 0) {\n            checkActivityDates(dataVM);\n        }\n\n        //checks all required fields\n        formContainer.find(\".form-group\").removeClass(\"has-error\");\n        formContainer.find(\"[required]\").each(function () {\n            var jqEle = $(this);\n\n            //This code is to check if enum is required or not for IE9.\n            var property = !_.isUndefined(jqEle.attr(\"data-control-bind\")) ? jqEle.attr(\"data-control-bind\") : jqEle[0].name;\n            if (_.isUndefined(property) || property != \"\") {\n                if (!_.isUndefined(jqEle[0].kendoBindingTarget) && !_.isUndefined(jqEle[0].kendoBindingTarget.options)) {\n                    property = jqEle[0].kendoBindingTarget.options.propertyName;\n                }\n            }\n            if (!_.isUndefined(property)) {\n                var isEnum = _.isObject(pageForm.viewModel[property]) && !_.isUndefined(pageForm.viewModel[property].Id);\n                if ((_.isNull(pageForm.viewModel[property]) || (pageForm.viewModel[property] === \"\")) ||\n                    (_.isObject(pageForm.viewModel[property]) && isEnum && (_.isNull(pageForm.viewModel[property].Id) || pageForm.viewModel[property].Id === \"\")) ||\n                    (((_.isObject(pageForm.viewModel[property]) && !isEnum && (_.isUndefined(pageForm.viewModel[property].BaseId) || _.isNull(pageForm.viewModel[property].BaseId)))))) {\n                    valid = false;\n                    jqEle.parents(\".form-group\").addClass(\"has-error\");\n                }\n            }\n            //END This code is to check if enum is required or not for IE9.\n\n            var nodeName = jqEle[0].nodeName.toLowerCase();\n            if (nodeName != \"input\" && nodeName != \"textarea\") {\n                jqEle = jqEle.find(\"input\");\n            }\n            if (jqEle.val() == \"\") {\n                valid = false;\n                jqEle.parents(\".form-group\").addClass(\"has-error\");\n            }\n\n        });\n\n        //check for valid enums\n        formContainer.find(\".input-error\").each(function () {\n            valid = false;\n        });\n\n        formContainer.find(\"[data-invalid]\").each(function () {\n            valid = false;\n            var jqEle = $(this);\n            jqEle.parents(\".form-group\").addClass(\"has-error\");\n\n            jqEle.css({\n                \"background-color\": \"#FBE3E4\"\n            });\n\n        });\n        if (!required) {\n            failure(localization.RequiredFieldsErrorMessage);\n            app.lib.mask.remove();\n            return;\n        }\n        //end check of req fields\n\n\n        if (!valid) {\n            failure(localization.PleaseCorrectErrors);\n            app.lib.mask.remove();\n            return;\n        }\n        //end check for valid enums\n\n\n        //check for un added action log commnets\n        if (dataVM.get('commentDirty')) {\n            app.lib.message.add(\"<strong>\" + localization.UnAddedActionLogComment + \"</strong>\", \"warning\");\n\n            //only going to warn you once\n            dataVM.set('commentDirty', false);\n\n            app.lib.message.show();\n            //take use to the error message\n            window.scrollTo(0, 0);\n\n            app.lib.mask.remove();\n            return;\n        }\n        //end check for un added action log commnets\n\n        var current = dataVM.toJSON();\n        //This will optimized the passing of mulitple object to only send the deleted or/and added items\n        if (pageForm.newWI == false) {\n            app.lib.optimizeFormMultiObject.BeforeSave(current, pageForm.jsonRaw);\n        }\n\n        var mailBox = [];\n\n        //check if there are mentioned users, send mail to users\n        if (current.AppliesToTroubleTicket) {\n            if (current.AppliesToTroubleTicket.length > 0) {\n                var logs = current.AppliesToTroubleTicket || [];\n                for (var i in logs) {\n                    if (logs[i].MentionedUsers) {\n                        if (logs[i].MentionedUsers.length > 0 && !session.disableActionLogNotification) {\n                            var emailData = {\n                                To: logs[i].MentionedUsers.join(\";\"),\n                                Cc: '',\n                                Subject: (session.actionLogNotificationTitle) ? processTemplate(logs[i], current, session.actionLogNotificationTitle) : (current.Id.length != 0) ? '[' + current.Id + '] ' + current.Title : current.Title,\n                                Message: (session.actionLogNotificationTemplate) ? encodeURIComponent(processTemplate(logs[i], current, session.actionLogNotificationTemplate)) : logs[i].DescriptionHTML,\n                                AttachedFileName: '',\n                                WorkItemId: current.BaseId\n                            };\n                            mailBox.push(emailData);\n                        }\n                        delete current.AppliesToTroubleTicket[i].MentionedUsers;\n                    }\n                    delete current.AppliesToTroubleTicket[i].DescriptionHTML;\n                }\n            }\n        } else if (current.AppliesToWorkItem) {\n            if (current.AppliesToWorkItem.length > 0) {\n                var logs = current.AppliesToWorkItem || [];\n                for (var i in logs) {\n                    if (logs[i].MentionedUsers) {\n                        if (logs[i].MentionedUsers.length > 0 && !session.disableActionLogNotification) {\n                            var emailData = {\n                                To: logs[i].MentionedUsers.join(\";\"),\n                                Cc: '',\n                                Subject: (session.actionLogNotificationTitle) ? processTemplate(logs[i], current, session.actionLogNotificationTitle): (current.Id.length != 0) ? '[' +current.Id + '] ' + current.Title: current.Title,\n                                Message: (session.actionLogNotificationTemplate) ? encodeURIComponent(processTemplate(logs[i], current, session.actionLogNotificationTemplate)) : logs[i].DescriptionHTML,\n                                WorkItemId: current.BaseId\n                            };\n                            mailBox.push(emailData);\n                        }\n                        delete current.AppliesToWorkItem[i].MentionedUsers;\n                    }\n                    delete current.AppliesToWorkItem[i].DescriptionHTML;\n                }\n            }\n        }\n\n        var postData = encodeURIComponent(JSON.stringify({\n            isDirty: true,\n            current: current,\n            original: pageForm.jsonRaw\n        }));\n        $.ajax({\n            type: 'POST',\n            dataType: 'text',\n            url: saveUrl,\n            data: \"formJson=\" + postData,\n            success: function (data, status, xhr) {\n\n                //make the form clean so we don't trigger onbeforeunload\n                dataVM.set(\"isDirty\", false);\n\n                _.each(mailBox,\n                    function(item) {\n                        sendMentionsMail(item);\n                    });\n\n                if (data.search('loginForm') < 0) { // Logged out check                   \n                    success(data);\n                } else {\n                    //session expired\n                    window.location = \"/Login/Login?ReturnUrl=\" + window.location.pathname;\n                }\n            },\n            error: function (xhr, ajaxOptions, thrownError) {\n                //do we have a data conflict\n                if (xhr.status == 409) {\n\n                    $.when(kendo.ui.ExtYesNoDialog.show({\n                        title: localization.DataConflict,\n                        message: localization.DataConflictError + \"<br/><br/><small>(\" + localization.DataConflictDescription + \")</small>\",\n                        icon: \"fa fa-exchange text-danger\",\n                        width: \"500px\",\n                        height: \"175px\"\n                    })\n                    ).done(function (response) {\n                        if (response.button === \"yes\") {\n                            //open in new tab, may not work this way in all browsers\n                            window.open(window.location.pathname);\n                        } else {\n                            //refresh page\n                            location.href = window.location.pathname;\n                        }\n                    });\n\n                } else if (xhr.status == 503) { //SDK unavailable\n                    var jsonRsp = xhr.responseText;\n                    app.lib.log(jsonRsp);\n                    var msgResponse = JSON.parse(jsonRsp);\n                    //determine error Message\n                    var errorMsg = localization.RequestFailed;\n                    if (msgResponse.exception && msgResponse.exception.length > 0) {\n                        errorMsg = msgResponse.exception;\n                    }\n                    //alert the user\n                    kendo.ui.ExtAlertDialog.show({\n                        title: localization.Failed,\n                        message: errorMsg,\n                        icon: \"fa fa-times-circle text-danger\"\n                    });\n                } else if (xhr.status == 403) { //user does not have access\n                    var jsonRsp = xhr.responseText;\n                    var errorMsg = \"\";\n                    try {\r\n                        app.lib.log(jsonRsp);\n                        var msgResponse = JSON.parse(jsonRsp);\n                        //determine error Message\n                        errorMsg = localization.RequestFailed;\n                        if (msgResponse.exception && msgResponse.exception.length > 0) {\r\n                            errorMsg = msgResponse.exception;\r\n                        }\r\n                    }\n                    catch (ex) {\r\n                        errorMsg = localization.RequestFailed;\r\n                    }\n\n                    //alert the user\n                    kendo.ui.ExtAlertDialog.show({\n                        title: localization.Failed,\n                        message: errorMsg,\n                        icon: \"fa fa-times-circle text-danger\"\n                    });\n\n\n                } else {\n\n                    failure();\n                    console && app.lib.log(localization.RequestFailed);\n                    app.lib.log(thrownError);\n\n                    var jsonRsp = xhr.responseText;\n                    app.lib.log(jsonRsp);\n\n                    var msgResponse = JSON.parse(jsonRsp);\n                    //determine error Message\n                    var errorMsg = localization.RequestFailed;\n                    if (msgResponse.exception && msgResponse.exception.length > 0) {\n                        errorMsg = msgResponse.exception;\n                    }\n\n                    kendo.ui.ExtAlertDialog.show({\n                        title: localization.ErrorDescription,\n                        message: errorMsg,\n                        icon: \"fa fa-exclamation\"\n                    });\n                }\n            },\n            processData: false,\n            async: true\n        });\n    }\n    //make pageForm Happy\n    pageForm.save = save;\n\n    // Priority Matrix logic for Incident\n    var setPriorityByMatrix = function () {\n        if (!priorityJSON) {\n            return;\n        }\n\n        var priority = !_.isNull(pageForm.viewModel.Priority) ? pageForm.viewModel.Priority : 0;\n        var priorityJSONU = priorityJSON.Matrix.U;\n        for (var i in priorityJSONU) {\n            var obj = priorityJSONU[i];\n            if (obj.Id == pageForm.viewModel.Urgency.Id) {\n                for (var x in obj.I) {\n                    var obj2 = obj.I[x];\n                    if (obj2.Id == pageForm.viewModel.Impact.Id) {\n                        priority = obj2.P;\n                        break;\n                    } else {\n                        priority = 9;\n                    }\n                }\n            }\n        }\n\n\n        if (priority != pageForm.viewModel.Priority) {\n            pageForm.viewModel.set(\"Priority\", priority);\n        }\n    }\n\n    //Set First Assigned Date(Incident/Service Request)\n    var setFirstAssignedDateValue = function () {\n        if ((session.user.Analyst == 1) && (pageForm.type === \"Incident\" || pageForm.type === \"ServiceRequest\")) {\n            if (_.isUndefined(pageForm.viewModel.AssignedWorkItem))\n                return;\n\n            var bHasCurrentAssignee = (pageForm.viewModel.AssignedWorkItem.BaseId != null) ? true : false;\n            var assignedDateEle = $(\"input[name='FirstAssignedDate']\");\n\n            if (pageForm.viewModel.FirstAssignedDate == null && bHasNoInitalAssignee && bHasCurrentAssignee) {\n                var date = new Date();\n                pageForm.viewModel.FirstAssignedDate = date.toISOString();\n\n                if (assignedDateEle.attr('data-control') == 'datePicker') {\n                    assignedDateEle.val(kendo.toString(new Date(), \"d\"));\n                } else if (assignedDateEle.attr('data-control') == 'dateTimePicker') {\n                    assignedDateEle.val(kendo.toString(new Date(), \"g\"));\n                }\n\n            } else if (bHasNoInitalAssignee && !bHasCurrentAssignee) {\n\n                //clear out first assigned date if first assignee is removed(prior to saving)\n                pageForm.viewModel.FirstAssignedDate = null;\n\n                if (assignedDateEle.attr('data-control') == 'datePicker') {\n                    assignedDateEle.val(\"\");\n                } else if (assignedDateEle.attr('data-control') == 'dateTimePicker') {\n                    assignedDateEle.val(\"\");\n                }\n            }\n\n\n\n\n\n        }\n    }\n\n    //add record assigned log everytime assignee is changed\n    var isBounded = false;\n    var lastAddedAssignee = null;\n    var addRecordAssignedLog = function () {\n\n        if ((session.user.Analyst == 1) && (pageForm.type === \"Incident\" || pageForm.type === \"ServiceRequest\" || pageForm.type === \"Problem\")) {\n            if (_.isUndefined(pageForm.viewModel.AssignedWorkItem))\n                return;\n\n            if (!isBounded) {\n                pageForm.viewModel.AssignedWorkItem.bind(\"change\", function (obj) {\n                    addRecordAssignedLog();\n                });\n                isBounded = true;\n            }\n\n            //skip on edit form page load\n            if (!pageForm.newWI && _.isNull(lastAddedAssignee)) {\n                lastAddedAssignee = !_.isNull(pageForm.viewModel.AssignedWorkItem.DisplayName) ? pageForm.viewModel.AssignedWorkItem.DisplayName : \"\";\n                return;\n            }\n\n            if ((!_.isNull(pageForm.viewModel.AssignedWorkItem.DisplayName) && !_.isUndefined(pageForm.viewModel.AssignedWorkItem.DisplayName))\n                && (pageForm.viewModel.AssignedWorkItem.DisplayName != lastAddedAssignee)) {\n                var actionLogType = app.controls.getWorkItemLogType(pageForm.viewModel);\n\n                if (actionLogType) {\n                    pageForm.viewModel[actionLogType]\n                        .unshift(new app.dataModels[actionLogType].recordAssigned(pageForm.viewModel.AssignedWorkItem.DisplayName));\n                }\n\n                lastAddedAssignee = pageForm.viewModel.AssignedWorkItem.DisplayName;\n            }\n        }\n    }\n\n    //set schedule duration for release record\n    var isScheduleBounded = false;\n    var setScheduleDuration = function () {\n\n        if ((pageForm.type !== \"ReleaseRecord\")) { return; }\n\n        if (!isScheduleBounded) {\n            pageForm.viewModel.bind(\"change\", function (obj) {\n                isScheduleBounded = true;\n                setScheduleDuration();\n            });\n        }\n\n        var scheduledDuration = calculateTimeDuration(pageForm.viewModel[\"ScheduledStartDate\"], pageForm.viewModel[\"ScheduledEndDate\"]);\n        var actualDuration = calculateTimeDuration(pageForm.viewModel[\"ActualStartDate\"], pageForm.viewModel[\"ActualEndDate\"]);\n        var scheduledDowntimeDuration = calculateTimeDuration(pageForm.viewModel[\"ScheduledDowntimeStartDate\"], pageForm.viewModel[\"ScheduledDowntimeEndDate\"]);\n        var actualDowntimeDuration = calculateTimeDuration(pageForm.viewModel[\"ActualDowntimeStartDate\"], pageForm.viewModel[\"ActualDowntimeEndDate\"]);\n\n        pageForm.viewModel.set(\"ScheduleDuration\", scheduledDuration);\n        pageForm.viewModel.set(\"ActualDuration\", actualDuration);\n        pageForm.viewModel.set(\"ScheduledDowntimeDuration\", scheduledDowntimeDuration);\n        pageForm.viewModel.set(\"ActualDowntimeDuration\", actualDowntimeDuration);\n\n    }\n    var calculateTimeDuration = function (startDate, endDate) {\n        if (_.isNull(startDate) || _.isNull(endDate)) { return \"\"; }\n        var dtStart = new Date(startDate);\n        var dtEnd = new Date(endDate);\n\n        var dayDiff = Math.round((dtEnd - dtStart) / 1000 / 60 / 60 / 24);\n        var hourDiff = Math.round(dtEnd.getHours() - dtStart.getHours());\n        var minDiff = Math.round(dtEnd.getMinutes() - dtStart.getMinutes());\n\n        if (hourDiff < 0) {\n            dayDiff = dayDiff - 1;\n            hourDiff = 24 + hourDiff;\n        }\n        if (minDiff < 0) {\n            hourDiff = hourDiff - 1;\n            minDiff = 60 + minDiff;\n        }\n\n        return localization.ScheduleDurationText.replace(\"{0}\", dayDiff).replace(\"{1}\", hourDiff).replace(\"{2}\", minDiff);\n    }\n\n    //set a global vm change function\n    var onVmChange = function (e) {\n        //console.log(e);\n        //console.log(e.field);\n\n        //This will optimized the passing of mulitple object to only send the deleted or/and added items\n        app.lib.optimizeFormMultiObject.OnVmChange(e);\n\n        //if we have a custom function bound to this change then fire it \n        if (_.isFunction(changesArray[e.field])) {\n            changesArray[e.field](e);\n        }\n\n        if (e.field === 'Urgency' || e.field === 'Impact') {\n            //update priority for IRs, which is calculated based on Urgency and Impact vals\n            setPriorityByMatrix();\n        }\n\n        if (e.field === 'Title') {\n            //update displayname every time title changes\n            var displayName = !_.isNull(pageForm.viewModel.Title) ? pageForm.viewModel.Id + \" - \" + pageForm.viewModel.Title : pageForm.viewModel.Id;\n            pageForm.viewModel.set(\"DisplayName\", displayName);\n        }\n\n        if (e.field === 'AssignedWorkItem.BaseId') {\n            setFirstAssignedDateValue();\n        }\n    }\n    //make the things global - grrrr\n    pageForm.onVmChange = onVmChange;\n\n    init();\n\n});\ndefine(\"forms/wiMain\", function(){});\n\n"]}