{"version":3,"sources":["require/text.js","forms/tasks/anchor/view.html!text","forms/tasks/anchor/controller.js","forms/tasks/analystByGroup/view.html!text","forms/fields/enum/view.html!text","forms/fields/enum/controller.js","forms/tasks/drawerTask/view.html!text","forms/tasks/analystByGroup/controller.js","forms/popups/notificationPopup/view.html!text","forms/tasks/assignToMe/controller.js","forms/tasks/changeStatus/view.html!text","forms/tasks/changeStatus/view.drawer.html!text","forms/fields/longstring/view.html!text","forms/fields/longstring/controller.js","forms/fields/boolean/view.html!text","forms/fields/boolean/controller.js","forms/tasks/changeStatus/controller.js","forms/tasks/amChangeStatus/controller.js","forms/tasks/acknowledge/view.html!text","forms/tasks/acknowledge/controller.js","forms/tasks/convertToParent/controller.js","forms/tasks/linkToParent/view.html!text","forms/header/relationships/view.html!text","forms/tasks/linkToParent/controller.js","forms/tasks/newStatus/view.html!text","forms/tasks/newStatus/controller.js","forms/tasks/sendEmail/mobile_view.html!text","forms/tasks/sendEmail/view.html!text","forms/popups/userPickerPopup/view.html!text","forms/popups/userPickerPopup/controller.js","forms/flyout/fileAttachmentsFlyout/mobile_view.html!text","forms/flyout/fileAttachmentsFlyout/view.html!text","forms/flyout/fileAttachmentsFlyout/controller.js","../CustomSpace/Scripts/forms/tasks/sendEmail/controller.js","forms/tasks/custom/controller.js","forms/tasks/spacer/view.html!text","forms/tasks/spacer/controller.js","forms/tasks/associateItem/controller.js","forms/tasks/setDate/view.html!text","forms/fields/date/view.html!text","forms/fields/date/controller.js","forms/fields/string/view.html!text","forms/fields/string/controller.js","forms/tasks/setDate/controller.js","forms/tasks/updateAssetManagement/controller.js","forms/tasks/updateSupersededHardware/controller.js","forms/tasks/copyLicenseAssignments/view.html!text","forms/tasks/copyLicenseAssignments/controller.js","../CustomSpace/customtasks.tmpl.html!text","forms/tasks/copyToNewWI/controller.js","forms/tasks/increaseAvailableCount/view.html!text","forms/fields/longString/controller.js","forms/fields/numeric/view.html!text","forms/fields/numeric/controller.js","forms/tasks/increaseAvailableCount/controller.js","forms/tasks/decreaseAvailableCount/view.html!text","forms/tasks/decreaseAvailableCount/controller.js","forms/tasks/print/controller.js","forms/tasks/addMeToWatchList/controller.js","forms/taskBuilder.js","forms/header/sticky/view.html!text","forms/flyout/remoteManageWidget/view.html!text","forms/flyout/remoteManageWidget/controller.js","forms/flyout/headerAttachmentWidget/view.html!text","forms/predefined/fileAttachmentsDragDrop/view.html!text","forms/predefined/fileAttachmentsDragDrop/controller.js","forms/flyout/headerAttachmentWidget/controller.js","forms/header/sticky/controller.js","forms/header/status/view.html!text","forms/header/status/controller.js","forms/header/relationships/controller.js","forms/header/slo/view.html!text","forms/header/slo/controller.js","forms/header/spacer/view.html!text","forms/header/spacer/controller.js","forms/header/title/view.html!text","forms/header/title/controller.js","forms/header/approval/view.html!text","forms/header/approval/controller.js","forms/headerBuilder.js","forms/structure/formPanel/view.html!text","forms/structure/formPanel/controller.js","forms/structure/formPanelFull/view.html!text","forms/structure/formPanelFull/controller.js","forms/structure/customFieldGroup/view.html!text","forms/structure/customFieldGroup/controller.js","forms/structure/customFieldGroupRow/view.html!text","forms/structure/customFieldGroupRow/controller.js","forms/structure/columnField/view.html!text","forms/structure/columnField/controller.js","forms/structure/tab/view.html!text","forms/structure/tab/controller.js","forms/structure/tabPane/view.html!text","forms/structure/tabPane/controller.js","forms/structure/tabNavigation/view.html!text","forms/structure/tabNavigation/mobile.html!text","forms/structure/tabNavigation/controller.js","forms/structure/tabData/view.html!text","forms/structure/tabData/mobile.html!text","forms/structure/tabData/controller.js","forms/predefined/actionLog/view.html!text","forms/predefined/actionLog/controller.js","forms/predefined/fileAttachments/view.html!text","forms/predefined/fileAttachments/controller.js","forms/predefined/affectedItems/view.html!text","forms/popups/multipleObjectPickerPopup/view.html!text","forms/popups/multipleObjectPickerPopup/controller.js","../CustomSpace/Scripts/forms/predefined/affectedItems/controller.js","forms/predefined/relatedItems/view.html!text","../CustomSpace/Scripts/forms/predefined/relatedItems/controller.js","forms/predefined/childWorkItems/view.html!text","forms/predefined/childWorkItems/controller.js","forms/predefined/userInput/view.html!text","forms/predefined/userInput/controller.js","forms/predefined/activities/view.html!text","forms/predefined/activities/controller.js","forms/predefined/multipleObjectPicker/view.html!text","forms/predefined/multipleObjectPicker/controller.js","../CustomSpace/Scripts/forms/predefined/history/view.html!text","../CustomSpace/Scripts/forms/predefined/history/controller.js","forms/predefined/billableTime/view.html!text","forms/predefined/billableTime/controller.js","forms/predefined/knowledgeArticle/view.html!text","forms/predefined/knowledgeArticle/popup.html!text","forms/predefined/knowledgeArticle/controller.js","forms/fields/display/view.html!text","forms/fields/display/controller.js","forms/fields/spacer/view.html!text","forms/fields/spacer/controller.js","forms/fields/int/controller.js","forms/fields/decimal/controller.js","forms/fields/double/controller.js","forms/fields/datetime/view.html!text","forms/fields/datetime/controller.js","forms/fields/userPicker/view.html!text","forms/fields/userPicker/controller.js","forms/fields/objectPicker/view.html!text","forms/popups/objectPickerPopup/view.html!text","forms/popups/objectPickerPopup/controller.js","forms/fields/objectPicker/controller.js","forms/fields/button/view.html!text","forms/fields/button/controller.js","forms/fields/editor/view.html!text","forms/fields/editor/controller.js","forms/fields/combo/view.html!text","forms/fields/combo/controller.js","forms/fields/dropDownList/view.html!text","forms/fields/dropDownList/controller.js","forms/fields/bundle/view.html!text","forms/fields/bundle/controller.js","forms/fields/fileUpload/view.html!text","forms/fields/fileUpload/controller.js","forms/fields/urlTextbox/view.html!text","forms/fields/urlTextbox/controller.js","forms/fields/percentage/controller.js","forms/formBuilder.js","forms/formHelper.js","forms/wiMain.js"],"names":["define","module","text","fs","Cc","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","location","href","defaultProtocol","protocol","replace","defaultHostName","hostname","defaultPort","port","undefined","buildMap","masterConfig","config","version","strip","content","matches","match","jsEscape","createXhr","xhr","i","progId","XMLHttpRequest","ActiveXObject","e","parseName","name","modName","ext","temp","index","indexOf","isRelative","substring","length","moduleName","xdRegExp","useXhr","url","uProtocol","uHostName","uPort","exec","split","toLowerCase","finishLoad","onLoad","isBuild","load","req","inlineText","parsed","nonStripName","toUrl","get","err","error","write","pluginName","hasOwnProperty","asModule","writeFile","extPart","fileName","value","textWrite","contents","env","process","versions","node","require","nodeRequire","callback","errback","file","readFileSync","headers","header","open","setRequestHeader","onXhr","onreadystatechange","evt","status","readyState","Error","responseText","onXhrComplete","send","Packages","java","stringBuffer","line","io","File","lineSeparator","lang","System","getProperty","input","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","charAt","append","String","toString","close","Components","classes","interfaces","utils","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","init","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString","path","tpl","template","build","built","_","properties","$","extend","kendo","View","wrap","render","vm","EnumId","Required","Disabled","disabled","LeafNodeOnly","ShowPath","FilterIds","anchorTemplate","windowTemplate","enumPickerControl","drawerTaskTemplate","configEnumId","configPropertyName","callerType","type","isBulkEdit","originalAssignedName","originalAssignedId","originalSupportGroup","originalSupportName","originalSupportId","getTaskViewModel","modalView","taskVm","observable","analystByGroup","selectedWorkItem","groupPropertyName","groupPropertyEnumId","viewModel","set","Id","Name","Configs","propertyName","enumId","modalEle","element","clone","modalControl","kendoCiresonWindow","title","localization","AssignToAnalystByGroup","width","height","actions","data","windowViewModal","assignToDataSource","getUserDataSource","userEnabled","okEnabled","userChange","sender","_prev","AssignedWorkItem","okClick","app","lib","mask","apply","postData","ProjectionId","projectionId","UpdateServiceManagement","ItemIds","pluck","currentSelection","EditedFields","getBulkEditedFieldData","ajax","JSON","stringify","dataType","contentType","success","onBulkEditSaveSuccess","onBulkEditSaveFailure","isUndefined","TierQueue","SupportGroup","cancelClick","buildEnumPicker","container","props","vmModel","enumControl","html","controls","localize","bind","groupProperties","PropertyName","PropertyDisplayName","find","groupPicker","groupDropDownControl","handler","_dropdown","groupTreeViewControl","_treeview","item","this","dataItem","select","assignToCombobox","setSupportGroupUsers","current","removeClass","show","refresh","setAdditionBulkTaskProperties","anchorViewModel","drawerTaskVm","assignedWorkItem","displayName","baseId","isEnabled","showTooltip","setEnabled","enabled","targetControlId","onTargetControlChange","grid","selectedDataItems","isMobile","map","toArray","onExceedSelectionCount","selectedTypes","selectedStatusNames","singleSelectedType","reduce","memo","currentVal","singleSelectedStatusName","setTrimmedWiType","constants","projectionIds","SystemWorkItemServiceRequestViewModel","enumPickerIds","ServiceRequestSupportGroup","SystemWorkItemIncidentViewModel","IncidentTierQueue","pop","json","trimmedType","EditedValue","assignedSupportGroup","PropertyType","PropertyRelationshipId","ActionType","Description","RecordAssignedDescription","session","user","DescriptionDisplay","EnteredBy","EnteredDate","Date","toISOString","LastModified","Title","RecordAssigned","Image","iconPath","icons","ui","ExtAlertDialog","localizationHelper","message","dataSource","query","targetGrid","targetGridState","gridUtils","savedState","getCurrentState","recheckGridState","add","remove","getOriginalFormValues","DisplayName","BaseId","isNull","Text","selectedSupportGroupId","DataSource","transport","read","addUrlParam","schema","model","fields","vmWindow","asssignToComboBox","focus","attr","ChooseOne","buildAndRender","windowEle","view","destroy","taskListItem","builtAnchor","anchorElm","formTaskViewModel","onClick","toolTipMessage","events","subscribe","event","listView","selectedCards","controlId","wrapper","Target","anchor","notificationTpl","notificationTemplate","target","assignToMe","cont","popupNotification","kendoNotification","templates","infoMessage","AssignedToMeNotificationMessage","link","longStringController","CheckLength","setTimeout","elem","currentTarget","helpBlock","next","maxChars","val","hide","removeAttr","buildLongStringView","limitLength","MinLength","MaxLength","LimitLength","Rows","visible","IsVisible","Inline","changeStatusTemplate","changeStatusDrawerTemplate","txtAreaControl","checkBoxControl","IsAutoResolve","AutoResolve","resolveChildIncidentSettings","originalVm","Status","ResolutionCategory","ResolutionDescription","ChildWorkItem","Notes","ImplementationResults","RelatesToWorkItem","Resolution","workItemStatuses","incidentResolved","Incident","Resolved","incidentActive","Active","incidentClosed","Closed","incidentActivePending","Pending","serviceRequestCancelled","ServiceRequest","Cancelled","serviceRequestCompleted","Completed","serviceRequestSubmitted","Submitted","serviceRequestInProgress","InProgress","serviceRequestOnHold","OnHold","serviceRequestFailed","Failed","serviceRequestClosed","changeRequestFailed","ChangeRequest","changeRequestClosed","changeRequestInProgress","changeRequestOnHold","changeRequestCancelled","changeRequestSubmitted","changeRequestCompleted","problemResolved","Problem","problemClosed","releaseRecordClosed","ReleaseRecord","releaseRecordCancelled","releaseRecordCompleted","releaseRecordFailed","releaseRecordEditing","Editing","releaseRecordOnHold","releaseRecordInProgress","getFormTaskViewModel","changeStatus","modalWindowEle","modalWindowControl","ChangeStatusTask","activate","selectedWiType","modalWindowViewModel","currentStatusId","onModalActivate","statusTreeViewControl","statusDropDownControl","statusEnumId","resolutionCategoryEnumId","resolveChildSettings","letAnalystDecide","workItemModel","requireResolution","resolveChildIncident","actionLogType","getWorkItemLogType","isString","RequestCategoryRequiredError","ImplementationNotesRequiredError","resDateEle","unshift","dataModels","recordResolved","RelatesToTroubleTicket","IsParent","ResolveChildIncident","ResolvedLetAnalystDecide","resolveChildIncidents","closeDateEle","RelatesToTroubleTicket_","recordClosed","ClosedByUser","recordActivated","comDateEle","resolveRelatedWorkItems","showComment","showResolution","showAutoResolve","createStatusPicker","enableResolutionSettings","createIncidentResolutionFields","createResultFields","createProblemResolutionFields","getDrawerTaskViewModel","currentSelectionOfParents","containsParents","currentStatusName","statusTypeId","resolutionResultEnumId","openModal","handleStatusControlChange","modalViewModel","toggleAdditionalFields","selectedWorkItems","selectedParents","newStatusObj","newResolutionId","resolutionDescription","newResultId","resultNote","resultComment","showPath","leafNodeOnly","wiStatusTypeId","irStatusResolved","srStatusCompleted","srStatusCancelled","irCategoryRequired","srNotesRequired","irResolveChildOption","windowViewModel","bulkEditFormIsValid","postBulkEditChangesWithChildren","getDrawerTaskEditedFields","postBulkEditChanges","selectedStatusIds","singleSelectedStatusId","ServiceRequestImplementationResults","parentItems","each","workItem","push","IncidentResolution","treeControl","dropDownControl","changeRules","getFormTaskChangeRules","changeRulesFilter","field","operator","options","serverFiltering","filter","id","itemFilter","comboDataSource","setDataSource","getResolveChildIncidentSettings","builtModal","ele","resolutionProperties","implementationNotesProperties","buildTextArea","autoResolveProperties","buildCheckbox","implementationResultProperties","commentProperties","resolutionDescriptionProperties","letAnalystDecideProperties","statusProperties","cbTxtAreaControl","txtCheckboxControl","getDrawerTaskChildEditedFields","resolutionCategoryId","propertyRelationshipId","RecordResolved","statusId","ChildIncidentResolutionCategorySameAsParent","ChildIncidentResolutionCategory","ResolvedDate","Array","logic","filters","windowVm","parentIds","childIds","itemIds","childId","uniqIds","uniq","childResolutionCatId","childrenPostData","wiSelectionPostData","postCallback","drawerTaskViewModel","anchorEleProps","titleKey","anchorTemplateProps","enumPicker","ChangeHardwareAssetStatus","enumName","ChangeHardwareAssetType","ChangeSoftwareAssetStatus","ChangeSoftwareAssetType","tempStatus","win","_vmWindow","acknowledge","Acknowledge","dateTimeNow","dateTimeNowUTC","actionLogComment","isPrivate","charactersRemaining","textCounter","FirstResponseDate","respondDateEle","newActionLog","Analyst","Comment","IsPrivate","ActionLog","pageForm","isParent","confirmTitle","confirmMessage","convertToParent","when","ExtYesNoDialog","done","response","button","save","ChangesApplied","saveFailure","exceptionMessage","RequiredFieldsErrorMessage","PleaseCorrectErrors","linkToParent","ClassId","LinktoNewParentIncident","LinkToNewParentRecord","refreshDataSource","getChildIncidentSettings","searchText","searchClick","selectedRow","ParentWorkItem","childIncidentSettings","ActiveChildIncidentLinkStatus","buildParentHeaderView","parentView","workItemType","cache","pageSize","gridChange","eventArgs","otherBoundChanges","setNewStatus","newStatusId","addComment","newStatusName","processChildIncidentReactivation","reactivateChildandSave","ChildIncidentReactivatedStatus","parseJSON","ReactivateLetAnalystDecide","ReactivateChildIncidentTitle","ReactivateChildIncidentMessage","ReactivateChildIncident","newStatusConfig","comment","newComment","commentMessage","CancelledStatusCommentMessage","__userPickerPopupSingleton","NameIdModel","nameProp","idProp","self","serverNameProp","serverIdProp","setObj","setFromObj","obj","getFromObj","getObj","getGenericFromObj","UserPickerPopup","targetEle","groupsOnly","popup","_vm","gridHtml","gridUrl","_model","setSaveCallback","unbind","setCancelCallback","bindEvents","onSearchClick","search","searchValue","onSaveClick","isMobileDevice","selectedUser","userObj","trigger","closePopup","kendoGrid","onCancelClick","openPopup","kendoDataSource","kendoWindow","createPopup","Popup","createGrid","Grid","createKendoWindow","SelectGroup","SelectUser","settings","pager","on","onRowDblClick","page","createKendoDataSource","prefix","userFilter","filterByAnalyst","serverPaging","serverSorting","serverGrouping","total","errors","PrincipalName","UserName","Domain","Company","FirstName","LastName","EmployeeId","createKendoGrid","selectable","sortable","mode","pageable","filterable","extra","operators","string","startswith","Startswith","contains","Contains","eq","Isequalto","neq","Isnotequalto","autoBind","columns","hidden","encoded","attributes","class","SearchText","selectUserText","searchOnEnter","which","preventDefault","cancel","userDataSource","onListViewChanged","isDesktopView","isMobileView","getPopup","__fileAttachmentsPopupSingleton","FileAttachmentsPopup","task","FileAttachments","selectedFiles","closeModal","onOpenFile","saveCancelBtn","closeBtn","modal","selectFile","el","isImage","closest","getByUid","action","downloadUrl","rootURL","window","document","body","appendChild","createElement","src","dialog","dialogs","kendoDialog","Content","animation","effects","addClass","before","off","kendoListView","FileAttachment","change","dataBound","parent","objectPickerPopup","attachmentPickerFlyout","recipientList","recipientToList","recipientCCList","sendEmail","SendEmail","getAffectedUserEmail","setDefaultWIStatus","emailTo","emailCC","emailSubject","emailHTMLMessage","emailBodyTemplate","emailTextMessage","emailAttachment","emailTemplateDataSource","tempateDataSource","emailTemplateValue","attachmentErrorMessage","addToLog","addToActionLogDefault","forceAddToActionLog","enableAddToLog","setAsPrivate","saveMessageAsPrivate","recipientToEmail","without","findWhere","Email","join","recipientCcEmail","arrEmail","union","InvalidEmailAddress","PleaseProvideEmailAddress","invalidEmailAdress","validateEmailAddress","InvalidEmailAddressMessage","editor","innerText","textContent","trim","MessageRequired","MessageRequiredWhenAddingLogEntry","progress","ExtOkCancelDialog","Warning","UnsavedDataMessage","icon","widget","remoteManageRecepient","shown","emailTemplateChange","_old","dView","subject","Subject","resizeEditor","$this","children","hasClass","toggleClass","showChangeStatus","sendEmailAttachments","fromWorkItemAttachementsId","setFirstResponseDate","enableFirstResponseDate","popupWindow","object","recipientType","picker","userEmailObj","users","guid","email","key","viewWorkItemFiles","flyoutWindow","n","filesCount","changeStatusSetting","defaultStatusId","rootStatusEnumId","enableChangeStatus","fetchAll","names","items","subData","slice","concat","initializeUserPicker","initializeUploader","initializeStatusPicker","buildEditor","tooltip","getRemoteManageRecepient","getSendEmailChangeStatusSettings","applyChangeStatus","toPicker","ccPicker","stopImmediatePropagation","addToCommentLog","EMailSent","RequestedWorkItem","affectedUserId","textStatus","jqXHR","affectedUser","ready","recepient","async","invalidEmailAddress","validateEmail","fileAction","blob","Blob","URL","createObjectURL","navigator","msSaveOrOpenBlob","msSaveBlob","a","style","download","click","revokeObjectURL","removeChild","kendoUpload","saveUrl","ClassName","autoUpload","operation","files","rawFile","ErrorDescription","console","warn","showFileList","dropZone","targetProp","targetKey","userPicker","kendoMultiSelect","placeholder","Search","dataTextField","dataValueField","maxNumberOfResults","filtering","tagTemplate","currentList","deselect","clearButton","keyCode","jQuery","Event","bChangeStatus","bAddActionLog","addToLogSkipped","bHasAttachment","strAttachedFileNames","strMessage","encodeURIComponent","strMessagePlain","workItemFileIds","emailFooterTemplate","emailData","To","Message","AttachedFileNames","WorkItemId","bSetFirstResponsDate","bSuccess","SendEmailSuccessMessage","fileAdded","handleSaveSuccess","SkippedAddingLogEntryTitle","ErrorAddingLogEntryMessage","SendEmailFailedMessage","errorThrown","log","uploadPastedImage","d","timestamp","getTime","formData","FormData","processData","getBase64Image","img","canvas","getContext","drawImage","toDataURL","dataURItoBlob","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","defaultTools","shift","mobileTools","kendoEditor","tools","stylesheets","paste","pasteCleanup","custom","tagName","dataSRC","setAttribute","one","complete","at_config","at","headerTpl","insertTpl","displayTpl","limit","startWithSpace","editableAtwhoQueryAttrs","iframe","prev","innerDoc","contentDocument","contentWindow","$inputor","atwho","caret","$li","userId","userData","is","activeElement","removedAtWhoId","newList","filterIdParam","filterId","getChangeStatusRules","consoleSetting","SendEmailServiceRootStatusEnum","SendEmailServiceDefaultStatusEnum","SendEmailServiceAllowAnalystToChangeStatus","SendEmailChangeRootStatusEnum","SendEmailChangeDefaultStatusEnum","SendEmailChangeAllowAnalystToChangeStatus","SendEmailProblemRootStatusEnum","SendEmailProblemDefaultStatusEnum","SendEmailProblemAllowAnalystToChangeStatus","SendEmailReleaseRootStatusEnum","SendEmailReleaseDefaultStatusEnum","SendEmailReleaseAllowAnalystToChangeStatus","SendEmailIncidentRootStatusEnum","SendEmailIncidentDefaultStatusEnum","SendEmailIncidentAllowAnalystToChangeStatus","Label","func","customFunc","relationshipKey","FromFilter","ToFilter","FromRelative","ToRelative","MinValue","MaxValue","stringController","buildStringView","datePicker","stringArea","checkBox","datePickerCtrl","checkboxCtrl","openWindow","dateLabel","viewType","Disposed","blur","cancelledDate","originalDate","dateProperties","OriginalDisposalReference","recieveCheckbox","OriginalCheckBox","masterContractStartingDateCheckbox","DisposalDate","ReceiveDate","StartDate","propertyKey","buildDatePicker","stringProperties","DisposalReference","buildString","RemoveReceivedDate","RemoveMasterLeaseWarrantyStarts","dateControl","stringControl","checkboxControl","dtm","checked","enable","CommonContract","UpdateStatus","SetSeatsRemaining","UpdateSoftwareAsset","UpdateConsumable","SupersedesParent","CountAssignedConsumableUsers","CountAssignedConsumableAssets","assignedCount","Target_ConsumableHasAssignedUsers","Target_ConsumableHasAssignedAssets","CiresonAssetManagement","SoftwareAssetUpdateConfirmationMsg","isOk","Success","SoftwareAssetUpdated","reload","ErrorOccured","ajaxOptions","thrownError","failure","RequestFailed","jsonRsp","errorMsg","exception","UpdateSupersedesConfirmation","post","UpdatingAssets","TotalNumberofAssetsUpdated","count","ServerError","CopyLicenseAssignments","StartCopyLicenseAsssignements","serialize","bTransferUsers","bTransferComputers","bTranserToAuthorised","targetVM","selected","source","sourceVM","bTranserToAssigned","computerList","ComputerList","userList","UserList","PerformTransfer","UpdateSoftwareAssetMsg","itemList","targetProperty","isExist","indexTarget","addItem","copyToNewWI","hiddenVm","copy","method","submit","DecimalPlaces","StepIncrement","Format","numericArea","EditConsumableAvailableCount","tempLog","ObservableObject","ClassTypeId","Target_LogHasCreator","AllowCreatedDate","newGUID","Type","TaskRun","countProperties","zeroCount","buildNumeric","currentCount","addedcount","parseInt","newCount","IncreasedAvailableCount","AvailableCount","DecreasedAvailableCountBy","print","addMeToWatchList","isAddWatchlist","removeFromWatchList","AddMeToWatchList","addToWatchList","RemoveMeFromWatchList","WatchList","AddMeToWatchListNotificationMessage","splice","RemoveMeFromWatchListNotificationMessage","amChangeStatus","newStatus","spacer","associateItem","setDate","updateAssetManagement","updateSupersededHardware","copyLicenseAssignments","customTmpl","increaseAvailableCount","decreaseAvailableCount","definition","ulElement","fromDrawerBuilder","taskTemplate","tasks","taskCallback","Access","eval","Task","_obj","Exception","tmpl","__remoteManageWidgetSingleton","getWidget","first","after","addUserContainer","addTemplate","dataUserContainer","dataTemplate","addDeviceContainer","dataDeviceContainer","multipleDataTemplate","widgetActionIcon","createUserComboBox","initializePicker","eleContainer","eleTemplate","getKendoComboBox","createUserDeviceComboBox","createPrimaryDeviceComboBox","createDeviceComboBox","affectedUserText","assignedUserText","primaryOwnerText","affectedDeviceText","primaryDeviceText","userDeviceText","relatedDeviceText","getObjectDetails","details","AffectedUserAppPage","AssignedUser","PrimaryOwner","AffectedDeviceText","RelatedDeviceText","setSelected","parents","widgetType","mailtoLink","mainWidgetAttr","AssetStatus","HasRelatedWorkItems","mainWidgetDeviceAttr","RelatesToConfigItem","replaceAll","ds","searchFilter","classId","columnNames","Data","TrueControlCenterURL","beforeSend","TrueControlCenterAuthToken","className","kendoComboBox","suggest","appendTo","Path","Guid","addForm","assignedUser","primaryOwner","RelatesToIncident","affectedDevice","primaryDevice","userDevice","relatedDevice","relatedDeviceArr","affectedDeviceArr","primaryDeviceArr","clickContainer","nodeName","slideOutNav","getTCCSourceURL","UserManagement","ComputerManagement","removeUserCombobox","openCombobox","removeItem","propName","widgetValue","arr","liParent","openSendEmail","relatedDeviceObj","devices","affectedDeviceObj","changeCntr","widgetName","getJSON","parse","toggle","attachmentWidget","then","AcceptExtension","Clas","isDesktop","isVisible","onSelect","extension","FileExtensionInvalid","onUploadSuccess","f","onUploadError","onRemove","fieldName","css","defer","removeUrl","__headerAttachmentWidgetSingleton","fileAttachmentsDragDrop","getContainer","tplReturn","headerAttachmentContainer","_container","remoteManageWidget","headerAttachmentWidget","statusVisible","newWI","showRemoteManageIcon","DoWork","viewCallBack","controller","parentIncident","ParentRecord","Parentincident","editHref","editLink","unlinkParent","UnlinkToParent","SureUnlinkToParent","isSLOopen","toggleSLODropdown","closeSLODropdown","first_sloObjects","first_sloContainer","DoWorkSLOHeader","sloContainer","sloObjects","isDropdown","sloActive","sloPaused","sloMet","sloWarning","sloBreached","sloNotReady","isMet","isPaused","sloTemplate","sloObj","imageClass","isBreach","sloImg","SLOCoundown","Time","Hours","Minutes","Seconds","WarningDate","ServerDatetimeNow","sloCloned","isMetStat","hours","minutes","seconds","warningDate","serverCurrentDate","secs","Math","abs","mins","hrs","setSeconds","getSeconds","doClick","toggleMore","viewAttachments","isAnalyst","sloViewObj","rejected","approve","notYetVoted","approvalModel","decisionEnumId","comments","onRejectClick","updateStatus","onApproveClick","onCompleteClick","ManualActivity","updateManualActivity","onFailClick","isReviewActivity","updateReviewActivity","isManualActivity","ExtYesNoTextAreaDialog","Comments","DoYouHaveComments","required","Reviewer","reviewItem","group","userGroup","User","Decision","VotedBy","RequireImplementationNotes","ImplementationdetailsRequired","Implementationdetails","buttons","Save","$inputText","currentNotes","requiredCss","cls","Cancel","isDirty","toJSON","original","jsonRaw","successMessage","ReviewActivityApprovedMessage","ReviewActivityRejectedMessage","ManualActivityCompletedMessage","ManualActivityFailedMessage","handleMessages","pathname","DataConflict","DataConflictError","DataConflictDescription","ReconnectRequired","pageDataSource","isScoped","Security","IsWorkItemScoped","showInActives","requestEnd","updatePageDetails","pageCount","idx","pageString","statusInProgress","reviewDetails","fullDetails","review","nextClick","navigate","previousClick","dSource","nextItem","approvalUrl","onChangeSupportGroup","MASupportGroupField","SupportGroupFieldValue","currentPage","toatPage","pageText","disablePrevious","disableNext","workItemId","statusName","disabledButtons","reviewResult","reviewId","SupportGroupVisible","SupportGroupEnumId","MASupportGroupGuid","disabledMAButtons","sticky","relationships","slo","approval","headerTemplate","rows","row","rowElm","column","colElm","Class","Visible","dtpl","mtpl","cid","ObjectPickerPopup","dataSourceFilter","isConfigItem","controllerUrl","objects","selectedRows","grid2","itm","clearSearchText","gridFunctions","clear","outObjs","ObservableArray","addObject","max","grid2Funcs","removeObject","removeRow","gridFuncs","comboFuncs","getIdValue","onChange","onDataBound","totalPages","ii","iitem","dblClick","uid","item1","combo","SelectObject","createCombo","gc","userColumns","columnMenu","createGrid2","Total","nd","templateFrag","cur_table","boundArray","affectedItemController","addConfigItem","selectedConfigItemId","addAffectedItem","searchConfigItem","selectedConfigItem","configItemDataSource","onConfigItemChange","selectedIndex","isUserCIVisible","selectedUserConfigItemId","selectedUserConfigItem","addUserConfigItem","userConfigItemDataSource","parameterMap","onUserConfigItemChange","showMoreInfo","detailsPopupEle","detailsPopup","center","onDataBinding","table","Hidden","isWindowsComputer","isConfigItemWindowsComputer","objectId","result","isUser","isConfigItemUser","IsUser","isMoreInfo","isSlideOut","bIsUser","bIsWindowsComputer","hasControlCenterURL","showTCCInfo","onContextmenuSelect","onContextmenuActivate","managementTitle","menuItems","imageUrl","imageAttr","AdditionalDetails","setOptions","originalFilter","arguments","dsFilters","innerFilters","x","affectedtemController","isDuplicate","idToAdd","ObjectClassName","relatedItemController","Control","boundObj","bindButtonEvents","addClick","gridEle","command","Remove","scrollable","messages","info","Showitemswithvaluethat","and","And","or","Or","Filter","Clear","reorderable","ChooseColumns","sortAscending","SortAscending","sortDescending","SortDescending","editable","confirmDelete","cancelDelete","create","update","toolbar","selectedItem","strClass","PropertyToDisplay","ControllerUrl","IsMobileView","showProp","buildSubProperties","propToFill","prop","propSplit","mainProp","subProp","_boundArray","colNames","splitedProp","propperty","propIndex","ShowAddButton","isDisabled","hideRemoveButton","ShowRemoveButton","columnFields","buildColumnFields","columnToDisplay","buildGridColumns","dataBinding","formatPropertyInBoundArray","ClassProperties","Scoped","scopeBoundArray","SelectableRow","openObject","showRemovButton","localizationKey","localizedText","columnClass","SelectProperty","dateFormat","culture","calendar","patterns","g","format","currentItemEvent","columnString","currentItem","property","isBoolean","isNumber","scopeClassId","timeout","objectIds","_data","tbody","stringProp","HiddenProperty","DashboardsLicense","IsValid","enableWatchlist","historyTemplate","builtHistory","historyElm","kendoDropDownList","historyController","getObjectHistory","dataSourceSet","getDropDownDataSource","storage","setWithNoDirty","variable","isDirtyState","loadHistory","dropDownDataSet","getChildren","Activity","Key","activity","objectGUID","objectTitle","customhistoryModel","nodes","noop","LastUpdatedDisplay","billableTimeController","btHour","btMinute","btTotalTime","btTotalTimeInString","onHourSpin","onMinuteSpin","BillableTime","BasedId","LastUpdated","onAddClick","hour","minute","isExisting","newBillableModel","TimeInMinutes","computeTotalTime","resetTime","onSubtractClick","totalTime","SubtractTimeTitle","SubtractTimeMessage","itemTotalTime","Totaltime","popupTpl","popupView","knowledgeArticleModel","ArticleId","Category","selectedItems","articleIds","last","relatedHTMLKB","KnowledgeArticleID","WorkItemID","AssetID","AssetId","bindRowClick","getAllRelatedWorkItems","ArticleID","CategoryName","TypeName","removeRelatedKB","removeHTMLKB","HideLabel","number","userPickerPopup","ExtraProps","Delay","FilterByAnalyst","MaxNumberOfResults","extraProps","delay","minLength","forceKendoProp","helperBlock","autoComplete","refreshDisplayValues","onAutoCompleteValueChanged","onSearchIconClick","isModelSet","isModelSetNulled","hasExtraProps","createHelperBlock","HelperBlock","createAutocomplete","AutoComplete","detailsUrl","setDisplay","setValue","extraPropText","setExtraPropsDisplay","createHtml","data-bind","createViewModel","getUserObjectData","getDisplayName","str","isObject","searchBtn","detailsBtn","placeHolderText","SearchButton","focusedItemIndex","hasTCCURL","validateAutoCompleteValue","getDataSourceMatch","ul","getFocusedIndex","onDetailsBtnClick","stopPropagation","openSlideout","createSearchButton","data-control-action","iconColor","insertAfter","createDetailsButton","insertBefore","createTCCDetailsButton","kendoMenu","openOnClick","createKendoAutoComplete","kendoAutoComplete","valuePrimitive","createDetailsPopup","blurred","text-decoration","background-color","focused","__objectPickerPopupSingleton","groupFilter","ObjectClassId","Hosted","selectObjectText","okText","OK","cancelText","getIndexZero","SearchPlaceholder","preventClosing","scrollTop","ButtonType","ButtonSize","Options","staticFileVersion","Height","IsCascading","Cascade","ControlObject","gridViewModel","bundleData","createOrEditSoftwareBundle","dataList","products","tempSoftwarePattern","tempExclusionPattern","tempVersionPattern","SoftwarePatternName","SoftwarePattern","ExclusionPattern","VersionPattern","SoftwarePatternTxt","ExclusionPatternTxt","VersionPatternTxt","enableDisableTextbox","txt","isEnable","softwarePatternList","exclusionPatternList","versionPatternList","IsBundle","softwarePattern","onSave","validation","SoftwarePatternNamevalidation","EnterRequiredFields","SoftwarePatternvalidation","batch","streamId","bufferedMode","streamLength","buildURLTextbox","regexp","RegExp","txtBox","validateUrl","test","textChange","openURL","formPanel","formPanelFull","customFieldGroup","customFieldGroupRow","columnField","tab","tabPane","tabNavigation","tabData","actionLog","fileAttachments","affectedItems","relatedItems","childWorkItems","userInput","activities","multipleObjectPicker","history","billableTime","knowledgeArticle","LongString","Boolean","Display","Spacer","Numeric","Int32","Decimal","Double","DateTime","Enum","UserPicker","ObjectPicker","Button","Editor","Combo","DropDownList","Bundle","FileUpload","UrlTextbox","Percentage","mainContainer","jsonTemplate","formTemplate","layoutType","tplString","readTemplate","jsonDecision","mutationLogic","all","propValue","tabList","nodeCount","tabtplString","tabnavCont","focusSet","tabNode","focusedTab","getParameterByName","tabNodeNameKey","tabId","active","customFieldGroupList","columnFieldList","setColumnSizes","chooseNextAction","objectName","columnCount","DataType","propContainer","list","pane","manageDirty","onbeforeunload","mobileDrawerTaskButton","taskContainer","mobileTaskShow","drawermenu","addButton","Tasks","makeDrawer","resize","waitSeconds","urlArgs","baseUrl","paths","CustomSpace","shim","ajaxStop","taskBuilder","headerBuilder","formBuilder","formHelper","messagesStructure","headerContainer","empty","formContainer","formType","dataVM","priorityJSON","bHasNoInitalAssignee","bShowAddWatchList","onReady","WorkItemErrorMessage","jumbotron","readyArray","boundReady","changesArray","boundChange","methods","actionMethod","isArray","isFunction","reverse","statusCancelled","statusCompleted","statusFailed","showCancelled","AssignToMe","CancelRequest","SureCancelRequest","Print","statusNotResolvedOrClosed","showAcknowledge","showLinkToparent","showRevertToParent","showConvertToParent","statusResolved","ConvertToParent","SureConvertToParent","RevertToParent","SureRevertToParent","LinktoParentIncident","CloseIncident","SureCloseIncident","ReactivateIncident","SureReactivateIncident","CopyToNew","showCloseStatus","CloseServiceRequest","SureCloseServiceRequest","CloseProblem","SureCloseProblem","ReactivateProblem","SureReactivateProblem","showRun","SureConvertToParentRecord","SureRevertToParentRecord","LinktoParentRecord","Run","RunComentMessage","CloseReleaseRecord","SureCloseReleaseRecord","formTasks","label","setTemplateJSONFromSessionAdJSON","Default","msg","alert","typeToSession","templateName","createButtons","scrollTo","ChangeRequestSavedMessage","ServiceRequestSavedMessage","IncidentSavedMessage","ProblemSavedMessage","ReleaseRecordSavedMessage","WorkItemSavedMessage","gotoFormReturnUrl","Apply","sendMentionsMail","processTemplate","givenTemplate","tokens","token","lastIndexOf","isDateValue","parseDate","sendNotificationAsHTML","htmlEntities","valid","ScheduledStartDate","ScheduledEndDate","CheckedManualActivityStartAndEndDate","ScheduledStartDateExceedScheduledEndDate","ActualStartDate","ActualEndDate","ActualStartDateExceedActualEndDate","ScheduledDowntimeStartDate","ScheduledDowntimeEndDate","ScheduledDowntimeStartDateExceedScheduledDowntimeEndDate","ActualDowntimeStartDate","ActualDowntimeEndDate","ActualDowntimeStartDateExceedActualDowntimeEndDate","checkActivityDates","MaActualStartDateExceedActualEndDate","MaScheduledStartDateExceedScheduledEndDate","jqEle","kendoBindingTarget","isEnum","UnAddedActionLogComment","optimizeFormMultiObject","BeforeSave","mailBox","AppliesToTroubleTicket","logs","MentionedUsers","disableActionLogNotification","actionLogNotificationTitle","actionLogNotificationTemplate","DescriptionHTML","AttachedFileName","AppliesToWorkItem","msgResponse","ex","setPriorityByMatrix","priority","Priority","priorityJSONU","Matrix","U","Urgency","I","obj2","Impact","P","setFirstAssignedDateValue","bHasCurrentAssignee","assignedDateEle","FirstAssignedDate","date","isBounded","lastAddedAssignee","addRecordAssignedLog","recordAssigned","isScheduleBounded","setScheduleDuration","scheduledDuration","calculateTimeDuration","actualDuration","scheduledDowntimeDuration","actualDowntimeDuration","startDate","endDate","dtStart","dtEnd","dayDiff","round","hourDiff","getHours","minDiff","getMinutes","ScheduleDurationText","onVmChange","OnVmChange","isClosed","stopEnterKeySubmitting","$taskPanel","affix","offset","top","getBoundingClientRect","binders","yScrollOnResize","bottom"],"mappings":"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","file":"wiMain-built.min.js","sourcesContent":["/**\r\n * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/requirejs/text for details\r\n */\r\n/*jslint regexp: true */\r\n/*global require, XMLHttpRequest, ActiveXObject,\r\n  define, window, process, Packages,\r\n  java, location, Components, FileUtils */\r\n\r\ndefine('text',['module'], function (module) {\r\n    'use strict';\r\n\r\n    var text, fs, Cc, Ci, xpcIsWindows,\r\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\r\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\r\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\r\n        hasLocation = typeof location !== 'undefined' && location.href,\r\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\r\n        defaultHostName = hasLocation && location.hostname,\r\n        defaultPort = hasLocation && (location.port || undefined),\r\n        buildMap = {},\r\n        masterConfig = (module.config && module.config()) || {};\r\n\r\n    text = {\r\n        version: '2.0.10',\r\n\r\n        strip: function (content) {\r\n            //Strips <?xml ...?> declarations so that external SVG and XML\r\n            //documents can be added to a document without worry. Also, if the string\r\n            //is an HTML document, only the part inside the body tag is returned.\r\n            if (content) {\r\n                content = content.replace(xmlRegExp, \"\");\r\n                var matches = content.match(bodyRegExp);\r\n                if (matches) {\r\n                    content = matches[1];\r\n                }\r\n            } else {\r\n                content = \"\";\r\n            }\r\n            return content;\r\n        },\r\n\r\n        jsEscape: function (content) {\r\n            return content.replace(/(['\\\\])/g, '\\\\$1')\r\n                .replace(/[\\f]/g, \"\\\\f\")\r\n                .replace(/[\\b]/g, \"\\\\b\")\r\n                .replace(/[\\n]/g, \"\\\\n\")\r\n                .replace(/[\\t]/g, \"\\\\t\")\r\n                .replace(/[\\r]/g, \"\\\\r\")\r\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\r\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\r\n        },\r\n\r\n        createXhr: masterConfig.createXhr || function () {\r\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\r\n            var xhr, i, progId;\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                return new XMLHttpRequest();\r\n            } else if (typeof ActiveXObject !== \"undefined\") {\r\n                for (i = 0; i < 3; i += 1) {\r\n                    progId = progIds[i];\r\n                    try {\r\n                        xhr = new ActiveXObject(progId);\r\n                    } catch (e) { }\r\n\r\n                    if (xhr) {\r\n                        progIds = [progId];  // so faster next time\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return xhr;\r\n        },\r\n\r\n        /**\r\n         * Parses a resource name into its component parts. Resource names\r\n         * look like: module/name.ext!strip, where the !strip part is\r\n         * optional.\r\n         * @param {String} name the resource name\r\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\r\n         * where strip is a boolean.\r\n         */\r\n        parseName: function (name) {\r\n            var modName, ext, temp,\r\n                strip = false,\r\n                index = name.indexOf(\".\"),\r\n                isRelative = name.indexOf('./') === 0 ||\r\n                             name.indexOf('../') === 0;\r\n\r\n            if (index !== -1 && (!isRelative || index > 1)) {\r\n                modName = name.substring(0, index);\r\n                ext = name.substring(index + 1, name.length);\r\n            } else {\r\n                modName = name;\r\n            }\r\n\r\n            temp = ext || modName;\r\n            index = temp.indexOf(\"!\");\r\n            if (index !== -1) {\r\n                //Pull off the strip arg.\r\n                strip = temp.substring(index + 1) === \"strip\";\r\n                temp = temp.substring(0, index);\r\n                if (ext) {\r\n                    ext = temp;\r\n                } else {\r\n                    modName = temp;\r\n                }\r\n            }\r\n\r\n            return {\r\n                moduleName: modName,\r\n                ext: ext,\r\n                strip: strip\r\n            };\r\n        },\r\n\r\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\r\n\r\n        /**\r\n         * Is an URL on another domain. Only works for browser use, returns\r\n         * false in non-browser environments. Only used to know if an\r\n         * optimized .js version of a text resource should be loaded\r\n         * instead.\r\n         * @param {String} url\r\n         * @returns Boolean\r\n         */\r\n        useXhr: function (url, protocol, hostname, port) {\r\n            var uProtocol, uHostName, uPort,\r\n                match = text.xdRegExp.exec(url);\r\n            if (!match) {\r\n                return true;\r\n            }\r\n            uProtocol = match[2];\r\n            uHostName = match[3];\r\n\r\n            uHostName = uHostName.split(':');\r\n            uPort = uHostName[1];\r\n            uHostName = uHostName[0];\r\n\r\n            return (!uProtocol || uProtocol === protocol) &&\r\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\r\n                   ((!uPort && !uHostName) || uPort === port);\r\n        },\r\n\r\n        finishLoad: function (name, strip, content, onLoad) {\r\n            content = strip ? text.strip(content) : content;\r\n            if (masterConfig.isBuild) {\r\n                buildMap[name] = content;\r\n            }\r\n            onLoad(content);\r\n        },\r\n\r\n        load: function (name, req, onLoad, config) {\r\n            //Name has format: some.module.filext!strip\r\n            //The strip part is optional.\r\n            //if strip is present, then that means only get the string contents\r\n            //inside a body tag in an HTML string. For XML/SVG content it means\r\n            //removing the <?xml ...?> declarations so the content can be inserted\r\n            //into the current doc without problems.\r\n\r\n            // Do not bother with the work if a build and text will\r\n            // not be inlined.\r\n            if (config.isBuild && !config.inlineText) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            masterConfig.isBuild = config.isBuild;\r\n\r\n            var parsed = text.parseName(name),\r\n                nonStripName = parsed.moduleName +\r\n                    (parsed.ext ? '.' + parsed.ext : ''),\r\n                url = req.toUrl(nonStripName),\r\n                useXhr = (masterConfig.useXhr) ||\r\n                         text.useXhr;\r\n\r\n            // Do not load if it is an empty: url\r\n            if (url.indexOf('empty:') === 0) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            //Load the text. Use XHR if possible and in a browser.\r\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\r\n                text.get(url, function (content) {\r\n                    text.finishLoad(name, parsed.strip, content, onLoad);\r\n                }, function (err) {\r\n                    if (onLoad.error) {\r\n                        onLoad.error(err);\r\n                    }\r\n                });\r\n            } else {\r\n                //Need to fetch the resource across domains. Assume\r\n                //the resource has been optimized into a JS module. Fetch\r\n                //by the module name + extension, but do not include the\r\n                //!strip part to avoid file system issues.\r\n                req([nonStripName], function (content) {\r\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\r\n                                    parsed.strip, content, onLoad);\r\n                });\r\n            }\r\n        },\r\n\r\n        write: function (pluginName, moduleName, write, config) {\r\n            if (buildMap.hasOwnProperty(moduleName)) {\r\n                var content = text.jsEscape(buildMap[moduleName]);\r\n                write.asModule(pluginName + \"!\" + moduleName,\r\n                               \"define(function () { return '\" +\r\n                                   content +\r\n                               \"';});\\n\");\r\n            }\r\n        },\r\n\r\n        writeFile: function (pluginName, moduleName, req, write, config) {\r\n            var parsed = text.parseName(moduleName),\r\n                extPart = parsed.ext ? '.' + parsed.ext : '',\r\n                nonStripName = parsed.moduleName + extPart,\r\n                //Use a '.js' file name so that it indicates it is a\r\n                //script that can be loaded across domains.\r\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\r\n\r\n            //Leverage own load() method to load plugin value, but only\r\n            //write out values that do not have the strip argument,\r\n            //to avoid any potential issues with ! in file names.\r\n            text.load(nonStripName, req, function (value) {\r\n                //Use own write() method to construct full module value.\r\n                //But need to create shell that translates writeFile's\r\n                //write() to the right interface.\r\n                var textWrite = function (contents) {\r\n                    return write(fileName, contents);\r\n                };\r\n                textWrite.asModule = function (moduleName, contents) {\r\n                    return write.asModule(moduleName, fileName, contents);\r\n                };\r\n\r\n                text.write(pluginName, nonStripName, textWrite, config);\r\n            }, config);\r\n        }\r\n    };\r\n\r\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\r\n            typeof process !== \"undefined\" &&\r\n            process.versions &&\r\n            !!process.versions.node &&\r\n            !process.versions['node-webkit'])) {\r\n        //Using special require.nodeRequire, something added by r.js.\r\n        fs = require.nodeRequire('fs');\r\n\r\n        text.get = function (url, callback, errback) {\r\n            try {\r\n                var file = fs.readFileSync(url, 'utf8');\r\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\r\n                if (file.indexOf('\\uFEFF') === 0) {\r\n                    file = file.substring(1);\r\n                }\r\n                callback(file);\r\n            } catch (e) {\r\n                errback(e);\r\n            }\r\n        };\r\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\r\n            text.createXhr())) {\r\n        text.get = function (url, callback, errback, headers) {\r\n            var xhr = text.createXhr(), header;\r\n            xhr.open('GET', url, true);\r\n\r\n            //Allow plugins direct access to xhr headers\r\n            if (headers) {\r\n                for (header in headers) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Allow overrides specified in config\r\n            if (masterConfig.onXhr) {\r\n                masterConfig.onXhr(xhr, url);\r\n            }\r\n\r\n            xhr.onreadystatechange = function (evt) {\r\n                var status, err;\r\n                //Do not explicitly handle errors, those should be\r\n                //visible via console output in the browser.\r\n                if (xhr.readyState === 4) {\r\n                    status = xhr.status;\r\n                    if (status > 399 && status < 600) {\r\n                        //An http 4xx or 5xx error. Signal an error.\r\n                        err = new Error(url + ' HTTP status: ' + status);\r\n                        err.xhr = xhr;\r\n                        errback(err);\r\n                    } else {\r\n                        callback(xhr.responseText);\r\n                    }\r\n\r\n                    if (masterConfig.onXhrComplete) {\r\n                        masterConfig.onXhrComplete(xhr, url);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send(null);\r\n        };\r\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\r\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\r\n        //Why Java, why is this so awkward?\r\n        text.get = function (url, callback) {\r\n            var stringBuffer, line,\r\n                encoding = \"utf-8\",\r\n                file = new java.io.File(url),\r\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\r\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\r\n                content = '';\r\n            try {\r\n                stringBuffer = new java.lang.StringBuffer();\r\n                line = input.readLine();\r\n\r\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\r\n                // http://www.unicode.org/faq/utf_bom.html\r\n\r\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\r\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\r\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\r\n                    // Eat the BOM, since we've already found the encoding on this file,\r\n                    // and we plan to concatenating this buffer with others; the BOM should\r\n                    // only appear at the top of a file.\r\n                    line = line.substring(1);\r\n                }\r\n\r\n                if (line !== null) {\r\n                    stringBuffer.append(line);\r\n                }\r\n\r\n                while ((line = input.readLine()) !== null) {\r\n                    stringBuffer.append(lineSeparator);\r\n                    stringBuffer.append(line);\r\n                }\r\n                //Make sure we return a JavaScript string and not a Java string.\r\n                content = String(stringBuffer.toString()); //String\r\n            } finally {\r\n                input.close();\r\n            }\r\n            callback(content);\r\n        };\r\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\r\n            typeof Components !== 'undefined' && Components.classes &&\r\n            Components.interfaces)) {\r\n        //Avert your gaze!\r\n        Cc = Components.classes,\r\n        Ci = Components.interfaces;\r\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\r\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\r\n\r\n        text.get = function (url, callback) {\r\n            var inStream, convertStream, fileObj,\r\n                readData = {};\r\n\r\n            if (xpcIsWindows) {\r\n                url = url.replace(/\\//g, '\\\\');\r\n            }\r\n\r\n            fileObj = new FileUtils.File(url);\r\n\r\n            //XPCOM, you so crazy\r\n            try {\r\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\r\n                           .createInstance(Ci.nsIFileInputStream);\r\n                inStream.init(fileObj, 1, 0, false);\r\n\r\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\r\n                                .createInstance(Ci.nsIConverterInputStream);\r\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\r\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\r\n\r\n                convertStream.readString(inStream.available(), readData);\r\n                convertStream.close();\r\n                inStream.close();\r\n                callback(readData.value);\r\n            } catch (e) {\r\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\r\n            }\r\n        };\r\n    }\r\n    return text;\r\n});\n","\ndefine('text!forms/tasks/anchor/view.html',[],function () { return '<li class=\"link\" data-bind=\"click: <%= Target %>\"><%= Label %></li>';});\n\n","/**\r\nAnchor\r\n**/\r\n\r\ndefine('forms/tasks/anchor/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = new kendo.View(built(properties), { wrap: false });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/analystByGroup/view.html',[],function () { return '<div id=\"AssignToAnalystByGroupWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div>\\r\\n                <div id=\"groupPicker\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\"form-group\">\\r\\n                <div class=\"control-label\">\\r\\n                    <label><%= localization.AssignedTo %></label>\\r\\n                </div>\\r\\n                <div class=\"editor-field\">\\r\\n                    <input id=\"assignedToCombo\"\\r\\n                           data-role=\"combobox\"\\r\\n                           data-bind=\"source: assignToDataSource, enabled:userEnabled, events: { change: userChange }\"\\r\\n                           data-text-field=\"Name\"\\r\\n                           data-value-field=\"Id\"\\r\\n                           data-placeholder=\"<%=localization.ChooseSupportGroup%>\"></input>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/fields/enum/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <div class=\"form-control form-control-picker input-sm\"\\r\\n         data-url=\"/api/V3/Enum/GetList\"\\r\\n         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n         data-showpath=\"<%= ShowPath %>\"\\r\\n         data-mustselectleafnode=\"<%= LeafNodeOnly %>\"\\r\\n         data-bind=\"ciresonDropDownTree: \\'<%= EnumId %>\\', value: <%= PropertyName %>\"\\r\\n         data-disabled=\"<%= Disabled %>\"\\r\\n         data-role=\"<%= PropertyName %>\"\\r\\n         data-filter=\"<%= FilterIds%>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n        >\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>';});\n\n","/**\r\nENUM - dropDownTree\r\n**/\r\n\r\ndefine('forms/fields/enum/controller',['require','text!forms/fields/enum/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/enum/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                EnumId: '',\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                LeafNodeOnly: false,\r\n                ShowPath: false,\r\n                FilterIds: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/drawerTask/view.html',[],function () { return '<span data-bind=\"visible: showTooltip\" class=\"tooltip-container\" rel=\"dynamictooltip\" title=\"<%= toolTipMessage %>\"></span>\\r\\n<li data-bind=\"click: <%= onClick %>, enabled: isEnabled\"><a data-bind=\"localize: <%= titleKey %>\"></a></li>';});\n\n","/**\r\nanalystByGroup\r\n**/\r\n\r\ndefine('forms/tasks/analystByGroup/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/analystByGroup/view.html','forms/fields/enum/controller','text!forms/tasks/drawerTask/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchorTemplate = require(\"text!forms/tasks/anchor/view.html\");\r\n    var windowTemplate = require(\"text!forms/tasks/analystByGroup/view.html\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n    var drawerTaskTemplate = require(\"text!forms/tasks/drawerTask/view.html\");\r\n\r\n    var definition = {\r\n        template: windowTemplate,\r\n        build: function (vm, node, callback) {\r\n            var callerType = vm.type; //\"Incident\", \"ServiceRequest\", \"BulkEdit\"\r\n            var isBulkEdit = vm.type == \"BulkEdit\";\r\n            var originalAssignedName = null;\r\n            var originalAssignedId = null;\r\n            var originalSupportGroup = null; //Todo: made need to initialize as an object\r\n            var originalSupportName = \"\";\r\n            var originalSupportId = \"00000000-0000-0000-0000-000000000000\";\r\n            var configEnumId;\r\n            var configPropertyName;\r\n\r\n\r\n\r\n            //viewModel set up\r\n            var getTaskViewModel = function (modalView) {\r\n                //this view Model is bound to the anchor element \r\n                var taskVm = kendo.observable({\r\n                    //this is the func that fires on link click\r\n                    analystByGroup: function () {\r\n                        \r\n\r\n                        if (isBulkEdit) {\r\n                            configPropertyName = taskVm.selectedWorkItem.groupPropertyName;\r\n                            configEnumId = taskVm.selectedWorkItem.groupPropertyEnumId;\r\n                        } else {\r\n                            //lets clear out the value for a better UX\r\n                            vm.viewModel.set(\"SupportGroup\", { Id: '', Name: '' });\r\n                            vm.viewModel.set(\"TierQueue\", { Id: '', Name: '' });\r\n                            configPropertyName = node.Configs.propertyName;\r\n                            configEnumId = node.Configs.enumId;\r\n                        }\r\n                        var modalEle = modalView.element.clone();\r\n                        var modalControl = modalEle.kendoCiresonWindow({\r\n                            title: localization.AssignToAnalystByGroup,\r\n                            width: 500,\r\n                            height: 300,\r\n                            actions: []\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //this view Model is bound to the window element\r\n                        var windowViewModal = kendo.observable({\r\n                            propertyName: configPropertyName,       //IR: \"TierQueue\", SR: \"SupportGroup\"\r\n                            enumId: configEnumId,                   //IR: IncidentTierQueue (enum), SR: ServiceRequestSupportGroup (enum)\r\n                            assignToDataSource: getUserDataSource(\"00000000-0000-0000-0000-000000000000\"),\r\n                            userEnabled: false,\r\n                            okEnabled: false,\r\n                            userChange: function (e) {\r\n                                if (isBulkEdit) {\r\n                                    taskVm.set(\"assignedWorkItem.displayName\", e.sender._prev);\r\n                                    taskVm.set(\"assignedWorkItem.baseId\", e.sender.value());\r\n                                } else {\r\n                                    //clear them out first\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", null);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", null);\r\n\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", e.sender._prev);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", e.sender.value());\r\n                                }\r\n                            },\r\n                            okClick: function () {\r\n                                modalControl.close();\r\n                                if (isBulkEdit) {\r\n                                    app.lib.mask.apply();\r\n                                    var postData = {\r\n                                        ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                        UpdateServiceManagement: true,\r\n                                        ItemIds: _.pluck(taskVm.currentSelection, 'BaseId'),\r\n                                        EditedFields: getBulkEditedFieldData(taskVm)\r\n                                    }\r\n\r\n                                    $.ajax({\r\n                                        url: '/api/v3/workitem/BulkEditWorkItems/',\r\n                                        data: JSON.stringify(postData),\r\n                                        dataType: 'json',\r\n                                        contentType: 'application/json',\r\n                                        type: \"POST\",\r\n                                        success: function() {\r\n                                            onBulkEditSaveSuccess(taskVm);\r\n                                        },\r\n                                        error: function() {\r\n                                            onBulkEditSaveFailure();\r\n                                        }\r\n                                    });\r\n\r\n                                } else {\r\n                                    //form task:\r\n                                    //replace original values with new saved values\r\n                                    originalAssignedName = vm.viewModel.AssignedWorkItem.get(\"DisplayName\");\r\n                                    originalAssignedId = vm.viewModel.AssignedWorkItem.get(\"BaseId\");\r\n\r\n                                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                                        originalSupportGroup = vm.viewModel.get(\"TierQueue\");\r\n                                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                                        originalSupportGroup = vm.viewModel.get(\"SupportGroup\");\r\n                                    }\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                modalControl.close();\r\n                                if (isBulkEdit) {\r\n                                    taskVm.set(\"assignedWorkItem.displayName\", null);\r\n                                    taskVm.set(\"assignedWorkItem.baseId\", null);\r\n                                } else {\r\n                                    //lets clean the model\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", null);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", null);\r\n\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", originalAssignedName);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", originalAssignedId);\r\n\r\n                                    \r\n                                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                                        vm.viewModel.set(\"TierQueue\", originalSupportGroup);\r\n                                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                                        vm.viewModel.set(\"SupportGroup\", originalSupportGroup);\r\n                                    }\r\n                                }\r\n                            },\r\n                        });\r\n\r\n                        var createGroupPicker = function (windowViewModal, modalEle) { \r\n                            var groupProperties = {\r\n                                PropertyName: windowViewModal.propertyName,\r\n                                PropertyDisplayName: \"SupportGroup\",\r\n                                EnumId: windowViewModal.enumId\r\n                            };\r\n                            buildEnumPicker(modalEle.find('#groupPicker'), groupProperties, vm.viewModel);\r\n\r\n                            //get the enum picker elm\r\n                            var groupPicker = modalEle.find('div[data-role=\"' + windowViewModal.propertyName + '\"]');\r\n\r\n                            //make sure we have a group picker object and we don't error\r\n                            if (groupPicker) {\r\n                                //get got handlers for event binding\r\n                                var groupDropDownControl = groupPicker.data().handler._dropdown;\r\n                                var groupTreeViewControl = groupPicker.data().handler._treeview;\r\n\r\n                                //bind group picker changes events\r\n                                groupDropDownControl.bind(\"change\", function (e) {\r\n                                    var item = this.dataItem(this.select());\r\n                                    var assignToCombobox = modalEle.find(\"#assignedToCombo\").data(\"kendoComboBox\");\r\n                                    setSupportGroupUsers(item, windowViewModal, assignToCombobox);\r\n                                    taskVm.set(\"assignedSupportGroup\", item);\r\n                                });\r\n                                groupTreeViewControl.bind(\"change\", function (e) {\r\n                                    var item = this.dataItem(this.current());\r\n                                    var assignToCombobox = modalEle.find(\"#assignedToCombo\").data(\"kendoComboBox\");\r\n                                    setSupportGroupUsers(item, windowViewModal, assignToCombobox);\r\n                                    taskVm.set(\"assignedSupportGroup\", item);\r\n                                });\r\n                            }\r\n                        };\r\n\r\n                        //form field helper\r\n                        var buildEnumPicker = function (container, props, vmModel) {\r\n                            enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                                container.html(enumControl);\r\n                                app.controls.apply(container, {\r\n                                    localize: true,\r\n                                    vm: vmModel,\r\n                                    bind: true\r\n                                });\r\n                            });\r\n                        };\r\n\r\n\r\n                        //bind window element to window viewModel\r\n                        kendo.bind(modalEle, windowViewModal);\r\n                        //create status enumPicker\r\n                        createGroupPicker(windowViewModal, modalEle);\r\n\r\n                        modalEle.removeClass('hide');\r\n                        modalEle.show();\r\n\r\n                        modalControl.refresh();\r\n                        modalControl.open();\r\n                    }\r\n                });\r\n\r\n                return taskVm;\r\n            };\r\n            //addition viewModel set up for bulk task\r\n            var setAdditionBulkTaskProperties = function (anchorViewModel) {\r\n                var drawerTaskVm = anchorViewModel;\r\n                //this view Model is bound to the anchor element \r\n                drawerTaskVm.currentSelection = [];\r\n                drawerTaskVm.selectedWorkItem = {\r\n                    type: '',\r\n                    projectionId: '',\r\n                    groupPropertyName: '',\r\n                    groupPropertyEnumId: '',\r\n                };\r\n                drawerTaskVm.assignedWorkItem = {\r\n                    displayName: \"\",\r\n                    baseId: \"\"\r\n                },\r\n                drawerTaskVm.isEnabled = false;\r\n                drawerTaskVm.showTooltip = true;\r\n                drawerTaskVm.setEnabled = function (enabled) {\r\n                    this.set('isEnabled', enabled);\r\n                    this.set('showTooltip', !enabled);\r\n                };;\r\n                drawerTaskVm.targetControlId = '';\r\n                drawerTaskVm.onTargetControlChange = function (grid) {\r\n                    var selectedDataItems = [];\r\n                    if (app.isMobile()) {\r\n                        //grid is selected items array when called from mobile\r\n                        selectedDataItems = grid;\r\n                    } else {\r\n                        selectedDataItems = grid.select().map(function (index, item) {\r\n                            return grid.dataItem($(item));\r\n                        }).toArray();\r\n                    }\r\n\r\n                    //we only update 10 items at a time\r\n                    if (selectedDataItems.length > 10) {\r\n                        onExceedSelectionCount();\r\n                    }\r\n\r\n                    anchorViewModel.set('currentSelection', selectedDataItems);\r\n\r\n                    //if nothing is selected disabled the item\r\n                    if (selectedDataItems.length <= 0 || selectedDataItems.length > 10) {\r\n                        drawerTaskVm.setEnabled(false);\r\n                    } else {\r\n                        var selectedTypes = _.pluck(selectedDataItems, \"WorkItemType\");\r\n                        var selectedStatusNames = _.pluck(selectedDataItems, \"Status\");\r\n\r\n                        //return false if multiple selected, otherwise returns string values\r\n                        var singleSelectedType = _.reduce(selectedTypes, function (memo, currentVal) {\r\n                            return (memo === currentVal) ? memo : false;\r\n                        });\r\n                        drawerTaskVm.set(\"selectedWorkItem.type\", singleSelectedType);\r\n\r\n                        var singleSelectedStatusName = _.reduce(selectedStatusNames, function (memo, currentVal) {\r\n                            return (memo === currentVal) ? memo : false;\r\n                        });\r\n\r\n                        if (singleSelectedType) {\r\n                            switch (singleSelectedType) {\r\n                                case \"System.WorkItem.ServiceRequest\":\r\n                                    drawerTaskVm.setTrimmedWiType();\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemServiceRequestViewModel);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', 'SupportGroup');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', app.constants.enumPickerIds.ServiceRequestSupportGroup);\r\n                                    //if SR is closed do not allow status change from here (TFS 3560)\r\n                                    if (singleSelectedStatusName === \"Closed\") {\r\n                                        drawerTaskVm.setEnabled(false);\r\n                                    } else {\r\n                                        drawerTaskVm.setEnabled(true);\r\n                                    }\r\n                                    break;\r\n                                case \"System.WorkItem.Incident\":\r\n                                    drawerTaskVm.setTrimmedWiType();\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemIncidentViewModel);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', 'TierQueue');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', app.constants.enumPickerIds.IncidentTierQueue);\r\n                                    drawerTaskVm.setEnabled(true);\r\n                                    break;\r\n                                default:\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', '');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', '');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', '');\r\n                                    // not a supported bulk edit Type, disable the edit button\r\n                                    drawerTaskVm.setEnabled(false);\r\n                            }\r\n                        } else {\r\n                            //not same type && status\r\n                            drawerTaskVm.setEnabled(false);\r\n                        }\r\n                    }\r\n                };\r\n                anchorViewModel.setTrimmedWiType = function () {\r\n                    this.set('selectedWorkItem.trimmedType', this.selectedWorkItem.type.split(/[\\s.]+/).pop());\r\n                };\r\n\r\n\r\n            };\r\n            //helper functions\r\n            var getBulkEditedFieldData = function (viewModel) {\r\n                var json = [];\r\n\r\n                switch (viewModel.selectedWorkItem.trimmedType) {\r\n                    case \"Incident\":\r\n                        json = [\r\n                           { \r\n                                PropertyName: \"TierQueue\",\r\n                                EditedValue: viewModel.assignedSupportGroup.Id,\r\n                                PropertyType: \"enum\"\r\n                           },\r\n                           {\r\n                                PropertyName: \"AssignedWorkItem\",\r\n                                EditedValue: viewModel.assignedWorkItem.baseId,\r\n                                PropertyType: \"singleCardinalityObject\",\r\n                                PropertyRelationshipId: \"15e577a3-6bf9-6713-4eac-ba5a5b7c4722\" //magic guid\r\n                            },\r\n                            {\r\n                                PropertyName: \"AppliesToTroubleTicket\",\r\n                                PropertyType: \"multiplecardinalityobject\",\r\n                                PropertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //more magic!\r\n                                EditedValue: {\r\n                                    ActionType: {\r\n                                        Id: \"b04370d9-3d4f-3981-61bb-ac9462a1fe65\", //magic?\r\n                                        Name: \"Record Assigned\"\r\n                                    },\r\n                                    Description: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    DescriptionDisplay: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    EnteredBy: session.user.Name,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Title: localization.RecordAssigned,\r\n                                    Image: app.config.iconPath + app.config.icons[\"Record Assigned\"]\r\n                                }\r\n                            }\r\n                        ];\r\n                        break;\r\n                    case \"ServiceRequest\":\r\n                        json = [\r\n                            {\r\n                                PropertyName: \"SupportGroup\",\r\n                                EditedValue: viewModel.assignedSupportGroup.Id,\r\n                                PropertyType: \"enum\"\r\n                            },\r\n                            {\r\n                                PropertyName: \"AssignedWorkItem\",\r\n                                EditedValue: viewModel.assignedWorkItem.baseId,\r\n                                PropertyType: \"singleCardinalityObject\",\r\n                                PropertyRelationshipId: \"15e577a3-6bf9-6713-4eac-ba5a5b7c4722\" //magic guid\r\n                            },\r\n                            {\r\n                                PropertyName: \"AppliesToWorkItem\",\r\n                                PropertyType: \"multiplecardinalityobject\",\r\n                                PropertyRelationshipId: \"79d27435-5917-b0a1-7911-fb2b678f32a6\", //more magic!\r\n                                EditedValue: {\r\n                                    ActionType: {\r\n                                        Id: \"b04370d9-3d4f-3981-61bb-ac9462a1fe65\", //magic?\r\n                                        Name: \"Record Assigned\"\r\n                                    },\r\n                                    Description: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    DescriptionDisplay: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    EnteredBy: session.user.Name,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Title: localization.RecordAssigned,\r\n                                    Image: app.config.iconPath + app.config.icons[\"Record Assigned\"]\r\n                                }\r\n                            }\r\n                        ];\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                return json;\r\n            }\r\n            var onExceedSelectionCount = function () {\r\n                kendo.ui.ExtAlertDialog.show({\r\n                    title: localizationHelper.localize('Warning'),\r\n                    message: localizationHelper.localize('BulkEditExceedMessage')\r\n                });\r\n            }\r\n            var onBulkEditSaveSuccess = function (taskVm) {\r\n                if (app.isMobile()) {\r\n                    var listControl = $(\"[data-control-id='\" + taskVm.targetControlId + \"']\").data('kendoListView');\r\n                    listControl.dataSource.query();\r\n                } else {\r\n                    //refresh the grid to get updated data.\r\n                    var targetGrid = $('#' + taskVm.targetControlId).data('kendoGrid');\r\n                    var targetGridState = app.gridUtils.savedState.getCurrentState(taskVm.targetControlId);\r\n                    app.lib.recheckGridState(targetGridState, targetGrid);\r\n                    targetGrid.dataSource.query(targetGridState);\r\n                }\r\n                app.lib.message.add(localizationHelper.localize('SaveSuccessMessage'), \"success\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var onBulkEditSaveFailure = function () {\r\n                app.lib.message.add(localizationHelper.localize('SaveErrorMessage'), \"danger\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var getOriginalFormValues = function () {\r\n                if (!_.isUndefined(vm.viewModel.AssignedWorkItem)) {\r\n                    originalAssignedName = vm.viewModel.AssignedWorkItem.DisplayName;\r\n                    originalAssignedId = vm.viewModel.AssignedWorkItem.BaseId;\r\n                }\r\n\r\n                if (callerType == \"Incident\") {\r\n                    originalSupportGroup = vm.viewModel.TierQueue;\r\n                    originalSupportName = (!_.isNull(vm.viewModel.TierQueue) && !_.isUndefined(vm.viewModel.TierQueue))\r\n                                                ? vm.viewModel.TierQueue.Name\r\n                                                : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel.TierQueue) && !_.isUndefined(vm.viewModel.TierQueue))\r\n                                                  ? vm.viewModel.TierQueue.Id\r\n                                                  : \"00000000-0000-0000-0000-000000000000\";\r\n                } else if (callerType == \"ServiceRequest\") {\r\n                    originalSupportGroup = vm.viewModel.SupportGroup;\r\n                    originalSupportName = (!_.isNull(vm.viewModel.SupportGroup) && !_.isUndefined(vm.viewModel.SupportGroup))\r\n                                          ? vm.viewModel.SupportGroup.Name : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel.SupportGroup) && !_.isUndefined(vm.viewModel.SupportGroup))\r\n                                            ? vm.viewModel.SupportGroup.Id : \"00000000-0000-0000-0000-000000000000\";\r\n                }\r\n                originalSupportGroup.Text = originalSupportGroup.Name; //Need this so mapping works later on :-( .  \r\n            }\r\n            var getUserDataSource = function (selectedSupportGroupId) {\r\n                var userDataSource = new kendo.data.DataSource({\r\n                    transport: {\r\n                        read: {\r\n                            url: app.lib.addUrlParam(\"/api/V3/User/GetSupportGroupUsers\", \"id\", selectedSupportGroupId),\r\n                            dataType: \"json\"\r\n                        }\r\n                    },\r\n                    schema: {\r\n                        model: {\r\n                            fields: {\r\n                                Id: { type: \"string\" },\r\n                                Name: { type: \"string\" }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                return userDataSource;\r\n            }\r\n            var setSupportGroupUsers = function (item, vmWindow, asssignToComboBox) {\r\n                if (_.isUndefined(item)) {\r\n                    return;\r\n                }\r\n\r\n                if (!isBulkEdit) {\r\n                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                        vm.viewModel.set(\"TierQueue\", item);\r\n                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                        vm.viewModel.set(\"SupportGroup\", item);\r\n                    }\r\n                }\r\n                vmWindow.set(\"userEnabled\", true);\r\n                vmWindow.set(\"okEnabled\", true);\r\n\r\n                vmWindow.set(\"assignToDataSource\", getUserDataSource(item.Id));\r\n                vmWindow.assignToDataSource.bind(\"change\", function (e) {\r\n                    asssignToComboBox.focus();\r\n                    asssignToComboBox.value(\"\");\r\n                    asssignToComboBox.input.attr(\"placeholder\", localization.ChooseOne);\r\n                });\r\n            }\r\n            var buildAndRender = {\r\n                windowEle: function () {\r\n                    //build the template for the window\r\n                    var built = _.template(windowTemplate);\r\n                    var view = new kendo.View(built(), { wrap: false });\r\n                    //add in hidden window\r\n                    callback(view.render());\r\n                    view.destroy();//there is some issue with the cloned element if we don't destroy the view\r\n                    return view;\r\n                },\r\n                taskListItem: function (properties, anchorViewModel, template) {\r\n                    $.extend(true, properties, node);\r\n                    //build the anchor and bind viewModel to it\r\n                    var builtAnchor = _.template(template);\r\n                    var anchorElm = new kendo.View(builtAnchor(properties), {\r\n                        wrap: false, model: anchorViewModel\r\n                    });\r\n                    //send anchor element back to caller (appended in the callback)\r\n                    callback(anchorElm.render());\r\n                    return anchorElm;\r\n                }\r\n            }\r\n            /* initialization code*/\r\n            function initTask() {\r\n                //build and render window\r\n                var modalView = buildAndRender.windowEle();\r\n                //save orig values for defined form\r\n                if (!isBulkEdit) {\r\n                    getOriginalFormValues();\r\n                }\r\n                //get the view models\r\n                var formTaskViewModel = getTaskViewModel(modalView);\r\n\r\n                if (isBulkEdit) {\r\n                    setAdditionBulkTaskProperties(formTaskViewModel);\r\n                    buildAndRender.taskListItem({ onClick: \"analystByGroup\", toolTipMessage: localizationHelper.localize('MustSelectSameType') }, formTaskViewModel, drawerTaskTemplate);\r\n                    /*subscribe to events*/\r\n                    if (!app.isMobile()) {\r\n                        //called on grid row clicks\r\n                        app.events.subscribe(\"gridChange\", function(event, grid) {\r\n                            formTaskViewModel.onTargetControlChange(grid);\r\n                            formTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                        });\r\n\r\n                        //for initial grid load listen to this event so we can set persisted state information\r\n                        app.events.subscribe(\"gridBound\", function(event, grid) {\r\n                            formTaskViewModel.onTargetControlChange(grid);\r\n                            formTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                        });\r\n                    } else {\r\n                        //called on mobile listview checkbox selection\r\n                        app.events.subscribe(\"mobileWiListSelectionChange\", function (event, listView) {\r\n                            if (!_.isUndefined(listView)) {\r\n                                formTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                                formTaskViewModel.targetControlId = listView.controlId;\r\n                            }\r\n                        });\r\n                        app.events.subscribe(\"mobileWiListInit\", function (event, listView) {\r\n                            if (!_.isUndefined(listView)) {\r\n                                formTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                                formTaskViewModel.targetControlId = listView.controlId;\r\n                            }\r\n                        });\r\n                    }\r\n                    /*END subscribe to events*/\r\n\r\n                    \r\n                } else {\r\n                    //build and render the link\r\n                    buildAndRender.taskListItem({ Target: \"analystByGroup\" }, formTaskViewModel, anchorTemplate);\r\n                }\r\n\r\n            };\r\n\r\n            /* END initialization code*/\r\n\r\n            //do it\r\n            initTask();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/popups/notificationPopup/view.html',[],function () { return '<div class=\"popupNotification\"></div>';});\n\n","/**\r\nAssign To Me\r\n**/\r\n\r\ndefine('forms/tasks/assignToMe/controller',['require','text!forms/tasks/anchor/view.html','text!forms/popups/notificationPopup/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var notificationTpl = require(\"text!forms/popups/notificationPopup/view.html\");\r\n\r\n    var definition = {\r\n        notificationTemplate: notificationTpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(notificationTpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var viewModel = kendo.observable({\r\n                displayName: node.Configs.displayName,\r\n                baseId: node.Configs.baseId,\r\n                target: node.Configs.target,\r\n                assignToMe: function () {\r\n                    //set AssingedWorkitem to current user\r\n                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", this.baseId);\r\n                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", this.displayName);\r\n\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.AssignedToMeNotificationMessage, \"This workitem is assigned to {0}\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"assignToMe\"\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/changeStatus/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"statusPicker\" />\\r\\n            <div id=\"resolutionPicker\" data-bind=\"visible: showResolution\" />\\r\\n            <div id=\"resolutionDescription\" data-bind=\"visible: showResolution\" />\\r\\n            <div id=\"comment\" data-bind=\"visible: showComment\" />\\r\\n            <div id=\"autoResolve\" data-bind=\"visible: showAutoResolve\" />\\r\\n            <div id=\"letAnalystDecide\" data-bind=\"visible: letAnalystDecide\" />\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/tasks/changeStatus/view.drawer.html',[],function () { return '<div class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <!-- status picker for IR or SR statuses -->\\r\\n            <div class=\"form-group\">\\r\\n                <label class=\"control-label\" data-bind=\"localize: Status\">\\r\\n                </label>\\r\\n                <div class=\"form-control form-control-picker input-sm\"\\r\\n                     data-role=\"Status\"\\r\\n                     data-url=\"/api/V3/Enum/GetList\"\\r\\n                     data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                     data-disabled=\"false\"\\r\\n                     data-bind=\"ciresonDropDownTree: wiStatusTypeId, value: newStatusObj, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n            </div>\\r\\n            <!-- resolution category picker for IR -->\\r\\n            <div data-bind=\"visible: irStatusResolved\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: ResolutionCategory\"></span> (<span data-bind=\"localize: Required\"></span>)\\r\\n                    </label>\\r\\n                    <div class=\"form-control form-control-picker input-sm\"\\r\\n                         data-role=\"Resolution\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-disabled=\"false\"\\r\\n                         data-bind=\"ciresonDropDownTree: resolutionResultEnumId, value: newResolutionId, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n\\r\\n                </div>\\r\\n                <!-- resolution description for IR -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\" data-bind=\"localize: ResolutionDescription\">\\r\\n                    </label>\\r\\n                    <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                              data-bind=\"value: resolutionDescription\" maxlength=\"4000\"></textarea>\\r\\n                </div>\\r\\n\\r\\n                <!-- resolve child incidents: let analyst decide option-->\\r\\n                <div class=\"form-group\" data-bind=\"visible: irResolveChildOption\">\\r\\n                    <div class=\"checkbox  checkbox-inline \">\\r\\n                        <input type=\"checkbox\" name=\"resolveChildIncident\" data-bind=\"checked: resolveChildIncident\">\\r\\n                        <label class=\"control-label\" for=\"resolveChildIncident\">\\r\\n                            <span data-bind=\"localize: ResolveChildIncidentMessage\" />\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div data-bind=\"visible: srStatusCompleted\">\\r\\n                <!-- SR Implementation Results -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: ImplementationResults\"></span>\\r\\n                    </label>\\r\\n                    <div class=\"form-control form-control-picker input-sm\"\\r\\n                         data-role=\"Resolution\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-disabled=\"false\"\\r\\n                         data-bind=\"ciresonDropDownTree: resolutionResultEnumId, value: newResultId, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n\\r\\n                </div>\\r\\n                <!-- SR Implementation Notes -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: Implementationnotes\"></span> (<span data-bind=\"localize: Required\"></span>)\\r\\n                    </label>\\r\\n                    <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                              data-bind=\"value: resultNote\" maxlength=\"4000\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- comment for SR in \\'Cancelled\\' status -->\\r\\n            <div class=\"form-group\" data-bind=\"visible: srStatusCancelled\">\\r\\n                <label class=\"control-label\" data-bind=\"localize: Comment\">\\r\\n                </label>\\r\\n                <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                          data-bind=\"value: resultComment\" maxlength=\"4000\"></textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\" class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled,\\r\\n                           events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\" class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/fields/longstring/view.html',[],function () { return '<div class=\"form-group <%= visible %>\" style=\"\">\\r\\n\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <textarea name=\"<%= PropertyName %>\"\\r\\n              class=\"k-textbox form-control input-sm\"\\r\\n              rows=\"<%= Rows %>\"\\r\\n              data-bind=\"value: <%= PropertyName %><% if ( LimitLength ){ %>, events : { blur: view.longStringController.CheckLength }<% } %>\"\\r\\n        <% if ( LimitLength ){ %>\\r\\n        maxlength=\"<%= MaxLength %>\"\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    </textarea>\\r\\n    <% if ( LimitLength ){ %>\\r\\n    <p class=\"help-block validation-summary-errors\" style=\"display: none;\"><%= localization.MaxLengthError.replace(\"{0}\", MaxLength) %></p>\\r\\n    <% } %>\\r\\n</div>\\r\\n<script>\\r\\n    $(\\'textarea[name=ResolutionDescription]\\').removeClass(\\'form-control\\');\\r\\n</script>\\r\\n';});\n\n","/**\r\nLONGSTRING\r\n**/\r\n\r\ndefine('forms/fields/longstring/controller',['require','text!forms/fields/longstring/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/longstring/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.longStringController = {\r\n                CheckLength: function checkLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n            vm.view.buildLongStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength,\r\n                    Rows: 10,\r\n                    visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n                };\r\n                $.extend(true, properties, node);\r\n                //console.log(properties);\r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildLongStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\r\n\n","\ndefine('text!forms/fields/boolean/view.html',[],function () { return '<div class=\"form-group <%= visible %>\">\\r\\n    <% if ( !Inline ){ %>\\r\\n    <label class=\"control-label\" data-localize=\"<%= PropertyDisplayName %>\"><span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span></label>\\r\\n    <% } %>\\r\\n\\r\\n    <div class=\"checkbox <% if ( Inline ){ %> checkbox-inline <% } else { %> checkbox-block <% } %>\">\\r\\n        <input type=\"checkbox\"\\r\\n               name=\"<%= PropertyName %>\"\\r\\n               id=\"<%= PropertyName %>\"\\r\\n               data-bind=\"checked: <%= PropertyName %>\"<% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        />\\r\\n\\r\\n\\r\\n        <label class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n            <% if ( Inline ){ %>\\r\\n            <span data-localize=\"<%= PropertyDisplayName %>\"></span>\\r\\n            <% } %>\\r\\n        </label>\\r\\n\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nBOOLEAN\r\n**/\r\n\r\ndefine('forms/fields/boolean/controller',['require','text!forms/fields/boolean/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/boolean/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Inline: node.Inline || false,\r\n                visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n        };\r\n            \r\n            \r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/changeStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/changeStatus/view.html','text!forms/tasks/changeStatus/view.drawer.html','forms/fields/enum/controller','forms/fields/longstring/controller','forms/fields/boolean/controller','text!forms/tasks/drawerTask/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchorTemplate = require(\"text!forms/tasks/anchor/view.html\");\r\n    var changeStatusTemplate = require(\"text!forms/tasks/changeStatus/view.html\");\r\n    var changeStatusDrawerTemplate = require(\"text!forms/tasks/changeStatus/view.drawer.html\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n    var txtAreaControl = require(\"forms/fields/longstring/controller\");\r\n    var checkBoxControl = require(\"forms/fields/boolean/controller\");\r\n    var drawerTaskTemplate = require(\"text!forms/tasks/drawerTask/view.html\");\r\n\r\n    var definition = {\r\n        template: changeStatusTemplate,\r\n        build: function (vm, node, callback) {\r\n            /*\r\n             * Change mustSelectLeafNode and/or showEnumPath to modify\r\n             * bulk status change enum picker behavior. \r\n             */\r\n            var mustSelectLeafNode = false;\r\n            var showEnumPath = false;\r\n\r\n            //for problem's autoresolve \r\n            if (vm.type == \"Problem\" && _.isUndefined(vm.viewModel.IsAutoResolve)) {\r\n                vm.viewModel.set(\"IsAutoResolve\", vm.viewModel.AutoResolve);\r\n            }\r\n\r\n            /* variables */\r\n            var resolveChildIncidentSettings;\r\n            if (vm.type != \"BulkEdit\") {\r\n                //used for cancel click event on form task\r\n                var originalVm = {\r\n                    Status: _.clone(vm.viewModel.Status),\r\n                    ResolutionCategory: !_.isUndefined(vm.viewModel.ResolutionCategory) ? _.clone(vm.viewModel.ResolutionCategory) : null,\r\n                    ResolutionDescription: _.clone(vm.viewModel.ResolutionDescription),\r\n                    ChildWorkItem: _.clone(vm.viewModel.ChildWorkItem),\r\n                    Notes: _.clone(vm.viewModel.Notes),\r\n                    ImplementationResults: !_.isUndefined(vm.viewModel.ImplementationResults) ? _.clone(vm.viewModel.ImplementationResults) : null,\r\n                    RelatesToWorkItem: _.clone(vm.viewModel.RelatesToWorkItem),\r\n                    Resolution: !_.isUndefined(vm.viewModel.Resolution) ? _.clone(vm.viewModel.Resolution) : null,\r\n                    AutoResolve: !_.isUndefined(vm.viewModel.AutoResolve) ? _.clone(vm.viewModel.AutoResolve) : false,\r\n                }\r\n            }\r\n            var workItemStatuses = app.constants.workItemStatuses;\r\n            //map all the status constants to shorter local vars. used in getFormTaskViewModel() and getFormTaskChangeRules()\r\n            var incidentResolved = workItemStatuses.Incident.Resolved;\r\n            var incidentActive = workItemStatuses.Incident.Active;\r\n            var incidentClosed = workItemStatuses.Incident.Closed;\r\n            var incidentActivePending = workItemStatuses.Incident.Pending;\r\n            var serviceRequestCancelled = workItemStatuses.ServiceRequest.Cancelled;\r\n            var serviceRequestCompleted = workItemStatuses.ServiceRequest.Completed;\r\n            var serviceRequestSubmitted = workItemStatuses.ServiceRequest.Submitted;\r\n            var serviceRequestInProgress = workItemStatuses.ServiceRequest.InProgress;\r\n            var serviceRequestOnHold = workItemStatuses.ServiceRequest.OnHold;\r\n            var serviceRequestFailed = workItemStatuses.ServiceRequest.Failed;\r\n            var serviceRequestClosed = workItemStatuses.ServiceRequest.Closed;\r\n            var changeRequestFailed = workItemStatuses.ChangeRequest.Failed;\r\n            var changeRequestClosed = workItemStatuses.ChangeRequest.Closed;\r\n            var changeRequestInProgress = workItemStatuses.ChangeRequest.InProgress;\r\n            var changeRequestOnHold = workItemStatuses.ChangeRequest.OnHold;\r\n            var changeRequestCancelled = workItemStatuses.ChangeRequest.Cancelled;\r\n            var changeRequestSubmitted = workItemStatuses.ChangeRequest.Submitted;\r\n            var changeRequestCompleted = workItemStatuses.ChangeRequest.Completed;\r\n            var problemResolved = workItemStatuses.Problem.Resolved;\r\n            var problemClosed = workItemStatuses.Problem.Closed;\r\n            var releaseRecordClosed = workItemStatuses.ReleaseRecord.Closed;\r\n            var releaseRecordCancelled = workItemStatuses.ReleaseRecord.Cancelled;\r\n            var releaseRecordCompleted = workItemStatuses.ReleaseRecord.Completed;\r\n            var releaseRecordFailed = workItemStatuses.ReleaseRecord.Failed;\r\n            var releaseRecordEditing = workItemStatuses.ReleaseRecord.Editing;\r\n            var releaseRecordOnHold = workItemStatuses.ReleaseRecord.OnHold;\r\n            var releaseRecordInProgress = workItemStatuses.ReleaseRecord.InProgress;\r\n            /* END variables */\r\n\r\n\r\n            /* functions */\r\n            //main viewModel that holds ALL THE THINGS\r\n            var getFormTaskViewModel = function (modalEle) {\r\n                return kendo.observable({\r\n                    //'changeStatus' function is bound to anchor click event via data-bind=\"click: blahblah\"\r\n                    changeStatus: function () {\r\n                        var modalWindowEle = modalEle.element.clone(); //we have the element in memory so no need use a selector\r\n\r\n                        var modalWindowControl = modalWindowEle.kendoCiresonWindow({\r\n                            title: localization.ChangeStatusTask,\r\n                            width: 600,\r\n                            height: 480,\r\n                            actions: [],\r\n                            //activate trigger when window open animation is complete.\r\n                            activate: function () {\r\n                                var selectedWiType = modalWindowViewModel.type;\r\n                                var currentStatusId = vm.viewModel.Status.Id;\r\n                                onModalActivate(selectedWiType, currentStatusId, statusTreeViewControl, statusDropDownControl, modalWindowViewModel.enumId);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //this view Model is bound to the window element\r\n                        var modalWindowViewModel = kendo.observable({\r\n                            enumId: node.Configs.statusEnumId,\r\n                            resolutionCategoryEnumId: node.Configs.resolutionCategoryEnumId,\r\n                            type: node.Configs.type,\r\n                            resolveChildSettings: null,\r\n                            letAnalystDecide: false,\r\n                            workItemModel: vm.viewModel,\r\n                            okEnabled: false,\r\n                            requireResolution: false,\r\n                            resolveChildIncident: true,\r\n                            okClick: function () {\r\n                                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                if (_.isString(vm.viewModel.Status.Name) && vm.viewModel.Status.Name.length < 1) {\r\n                                    vm.viewModel.set(\"Status\", { Id: originalVm.Status.Id, Name: originalVm.Status.Name });\r\n                                } else if (this.requireResolution && (!_.isUndefined(vm.viewModel.ResolutionCategory) && _.isNull(vm.viewModel.ResolutionCategory.Id))) {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(localization.RequestCategoryRequiredError);\r\n                                } else if (this.requireResolution && _.isNull(vm.viewModel.Notes) && (vm.type == \"ServiceRequest\")) {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(localization.ImplementationNotesRequiredError);\r\n                                } else if (vm.viewModel.Status.Id === incidentResolved) { //resolved incident\r\n                                    //set resolved date\r\n                                    vm.viewModel.set(\"ResolvedDate\", new Date().toISOString());\r\n                                    var resDateEle = $(\"input[name='ResolvedDate']\");\r\n                                    if (resDateEle.attr('data-control') == 'datePicker') {\r\n                                        resDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (resDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        resDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //add to action log\r\n                                   if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordResolved(vm.viewModel.ResolutionDescription));\r\n                                    }\r\n                                    //set resolved by user \r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: session.user.Id };\r\n\r\n                                    //if incident is a parent, check if we need to resolve its child incidents\r\n                                    if (vm.viewModel.IsParent && (this.resolveChildSettings.ResolveChildIncident || (this.resolveChildSettings.ResolvedLetAnalystDecide && this.resolveChildIncident)))\r\n                                        resolveChildIncidents(this.resolveChildSettings);\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === incidentClosed || vm.viewModel.Status.Id === serviceRequestClosed || vm.viewModel.Status.Id === problemClosed) { //closed IR or closed SR\r\n                                    //set closed date\r\n                                    vm.viewModel.set(\"ClosedDate\", new Date().toISOString());\r\n                                    var closeDateEle = $(\"input[name='ClosedDate']\");\r\n                                    if (closeDateEle.attr('data-control') == 'datePicker') {\r\n                                        closeDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (closeDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        closeDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //set closed by user \r\n                                    switch (vm.viewModel.Status.Id) {\r\n                                        case problemClosed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            break;\r\n                                        case incidentClosed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordClosed());\r\n                                            break;\r\n                                        case serviceRequestClosed:\r\n                                            vm.viewModel.ClosedByUser = { BaseId: session.user.Id };\r\n                                            break;\r\n                                    }\r\n                                    \r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                }\r\n                                else if (vm.viewModel.Status.Id === incidentActive) { //activate incident\r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: null };\r\n                                    vm.viewModel.ResolutionCategory.set(\"Id\", null);\r\n                                    vm.viewModel.ResolutionCategory.set(\"Name\", \"\");\r\n                                    vm.viewModel.set(\"ResolutionDescription\", null);\r\n                                    vm.viewModel.set(\"ResolvedDate\", null);\r\n\r\n                                    //add to action log\r\n                                    var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                    if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordActivated());\r\n                                    }\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === serviceRequestCompleted) { //completed service request\r\n                                    //set completed date\r\n                                    vm.viewModel.set(\"CompletedDate\", new Date().toISOString());\r\n                                    var comDateEle = $(\"input[name='CompletedDate']\");\r\n                                    if (comDateEle.attr('data-control') == 'datePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (comDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === problemResolved) { //resolved problem\r\n                                    //set resolve date\r\n                                    vm.viewModel.set(\"ResolvedDate\", new Date().toISOString());\r\n                                    var comDateEle = $(\"input[name='ResolvedDate']\");\r\n                                    if (comDateEle.attr('data-control') == 'datePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (comDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //set resolved by user \r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: session.user.Id };\r\n\r\n                                    if (vm.viewModel.IsAutoResolve) {\r\n                                        resolveRelatedWorkItems();\r\n                                    }\r\n\r\n                                    vm.viewModel.set(\"AutoResolve\", vm.viewModel.IsAutoResolve);\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                //reset to original values\r\n                                vm.viewModel.set(\"Status\", { Id: originalVm.Status.Id, Name: originalVm.Status.Name });\r\n                                if (node.Configs.type === \"Incident\") {\r\n                                    vm.viewModel.set(\"ResolutionCategory\", { Id: originalVm.ResolutionCategory.Id, Name: originalVm.ResolutionCategory.Name });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", originalVm.ResolutionDescription);\r\n                                    vm.viewModel.set(\"ChildWorkItem\", originalVm.ChildWorkItem);\r\n                                }\r\n                                if (node.Configs.type === \"ServiceRequest\") {\r\n                                    vm.viewModel.set(\"ImplementationResults\", { Id: originalVm.ImplementationResults.Id, Name: originalVm.ImplementationResults.Name });\r\n                                    vm.viewModel.set(\"Notes\", originalVm.Notes);\r\n                                }\r\n                                if (node.Configs.type === \"Problem\") {\r\n                                    vm.viewModel.set(\"Resolution\", { Id: originalVm.Resolution.Id, Name: originalVm.Resolution.Name });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", originalVm.ResolutionDescription);\r\n                                    vm.viewModel.set(\"RelatedWorkItems\", originalVm.RelatesToWorkItem);\r\n                                    vm.viewModel.set(\"AutoResolve\", originalVm.AutoResolve);\r\n                                    vm.viewModel.set(\"IsAutoResolve\", originalVm.AutoResolve);\r\n                                }\r\n                                modalWindowControl.close();\r\n                            },\r\n                            showComment: vm.viewModel.Status.Id == serviceRequestCancelled,\r\n                            showResolution: (vm.viewModel.Status.Id == incidentResolved || vm.viewModel.Status.Id == serviceRequestCompleted || vm.viewModel.Status.Id == problemResolved),\r\n                            showAutoResolve: (vm.viewModel.Status.Id == problemResolved)\r\n                        });\r\n\r\n                        //bind window element to window viewModel\r\n                        kendo.bind(modalWindowEle, modalWindowViewModel);\r\n\r\n                        //create status enumPicker\r\n                        createStatusPicker(modalWindowViewModel, modalWindowEle);\r\n                        var statusDropDownControl = modalWindowEle.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                        var statusTreeViewControl = modalWindowEle.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n\r\n                        //bind status picker changes events\r\n                        statusDropDownControl.bind(\"change\", function (e) {\r\n                            //make sure button is disabled again\r\n                            vm.viewModel.set(\"okEnabled\", false);\r\n                            enableResolutionSettings(vm.viewModel.Status.Id, modalWindowViewModel);\r\n                        });\r\n                        statusTreeViewControl.bind(\"change\", function (e) {\r\n                            //make sure button is disabled again\r\n                            vm.viewModel.set(\"okEnabled\", false);\r\n                            enableResolutionSettings(vm.viewModel.Status.Id, modalWindowViewModel);\r\n                        });\r\n\r\n\r\n                        /*\r\n                         * conditionally added fields\r\n                         */\r\n\r\n                        if (modalWindowViewModel.type === \"Incident\") {\r\n                            createIncidentResolutionFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        if (modalWindowViewModel.type === \"ServiceRequest\") {\r\n                            createResultFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        if (modalWindowViewModel.type === \"Problem\") {\r\n                            createProblemResolutionFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        /*\r\n                         * END conditionally added fields\r\n                         */\r\n\r\n\r\n                        modalWindowEle.removeClass('hide');\r\n                        modalWindowEle.show();\r\n                        modalWindowControl.open();\r\n                    }\r\n                });\r\n            };\r\n\r\n            var getDrawerTaskViewModel = function (modalView) {\r\n                //drawerTaskVm is the viewModel that sits between the modal window and the page controls.\r\n                var drawerTaskVm = kendo.observable({\r\n                    currentSelection: [],\r\n                    currentSelectionOfParents: [],\r\n                    containsParents: false,\r\n                    selectedWorkItem: {\r\n                        type: '',\r\n                        trimmedType: '',\r\n                        projectionId: '',\r\n                        currentStatusId: '',\r\n                        currentStatusName: '',\r\n                        statusTypeId: '',\r\n                        resolutionResultEnumId: ''\r\n                    },\r\n                    openModal: function () {\r\n                        if (!this.isEnabled) {\r\n                            return;\r\n                        }\r\n                        var taskVm = this;\r\n                        var modalEle = modalView.element.clone();\r\n                        var modalControl = modalEle.kendoCiresonWindow({\r\n                            title: localization.ChangeStatusTask,\r\n                            actions: [],\r\n                            activate: function () {\r\n                                var selectedWiType = taskVm.selectedWorkItem.trimmedType;\r\n                                var currentStatusId = taskVm.selectedWorkItem.currentStatusId;\r\n                                onModalActivate(selectedWiType, currentStatusId, statusTreeViewControl, statusDropDownControl, taskVm.selectedWorkItem.statusTypeId);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //viewModel for the kendo window control and form\r\n                        var modalViewModel = kendo.observable({\r\n                            selectedWorkItems: taskVm.currentSelection,\r\n                            //parent/child IR fields\r\n                            selectedParents: taskVm.currentSelectionOfParents,\r\n                            resolveChildSettings: null,\r\n                            resolveChildIncident: true,\r\n                            //edited form fields\r\n                            newStatusObj: '',                //IR|SR work item status (enum, required)\r\n                            newResolutionId: '',            //IR 'Resolution' (enum, required)\r\n                            resolutionDescription: '',      //IR 'Resolution Description' (textarea)\r\n                            newResultId: '',                //SR Implementation Results (enum)\r\n                            resultNote: '',                 //SR 'Completed' status 'Implementation Notes' (textarea, required)\r\n                            resultComment: '',              //SR 'Cancelled' status 'Comment' (textarea)\r\n                            showPath: showEnumPath,\r\n                            leafNodeOnly: mustSelectLeafNode,\r\n                            //wiStatusTypeId is the enum id for IR or SR used to get there wi status, resolutionResultEnumId is the enum id for IR resolution or SR result\r\n                            wiStatusTypeId: taskVm.selectedWorkItem.statusTypeId,\r\n                            resolutionResultEnumId: taskVm.selectedWorkItem.resolutionResultEnumId,\r\n\r\n                            //toggles for fields required and visible\r\n                            irStatusResolved: false,\r\n                            srStatusCompleted: false,\r\n                            srStatusCancelled: false,\r\n                            irCategoryRequired: false,\r\n                            srNotesRequired: false,\r\n                            irResolveChildOption: false,\r\n\r\n                            //button events/logic\r\n                            okEnabled: false,\r\n                            okClick: function () {\r\n\r\n                                var windowViewModel = this;\r\n                                var isValid = bulkEditFormIsValid(windowViewModel, modalEle);\r\n                                if (isValid) {\r\n                                    //check if we need to handle child wi resolution\r\n                                    if (windowViewModel.irStatusResolved && (resolveChildIncidentSettings.ResolveChildIncident || (windowViewModel.irResolveChildOption && windowViewModel.resolveChildIncident)) && taskVm.containsParents) {\r\n                                        //handles post for IR-resolved parents and children WIs\r\n                                        postBulkEditChangesWithChildren(taskVm, windowViewModel, modalControl);\r\n                                    } else {\r\n                                        //handles post for everything else\r\n                                        var data = {\r\n                                            ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                            UpdateServiceManagement: true,\r\n                                            ItemIds: _.pluck(windowViewModel.selectedWorkItems, 'BaseId'),\r\n                                            EditedFields: getDrawerTaskEditedFields(windowViewModel)\r\n                                        }\r\n\r\n                                        postBulkEditChanges(data, taskVm, modalControl);\r\n                                    }\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                modalControl.close();\r\n                            }\r\n                        });\r\n\r\n                        kendo.bind(modalEle, modalViewModel);\r\n\r\n                        //create status enumPicker && bind change events\r\n                        var statusDropDownControl = modalEle.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                        var statusTreeViewControl = modalEle.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n                        function handleStatusControlChange() {\r\n                            var item = modalViewModel.get(\"newStatusObj\");\r\n                            if (item) {\r\n                                toggleAdditionalFields(item.Id, taskVm.selectedWorkItem.currentStatusId, modalViewModel);\r\n                            }\r\n                        }\r\n                        statusDropDownControl.bind(\"change\", function (e) {\r\n                             handleStatusControlChange();\r\n                        });\r\n                        statusTreeViewControl.bind(\"change\", function (e) {\r\n                            handleStatusControlChange();\r\n                        });\r\n                        \r\n                        //set vis/require depending on the current status \r\n                        if (taskVm.selectedWorkItem.trimmedType === \"Incident\" && taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.Incident.Resolved) {\r\n                            modalViewModel.set('irStatusResolved', true);\r\n                            modalViewModel.set('irCategoryRequired', true);\r\n                        }\r\n                        if (taskVm.selectedWorkItem.trimmedType === \"ServiceRequest\") {\r\n                            if (taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.ServiceRequest.Completed) {\r\n                                modalViewModel.set('srStatusCompleted', true);\r\n                                modalViewModel.set('srStatusCancelled', false);\r\n                            } else if (taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.ServiceRequest.Cancelled) {\r\n                                modalViewModel.set('srStatusCancelled', true);\r\n                                modalViewModel.set('srStatusCompleted', false);\r\n                            }\r\n                        }\r\n\r\n                        //show the window\r\n                        modalEle.removeClass('hide');\r\n                        modalEle.show();\r\n                        modalControl.open();\r\n                    },\r\n                    isEnabled: false,\r\n                    showTooltip: true,\r\n                    setEnabled: function (enabled) {\r\n                        this.set('isEnabled', enabled);\r\n                        this.set('showTooltip', !enabled);\r\n                    },\r\n                    targetControlId: '',\r\n                    onTargetControlChange: function (grid) {\r\n                        //empty out parentitems and set to false, readded below if applicable\r\n                        drawerTaskVm.set('currentSelectionOfParents', []);\r\n                        drawerTaskVm.set('containsParents', false);\r\n\r\n                        var selectedDataItems = [];\r\n                        if (app.isMobile()) {\r\n                            //grid is selected items array when called from mobile\r\n                            selectedDataItems = grid;\r\n                        } else {\r\n                            selectedDataItems = grid.select().map(function (index, item) {\r\n                                return grid.dataItem($(item));\r\n                            }).toArray();\r\n                        }\r\n\r\n                        //we only update 10 items at a time\r\n                        if (selectedDataItems.length > 10) {\r\n                            this.onExceedSelectionCount();\r\n                        }\r\n\r\n                        drawerTaskVm.set('currentSelection', selectedDataItems);\r\n\r\n                        //if nothing is selected disabled the item\r\n                        if (selectedDataItems.length <= 0 || selectedDataItems.length > 10) {\r\n                            drawerTaskVm.setEnabled(false);\r\n                        } else {\r\n                            var selectedTypes = _.pluck(selectedDataItems, \"WorkItemType\");\r\n                            var selectedStatusIds = _.pluck(selectedDataItems, \"StatusId\");\r\n                            var selectedStatusNames = _.pluck(selectedDataItems, \"Status\");\r\n\r\n                            //return false if multiple selected, otherwise returns string values\r\n                            var singleSelectedType = _.reduce(selectedTypes, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            drawerTaskVm.set(\"selectedWorkItem.type\", singleSelectedType);\r\n\r\n                            //return false if multiple selected, otherwise returns string values\r\n                            var singleSelectedStatusId = _.reduce(selectedStatusIds, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            var singleSelectedStatusName = _.reduce(selectedStatusNames, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            drawerTaskVm.set(\"selectedWorkItem.currentStatusId\", singleSelectedStatusId);\r\n                            drawerTaskVm.set(\"selectedWorkItem.currentStatusName\", singleSelectedStatusName);\r\n\r\n\r\n                            if (singleSelectedStatusId && singleSelectedType) {\r\n                                switch (singleSelectedType) {\r\n                                    case \"System.WorkItem.ServiceRequest\":\r\n                                        drawerTaskVm.setTrimmedWiType();\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemServiceRequestViewModel);\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', app.constants.workItemStatuses.ServiceRequest.Id);\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', app.constants.enumPickerIds.ServiceRequestImplementationResults);\r\n\r\n                                        //if SR is closed do not allow status change from here (TFS 3560)\r\n                                        if (singleSelectedStatusName === \"Closed\") {\r\n                                            drawerTaskVm.setEnabled(false);\r\n                                        } else {\r\n                                            drawerTaskVm.setEnabled(true);\r\n                                        }\r\n\r\n                                        break;\r\n                                    case \"System.WorkItem.Incident\":\r\n                                        var parentItems = [];\r\n                                        _.each(selectedDataItems, function (workItem) {\r\n                                            if (workItem.IsParent) {\r\n                                                drawerTaskVm.set('containsParents', true);\r\n                                                parentItems.push(workItem);\r\n                                            }\r\n                                        });\r\n                                        drawerTaskVm.set('currentSelectionOfParents', parentItems);\r\n\r\n                                        drawerTaskVm.setTrimmedWiType();\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemIncidentViewModel);\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', app.constants.workItemStatuses.Incident.Id);\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', app.constants.enumPickerIds.IncidentResolution);\r\n                                        drawerTaskVm.setEnabled(true);\r\n                                        break;\r\n                                    default:\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', '');\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', '');\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', '');\r\n                                        // not a supported bulk edit Type, disable the edit button\r\n                                        drawerTaskVm.setEnabled(false);\r\n                                }\r\n                            } else {\r\n                                //not same type && status\r\n                                drawerTaskVm.setEnabled(false);\r\n                            }\r\n                        }\r\n                    },\r\n                    setTrimmedWiType: function () {\r\n                        this.set('selectedWorkItem.trimmedType', this.selectedWorkItem.type.split(/[\\s.]+/).pop());\r\n                    },\r\n                    onExceedSelectionCount: function() {\r\n                        kendo.ui.ExtAlertDialog.show({\r\n                            title: localizationHelper.localize('Warning'),\r\n                            message: localizationHelper.localize('BulkEditExceedMessage')\r\n                        });\r\n                    }\r\n                });\r\n\r\n                return drawerTaskVm;\r\n            };\r\n\r\n            //executes when modal dialog is opening\r\n            var onModalActivate = function (selectedWiType, currentStatusId, treeControl, dropDownControl, statusEnumId) {\r\n                //determine allowed status changes based on current type and status\r\n                var changeRules = getFormTaskChangeRules();\r\n                var changeRulesFilter = changeRules[selectedWiType][currentStatusId];\r\n                \r\n                //since Incident can have custom enums we need to check here if no rules were set then its not resolved\r\n                if (selectedWiType == \"Incident\" && _.isUndefined(changeRulesFilter)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"neq\", value: app.constants.workItemStatuses.Incident.Closed };\r\n                }\r\n\r\n                //apply allowed status filtering\r\n                treeControl.dataSource.options.serverFiltering = false;\r\n                treeControl.dataSource.filter(changeRulesFilter);\r\n\r\n                //reassign dropdown datasource with filtered data so that users will not be able to access restricted status by typing\r\n                $.get(\"/api/V3/Enum/GetFlatList/\", { id: statusEnumId, itemFilter: \"\" }, function (data) {\r\n                    var comboDataSource = new kendo.data.DataSource();\r\n                    comboDataSource.data(data);\r\n                    comboDataSource.filter(changeRulesFilter);\r\n                    if (comboDataSource.view().length > 0) {\r\n                        dropDownControl.setDataSource(comboDataSource.view());\r\n                    }\r\n                });\r\n                \r\n                resolveChildIncidentSettings = getResolveChildIncidentSettings();\r\n            };\r\n\r\n            //template .build() and view.renderererers.\r\n            var buildAndRender = {\r\n                windowEle: function (windowTemplate) {\r\n                    //build the template for the window\r\n                    var builtModal = _.template(windowTemplate);\r\n                    var ele = new kendo.View(builtModal(), { wrap: false });\r\n                    //send hidden window back to caller (appended in the callback)\r\n                    callback(ele.render());\r\n                    return ele;\r\n                },\r\n                taskListItem: function (properties, anchorViewModel, template) {\r\n                    $.extend(true, properties, node);\r\n                    //build the anchor and bind viewModel to it\r\n                    var builtAnchor = _.template(template);\r\n                    var anchorElm = new kendo.View(builtAnchor(properties), {\r\n                        wrap: false, model: anchorViewModel\r\n                    });\r\n                    //send anchor element back to caller (appended in the callback)\r\n                    callback(anchorElm.render());\r\n                    return anchorElm;\r\n                }\r\n            }\r\n            //creators of controls in the window\r\n            var createProblemResolutionFields = function (modalWindowViewModel, modalWindowEle) {\r\n                var resolutionProperties = {\r\n                    PropertyName: \"Resolution\",\r\n                    PropertyDisplayName: \"Resolution\",\r\n                    Required: false,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), resolutionProperties, vm.viewModel);\r\n\r\n                var implementationNotesProperties = {\r\n                    PropertyName: \"ResolutionDescription\",\r\n                    PropertyDisplayName: \"ResolutionDescription\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), implementationNotesProperties, vm.viewModel);\r\n\r\n                var autoResolveProperties = {\r\n                    PropertyName: \"IsAutoResolve\",\r\n                    PropertyDisplayName: \"ProblemAutoResolveIncident\",\r\n                    Inline: true,\r\n                    Disabled: false\r\n                };\r\n                buildCheckbox(modalWindowEle.find(\"#autoResolve\"), autoResolveProperties, vm.viewModel);\r\n            };\r\n            var createResultFields = function (modalWindowViewModel, modalWindowEle) {\r\n                var implementationResultProperties = {\r\n                    PropertyName: \"ImplementationResults\",\r\n                    PropertyDisplayName: \"ImplementationResults\",\r\n                    Required: false,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), implementationResultProperties, vm.viewModel);\r\n\r\n                var implementationNotesProperties = {\r\n                    PropertyName: \"Notes\",\r\n                    PropertyDisplayName: \"Implementationnotes\",\r\n                    Required: true,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), implementationNotesProperties, vm.viewModel);\r\n\r\n                var commentProperties = {\r\n                    PropertyName: \"Notes\",\r\n                    PropertyDisplayName: \"Comment\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#comment\"), commentProperties, vm.viewModel);\r\n            };\r\n            var createIncidentResolutionFields = function (modalWindowViewModel, modalWindowEle) {\r\n                //resolution picker\r\n                var resolutionProperties = {\r\n                    PropertyName: \"ResolutionCategory\",\r\n                    PropertyDisplayName: \"ResolutionCategory\",\r\n                    Required: true,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), resolutionProperties, vm.viewModel);\r\n\r\n                //resolution description\r\n                var resolutionDescriptionProperties = {\r\n                    PropertyName: \"ResolutionDescription\",\r\n                    PropertyDisplayName: \"ResolutionDescription\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), resolutionDescriptionProperties, vm.viewModel);\r\n\r\n                var letAnalystDecideProperties = {\r\n                    PropertyName: \"resolveChildIncident\",\r\n                    PropertyDisplayName: \"ResolveChildIncidentMessage\",\r\n                    Inline: true,\r\n                    Disabled: false\r\n                };\r\n                buildCheckbox(modalWindowEle.find(\"#letAnalystDecide\"), letAnalystDecideProperties, vm.viewModel);\r\n            };\r\n            var createStatusPicker = function (modalWindowViewModel, modalWindowEle) {\r\n                var statusProperties = {\r\n                    PropertyName: \"Status\",\r\n                    PropertyDisplayName: \"Status\",\r\n                    EnumId: modalWindowViewModel.enumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#statusPicker'), statusProperties, vm.viewModel);\r\n            };\r\n            //form field helper\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n            var buildTextArea = function (container, props, vmModel) {\r\n                txtAreaControl.build(vmModel, props, function (cbTxtAreaControl) {\r\n                    container.html(cbTxtAreaControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n            var buildCheckbox = function (container, props, vmModel) {\r\n                checkBoxControl.build(vmModel, props, function (txtCheckboxControl) {\r\n                    container.html(txtCheckboxControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true, vm: vmModel, bind: true\r\n                    });\r\n                });\r\n            }\r\n            var getDrawerTaskChildEditedFields = function (viewModel, resolutionCategoryId) {\r\n                var json = [\r\n                    {\r\n                        PropertyName: \"Status\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: viewModel.get(\"newStatusObj\").Id\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolutionCategory\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: resolutionCategoryId\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolutionDescription\",\r\n                        PropertyType: \"string\",\r\n                        EditedValue: viewModel.get(\"resolutionDescription\")\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolvedDate\",\r\n                        PropertyType: \"date\",\r\n                        EditedValue: new Date().toISOString()\r\n                    },\r\n                    {\r\n                        //resolved by user \r\n                        PropertyName: \"RelatesToTroubleTicket\",\r\n                        PropertyType: \"singlecardinalityobject\",\r\n                        PropertyRelationshipId: \"f7d9b385-a84d-3884-7cde-e2c926d931a5\", //TroubleTicketResolvedByUserRelationshipString\r\n                        EditedValue: session.user.Id\r\n                    },\r\n                    {\r\n                        //action log for IR resolved.\r\n                        PropertyName: \"AppliesToTroubleTicket\",\r\n                        PropertyType: \"multiplecardinalityobject\",\r\n                        propertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //TroubleTicketHasActionLogId\r\n                        EditedValue: {\r\n                            ActionType: {\r\n                                Id: \"5ca2cfee-6740-1576-540B-ce17222840b8\",\r\n                                Name: \"Record Resolved\"\r\n                            },\r\n                            Description: viewModel.get(\"resolutionDescription\"),\r\n                            DescriptionDisplay: viewModel.get(\"resolutionDescription\"),\r\n                            EnteredBy: session.user.Name,\r\n                            EnteredDate: new Date().toISOString(),\r\n                            LastModified: new Date().toISOString(),\r\n                            Title: localization.RecordResolved,\r\n                            Image: app.config.iconPath + app.config.icons[\"Record Resolved\"]\r\n                        }\r\n                    }];\r\n\r\n                return json;\r\n            }\r\n            var getDrawerTaskEditedFields = function (viewModel) {\r\n                var json = [\r\n                    {\r\n                        PropertyName: \"Status\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: viewModel.get(\"newStatusObj\").Id\r\n                    }\r\n                ];\r\n                switch (viewModel.get(\"newStatusObj\").Id) {\r\n                    case app.constants.workItemStatuses.Incident.Closed:\r\n                        json.push({\r\n                            PropertyName: \"ClosedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                           //closed by user \r\n                           PropertyName: \"RelatesToTroubleTicket_\",\r\n                           PropertyType: \"singlecardinalityobject\",\r\n                           PropertyRelationshipId: \"76bc6c3b-a77b-2468-0a63-169d23dfcdf0\", //TroubleTicketClosedByUserRelationshipString\r\n                           EditedValue: session.user.Id\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Closed:\r\n                        json.push({\r\n                            PropertyName: \"ClosedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                            //closed by user \r\n                            PropertyName: \"ClosedByUser\",\r\n                            PropertyType: \"singlecardinalityobject\",\r\n                            PropertyRelationshipId: \"ba8180d3-5bf9-1bbd-ae87-145dd8fc520f\", //WorkItemClosedByUserRelationshipString\r\n                            EditedValue: session.user.Id\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.Incident.Resolved:\r\n                        json.push({\r\n                            PropertyName: \"ResolutionCategory\",\r\n                            PropertyType: \"enum\",\r\n                            EditedValue: viewModel.get(\"newResolutionId\").Id\r\n                        },\r\n                        {\r\n                            PropertyName: \"ResolutionDescription\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resolutionDescription\")\r\n                        },\r\n                        {\r\n                            PropertyName: \"ResolvedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                            //resolved by user \r\n                            PropertyName: \"RelatesToTroubleTicket\",\r\n                            PropertyType: \"singlecardinalityobject\",\r\n                            PropertyRelationshipId: \"f7d9b385-a84d-3884-7cde-e2c926d931a5\", //TroubleTicketResolvedByUserRelationshipString\r\n                            EditedValue: session.user.Id\r\n                        },\r\n                        {\r\n                            //action log for IR resolved.\r\n                            PropertyName: \"AppliesToTroubleTicket\",\r\n                            PropertyType: \"multiplecardinalityobject\",\r\n                            propertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //TroubleTicketHasActionLogId\r\n                            EditedValue: {\r\n                                ActionType: {\r\n                                    Id: \"5ca2cfee-6740-1576-540B-ce17222840b8\",\r\n                                    Name: \"Record Resolved\"\r\n                                },\r\n                                Description: viewModel.get(\"resolutionDescription\"),\r\n                                DescriptionDisplay: viewModel.get(\"resolutionDescription\"),\r\n                                EnteredBy: session.user.Name,\r\n                                EnteredDate: new Date().toISOString(),\r\n                                LastModified: new Date().toISOString(),\r\n                                Title: localization.RecordResolved,\r\n                                Image: app.config.iconPath + app.config.icons[\"Record Resolved\"]\r\n                            }\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Completed:\r\n\r\n                        json.push({\r\n                            PropertyName: \"Notes\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resultNote\")\r\n                        },\r\n                        {\r\n                            PropertyName: \"CompletedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        });\r\n\r\n                        if (!_.isUndefined(viewModel.get(\"newResultId\").Id)) {\r\n                            json.push({\r\n                                PropertyName: \"ImplementationResults\",\r\n                                PropertyType: \"enum\",\r\n                                EditedValue: viewModel.get(\"newResultId\").Id\r\n                            });\r\n                        }\r\n\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Cancelled:\r\n                        json.push({\r\n                            PropertyName: \"Notes\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resultComment\")\r\n                        });\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                return json;\r\n            }\r\n            //resolution funcs\r\n            var getResolveChildIncidentSettings = function () {\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    resolveChildIncidentSettings = data;\r\n                });\r\n            };\r\n            var toggleAdditionalFields = function (statusId, currentStatusId, vmWindow) {\r\n                \r\n                switch (statusId) {\r\n                    case incidentResolved:\r\n                        vmWindow.set(\"irStatusResolved\", true);\r\n                        vmWindow.set(\"irCategoryRequired\", true);\r\n                        vmWindow.set(\"irResolveChildOption\", vmWindow.selectedParents.length>0 && resolveChildIncidentSettings.ResolvedLetAnalystDecide);\r\n                        break;\r\n                    case serviceRequestCancelled:\r\n                        vmWindow.set(\"srStatusCancelled\", true);\r\n                        vmWindow.set(\"srStatusCompleted\", false);\r\n                        break;\r\n                    case serviceRequestCompleted:\r\n                        vmWindow.set(\"srStatusCompleted\", true);\r\n                        vmWindow.set(\"srNotesRequired\", true);\r\n                        vmWindow.set(\"srStatusCancelled\", false);\r\n                        break;\r\n                    default:\r\n                        vmWindow.set(\"irStatusResolved\", false);\r\n                        vmWindow.set(\"irCategoryRequired\", false);\r\n                        vmWindow.set(\"srStatusCancelled\", false);\r\n                        vmWindow.set(\"srStatusCompleted\", false);\r\n                        vmWindow.set(\"srNotesRequired\", false);\r\n                        break;\r\n                }\r\n\r\n                vmWindow.set(\"okEnabled\", true);\r\n\r\n            };\r\n            var enableResolutionSettings = function (statusId, vmWindow) {\r\n                switch (statusId) {\r\n                    case incidentResolved: // incident resolved (check for resolve child settings ans how resolution section)\r\n                        vmWindow.set(\"resolveChildSettings\", resolveChildIncidentSettings);\r\n                        vmWindow.set(\"letAnalystDecide\", (resolveChildIncidentSettings.ResolvedLetAnalystDecide && vm.viewModel.IsParent));\r\n                        vmWindow.set(\"requireResolution\", true);\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        break;\r\n                    case serviceRequestCancelled: //sr cancelled (show comment section)\r\n                        vmWindow.set(\"showComment\", true);\r\n                        break;\r\n                    case serviceRequestCompleted: //sr completed (show implementation section)\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        vmWindow.set(\"requireResolution\", true)\r\n                        break;\r\n                    case problemResolved: //problem resolved (show resolution and auto resolve option)\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        vmWindow.set(\"requireResolution\", true);\r\n                        vmWindow.set(\"showAutoResolve\", true);\r\n                        break;\r\n                    default:\r\n                        vmWindow.set(\"showComment\", false);\r\n                        vmWindow.set(\"showResolution\", false);\r\n                        vmWindow.set(\"requireResolution\", false);\r\n                        vmWindow.set(\"showAutoResolve\", false);\r\n                        vmWindow.set(\"letAnalystDecide\", false);\r\n                        break;\r\n                }\r\n\r\n                //make sure we have a new value\r\n                if (_.isString(vm.viewModel.Status.Name) && vm.viewModel.Status.Name.length > 0) {\r\n                    vmWindow.set(\"okEnabled\", true);\r\n                } else {\r\n                    vmWindow.set(\"okEnabled\", false); //turn off the button now\r\n                }\r\n            };\r\n            var resolveChildIncidents = function (resolveChildSettings) {\r\n                var resolutionCategoryId = resolveChildSettings.ChildIncidentResolutionCategorySameAsParent\r\n                                           ? vm.viewModel.ResolutionCategory.Id\r\n                                           : resolveChildSettings.ChildIncidentResolutionCategory.Id;\r\n\r\n                $.each(vm.viewModel.ChildWorkItem, function (i, item) {\r\n                    item.set(\"Status\", { Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name });\r\n                    item.set(\"ResolutionCategory\", { Id: resolutionCategoryId }); //TODO: I have some concearns here need to ask david -jk\r\n                    item.set(\"ResolutionDescription\", vm.viewModel.ResolutionDescription);\r\n                    item.set(\"ResolvedDate\", vm.viewModel.ResolvedDate);\r\n                });\r\n            };\r\n\r\n            var resolveRelatedWorkItems = function () {\r\n\r\n                $.each(vm.viewModel.RelatesToWorkItem, function (i, item) {\r\n                    item.set(\"Status\", { Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name });\r\n                    item.set(\"ResolutionDescription\", vm.viewModel.ResolutionDescription);\r\n                    item.set(\"ResolvedDate\", vm.viewModel.ResolvedDate);\r\n                });\r\n            };\r\n\r\n            //rules on what statuses are available based on current WI status\r\n            var getFormTaskChangeRules = function () {\r\n                //define change rules and states\r\n                var changeRules = new Array();\r\n\r\n                /*ServiceRequest*/\r\n                changeRules['ServiceRequest'] = new Array();\r\n\r\n                changeRules['ServiceRequest'][serviceRequestSubmitted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestSubmitted }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestInProgress] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestOnHold },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestInProgress }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                /*END ServiceRequest*/\r\n\r\n\r\n                /*Release Record*/\r\n                changeRules['ReleaseRecord'] = new Array();\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordInProgress] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordEditing] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCompleted }\r\n                    ]\r\n                };\r\n\r\n                /*END Release Record*/\r\n\r\n\r\n                /*Change Request*/\r\n                changeRules['ChangeRequest'] = new Array();\r\n\r\n                changeRules['ChangeRequest'][changeRequestSubmitted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestSubmitted }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestInProgress] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestOnHold },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestInProgress }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n                /*END Change Request*/\r\n\r\n                /*Incident*/\r\n                changeRules['Incident'] = new Array();\r\n\r\n                changeRules['Incident'][incidentActive] = {\r\n                    field: \"Id\",\r\n                    operator: \"neq\",\r\n                    value: incidentClosed\r\n                };\r\n\r\n                changeRules['Incident'][incidentActivePending] = {\r\n                    field: \"Id\",\r\n                    operator: \"neq\",\r\n                    value: incidentClosed\r\n                };\r\n\r\n                changeRules['Incident'][incidentResolved] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: incidentActive },\r\n                        { field: \"Id\", operator: \"eq\", value: incidentClosed }\r\n                    ]\r\n                };\r\n\r\n                /*END Incident*/\r\n\r\n                /*Problem*/\r\n                changeRules['Problem'] = new Array();\r\n                /*END Problem*/\r\n\r\n\r\n                return changeRules;\r\n            }\r\n            //bulk edit form funcs\r\n            var bulkEditFormIsValid = function (windowViewModel, modalEle) {\r\n                if (windowViewModel.irCategoryRequired\r\n                    && (_.isUndefined(windowViewModel.newResolutionId.Id)\r\n                        || windowViewModel.newResolutionId.Id.length <= 0)) {\r\n\r\n                    modalEle.find('#changeStatusErrorWin').html(localization.RequestCategoryRequiredError);\r\n                    return false;\r\n                } else if (windowViewModel.srNotesRequired && windowViewModel.resultNote.length <= 0) {\r\n                    modalEle.find('#changeStatusErrorWin').html(localization.ImplementationNotesRequiredError);\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            };\r\n\r\n            var postBulkEditChangesWithChildren = function (taskVm, windowVm, modalControl) {\r\n                var parentIds = _.pluck(taskVm.currentSelectionOfParents, 'BaseId'); \r\n                $.ajax({\r\n                    url: '/api/v3/workitem/GetChildWorkItems/',\r\n                    data: JSON.stringify(parentIds),\r\n                    dataType: 'json',\r\n                    contentType: 'application/json',\r\n                    type: \"POST\",\r\n                    success: function (childIds) {\r\n                        //determine if we set resolution category to same as parent\r\n                        if (resolveChildIncidentSettings.ChildIncidentResolutionCategorySameAsParent) {\r\n                            //parent and non-children wi base ids\r\n                            var itemIds = _.pluck(windowVm.selectedWorkItems, 'BaseId');\r\n                            //add in children\r\n                            _.each(childIds, function (childId) {\r\n                                itemIds.push(childId);\r\n                            });\r\n                            var uniqIds = _.uniq(itemIds);\r\n                            var postData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: uniqIds,\r\n                                EditedFields: getDrawerTaskEditedFields(windowVm)\r\n                            }\r\n\r\n                            postBulkEditChanges(postData, taskVm, modalControl);\r\n\r\n                        } else {\r\n                            //get child resolution cat\r\n                            var childResolutionCatId = resolveChildIncidentSettings.ChildIncidentResolutionCategory.Id;\r\n                            var childrenPostData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: childIds,\r\n                                EditedFields: getDrawerTaskChildEditedFields(windowVm, childResolutionCatId)\r\n                            }\r\n\r\n                            var wiSelectionPostData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: _.pluck(windowVm.selectedWorkItems, 'BaseId'),\r\n                                EditedFields: getDrawerTaskEditedFields(windowVm)\r\n                            }\r\n                            \r\n                            postBulkEditChanges(wiSelectionPostData, taskVm, modalControl, function (success) {\r\n                                if (success) {\r\n                                    postBulkEditChanges(childrenPostData, taskVm, modalControl);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n\r\n            };\r\n            var postBulkEditChanges = function (postData, taskVm, modalControl, postCallback) {\r\n                modalControl.close();\r\n                app.lib.mask.apply();\r\n                $.ajax({\r\n                    url: '/api/v3/workitem/BulkEditWorkItems/',\r\n                    data: JSON.stringify(postData),\r\n                    dataType: 'json',\r\n                    contentType: 'application/json',\r\n                    type: \"POST\",\r\n                    success: function () {\r\n                        if (!_.isUndefined(postCallback)) {\r\n                            postCallback(true);\r\n                        } else {\r\n                            onBulkEditSaveSuccess(taskVm);\r\n                        }\r\n                    },\r\n                    error: function () {\r\n                        if (!_.isUndefined(postCallback)) {\r\n                            postCallback(false);\r\n                        } else {\r\n                            onBulkEditSaveFailure();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            var onBulkEditSaveSuccess = function (taskVm) {\r\n                if (app.isMobile()) {\r\n                    var listControl = $(\"[data-control-id='\" + taskVm.targetControlId + \"']\").data('kendoListView');\r\n                    listControl.dataSource.query();\r\n                } else {\r\n                    //refresh the grid to get updated data.\r\n                    var targetGrid = $('#' + taskVm.targetControlId).data('kendoGrid');\r\n                    var targetGridState = app.gridUtils.savedState.getCurrentState(taskVm.targetControlId);\r\n                    app.lib.recheckGridState(targetGridState, targetGrid);\r\n                    targetGrid.dataSource.query(targetGridState);\r\n                }\r\n                app.lib.message.add(localizationHelper.localize('SaveSuccessMessage'), \"success\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var onBulkEditSaveFailure = function () {\r\n                app.lib.message.add(localizationHelper.localize('SaveErrorMessage'), \"danger\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            /* END functions */\r\n\r\n            /* initialization code*/\r\n            function initFormTask() {\r\n                var modalEle = buildAndRender.windowEle(changeStatusTemplate);\r\n                var formTaskViewModel = getFormTaskViewModel(modalEle);\r\n                var anchorTemplateProps = { Target: \"changeStatus\" };\r\n                buildAndRender.taskListItem(anchorTemplateProps, formTaskViewModel, anchorTemplate);\r\n            };\r\n\r\n            function initBulkTask() {\r\n                var modalView = buildAndRender.windowEle(changeStatusDrawerTemplate);\r\n                var drawerTaskViewModel = getDrawerTaskViewModel(modalView);\r\n                var anchorEleProps = { onClick: \"openModal\", titleKey: node.titleKey, toolTipMessage: localizationHelper.localize('MustSelectSameTypeStatus') };\r\n                buildAndRender.taskListItem(anchorEleProps, drawerTaskViewModel, drawerTaskTemplate);\r\n\r\n                /*subscribe to events*/\r\n                if (!app.isMobile()) {\r\n                    //called on grid row clicks\r\n                    app.events.subscribe(\"gridChange\", function(event, grid) {\r\n                        drawerTaskViewModel.onTargetControlChange(grid);\r\n                        drawerTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                    });\r\n\r\n                    //for initial grid load listen to this event so we can set persisted state information\r\n                    app.events.subscribe(\"gridBound\", function(event, grid) {\r\n                        drawerTaskViewModel.onTargetControlChange(grid);\r\n                        drawerTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                    });\r\n                } else {\r\n                    app.events.subscribe(\"mobileWiListSelectionChange\", function (event, listView) {\r\n                        if (!_.isUndefined(listView)) {\r\n                            drawerTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                            drawerTaskViewModel.targetControlId = listView.controlId;\r\n                        }\r\n                    });\r\n                    app.events.subscribe(\"mobileWiListInit\", function (event, listView) {\r\n                        if (!_.isUndefined(listView)) {\r\n                            drawerTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                            drawerTaskViewModel.targetControlId = listView.controlId;\r\n                        }\r\n                    });\r\n                }\r\n                /*END subscribe to events*/\r\n            };\r\n            /* END initialization code*/\r\n\r\n            //do it\r\n            if (vm.type == \"BulkEdit\") {\r\n                initBulkTask();\r\n            } else {\r\n                initFormTask();\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/amChangeStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/changeStatus/view.html','forms/fields/enum/controller','forms/fields/longstring/controller','forms/fields/boolean/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/changeStatus/view.html\");\r\n    var enumPicker = require(\"forms/fields/enum/controller\");\r\n    var txtArea = require(\"forms/fields/longstring/controller\");\r\n    var checkBox = require(\"forms/fields/boolean/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.ChangeHardwareAssetStatus;\r\n            var statusPropertyName;\r\n            if (node.Configs.type == \"HardwareAsset\") {\r\n                if (node.Configs.enumName == \"HardwareAssetStatus\") {\r\n                    \r\n                } else if (node.Configs.enumName == \"HardwareAssetType\") {\r\n                    title = localization.ChangeHardwareAssetType;\r\n                } \r\n            } else if (node.Configs.type == \"SoftwareAsset\") {\r\n                if (node.Configs.enumName == \"SoftwareAssetStatus\") {\r\n                    title = localization.ChangeSoftwareAssetStatus;\r\n                } else if (node.Configs.enumName == \"SoftwareAssetType\") {\r\n                    title = localization.ChangeSoftwareAssetType;\r\n                }\r\n            }\r\n\r\n            var tempStatus = { \"Id\": vm.viewModel[node.Configs.enumName].Id, \"Name\": vm.viewModel[node.Configs.enumName].Name };\r\n            \r\n\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        enumId: node.Configs.statusEnumId,\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            vm.viewModel.set(node.Configs.enumName, tempStatus);\r\n                            win.close();\r\n                        },\r\n                       \r\n                    });\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    //create status enumPicker\r\n                    var statusProperties = {\r\n                        PropertyName: node.Configs.enumName,\r\n                        PropertyDisplayName: 'Status',\r\n                        EnumId: _vmWindow.enumId\r\n                    };\r\n                    buildEnumPicker(cont.find('#statusPicker'), statusProperties, vm.viewModel);\r\n\r\n                    //var statusDropDown = cont.find('div[data-role=\"HardwareAssetStatus\"]').data().handler._dropdown;\r\n                    //var statusTreeView = cont.find('div[data-role=\"status\"]').data().handler._treeview;\r\n\r\n\r\n\r\n                    //bind status change\r\n                    //vm.viewModel.HardwareAssetStatus.bind(\"change\", function (e) {\r\n                    vm.viewModel[node.Configs.enumName].bind(\"change\", function (e) {\r\n                        switch (e.sender.Id) {\r\n                            \r\n                            default:\r\n                                //_vmWindow.set(\"showComment\", false);\r\n                                //_vmWindow.set(\"showResolution\", false);\r\n                                //_vmWindow.set(\"requireResolution\", false);\r\n                                break;\r\n                        }\r\n                        _vmWindow.set(\"okEnabled\", true);\r\n                    });\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPicker.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n          \r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/acknowledge/view.html',[],function () { return '<div id=\"AcknowledgeIncidentWindow\" class=\"hide task-window cireson-window defined-form\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"inline-spacing\">\\r\\n                <label><%= localization.AcknowledgementTime %> : <span data-bind=\"html:dateTimeNow\"></span></label>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"inline-spacing\">\\r\\n                <label><%= localization.AcknowledgementComment %></label>\\r\\n                <textarea data-bind=\"value: actionLogComment, events: {keyup:textCounter}\"\\r\\n                          data-value-update=\"keyup\"\\r\\n                          class=\"k-textbox\" rows=5></textarea>\\r\\n            </div>\\r\\n            <div class=\"inline-spacing\">\\r\\n                <span data-bind=\"html:charactersRemaining\"></span>\\r\\n                <span><%= localization.CharactersRemaining %></span>\\r\\n            </div>\\r\\n            <div class=\"inline-spacing checkbox checkbox-inline\">\\r\\n                <input id=\"IsPrivate\" type=\"checkbox\" data-bind=\"checked: isPrivate\" />\\r\\n                <label for=\"IsPrivate\" class=\"checkbox-label\"><%= localization.IsPrivate %></label>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button class=\"btn btn-primary\"\\r\\n                    data-role=\"button\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button class=\"btn btn-default\"\\r\\n                    data-role=\"button\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nacknowledge incident\r\n**/\r\n\r\ndefine('forms/tasks/acknowledge/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/acknowledge/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/acknowledge/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            \r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                acknowledge: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: localization.Acknowledge,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        dateTimeNow: kendo.toString(new Date(), \"g\"),\r\n                        dateTimeNowUTC: new Date().toISOString(),\r\n                        actionLogComment: \"\",\r\n                        isPrivate: false,\r\n                        charactersRemaining: \"4000\",\r\n                        textCounter: function () {\r\n                            var maximumLength = 4000;\r\n                            var val = this.actionLogComment.length;\r\n\r\n                            if (val > maximumLength) {\r\n                                this.actionLogComment.substring(0, maximumLength);\r\n                            } else {\r\n                                this.set(\"charactersRemaining\", maximumLength - val);\r\n                            }\r\n                        },\r\n                        okClick: function () {\r\n                            if (vm.viewModel.FirstResponseDate == null){\r\n                                vm.viewModel.FirstResponseDate = this.dateTimeNowUTC;\r\n                                var respondDateEle = $(\"input[name='FirstResponseDate']\");\r\n                                if (respondDateEle.attr('data-control') == 'datePicker') {\r\n                                    respondDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                } else if (respondDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                    respondDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                }\r\n                            }\r\n                            if (this.actionLogComment.length) {\r\n                                var newActionLog = {\r\n                                    EnteredBy: session.user.Name,\r\n                                    Title: localization.Analyst + \" \" + localization.Comment,\r\n                                    IsPrivate: this.isPrivate,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Description: this.actionLogComment,\r\n                                    DescriptionDisplay: this.actionLogComment,\r\n                                    Image: (this.isPrivate) ? app.config.iconPath + app.config.icons[\"privateComment\"] : app.config.iconPath + app.config.icons[\"comment\"],\r\n                                    ActionType: \"AnalystComment\"\r\n                                }\r\n                                if (!vm.viewModel.ActionLog) {\r\n                                    vm.viewModel.ActionLog = [];\r\n                                }\r\n                                var actionLogType = app.controls.getWorkItemLogType(pageForm.viewModel);\r\n                                if (actionLogType) {\r\n                                    pageForm.viewModel[actionLogType].push(newActionLog);\r\n                                }\r\n                            }\r\n\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        }\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"acknowledge\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nconvert To Parent\r\n**/\r\n\r\ndefine('forms/tasks/convertToParent/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //first add the anchor\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"convertToParent\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n           \r\n           //create view model \r\n            var viewModel = kendo.observable({\r\n                isParent: node.Configs.isParent,\r\n                confirmTitle: node.Configs.confirmTitle,\r\n                confirmMessage: node.Configs.confirmMessage,\r\n                convertToParent: function () {\r\n                    $.when(kendo.ui.ExtYesNoDialog.show({\r\n                        title: this.confirmTitle,\r\n                        message: this.confirmMessage\r\n                    })).done(function (response) {\r\n                        if (response.button === \"yes\") {\r\n                            vm.viewModel.IsParent = node.Configs.isParent;\r\n                            if (!vm.viewModel.IsParent) {\r\n                                if (vm.viewModel.ChildWorkItem != null) {\r\n                                    delete vm.viewModel.ChildWorkItem;\r\n                                }\r\n                            }\r\n                            vm.save(function (data) {\r\n                                app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                switch (pageForm.type) {\r\n                                    case \"ReleaseRecord\":\r\n                                        location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                        break;\r\n                                    default:\r\n                                        location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                        break;\r\n                                }\r\n                            }, saveFailure);\r\n                        } else {\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/linkToParent/view.html',[],function () { return '<div id=\"AssignParentWindow\" class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"margin-b20\">\\r\\n                <label><%= localization.SearchText %></label>\\r\\n                <span class=\"k-textbox k-space-right\">\\r\\n                    <input type=\"text\" data-bind=\"value: searchText\" />\\r\\n                    <a data-bind=\"click: searchClick\" href=\"javascript:void(0)\" class=\"\">\\r\\n                        <i class=\"fa fa-search\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n            </div>\\r\\n            <label><%= localization.SelectParent %></label>\\r\\n            <div data-role=\"grid\"\\r\\n                 data-bind=\"source: dataSource, events: { change: gridChange }\"\\r\\n                 data-selectable=\"true\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"true\"\\r\\n                 data-columns=\\'[\\r\\n                    { field: \"Id\", title: \" <%= localization.Id %>\", width: \"50px\", attributes: {\"class\": \"grid-highlight-column\"} },\\r\\n                    { field: \"Title\", title: \" <%= localization.Title %>\", width: \"300px\", attributes: {\"class\": \"grid-highlight-column\"} },\\r\\n                    { field: \"Status\", title: \" <%= localization.Status %>\", width: \"100px\" }\\r\\n                    ]\\'>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/header/relationships/view.html',[],function () { return '<div class=\"parent-header-link\" >\\r\\n    <label data-bind=\"text: view.controller.parentIncident\"></label> :\\r\\n    <a data-bind=\"attr: { href: view.controller.editHref}, text: view.controller.editLink\" target=\"_blank\"></a>\\r\\n    <span class=\"fa fa-trash-o fa-lg cursor-pointer\" data-bind=\"click: view.controller.unlinkParent\"></span>\\r\\n</div>';});\n\n","/**\r\nlink To Parent\r\n**/\r\n\r\ndefine('forms/tasks/linkToParent/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/linkToParent/view.html','text!forms/header/relationships/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/linkToParent/view.html\");\r\n    var headerLinkTpl = require(\"text!forms/header/relationships/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            \r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                linkToParent: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n                    var releaseRecordClassId = \"d02dc3b6-d709-46f8-cb72-452fa5e082b8\"; //classid for release record\r\n\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: (vm.viewModel.ClassId == releaseRecordClassId) ? localization.LinktoNewParentIncident : localization.LinkToNewParentRecord,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            _vmWindow.refreshDataSource();\r\n                            getChildIncidentSettings();\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        searchText: \"\",\r\n                        searchClick: function () {\r\n                            var val = this.get(\"searchText\");\r\n                            this.refreshDataSource();\r\n                            this.dataSource.filter({\r\n                                logic: \"or\",\r\n                                filters: [\r\n                                    {\r\n                                        field: \"Id\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Title\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Status.Name\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    }\r\n                                ]\r\n                            });\r\n                        },\r\n                        okEnabled: false, \r\n                        okClick: function () {\r\n                            if (!this.selectedRow)\r\n                                return;\r\n\r\n                            if (vm.viewModel.ParentWorkItem == null) {\r\n                                vm.viewModel.ParentWorkItem = {};\r\n                            }\r\n\r\n                            vm.viewModel.ParentWorkItem.BaseId = this.selectedRow.BaseId;\r\n                            vm.viewModel.ParentWorkItem.Id = this.selectedRow.Id;\r\n                            vm.viewModel.ParentWorkItem.Title = this.selectedRow.Title;\r\n\r\n                            //check if we need to change child's status\r\n                            if (!_.isUndefined(childIncidentSettings.ActiveChildIncidentLinkStatus.Id)) {\r\n                                vm.viewModel.set(\"Status\", { Id: childIncidentSettings.ActiveChildIncidentLinkStatus.Id, Name: childIncidentSettings.ActiveChildIncidentLinkStatus.Name });\r\n                            }\r\n\r\n                            vm.view.buildParentHeaderView(function (tpl) {\r\n                                parentView = new kendo.View(tpl, { wrapper: false, model: vm });\r\n                                $('#parent-header-space').html(parentView.render()).show();\r\n                            });\r\n\r\n                            this.dataSource.filter([]);\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            this.dataSource.filter([]);\r\n                            win.close();\r\n                        },\r\n                        dataSource: new kendo.data.DataSource({\r\n                            transport: {\r\n                                read: {\r\n                                    type: \"GET\",\r\n                                    dataType: \"json\",\r\n                                    url: \"/Search/GetParentWorkItems\",\r\n                                    data: { workItemType: vm.type },\r\n                                    cache: false\r\n                                }\r\n                            },\r\n                            schema: {\r\n                                model: {\r\n                                    fields: {\r\n                                        Id: { type: \"string\" },\r\n                                        Title: { type: \"string\" },\r\n                                        Status: { type: \"string\" },\r\n                                        BaseId: { type: \"string\" }\r\n                                    }\r\n                                }\r\n                            },\r\n                            pageSize: 5,\r\n                        }),\r\n                        selectedRow: null,\r\n                        gridChange: function (eventArgs) {\r\n                            this.set(\"okEnabled\", true);\r\n                            this.set(\"selectedRow\", eventArgs.sender.dataItem(eventArgs.sender.select()));\r\n                        },\r\n                        refreshDataSource: function () {\r\n                            this.dataSource.read();\r\n                        }\r\n                    });\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"linkToParent\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var childIncidentSettings;\r\n            var getChildIncidentSettings = function () {\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    childIncidentSettings = data;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/newStatus/view.html',[],function () { return '<div class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"col-group\">\\r\\n                <span data-bind=\"html: commentMessage\"></span>\\r\\n            </div>\\r\\n            <div class=\"col-group\">\\r\\n                <div class=\"editor-label\">\\r\\n                    <label><%= localization.Comment %></label>\\r\\n                </div>\\r\\n                <div class=\"editor-field\">\\r\\n                    <textarea data-bind=\"value: comment, events: {keyup:textCounter}\"\\r\\n                              data-value-update=\"keyup\"\\r\\n                              class=\"k-textbox\"\\r\\n                              rows=\"6\" />\\r\\n                    <div class=\"inline-spacing\">\\r\\n                        <span data-bind=\"html:charactersRemaining\"></span>\\r\\n                        <span><%= localization.CharactersRemaining %></span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nNew Status\r\n**/\r\n\r\ndefine('forms/tasks/newStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/newStatus/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/newStatus/view.html\");\r\n\r\n    var incidentResolved = \"2b8830b6-59f0-f574-9c2a-f4b4682f1681\";\r\n    var incidentActive = \"5e2d3932-ca6d-1515-7310-6f58584df73e\";\r\n    var IncidentClosed = \"bd0ae7c4-3315-2eb3-7933-82dfc482dbaf\";\r\n    var IncidentActivePending = \"b6679968-e84e-96fa-1fec-8cd4ab39c3de\";\r\n\r\n    var serviceRequestCancelled = \"674e87e4-a58e-eab0-9a05-b48881de784c\";\r\n    var serviceRequestCompleted = \"b026fdfd-89bd-490b-e1fd-a599c78d440f\";\r\n    var serviceRequestSubmitted = \"72b55e17-1c7d-b34c-53ae-f61f8732e425\";\r\n    var serviceRequestInProgress = \"59393f48-d85f-fa6d-2ebe-dcff395d7ed1\";\r\n    var serviceRequestOnHold = \"05306bf5-a6b9-b5ad-326b-ba4e9724bf37\";\r\n    var serviceRequestFailed = \"21dbfcb4-05f3-fcc0-a58e-a9c48cde3b0e\";\r\n    var serviceRequestClosed = \"c7b65747-f99e-c108-1e17-3c1062138fc4\";\r\n\r\n    var releaseRecordInProgress = \"1840bfdc-3589-88a5-cea9-67536fd95a3b\";\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //first add the anchor\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"setNewStatus\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n           \r\n            //all other bound changes to be triggered\r\n            if (!_.isUndefined(node.Configs.otherBoundChanges)) {\r\n                //var otherBoundChanges = $.parseJSON(node.Configs.otherBoundChanges);\r\n                var otherBoundChanges = node.Configs.otherBoundChanges;\r\n            } else {\r\n                var otherBoundChanges = {};\r\n            }\r\n\r\n            //create view model \r\n            var viewModel = kendo.observable({\r\n                setNewStatus: function () {\r\n                    //show comment for cancelled service request\r\n                    if (node.Configs.newStatusId === serviceRequestCancelled || node.Configs.newStatusId === releaseRecordInProgress) {\r\n                        addComment(view.element, node.Configs);\r\n                    } else {\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: node.Configs.confirmTitle,\r\n                            message: node.Configs.confirmMessage\r\n                        })).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n\r\n                                //set new status\r\n                                vm.viewModel.set(\"Status\", { Id: node.Configs.newStatusId, Name: node.Configs.newStatusName });\r\n\r\n                                //re-initiate resolution details on re-activate(active status) only\r\n                                if (vm.viewModel.Status.Id == app.constants.workItemStatuses.Incident.Active) {\r\n                                    vm.viewModel.set(\"ResolutionCategory\", { Name: null, Id: null });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", null);\r\n                                    vm.viewModel.set(\"ResolvedDate\", null);\r\n\r\n                                   \r\n                                    if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordActivated());\r\n                                    }\r\n                                }\r\n\r\n                                //make other changes\r\n                                $.each(otherBoundChanges, function (index, val) {\r\n                                    vm.viewModel.set(index, val);\r\n                                });\r\n\r\n                                //if IR or SR closed set closed date.\r\n                                if (node.Configs.newStatusId == app.constants.workItemStatuses.Incident.Closed || \r\n                                    node.Configs.newStatusId == app.constants.workItemStatuses.ServiceRequest.Closed) {\r\n                                    vm.viewModel.set(\"ClosedDate\", new Date().toISOString());\r\n\r\n                                    //set closed by user \r\n                                    switch (node.Configs.newStatusId) {\r\n                                        case app.constants.workItemStatuses.Incident.Closed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordClosed());\r\n                                            break;\r\n                                        case app.constants.workItemStatuses.ServiceRequest.Closed:\r\n                                            vm.viewModel.ClosedByUser = { BaseId: session.user.Id };\r\n                                            break;\r\n                                    }\r\n                                }\r\n\r\n                                //reactivating child incidents when a parent is reactivated\r\n                                if (vm.type === \"Incident\" && vm.viewModel.IsParent && vm.viewModel.Status.Id == incidentActive) {\r\n                                    processChildIncidentReactivation();\r\n                                } else {\r\n                                    save();\r\n                                }\r\n                            } else {\r\n                                //reset the viewModel\r\n                                vm.viewModel.set(\"Status\",{Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name});\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var save = function () {\r\n                //save/apply the current changes\r\n                vm.save(function (data) {\r\n                    app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                    switch (vm.type) {\r\n                        case \"ChangeRequest\":\r\n                            location.href = \"/ChangeRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"ServiceRequest\":\r\n                            location.href = \"/ServiceRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"Incident\":\r\n                            location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"ReleaseRecord\":\r\n                            location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"Problem\":\r\n                            location.href = \"/Problem/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        default:\r\n                            location.href = \"/WorkItems/MyItems/\";\r\n                            break;\r\n                    }\r\n                }, saveFailure);\r\n            }\r\n\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n\r\n            var reactivateChildandSave = function () {\r\n                $.each(vm.viewModel.ChildWorkItem, function (i, item) {\r\n                    item.set(\"Status\", {Name: childIncidentSettings.ChildIncidentReactivatedStatus.Name, Id: childIncidentSettings.ChildIncidentReactivatedStatus.Id});\r\n                    item.set(\"ResolutionCategory\", {Name: null,Id: null});\r\n                    item.set(\"ResolutionDescription\", null);\r\n                    item.set(\"ResolvedDate\", null);\r\n                });\r\n                save();\r\n            }\r\n\r\n            var processChildIncidentReactivation = function () {\r\n                var childIncidentSettings;\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    childIncidentSettings = $.parseJSON(data);\r\n\r\n                    if (childIncidentSettings.ReactivateLetAnalystDecide) { //let analyst decide setting\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: localization.ReactivateChildIncidentTitle,\r\n                            message: localization.ReactivateChildIncidentMessage\r\n                        })).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                reactivateChildandSave();\r\n                            } else {\r\n                                save();\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (childIncidentSettings.ReactivateChildIncident) { //automatic reactivate setting\r\n                        reactivateChildandSave();\r\n                    } else { // do nothing setting\r\n                        save();\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n            var addComment = function (cont, newStatusConfig) {\r\n                //var cont = view.element; //we have the element in memory so no need use a selector\r\n                win = cont.kendoCiresonWindow({\r\n                    title: localization.Comment,\r\n                    width: 500,\r\n                    height: 300,\r\n                    actions: []\r\n                }).data(\"kendoWindow\");\r\n                \r\n                //this view Model is bound to the window element\r\n                var _vmWindow = new kendo.observable({\r\n                    comment: \"\",\r\n                    okEnabled: false,\r\n                    charactersRemaining: \"4000\",\r\n                    textCounter: function () {\r\n                        var maximumLength = 4000;\r\n                        var val = this.comment.length;\r\n\r\n                        if (val > maximumLength) {\r\n                            this.comment.substring(0, maximumLength);\r\n                        } else {\r\n                            this.set(\"charactersRemaining\", maximumLength - val);\r\n                        }\r\n\r\n                        if (val > 0) {\r\n                            this.set(\"okEnabled\", true);\r\n                        } else {\r\n                            this.set(\"okEnabled\", false);\r\n                        }\r\n                    },\r\n                    okClick: function () {\r\n                        //set new status\r\n                        vm.viewModel.set(\"Status\",{Id: newStatusConfig.newStatusId, Name: newStatusConfig.newStatusName});\r\n\r\n                        //set comment\r\n                        var newComment = _.isNull(vm.viewModel.Notes) ? this.comment : vm.viewModel.Notes + \"\\r\\n\" + this.comment;\r\n                        vm.viewModel.set(\"Notes\", newComment);\r\n\r\n                        //save changes\r\n                        win.close();\r\n                        save();\r\n                    },\r\n                    cancelClick: function () {\r\n                        win.close();\r\n                    },\r\n                    commentMessage: !_.isUndefined(newStatusConfig.commentMessage) ? newStatusConfig.commentMessage : localization.CancelledStatusCommentMessage\r\n                });\r\n                //add control to the window\r\n                kendo.bind(cont, _vmWindow);\r\n\r\n                cont.removeClass('hide');\r\n                cont.show();\r\n\r\n                win.open();\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/sendEmail/mobile_view.html',[],function () { return '<div id=\"EmailNotificationWindow\" class=\"cireson-window defined-form task-window hide\">\\n    <div class=\"cireson-window--wrapper\">\\n        <div class=\"cireson-window--body\">\\n            <div class=\"col-md-6 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailTo %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <div class=\"k-autocomplete\">\\r\\n                        <select id=\"userPickerTo\"></select>\\r\\n                        <button id=\"toField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailCC %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <div class=\"k-autocomplete\">\\r\\n                        <select id=\"userPickerCc\"></select>\\r\\n                        <button id=\"ccField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"col-md-12 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.Subject %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <input data-bind=\"value: emailSubject\" class=\" k-textbox\" type=\"text\">\\n                </div>\\n            </div>\\n            \\n            <div class=\"col-md-12 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailTemplate %></label>\\n                </div>\\n                <div class=\"editor-field\" id=\"templateDiv\">\\n                    <input data-role=\"combobox\"\\n                           data-placeholder=\"<%= localization.ChooseOne %>\"\\n                           data-value-primitive=\"true\"\\n                           data-text-field=\"Name\"\\n                           data-value-field=\"Id\"\\n                           data-filter=\"contains\"\\n                           data-bind=\"value: emailTemplateValue, source: emailTemplateDataSource, events:{change:emailTemplateChange }\"/>\\n                </div>\\n            </div>\\n\\n            <div class=\"col-md-12 pad10\">\\r\\n                <div id=\"mobileStatusPicker\" />\\r\\n            </div>\\n            <div class=\"col-md-12 pad10\">\\r\\n                <div class=\"col-md-6 pad0\">\\r\\n                    <label><%= localization.Message %></label>\\r\\n                </div>\\r\\n                <div class=\"col-md-6 pad0\">\\r\\n                    <a href=\"#\" data-bind=\"events: { click: resizeEditor }\" role=\"button\" title=\"Expand Editor\" class=\"pull-right\"><i class=\"fa fa-expand\"></i></a>\\r\\n                </div>\\r\\n                <hr>\\r\\n                <div class=\"editor-field\">\\r\\n                    <textarea id=\"messageEditor\" class=\"form-editor hidden\" data-bind=\"value: emailHTMLMessage\" />\\r\\n                </div>\\r\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <div id=\"statusPicker\" />\\n                <div class=\"checkbox\">\\n                    <input id=\"IsAddToLog\" type=\"checkbox\" data-bind=\"checked: addToLog, enabled: enableAddToLog\" />\\r\\n                    <label for=\"IsAddToLog\" class=\"control-label \">\\n                        <%= localization.SendEmailAddToLog %>\\n                    </label>\\n                </div>\\n                <div class=\"checkbox col-md-12 margin-l30\" data-bind=\"visible: addToLog\">\\n                    <input id=\"setAsPrivate\" type=\"checkbox\" data-bind=\"checked: setAsPrivate\" />\\n                    <label for=\"setAsPrivate\" class=\"control-label col-md-10\">\\n                        <%= localization.SetAsPrivate %>\\n                        <i class=\"fa fa-info-circle info-icon text-primary\" data-toggle=\"tooltip\" title=\"<%= localization.SaveMessageAsPrivateTooltip %>\"></i>\\n                    </label>\\n                </div>\\n                <div data-bind=\"visible: showChangeStatus\" class=\"checkbox\">\\n                    <input id=\"SetFirstResponseDate\" type=\"checkbox\" data-bind=\"checked: setFirstResponseDate, enabled:enableFirstResponseDate\" />\\n                    <label for=\"SetFirstResponseDate\" class=\"control-label\"><%= localization.SetFirstResponseDate %></label>\\n                </div>\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <label><%= localization.SendEmailAttachment %></label>\\n                <div class=\"form-group\">\\r\\n                    <div class=\"drop-zone-element\">\\r\\n                        <div class=\"text-wrapper\">\\r\\n                            <span class=\"drag-image-text\">\\n                                <a class=\"browse-file\"><b><%= localization.Browse %></b></a>\\n                                <span data-bind=\"visible: filesCount > 0\"><span class=\"lowercase\"> <%= localization.Or %> </span><a data-bind=\"events: { click: viewWorkItemFiles }\"><b><%= localization.BrowseWorkItemFiles %></b></a></span>\\r\\n                            </span>\\r\\n                            <div style=\"display:none\"><input name=\"files\" id=\"email-attachment\" type=\"file\" /></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\n                <div>\\r\\n                    <div class=\"fileattachment-list\"></div>\\r\\n                    <div class=\"fileattachment-img-modal\"></div>\\r\\n                    <script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n                        <div class=\"thumbnail-file\">\\r\\n                            <div class=\"cursor-pointer thumbnail-img\">\\r\\n                                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                                # } else{ #\\r\\n                                <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                                # } #\\r\\n                            </div>\\r\\n                            <div class=\"thumbnail-caption\">\\r\\n                                <span>#: DisplayName #</span>\\r\\n                                <!--<div class=\"overlay transparent\">\\r\\n                                    <span class=\"pull-right\">\\r\\n                                        <a class=\"k-delete-button\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                    </span>\\r\\n                                </div>-->\\r\\n                                <div class=\"overlay\">\\r\\n                                    # if (DisplayName.match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                                            <i class=\"fa fa-eye\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                                            <i class=\"fa fa-external-link\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    # } #\\r\\n                                    # if (BaseId!=null) { #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                                            <i class=\"fa fa-download\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    # } #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </script>\\r\\n                </div>\\n                <!--<input data-bind=\"value: emailAttachment\" class=\"k-textbox\" type=\"text\" readonly=\"readonly\">\\n                <span data-bind=\"text: attachmentErrorMessage\" class=\"send-email-attachment-error\"></span>\\n                <div>\\n                    <input type=\"file\" name=\"files\" id=\"fileUploader\" />\\n                    <div class=\"k-widget k-upload\">\\n                        <input type=\"button\" value=\"<%= localization.Remove %>\" class=\"k-button\" />\\n                    </div>\\n                </div>-->\\n            </div>\\n        </div>\\n        <div class=\"window-buttons cireson-window--footer\">\\n            <button id=\"emailOk\" data-role=\"button\"\\n                    class=\"btn btn-primary\"\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\n                <%= localization.OK %>\\n            </button>\\n            <button data-role=\"button\"\\n                    class=\"btn btn-default\"\\n                    data-bind=\"events: { click: cancelClick }\">\\n                <%= localization.Cancel %>\\n            </button>\\n        </div>\\n    </div>\\n</div>';});\n\n","\ndefine('text!forms/tasks/sendEmail/view.html',[],function () { return '<div id=\"EmailNotificationWindow\" tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\">\\n    <div class=\"modal-dialog modal-lg\">\\n        <div class=\"modal-content\">\\n            <div class=\"modal-header\">\\n                 <h4 class=\"modal-title\"><%= localization.SendEmail %></h4>\\n            </div> \\n            <div class=\"modal-body\">\\n                <div class=\"row\">\\n                    <div class=\"col-md-6 pad10\">\\n                        <div class=\"editor-label\">\\n                            <label><%= localization.SendEmailTo %></label>\\n                        </div>\\n                        <div class=\"editor-field\">\\n                            <div class=\"k-autocomplete\">\\r\\n                                <select id=\"userPickerTo\"></select>\\r\\n                                <button id=\"toField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\n                            <label><%= localization.SendEmailCC %></label>\\n                        </div>\\n                        <div class=\"editor-field\">\\n                            <div class=\"k-autocomplete\">\\n                                <select id=\"userPickerCc\"></select>\\n                                <button id=\"ccField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\r\\n                            <label><%= localization.Subject %></label>\\r\\n                        </div>\\r\\n                        <div class=\"editor-field\">\\r\\n                            <input data-bind=\"value: emailSubject\" class=\"k-textbox\" type=\"text\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\r\\n                            <label><%= localization.SendEmailTemplate %></label>\\r\\n                        </div>\\r\\n                        <div class=\"editor-field\" id=\"templateDiv\">\\r\\n                            <input data-role=\"combobox\"\\r\\n                                   data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                                   data-value-primitive=\"true\"\\r\\n                                   data-text-field=\"Name\"\\r\\n                                   data-value-field=\"Id\"\\r\\n                                   data-filter=\"contains\"\\r\\n                                   data-bind=\"value: emailTemplateValue, source: emailTemplateDataSource, events:{change:emailTemplateChange }\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-12 pad10\">\\r\\n                        <div class=\"col-md-6 pad0\">\\r\\n                            <label><%= localization.Message %></label>\\r\\n                        </div>\\r\\n                        <div class=\"col-md-6 pad0\">\\r\\n                            <a href=\"#\" data-bind=\"events: { click: resizeEditor }\" role=\"button\" title=\"Expand Editor\" class=\"pull-right\"><i class=\"fa fa-expand\"></i></a>\\r\\n                        </div>\\r\\n                        <hr>\\r\\n                        <div class=\"editor-field\">\\r\\n                            <textarea id=\"messageEditor\" class=\"form-editor hidden\" data-bind=\"value: emailHTMLMessage\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div id=\"statusPicker\" />\\r\\n                        <div class=\"checkbox\">\\r\\n                            <input id=\"IsAddToLog\" type=\"checkbox\" data-bind=\"checked: addToLog, enabled: enableAddToLog\" />\\r\\n                            <label for=\"IsAddToLog\" class=\"control-label \">\\r\\n                                <%= localization.SendEmailAddToLog %>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\"checkbox col-md-12 margin-l30\" data-bind=\"visible: addToLog\">\\r\\n                            <input id=\"setAsPrivate\" type=\"checkbox\" data-bind=\"checked: setAsPrivate\" />\\r\\n                            <label for=\"setAsPrivate\" class=\"control-label col-md-10\">\\r\\n                                <%= localization.SetAsPrivate %>\\r\\n                                <i class=\"fa fa-info-circle info-icon text-primary\" data-toggle=\"tooltip\" title=\"<%= localization.SaveMessageAsPrivateTooltip %>\"></i>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div data-bind=\"visible: showChangeStatus\" class=\"checkbox \">\\r\\n                            <input id=\"SetFirstResponseDate\" type=\"checkbox\" data-bind=\"checked: setFirstResponseDate, enabled:enableFirstResponseDate\" />\\r\\n                            <label for=\"SetFirstResponseDate\" class=\"control-label\"><%= localization.SetFirstResponseDate %></label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <label><%= localization.SendEmailAttachment %></label>\\r\\n                        <div class=\"form-group\">\\r\\n                            <div class=\"drop-zone-element\">\\r\\n                                <div class=\"text-wrapper\">\\r\\n                                    <span class=\"drag-image-text\">\\r\\n                                        <img src=\"/Content/Images/Icons/FileUpload/upload_to_cloud.svg\" />\\r\\n                                        <b><%= localization.DragAndDrop %> </b> <%= localization.YourFilesOr %>\\r\\n                                        <a class=\"browse-file\"><b><%= localization.Browse %></b></a>\\r\\n                                        <span data-bind=\"visible: filesCount > 0\">\\r\\n                                            <span class=\"lowercase\">  <%= localization.Or %>  </span>\\r\\n                                            <a data-bind=\"events: { click: viewWorkItemFiles }\"><b><%= localization.BrowseWorkItemFiles %></b></a>\\r\\n                                        </span>\\r\\n                                    </span>\\r\\n                                    <div style=\"display:none\"><input name=\"files\" id=\"email-attachment\" type=\"file\" /></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <div class=\"fileattachment-list\"></div>\\r\\n                            <div class=\"fileattachment-img-modal\"></div>\\r\\n                        </div>\\r\\n                        <script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n                            <div class=\"thumbnail-file\">\\r\\n                                <div class=\"cursor-pointer thumbnail-img\">\\r\\n                                    # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                    <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                                    # } else{ #\\r\\n                                    <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                                    # } #\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\"thumbnail-caption\">\\r\\n                                    <span>#: DisplayName #</span>\\r\\n                                    <!--<div class=\"overlay transparent\">\\r\\n                            <span class=\"pull-right\">\\r\\n                                <a class=\"k-delete-button\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                            </span>\\r\\n                        </div>-->\\r\\n                                    <div class=\"overlay\">\\r\\n                                        # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                                                <i class=\"fa fa-eye\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                                                <i class=\"fa fa-external-link\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        # } #\\r\\n                                        # if (BaseId!=null) { #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                                                <i class=\"fa fa-download\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        # } #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </script>\\r\\n                    </div>\\r\\n                </div> \\n            </div>\\n\\n            <div class=\"modal-footer\">\\r\\n            <button id=\"emailOk\" data-role=\"button\"\\n                    class=\"btn btn-primary\"\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\n                <%= localization.OK %>\\n            </button>\\n            <button data-role=\"button\"\\n                    class=\"btn btn-default\"\\n                    data-bind=\"events: { click: cancelClick }\">\\n                <%= localization.Cancel %>\\n            </button>\\n        </div>\\n    </div>\\n</div>\\r\\n\\r\\n\\r\\n    \\r\\n</div>';});\n\n","\ndefine('text!forms/popups/userPickerPopup/view.html',[],function () { return '<div id=\"UserPickerPopupWindow\" class=\"cireson-window defined-form task-window\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-6\">\\r\\n                    <div class=\"form-group popup-search-box\">\\r\\n                        <input type=\"text\" data-value-update=\"keyup\" placeholder=\"<%= localization.SearchText %>\" data-bind=\"value: searchValue, events: { keypress: searchOnEnter }\" class=\"search-input\">\\r\\n                        <span data-bind=\"events:{click: search}\" class=\"search-icon\">\\r\\n                            <i class=\"fa fa-search\"></i>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div data-bind=\"visible: isDesktopView\">\\r\\n                <div data-control-grid=\"userPickerGrid\"></div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\"row\" data-bind=\"visible: isMobileView\">\\r\\n                <div class=\"col-md-4\">\\r\\n                    <div data-role=\"listview\"\\r\\n                         data-bind=\"source: userDataSource, events:{change: onListViewChanged}\"\\r\\n                         data-template=\"user-grid-mobile-template\"\\r\\n                         data-selectable=\"true\"\\r\\n                         class=\"user-listBox\"></div>\\r\\n                    <div data-role=\"pager\"\\r\\n                         data-bind=\"source: userDataSource\"\\r\\n                         data-numeric=\"false\"></div>\\r\\n                    <script type=\"text/x-kendo-template\" id=\"user-grid-mobile-template\">\\r\\n                        <div class=\"user-info\">\\r\\n                            <dl>\\r\\n                                <dt>#: FirstName # #: LastName #</dt>\\r\\n                                <dd>#: UserName # &middot; #: Title #</dd>\\r\\n                                <dd>#: Domain # &middot; #: Company #</dd>\\r\\n                            </dl>\\r\\n                        </div>\\r\\n\\r\\n                    </script>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons objectPicker-single-grid\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nuserPickerPopup\r\n**/\r\nvar __userPickerPopupSingleton;\r\n\r\ndefine('forms/popups/userPickerPopup/controller',['require','text!forms/popups/userPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/userPickerPopup/view.html\");\r\n    var singletonName = \"userPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (groupsOnly) {\r\n            // keep popup window as singleton\r\n            if (__userPickerPopupSingleton) {\r\n                return __userPickerPopupSingleton;\r\n            }\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            $(\"body\").append(ele);\r\n            __userPickerPopupSingleton = new UserPickerPopup(ele, groupsOnly);\r\n            \r\n            return __userPickerPopupSingleton;\r\n        }\r\n    }\r\n\r\n    /* -- UserPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback returns selected user object\r\n    */\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // CONTROL\r\n    var UserPickerPopup = function (targetEle, groupsOnly) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var gridHtml = targetEle.find(\"[data-control-grid]\");\r\n        var grid;\r\n        var gridUrl = groupsOnly\r\n            ? \"/User/GetUserSearchResults?groupsOnly=true\"\r\n            : \"/User/GetUserSearchResults\";\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"Name\";\r\n        var _idProp = \"Id\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                searchText: localization.SearchText,\r\n                selectUserText: groupsOnly ? localization.SelectGroup : localization.SelectUser,\r\n                searchValue: \"\",\r\n                //okText: localization.OK,\r\n                //cancelText: localization.Cancel,\r\n                search: onSearchClick,\r\n                searchOnEnter: function(e) {\r\n                    if (e.which == 13) {\r\n                        e.preventDefault();\r\n                        onSearchClick();\r\n                    }\r\n                },\r\n                save: onSaveClick,\r\n                cancel: onCancelClick,\r\n                userDataSource: new kendo.data.DataSource(),\r\n                onListViewChanged: function (e) {\r\n                    var index = e.sender.select().index();\r\n                    var dataItem = e.sender.dataSource.view()[index];\r\n                    this.set(\"selectedUser\", dataItem);\r\n                },\r\n                selectedUser: null,\r\n                isDesktopView: !app.isMobileDevice(),\r\n                isMobileView: app.isMobileDevice()\r\n\r\n        });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            createGrid();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n            self.vm = _vm;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n            \r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSearchClick = function () {\r\n            grid.search(_vm.searchValue);\r\n        }\r\n        var onSaveClick = function (e) {\r\n            var onMobile = app.isMobileDevice();\r\n            if (onMobile) {\r\n                if (!_.isNull(_vm.selectedUser)) {\r\n                    var userObj = _model.getGenericFromObj(_vm.selectedUser);\r\n                    $(self).trigger(\"save\", userObj);\r\n                    closePopup();\r\n                }\r\n            } else {\r\n                var selectedRow = grid.kendoGrid.select();\r\n                if (selectedRow) {\r\n                    var obj = _model.getGenericFromObj(grid.kendoGrid.dataItem(selectedRow));\r\n                    $(self).trigger(\"save\", obj);\r\n                    closePopup();\r\n                }\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n        var openPopup = function () {\r\n            //clear out search box value and search results before opening the window\r\n            self.vm.set(\"searchValue\", \"\");\r\n            grid.kendoDataSource.data([]);\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup(groupsOnly);\r\n        }        \r\n        var createGrid = function () {\r\n            grid = new Grid({\r\n                html: gridHtml,\r\n                url: gridUrl\r\n            });\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function (groupsOnly) {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n           \r\n            // ACTIONS\r\n\r\n            // METHODS\r\n            \r\n            var createKendoWindow = function() {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: groupsOnly ? localization.SelectGroup : localization.SelectUser,\r\n                    content: null,\r\n                    width: 680,\r\n                    height: 420,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Grid --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n        */\r\n        var Grid = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var html = settings.html;\r\n            var url = settings.url;\r\n            var height = 200;\r\n            var kendoGrid;\r\n            var kendoDataSource;\r\n            var searchValue;\r\n            // private params           \r\n           \r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoGrid();\r\n                kendoGrid.pager.element.hide();\r\n                bindEvents();\r\n                self.kendoGrid = kendoGrid;\r\n                self.kendoDataSource = kendoDataSource;\r\n                self.search = search;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                kendoGrid.bind(\"dataBound\", function (e) {\r\n                    kendoGrid.pager.element.show();\r\n                });\r\n                kendoGrid.element.on(\"dblclick\", \"tbody>tr\", onRowDblClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onRowDblClick = function () {\r\n                kendoGrid.select($(this));\r\n                onSaveClick();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var search = function(value){\r\n                searchValue = value;\r\n                kendoDataSource.read();\r\n                kendoDataSource.page(1);\r\n\r\n                _vm.set(\"userDataSource\", kendoDataSource);\r\n            }\r\n            var createKendoDataSource = function () {\r\n                kendoDataSource = new kendo.data.DataSource({\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": url,\r\n                            \"data\": function() {\r\n                                return {\r\n                                    userFilter: function() {\r\n                                        return searchValue;\r\n                                    },\r\n                                    filterByAnalyst: _vm.filterByAnalyst\r\n                                }\r\n                            },\r\n                            \"type\": \"GET\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": app.isMobileDevice ? 3 : 15,\r\n                    \"serverPaging\": true,\r\n                    \"serverSorting\": true,\r\n                    \"serverFiltering\": true,\r\n                    \"serverGrouping\": true,\r\n                    \"total\": 0,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                        \"model\": {\r\n                            \"fields\": {\r\n                                \"Id\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Name\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"PrincipalName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"UserName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Domain\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Company\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Title\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"FirstName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"LastName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"EmployeeId\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Analyst\": {\r\n                                    \"type\": \"number\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            var createKendoGrid = function () {\r\n                kendoGrid = html.kendoGrid({\r\n                    height: height,\r\n                    dataSource: kendoDataSource,\r\n                    selectable: \"Single,Row\",\r\n                    sortable: { mode: \"multiple\" },\r\n                    pageable: true,\r\n                    filterable: {\r\n                        extra: false,\r\n                        operators: {\r\n                            string: {\r\n                                startswith: localization.Startswith,\r\n                                contains: localization.Contains,\r\n                                eq: localization.Isequalto,\r\n                                neq: localization.Isnotequalto\r\n                            }\r\n                        }\r\n                    },\r\n                    autoBind: false,\r\n                    columns: [{\r\n                        \"title\": localization.id,\r\n                        \"hidden\": true,\r\n                        \"field\": \"Id\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.FirstName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"width\": \"110px\",\r\n                        \"field\": \"FirstName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.LastName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"width\": \"110px\",\r\n                        \"field\": \"LastName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Title,\r\n                        \"field\": \"Title\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.UserName,\r\n                        \"field\": \"UserName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Domain,\r\n                        \"field\": \"Domain\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Company,\r\n                        \"field\": \"Company\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }],\r\n                }).data(\"kendoGrid\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n        \r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/flyout/fileAttachmentsFlyout/mobile_view.html',[],function () { return '<div class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div>\\r\\n                <div class=\"fileattachment-list\"></div>\\r\\n                <div class=\"fileattachment-img-modal\"></div>\\r\\n            </div>\\r\\n\\r\\n            <script type=\"text/x-kendo-template\" id=\"filesTemplate\">\\r\\n                <div class=\"thumbnail-file\">\\r\\n                    <div class=\"cursor-pointer thumbnail-img\">\\r\\n                        # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                        <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                        # } else{ #\\r\\n                        <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                        # } #\\r\\n                    </div>\\r\\n                    <div class=\"thumbnail-caption\">\\r\\n                        <span>#: DisplayName #</span>\\r\\n                        <div class=\"overlay\">\\r\\n                            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"View Image\" action=\"view\">\\r\\n                                    <i class=\"fa fa-eye\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"Open in New Tab\" action=\"opennewtab\">\\r\\n                                    <i class=\"fa fa-external-link\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                            # } #\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"Download\" action=\"download\">\\r\\n                                    <i class=\"fa fa-download\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </script>\\r\\n            <script>\\r\\n                function selectFile(el, action) {\\r\\n                    //var listView = $(\".fileattachment-list\").data(\"kendoListView\");\\r\\n                    //var item = $(el).closest(\"[role=\\'option\\']\");\\r\\n                    //var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\\r\\n\\r\\n                    //if (action === \"download\") {\\r\\n                    //    var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\\r\\n                    //    location.href = downloadUrl + dataItem.BaseId;\\r\\n                    //} else if (action === \"opennewtab\") {\\r\\n                    //    var win = window.open(\\'about:blank\\');\\r\\n                    //    setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\\r\\n                    //        win.document.body.appendChild(win.document.createElement(\\'img\\')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\\r\\n                    //        win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\\r\\n                    //        win.focus();\\r\\n                    //    }, 0);\\r\\n\\r\\n\\r\\n                    //} else {\\r\\n                    //    var dialog = $(\\'.fileattachment-img-modal\\');\\r\\n                    //    dialog.kendoDialog({\\r\\n                    //        modal: true,\\r\\n                    //        title: dataItem.DisplayName,\\r\\n                    //        content: \"<div class=\\'file-img-container\\'><img src=\\\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\\\" onerror=\\\\\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\\\\\" alt=\\\\\"\" + dataItem.DisplayName + \"\\\\\" /></div>\",\\r\\n                    //        animation: {\\r\\n                    //            open: {\\r\\n                    //                effects: \"fade:in\"\\r\\n                    //            }\\r\\n                    //        }\\r\\n                    //    });\\r\\n                    //    $(\\'.k-window.k-widget\\').addClass(\\'acivity-popup-window\\');\\r\\n                    //    dialog.data(\"kendoDialog\").open();\\r\\n                    //}\\r\\n                }\\r\\n\\r\\n            </script>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }, visible: saveCancelBtn\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }, visible: saveCancelBtn\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel}, visible: closeBtn \">\\r\\n                <%= localization.Close %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/flyout/fileAttachmentsFlyout/view.html',[],function () { return '<div tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\">\\r\\n    <div class=\"modal-dialog\">\\r\\n        <div class=\"modal-content\">\\r\\n            <div class=\"modal-header\">\\r\\n                <h4 class=\"modal-title\"><%= localization.FileAttachments %></h4>\\r\\n            </div>\\r\\n            <div class=\"modal-body\">\\r\\n                <div>\\r\\n                    <div class=\"fileattachment-list\"></div>\\r\\n                    <div class=\"fileattachment-img-modal\"></div>\\r\\n                </div>\\r\\n\\r\\n                <script type=\"text/x-kendo-template\" id=\"filesTemplate\">\\r\\n                    <div class=\"thumbnail-file\">\\r\\n                        <div class=\"cursor-pointer thumbnail-img\">\\r\\n                            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                            <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                            # } else{ #\\r\\n                            <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" action=\"download\" onerror=\"    this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                            # } #\\r\\n                        </div>\\r\\n                        <div class=\"thumbnail-caption\">\\r\\n                            <span>#: DisplayName #</span>\\r\\n                            <div class=\"overlay\">\\r\\n                                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" view-image action=\"view\" title=\"View Image\">\\r\\n                                        <i class=\"fa fa-eye\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" title=\"Open in New Tab\" action=\"opennewtab\">\\r\\n                                        <i class=\"fa fa-external-link\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                # } #\\r\\n                                # if (BaseId!=null) { #\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" title=\"Download\" action=\"download\">\\r\\n                                        <i class=\"fa fa-download\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                # } #\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </script>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"modal-footer\">\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-primary\"\\r\\n                        data-bind=\"events: { click: save }, visible: saveCancelBtn\">\\r\\n                    <%= localization.OK %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancel }, visible: saveCancelBtn\">\\r\\n                    <%= localization.Cancel %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancel}, visible: closeBtn \">\\r\\n                    <%= localization.Close %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>';});\n\n","/**\r\nfileAttachmentsFlyout\r\n**/\r\n\r\nvar __fileAttachmentsPopupSingleton;\r\n\r\ndefine('forms/flyout/fileAttachmentsFlyout/controller',['require','text!forms/flyout/fileAttachmentsFlyout/mobile_view.html','text!forms/flyout/fileAttachmentsFlyout/view.html'],function (require) {\r\n    var tpl = app.isMobile() ? require(\"text!forms/flyout/fileAttachmentsFlyout/mobile_view.html\") : require(\"text!forms/flyout/fileAttachmentsFlyout/view.html\");\r\n    var singletonName = \"fileAttachmentsFlyout\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (vm, task) {\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            $(\"body\").append(ele);\r\n            __fileAttachmentsPopupSingleton = new FileAttachmentsPopup(vm, ele, task);\r\n\r\n            return __fileAttachmentsPopupSingleton;\r\n        }\r\n    }\r\n\r\n    // CONTROL\r\n    var FileAttachmentsPopup = function (vm, targetEle, task) {\r\n        var self = this;\r\n        var html = targetEle;\r\n\r\n        var _vmWindow, win;\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n\r\n            if (app.isMobile()) {\r\n                win = html.kendoCiresonWindow({\r\n                    title: localization.FileAttachments,\r\n                    width: 650,\r\n                    height: 740,\r\n                    actions: []\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            _vmWindow = kendo.observable({\r\n                save: function() {\r\n                    $(self).trigger(\"save\", { selectedFiles: _vmWindow.selectedFiles });\r\n                    _vmWindow.closeModal();\r\n                },\r\n                cancel: function() {\r\n                    $(self).trigger(\"cancel\");\r\n                    _vmWindow.closeModal();\r\n                },\r\n                isDesktopView: !app.isMobileDevice(),\r\n                isMobileView: app.isMobileDevice(),\r\n                selectedFiles: [],\r\n                onOpenFile: function(e) {\r\n                    var data = this.dataSource.view();\r\n\r\n                    _vmWindow.selectedFiles = $.map(this.select(),\r\n                        function(item) {\r\n                            return data[$(item).index()];\r\n                        });\r\n                },\r\n                saveCancelBtn: (task),\r\n                closeBtn: (!task),\r\n                openModal: function () {\r\n                    if (!app.isMobile())\r\n                        html.modal('show');\r\n                    else {\r\n                        html.removeClass('hide');\r\n                        html.show();\r\n                        win.open();\r\n                    }\r\n                },\r\n                closeModal: function() {\r\n                    if (app.isMobile())\r\n                        win.close();\r\n                    else\r\n                        html.modal('hide');\r\n                },\r\n                selectFile: function(el, isImage) {\r\n                    var listView = html.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                    var item = el.closest(\"[role='option']\");\r\n                    var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n\r\n                    if (isImage && task == \"sendEmail\") return;\r\n\r\n                    action = el.attr(\"action\");\r\n                    if (action === \"download\") {\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        location.href = downloadUrl + dataItem.BaseId;\r\n                    } else if (action === \"opennewtab\") {\r\n                        var win = window.open('about:blank');\r\n                        setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                            win.document.body.appendChild(win.document.createElement('img')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.focus();\r\n                        }, 0);\r\n                        \r\n                        \r\n                    } else {\r\n                        var dialog = $('.fileattachment-img-modal');\r\n\r\n                        if (dialog.length > 1) {\r\n                            for (var i = 1; i < dialog.length; i++) {\r\n                                if ($(dialog[i]).data(\"kendoDialog\"))\r\n                                    $(dialog[i]).data(\"kendoDialog\").destroy();\r\n                                dialog.eq(i).remove();\r\n                            }\r\n                        }\r\n\r\n                        if (dataItem) {\r\n\r\n                            var dialogs = $('.acivity-popup-window');\r\n                            if (dialogs.length > 1) {\r\n                                for (var i = 1; i < dialogs.length; i++) {\r\n                                    dialogs.eq(i).remove();\r\n                                }\r\n                            }\r\n\r\n                            dialog.kendoDialog({\r\n                                modal: true,\r\n                                title: dataItem.DisplayName,\r\n                                content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" +\r\n                                    dataItem.Content.data +\r\n                                    \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" +\r\n                                    dataItem.DisplayName +\r\n                                    \"\\\" /></div>\",\r\n                                animation: {\r\n                                    open: {\r\n                                        effects: \"fade:in\"\r\n                                    }\r\n                                }\r\n                            });\r\n                            $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                            dialog.data(\"kendoDialog\").open();\r\n\r\n                            //close preview window on overlay click\r\n                            $('.k-overlay').on(\"click\", function () {\r\n                                dialog.data(\"kendoDialog\").close();\r\n                            });\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            });\r\n            kendo.bind(html, _vmWindow);\r\n\r\n            if (!app.isMobile()) {\r\n\r\n                html.on('shown.bs.modal',\r\n                    function() {\r\n                        //reposition modal backdrop\r\n                        $('.modal-backdrop').each(function(i, obj) {\r\n                            html.before(obj);\r\n                        });\r\n\r\n                        //remove modal focus so tools with popup would work\r\n                        $(document).off('focusin.modal');\r\n                    });\r\n\r\n                html.on('hidden.bs.modal',\r\n                    function() {\r\n                        $('.modal-backdrop').remove();\r\n                    });\r\n\r\n            }\r\n\r\n            self.open = _vmWindow.openModal;\r\n            self.close = _vmWindow.closeModal;\r\n            self.vm = _vmWindow;\r\n\r\n            html.find(\".fileattachment-list\").kendoListView({\r\n                dataSource: vm.viewModel.FileAttachment,\r\n                template: kendo.template($(\"#filesTemplate\").html()),\r\n                selectable: (task) ? \"multiple\" : \"single\",\r\n                change: _vmWindow.onOpenFile,\r\n                dataBound: function () {\r\n                    //Remove view image icon if from send email.\r\n                    if (task == undefined && task != \"sendEmail\") {\r\n                        html.find(\"a[view-image]\").parent().hide();\r\n                    }\r\n\r\n                    html.find(\".custom-click\").on(\"click\", function () {\r\n                        _vmWindow.selectFile($(this), false);\r\n                    });\r\n\r\n                    if (!app.isMobile()) {\r\n                        html.find(\".thumbnail-img img\").on(\"click\", function () {\r\n                            _vmWindow.selectFile($(this), true);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        __construct();\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nsend email\r\n**/\r\n\r\n\r\ndefine('CustomSpace/Scripts/forms/tasks/sendEmail/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/sendEmail/mobile_view.html','text!forms/tasks/sendEmail/view.html','forms/popups/userPickerPopup/controller','forms/flyout/fileAttachmentsFlyout/controller','forms/fields/enum/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = app.isMobile() ?  require(\"text!forms/tasks/sendEmail/mobile_view.html\") : require(\"text!forms/tasks/sendEmail/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/userPickerPopup/controller\");\r\n    var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            var filter = {};\r\n            var recipientList = {\r\n                recipientToList: [],\r\n                recipientCCList: []\r\n            };\r\n\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            view.destroy();//there is some issue with the cloned element if we don't destroy the view\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                sendEmail: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n\r\n                    if (app.isMobile()) {\r\n                        win = cont.kendoCiresonWindow({\r\n                            title: localization.SendEmail,\r\n                            width: 650,\r\n                            height: 740,\r\n                            actions: [],\r\n                            activate: function () {\r\n                                getAffectedUserEmail(_vmWindow);\r\n                                setDefaultWIStatus(_vmWindow);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n                    }\r\n                    \r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        emailTo: \"\",\r\n                        emailCC: \"\",\r\n                        emailSubject: \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title,\r\n                        emailHTMLMessage: (session.emailBodyTemplate.length > 0) ? $('<div/>').html(session.emailBodyTemplate).text() : \"\",\r\n                        emailTextMessage:\"\",\r\n                        emailAttachment: \"\",\r\n                        emailTemplateDataSource: tempateDataSource,\r\n                        emailTemplateValue: \"\",\r\n                        attachmentErrorMessage: \"\",\r\n                        addToLog: (session.addToActionLogDefault === \"true\" || session.forceAddToActionLog === \"true\") ? true : false,\r\n                        enableAddToLog: (session.forceAddToActionLog === \"true\") ? false : true,\r\n                        okEnabled: true,\r\n                        setAsPrivate: (session.saveMessageAsPrivate === \"true\") ? true : false,\r\n                        okClick: function (e) {\r\n                            var recipientToEmail = _.without(recipientList[\"recipientToList\"], _.findWhere(recipientList[\"recipientToList\"], {\r\n                                Email: \"\"\r\n                            }));\r\n                            recipientToEmail = _.uniq(_.pluck(recipientToEmail, \"Email\"));\r\n                            _vmWindow.set(\"emailTo\", recipientToEmail.join(\";\"));\r\n\r\n                            var recipientCcEmail = _.without(recipientList[\"recipientCCList\"], _.findWhere(recipientList[\"recipientCCList\"], {\r\n                                Email: \"\"\r\n                            }));\r\n                            recipientCcEmail = _.uniq(_.pluck(recipientCcEmail, \"Email\"));\r\n                            _vmWindow.set(\"emailCC\", recipientCcEmail.join(\";\"));\r\n\r\n\r\n                            //validate email addresses first\r\n                            var arrEmail = _.union(recipientToEmail, recipientCcEmail);\r\n                            if (recipientToEmail.length <= 0) {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.InvalidEmailAddress,\r\n                                    message: localization.PleaseProvideEmailAddress\r\n                                });\r\n                                return;\r\n                            }\r\n                            else {\r\n                                var invalidEmailAdress = validateEmailAddress(arrEmail);\r\n\r\n                                if (invalidEmailAdress != null) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.InvalidEmailAddress,\r\n                                        message: localization.InvalidEmailAddressMessage.replace(\"{0}\", invalidEmailAdress)\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            //if we are adding to action log we require there to be message content\r\n                            if (this.addToLog) {\r\n                                var editor = cont.find(\"#messageEditor\").data(\"kendoEditor\");\r\n                                this.set(\"emailTextMessage\", editor.body.innerText || editor.body.textContent);\r\n\r\n                                var trimmedMessage = (this.emailTextMessage && _.isString(this.emailTextMessage)) ? this.emailTextMessage.trim() : \"\";\r\n\r\n                                if (trimmedMessage.length <= 0) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.MessageRequired,\r\n                                        message: localization.MessageRequiredWhenAddingLogEntry\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            //send email\r\n                            kendo.ui.progress(cont, true);\r\n                            sendEmail(this, cont);\r\n\r\n                        },\r\n                        cancelClick: function (e) {\r\n                            if (app.isMobile()) {\r\n                                win.close();\r\n                            } else {\r\n                                $.when(kendo.ui.ExtOkCancelDialog.show({\r\n                                    title: localization.Warning,\r\n                                    message: localization.UnsavedDataMessage,\r\n                                    icon: \"fa fa-exclamation\"\r\n                                })\r\n                                   ).done(function (response) {\r\n                                       if (response.button === \"ok\") {\r\n                                           if (vm.widget)\r\n                                               vm.widget.remoteManageRecepient = null;\r\n                                           shown = false;\r\n                                           cont.modal('hide');\r\n                                       }\r\n                                   });\r\n                            }\r\n                        },\r\n                        emailTemplateChange: function (e) {\r\n                            var filter = {\r\n                                field: \"Id\",\r\n                                operator: \"eq\",\r\n                                value: e.sender._old //_old stores the selected value's id\r\n                            };\r\n                            tempateDataSource.filter(filter);\r\n                        \r\n                            var dView = tempateDataSource.view();\r\n                            var subject = (dView.length > 0) ? \"[\" + vm.viewModel.Id + \"] \" + dView[0].Subject : \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title;\r\n                            var content = (dView.length > 0) ? dView[0].Content : \"\";\r\n                            \r\n                            content = cont.find(\"#messageEditor\").html(content).text();\r\n\r\n                            //change new line (\\n) to line break (<br>) on non-html template only\r\n                            if (!content.match(/<(\\w+)((?:\\s+\\w+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/)) {\r\n                                content = cont.find(\"#messageEditor\").html(content).text().replace(/\\r\\n|\\r|\\n/g, \"<br />\");\r\n                            }\r\n                            \r\n                            this.set(\"emailSubject\", subject);\r\n                            this.set(\"emailHTMLMessage\", content);\r\n\r\n                            tempateDataSource.filter({});\r\n                        },\r\n                        resizeEditor: function (e) {\r\n                            e.preventDefault();\r\n\r\n                            var $this = $(e.currentTarget);\r\n\r\n                            if ($this.children('i').hasClass('fa-expand')) {\r\n                                $this.children('i').removeClass('fa-expand');\r\n                                $this.children('i').addClass('fa-compress');\r\n                            }\r\n                            else if ($this.children('i').hasClass('fa-compress')) {\r\n                                $this.children('i').removeClass('fa-compress');\r\n                                $this.children('i').addClass('fa-expand');\r\n                            }\r\n                            $('#EmailNotificationWindow').find('table.k-editor').toggleClass('editor-expanded');\r\n                        },\r\n                        showChangeStatus: (vm.type === \"Incident\"),\r\n                        changeStatus: false,\r\n                        sendEmailAttachments: [],\r\n                        fromWorkItemAttachementsId: [],\r\n                        setFirstResponseDate: (_.isNull(vm.viewModel.FirstResponseDate)) ? true : false,\r\n                        enableFirstResponseDate: (_.isNull(vm.viewModel.FirstResponseDate)) ? true : false,\r\n                        openPopup: function (e) {\r\n                            var popupWindow = objectPickerPopup.getPopup();\r\n                            popupWindow.setSaveCallback(function (object) {\r\n                                var recipientType = (e.currentTarget.id === \"toField\") ? \"recipientToList\" : \"recipientCCList\";\r\n\r\n                                var picker = (e.currentTarget.id === \"toField\")\r\n                                    ? cont.find(\"#userPickerTo\").data(\"kendoMultiSelect\")\r\n                                    : cont.find(\"#userPickerCc\").data(\"kendoMultiSelect\");\r\n\r\n                                var userEmailObj = _.find(_vmWindow.users, function (item) {\r\n                                    return item.guid === object.id;\r\n                                });\r\n\r\n                                var selectedUser = !_.isUndefined(userEmailObj)\r\n                                    ? { Id: object.id, Name: object.name, Email: userEmailObj.email }\r\n                                    : { Id: object.id, Name: object.name, Email: \"\" };\r\n\r\n                                var isUserExist = picker.dataSource.data().find(function (element) {\r\n                                    return element.Id === selectedUser.Id;\r\n                                });\r\n\r\n                                if (!isUserExist) {\r\n                                    var key = (recipientType.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                                    filter[key] = selectedUser.Name;\r\n                                    picker.dataSource.add(selectedUser);\r\n                                }\r\n\r\n                                recipientList[recipientType].push(selectedUser);\r\n                                picker.value(_.pluck(recipientList[recipientType], \"Id\"));\r\n                            });\r\n                            popupWindow.vm.filterByAnalyst = false;\r\n                            popupWindow.open();\r\n                        },\r\n                        viewWorkItemFiles: function() {\r\n                            var flyoutWindow = attachmentPickerFlyout.getPopup(vm, \"sendEmail\");\r\n                            flyoutWindow.setSaveCallback(function(data) {\r\n                                var selectedFiles = data.selectedFiles || [];\r\n                                for (var n = 0; n < selectedFiles.length; n++) {\r\n                                    _vmWindow.sendEmailAttachments.push(selectedFiles[n]);\r\n                                }\r\n                            });\r\n                            flyoutWindow.open();\r\n                        },\r\n                        filesCount: vm.viewModel.FileAttachment.length || 0,\r\n                        users: [],\r\n                        Status: { Id: \"\", Name: \"\" },\r\n                        changeStatusSetting: {\r\n                            statusTypeId: \"\",\r\n                            defaultStatusId: \"\",\r\n                            rootStatusEnumId: \"\",\r\n                            enableChangeStatus: true\r\n                        }\r\n                    });\r\n                   \r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    if (!app.isMobile()) {\r\n                        cont.on('shown.bs.modal',\r\n                            function () {\r\n                                //prevent shown event from duplicate trigger\r\n                                $(this).off('shown.bs.modal');\r\n                                //prevent body from scrolling when flyout is open\r\n                                $(\"body\").addClass(\"modal-open\");\r\n                                //set to true when flyout is open\r\n                                shown = true;\r\n                                //reposition modal backdrop\r\n                                $('.modal-backdrop').each(function (i, obj) {\r\n                                    cont.before(obj);\r\n                                });\r\n                                //remove modal focus so tools with popup would work\r\n                                $(document).off('focusin.modal');\r\n\r\n                                $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n                                //set defaults\r\n                                if (vm.widget.remoteManageRecepient && vm.widget.remoteManageRecepient.BaseId != null)\r\n                                    getRemoteManageRecepient();\r\n                                else\r\n                                    getAffectedUserEmail(_vmWindow);\r\n\r\n                                getSendEmailChangeStatusSettings(_vmWindow);\r\n                                setDefaultWIStatus(_vmWindow);\r\n\r\n                                //build editor\r\n                                buildEditor(cont.find(\"#messageEditor\"), _vmWindow);\r\n\r\n                                //build uploader\r\n                                initializeUploader(cont, _vmWindow);\r\n\r\n                                //build userpicker\r\n                                initializeUserPicker(cont.find(\"#userPickerTo\"), _vmWindow, \"recipientToList\");\r\n                                initializeUserPicker(cont.find(\"#userPickerCc\"), _vmWindow, \"recipientCCList\");\r\n\r\n                                //build status picker\r\n                                initializeStatusPicker(cont.find(\"#statusPicker\"), _vmWindow);\r\n\r\n                                //apply change status rule if root enum is not specified\r\n                                if (_.isNull(_vmWindow.changeStatusSetting.rootStatusEnumId)) {\r\n                                    applyChangeStatus(cont, vm, _vmWindow);\r\n                                }\r\n\r\n                            });\r\n\r\n                        cont.on('hidden.bs.modal', function () {\r\n                            $(\"body\").removeClass(\"modal-open\");\r\n\r\n                            $('.modal-backdrop').remove();\r\n\r\n                            var toPicker = cont.find(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                            var ccPicker = cont.find(\"#userPickerCc\").data(\"kendoMultiSelect\");\r\n\r\n                            //clear userpicker values on modal close\r\n                            toPicker.value(\"\");\r\n                            ccPicker.value(\"\");\r\n\r\n                            //clear filters and recipients vars\r\n                            filter = {};\r\n                            recipientList = {\r\n                                recipientToList: [],\r\n                                recipientCCList: []\r\n                            };\r\n                        });\r\n\r\n                        cont.on('hide.bs.modal',\r\n                            function (e) {\r\n                                if (shown && $('#extOkCancelDialog').length <= 1) {\r\n                                    _vmWindow.cancelClick(e);\r\n                                    e.preventDefault();\r\n                                    e.stopImmediatePropagation();\r\n                                    return false;\r\n                                }\r\n                            });\r\n\r\n                        $.get(\r\n                            \"/api/V3/User/GetUserList\",\r\n                            {\r\n                                fetchAll: true\r\n                            },\r\n                            function (data) {                                \r\n                                var names = [],\r\n                                    items = [];\r\n                                for (var i = 0; i<data.length; (i = i + 10000)) {\r\n                                    var subData = data.slice(i, i + 10000);\r\n                                    items = $.map(subData, function(value, i) {\r\n                                        return { 'id': i, 'name': value.Name, 'guid': value.Id, 'email': value.Email };\r\n                                    });\r\n                                    names = names.concat(items);\r\n                                }\r\n\r\n                                //store user data to viewmodel\r\n                                _vmWindow.users = names;\r\n                                cont.modal('show');\r\n                        });                        \r\n                    } else {\r\n                        $.get(\"/api/V3/User/GetUserList\",\r\n                            {\r\n                                fetchAll: true\r\n                            },\r\n                            function(data) {\r\n                                var names = [],\r\n                                    items = [];\r\n                                for (var i = 0; i < data.length; (i = i + 10000)) {\r\n                                    var subData = data.slice(i, i + 10000);\r\n                                    items = $.map(subData, function(value, i) {\r\n                                        return { 'id': i, 'name': value.Name, 'guid': value.Id, 'email': value.Email };\r\n                                    });\r\n                                    names = names.concat(items);\r\n                                }\r\n\r\n                                //store user data to viewmodel\r\n                                _vmWindow.users = names;\r\n\r\n                                //build userpicker\r\n                                initializeUserPicker(cont.find(\"#userPickerTo\"), _vmWindow, \"recipientToList\");\r\n                                initializeUserPicker(cont.find(\"#userPickerCc\"), _vmWindow, \"recipientCCList\");\r\n\r\n                                //build uploader\r\n                                initializeUploader(cont, _vmWindow);\r\n\r\n                                //build status picker\r\n                                initializeStatusPicker(cont.find(\"#statusPicker\"), _vmWindow);\r\n\r\n                                //init editor\r\n                                buildEditor(cont.find(\"#messageEditor\"), _vmWindow);\r\n\r\n                                $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n                                cont.removeClass('hide');\r\n                                cont.show();\r\n\r\n                                win.open();\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"sendEmail\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var tempateDataSource = new kendo.data.DataSource({\r\n                transport: {\r\n                    read: \"/EmailNotification/GetNotificationTemplates\",\r\n                    dataType: \"json\"\r\n                },\r\n                schema: {\r\n                    model: {\r\n                        fields: {\r\n                            Id: { type: \"string\" },\r\n                            Name: { type: \"string\" }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            var addToCommentLog = function (commentMessage,  setAsPrivate) {\r\n                var newActionLog = {\r\n                    EnteredBy: session.user.Name,\r\n                    Title: localization.EMailSent,\r\n                    IsPrivate: setAsPrivate,\r\n                    EnteredDate: new Date().toISOString(),\r\n                    LastModified: new Date().toISOString(),\r\n                    Description: commentMessage,\r\n                    DescriptionDisplay: commentMessage,\r\n                    Image: app.config.iconPath + app.config.icons[\"E-Mail Sent\"], \r\n\t\t            ActionType: {\r\n\t\t                Id: \"15e86d4a-1b55-01be-C9fa-660a3cb3fc26\",\r\n\t\t                Name: \"Email Sent\"\r\n\t\t            }\r\n                    //ActionType: { Id: \"15E86D4A-1B55-01BE-C9FA-660A3CB3FC26\", Name: \"E-Mail Sent\" }\r\n                }\r\n                if (!vm.viewModel.ActionLog) {\r\n                    vm.viewModel.ActionLog = [];\r\n                }\r\n                \r\n                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                if (actionLogType) {\r\n                    vm.viewModel[actionLogType].push(newActionLog);\r\n                }\r\n            }\r\n\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n\r\n            var getAffectedUserEmail = function (_vmWindow) {\r\n                if (viewModel.RequestedWorkItem && viewModel.RequestedWorkItem.DisplayName != null) {\r\n                    filter['TO'] = vm.viewModel.RequestedWorkItem.DisplayName;\r\n                }\r\n                var affectedUserId = (vm.viewModel.RequestedWorkItem) ? vm.viewModel.RequestedWorkItem.BaseId : \"\";\r\n                $.ajax({\r\n                    url: \"/EmailNotification/GetffectedUserEmail\",\r\n                    type: \"GET\",\r\n                    data: { baseId: affectedUserId },\r\n                    success: function (data, textStatus, jqXHR) {\r\n                        if (!_.isUndefined(data) && data != \"\") {\r\n                            var affectedUser = { Id: vm.viewModel.RequestedWorkItem.BaseId, Name: vm.viewModel.RequestedWorkItem.DisplayName, Email: data };\r\n                            var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                            var isUserExist = picker.dataSource.data().find(function (element) {\r\n                                return element.Id === affectedUser.Id;\r\n                            });\r\n\r\n                            //add affected user to userpicker data source if id does not exist\r\n                            if (!isUserExist) {\r\n                                picker.dataSource.add(affectedUser);\r\n                            }\r\n\r\n                            //add affected user to recipient list\r\n                            recipientList[\"recipientToList\"].push(affectedUser);\r\n\r\n                            //set userpicker value to affected user\r\n                            picker.value(affectedUser.Id);\r\n                        }\r\n                    }\r\n                }); \r\n            }\r\n\r\n            var getRemoteManageRecepient = function () {\r\n                $(document).ready(function() {\r\n                    var recepient = { Id: vm.widget.remoteManageRecepient.BaseId, Name: vm.widget.remoteManageRecepient.DisplayName, Email: vm.widget.remoteManageRecepient.Email };\r\n                    filter['TO'] = recepient.DisplayName;\r\n                    var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                    var isUserExist = picker.dataSource.data().find(function (element) {\r\n                        return element.Id === recepient.Id;\r\n                    });\r\n\r\n                    //add affected user to userpicker data source if id does not exist\r\n                    if (!isUserExist) {\r\n                        picker.dataSource.add(recepient);\r\n                    }\r\n\r\n                    //add affected user to recipient list\r\n                    recipientList[\"recipientToList\"].push(recepient);\r\n\r\n                    //set userpicker value to affected user\r\n                    picker.value(recepient.Id);\r\n                });\r\n            }\r\n\r\n            var setDefaultWIStatus = function (_vmWindow) {\r\n                var enumId = _vmWindow.changeStatusSetting.defaultStatusId;\r\n\r\n                if (enumId == null) {\r\n                    _vmWindow.Status.set(\"Id\", vm.viewModel.Status.Id);\r\n                    _vmWindow.Status.set(\"Name\", vm.viewModel.Status.Name);\r\n                } else {\r\n                    $.ajax({\r\n                        url: \"/api/V3/Enum/GetEnumDisplayName\",\r\n                        type: \"GET\",\r\n                        data: { id: enumId },\r\n                        async: false,\r\n                        success: function (data, textStatus, jqXHR) {\r\n                            _vmWindow.Status.set(\"Id\", enumId);\r\n                            _vmWindow.Status.set(\"Name\", data);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            var validateEmailAddress = function (arrEmail) {\r\n                var invalidEmailAddress = null;\r\n                for (var i in arrEmail) {\r\n                    var email = arrEmail[i].trim();\r\n                    if (email == \"\") continue;\r\n                    if (app.validateEmail(email) == false) {\r\n                        invalidEmailAddress = email;\r\n                        break;\r\n                    }\r\n                }\r\n                return invalidEmailAddress;\r\n            }\r\n\r\n            var initializeUploader = function (cont, _vmWindow) {\r\n                _vmWindow.set(\"sendEmailAttachments\", []);\r\n                _vmWindow.set(\"filesCount\", 0);\r\n\r\n                var fileAction = function (el) {\r\n\r\n                    if (el.hasClass(\"opennewtab\")) {\r\n                        var win = window.open('about:blank');\r\n                        setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                            win.document.body.appendChild(win.document.createElement('img')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.focus();\r\n                        }, 0);\r\n\r\n                    }\r\n                    else {\r\n                        var dialog = $('.fileattachment-img-modal');\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        var listView = cont.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                        var item = el.closest(\"[role='option']\");\r\n                        var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n\r\n\r\n                        if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/) && !el.hasClass(\"download\")) {\r\n                            dialog.kendoDialog({\r\n                                modal: true,\r\n                                title: dataItem.DisplayName,\r\n                                content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" + dataItem.DisplayName + \"\\\" /></div>\",\r\n                                animation: {\r\n                                    open: {\r\n                                        effects: \"fade:in\"\r\n                                    }\r\n                                }\r\n                            });\r\n                            $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                            dialog.data(\"kendoDialog\").open();\r\n                        } else {\r\n                            if (dataItem.Content.data && !dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                                var blob = new Blob([dataItem.Content.data]);\r\n                                var url = window.URL.createObjectURL(blob);\r\n                                var fileName = dataItem.DisplayName;\r\n\r\n                                if (navigator.msSaveOrOpenBlob) {\r\n                                    navigator.msSaveOrOpenBlob(blob, fileName);\r\n                                    return;\r\n                                } else if (window.navigator.msSaveBlob) { // for IE browser\r\n                                    window.navigator.msSaveBlob(blob, fileName);\r\n                                    return;\r\n                                }\r\n\r\n                                var a = document.createElement(\"a\");\r\n                                document.body.appendChild(a);\r\n                                a.style = \"display: none\";\r\n\r\n                                a.href = url;\r\n                                a.download = fileName;\r\n                                a.click();\r\n                                window.URL.revokeObjectURL(url);\r\n                                document.body.removeChild(a);\r\n                            } else if (dataItem.BaseId) {\r\n                                if (dataItem.BaseId != null) {\r\n                                    location.href = downloadUrl + dataItem.BaseId;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                cont.find(\".fileattachment-list\").kendoListView({\r\n                    dataSource: _vmWindow.sendEmailAttachments,\r\n                    template: kendo.template(cont.find(\"#fileTemplate\").html()),\r\n                    selectable: \"single\",\r\n                    dataBound: function (e) {\r\n\r\n                        cont.find(\".custom-click\").on(\"click\", function () {\r\n                            fileAction($(this));\r\n                        });\r\n\r\n                        if (!app.isMobile()) {\r\n                            //Remove view image icon if not in mobile.\r\n                            cont.find(\"a[view-image]\").parent().hide();\r\n\r\n                            cont.find(\".thumbnail-img img\").on(\"click\", function () {\r\n                                fileAction($(this));\r\n                            });\r\n                        }\r\n                        \r\n                        /*var dialog = $('.fileattachment-img-modal');\r\n                        var index = this.select().index(),\r\n                        dataItem = this.dataSource.view()[index];\r\n\r\n                        if (dialog.length > 1) {\r\n                            for (var i = 1; i < dialog.length; i++) {\r\n                                if ($(dialog[i]).data(\"kendoDialog\"))\r\n                                    $(dialog[i]).data(\"kendoDialog\").destroy();\r\n                                dialog.eq(i).remove();\r\n                            }\r\n                        }\r\n\r\n                        if (dataItem) {\r\n\r\n                            var dialogs = $('.acivity-popup-window');\r\n                            if (dialogs.length > 1) {\r\n                                for (var i = 1; i < dialogs.length; i++) {\r\n                                    dialogs.eq(i).remove();\r\n                                }\r\n                            }\r\n\r\n                            if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                                dialog.kendoDialog({\r\n                                    modal: true,\r\n                                    title: dataItem.DisplayName,\r\n                                    content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" +\r\n                                        dataItem.Content.data +\r\n                                        \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" +\r\n                                        dataItem.DisplayName +\r\n                                        \"\\\" /></div>\",\r\n                                    animation: {\r\n                                        open: {\r\n                                            effects: \"fade:in\"\r\n                                        }\r\n                                    }\r\n                                });\r\n                                $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                                dialog.data(\"kendoDialog\").open();\r\n                            } else {\r\n                                if (dataItem.Content.data) {\r\n                                    var blob = new Blob([dataItem.Content.data]);\r\n                                    var url = window.URL.createObjectURL(blob);\r\n                                    var fileName = dataItem.DisplayName;\r\n\r\n                                    if (navigator.msSaveOrOpenBlob) {\r\n                                        navigator.msSaveOrOpenBlob(blob, fileName);\r\n                                        return;\r\n                                    } else if (window.navigator.msSaveBlob) { // for IE browser\r\n                                        window.navigator.msSaveBlob(blob, fileName);\r\n                                        return;\r\n                                    }\r\n\r\n                                    var a = document.createElement(\"a\");\r\n                                    document.body.appendChild(a);\r\n                                    a.style = \"display: none\";\r\n\r\n                                    a.href = url;\r\n                                    a.download = fileName;\r\n                                    a.click();\r\n                                    window.URL.revokeObjectURL(url);\r\n                                    document.body.removeChild(a);\r\n                                }else if (dataItem.BaseId) {\r\n                                    var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                                    location.href = downloadUrl + dataItem.BaseId;\r\n                                }\r\n                            }\r\n                        }\r\n                        */\r\n                    },\r\n                    remove: function (e) {\r\n                        //console.warn(_vmWindow)\r\n                    }\r\n                });\r\n\r\n\r\n               \r\n                var uploader = cont.find(\"#email-attachment\").kendoUpload({\r\n                    async: {\r\n                        saveUrl: \"/FileAttachment/UploadAttachment/\" + vm.viewModel.BaseId + \"?className=\" + vm.viewModel.ClassName + \"&count=\" + vm.viewModel.FileAttachment.length,\r\n                        autoUpload: true\r\n                    },\r\n                    success: function (e) {\r\n                        kendo.ui.progress(cont.find(\".fileattachment-list\"), true);\r\n                        var response = e.response;\r\n                        if (e.operation == \"upload\") {\r\n                            for (var i = 0; i < e.files.length; i++) {\r\n                                var file = e.files[i].rawFile;\r\n                                if (file) {\r\n                                    if (!_.isUndefined(response.FileAttachment)) {\r\n                                        _vmWindow.sendEmailAttachments.push(response.FileAttachment);\r\n                                        _vmWindow.set(\"attachmentErrorMessage\", \"\");\r\n                                        _vmWindow.set(\"okEnabled\", true);\r\n                                    } else if (!_.isUndefined(response.success) && response.success == false) {\r\n                                        _vmWindow.set(\"okEnabled\", false);\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.ErrorDescription,\r\n                                            message: response.message,\r\n                                            icon: \"fa fa-exclamation\"\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        kendo.ui.progress(cont.find(\".fileattachment-list\"), false);\r\n                    },\r\n                    error: function (e) {\r\n                        var err = $.parseJSON(e.XMLHttpRequest.responseText);\r\n                        $.map(e.files, function (file) {\r\n                            console.warn(\"Could not upload \" + file.name);\r\n                        });\r\n                    },\r\n                    showFileList: false,\r\n                    dropZone: \".drop-zone-element\"\r\n                }).data(\"kendoUpload\");\r\n              \r\n                cont.find(\".browse-file\").click(function (e) {\r\n                    $(\"#email-attachment\").trigger(\"click\");\r\n                });\r\n\r\n\r\n            }\r\n\r\n            var initializeUserPicker = function (targetEle, viewModel, targetProp) {\r\n                //skipped initialization if we already have one created\r\n                if (!_.isUndefined(targetEle.data(\"kendoMultiSelect\"))) { return; }\r\n\r\n                var targetKey = (targetEle[0].id.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                var userPicker = targetEle.kendoMultiSelect({\r\n                    placeholder: localization.Search,\r\n                    dataTextField: \"Name\",\r\n                    dataValueField: \"Id\",\r\n                    autoBind: false,\r\n                    filter: \"contains\",\r\n                    dataSource: new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/api/V3/User/GetUserListWithEmail\",\r\n                                data: {\r\n                                    filterByAnalyst: false,\r\n                                    maxNumberOfResults: 10,\r\n                                    userFilter: function () {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true //,\r\n                        // filter: [{ field: \"Email\", operator: \"neq\", value: \"\" }]\r\n                    }),\r\n                    filtering: function (e) {\r\n                        if (e.filter != undefined) {\r\n                            var key = (e.sender.element[0].id.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                            filter[key] = e.filter.value;\r\n                        }\r\n                    },\r\n                    open: function () {\r\n                        var filters = this.dataSource.filter();\r\n                        if (filters!=null) {\r\n                            //clear applied filters\r\n                            //Filter should be cleared to remove conflict with assigning the affected users.\r\n                            //this.dataSource.filter({});\r\n                        }\r\n                    },\r\n                    tagTemplate: \"<span title='#: data.Email #'>#: data.Name #;</span>\",\r\n                    select: function (e) {\r\n                        var currentList = recipientList[targetProp];\r\n                        currentList.push(e.dataItem);\r\n                        recipientList[targetProp] = currentList;\r\n                    },\r\n                    deselect: function (e) {\r\n                        var currentList = recipientList[targetProp];\r\n                        if (e.dataItem.Id) {\r\n                            currentList = _.filter(currentList,\r\n                                function(item) {\r\n                                    return item.Id !== e.dataItem.Id;\r\n                                });\r\n                        }\r\n                        recipientList[targetProp] = currentList;\r\n                    },\r\n                    clearButton: false\r\n                }).data(\"kendoMultiSelect\");\r\n              \r\n                userPicker.input.on(\"keydown\", function (e) {\r\n                    if (e.keyCode === 9) {\r\n                        //treat tab event as \"enter\"\r\n                        var e = jQuery.Event(\"keydown\");\r\n                        e.which = 13; // # Some key code value\r\n                        e.keyCode = 13;\r\n                        userPicker.input.trigger(e);\r\n                    }\r\n                });\r\n            }\r\n\r\n            var sendEmail = function (_vmWindow, cont) {\r\n                var bChangeStatus = _vmWindow.changeStatus;\r\n                var bAddActionLog = _vmWindow.addToLog;\r\n                var addToLogSkipped = false;\r\n                var bHasAttachment = (_vmWindow.sendEmailAttachments.length > 0);\r\n                var strAttachedFileNames = (_vmWindow.sendEmailAttachments.length > 0)\r\n                    ? _.pluck(_vmWindow.sendEmailAttachments, \"DisplayName\").join(',') : \"\"; //multiple filenames, comma delimited\r\n                var strMessage = encodeURIComponent(_vmWindow.emailHTMLMessage);\r\n                var strMessagePlain = _vmWindow.emailTextMessage;\r\n\r\n                var workItemFileIds = (_vmWindow.fromWorkItemAttachementsId.length > 0)\r\n                    ? _vmWindow.fromWorkItemAttachementsId.join(',') : \"\";\r\n\r\n\r\n                strMessage = (session.emailFooterTemplate.length > 0)\r\n                    ? strMessage + \"\\r\\n\" + encodeURIComponent($('<div/>').html(session.emailFooterTemplate).text())\r\n                    : strMessage;\r\n                \r\n                var emailData = {\r\n                    To: _vmWindow.emailTo,\r\n                    Cc: _vmWindow.emailCC,\r\n                    Subject: _vmWindow.emailSubject.replace(/</g, \"%3C\").replace(/>/g, \"%3E\"),\r\n                    Message: strMessage,\r\n                    AttachedFileNames: strAttachedFileNames,\r\n                    WorkItemId: vm.viewModel.BaseId,\r\n                    workItemFileIds: workItemFileIds\r\n                };\r\n                var sendEmailAttachments = _vmWindow.sendEmailAttachments;\r\n                var bSetFirstResponsDate = _vmWindow.setFirstResponseDate;\r\n                \r\n                $.ajax({\r\n                    url: \"/EmailNotification/SendEmailNotification\",\r\n                    type: \"POST\",\r\n                    data: emailData,\r\n                    success: function (data, textStatus, jqXHR) {\r\n                        var bSuccess = data.toLowerCase() == \"true\" ? true : false;\r\n                        kendo.ui.progress(cont, false);\r\n                        if (bSuccess) {\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.SendEmail,\r\n                                message: localization.SendEmailSuccessMessage\r\n                            })).done(function (response) {\r\n                                //change status if status in dropdown has value\r\n                                if (_vmWindow.Status != null && _vmWindow.Status.Id != \"\") {\r\n                                    vm.viewModel.Status.set(\"Id\", _vmWindow.Status.Id);\r\n                                    bChangeStatus = true;\r\n                                }\r\n\r\n                                if (bHasAttachment) {\r\n                                    //add file attachment details to vm after email is sent\r\n                                    if (!_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                                        _.each(sendEmailAttachments, function (item) {\r\n                                            vm.viewModel.FileAttachment.push(item);\r\n\r\n                                            var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                            if (actionLogType) {\r\n                                                vm.viewModel[actionLogType].unshift(new app.dataModels[actionLogType].fileAdded(item.DisplayName));\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (bAddActionLog) {\r\n                                    strMessagePlain = _.isUndefined(strMessagePlain) ? \"\" : strMessagePlain.substring(0, 4000);\r\n\r\n                                    if (strMessagePlain.length > 0) {\r\n                                        addToCommentLog(strMessagePlain.replace(/</g, '&lt;').replace(/>/g, '&gt;'), _vmWindow.setAsPrivate);\r\n                                    } else {\r\n                                        bAddActionLog = false;\r\n                                        addToLogSkipped = true;\r\n                                    }\r\n                                }\r\n\r\n                                if (bSetFirstResponsDate) {\r\n                                    vm.viewModel.set(\"FirstResponseDate\", new Date().toISOString());\r\n                                }\r\n\r\n                                //--end additional change checks/processing\r\n\r\n                                //save changes and show warnings, if any\r\n                                var handleSaveSuccess = function () {\r\n                                    vm.save(function () {\r\n                                        app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                        switch (vm.type) {\r\n                                        case \"ChangeRequest\":\r\n                                            location.href = \"/ChangeRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"ServiceRequest\":\r\n                                            location.href = \"/ServiceRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"Incident\":\r\n                                            location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"Problem\":\r\n                                            location.href = \"/Problem/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"ReleaseRecord\":\r\n                                            location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        default:\r\n                                            //my workitem view\r\n                                            location.href = \"/View/cca5abda-6803-4833-accd-d59a43e2d2cf/\";\r\n                                            break;\r\n                                        }\r\n                                    }, saveFailure);\r\n                                }\r\n                                if (addToLogSkipped) {\r\n                                    //note: addToLogSkipped dialog will only show if the empty message validation fails\r\n                                    $.when(kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.SkippedAddingLogEntryTitle,\r\n                                        message: localization.ErrorAddingLogEntryMessage,\r\n                                        icon: \"fa fa-warning\"\r\n                                    })).done(function() {\r\n                                        handleSaveSuccess();\r\n                                    });\r\n                                } else {\r\n                                    handleSaveSuccess();\r\n                                }\r\n                                //--end save changes and warnings\r\n                            });\r\n                        } else {\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.SendEmail,\r\n                                message: localization.SendEmailFailedMessage\r\n                            }));\r\n                            kendo.ui.progress(cont, false);\r\n                        }\r\n                    },\r\n                    error: function (jqXHR, textStatus, errorThrown) {\r\n                        console.log(jqXHR, textStatus, errorThrown)\r\n                    }\r\n                });\r\n            }\r\n\r\n            var buildEditor = function (targetEle, _vmWindow) {\r\n                var defaultTools = [\r\n                     \"bold\", \"italic\", \"underline\",\r\n                     \"formatting\", \"foreColor\", \"backColor\",\r\n                     \"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\",\r\n                     \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                     \"createLink\", \"unlink\", \"insertImage\",\r\n                     \"viewHtml\",\r\n                     \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                     { name: \"insertLineBreak\", shift: true },\r\n                     { name: \"insertParagraph\", shift: true }\r\n                ];\r\n                var mobileTools = [\r\n                    \"formatting\",\r\n                    \"createLink\", \"unlink\", \"insertImage\", \"viewHtml\",\r\n                    \"bold\", \"italic\", \"underline\",\r\n                    \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                    \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                    { name: \"insertLineBreak\", shift: true },\r\n                    { name: \"insertParagraph\", shift: true }\r\n                ];\r\n                var editor = targetEle.data(\"kendoEditor\");\r\n                if (!_.isUndefined(editor)) { return; }\r\n                editor = targetEle.kendoEditor({\r\n                    change: function (e) {\r\n                        var content = e.sender.body.innerText || e.sender.body.textContent;\r\n                        _vmWindow.set(\"emailTextMessage\", content);\r\n                    },\r\n                    tools: app.isMobileDevice() ? mobileTools : defaultTools,\r\n                    stylesheets: [\"/Content/Styles/cireson.mentions-in-keditor.min.css\"],\r\n                    encoded: true,\r\n                    paste: function (e) {\r\n                    },\r\n                    pasteCleanup: {\r\n                        custom: function (html) {\r\n\r\n                            try {\r\n                                if ($(html)[0].tagName === \"IMG\") {\r\n\r\n                                    var dataSRC = $(html).attr('src');\r\n                                    var blob;\r\n\r\n                                    if (dataSRC.match(/^data:image\\/(png|jpg);base64,/) === null) {\r\n                                        var img = new Image;\r\n\r\n                                        img.setAttribute('crossOrigin', 'anonymous');\r\n\r\n                                        img.src = dataSRC;\r\n\r\n                                        $(img).one(\"load\",\r\n                                            function () {\r\n                                                setTimeout(function () {\r\n                                                        dataSRC = getBase64Image(img);\r\n                                                        blob = dataURItoBlob(dataSRC);\r\n                                                        uploadPastedImage(blob, _vmWindow);\r\n                                                    },\r\n                                                    0);\r\n                                            }).each(function () {\r\n                                            if (this.complete) $(this).load();\r\n                                        });\r\n                                    } else {\r\n                                        blob = dataURItoBlob(dataSRC);\r\n                                        uploadPastedImage(blob, _vmWindow);\r\n                                    }\r\n                                }\r\n                            } catch (err) {\r\n                                //console.error(err);\r\n                            }\r\n\r\n                            return html;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                function uploadPastedImage(file, _vmWindow) {\r\n                    var d = new Date();\r\n                    var timestamp = d.getTime();\r\n\r\n                    var formData = new FormData();\r\n                    formData.append('files', file, \"screenshot_\" + timestamp + \".png\");\r\n\r\n                    $.ajax({\r\n                        url: \"/FileAttachment/UploadAttachment/\" +\r\n                            vm.viewModel.BaseId +\r\n                            \"?className=\" +\r\n                            vm.viewModel.ClassName +\r\n                            \"&count=\" +\r\n                            vm.viewModel.FileAttachment.length,\r\n                        data: formData,\r\n                        type: 'POST',\r\n                        async: true,\r\n                        contentType: false,\r\n                        processData: false,\r\n                        dataType: \"json\",\r\n                        success: function (response) {\r\n                            if (!_.isUndefined(response.FileAttachment)) {\r\n                                _vmWindow.sendEmailAttachments.push(response.FileAttachment);\r\n                                _vmWindow.set(\"attachmentErrorMessage\", \"\");\r\n                                _vmWindow.set(\"okEnabled\", true);\r\n                            } else {\r\n                                _vmWindow.set(\"attachmentErrorMessage\", response.message);\r\n                                _vmWindow.set(\"okEnabled\", false);\r\n                                _vmWindow.set(\"emailAttachment\", \"\");\r\n                            }\r\n                        },\r\n                        error: function(err) {\r\n                            console.warn(err);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                function getBase64Image(img) {\r\n                    // Create an empty canvas element\r\n                    var canvas = document.createElement(\"canvas\");\r\n                    canvas.width = img.width;\r\n                    canvas.height = img.height;\r\n                    // Copy the image contents to the canvas\r\n                    var ctx = canvas.getContext(\"2d\");\r\n                    ctx.drawImage(img, 0, 0);\r\n                    // Get the data-URL formatted image\r\n                    // Firefox supports PNG and JPEG. You could check img.src to\r\n                    // guess the original format, but be aware the using \"image/jpg\"\r\n                    // will re-encode the image.\r\n                    var dataURL = canvas.toDataURL(\"image/png\");\r\n                    return dataURL;\r\n                }\r\n\r\n                function dataURItoBlob(dataURI) {\r\n                    // convert base64 to raw binary data held in a string\r\n                    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n                    var byteString = atob(dataURI.split(',')[1]);\r\n\r\n                    // separate out the mime component\r\n                    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\r\n\r\n                    // write the bytes of the string to an ArrayBuffer\r\n                    var ab = new ArrayBuffer(byteString.length);\r\n\r\n                    // create a view into the buffer\r\n                    var ia = new Uint8Array(ab);\r\n\r\n                    // set the bytes of the buffer to the correct values\r\n                    for (var i = 0; i < byteString.length; i++) {\r\n                        ia[i] = byteString.charCodeAt(i);\r\n                    }\r\n\r\n                    // write the ArrayBuffer to a blob, and you're done\r\n                    var blob = new Blob([ab], { type: mimeString });\r\n                    return blob;\r\n\r\n                }\r\n\r\n\r\n                var at_config = {\r\n                    at: \"@\",\r\n                    data: _vmWindow.users,\r\n                    headerTpl: '<div class=\"atwho-header\">Search Users</div>',\r\n                    insertTpl: '${atwho-at}${name}',\r\n                    displayTpl: \"<li id='${guid}'> ${name} <br><span>${email}</span> </li>\",\r\n                    limit: 5,\r\n                    startWithSpace: false,\r\n                    editableAtwhoQueryAttrs: {}\r\n                }\r\n\r\n                var iframe = editor.prev()[0];\r\n                var innerDoc = iframe.contentDocument || iframe.contentWindow.document;\r\n\r\n                $inputor = $(innerDoc).find('body').atwho(at_config);\r\n                $inputor.caret('pos', 47);\r\n                $inputor.atwho('run');\r\n\r\n                $inputor.on(\"inserted.atwho\", function (event, $li) {\r\n                    var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                    var userId = $($li)[0].id;\r\n                    var user = _.filter(at_config.data,\r\n                        function (el) {\r\n                            return el.guid === userId;\r\n                        });\r\n\r\n                    if (!_.isUndefined(user[0]) && !_.isNull(user[0])) {\r\n                        var userData = { Id: user[0].guid, Name: user[0].name, Email: user[0].email }\r\n                        recipientList[\"recipientToList\"].push(userData);\r\n\r\n                        var isUserExist = picker.dataSource.data().find(function (element) {\r\n                            return element.Id === userData.Id;\r\n                        });\r\n\r\n                        //add at-mentioned user to userpicker data source if id does not exist\r\n                        if (!isUserExist) {\r\n                            picker.dataSource.add(userData);\r\n                        }\r\n                    }\r\n\r\n                    picker.value(_.pluck(recipientList[\"recipientToList\"], \"Id\"));\r\n                });\r\n\r\n                $(document).on(\"removed.atwho\", function (e) {\r\n                    var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                    if ($(iframe).is($(e.target.activeElement))) {\r\n                        var userId = e.removedAtWhoId;\r\n                        var newList = _.without(recipientList[\"recipientToList\"], _.findWhere(recipientList[\"recipientToList\"], {\r\n                            Id: userId\r\n                        }));\r\n                        recipientList[\"recipientToList\"] = newList;\r\n                        picker.value(_.pluck(recipientList[\"recipientToList\"], \"Id\"));\r\n                    }\r\n                });\r\n            }\r\n\r\n            var initializeStatusPicker = function (targetEle, viewModel) {\r\n                var filterIdParam = \"\";\r\n                var filterId = viewModel.changeStatusSetting.rootStatusEnumId;\r\n                if (filterId != null) {\r\n                    if (filterId.toLowerCase() == viewModel.Status.Id.toLowerCase()) {\r\n                        filterIdParam = filterId;\r\n                    } else {\r\n                        filterIdParam = filterId + \",\" + viewModel.Status.Id;\r\n                    }\r\n                }\r\n                var enumId = viewModel.changeStatusSetting.statusTypeId;\r\n\r\n                var statusProperties = {\r\n                    PropertyName: \"Status\",\r\n                    PropertyDisplayName: \"ChangeStatus\",\r\n                    EnumId: viewModel.changeStatusSetting.statusTypeId,\r\n                    FilterIds: filterIdParam,\r\n                    Disabled: !viewModel.changeStatusSetting.enableChangeStatus\r\n                };\r\n\r\n                buildEnumPicker(targetEle, statusProperties, viewModel);\r\n            };\r\n\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n           \r\n            var applyChangeStatus = function (cont, vm, _vmWindow) {\r\n                var selectedWiType = vm.type;\r\n                var currentStatusId = vm.viewModel.Status.Id;\r\n                var statusEnumId = _vmWindow.changeStatusSetting.statusTypeId;\r\n                var rootStatusEnumId = _vmWindow.changeStatusSetting.rootStatusEnumId;\r\n                var dropDownControl = cont.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                var treeControl = cont.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n\r\n                //determine allowed status changes based on current type and status\r\n                var changeRules = app.lib.getChangeStatusRules();\r\n                var changeRulesFilter = changeRules[selectedWiType][currentStatusId];\r\n\r\n                //since Incident can have custom enums we need to check here if no rules were set then its not resolved\r\n                if (selectedWiType == \"Incident\" && _.isUndefined(changeRulesFilter)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"neq\", value: app.constants.workItemStatuses.Incident.Closed };\r\n                }\r\n\r\n                if (!_.isNull(rootStatusEnumId)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"eq\", value: rootStatusEnumId };\r\n                }\r\n\r\n                //apply allowed status filtering\r\n                treeControl.dataSource.options.serverFiltering = false;\r\n                treeControl.dataSource.filter(changeRulesFilter);\r\n\r\n                //reassign dropdown datasource with filtered data so that users will not be able to access restricted status by typing\r\n                $.get(\"/api/V3/Enum/GetFlatList/\", { id: statusEnumId, itemFilter: \"\" }, function (data) {\r\n                    var comboDataSource = new kendo.data.DataSource();\r\n                    comboDataSource.data(data);\r\n                    comboDataSource.filter(changeRulesFilter);\r\n                    if (comboDataSource.view().length > 0) {\r\n                        dropDownControl.setDataSource(comboDataSource.view());\r\n                    }\r\n                });\r\n            };\r\n           \r\n            var getSendEmailChangeStatusSettings = function (viewModel) {\r\n                switch (vm.type) {\r\n                    case \"ServiceRequest\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ServiceRequest.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailServiceRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailServiceDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailServiceAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"ChangeRequest\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ChangeRequest.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailChangeRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailChangeDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailChangeAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"Problem\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.Problem.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailProblemRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailProblemDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailProblemAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"ReleaseRecord\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ReleaseRecord.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailReleaseRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailReleaseDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailReleaseAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"Incident\":\r\n                    default:\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.Incident.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailIncidentRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailIncidentDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailIncidentAllowAnalystToChangeStatus;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nCustom\r\n**/\r\n\r\ndefine('forms/tasks/custom/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            if (_.isNull(node.Label)) {\r\n                //if no label (achot no link, just call the function)\r\n                node.Configs.func(vm, vm.viewModel);\r\n\r\n            } else {\r\n                //first add the anchor\r\n                var link = _.template(anchor);\r\n\r\n                //make sure we have all the node set\r\n                var properties = {\r\n                    Target: \"customFunc\"\r\n                };\r\n\r\n                $.extend(true, properties, node);\r\n\r\n                //create view model \r\n                var viewModel = kendo.observable({\r\n                    //call custom defined function\r\n                    customFunc: function () {\r\n                        node.Configs.func(vm, vm.viewModel);\r\n                    }\r\n                });\r\n\r\n                var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n                callback(anchorElm.render());\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/spacer/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nSPACER\r\n**/\r\n\r\ndefine('forms/tasks/spacer/controller',['require','text!forms/tasks/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/tasks/spacer/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/associateItem/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    $(\"input[name='\" + node.Configs.relationshipKey + \"']\").parent().find(\".searchIcon\").click();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            \r\n\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/setDate/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"datePicker\"/>\\r\\n            <div id=\"disposalReference\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/fields/date/view.html',[],function () { return '<div class=\"form-group\"\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n    >\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input name=\"<%= PropertyName %>\"\\r\\n           data-control=\"datePicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-from=\"<%= FromFilter %>\"\\r\\n           data-control-to=\"<%= ToFilter %>\"\\r\\n           data-control-from-relative=\"<%= FromRelative %>\"\\r\\n           data-control-to-relative=\"<%= ToRelative %>\"\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n     />\\r\\n</div>';});\n\n","/**\r\nDate\r\n**/\r\n\r\ndefine('forms/fields/date/controller',['require','text!forms/fields/date/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/date/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                FromFilter: '',\r\n                ToFilter: '',\r\n                FromRelative: '',\r\n                ToRelative: '',\r\n                Disabled: node.disabled,\r\n                Required: node.Required\r\n            };\r\n\r\n            //set from filter\r\n            if (node.MinValue != undefined) {\r\n                if (node.MinValue.indexOf(\":\") != -1) {\r\n                    properties.FromRelative = node.MinValue;\r\n                } else if (typeof node.MinValue == \"string\") {\r\n                    properties.FromFilter = node.MinValue;\r\n                }\r\n            }\r\n\r\n            //set to filter\r\n            if (node.MaxValue != undefined) {\r\n                if (node.MaxValue.indexOf(\":\") != -1) {\r\n                    properties.ToRelative = node.MaxValue;\r\n                } else if (typeof node.MaxValue == \"string\") {\r\n                    properties.ToFilter = node.MaxValue;\r\n                }\r\n            }\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/string/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"value: <%= PropertyName %><% if ( LimitLength ){ %>, events : { blur: view.stringController.CheckLength }<% } %>\"\\r\\n\\r\\n\\r\\n    <% if ( LimitLength ){ %>\\r\\n    maxlength=\"<%= MaxLength %>\"\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n\\r\\n    />\\r\\n\\r\\n    <% if ( LimitLength ){ %>\\r\\n    <p class=\"help-block validation-summary-errors\" style=\"display: none;\"><%= localization.MaxLengthError.replace(\"{0}\", MaxLength) %></p>\\r\\n    <% } %>\\r\\n\\r\\n</div>';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/string/controller',['require','text!forms/fields/string/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/string/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.stringController = {\r\n                CheckLength: function CheckLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n\r\n            vm.view.buildStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength\r\n                };\r\n                $.extend(true, properties, node);\r\n                \r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/setDate/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/setDate/view.html','forms/fields/date/controller','forms/fields/string/controller','forms/fields/longstring/controller','forms/fields/boolean/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/setDate/view.html\");\r\n    var datePicker = require(\"forms/fields/date/controller\");\r\n    var stringArea = require(\"forms/fields/string/controller\");\r\n    var txtArea = require(\"forms/fields/longstring/controller\");\r\n    var checkBox = require(\"forms/fields/boolean/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = node.Configs.Title;//localization.ChangeStatusTask;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            var datePickerCtrl;\r\n            var checkboxCtrl;\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            switch(node.Configs.viewType){\r\n                                case \"hdDisposal\":\r\n                                    vm.viewModel.set(\"HardwareAssetStatus\", { Id: \"020822bd-7d3a-4c0f-1be4-325ef1aa52b4\", Name: localization.Disposed });\r\n                                    break;\r\n                                case \"hdREcieveDate\":\r\n                                case \"MasterContractRenewedOn\":\r\n                                    if (vm.viewModel.get(checkboxCtrl.attr(\"name\"))) {\r\n                                        datePickerCtrl.val(\"\").blur();\r\n\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            var cancelledDate = \"\";\r\n                            if (!_.isNull(originalDate)) {\r\n                                cancelledDate = kendo.toString(new Date(originalDate), \"g\");\r\n                            }\r\n                            $('[name=\"' + dateProperties.PropertyName + '\"]').val(cancelledDate).blur();\r\n                            if (node.Configs.viewType == \"hdDisposal\") {\r\n                                vm.viewModel.set(\"DisposalReference\", OriginalDisposalReference);\r\n                            } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                                vm.viewModel.recieveCheckbox = OriginalCheckBox;\r\n                            }\r\n                            else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                                vm.viewModel.masterContractStartingDateCheckbox = OriginalCheckBox;\r\n                            }\r\n\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    if (node.Configs.viewType == \"hdDisposal\") {\r\n                        dateLabel = localization.DisposalDate;\r\n                    } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                        dateLabel = localization.ReceiveDate;\r\n                    } else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                        dateLabel = localization.StartDate;\r\n                    }\r\n\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    //create status enumPicker\r\n                    \r\n                    var originalDate = vm.viewModel.get(node.Configs.propertyKey);\r\n                    var dateProperties = {\r\n                        PropertyName: node.Configs.propertyKey,\r\n                        PropertyDisplayName: dateLabel,\r\n                        vm: vm.viewModel,\r\n                        disabled:false\r\n                    };\r\n                    \r\n                    buildDatePicker(cont.find('#datePicker'), dateProperties, vm.viewModel);\r\n\r\n                    if (node.Configs.viewType == \"hdDisposal\") {\r\n                        var OriginalDisposalReference = vm.viewModel.get(\"DisposalReference\");\r\n                        var stringProperties = {\r\n                            PropertyName: \"DisposalReference\",\r\n                            PropertyDisplayName: localization.DisposalReference,\r\n                            vm: vm.viewModel\r\n                        };\r\n                        buildString(cont.find(\"#disposalReference\"), stringProperties, vm.viewModel);\r\n                    } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                        var OriginalCheckBox = vm.viewModel.recieveCheckbox;\r\n                        var properties = {\r\n                            PropertyName: \"recieveCheckbox\",\r\n                            PropertyDisplayName: localization.RemoveReceivedDate,\r\n                            Inline: true\r\n                        };\r\n                        buildCheckbox(cont.find(\"#disposalReference\"), properties, vm.viewModel);\r\n                    } else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                        var OriginalCheckBox = vm.viewModel.masterContractStartingDateCheckbox;\r\n                        var properties = {\r\n                            PropertyName: \"masterContractStartingDateCheckbox\",\r\n                            PropertyDisplayName: localization.RemoveMasterLeaseWarrantyStarts,\r\n                            Inline: true\r\n                        };\r\n                        buildCheckbox(cont.find(\"#disposalReference\"), properties, vm.viewModel);\r\n                    }\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var buildDatePicker = function (container, props, vmModel) {\r\n                if (_.isNull(vmModel[props.PropertyName]) || vmModel[props.PropertyName] == \"\") {\r\n                    vmModel.set(props.PropertyName, kendo.toString(new Date(), \"g\"));\r\n                } else {\r\n                    vmModel.set(props.PropertyName, kendo.toString(new Date(vmModel[props.PropertyName]), \"g\"));\r\n                }\r\n                \r\n                datePicker.build(vmModel, props, function (dateControl) {\r\n                    container.html(dateControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                    datePickerCtrl = container.find(\"input[name='\" + props.PropertyName + \"']\");\r\n\r\n                    //will make sure date will reflect back to the main control from the form\r\n                    datePickerCtrl.focus();\r\n                    datePickerCtrl.blur();\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildCheckbox = function (container, props, vmModel) {\r\n                checkBox.build(vmModel, props, function (checkboxControl) {\r\n                    container.html(checkboxControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                    checkboxCtrl = container.find(\"input[name='\" + props.PropertyName + \"']\");\r\n                    vm.viewModel.set(props.PropertyName,false);\r\n                    checkboxCtrl.click(function () {\r\n                        var dtm = datePickerCtrl.data(\"kendoDatePicker\");\r\n                        if (this.checked) {\r\n                            dtm.enable(false);\r\n                        } else {\r\n                            dtm.enable(true);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nupdate Asset Management\r\n**/\r\n\r\n\r\ndefine('forms/tasks/updateAssetManagement/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n            var onloadTaskTrigger = function () {\r\n                switch (node.Configs.type) {\r\n                    case \"WarrantyContract\":\r\n                    case \"SupportAndMaintenance\":\r\n                    case \"ContractLease\":\r\n                        CommonContract.UpdateStatus(vm.viewModel,true);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            onloadTaskTrigger();\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    switch (node.Configs.type) {\r\n                        case \"License\":\r\n                            pageForm.SetSeatsRemaining(pageForm.viewModel);\r\n                            break;\r\n                        case \"SoftwareAsset\":\r\n                            UpdateSoftwareAsset(vm.viewModel);\r\n                            break;\r\n                        case \"Consumables\":\r\n                            UpdateConsumable(vm.viewModel);\r\n                            break;\r\n                        default:\r\n                            CommonContract.SupersedesParent(vm.viewModel);\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            \r\n\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            var UpdateConsumable = function (vmModel) {\r\n                if (vmModel.CountAssignedConsumableUsers || vmModel.CountAssignedConsumableAssets) {\r\n                    var assignedCount = 0;\r\n                    if (!_.isNull(vmModel.Target_ConsumableHasAssignedUsers) && vmModel.CountAssignedConsumableUsers) {\r\n                        assignedCount += vmModel.Target_ConsumableHasAssignedUsers.length;\r\n                    }\r\n                    if (!_.isNull(vmModel.Target_ConsumableHasAssignedAssets) && vmModel.CountAssignedConsumableAssets) {\r\n                        assignedCount += vmModel.Target_ConsumableHasAssignedAssets.length;\r\n                    }\r\n                    vmModel.set(\"AssignedCount\", assignedCount);\r\n                }\r\n            }\r\n\r\n            var UpdateSoftwareAsset = function (vmModel) {\r\n\r\n                $.when(kendo.ui.ExtYesNoDialog.show({\r\n                    title: localization.CiresonAssetManagement,\r\n                    message: localization.SoftwareAssetUpdateConfirmationMsg\r\n                })).done(function (response) {\r\n                    if (response.button === \"yes\") {\r\n                        vmModel.save(function (isOk, postData) {\r\n                            if (isOk == true) {\r\n                                $.ajax({\r\n                                    type: 'POST',\r\n                                    dataType: 'json',\r\n                                    url: \"/AssetManagement/SoftwareAsset/UpdateSoftwareAsset/\",\r\n                                    data: \"formJson=\" + postData + \"&id=\" + vmModel.BaseId,\r\n                                    success: function (data, status, xhr) {\r\n                                        if (data.Success == true) {\r\n                                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                                title: localization.CiresonAssetManagement,\r\n                                                message: localization.SoftwareAssetUpdated\r\n                                            })).done(function (response) {\r\n                                                vmModel.set(\"isDirty\", false);\r\n                                                app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                                window.location.reload(true);\r\n                                            });;\r\n                                        } else {\r\n                                            kendo.ui.ExtAlertDialog.show({\r\n                                                title: localization.CiresonAssetManagement,\r\n                                                message: localization.ErrorOccured\r\n                                            });\r\n                                        }\r\n                                    },\r\n                                    error: function (xhr, ajaxOptions, thrownError) {\r\n                                        failure();\r\n                                        console && app.lib.log(localization.RequestFailed);\r\n                                        app.lib.log(thrownError);\r\n\r\n                                        var jsonRsp = xhr.responseText;\r\n                                        app.lib.log(jsonRsp);\r\n\r\n                                        var errorMsg = localization.RequestFailed;\r\n                                        if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                            errorMsg = jsonRsp.exception;\r\n                                        }\r\n\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.ErrorDescription,\r\n                                            message: errorMsg,\r\n                                            icon: \"fa fa-exclamation\"\r\n                                        });\r\n                                    },\r\n                                    processData: false,\r\n                                    async: false\r\n                                });\r\n\r\n                            \r\n                            }\r\n\r\n                        }, vmModel.saveFailure, true);\r\n                    }\r\n                });\r\n            }\r\n\r\n            \r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    return definition;\r\n\r\n});\r\n\r\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/updateSupersededHardware/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    $.when(kendo.ui.ExtYesNoDialog.show({\r\n                        title: localization.CiresonAssetManagement,\r\n                        message: localization.UpdateSupersedesConfirmation\r\n                    })).done(function (response) {\r\n                        if (response.button === \"yes\") {\r\n                            $.post(node.Configs.url, { baseId: node.Configs.baseId }, function (data) {\r\n                                if (data.success === true) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.UpdatingAssets,\r\n                                        message: localization.TotalNumberofAssetsUpdated + \": \" + data.count\r\n                                    });\r\n                                } else {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.ServerError,\r\n                                        message: data.error\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/copyLicenseAssignments/view.html',[],function () { return '<div id=\"CopyLicenseAssignmentsWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div id=\"windowContent\" class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <form>\\r\\n                <fieldset id=\"source\">\\r\\n                    <legend><%= localization.RelatedLicenseAssignmentSource %></legend>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input class=\"control-label\" type=\"radio\" id=\"Computers\" value=\"Computers\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Computers %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Users\" value=\"Users\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Users %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Both\" value=\"Both\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Both %>\\r\\n                    </label>\\r\\n                </fieldset>\\r\\n                <br />\\r\\n                <br />\\r\\n                <fieldset id=\"target\">\\r\\n                    <legend><%= localization.SelectedSoftwareAssetTargetList %></legend>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input class=\"control-label\" type=\"radio\" id=\"AuthorizedList\" value=\"AuthorizedList\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.AuthorizedList %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"AssignedList\" value=\"AssignedList\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.AssignedListNamedLicenses %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Both\" value=\"Both\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Both %>\\r\\n                    </label>\\r\\n                </fieldset>\\r\\n            </form>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\" />    \\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/copyLicenseAssignments/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/copyLicenseAssignments/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/copyLicenseAssignments/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: localization.CopyLicenseAssignments,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        okClick: function () {\r\n                            \r\n\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.CiresonAssetManagement,\r\n                                message: localization.StartCopyLicenseAsssignements\r\n                            })).done(function (response) {\r\n                                $.post(\"/AssetManagement/SoftwareAsset/CopyLicenseAssignments/\", cont.find(\"#windowContent form\").serialize() + \"&id=\" + vm.viewModel.BaseId, function (data) {\r\n                                    if (data.success == true) {\r\n                                        //console.log(data);\r\n                                        //source.selected\r\n\r\n                                        var bTransferUsers = false;\r\n                                        var bTransferComputers = false;\r\n                                        var bTranserToAuthorised = false;\r\n                                        \r\n                                        var target = targetVM.selected;\r\n                                        var source = sourceVM.selected;\r\n                                        var bTranserToAssigned = target==\"AssignedList\";\r\n\r\n                                        var computerList = data.ComputerList;\r\n                                        var userList = data.UserList;\r\n\r\n                                        if (target==\"AuthorizedList\") bTranserToAuthorised = true;\r\n                                        if (source==\"Users\") bTransferUsers = true;\r\n                                        if (source==\"Computers\") bTransferComputers = true;\r\n\r\n                                        if (source==\"Both\") {\r\n                                            bTransferUsers = true;\r\n                                            bTransferComputers = true;\r\n                                        }\r\n\r\n                                        if (target==\"Both\") {\r\n                                            bTranserToAssigned = true;\r\n                                            bTranserToAuthorised = true;\r\n                                        }\r\n\r\n\r\n                                        if (bTransferUsers && bTranserToAssigned) {\r\n                                            PerformTransfer(vm.viewModel, userList, \"Target_SoftwareAssetHasAssignedUsers\");\r\n                                        }\r\n\r\n                                        if (bTransferComputers && bTranserToAssigned) {\r\n                                            PerformTransfer(vm.viewModel, computerList, \"Target_SoftwareAssetHasAssignedComputers\");\r\n                                        }\r\n\r\n                                        if (bTransferUsers && bTranserToAuthorised) \r\n                                        {\r\n                                            PerformTransfer(vm.viewModel, userList, \"Target_SoftwareAssetHasAuthorisedUser\");\r\n                                        }\r\n\r\n                                        if (bTransferComputers && bTranserToAuthorised)\r\n                                        {\r\n                                            PerformTransfer(vm.viewModel, computerList, \"Target_SoftwareAssetHasAuthorisedComputer\");\r\n                                        }\r\n\r\n                                        \r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.CiresonAssetManagement,\r\n                                            message: localization.UpdateSoftwareAssetMsg\r\n                                        });\r\n                                    } else {\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.CiresonAssetManagement,\r\n                                            message: data.error\r\n                                        });\r\n                                    }\r\n                                });\r\n                            });\r\n                            \r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            \r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    var PerformTransfer = function (viewModel, itemList, targetProperty) {\r\n                        var target = viewModel[targetProperty];\r\n                        var isExist = false;\r\n                        for (var index in itemList) {\r\n                            isExist = false;\r\n                            for (var indexTarget in target) {\r\n                                if (target[indexTarget].BaseId == itemList[index].BaseId) {\r\n                                    isExist = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (isExist) continue;\r\n                            target.addItem(itemList[index]);\r\n                        }\r\n                    }\r\n\r\n                    var sourceVM = kendo.observable({\r\n                        selected: \"Computers\"\r\n                    });\r\n\r\n                    kendo.bind(cont.find(\"#source\"), sourceVM);\r\n\r\n                    var targetVM = kendo.observable({\r\n                        selected: \"AuthorizedList\"\r\n                    });\r\n\r\n                    kendo.bind(cont.find(\"#target\"), targetVM);\r\n                    \r\n                    //create status enumPicker\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!CustomSpace/customtasks.tmpl.html',[],function () { return '<div>\\r\\n<div id=\"commentHTML\" class=\"form-horiztontal\">\\r\\n<div>\\r\\n<div class=\"col-group\">\\r\\n<div class=\"inline-spacing\">\\r\\n<label>What do you want to search?</label>\\r\\n</div>\\r\\n<div class=\"inline-spacing\">\\r\\n<textarea data-bind=\"value: comment, events: {keyup:textCounter}\"\\r\\ndata-value-update=\"keyup\"\\r\\nclass=\"k-textbox\"\\r\\nrows=\"7\" ></textarea>\\r\\n<div class=\"inline-spacing\">\\r\\n<span data-bind=\"html:charactersRemaining\"></span>\\r\\n<span>characters remaining</span>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\"window-buttons\">\\r\\n<button data-role=\"button\"\\r\\nclass=\"btn btn-primary\"\\r\\ndata-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\nOK\\r\\n</button>\\r\\n<button data-role=\"button\"\\r\\nclass=\"btn btn-primary\"\\r\\ndata-bind=\"events: { click: cancelClick }\">\\r\\nCancel\\r\\n</button>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n</div>';});\n\n","/**\r\nCopy To New Workitem\r\n**/\r\n\r\ndefine('forms/tasks/copyToNewWI/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(anchor);\r\n            \r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"copyToNewWI\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = built(properties);\r\n\r\n            var viewModel = kendo.observable({\r\n                copyToNewWI: function () {\r\n                    var hiddenVm;\r\n                    var copy;\r\n                    copy = $(\"<form>\", { \"method\": \"post\", \"target\": \"_blank\" });\r\n                    hiddenVm = $(\"<input>\", { \"type\": \"hidden\", \"name\": \"vm\" });\r\n                    copy.append(hiddenVm);\r\n                    $(\"body\").append(copy);\r\n                    hiddenVm.val(JSON.stringify(vm.viewModel));\r\n                    if (vm.type == \"Incident\")\r\n                        copy.attr(\"action\", \"/Incident/New/\");\r\n                    if (vm.type == \"ServiceRequest\")\r\n                        copy.attr(\"action\", \"/ServiceRequest/New/\");\r\n                    copy.submit();\r\n                    copy.remove();\r\n                }\r\n            });\r\n\r\n            var view = new kendo.View(built(properties), { wrap: false, model: viewModel });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/increaseAvailableCount/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"increaseAvailableCount\"/>\\r\\n            <div id=\"commentAvailableCount\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nLONGSTRING\r\n**/\r\n\r\ndefine('forms/fields/longString/controller',['require','text!forms/fields/longstring/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/longstring/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.longStringController = {\r\n                CheckLength: function checkLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n            vm.view.buildLongStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength,\r\n                    Rows: 10,\r\n                    visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n                };\r\n                $.extend(true, properties, node);\r\n                //console.log(properties);\r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildLongStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\r\n\n","\ndefine('text!forms/fields/numeric/view.html',[],function () { return '<div data-cid=\"NumericControl\" data-cid-propname=\"<%= PropertyName %>\" class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"number\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"form-control form-control-picker input-sm\"\\r\\n           data-control=\"numericTextBox\"\\r\\n           data-bind=\"value: <%= PropertyName %>\"\\r\\n           data-control-decimals=\"<%= DecimalPlaces %>\"\\r\\n           data-control-min=\"<%= MinValue%>\"\\r\\n           data-control-max=\"<%= MaxValue %>\"\\r\\n           data-step=\"<%= StepIncrement %>\"\\r\\n           data-format=\"<%= Format%>\"\\r\\n\\r\\n            <% if ( Disabled ){ %>\\r\\n                disabled\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\r\nNUMERIC\r\n**/\r\n\r\ndefine('forms/fields/numeric/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                Required: node.Required,\r\n                DecimalPlaces: 2,\r\n                MinValue: 0,\r\n                MaxValue: 100,\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/increaseAvailableCount/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/increaseAvailableCount/view.html','forms/fields/longString/controller','forms/fields/numeric/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/increaseAvailableCount/view.html\");\r\n    var stringArea = require(\"forms/fields/longString/controller\");\r\n    var numericArea = require(\"forms/fields/numeric/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.EditConsumableAvailableCount;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            var tempLog;\r\n            \r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 380,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            tempLog = new kendo.data.ObservableObject({\r\n                                ClassTypeId: \"67ce5b07-835d-246d-478d-29cee397c66e\",\r\n                                Comment: \"\",\r\n                                Target_LogHasCreator: {\r\n                                    ClassTypeId: \"eca3c52a-f273-5cdc-f165-3eb95a2b26cf\",\r\n                                    BaseId: session.user.Id,\r\n                                },\r\n                                AllowCreatedDate: true,\r\n                                Name: app.lib.newGUID(),\r\n                                Type: {\r\n                                    Id: \"884650a1-632a-0532-b0d4-8c6b1d990752\",\r\n                                    Name: localization.TaskRun\r\n                                }\r\n                            });\r\n\r\n                            var countProperties = {\r\n                                PropertyName: \"zeroCount\",\r\n                                PropertyDisplayName: \"IncreaseConsumableAvailableCountBy\",\r\n                                DecimalPlaces: 0,\r\n                                Required: true,\r\n                                vm: zeroCount\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#increaseAvailableCount\"), countProperties, zeroCount);\r\n\r\n                            var commentProperties = {\r\n                                PropertyName: \"Comment\",\r\n                                PropertyDisplayName: \"Comment\",\r\n                                Required: true,\r\n                                vm: tempLog,\r\n                                Rows: 5\r\n                            };\r\n\r\n\r\n                            buildString(cont.find(\"#commentAvailableCount\"), commentProperties, tempLog);\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var currentCount = vm.viewModel.get(\"Count\");\r\n                    var zeroCount = new kendo.data.ObservableObject({ zeroCount: 0 });\r\n                    \r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            var addedcount = parseInt(zeroCount.get(\"zeroCount\"));\r\n                            if (addedcount == 0 || tempLog.get(\"Comment\") == \"\") {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.CiresonAssetManagement,\r\n                                    message: localization.RequiredFieldsErrorMessage\r\n                                });\r\n                            } else {\r\n                                var newCount = parseInt(currentCount) + addedcount;\r\n                                vm.viewModel.set(\"Count\", newCount);\r\n                                //tempLog.set(\"Title\",\"Increased Available Count by \" + currentCount + \" to \" + newCount);\r\n                                tempLog.set(\"Title\", localization.IncreasedAvailableCount.replace(\"{0}\", currentCount) + newCount);\r\n                                tempLog.set(\"CreatedDate\",new Date());\r\n                                vm.viewModel[\"Target_ConsumableHasLogs\"].unshift(tempLog);\r\n                                win.close();\r\n                            }\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    \r\n                    \r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n           \r\n            var buildNumeric = function (container, props, vmModel) {\r\n                numericArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/decreaseAvailableCount/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"decreaseCount\"/>\\r\\n            <div id=\"decreaseAvailableCount\"/>\\r\\n            <div id=\"commentAvailableCount\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/decreaseAvailableCount/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/decreaseAvailableCount/view.html','forms/fields/longString/controller','forms/fields/numeric/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/decreaseAvailableCount/view.html\");\r\n    var stringArea = require(\"forms/fields/longString/controller\");\r\n    var numericArea = require(\"forms/fields/numeric/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.EditConsumableAvailableCount;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var tempLog;\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            tempLog = new kendo.data.ObservableObject({\r\n                                ClassTypeId: \"67ce5b07-835d-246d-478d-29cee397c66e\",\r\n                                Comment: \"\",\r\n                                Target_LogHasCreator: {\r\n                                    ClassTypeId: \"eca3c52a-f273-5cdc-f165-3eb95a2b26cf\",\r\n                                    BaseId: session.user.Id,\r\n                                },\r\n                                AllowCreatedDate: true,\r\n                                Name: app.lib.newGUID(),\r\n                                Type: {\r\n                                    Id: \"884650a1-632a-0532-b0d4-8c6b1d990752\",\r\n                                    Name: localization.TaskRun\r\n                                }\r\n                            });\r\n                            var countProperties = {\r\n                                PropertyName: \"zeroCount\",\r\n                                PropertyDisplayName: \"DecreaseConsumableCountBy\",\r\n                                Required: true,\r\n                                DecimalPlaces: 0,\r\n                                MaxValue: currentCount\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#decreaseCount\"), countProperties, zeroCount);\r\n\r\n                            var countProperties = {\r\n                                PropertyName: \"AvailableCount\",\r\n                                PropertyDisplayName: \"AvailableCount\",\r\n                                DecimalPlaces: 0,\r\n                                Disabled: true,\r\n                                vm: { AvailableCount: currentCount }\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#decreaseAvailableCount\"), countProperties, countProperties.vm);\r\n\r\n                            var commentProperties = {\r\n                                PropertyName: \"Comment\",\r\n                                PropertyDisplayName: \"Comment\",\r\n                                Required: true,\r\n                                vm: tempLog,\r\n                                Rows: 5\r\n                            };\r\n\r\n                            buildString(cont.find(\"#commentAvailableCount\"), commentProperties, tempLog);\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var currentCount = vm.viewModel.get(\"Count\");\r\n                    var zeroCount = new kendo.data.ObservableObject({ zeroCount: 0 });\r\n                    \r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            var addedcount = parseInt(zeroCount.get(\"zeroCount\"));\r\n                            if (addedcount == 0 || tempLog.get(\"Comment\") == \"\") {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.CiresonAssetManagement,\r\n                                    message: localization.RequiredFieldsErrorMessage\r\n                                });\r\n                            } else {\r\n                                var newCount = parseInt(currentCount) - addedcount;\r\n                                vm.viewModel.set(\"Count\", newCount);\r\n                                tempLog.set(\"Title\", localization.DecreasedAvailableCountBy.replace(\"{0}\", currentCount) + newCount);\r\n                                tempLog.set(\"CreatedDate\", new Date());\r\n                                vm.viewModel[\"Target_ConsumableHasLogs\"].unshift(tempLog);\r\n                                win.close();\r\n                            }\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    \r\n                    \r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n           \r\n            var buildNumeric = function (container, props, vmModel) {\r\n                numericArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nPrint Page\r\n**/\r\n\r\ndefine('forms/tasks/print/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    \r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"print\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = built(properties);\r\n\r\n            var viewModel = kendo.observable({\r\n                print: function () {\r\n                    window.print();\r\n                }\r\n            });\r\n\r\n            var view = new kendo.View(built(properties), { wrap: false, model: viewModel });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nAdd Me to Watchlist\r\n**/\r\n\r\ndefine('forms/tasks/addMeToWatchList/controller',['require','text!forms/tasks/anchor/view.html','text!forms/popups/notificationPopup/view.html'],function (require) {\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var notificationTpl = require(\"text!forms/popups/notificationPopup/view.html\");\r\n\r\n    var definition = {\r\n        notificationTemplate: notificationTpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(notificationTpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var viewModel = kendo.observable({\r\n                addMeToWatchList: function (ele) {\r\n                    if (!_.isUndefined(node.Configs.isAddWatchlist)) {\r\n                        switch (node.Configs.isAddWatchlist) {\r\n                            case false:\r\n                                this.removeFromWatchList();\r\n                                node.Configs.isAddWatchlist = true;\r\n                                $(ele.currentTarget).html(localization.AddMeToWatchList);\r\n                                break;\r\n                            case true:\r\n                            default:\r\n                                this.addToWatchList();\r\n                                node.Configs.isAddWatchlist = false;\r\n                                $(ele.currentTarget).html(localization.RemoveMeFromWatchList);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                },\r\n                addToWatchList: function () {\r\n                    //set current user's baseid in case it is missing\r\n                    var currentUser = session.user;\r\n                    currentUser.BaseId = session.user.Id;\r\n\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n\r\n                    //if user is not yet on the watchlist, add it in\r\n                    var isAdded = !_.isUndefined(_.find(vm.viewModel.WatchList, function (user) { return (user.Id == session.user.Id || user.BaseId == session.user.Id); }));\r\n                    if (!isAdded) {\r\n                        if (_.isUndefined(vm.viewModel.WatchList)) {\r\n                            vm.viewModel.set(\"WatchList\", []);\r\n                        }\r\n                        vm.viewModel.WatchList.push(session.user);\r\n\r\n                    }\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.AddMeToWatchListNotificationMessage, \"{0} is added to the watchlist\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                },\r\n                removeFromWatchList: function () {\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n                    var index = -1;\r\n\r\n                    _.find(vm.viewModel.WatchList, function (user, i) {\r\n                        if (user.Id == session.user.Id || user.BaseId == session.user.Id) {\r\n                            index = i;\r\n                            return user;\r\n                        }\r\n                    });\r\n\r\n                    //remove current user from watchlist\r\n                    if (index !== -1) vm.viewModel.WatchList.splice(index, 1);\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.RemoveMeFromWatchListNotificationMessage, \"{0} is removed from the watchlist\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"addMeToWatchList\"\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","define('forms/taskBuilder',[\r\n    \"forms/tasks/anchor/controller\",\r\n    \"forms/tasks/analystByGroup/controller\",\r\n    \"forms/tasks/assignToMe/controller\",\r\n    \"forms/tasks/changeStatus/controller\",\r\n    \"forms/tasks/amChangeStatus/controller\",\r\n    \"forms/tasks/acknowledge/controller\",\r\n    \"forms/tasks/convertToParent/controller\",\r\n    \"forms/tasks/linkToParent/controller\",\r\n    \"forms/tasks/newStatus/controller\",\r\n    \"CustomSpace/Scripts/forms/tasks/sendEmail/controller\", // \"forms/tasks/sendEmail/controller\",\r\n    \"forms/tasks/custom/controller\",\r\n    \"forms/tasks/spacer/controller\",\r\n    \"forms/tasks/associateItem/controller\",\r\n    \"forms/tasks/setDate/controller\",\r\n    \"forms/tasks/updateAssetManagement/controller\",\r\n    \"forms/tasks/updateSupersededHardware/controller\",\r\n    \"forms/tasks/copyLicenseAssignments/controller\",\r\n    \"text!CustomSpace/customtasks.tmpl.html\",\r\n    \"forms/tasks/copyToNewWI/controller\",\r\n    \"forms/tasks/increaseAvailableCount/controller\",\r\n    \"forms/tasks/decreaseAvailableCount/controller\",\r\n    \"forms/tasks/print/controller\",\r\n    \"forms/tasks/addMeToWatchList/controller\"\r\n\r\n], function (\r\n    anchor,\r\n    analystByGroup,\r\n    assignToMe,\r\n    changeStatus,\r\n    amChangeStatus,\r\n    acknowledge,\r\n    convertToParent,\r\n    linkToParent,\r\n    newStatus,\r\n    sendEmail,\r\n    custom,\r\n    spacer,\r\n    associateItem,\r\n    setDate,\r\n    updateAssetManagement,\r\n    updateSupersededHardware,\r\n    copyLicenseAssignments,\r\n    customTmpl,\r\n    copyToNewWI,\r\n    increaseAvailableCount,\r\n    decreaseAvailableCount,\r\n    print,\r\n    addMeToWatchList\r\n        ) {\r\n\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            var ulElement = $('<ul/>');\r\n\r\n            if (vm.fromDrawerBuilder) {\r\n                //remap the list of tasks to match what form builder does\r\n                vm.taskTemplate = {\r\n                    tasks: vm.tasks\r\n                }\r\n                ulElement.addClass(\"drawer-task-menu dropdown-menu\");\r\n                ulElement.attr('role', 'menu');\r\n            } else {\r\n                ulElement.addClass(\"taskmenu\");\r\n            }\r\n            \r\n            var taskCallback = function (view) {\r\n                ulElement.append(view);\r\n            };\r\n\r\n            //set up each task\r\n            _.each(vm.taskTemplate.tasks, function (task) {\r\n                \r\n                if (_.isString(task.Access)) {\r\n                    //coming from drawerbuild task.Access needs to be evaluated here\r\n                    task.Access = eval(task.Access);\r\n                }\r\n                \r\n                if (task.Access) {\r\n                    //get template and check for existance\r\n                    eval(\"var _obj = \" + task.Task + \";\");\r\n                    if (!_obj) {\r\n                        throw Exception(task.Task + \" is not part of the templating system\");\r\n                        return false;\r\n                    }\r\n\r\n                    _obj.build(vm, task, function (view) {\r\n                        taskCallback(view);\r\n                    });\r\n                }\r\n            });\r\n\r\n            //send back <ul> with <li> of each task\r\n            callback(ulElement);\r\n\r\n            if (!vm.fromDrawerBuilder) {\r\n                //not drawer tasks so now add custom template html\r\n                var tmpl = $('<div/>').addClass(\"hide\");\r\n                tmpl.append(customTmpl);\r\n                //add the menu\r\n                callback(tmpl);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/header/sticky/view.html',[],function () { return '<div class=\"content-header__container\">\\r\\n    <div class=\"content-header\">\\r\\n        <div class=\"content-header__main\">\\r\\n            <div class=\"content-header__main__title\" data-bind=\"text: viewModel.Title\">\\r\\n            </div>\\r\\n            <div class=\"content-header__main__details\">\\r\\n                <div class=\"content-header__main__breadcrumbs-container\">\\r\\n                    <div class=\"content-header__main__breadcrumb content-header__main__breadcrumb--button\" data-bind=\"visible: view.controller.isParent\">\\r\\n                        <a class=\"content-header__main__breadcrumbs__link\" data-bind=\"attr: { href: view.controller.editHref}, text: viewModel.ParentWorkItem.Id\">\\r\\n                        </a>\\r\\n                        <a class=\"content-header__main__breadcrumbs__link content-header__main__breadcrumb--button__icon-link\" data-bind=\"click: view.controller.unlinkParent\">\\r\\n                            <i class=\"fa fa-unlink\"></i>\\r\\n                        </a>\\r\\n                    </div>\\r\\n                    <div class=\"content-header__main__breadcrumb\" data-bind=\"visible: view.controller.isParent\">\\r\\n                        <strong class=\"content-header__main__breadcrumbs__link\" data-bind=\"text: viewModel.Id\"></strong>\\r\\n                    </div>\\r\\n                    <strong class=\"content-header__main__breadcrumbs__link\" data-bind=\"visible: view.controller.isParent === false, text: viewModel.Id\"></strong>\\r\\n                </div>\\r\\n                <span class=\"status-pill status-pill--active\" data-bind=\"visible: view.statusVisible, text: viewModel.Status.Name\">\\r\\n                    Active\\r\\n                </span>\\r\\n                <div class=\"content-header__main__icon-stack\">\\r\\n                    <button id=\"headerAttachmentBtn\" class=\"btn k-button btn-icon-stack\" data-bind=\"click: view.viewAttachments\">\\r\\n                        <img src=\"../../../../Content/Images/Icons/RemoteManage/attach.svg\" alt=\"attach\" />\\r\\n                    </button>\\r\\n                    <button id=\"remoteManageBtn\" class=\"btn k-button btn-icon-stack\" data-bind=\"click: view.doClick, visible: view.showRemoteManageIcon\">\\r\\n                        <img src=\"../../../../Content/Images/Icons/RemoteManage/remote.svg\" alt=\"remote\" />\\r\\n                    </button>\\r\\n                    <button class=\"btn k-button btn-icon-stack  visible-xs visible-sm\" data-bind=\"click: view.toggleMore\">\\r\\n                        <span class=\"fa fa-ellipsis-v\"></span>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"content-header__collapser hidden-xs hidden-sm\">\\r\\n            <div class=\"first-header-slo-container\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\"content-header__collapser__dropdown\">\\r\\n                <div class=\"header-slo-container\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div id=\"content-header-backdrop\" class=\"content-header__flyout__overlay\">\\r\\n</div>\\r\\n<script id=\"header-slo-template\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"content-header__collapser__icon-container\">\\r\\n        <div class=\"header-slo-icon fa #: imageClass # content-header__collapser__icon\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"content-header__collapser__main\">\\r\\n        <div class=\"content-header__collapser__main__title header-slo-title\">#: Title #</div>\\r\\n        <div class=\"content-header__collapser__main__datetime header-slo-timer\"></div>\\r\\n    </div>\\r\\n    # if (index === \\'0\\') { #\\r\\n    <button class=\"content-header__collapser__caret-button fa fa-angle-up\" onclick=\"closeSLODropdown()\"></button>\\r\\n    # } #\\r\\n</script>\\r\\n<script id=\"first-header-slo-template\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"content-header__collapser__icon-container\">\\r\\n        <div class=\"header-slo-icon fa #: imageClass # content-header__collapser__icon\">\\r\\n        </div>\\r\\n        # if (count > 1) { #\\r\\n        <div class=\"content-header__collapser__icon-badge\"> #: count #\\r\\n        </div>\\r\\n        # } #\\r\\n    </div>\\r\\n    <div class=\"content-header__collapser__main\">\\r\\n        <div class=\"content-header__collapser__main__title header-slo-title\">#: Title #</div>\\r\\n        <div class=\"content-header__collapser__main__datetime header-slo-timer\"></div>\\r\\n    </div>\\r\\n    # if (count > 1) { #\\r\\n    <button class=\"content-header__collapser__caret-button fa fa-angle-down\" onclick=\"closeSLODropdown()\"></button>\\r\\n    # } #\\r\\n</script>\\r\\n<div id=\"openmore\" tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\" style=\"display: none\">\\r\\n    <div class=\"modal-dialog modal-sm\">\\r\\n        <div class=\"modal-content\">\\r\\n            <div class=\"content-header__collapser content-header__collapser--side\">\\r\\n                <div class=\"first-header-slo-container\">\\r\\n                </div>\\r\\n                <div class=\"content-header__collapser__dropdown\">\\r\\n                    <div class=\"header-slo-container\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/flyout/remoteManageWidget/view.html',[],function () { return '<div id=\"expanded_widget\" class=\"content-header__flyout\">\\r\\n    <h3 class=\"content-header__flyout__title\">\\r\\n        <img src=\"../../../../Content/Images/Icons/RemoteManage/remote_management.svg\" class=\"content-header__flyout__title__logo\" />\\r\\n        <span><%= localization.RemoteManagementText %></span>\\r\\n    </h3>\\r\\n    <div class=\"content-header__flyout__section\">\\r\\n        <div class=\"content-header__flyout__section__title\"><%= localization.Users %></div>\\r\\n        <div class=\"content-header__flyout__section__main\">\\r\\n        \\r\\n            <div class=\"dataUserContainer\"></div>\\r\\n            <div class=\"addUserContainer\"></div>\\r\\n\\r\\n            <div data-bind=\"attr: { class: widget.mainWidgetAttr }\">\\r\\n                <div class=\"support-tools__widget__selection\">\\r\\n                    <a class=\"support-tools__widget__select-type\" id=\"affectedUserAddLink\" data-bind=\"click: widget.addForm, value: widget.affectedUser.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/affected_user.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.AffectedText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" id=\"assignedUserAddLink\" data-bind=\"click: widget.addForm, value: widget.assignedUser.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/assigned_user.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.AssignedText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" id=\"primaryOwnerAddLink\" data-bind=\"click: widget.addForm, value: widget.primaryOwner.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/primary_user.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.PrimaryText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__label\">\\r\\n                    <div class=\"support-tools__widget__icon-container\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/add_user.svg\" class=\"support-tools__widget__icon\"/>\\r\\n                    </div>\\r\\n                    <div class=\"support-tools__widget__main support-tools__widget__input\">\\r\\n                        <div class=\"support-tools__widget__input__label\">\\r\\n                            <%= localization.AddaUserText  %>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"content-header__flyout__section\">\\r\\n        <div class=\"content-header__flyout__section__title\"><%= localization.DevicesText  %></div>\\r\\n        <div class=\"content-header__flyout__section__main\">\\r\\n\\r\\n            <div class=\"dataDeviceContainer\"></div>\\r\\n            <div class=\"addDeviceContainer\"></div>\\r\\n    \\r\\n            <div data-bind=\"attr: { class: widget.mainWidgetDeviceAttr }\">\\r\\n                <div class=\"support-tools__widget__selection\">\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.affectedDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/affected_device.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.AffectedText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.relatedDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/related_device.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.RelatedText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                    <!--<a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.primaryDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/primary_device.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            Primary\\r\\n                        </div>\\r\\n                    </a>-->\\r\\n                    <a class=\"support-tools__widget__select-type\" data-bind=\"click: widget.addForm, value: widget.userDevice.widgetType\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/user_device.svg\" class=\"support-tools__widget__select-type__logo\"/>\\r\\n                        <div class=\"support-tools__widget__select-type__caption\">\\r\\n                            <%= localization.UserDeviceText  %>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__label\">\\r\\n                    <div class=\"support-tools__widget__icon-container\">\\r\\n                        <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/add_device.svg\" class=\"support-tools__widget__icon\"/>\\r\\n                    </div>\\r\\n                    <div class=\"support-tools__widget__main support-tools__widget__input\" ng-show=\"assignedUser1 == null\">\\r\\n                        <div class=\"support-tools__widget__input__label\">\\r\\n                            <%= localization.AddaDeviceText  %>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<script id=\"multipleDataTemplate\" type=\"text/x-kendo-template\">\\r\\n    # for (var i = 0; i < devices.length; i++) { #\\r\\n    # var device = devices[i] #\\r\\n    <div class=\"support-tools__widget support-tools__widget--item-selected support-tools__widget--user-selected #:type#dataTemplate\" data-bind=\"click: widget.clickContainer, value: widget.#:type#[#:i#]\">\\r\\n        <div class=\"support-tools__widget__icon-container\">\\r\\n            <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/#:icon#\" class=\"support-tools__widget__icon\" />\\r\\n        </div>\\r\\n        <div class=\"support-tools__widget__main\">\\r\\n            <div class=\"support-tools__widget__selected-item\">\\r\\n                <div class=\"support-tools__widget__selected-item__title\" data-bind=\"text: widget.#:type#[#:i#].DisplayName\">\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__selected-item__details\">\\r\\n                    #: title #\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"support-tools__widget__action\" data-bind=\"click: widget.removeItem, value: widget.#:type#[#:i#]\">\\r\\n                <a class=\"support-tools__widget__action__link\">\\r\\n                    <div class=\"support-tools__widget__action-icon\">\\r\\n                    </div>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    # } #\\r\\n</script>\\r\\n\\r\\n<script id=\"dataTemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"support-tools__widget support-tools__widget--item-selected support-tools__widget--user-selected\" id=\"#:type#dataTemplate\" data-bind=\"click: widget.clickContainer, value: widget.#:type#\">\\r\\n        <div class=\"support-tools__widget__icon-container\">\\r\\n            <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/#:icon#\" class=\"support-tools__widget__icon\" />\\r\\n        </div>\\r\\n        <div class=\"support-tools__widget__main\">\\r\\n            <div class=\"support-tools__widget__selected-item\">\\r\\n                <div class=\"support-tools__widget__selected-item__title\" data-bind=\"text: widget.#:type#.DisplayName\">\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__selected-item__details\">\\r\\n                    #: title #\\r\\n                </div>\\r\\n                <div class=\"support-tools__widget__selected-item__email\" data-bind=\"visible: widget.#:type#.Email\">\\r\\n                    <a data-bind=\"click: widget.openSendEmail, value: widget.#:type#\">\\r\\n                        <span data-bind=\"text: widget.#:type#.Email\"></span>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"support-tools__widget__action\" data-bind=\"click: widget.removeItem, value: widget.#:type#\">\\r\\n                <a class=\"support-tools__widget__action__link\">\\r\\n                    <div class=\"support-tools__widget__action-icon\">\\r\\n                    </div>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</script>\\r\\n\\r\\n<script id=\"addTemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"support-tools__widget\">\\r\\n        <div class=\"support-tools__widget__icon-container\">\\r\\n            <img alt=\"\" src=\"../../../../Content/Images/Icons/RemoteManage/#:icon#\" class=\"support-tools__widget__icon\" />\\r\\n        </div>\\r\\n        <div class=\"support-tools__widget__main support-tools__widget__input\">\\r\\n            <div class=\"support-tools__widget__input__form\">\\r\\n                <span class=\"fa fa-search support-tools__widget__input__form__icon\" data-bind=\"click: widget.openCombobox, value: widget.#:type#.widgetType\"></span>\\r\\n                <input id=\"#:type#Combobox1\" class=\"support-tools__widget__input__form__input\" />\\r\\n                <div id=\"#:type#Container\" class=\"support-tools__widget__input__form__dropdown\"></div>\\r\\n            </div>\\r\\n            <div class=\"support-tools__widget__action\" data-bind=\"click: widget.removeUserCombobox, value: widget.#:type#.widgetType\">\\r\\n                <a class=\"support-tools__widget__action__link\">\\r\\n                    <div class=\"support-tools__widget__action-icon\">\\r\\n                    </div>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<script id=\"comboboxusertemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"multi-query__list__selected-items multi-query__list__selected-items--no-border\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-sm-12\">\\r\\n                <div class=\"multi-query__list__selected-items__name\">#: Name #</div>\\r\\n                <div class=\"multi-query__list__selected-items__details\">#: (Email) ? Email : \"\" #</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<script id=\"comboboxdevicetemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"multi-query__list__selected-items multi-query__list__selected-items--no-border\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-sm-12\">\\r\\n                <div class=\"multi-query__list__selected-items__name\">#: DisplayName #</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<script id=\"comboboxuserdevicetemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"multi-query__list__selected-items multi-query__list__selected-items--no-border\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-sm-12\">\\r\\n                <div class=\"multi-query__list__selected-items__name\">#: Text #</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<script id=\"comboboxprimarydevicetemplate\" type=\"text/x-kendo-template\">\\r\\n    <div class=\"multi-query__list__selected-items multi-query__list__selected-items--no-border\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-sm-12\">\\r\\n                <div class=\"multi-query__list__selected-items__name\">#: Name #</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>';});\n\n","var __remoteManageWidgetSingleton;\r\n\r\ndefine('forms/flyout/remoteManageWidget/controller',['require','text!forms/flyout/remoteManageWidget/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/flyout/remoteManageWidget/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        getWidget: function (vm) {\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            var main_row = $('.page_bar.sticky-header').first().children('.row').first();\r\n            main_row.after(ele);\r\n\r\n            var addUserContainer = $(\".addUserContainer\");\r\n            var addTemplate = kendo.template($(\"#addTemplate\").html());\r\n\r\n            var dataUserContainer = $(\".dataUserContainer\");\r\n            var dataTemplate = kendo.template($(\"#dataTemplate\").html());\r\n\r\n            var addDeviceContainer = $(\".addDeviceContainer\");\r\n\r\n            var dataDeviceContainer = $(\".dataDeviceContainer\");\r\n            var multipleDataTemplate = kendo.template($(\"#multipleDataTemplate\").html());\r\n\r\n            var deleteicon = '<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#403f40\"><path d=\"M12,2C6.47,2,2,6.47,2,12s4.47,10,10,10s10-4.47,10-10S17.53,2,12,2z M17,15.59L15.59,17L12,13.41L8.41,17L7,15.59 L10.59,12L7,8.41L8.41,7L12,10.59L15.59,7L17,8.41L13.41,12L17,15.59z\" fill=\"#403f40\"/></svg>';\r\n            var widgetActionIcon = $(\"<div class='support-tools__widget__action-icon'>\" + deleteicon + \"</div>\");\r\n\r\n            var createUserComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxusertemplate\"),\r\n                    type: 'user',\r\n                    dataTextField: \"Name\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var createUserDeviceComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxuserdevicetemplate\"),\r\n                    type: 'userdevice',\r\n                    affectedUserId: vm.widget.affectedUser.BaseId,\r\n                    dataTextField: \"Text\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var createPrimaryDeviceComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxprimarydevicetemplate\"),\r\n                    type: 'primarydevice',\r\n                    dataTextField: \"Name\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var createDeviceComboBox = function (type) {\r\n                initializePicker({\r\n                    element: $(\"#\" + type + \"Combobox1\"),\r\n                    eleContainer: $(\"#\" + type + \"Container\"),\r\n                    eleTemplate: $(\"#comboboxdevicetemplate\"),\r\n                    type: 'device',\r\n                    dataTextField: \"DisplayName\"\r\n                });\r\n\r\n                var widget = $(\"#\" + type + \"Combobox1\").getKendoComboBox();\r\n                widget.input.focus();\r\n            }\r\n\r\n            var affectedUserText = \"affectedUser\";\r\n            var assignedUserText = \"assignedUser\";\r\n            var primaryOwnerText = \"primaryOwner\";\r\n\r\n            var affectedDeviceText = \"affectedDevice\";\r\n            var primaryDeviceText = \"primaryDevice\";\r\n            var userDeviceText = \"userDevice\";\r\n            var relatedDeviceText = \"relatedDevice\";\r\n\r\n            var getObjectDetails = function (type) {\r\n                var details;\r\n                if (type === affectedUserText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.AffectedUserAppPage,\r\n                        icon: \"affected_user.svg\"\r\n                    }\r\n\r\n                } else if (type === assignedUserText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.AssignedUser,\r\n                        icon: \"assigned_user.svg\"\r\n                    }\r\n\r\n                } else if (type === primaryOwnerText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.PrimaryOwner,\r\n                        icon: \"primary_user.svg\"\r\n                    }\r\n                } else if (type === affectedDeviceText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.AffectedDeviceText,\r\n                        icon: \"affected_device.svg\"\r\n                    }\r\n                } else if (type === primaryDeviceText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: \"Primary Device\",\r\n                        icon: \"primary_device.svg\"\r\n                    }\r\n                } else if (type === userDeviceText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: \"User Device\",\r\n                        icon: \"user_device.svg\"\r\n                    }\r\n                } else if (type === relatedDeviceText) {\r\n                    details = {\r\n                        type: type,\r\n                        title: localization.RelatedDeviceText,\r\n                        icon: \"related_device.svg\"\r\n                    }\r\n                }\r\n\r\n                return details;\r\n            }\r\n\r\n            var filter = {};\r\n            var selected = { };\r\n            \r\n            var setSelected = function (key, picker) {\r\n\r\n                var tpl = $(picker).parents(\".support-tools__widget\").first();\r\n                tpl.remove();\r\n                \r\n                if (key.toLowerCase().indexOf(affectedUserText.toLowerCase()) > -1) {\r\n\r\n                    vm.widget[affectedUserText] = _.extend(selected[key] || {},\r\n                        {\r\n                            widgetType: affectedUserText,\r\n                            mailtoLink: (selected[key][\"Email\"]) ? \"mailto:\" + selected[key][\"Email\"] + \"?Subject=\" + \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title : \"\"\r\n                        });\r\n\r\n                    $(\"#\" + affectedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n                    dataUserContainer.append(dataTemplate(getObjectDetails(affectedUserText)));\r\n\r\n                    vm.viewModel.set(\"RequestedWorkItem\", selected[key]);\r\n                    input = $(\"input[data-control-bind='RequestedWorkItem']\").data(\"kendoAutoComplete\");\r\n                    input.value(selected[key].DisplayName);\r\n\r\n                    vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(assignedUserText.toLowerCase()) > -1) {\r\n\r\n                    vm.widget[assignedUserText] = _.extend(selected[key] || {},\r\n                        {\r\n                            widgetType: assignedUserText,\r\n                            mailtoLink: (selected[key][\"Email\"]) ? \"mailto:\" +selected[key][\"Email\"]+ \"?Subject=\" + \"[\" +vm.viewModel.Id + \"] \" +vm.viewModel.Title: \"\"\r\n                        });\r\n\r\n                    $(\"#\" + assignedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n                    dataUserContainer.append(dataTemplate(getObjectDetails(assignedUserText)));\r\n\r\n                    vm.viewModel.set(\"AssignedWorkItem\", selected[key]);\r\n                    input = $(\"input[data-control-bind='AssignedWorkItem']\").data(\"kendoAutoComplete\");\r\n                    input.value(selected[key].DisplayName);\r\n\r\n                    vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(primaryOwnerText.toLowerCase()) > -1) {\r\n\r\n                    vm.widget[primaryOwnerText] = _.extend(selected[key] || {},\r\n                        {\r\n                            widgetType: primaryOwnerText,\r\n                            mailtoLink: (selected[key][\"Email\"]) ? \"mailto:\" + selected[key][\"Email\"] + \"?Subject=\" + \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title : \"\"\r\n                        });\r\n\r\n                    $(\"#\" + primaryOwnerText + \"AddLink\").addClass(\"isDisabled\");\r\n                    dataUserContainer.append(dataTemplate(getObjectDetails(primaryOwnerText)));\r\n\r\n                    vm.viewModel.set(\"RelatesToIncident\", selected[key]);\r\n                    input = $(\"input[data-control-bind='RelatesToIncident']\").data(\"kendoAutoComplete\");\r\n                    input.value(selected[key].DisplayName);\r\n\r\n                    vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(affectedDeviceText.toLowerCase()) > -1) {\r\n\r\n                    if (selected[key] && !_.findWhere(vm.widget[affectedDeviceText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.HasRelatedWorkItems.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(primaryDeviceText.toLowerCase()) > -1) {\r\n                    if (selected[key] && !_.findWhere(vm.widget[primaryDeviceText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.HasRelatedWorkItems.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(userDeviceText.toLowerCase()) > -1) {\r\n                    if (selected[key] && !_.findWhere(vm.widget[affectedDeviceText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.HasRelatedWorkItems.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                } else if (key.toLowerCase().indexOf(relatedDeviceText.toLowerCase()) > -1) {\r\n\r\n                    if (selected[key]&& !_.findWhere(vm.widget[relatedDeviceText + \"Arr\"], { BaseId: selected[key].Id })) {\r\n                        var item = _.extend(selected[key],\r\n                            {\r\n                                AssetStatus: \"\"\r\n                            });\r\n\r\n                        vm.viewModel.RelatesToConfigItem.push(item);\r\n                    }\r\n\r\n                    vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                }\r\n\r\n\r\n                selected[key] = null;\r\n                filter[key] = \"\";\r\n\r\n                if (vm.widget[affectedUserText].BaseId && vm.widget[assignedUserText].BaseId && vm.widget[primaryOwnerText].BaseId)\r\n                    $(\"#\" + primaryOwnerText + \"AddLink\").parents(\".support-tools__widget\").first().hide();\r\n\r\n                widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n                kendo.bind(ele, vm);\r\n            }\r\n\r\n            var initializePicker = function (config) {\r\n\r\n                var targetKey = config.element[0].id;\r\n\r\n                var ds;\r\n                if (config.type === \"user\") {\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/api/V3/User/GetUserList\",\r\n                                data: {\r\n                                    filterByAnalyst: false,\r\n                                    maxNumberOfResults: 1000,\r\n                                    userFilter: function() {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true\r\n                    });\r\n                }else if (config.type === \"device\") {\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/Search/GetSearchObjectsWithEnumObjectByClassId\",\r\n                                data: {\r\n                                    searchFilter: function() {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    },\r\n                                    classId: '7ad221e0-e4bb-39a8-6514-33b60bba46f5',\r\n                                    columnNames: 'DisplayName, Id'\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true,\r\n                        schema: {\r\n                            data: function(response) {\r\n                                return response.Data;\r\n                            }\r\n                        }\r\n                    });\r\n                } else if (config.type === \"primarydevice\") {\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: session.consoleSetting.TrueControlCenterURL + \"/api/CmDevice\",\r\n                                data: {\r\n                                    search: function () {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                },\r\n                                beforeSend: function (req) {\r\n                                    req.setRequestHeader('Authorization', 'Bearer ' + session.consoleSetting.TrueControlCenterAuthToken);\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true,\r\n                        schema: {\r\n                            data: function (response) {\r\n                                return response.value;\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    ds = new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/ConfigItems/GetAffectedUserConfigItemsList\",\r\n                                data: {\r\n                                    affectedUserId: config.affectedUserId,\r\n                                    className: \"Microsoft.Windows.Computer\",\r\n                                    searchFilter: function () {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true\r\n                    });\r\n                }\r\n\r\n                var picker = config.element.kendoComboBox({\r\n                    dataSource: ds,\r\n                    template: kendo.template(config.eleTemplate.html()),\r\n                    placeholder: localization.Search,\r\n                    dataTextField: config.dataTextField,\r\n                    dataValueField: \"Id\",\r\n                    autoBind: false,\r\n                    filter: \"contains\",\r\n                    suggest: true,\r\n                    popup: {\r\n                        appendTo: config.eleContainer\r\n                    },\r\n                    filtering: function (e) {\r\n                        if (e.filter != undefined) {\r\n                            var key = e.sender.element[0].id;\r\n                            filter[key] = e.filter.value;\r\n                        }\r\n                    },\r\n                    select: function (e) {\r\n                        var key = e.sender.element[0].id;\r\n\r\n                        if (config.type === \"user\") {\r\n                            selected[key] = {\r\n                                DisplayName: e.dataItem.Name,\r\n                                BaseId: e.dataItem.Id,\r\n                                Email: e.dataItem.Email,\r\n                                Path: \"\"\r\n                            };\r\n                        } else if (config.type === \"device\") {\r\n                            selected[key] = e.dataItem;\r\n                        } else if (config.type === \"primarydevice\") {\r\n                            selected[key] = {\r\n                                DisplayName: e.dataItem.Name,\r\n                                BaseId: e.dataItem.Guid,\r\n                                Path: \"\"\r\n                            };\r\n                        } else {\r\n                            selected[key] = {\r\n                                DisplayName: e.dataItem.Text,\r\n                                BaseId: e.dataItem.Id,\r\n                                ClassName: e.dataItem.ClassName,\r\n                                Path: \"\"\r\n                            }\r\n                        }\r\n                        if ($(e.item[0]).hasClass('k-state-hover')) {\r\n                            setSelected(key, config.element);\r\n                        }\r\n                    }\r\n                }).data(\"kendoComboBox\");\r\n\r\n                picker.input.on(\"keydown\", function (e) {\r\n                    if (e.keyCode === 9 || e.keyCode === 13) {\r\n\r\n                        setSelected(targetKey, config.element);\r\n                    }\r\n                });\r\n            };\r\n\r\n            vm.widget = {\r\n                open: false,\r\n                mainWidgetAttr: 'support-tools__widget support-tools__widget--add-item',\r\n                mainWidgetDeviceAttr: 'support-tools__widget support-tools__widget--add-item',\r\n                addForm: function(e) {\r\n                    if ($(e.currentTarget).hasClass(\"isDisabled\")) return;\r\n\r\n                    var type = e.currentTarget.value;\r\n                    if (type === affectedUserText) {\r\n                        addUserContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addUserContainer);\r\n                        createUserComboBox(type);\r\n                        vm.widget.mainWidgetAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === assignedUserText) {\r\n                        addUserContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addUserContainer);\r\n                        createUserComboBox(type);\r\n                        vm.widget.mainWidgetAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === primaryOwnerText) {\r\n                        addUserContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addUserContainer);\r\n                        createUserComboBox(type);\r\n                        vm.widget.mainWidgetAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === affectedDeviceText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createDeviceComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === primaryDeviceText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createPrimaryDeviceComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === userDeviceText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createUserDeviceComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    } else if (type === relatedDeviceText) {\r\n                        addDeviceContainer.append(addTemplate(getObjectDetails(type)));\r\n                        kendo.bind(addDeviceContainer);\r\n                        createDeviceComboBox(type);\r\n                        vm.widget.mainWidgetDeviceAttr =\r\n                            'support-tools__widget support-tools__widget--add-item support-tools__widget--hide';\r\n\r\n                    }\r\n\r\n                    widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n\r\n                    kendo.bind(ele, vm);\r\n                },\r\n                affectedUser: _.extend(vm.viewModel.RequestedWorkItem || {},\r\n                    {\r\n                        widgetType: affectedUserText,\r\n                        mailtoLink: (vm.viewModel.RequestedWorkItem && vm.viewModel.RequestedWorkItem[\"Email\"]) ? \"mailto:\" +vm.viewModel.RequestedWorkItem[\"Email\"]+ \"?Subject=\" + \"[\" +vm.viewModel.Id + \"] \" +vm.viewModel.Title: \"\"\r\n                    }),\r\n                assignedUser: _.extend(vm.viewModel.AssignedWorkItem || {},\r\n                    {\r\n                        widgetType: assignedUserText,\r\n                        mailtoLink: (vm.viewModel.AssignedWorkItem && vm.viewModel.AssignedWorkItem[\"Email\"]) ? \"mailto:\" + vm.viewModel.AssignedWorkItem[\"Email\"] + \"?Subject=\" + \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title : \"\"\r\n                    }),\r\n                primaryOwner: _.extend(vm.viewModel.RelatesToIncident || {},\r\n                    {\r\n                        widgetType: primaryOwnerText,\r\n                        mailtoLink: (vm.viewModel.RelatesToIncident && vm.viewModel.RelatesToIncident[\"Email\"]) ? \"mailto:\" + vm.viewModel.RelatesToIncident[\"Email\"] + \"?Subject=\" + \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title : \"\"\r\n                    }),\r\n                affectedDevice: {\r\n                        widgetType: affectedDeviceText\r\n                    },\r\n                primaryDevice: {\r\n                        widgetType: primaryDeviceText\r\n                    },\r\n                userDevice: {\r\n                        widgetType: userDeviceText\r\n                    },\r\n                relatedDevice:  {\r\n                    widgetType: relatedDeviceText\r\n                },\r\n                relatedDeviceArr: _.filter(vm.viewModel.RelatesToConfigItem,\r\n                    function (el) {\r\n                        el = _.extend(el,\r\n                            {\r\n                                widgetType: relatedDeviceText\r\n                            });\r\n                        return el.ClassName === \"Microsoft.Windows.Computer\";\r\n                    }),\r\n                affectedDeviceArr: _.filter(vm.viewModel.HasRelatedWorkItems,\r\n                    function (el) {\r\n                        el = _.extend(el,\r\n                            {\r\n                                widgetType: affectedDeviceText\r\n                            });\r\n                        return el.ClassName === \"Microsoft.Windows.Computer\";\r\n                    }),\r\n                primaryDeviceArr: [],\r\n                clickContainer: function (e) {\r\n                    if (e.target.nodeName === \"DIV\" && e.target.className.indexOf(\"multi-query__list__selected-items\") === -1) {\r\n                        var value = e.currentTarget.value;\r\n                        if (value.BaseId) {\r\n                            var obj = { BaseId: value.BaseId, Name: value.DisplayName }\r\n                            var type = [affectedUserText, assignedUserText, primaryOwnerText].indexOf(value.widgetType) > -1 ? \"user\" : \"computer\";\r\n                            var src = app.slideOutNav.getTCCSourceURL(obj, type);\r\n                            var options = {\r\n                                url: src,\r\n                                tooltip: (type === \"user\") ? localization.UserManagement : localization.ComputerManagement\r\n                            }\r\n                            app.slideOutNav.show(options);\r\n                        }\r\n                    }\r\n                },\r\n                removeUserCombobox: function (e) {\r\n                    var widgetType = e.currentTarget.value;\r\n                    var tpl = $(e.currentTarget).parents(\".support-tools__widget\").first();\r\n                    tpl.remove();\r\n\r\n                    if ([affectedUserText, assignedUserText, primaryOwnerText].indexOf(widgetType) > -1)\r\n                        vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                    else\r\n                        vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n\r\n                    kendo.bind(ele, vm);\r\n                },\r\n                openCombobox: function (e) {\r\n                    var widgetType = e.currentTarget.value;\r\n                    var widget = $(\"#\" + widgetType + \"Combobox1\").getKendoComboBox();\r\n                    widget.open();\r\n                },\r\n                removeItem: function (e) {\r\n                    var widgetValue = e.currentTarget.value;\r\n                    var widgetType = widgetValue.widgetType;\r\n                    var propName;\r\n\r\n                    switch (widgetType) {\r\n                        case affectedUserText:\r\n                            propName = \"RequestedWorkItem\";\r\n                            vm.viewModel.set(propName,\r\n                                {\r\n                                    DisplayName: \"\",\r\n                                    BaseId: \"\"\r\n                                });\r\n                            $(\"#\" + affectedUserText + \"AddLink\").removeClass(\"isDisabled\");\r\n                            vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case assignedUserText:\r\n                            propName = \"AssignedWorkItem\";\r\n                            vm.viewModel.set(propName,\r\n                                {\r\n                                    DisplayName: \"\",\r\n                                    BaseId: \"\"\r\n                                });\r\n                            $(\"#\" + assignedUserText + \"AddLink\").removeClass(\"isDisabled\");\r\n                            vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case primaryOwnerText:\r\n                            propName = \"RelatesToIncident\";\r\n                            vm.viewModel.set(propName,\r\n                                {\r\n                                    DisplayName: \"\",\r\n                                    BaseId: \"\"\r\n                                });\r\n                            $(\"#\" + primaryOwnerText + \"AddLink\").removeClass(\"isDisabled\");\r\n                            vm.widget.mainWidgetAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case affectedDeviceText:\r\n                            var arr = _.map(vm.viewModel.HasRelatedWorkItems,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.HasRelatedWorkItems.splice(i, 1);\r\n\r\n                            vm.widget[affectedDeviceText + \"Arr\"] = _.filter(vm.widget[affectedDeviceText + \"Arr\"],\r\n                                function (el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case primaryDeviceText:\r\n                            var arr = _.map(vm.viewModel.HasRelatedWorkItems,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.HasRelatedWorkItems.splice(i, 1);\r\n\r\n                            vm.widget[primaryDeviceText + \"Arr\"] = _.filter(vm.widget[primaryDeviceText + \"Arr\"],\r\n                                function (el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case userDeviceText:\r\n                            var arr = _.map(vm.viewModel.HasRelatedWorkItems,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.HasRelatedWorkItems.splice(i, 1);\r\n\r\n                            vm.widget[affectedDeviceText + \"Arr\"] = _.filter(vm.widget[affectedDeviceText + \"Arr\"],\r\n                                function (el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                        case relatedDeviceText:\r\n\r\n                            var arr = _.map(vm.viewModel.RelatesToConfigItem,\r\n                                function (el) {\r\n                                    return el.BaseId;\r\n                                });\r\n\r\n                            var i = _.indexOf(arr, widgetValue.BaseId);\r\n\r\n                            vm.viewModel.RelatesToConfigItem.splice(i, 1);\r\n\r\n                            vm.widget[relatedDeviceText + \"Arr\"] = _.filter(vm.widget[relatedDeviceText + \"Arr\"],\r\n                                function(el) {\r\n                                    return el.BaseId !== widgetValue.BaseId;\r\n                                });\r\n\r\n                            vm.widget.mainWidgetDeviceAttr = 'support-tools__widget support-tools__widget--add-item';\r\n                            break;\r\n                    }\r\n\r\n                    if (propName && propName.length > 0) {\r\n                        var input = $(\"input[data-control-bind='\" + propName + \"']\");\r\n                        input.data(\"kendoAutoComplete\").value(\"\");\r\n                        var liParent = input.parent().children(\".menu-usr-mgt\");\r\n                        $(liParent).hide();\r\n                    }\r\n\r\n                    var tpl = $(e.currentTarget).parents(\".support-tools__widget\").first();\r\n                    tpl.remove();\r\n\r\n                    if (typeof (vm.widget[affectedUserText].BaseId && vm.widget[assignedUserText].BaseId && vm.widget[primaryOwnerText].BaseId) !== \"undefined\")\r\n                        $(\"#\" + primaryOwnerText + \"AddLink\").parents(\".support-tools__widget\").first().show();\r\n\r\n                    kendo.bind(ele, vm);\r\n                },\r\n                remoteManageRecepient: null,\r\n                openSendEmail: function (e) {\r\n                    var widgetValue = e.currentTarget.value;\r\n                    vm.widget.remoteManageRecepient = widgetValue;\r\n                    $('li.link[data-bind=\"click: sendEmail\"]').click();\r\n                }\r\n            }\r\n\r\n            if (vm.widget.affectedUser.BaseId) {\r\n                $(\"#\" + affectedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n                dataUserContainer.append(dataTemplate(getObjectDetails(affectedUserText)));\r\n            }\r\n\r\n            if (vm.widget.assignedUser.BaseId) {\r\n                $(\"#\" + assignedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n                dataUserContainer.append(dataTemplate(getObjectDetails(assignedUserText)));\r\n            }\r\n\r\n            if (vm.widget.primaryOwner.BaseId) {\r\n                $(\"#\" + primaryOwnerText + \"AddLink\").addClass(\"isDisabled\");\r\n                dataUserContainer.append(dataTemplate(getObjectDetails(primaryOwnerText)));\r\n            }\r\n\r\n            if (vm.widget.relatedDeviceArr.length > 0) {\r\n\r\n                var relatedDeviceObj = {\r\n                    devices: vm.widget[relatedDeviceText + \"Arr\"],\r\n                    type: relatedDeviceText + \"Arr\",\r\n                    title: localization.RelatedDeviceText,\r\n                    icon: \"related_device.svg\"\r\n                }\r\n                dataDeviceContainer.append(multipleDataTemplate(relatedDeviceObj));\r\n                kendo.bind(dataDeviceContainer);\r\n            }\r\n\r\n            if (vm.widget.affectedDeviceArr.length > 0) {\r\n\r\n                var affectedDeviceObj = {\r\n                    devices: vm.widget[affectedDeviceText + \"Arr\"],\r\n                    type: affectedDeviceText + \"Arr\",\r\n                    title: localization.AffectedDeviceText,\r\n                    icon: \"affected_device.svg\"\r\n                }\r\n                dataDeviceContainer.append(multipleDataTemplate(affectedDeviceObj));\r\n                kendo.bind(dataDeviceContainer);\r\n            }\r\n\r\n            if (!vm.viewModel.hasOwnProperty('RelatesToIncident'))\r\n                $(\"#\" + primaryOwnerText + \"AddLink\").addClass(\"isDisabled\");\r\n\r\n            if (!vm.viewModel.hasOwnProperty('RequestedWorkItem')) \r\n                $(\"#\" + affectedUserText + \"AddLink\").addClass(\"isDisabled\");\r\n\r\n            widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n\r\n            var changeCntr = 0;\r\n            vm.bind(\"change\",\r\n                function (e) {\r\n\r\n                    if (e.field.indexOf(\"RequestedWorkItem\") > -1 || e.field.indexOf(\"RelatesToIncident\") > -1 || e.field.indexOf(\"AssignedWorkItem\") > -1) {\r\n\r\n                        var propName, widgetName;\r\n\r\n                        if (e.field.indexOf(\"RequestedWorkItem\") > -1) {\r\n                            propName = \"RequestedWorkItem\";\r\n                            widgetName = affectedUserText;\r\n                        }\r\n\r\n                        if (e.field.indexOf(\"RelatesToIncident\") > -1) {\r\n                            propName = \"RelatesToIncident\";\r\n                            widgetName = primaryOwnerText;\r\n                        }\r\n\r\n                        if (e.field.indexOf(\"AssignedWorkItem\") > -1) {\r\n                            propName = \"AssignedWorkItem\";\r\n                            widgetName = assignedUserText;\r\n                        }\r\n\r\n                        if (e.field.indexOf(\"BaseId\") > -1) changeCntr++;\r\n                        if (e.field.indexOf(\"DisplayName\") > -1) changeCntr++;\r\n\r\n                        if (changeCntr === 2) {\r\n\r\n                            if (vm.viewModel[propName].BaseId) {\r\n\r\n                                $.getJSON('/api/V3/User/GetUserRelatedInfoByUserId',\r\n                                    { userId: vm.viewModel[propName].BaseId },\r\n                                    function(json) {\r\n\r\n                                        vm.widget[widgetName] = _.extend(JSON.parse(json) || {},\r\n                                            {\r\n                                                widgetType: widgetName\r\n                                            });\r\n\r\n                                        $('#' + widgetName + 'dataTemplate').remove();\r\n                                        changeCntr = 0;\r\n\r\n                                        $(\"#\" + widgetName + \"AddLink\").addClass(\"isDisabled\");\r\n                                        dataUserContainer.append(dataTemplate(getObjectDetails(widgetName)));\r\n\r\n                                        kendo.bind(dataUserContainer, vm);\r\n\r\n                                        widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n\r\n                                    });\r\n\r\n                            } else {\r\n\r\n                                $('#' + widgetName + 'dataTemplate').remove();\r\n                                $(\"#\" + widgetName + \"AddLink\").removeClass(\"isDisabled\");\r\n                                changeCntr = 0;\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (e.field.indexOf(\"RelatesToConfigItem\") > -1 || e.field.indexOf(\"HasRelatedWorkItems\") > -1) {\r\n                        var propName, widgetName;\r\n\r\n                        if(e.field.indexOf(\"RelatesToConfigItem\") > -1) {\r\n                            propName = \"RelatesToConfigItem\";\r\n                            widgetName = relatedDeviceText;\r\n                        }\r\n\r\n                        if(e.field.indexOf(\"HasRelatedWorkItems\") > -1) {\r\n                            propName = \"HasRelatedWorkItems\";\r\n                            widgetName = affectedDeviceText;\r\n                        }\r\n\r\n                        var item = e.items[0];\r\n\r\n                        if (item.ClassName && (item.ClassName === \"Microsoft.Windows.Computer\" || item.ClassName === \"Computer\")) {\r\n\r\n                            if (e.action === \"add\") {\r\n\r\n                                item = _.extend(item,\r\n                                    {\r\n                                        widgetType: widgetName\r\n                                    });\r\n\r\n                                vm.widget[widgetName + \"Arr\"].push(item);\r\n                            }\r\n\r\n                            if (e.action === \"remove\") {\r\n\r\n                                vm.widget[widgetName + \"Arr\"] = _.filter(vm.widget[widgetName + \"Arr\"],\r\n                                    function(el) {\r\n                                        return el.BaseId !== item.BaseId;\r\n                                    });\r\n                            }\r\n\r\n                            $('.' + widgetName + 'ArrdataTemplate').remove();\r\n\r\n                            var obj = {\r\n                                devices: vm.widget[widgetName + \"Arr\"],\r\n                                type: widgetName + \"Arr\",\r\n                                title: (e.field.indexOf(\"RelatesToConfigItem\") > -1)\r\n                                    ? localization.RelatedDeviceText\r\n                                    : localization.AffectedDeviceText,\r\n                                icon: (e.field.indexOf(\"RelatesToConfigItem\") > -1)\r\n                                    ? \"related_device.svg\"\r\n                                    : \"affected_device.svg\"\r\n                            }\r\n                            dataDeviceContainer.append(multipleDataTemplate(obj));\r\n                            kendo.bind(dataDeviceContainer, vm);\r\n\r\n                            widgetActionIcon.replaceAll(\".support-tools__widget__action-icon\");\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n            kendo.bind(ele, vm);\r\n\r\n            return __remoteManageWidgetSingleton;\r\n        },\r\n        toggle: function (vm) {\r\n            vm.widget.open = !vm.widget.open;\r\n\r\n            if (vm.widget.open) {\r\n                if (vm.attachmentWidget) vm.attachmentWidget.open = false;\r\n                $(\"#headerAttachmentBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#attachment_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#expanded_widget\").addClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").addClass('content-header__flyout__overlay--open');\r\n            } else {\r\n                $(\"#remoteManageBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#expanded_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").removeClass('content-header__flyout__overlay--open');\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/flyout/headerAttachmentWidget/view.html',[],function () { return '<div id=\"attachment_widget\" class=\"content-header__flyout\">\\r\\n    <h3 class=\"content-header__flyout__title\">\\r\\n        <span><%= localization.FileAttachments %></span>\\r\\n    </h3>\\r\\n    <div id=\"headerAttachmentContainer\" class=\"panel-body\"></div>\\r\\n</div>';});\n\n","\ndefine('text!forms/predefined/fileAttachmentsDragDrop/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <div class=\"drop-zone-element\">\\r\\n        <div class=\"text-wrapper\">\\r\\n            <span class=\"drag-image-text\">\\r\\n                <img data-bind=\"visible:isDesktop\" src=\"/Content/Images/Icons/FileUpload/upload_to_cloud.svg\" />\\r\\n                <span data-bind=\"visible:isDesktop\"><b><%= localization.DragAndDrop %> </b> <%= localization.YourFilesOr %> <a class=\"browse-file\"><b><%= localization.Browse %></b></a></span>\\r\\n                <a  data-bind=\"visible:isMobile\" class=\"browse-file\"><b><%= localization.Browse %></b></a>\\r\\n                <div style=\"display:none\"><input name=\"files\" id=\"files\" type=\"file\"/></div>\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div>\\r\\n    <div class=\"fileattachment-list\"></div>\\r\\n    <div class=\"fileattachment-img-modal\"></div>\\r\\n</div>\\r\\n\\r\\n<script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n    <div class=\"thumbnail-file\">\\r\\n        <div class=\"cursor-pointer thumbnail-img\">\\r\\n            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n            <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n            # } else{ #\\r\\n            <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n            # } #\\r\\n        </div>\\r\\n        <div class=\"thumbnail-caption\">\\r\\n            <span>#: DisplayName #</span>\\r\\n            <div class=\"overlay\">\\r\\n                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                        <i class=\"fa fa-eye\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                        <i class=\"fa fa-external-link\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (BaseId!=null) { #\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                        <i class=\"fa fa-download\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n                # } #\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\"  title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<style>\\r\\n\\r\\n</style>';});\n\n","/**\r\nfileAttachmentsDragDrop\r\n**/\r\n\r\ndefine('forms/predefined/fileAttachmentsDragDrop/controller',['require','text!forms/predefined/fileAttachmentsDragDrop/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/fileAttachmentsDragDrop/view.html\");\r\n   \r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            //get file content for images\r\n            if (!_.isUndefined(vm.FileAttachment) && vm.FileAttachment.length > 0) {\r\n                _.each(vm.FileAttachment, function (file) {\r\n                    if (file.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                        $.ajax({\r\n                            type: \"GET\",\r\n                            async: false,\r\n                            url: \"/FileAttachment/GetFileContent/\",\r\n                            data: { id: file.BaseId }\r\n                        }).then(function (data) {\r\n                            file.Content.data = data;\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            var properties = {\r\n                Required: node.Required,\r\n                BaseId: vm.BaseId,\r\n                AcceptExtension: _.isUndefined(node.AcceptExtension) ? \"\" : vm.AcceptExtension,\r\n                ClassName: vm.Clas\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            var template = $(built(properties));\r\n\r\n            var viewModel = new kendo.observable({\r\n                isDesktop: !app.isMobile(),\r\n                isMobile: app.isMobile(),\r\n                isEnabled: true,\r\n                isVisible: true,\r\n                onSelect: function (e) {\r\n                    template.find(\".k-file-error\").remove();\r\n                    $.each(e.files, function (index, value) {\r\n                        if (!_.isUndefined(node.AcceptExtension)\r\n                            && node.AcceptExtension != \"\"\r\n                            && !(node.AcceptExtension.toLowerCase().indexOf(value.extension.toLowerCase()) > -1)) {\r\n                            kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.ErrorDescription,\r\n                                message: localization.FileExtensionInvalid + node.AcceptExtension,\r\n                                icon: \"fa fa-exclamation\"\r\n                            });\r\n                            e.preventDefault();\r\n                        }\r\n                    });\r\n                },\r\n                onUploadSuccess: function (e) {\r\n                    var vmFiles = !_.isUndefined(vm.FileAttachment) ? vm.FileAttachment : [];\r\n                    var response = e.response;\r\n\r\n                    if (e.operation == \"upload\") {\r\n                        for (var i = 0; i < e.files.length; i++) {\r\n                            var file = e.files[i].rawFile;\r\n                            if (file) {\r\n                                if (!_.isUndefined(response.FileAttachment)) {\r\n                                    var f = _.filter(vm.FileAttachment,\r\n                                        function(el) {\r\n                                            return el.Content.data === response.FileAttachment.Content.data && el.BaseId === response.FileAttachment.BaseId;\r\n                                        });\r\n                                    if(f.length === 0)\r\n                                        vm.FileAttachment.push(response.FileAttachment); //save to viewModel\r\n                                } else if (!_.isUndefined(response.success) && response.success == false) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.ErrorDescription,\r\n                                        message: response.message,\r\n                                        icon: \"fa fa-exclamation\"\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                onUploadError: function (e) {\r\n                    var err = $.parseJSON(e.XMLHttpRequest.responseText);\r\n                    $.map(e.files, function (file) {\r\n                        console.warn(\"Could not upload \" + file.name);\r\n                    });\r\n                },\r\n                onRemove: function (e) {\r\n                    $.get(\"/FileAttachment/RemoveFileUpload/\", { BaseId: vm.BaseId, fieldName: node.PropertyName }, function (data) {\r\n                        template.find(\".k-file\").parent().remove();\r\n                        //template.find(\"img\").hide();\r\n                        template.find(\"#div\" + node.PropertyName).hide();\r\n                        vm[node.PropertyName] = null;\r\n                    });\r\n                },\r\n                onOpenFile: function (el) {\r\n\r\n                    if (el.hasClass(\"opennewtab\")) {\r\n                        var win = window.open('about:blank');\r\n                        setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                            win.document.body.appendChild(win.document.createElement('img')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.focus();\r\n                        }, 0);\r\n\r\n                    }\r\n                    else {\r\n                        var dialog = $('.fileattachment-img-modal');\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        var listView = template.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                        var item = el.closest(\"[role='option']\");\r\n                        var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n                        \r\n                        \r\n                        if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/) && !el.hasClass(\"download\")) {\r\n                            dialog.kendoDialog({\r\n                                modal: true,\r\n                                title: dataItem.DisplayName,\r\n                                content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" + dataItem.DisplayName + \"\\\" /></div>\",\r\n                                animation: {\r\n                                    open: {\r\n                                        effects: \"fade:in\"\r\n                                    }\r\n                                }\r\n                            });\r\n                            $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                            dialog.data(\"kendoDialog\").open();\r\n                            dialog.parent().css(\"position\", \"fixed\");\r\n\r\n                            //close preview window on overlay click\r\n                            $('.k-overlay').on(\"click\", function () {\r\n                                dialog.data(\"kendoDialog\").close();\r\n                            });\r\n\r\n                        } else {\r\n                            if (dataItem.Content.data && !dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                                var blob = new Blob([dataItem.Content.data]);\r\n                                var url = window.URL.createObjectURL(blob);\r\n                                var fileName = dataItem.DisplayName;\r\n\r\n                                if (navigator.msSaveOrOpenBlob) {\r\n                                    navigator.msSaveOrOpenBlob(blob, fileName);\r\n                                    return;\r\n                                } else if (window.navigator.msSaveBlob) { // for IE browser\r\n                                    window.navigator.msSaveBlob(blob, fileName);\r\n                                    return;\r\n                                }\r\n\r\n                                var a = document.createElement(\"a\");\r\n                                document.body.appendChild(a);\r\n                                a.style = \"display: none\";\r\n\r\n                                a.href = url;\r\n                                a.download = fileName;\r\n                                a.click();\r\n                                window.URL.revokeObjectURL(url);\r\n                                document.body.removeChild(a);\r\n                            } else if (dataItem.BaseId) {\r\n                                if (dataItem.BaseId != null) {\r\n                                    location.href = downloadUrl + dataItem.BaseId;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            _.defer(function () {\r\n                kendo.bind(template, viewModel);\r\n                template.find(\".fileattachment-list\").kendoListView({\r\n                    dataSource: vm.FileAttachment,\r\n                    template: kendo.template($(\"#fileTemplate\").html()),\r\n                    selectable: \"single\",\r\n                    //change: viewModel.onOpenFile,\r\n                    dataBound: function () {\r\n                        template.find(\".custom-click\").on(\"click\", function () {\r\n                            viewModel.onOpenFile($(this));\r\n                        });\r\n\r\n                        if (!app.isMobile()) {\r\n                            //Remove view image icon if not in mobile.\r\n                            template.find(\"a[view-image]\").parent().hide();\r\n\r\n                            template.find(\".thumbnail-img img\").on(\"click\", function () {\r\n                                viewModel.onOpenFile($(this));\r\n                            });\r\n                        }\r\n                        \r\n                    }\r\n                });\r\n\r\n                $(\"#files\").kendoUpload({\r\n                    async: {\r\n                        saveUrl: \"/FileAttachment/UploadAttachment/\" + vm.BaseId + \"?className=\" + vm.ClassName,\r\n                        removeUrl: \"remove\",\r\n                        autoUpload: true\r\n                    },\r\n                    success:  viewModel.onUploadSuccess,\r\n                    error: viewModel.onUploadError,\r\n                    showFileList: false,\r\n                    dropZone: \".drop-zone-element\"\r\n                });\r\n\r\n                $(\".browse-file\").off('click').on('click', function () {\r\n                    $(\"#files\").trigger(\"click\");\r\n                });\r\n\r\n               \r\n            });\r\n            callback(template);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","var __headerAttachmentWidgetSingleton;\r\n\r\ndefine('forms/flyout/headerAttachmentWidget/controller',['require','text!forms/flyout/headerAttachmentWidget/view.html','text!forms/predefined/fileAttachmentsDragDrop/view.html','forms/predefined/fileAttachmentsDragDrop/controller'],function (require) {\r\n    var tpl = require(\"text!forms/flyout/headerAttachmentWidget/view.html\");\r\n    var attachmentTpl = require(\"text!forms/predefined/fileAttachmentsDragDrop/view.html\");\r\n    var fileAttachmentsDragDrop = require(\"forms/predefined/fileAttachmentsDragDrop/controller\");\r\n    var definition = {\r\n        template: tpl,\r\n        getWidget: function (vm) {\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            var main_row = $('.page_bar.sticky-header').first().children('.row').first();\r\n            main_row.after(ele);\r\n\r\n            var getContainer = function (tplReturn) {\r\n                return (typeof (tplReturn) === \"string\") ? $(tplReturn) : tplReturn;\r\n            }\r\n\r\n            var headerAttachmentContainer = $('#headerAttachmentContainer');\r\n            //headerAttachmentContainer.append(eleAttachment);\r\n\r\n            fileAttachmentsDragDrop.build(vm.viewModel, { name: \"File Attachments\", type: \"fileAttachmentsDragDrop\" }, function (tplReturn) {\r\n                var _container = getContainer(tplReturn);\r\n                headerAttachmentContainer.append(_container);\r\n            });\r\n\r\n            vm.attachmentWidget = {\r\n                open: false\r\n            }\r\n\r\n            kendo.bind(ele, vm);\r\n\r\n            return __headerAttachmentWidgetSingleton;\r\n        },\r\n        toggle: function (vm) {\r\n            vm.attachmentWidget.open = !vm.attachmentWidget.open;\r\n\r\n            if (vm.attachmentWidget.open) {\r\n                if (vm.widget) vm.widget.open = false;\r\n                $(\"#remoteManageBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#expanded_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#attachment_widget\").addClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").addClass('content-header__flyout__overlay--open');\r\n            } else {\r\n                $(\"#headerAttachmentBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#attachment_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").removeClass('content-header__flyout__overlay--open');\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nHeader Sticky\r\n**/\r\ndefine('forms/header/sticky/controller',['require','text!forms/header/sticky/view.html','forms/flyout/fileAttachmentsFlyout/controller','forms/flyout/remoteManageWidget/controller','forms/flyout/headerAttachmentWidget/controller'],function (require) {\r\n    var tpl = require(\"text!forms/header/sticky/view.html\");\r\n    var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n    var remoteManageWidget = require(\"forms/flyout/remoteManageWidget/controller\");\r\n    var headerAttachmentWidget = require(\"forms/flyout/headerAttachmentWidget/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n\r\n            //modify vm for this view\r\n            //vm.view.viewAttachments = function () {\r\n\r\n            //    var flyoutWindow = attachmentPickerFlyout.getPopup(vm);\r\n            //    flyoutWindow.open();\r\n            //}\r\n\r\n            //vm.view.filesCount = vm.viewModel.FileAttachment.length;\r\n\r\n            vm.view.statusVisible = function () {\r\n                if (vm.newWI) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            vm.view.showRemoteManageIcon = (session.consoleSetting.TrueControlCenterURL && !app.isMobile()) ? true : false;\r\n\r\n            var view = new kendo.View(built(), {\r\n                wrap: false,\r\n                init: function () {\r\n\r\n                    setTimeout(function() {\r\n                        DoWork(); \r\n                        if ($(\"#expanded_widget\").length === 0) {\r\n                            remoteManageWidget.getWidget(vm);\r\n                        }\r\n                        if ($(\"#attachment_widget\").length === 0) {\r\n                            headerAttachmentWidget.getWidget(vm);\r\n                        }\r\n                    }, 100);\r\n                },\r\n                model: vm\r\n            });\r\n\r\n            //this function is called from the link parent task so we need to allow callback function to be an input\r\n            vm.view.buildParentHeaderView = function (viewCallBack) {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n\r\n                //modify vm for this view\r\n                vm.view.controller = {\r\n                    parentIncident: (vm.type === \"ReleaseRecord\") ? localization.ParentRecord : localization.Parentincident,\r\n                    editHref: \"/\" + vm.type + \"/Edit/\" + vm.viewModel.ParentWorkItem.Id + \"/\",\r\n                    editLink: vm.viewModel.ParentWorkItem.Id + \"-\" + vm.viewModel.ParentWorkItem.Title,\r\n                    unlinkParent: function () {\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: localization.UnlinkToParent,\r\n                            message: localization.SureUnlinkToParent\r\n                        })\r\n                        ).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                delete vm.viewModel.ParentWorkItem;\r\n                                vm.viewModel.set(\"isDirty\", true);\r\n                                vm.view.controller.isParent = false;\r\n                                view.destroy();\r\n                                view = new kendo.View(built(), {\r\n                                    wrap: false,\r\n                                    init: function () {\r\n\r\n                                        setTimeout(function () {\r\n                                            DoWork();\r\n                                            if ($(\"#expanded_widget\").length === 0) {\r\n                                                remoteManageWidget.getWidget(vm);\r\n                                            }\r\n                                            if ($(\"#attachment_widget\").length === 0) {\r\n                                                headerAttachmentWidget.getWidget(vm);\r\n                                            }\r\n                                        }, 100);\r\n                                    },\r\n                                    model: vm\r\n                                });\r\n\r\n                                callback(view.render());\r\n                            }\r\n                        });\r\n                    },\r\n                    isParent: (vm.viewModel.ParentWorkItem) ? true : false\r\n                }\r\n\r\n                view.destroy();\r\n\r\n                view = new kendo.View(built(), {\r\n                    wrap: false,\r\n                    init: function () {\r\n\r\n                        setTimeout(function () {\r\n                            DoWork();\r\n                            if ($(\"#expanded_widget\").length === 0) {\r\n                                remoteManageWidget.getWidget(vm);\r\n                            }\r\n                            if ($(\"#attachment_widget\").length === 0) {\r\n                                headerAttachmentWidget.getWidget(vm);\r\n                            }\r\n                        }, 100);\r\n                    },\r\n                    model: vm\r\n                });\r\n\r\n\r\n                viewCallBack(callback(view.render()));\r\n            }\r\n\r\n            vm.view.isSLOopen = false;\r\n\r\n            vm.view.toggleSLODropdown = function () {\r\n                vm.view.isSLOopen = !vm.view.isSLOopen;\r\n\r\n                if(vm.view.isSLOopen)\r\n                    $(\".content-header__collapser__dropdown\").addClass(\"content-header__collapser__dropdown--show\");\r\n                else\r\n                    $(\".content-header__collapser__dropdown\").removeClass(\"content-header__collapser__dropdown--show\");\r\n            }\r\n\r\n            window.closeSLODropdown = function() {\r\n                vm.view.toggleSLODropdown();\r\n            }\r\n\r\n            var DoWork = function () {\r\n\r\n                if (vm.viewModel[\"SLO\"] && vm.viewModel[\"SLO\"].length > 0) {\r\n\r\n                    var first_sloObjects = [vm.viewModel[\"SLO\"][0]],\r\n                        first_sloContainer = $(\".first-header-slo-container\");\r\n\r\n                    DoWorkSLOHeader(first_sloContainer, first_sloObjects, false);\r\n\r\n                    var sloContainer = $(\".header-slo-container\"),\r\n                        sloObjects = vm.viewModel[\"SLO\"];\r\n\r\n                    DoWorkSLOHeader(sloContainer, sloObjects, true);\r\n\r\n                } else {\r\n                    $(\".first-header-slo-container\").parent().hide();\r\n                }\r\n            }\r\n\r\n            var DoWorkSLOHeader = function (sloContainer, sloObjects, isDropdown) {\r\n                var sloActive = \"SLAInstance.Status.Active\",\r\n                    sloPaused = \"SLAInstance.Status.Paused\",\r\n                    sloMet = \"SLAInstance.Status.Met\",\r\n                    sloWarning = \"SLAInstance.Status.Warning\",\r\n                    sloBreached = \"SLAInstance.Status.Breached\",\r\n                    sloNotReady = \"SLAInstance.Status.NotReady\";\r\n\r\n                for (var key in sloObjects) {\r\n                    if (sloObjects[key].DisplayName == null) continue;\r\n                    var isMet = false;\r\n                    var isPaused = false;\r\n\r\n                    //var sloTemplate = kendo.template(sloViewObj.find(\"#slo-template\").html());\r\n                    var sloTemplate = (isDropdown) ? kendo.template($(\"#header-slo-template\").html()) : kendo.template($(\"#first-header-slo-template\").html());\r\n\r\n                    var sloObj = {};\r\n                    sloObj.index = key;\r\n                    sloObj.count = vm.viewModel[\"SLO\"].length;\r\n                    sloObj.Id = sloObjects[key].DisplayName.replace(\" \", \"\");\r\n                    sloObj.Title = sloObjects[key].DisplayName;\r\n\r\n                    switch (sloObjects[key].Status) {\r\n                        case sloActive:\r\n                            sloObj.imageClass = \"fa-clock-o text-primary\";\r\n                            break;\r\n                        case sloPaused:\r\n                        case sloNotReady:\r\n                            isPaused = true;\r\n                            sloObj.imageClass = \"fa-pause text-info\";\r\n                            break;\r\n                        case sloMet:\r\n                            sloObj.imageClass = \"fa-check-circle-o text-success\";\r\n                            //vm.view.controller.isMet = true;\r\n                            isMet = true;\r\n                            break;\r\n                        case sloWarning:\r\n                            sloObj.imageClass = \"fa-exclamation-circle text-warning\";\r\n                            break;\r\n                        case sloBreached:\r\n                            sloObj.imageClass = \"fa-bell text-danger\";\r\n                            isBreach = true;\r\n                            break;\r\n                    }\r\n\r\n                    var sloImg = sloObj.imageClass; //should remove\r\n\r\n                    var clone = $('<div/>').addClass(\"content-header__collapser\");\r\n                    clone.html(sloTemplate(sloObj));\r\n\r\n                    //alert(sloObjects[key].Time.Hours);\r\n                    SLOCoundown(clone, isMet, isPaused, sloObjects[key].Time.Hours, sloObjects[key].Time.Minutes, sloObjects[key].Time.Seconds,\r\n                        eval(sloObjects[key].WarningDate), eval(sloObjects[key].ServerDatetimeNow), false);\r\n                    sloContainer.append(clone);\r\n                }\r\n            }\r\n\r\n            var SLOCoundown = function (sloCloned, isMetStat, isPaused, hours, minutes, seconds, warningDate, serverCurrentDate, isBreach) {\r\n                //force warning image\r\n                if (!isMetStat && !isBreach && warningDate <= serverCurrentDate) {\r\n                    //reset all classes \r\n                    sloCloned.find(\".header-slo-icon\").attr('class', \"header-slo-icon fa fa-exclamation-circle text-warning fa-lg\");\r\n                }\r\n\r\n                //set breached\r\n                if (!isMetStat && (seconds <= 0 && minutes <= 0 && hours <= 0)) {\r\n                    isBreach = true;\r\n                    sloCloned.find(\".header-slo-icon\").attr('class', \"header-slo-icon fa fa-bell text-danger fa-lg\");\r\n                    sloCloned.find(\".header-slo-timer\").addClass(\"text-danger\");\r\n                }\r\n\r\n                //set time in view\r\n                if (!isMetStat) {\r\n                    var secs = (Math.abs(seconds) < 10) ? \"0\" + Math.abs(seconds) : Math.abs(seconds);\r\n                    var mins = (Math.abs(minutes) < 10) ? \"0\" + Math.abs(minutes) : Math.abs(minutes);\r\n                    var hrs = (Math.abs(hours) < 10) ? \"0\" + Math.abs(hours) : Math.abs(hours);\r\n                    if (isBreach) {\r\n                        sloCloned.find(\".header-slo-timer\").html(\"\");\r\n                    } else\r\n                        sloCloned.find(\".header-slo-timer\").html((isBreach ? \"-\" : \"\") + Math.abs(hrs) + \":\" + mins + \":\" + secs);\r\n                    //return;\r\n                } else {\r\n                    sloCloned.find(\".header-slo-timer\").html(\"&nbsp;\");\r\n                    return;\r\n                }\r\n\r\n                if (isPaused) return;\r\n\r\n                //make the fancy js countdown\r\n                serverCurrentDate.setSeconds(serverCurrentDate.getSeconds() + 1);\r\n                seconds = parseInt(seconds) - 1;\r\n\r\n\r\n                if (seconds <= 0 && minutes <= 0 && hours <= 0) {\r\n                    if (seconds <= -60) {\r\n                        seconds = 0;\r\n                        minutes = parseInt(minutes) - 1;\r\n                    }\r\n\r\n                    if (minutes <= -60) {\r\n                        minutes = 0;\r\n                        hours = parseInt(hours) - 1;\r\n                    }\r\n                } else {\r\n                    if (minutes < 0) {\r\n                        minutes = 59;\r\n                        hours = parseInt(hours) - 1;\r\n                    }\r\n\r\n                    if (seconds < 0) {\r\n                        seconds = 59;\r\n                        minutes = parseInt(minutes) - 1;\r\n                    }\r\n                }\r\n\r\n\r\n                setTimeout(function () {\r\n                    SLOCoundown(sloCloned, isMetStat, isPaused, hours, minutes, seconds,\r\n                        warningDate, serverCurrentDate, isBreach);\r\n                }, 1000);\r\n            }\r\n\r\n            vm.view.doClick = function (e) {\r\n                if ($(e.currentTarget).hasClass(\"btn-icon-stack--active\"))\r\n                    $(e.currentTarget).removeClass(\"btn-icon-stack--active\");\r\n                else\r\n                    $(e.currentTarget).addClass(\"btn-icon-stack--active\");\r\n                remoteManageWidget.toggle(vm);\r\n            }\r\n\r\n            vm.view.toggleMore = function() {\r\n                $('#openmore').modal('show');\r\n\r\n                $('#openmore').on('shown.bs.modal',\r\n                    function() {\r\n                        $('.modal-backdrop').each(function (i, obj) {\r\n                            $('#openmore').before(obj);\r\n                        });\r\n                    });\r\n            }\r\n\r\n            vm.view.viewAttachments = function (e) {\r\n                if ($(e.currentTarget).hasClass(\"btn-icon-stack--active\"))\r\n                    $(e.currentTarget).removeClass(\"btn-icon-stack--active\");\r\n                else\r\n                    $(e.currentTarget).addClass(\"btn-icon-stack--active\");\r\n                headerAttachmentWidget.toggle(vm);\r\n            }\r\n\r\n            //set page <title>\r\n            document.title = vm.view.title + ' - ' + vm.view.id;\r\n\r\n            if (!_.isNull(vm.viewModel.ParentWorkItem) &&\r\n                !_.isUndefined(vm.viewModel.ParentWorkItem)) {\r\n                vm.view.buildParentHeaderView(function(tpl) {\r\n                });\r\n            } else {\r\n                vm.view.controller = {\r\n                    isParent: (vm.viewModel.ParentWorkItem) ? true : false\r\n                }\r\n            }\r\n\r\n            $('body').click(function (e) {\r\n\r\n                if (e.target.id === 'expanded_widget' || $(e.target).parents('#expanded_widget').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'remoteManageBtn' || $(e.target).parents('#remoteManageBtn').length > 0)\r\n                    return;\r\n\r\n                if ($(e.target).hasClass(\"support-tools__widget__action\") || $(e.target).parents('.support-tools__widget__action').length > 0)\r\n                    return;\r\n\r\n                if ($(e.target).hasClass(\"multi-query__list__selected-items\") || $(e.target).parents('.multi-query__list__selected-items').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'attachment_widget' || $(e.target).parents('#attachment_widget').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'headerAttachmentContainer' || $(e.target).parents('#headerAttachmentContainer').length > 0)\r\n                    return;\r\n\r\n                if (e.target.id === 'headerAttachmentBtn' || $(e.target).parents('#headerAttachmentBtn').length > 0)\r\n                    return;\r\n\r\n                if ($(e.target).hasClass(\"thumbnail-file\") || $(e.target).parents('.thumbnail-file').length > 0)\r\n                    return;\r\n\r\n                if (vm.widget) vm.widget.open = false;\r\n                $(\"#remoteManageBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#expanded_widget\").removeClass('content-header__flyout--open');\r\n                $(\"#content-header-backdrop\").removeClass('content-header__flyout__overlay--open');\r\n\r\n                if (vm.attachmentWidget) vm.attachmentWidget.open = false;\r\n                $(\"#headerAttachmentBtn\").removeClass('btn-icon-stack--active');\r\n                $(\"#attachment_widget\").removeClass('content-header__flyout--open');\r\n            });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/status/view.html',[],function () { return '<h1 class=\"page_title\">\\r\\n    <span data-bind=\"text: view.title\"></span><span>-</span><span class=\"uppercase\" data-bind=\"text: view.id\"></span>\\r\\n    <span class=\"cursor-pointer\" id=\"viewAttachments\" data-bind=\"click: view.viewAttachments, visible: view.filesCount > 0\"><i class=\"fa fa-paperclip text-primary\" style=\"font-size: inherit\"></i></span>\\r\\n    <span class=\"label label-info label-heading\" id=\"statusname\" data-bind=\"visible: view.statusVisible, text: viewModel.Status.Name\"></span>\\r\\n    <span class=\"label label-heading\" data-bind=\"visible: viewModel.IsParent\"><img src=\"/Content/Images/Icons/WorkItemsStatus/workitem-parent-icon.svg\"></span>\\r\\n</h2>\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/status/controller',['require','text!forms/header/status/view.html','forms/flyout/fileAttachmentsFlyout/controller'],function (require) {\r\n    var tpl = require(\"text!forms/header/status/view.html\");\r\n    var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n            \r\n            //modify vm for this view\r\n            vm.view.viewAttachments = function () {\r\n\r\n                var flyoutWindow = attachmentPickerFlyout.getPopup(vm);\r\n                flyoutWindow.open();\r\n            }\r\n\r\n            vm.view.filesCount = vm.viewModel.FileAttachment.length;\r\n\r\n            vm.view.statusVisible = function () {\r\n                if (vm.newWI) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            //set page <title>\r\n            document.title = vm.view.title + ' - ' + vm.view.id;\r\n\r\n            var view = new kendo.View(built(), { wrap: false, model: vm });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/relationships/controller',['require','text!forms/header/relationships/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/relationships/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //we need to have a container to add to via task\r\n            var container = $('<div/>').attr(\"id\", \"parent-header-space\");\r\n            var view = new kendo.View(container, { wrapper: false });\r\n           \r\n            //this function is called from the link parent task so we need to allow callback function to be an input\r\n            vm.view.buildParentHeaderView = function (viewCallBack) {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                \r\n                //modify vm for this view\r\n                vm.view.controller = {\r\n                    parentIncident: (vm.type === \"ReleaseRecord\") ? localization.ParentRecord : localization.Parentincident,\r\n                    editHref: \"/\"+vm.type+\"/Edit/\" + vm.viewModel.ParentWorkItem.Id + \"/\",\r\n                    editLink: vm.viewModel.ParentWorkItem.Id + \"-\" + vm.viewModel.ParentWorkItem.Title,\r\n                    unlinkParent: function () {\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: localization.UnlinkToParent,\r\n                            message: localization.SureUnlinkToParent\r\n                        })\r\n                        ).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                delete vm.viewModel.ParentWorkItem;\r\n                                vm.viewModel.set(\"isDirty\", true);\r\n                                view.content.hide();\r\n                            } else {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                viewCallBack(built());\r\n            }\r\n\r\n            if (!_.isNull(vm.viewModel.ParentWorkItem) &&\r\n                !_.isUndefined(vm.viewModel.ParentWorkItem)) {\r\n                vm.view.buildParentHeaderView(function (tpl) {\r\n                    //destroy default container\r\n                    view.destroy();\r\n\r\n                    container.append(tpl);\r\n                    view = new kendo.View(container, { wrapper: false, model: vm });\r\n                    callback(view.render());\r\n                });\r\n            } else {\r\n                callback(view.render());\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/slo/view.html',[],function () { return '<div class=\"slo-container pull-right\">\\r\\n\\r\\n</div>\\r\\n<script id=\"slo-template\" type=\"text/x-kendo-template\">\\r\\n        <li class=\"slo-timer\"></li>\\r\\n        <li class=\"slo-icon fa #: imageClass # fa-lg\"></li>\\r\\n        <li class=\"slo-title\">#: Title #</li>\\r\\n</script>';});\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/slo/controller',['require','text!forms/header/slo/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/slo/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function(vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            if (vm.isAnalyst) {\r\n                var built = _.template(tpl);\r\n\r\n                var view = new kendo.View(built(), {\r\n                    wrap: false,\r\n                    init: function() {\r\n                        setTimeout(function() { DoWork(); }, 100);\r\n                    },\r\n                    model: vm\r\n                });\r\n                view.render(); //so we can manipulate it\r\n\r\n                var DoWork = function() {\r\n\r\n                    if (vm.viewModel[\"SLO\"] == null) return;\r\n\r\n                    var sloViewObj = view.element,\r\n                        sloObjects = vm.viewModel[\"SLO\"],\r\n                        sloActive = \"SLAInstance.Status.Active\",\r\n                        sloPaused = \"SLAInstance.Status.Paused\",\r\n                        sloMet = \"SLAInstance.Status.Met\",\r\n                        sloWarning = \"SLAInstance.Status.Warning\",\r\n                        sloBreached = \"SLAInstance.Status.Breached\",\r\n                        sloNotReady = \"SLAInstance.Status.NotReady\";\r\n\r\n                    //var sloContainer = sloViewObj.find(\".slo-container\");\r\n                    var sloContainer = $(\".slo-container\");\r\n\r\n                    for (var key in sloObjects) {\r\n                        if (sloObjects[key].DisplayName == null) continue;\r\n                        var isMet = false;\r\n                        var isPaused = false;\r\n\r\n                        //var sloTemplate = kendo.template(sloViewObj.find(\"#slo-template\").html());\r\n                        var sloTemplate = kendo.template($(\"#slo-template\").html());\r\n\r\n                        var sloObj = {};\r\n                        sloObj.Id = sloObjects[key].DisplayName.replace(\" \", \"\");\r\n                        sloObj.Title = sloObjects[key].DisplayName;\r\n\r\n                        switch (sloObjects[key].Status) {\r\n                        case sloActive:\r\n                            sloObj.imageClass = \"fa-clock-o text-primary\";\r\n                            break;\r\n                        case sloPaused:\r\n                        case sloNotReady:\r\n                            isPaused = true;\r\n                            sloObj.imageClass = \"fa-pause text-info\";\r\n                            break;\r\n                        case sloMet:\r\n                            sloObj.imageClass = \"fa-check-circle-o text-success\";\r\n                            //vm.view.controller.isMet = true;\r\n                            isMet = true;\r\n                            break;\r\n                        case sloWarning:\r\n                            sloObj.imageClass = \"fa-exclamation-circle text-warning\";\r\n                            break;\r\n                        case sloBreached:\r\n                            sloObj.imageClass = \"fa-bell text-danger\";\r\n                            isBreach = true;\r\n                            break;\r\n                        }\r\n\r\n                        var sloImg = sloObj.imageClass; //should remove\r\n\r\n                        var clone = $('<ul/>').addClass(\"slo-status-item\");\r\n                        clone.html(sloTemplate(sloObj));\r\n\r\n                        //alert(sloObjects[key].Time.Hours);\r\n                        SLOCoundown(clone, isMet, isPaused, sloObjects[key].Time.Hours, sloObjects[key].Time.Minutes, sloObjects[key].Time.Seconds,\r\n                            eval(sloObjects[key].WarningDate), eval(sloObjects[key].ServerDatetimeNow), false);\r\n                        sloContainer.append(clone);\r\n                    }\r\n                }\r\n\r\n                var SLOCoundown = function(sloCloned, isMetStat, isPaused, hours, minutes, seconds, warningDate, serverCurrentDate, isBreach) {\r\n                    //force warning image\r\n                    if (!isMetStat && !isBreach && warningDate <= serverCurrentDate) {\r\n                        //reset all classes \r\n                        sloCloned.find(\".slo-icon\").attr('class', \"slo-icon fa fa-exclamation-circle text-warning fa-lg\");\r\n                    }\r\n\r\n                    //set breached\r\n                    if (!isMetStat && (seconds <= 0 && minutes <= 0 && hours <= 0)) {\r\n                        isBreach = true;\r\n                        sloCloned.find(\".slo-icon\").attr('class', \"slo-icon fa fa-bell text-danger fa-lg\");\r\n                        sloCloned.find(\".slo-timer\").addClass(\"text-danger\");\r\n                    }\r\n\r\n                    //set time in view\r\n                    if (!isMetStat) {\r\n                        var secs = (Math.abs(seconds) < 10) ? \"0\" + Math.abs(seconds) : Math.abs(seconds);\r\n                        var mins = (Math.abs(minutes) < 10) ? \"0\" + Math.abs(minutes) : Math.abs(minutes);\r\n                        var hrs = (Math.abs(hours) < 10) ? \"0\" + Math.abs(hours) : Math.abs(hours);\r\n                        if (isBreach) {\r\n                            sloCloned.find(\".slo-timer\").html(\"\");\r\n                        } else\r\n                            sloCloned.find(\".slo-timer\").html((isBreach ? \"-\" : \"\") + Math.abs(hrs) + \":\" + mins + \":\" + secs);\r\n                        //return;\r\n                    } else {\r\n                        sloCloned.find(\".slo-timer\").html(\"&nbsp;\");\r\n                        return;\r\n                    }\r\n\r\n                    if (isPaused) return;\r\n\r\n                    //make the fancy js countdown\r\n                    serverCurrentDate.setSeconds(serverCurrentDate.getSeconds() + 1);\r\n                    seconds = parseInt(seconds) - 1;\r\n\r\n\r\n                    if (seconds <= 0 && minutes <= 0 && hours <= 0) {\r\n                        if (seconds <= -60) {\r\n                            seconds = 0;\r\n                            minutes = parseInt(minutes) - 1;\r\n                        }\r\n\r\n                        if (minutes <= -60) {\r\n                            minutes = 0;\r\n                            hours = parseInt(hours) - 1;\r\n                        }\r\n                    } else {\r\n                        if (minutes < 0) {\r\n                            minutes = 59;\r\n                            hours = parseInt(hours) - 1;\r\n                        }\r\n\r\n                        if (seconds < 0) {\r\n                            seconds = 59;\r\n                            minutes = parseInt(minutes) - 1;\r\n                        }\r\n                    }\r\n\r\n\r\n                    setTimeout(function() {\r\n                        SLOCoundown(sloCloned, isMetStat, isPaused, hours, minutes, seconds,\r\n                            warningDate, serverCurrentDate, isBreach);\r\n                    }, 1000);\r\n                }\r\n\r\n\r\n                callback(view.render());\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\r\n\n","\ndefine('text!forms/header/spacer/view.html',[],function () { return '<div></div>';});\n\n","/**\r\nHeader Spacer\r\n**/\r\ndefine('forms/header/spacer/controller',['require','text!forms/header/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/spacer/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //modify vm for this view\r\n\r\n            var view = new kendo.View(built(), { model: vm });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/title/view.html',[],function () { return '<h1 class=\"page_title\">\\r\\n    <span data-bind=\"html: title\"></span>\\r\\n</h1>\\r\\n\\r\\n';});\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/title/controller',['require','text!forms/header/title/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/title/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            vm.title = (!_.isUndefined(localization[vm.type]) && [vm.type].length > 0) ? localization[vm.type] : vm.type;\r\n\r\n            //set page <title>\r\n            document.title = vm.title;\r\n\r\n            var view = new kendo.View(built(), { wrap: false, model: vm });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/approval/view.html',[],function () { return '<div class=\"container-fluid\" data-bind=\"visible: isDesktopView\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-6 col-xs-12\">\\r\\n            <h1 class=\"page_title\">\\r\\n                <span data-bind=\"text: title\"></span><span>-</span><span class=\"uppercase\" data-bind=\"text: workItemId\"></span>\\r\\n                <span class=\"label label-info label-heading\" id=\"statusName\" data-bind=\"text: statusName\"></span>\\r\\n                <span class=\"label label-heading\" data-bind=\"visible: isParent\"><img src=\"/Content/Images/Icons/WorkItemsStatus/workitem-parent-icon.svg\"></span>\\r\\n            </h1>\\r\\n        </div>\\r\\n        <div class=\"col-md-6 col-xs-12\">       \\r\\n            <div class=\"pull-right ra-approval-space\">\\r\\n                <!-- Support group -->\\r\\n                <div class=\"pull-left\">\\r\\n                    <div class=\"form-control-picker input-sm ra-input\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-bind=\"ciresonDropDownTree: SupportGroupEnumId, value: SupportGroupFieldValue, visible: SupportGroupVisible, click: onChangeSupportGroup, options: {disabled:disabledMAButtons}\"\\r\\n                         data-role=\"SupportGroupField\"\\r\\n                         data-placeholder=\"SupportGroup\"></div>\\r\\n                </div>\\r\\n                <div class=\"pull-right\">\\r\\n                    <!--RA buttons-->\\r\\n                    <button class=\"btn btn-success\"\\r\\n                            data-bind=\"events: { click: onApproveClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                        <%= localization.Approve %>\\r\\n                    </button>\\r\\n                    <button class=\"btn btn-danger\"\\r\\n                            data-bind=\"events: { click: onRejectClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                        <%= localization.Reject %>\\r\\n                    </button>\\r\\n                    <!--RA buttons-->\\r\\n                    <!--MA buttons-->\\r\\n                    <button class=\"btn btn-success\"\\r\\n                            data-bind=\"events: { click: onCompleteClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                        <%= localization.Completed %>\\r\\n                    </button>\\r\\n                    <button class=\"btn btn-danger\"\\r\\n                            data-bind=\"events: { click: onFailClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                        <%= localization.Failed %>\\r\\n                    </button>\\r\\n                    <!--MA buttons-->\\r\\n                    <span>\\r\\n                        <button class=\"btn-link\" data-bind=\"disabled:disablePrevious, events:{click: previousClick}\"><i class=\"fa fa-chevron-left\"></i></button>\\r\\n                        <span data-bind=\"html: pageText\"></span>\\r\\n                        <button class=\"btn-link\" data-bind=\"disabled:disableNext, events:{click: nextClick}\"><i class=\"fa fa-chevron-right\"></i></button>\\r\\n                    </span>\\r\\n                </div>\\r\\n             </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"container-fluid\" data-bind=\"visible: isMobileView\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space pull-right\">\\r\\n                <div>\\r\\n                    <button class=\"btn-link\" data-bind=\"disabled:disablePrevious, events:{click: previousClick}\"><i class=\"fa fa-chevron-left\"></i></button>\\r\\n                    <span data-bind=\"html: pageText\"></span>\\r\\n                    <button class=\"btn-link\" data-bind=\"disabled:disableNext, events:{click: nextClick}\"><i class=\"fa fa-chevron-right\"></i></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <!-- Support group -->\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"form-control-picker ra-input\"\\r\\n                 data-url=\"/api/V3/Enum/GetList\"\\r\\n                 data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                 data-bind=\"ciresonDropDownTree: SupportGroupEnumId, value: SupportGroupFieldValue, visible: SupportGroupVisible, click: onChangeSupportGroup\"\\r\\n                 data-role=\"SupportGroupField\"\\r\\n                 data-placeholder=\"SupportGroup\"></div>\\r\\n        </div>\\r\\n        <!--RA buttons-->\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-success\"\\r\\n                        data-bind=\"events: { click: onApproveClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                    <%= localization.Approve %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-danger\"\\r\\n                        data-bind=\"events: { click: onRejectClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                    <%= localization.Reject %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--RA buttons-->\\r\\n\\r\\n        <!--MA buttons-->\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-success\"\\r\\n                        data-bind=\"events: { click: onCompleteClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                    <%= localization.Completed %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-danger\"\\r\\n                        data-bind=\"events: { click: onFailClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                    <%= localization.Failed %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--MA buttons-->\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-6 col-xs-12\">\\r\\n            <h1 class=\"page_title\">\\r\\n                <span data-bind=\"text: title\"></span><span>-</span><span class=\"uppercase\" data-bind=\"text: workItemId\"></span>\\r\\n                <span class=\"label label-info label-heading\" id=\"statusname\" data-bind=\"text: statusName\"></span>\\r\\n                <span class=\"label label-heading\" data-bind=\"visible: isParent\"><img src=\"/Content/Images/Icons/WorkItemsStatus/workitem-parent-icon.svg\"></span>\\r\\n            </h1>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n';});\n\n","/**\r\nRA Approval controls\r\n**/\r\ndefine('forms/header/approval/controller',['require','text!forms/header/approval/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/approval/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n            var rejected = \"107fc6bd-2bb3-0282-4425-f43b5b32ef13\";\r\n            var approve = \"0e856c6c-04e5-0a8e-6041-bc7715b4747e\";\r\n            var notYetVoted = \"dae75d12-89ac-a8d8-4fe3-516c2a6a26f7\";\r\n\r\n\r\n            vm.view.approvalModel = new kendo.observable({\r\n                decisionEnumId: null,\r\n                comments: \"\",\r\n                onRejectClick: function () {\r\n                    vm.view.approvalModel.decisionEnumId = rejected;\r\n                    this.updateStatus();\r\n                },\r\n                onApproveClick: function () {\r\n                    vm.view.approvalModel.decisionEnumId = approve;\r\n\r\n                    this.updateStatus();\r\n                },\r\n                onCompleteClick: function () {\r\n                    var status = { Id: app.constants.workItemStatuses.ManualActivity.Completed, Name: localization.Completed };\r\n                    vm.view.approvalModel.updateManualActivity(status);\r\n                },\r\n                onFailClick: function () {\r\n                    var status = { Id: app.constants.workItemStatuses.ManualActivity.Failed, Name: localization.Failed }\r\n                    vm.view.approvalModel.updateManualActivity(status);\r\n                },\r\n                updateStatus: function () {\r\n                    if (vm.view.approvalModel.isReviewActivity) {\r\n                        vm.view.approvalModel.updateReviewActivity();\r\n                    }\r\n\r\n                    if (vm.view.approvalModel.isManualActivity) {\r\n                        vm.view.approvalModel.updateManualActivity();\r\n                    }\r\n                },\r\n                updateReviewActivity: function () {\r\n                    $.when(kendo.ui.ExtYesNoTextAreaDialog.show({\r\n                        title: localization.Comments,\r\n                        message: localization.DoYouHaveComments,\r\n                        required: true,\r\n                        height: 250\r\n                    })\r\n                  ).done(function (response) {\r\n                      if (response.button === \"yes\") {\r\n                          vm.view.approvalModel.comments = response.input;\r\n                      }\r\n\r\n\r\n                      _.each(pageForm.viewModel.Reviewer, function (reviewItem) {\r\n\r\n                          var group = _.find(pageForm.userGroup, function (group) {\r\n                              return (!_.isUndefined(reviewItem.User)) ? reviewItem.User.BaseId == group.Id : false;\r\n                          });\r\n\r\n                          if (reviewItem.Decision.Id == notYetVoted\r\n                              && ((!_.isUndefined(reviewItem.User) && reviewItem.User.BaseId == session.user.Id)\r\n                              || !_.isUndefined(group))) {\r\n\r\n                              var comment = \"\";\r\n                              if (_.isNull(reviewItem.Comments)) {\r\n                                  comment = vm.view.approvalModel.comments;\r\n                              }\r\n                              else {\r\n                                  comment = reviewItem.Comments + \" \" + vm.view.approvalModel.comments;\r\n                              }\r\n\r\n                              reviewItem.VotedBy = {};\r\n                              reviewItem.VotedBy.BaseId = session.user.Id;\r\n                              reviewItem.Decision.set(\"Id\", vm.view.approvalModel.decisionEnumId);\r\n                              reviewItem.set(\"Comments\", comment);\r\n                              reviewItem.set(\"DecisionDate\", new Date().toISOString());\r\n\r\n                          }\r\n                      });\r\n\r\n                      //exclude parent workitem details\r\n                      if (pageForm.viewModel.ParentWorkItem) delete pageForm.viewModel.ParentWorkItem;\r\n\r\n                      vm.view.approvalModel.save();\r\n                  });\r\n                },\r\n                updateManualActivity: function (status) {\r\n                    $.when(kendo.ui.ExtYesNoTextAreaDialog.show({\r\n                        title: session.consoleSetting.RequireImplementationNotes ? localization.ImplementationdetailsRequired : localization.Implementationdetails,\r\n                        buttons: [\r\n                            {\r\n                                name: localization.Save,\r\n                                click: function (e) {\r\n                                    var $inputText = $(\"#extInputDialog .k-ext-input-dialog-input\");\r\n                                    var comment = $(\"#extInputDialog .k-ext-input-dialog-input\").val();\r\n                                    var currentNotes = !_.isNull(pageForm.viewModel.Notes) ? pageForm.viewModel.Notes : \"\";\r\n\r\n                                    if (e.dialog.options.required && $inputText.val().length == 0) {\r\n                                        $inputText.addClass(e.dialog.options.requiredCss);\r\n                                    } else {\r\n                                        //exclude parent workitem details\r\n                                        if (pageForm.viewModel.ParentWorkItem) delete pageForm.viewModel.ParentWorkItem;\r\n\r\n                                        //set status \r\n                                        pageForm.viewModel.set(\"Status\", status)\r\n\r\n                                        //set notes\r\n                                        pageForm.viewModel.set(\"Notes\", currentNotes + \"\\n\" + comment);\r\n                                        vm.view.approvalModel.save();\r\n                                        e.dialog.close();\r\n                                    }\r\n                                },\r\n                                cls: \"btn-primary\"\r\n                            },\r\n                            {\r\n                                name: localization.Cancel,\r\n                                click: function (e) {\r\n                                    e.dialog.close();\r\n                                }\r\n                        }],\r\n                        required: session.consoleSetting.RequireImplementationNotes,\r\n                        requiredCss: \"k-ext-required\"\r\n                    })\r\n                 );\r\n                },\r\n                save: function () {\r\n                    var postData = encodeURIComponent(JSON.stringify({\r\n                        isDirty: true,\r\n                        current: pageForm.viewModel.toJSON(),\r\n                        original: pageForm.jsonRaw\r\n                    }));\r\n\r\n                    $.ajax({\r\n                        type: 'POST',\r\n                        dataType: 'text',\r\n                        url: pageForm.saveUrl,\r\n                        data: \"formJson=\" + postData,\r\n                        success: function (data, status, xhr) {\r\n                            location.reload();\r\n                            if (data.search('loginForm') < 0) { // Logged out check    \r\n                                var successMessage = vm.view.approvalModel.decisionEnumId == \"0e856c6c-04e5-0a8e-6041-bc7715b4747e\" ?\r\n                                    localization.ReviewActivityApprovedMessage : localization.ReviewActivityRejectedMessage;\r\n                                \r\n                                if (pageForm.viewModel.ClassName == \"System.WorkItem.Activity.ManualActivity\") {\r\n                                    successMessage = (pageForm.viewModel.Status.Id == app.constants.workItemStatuses.ManualActivity.Completed) ?\r\n                                                    localization.ManualActivityCompletedMessage :\r\n                                                    localization.ManualActivityFailedMessage;\r\n                                }\r\n\r\n                                app.lib.message.add(successMessage.replace(\"{0}\", vm.viewModel.Id), \"success\");\r\n                                app.lib.handleMessages();\r\n                            } else {\r\n                                //session expired\r\n                                window.location = \"/Login/Login?ReturnUrl=\" + window.location.pathname;\r\n                            }\r\n                        },\r\n                        error: function (xhr, ajaxOptions, thrownError) {\r\n                            //do we have a data conflict\r\n                            if (xhr.status == 409) {\r\n\r\n                                $.when(kendo.ui.ExtYesNoDialog.show({\r\n                                    title: localization.DataConflict,\r\n                                    message: localization.DataConflictError + \"<br/><br/><small>(\" + localization.DataConflictDescription + \")</small>\",\r\n                                    icon: \"fa fa-exchange text-danger\",\r\n                                    width: \"500px\",\r\n                                    height: \"175px\"\r\n                                })\r\n                                ).done(function (response) {\r\n                                    if (response.button === \"yes\") {\r\n                                        //open in new tab, may not work this way in all browsers\r\n                                        window.open(window.location.pathname);\r\n                                    } else {\r\n                                        //refresh page\r\n                                        location.href = window.location.pathname;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (xhr.status == 503) { //SDK unavailable\r\n                                var jsonRsp = xhr.responseText;\r\n                                app.lib.log(jsonRsp);\r\n                                //determine error Message\r\n                                var errorMsg = localization.ReconnectRequired;\r\n                                if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                    errorMsg = jsonRsp.exception;\r\n                                }\r\n                                //alert the user\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.Failed,\r\n                                    message: errorMsg,\r\n                                    icon: \"fa fa-times-circle text-danger\"\r\n                                });\r\n                            } else if (xhr.status == 403) { //user does not have access\r\n                                var jsonRsp = xhr.responseText;\r\n                                app.lib.log(jsonRsp);\r\n                                //determine error Message\r\n                                var errorMsg = localization.RequestFailed;\r\n                                if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                    errorMsg = jsonRsp.exception;\r\n                                }\r\n                                //alert the user\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.Failed,\r\n                                    message: errorMsg,\r\n                                    icon: \"fa fa-times-circle text-danger\"\r\n                                });\r\n\r\n                            } else {\r\n                                console && app.lib.log(localization.RequestFailed);\r\n                                app.lib.log(thrownError);\r\n\r\n                                var jsonRsp = xhr.responseText;\r\n                                app.lib.log(jsonRsp);\r\n\r\n                                var errorMsg = localization.RequestFailed;\r\n                                if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                    errorMsg = jsonRsp.exception;\r\n                                }\r\n\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.ErrorDescription,\r\n                                    message: errorMsg,\r\n                                    icon: \"fa fa-exclamation\"\r\n                                });\r\n                            }\r\n                        },\r\n                        processData: false,\r\n                        async: false\r\n                    });\r\n                },\r\n                pageDataSource: new kendo.data.DataSource({\r\n                    serverFiltering: true,\r\n                    serverSorting: true,\r\n                    transport: {\r\n                        read: {\r\n                            url: pageForm.viewModel.ClassTypeId.toLowerCase() == \"bfd90aaa-80dd-0fbb-6eaf-65d92c1d8e36\" ? \"/api/V3/WorkItem/GetGridWorkItemsMyApprovals/\" : \"/api/V3/WorkItem/GetGridWorkItemsMyManualActivities/\",\r\n                            data: {\r\n                                userId: session.user.Id,\r\n                                isScoped: session.user.Security.IsWorkItemScoped,\r\n                                showInActives: false\r\n                            },\r\n                            cache: false\r\n                        }\r\n                    },\r\n                    requestEnd: function (e) {\r\n                        vm.view.approvalModel.updatePageDetails(e.response);\r\n                    }\r\n                }),\r\n                updatePageDetails: function (data) {\r\n                    var index = 1;\r\n                    var pageCount = (data) ? data.length : 0;\r\n\r\n                    _.find(data, function (item, idx) {\r\n                        if (item.Id == vm.viewModel.Id) {\r\n                            index = idx;\r\n                        }\r\n                    });\r\n\r\n                    var pageString = (index + 1) + \" / \" + pageCount;\r\n\r\n                    vm.view.approvalModel.set(\"currentPage\", index);\r\n                    vm.view.approvalModel.set(\"toatPage\", pageCount);\r\n                    vm.view.approvalModel.set(\"pageText\", pageString);\r\n                    vm.view.approvalModel.set(\"disablePrevious\", (index == 0) ? true : false);\r\n                    vm.view.approvalModel.set(\"disableNext\", (index == pageCount - 1) ? true : false);\r\n\r\n                    var statusInProgress = vm.viewModel.Status.Id === \"11fc3cef-15e5-bca4-dee0-9c1155ec8d83\";\r\n\r\n                    if (!statusInProgress || (!_.isUndefined(vm.viewModel.reviewDetails) && (vm.viewModel.reviewDetails.fullDetails.Decision.Id == approve || vm.viewModel.reviewDetails.fullDetails.Decision.Id == rejected) && (vm.viewModel.reviewDetails.fullDetails.User.BaseId == session.user.Id))) {\r\n                        vm.view.approvalModel.set(\"disabledButtons\", true);\r\n                    }\r\n                    else {\r\n                        var review = _.find(pageForm.viewModel.Reviewer, function (reviewItem) {\r\n                            if (_.isUndefined(reviewItem.User)) {\r\n                                return null;\r\n                            }\r\n                            var group = _.find(pageForm.userGroup, function (group) {\r\n                                return reviewItem.User.BaseId == group.Id;\r\n                            });\r\n\r\n                            return !_.isUndefined(reviewItem.User) && reviewItem.Decision.Id == notYetVoted && (reviewItem.User.BaseId == session.user.Id || !_.isUndefined(group));\r\n                        });\r\n\r\n                        if (!review) return;\r\n\r\n                        if (!statusInProgress || (_.isUndefined(review) || _.isNull(review))) {\r\n                            vm.view.approvalModel.set(\"disabledButtons\", true);\r\n                        }\r\n                    }\r\n                },\r\n                nextClick: function () {\r\n                    var index = vm.view.approvalModel.get(\"currentPage\") + 1;\r\n                    vm.view.approvalModel.navigate(index);\r\n                },\r\n                previousClick: function () {\r\n                    var index = vm.view.approvalModel.get(\"currentPage\") - 1;\r\n                    vm.view.approvalModel.navigate(index);\r\n                },\r\n                navigate: function (index) {\r\n                    vm.view.approvalModel.pageDataSource.read();\r\n                    var dSource = vm.view.approvalModel.pageDataSource.data();\r\n\r\n                    var nextItem = dSource[index];\r\n                    var url = vm.view.approvalModel.isReviewActivity ? \"/ReviewActivity/Approval/\" : \"/ManualActivity/Complete/\";\r\n                    var approvalUrl = url + nextItem.Id;\r\n\r\n                    location.href = approvalUrl;\r\n                },\r\n                onChangeSupportGroup: function() {\r\n                    vm.viewModel[pageForm.MASupportGroupField] = vm.view.approvalModel.SupportGroupFieldValue;\r\n                },\r\n                currentPage: 0,\r\n                toatPage: 0,\r\n                pageText: \"\",\r\n                disablePrevious: false,\r\n                disableNext: false,\r\n                title: vm.view.title,\r\n                workItemId: vm.viewModel.Id,\r\n                statusVisible: vm.view.statusVisible,\r\n                statusName: vm.viewModel.Status.Name,\r\n                isParent: vm.viewModel.IsParent,\r\n                isDesktopView: !app.isMobile(),\r\n                isMobileView: app.isMobile(),\r\n                disabledButtons: false,\r\n                reviewResult: null,\r\n                reviewId: 0,\r\n                SupportGroupVisible: pageForm.MASupportGroupField !== \"\",\r\n                SupportGroupEnumId: pageForm.MASupportGroupGuid,\r\n                SupportGroupFieldValue: vm.viewModel[pageForm.MASupportGroupField],\r\n                isManualActivity: pageForm.viewModel.ClassName == \"System.WorkItem.Activity.ManualActivity\",\r\n                isReviewActivity: pageForm.viewModel.ClassName == \"System.WorkItem.Activity.ReviewActivity\",\r\n                disabledMAButtons: pageForm.viewModel.Status.Id == app.constants.workItemStatuses.ManualActivity.Completed ||\r\n                    pageForm.viewModel.Status.Id == app.constants.workItemStatuses.ManualActivity.Failed\r\n                \r\n            });\r\n\r\n            vm.view.approvalModel.pageDataSource.read();\r\n            var view = new kendo.View(built(), { wrap: false, model: vm.view.approvalModel });\r\n\r\n            callback(view.render());\r\n\r\n\r\n        }\r\n    }\r\n    \r\n    return definition;\r\n\r\n});\n","define('forms/headerBuilder',[\r\n    \"forms/header/sticky/controller\",\r\n    \"forms/header/status/controller\",\r\n    \"forms/header/relationships/controller\",\r\n    \"forms/header/slo/controller\",\r\n    \"forms/header/spacer/controller\",\r\n    \"forms/header/title/controller\",\r\n    \"forms/header/approval/controller\"\r\n\r\n], function (\r\n    sticky,\r\n    status,\r\n    relationships,\r\n    slo,\r\n    spacer,\r\n    title,\r\n    approval\r\n        ) {\r\n\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            //loop all rows in header definition\r\n            _.each(vm.headerTemplate.rows, function (row) {\r\n                //create row dom element\r\n                var rowElm = $('<div/>').addClass(\"row\");\r\n                //loop all cols in def\r\n                _.each(row.columns, function (column) {\r\n                    //create col element\r\n                    var colElm = $('<div/>').addClass(column.Class);\r\n\r\n                    // Decide on Template\r\n                    eval(\"var _obj = \" + column.View + \";\");\r\n                    // Check if Template Exists\r\n                    if (!_obj) {\r\n                        //TODO: should we maybe just default to the string object?\r\n                        throw Exception(column.View + \" is not part of the templating system\");\r\n                        return false;\r\n                    }\r\n\r\n                    _obj.build(vm, column, function (view) {\r\n                        //callback(view);\r\n                        colElm.append(view);\r\n                        colElm.appendTo(rowElm);\r\n                    });\r\n\r\n\r\n                });\r\n\r\n                callback(rowElm);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/structure/formPanel/view.html',[],function () { return '<div class=\"form-panel\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nForm Panel\r\n**/\r\ndefine('forms/structure/formPanel/controller',['require','text!forms/structure/formPanel/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/formPanel/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/formPanelFull/view.html',[],function () { return '<div class=\"form-panel\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nForm Panel\r\n**/\r\ndefine('forms/structure/formPanelFull/controller',['require','text!forms/structure/formPanelFull/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/formPanelFull/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/customFieldGroup/view.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"panel panel-default no-shadow\">\\r\\n        <div class=\"panel-heading\"><%= name %></div>\\r\\n        <div class=\"panel-body append-here\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nCustom Field Group\r\n**/\r\ndefine('forms/structure/customFieldGroup/controller',['require','text!forms/structure/customFieldGroup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/customFieldGroup/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            if (!_.isUndefined(node.Visible) && !node.Visible) {\r\n                return;\r\n            }\r\n\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/customFieldGroupRow/view.html',[],function () { return '<div class=\"row\"></div>';});\n\n","/**\r\ncustomFieldGroupRow\r\n**/\r\ndefine('forms/structure/customFieldGroupRow/controller',['require','text!forms/structure/customFieldGroupRow/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/customFieldGroupRow/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            callback(tpl);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/columnField/view.html',[],function () { return '<div class=\"col-md-<%= ColSize %>\"></div>';});\n\n","/**\r\ncolumnField\r\n**/\r\ndefine('forms/structure/columnField/controller',['require','text!forms/structure/columnField/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/columnField/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/tab/view.html',[],function () { return '<div class=\"tab-content\"></div>';});\n\n","/**\r\nTab List\r\n**/\r\ndefine('forms/structure/tab/controller',['require','text!forms/structure/tab/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/tab/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/tabPane/view.html',[],function () { return '<div class=\"tab-pane <%= active %>\" id=\"<%= tabId %>\"></div>   ';});\n\n","/**\r\nTab pane\r\n**/\r\ndefine('forms/structure/tabPane/controller',['require','text!forms/structure/tabPane/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/tabPane/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/structure/tabNavigation/view.html',[],function () { return '<ul class=\"nav nav-pills\" id=\"myTab\" data-bind=\"tabDrop:true\"></ul>';});\n\n","\ndefine('text!forms/structure/tabNavigation/mobile.html',[],function () { return '<div class=\"nav-dropdown\">\\r\\n    <span class=\"nav-dropdown-default\"></span>\\r\\n    <div class=\"nav-dropdown-trigger\">\\r\\n        <i class=\"fa fa-sort-desc\"></i>\\r\\n    </div>\\r\\n    <div class=\"nav-dropdown-content\">\\r\\n        <ul id=\"myTab\" data-bind=\"navDrop:true\"></ul>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nTab navigation\r\n**/\r\ndefine('forms/structure/tabNavigation/controller',['require','text!forms/structure/tabNavigation/view.html','text!forms/structure/tabNavigation/mobile.html'],function (require) {\r\n    var dtpl = require(\"text!forms/structure/tabNavigation/view.html\");\r\n    var mtpl = require(\"text!forms/structure/tabNavigation/mobile.html\");\r\n    \r\n    var tpl = (app.isMobile()) ? mtpl : dtpl;\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/structure/tabData/view.html',[],function () { return '<li class=\"<%= active %>\"><a href=\"#<%= tabId %>\" data-toggle=\"tab\" data-cid=\"<%= cid %>\"><%= name %></a></li>';});\n\n","\ndefine('text!forms/structure/tabData/mobile.html',[],function () { return '<li value=\"<%= tabId %>\" data-cid=\"<%= cid %>\" data-toggle=\"tab\"\\r\\n      <% if ( active ){ %>\\r\\n         class=\"selected\" \\r\\n       <% } %>\\r\\n         > <%= name %>\\r\\n</li>\\r\\n\\r\\n';});\n\n","/**\r\nTab data\r\n**/\r\ndefine('forms/structure/tabData/controller',['require','text!forms/structure/tabData/view.html','text!forms/structure/tabData/mobile.html'],function (require) {\r\n    var dtpl = require(\"text!forms/structure/tabData/view.html\");\r\n    var mtpl = require(\"text!forms/structure/tabData/mobile.html\");\r\n  \r\n    var tpl = (app.isMobile()) ? mtpl : dtpl;\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            node.cid = node.name;\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/predefined/actionLog/view.html',[],function () { return '<div data-control=\"actionLog\">\\r\\n    <div class=\"row\" data-bind=\"visible:isDesktop\">\\r\\n        <div class=\"col-md-12\">\\r\\n            <div class=\"form-group\">\\r\\n                <label for=\"commentBoxEditor\" data-localize=\"Comment\"></label>\\r\\n                <textarea id=\"commentBoxEditor\" class=\"k-textbox form-control input-sm action-log-textarea\" data-bind=\"value: commentBoxHTML\"\\r\\n                <% if ( Disabled ){ %>\\r\\n                disabled\\r\\n                <% } %>>\\r\\n                    </textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-12\">\\r\\n            <div class=\"pull-left\">\\r\\n                <span data-bind=\"text: charactersRemaining\"></span>\\r\\n                <span data-localize=\"CharactersRemaining\"> </span>\\r\\n            </div>\\r\\n            <div class=\"pull-right\">\\r\\n                <button type=\"button\" data-bind=\"click: addComment, enabled: addEnabled\" class=\"k-button btn btn-primary action-log-add-button\" data-localize=\"Add\"></button>\\r\\n            </div>\\r\\n            <div data-bind=\"visible: isAnalyst\" class=\"pull-right checkbox action-log-private\">\\r\\n                <input type=\"checkbox\" data-bind=\"checked: isPrivate\" id=\"actionLogisPrivate\" \\r\\n                       <% if (Disabled) { %>\\r\\n                        disabled\\r\\n                    <% } %>>\\r\\n                </input>\\r\\n\\r\\n                <label class=\"label-middle-align checkbox-inline checkbox-label\" data-localize=\"IsPrivate\" for=\"actionLogisPrivate\" />\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\"row\" data-bind=\"visible:isMobile\">\\r\\n        <div class=\"action-log-mobile\">\\r\\n            <textarea id=\"commentBoxEditorMobile\" class=\"k-textbox form-control input-sm action-log-textarea\" data-bind=\"value: commentBoxHTML\"\\r\\n            <% if (Disabled) { %>disabled<% } %>></textarea>\\r\\n            <div class=\"action-log-mobile-buttons\">\\r\\n                <button type=\"button\" data-bind=\"click: addComment\" data-localize=\"Add Comment\" class=\"col-xs-7 btn btn-primary\"></button>\\r\\n                <div data-bind=\"visible: isAnalyst\" class=\"pull-left checkbox checkbox-inline action-log-mobile-private\">\\r\\n                    <input type=\"checkbox\" data-bind=\"checked: isPrivate\" id=\"actionLogisPrivate\"><% if (Disabled) { %>\\r\\n                    disabled\\r\\n                    <% } %>></input>\\r\\n                    <label class=\"label-middle-align control-label\" data-localize=\"IsPrivate\" for=\"actionLogisPrivate\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n\\r\\n        <div class=\"col-md-12\" data-bind=\"visible:isDesktop\">\\r\\n\\r\\n            <div data-control-grid=\"actionLogGrid\" class=\"inline-spacing\"></div>\\r\\n\\r\\n            <!-- kendo details template used by action grid -->\\r\\n            <script data-id=\"commentDetailTemplate\" type=\"text/kendo-tmpl\">\\r\\n                <p name=\"CommentBoxDetail\" class=\"action-log-comment\">#=DescriptionDisplay#</p>\\r\\n            </script>\\r\\n        </div>\\r\\n        <div data-bind=\"visible:isMobile\">\\r\\n            <div data-role=\"listview\" data-bind=\"source: actionLogSource\" data-template=\"action-log-grid-mobile-template\" class=\"action-log-mobile-grid \"></div>\\r\\n            <script type=\"text/x-kendo-template\" id=\"action-log-grid-mobile-template\">\\r\\n                <div class=\"col-md-12 action-log-info\">\\r\\n                    <div class=\"row\">\\r\\n                        <div class=\"col-xs-2 action-log-icon\">\\r\\n                            <img src=\"#:data.Image#\" alt=\"#:data.Image#\" />\\r\\n                        </div>\\r\\n                        <div class=\"col-xs-10 action-log-details\">\\r\\n                            <p>\\r\\n                                #: EnteredBy # &middot; #: (EnteredDate) ? kendo.toString(new Date(EnteredDate), \\'d\\'):\\'\\' #\\r\\n                            </p>\\r\\n                            <p> #: Title #</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"row\">\\r\\n                        <div class=\"col-xs-offset-2 col-xs-10 action-log-content\">\\r\\n                            #: Description #\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </script>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nactionLog\r\n**/\r\n\r\ndefine('forms/predefined/actionLog/controller',['require','text!forms/predefined/actionLog/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/actionLog/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var view = built(properties);\r\n\r\n            callback(view);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/fileAttachments/view.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"col-md-12 fileAttachmentGrid\" data-control=\"fileAttachmentGrid\" data-control-bind=\"FileAttachment\"\\r\\n\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nfileAttachments\r\n**/\r\n\r\ndefine('forms/predefined/fileAttachments/controller',['require','text!forms/predefined/fileAttachments/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/fileAttachments/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/affectedItems/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">#: DisplayName #</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <p>#: (typeof AssetStatus!=\"undefined\") ? !_.isUndefined(AssetStatus.Name)?AssetStatus.Name:\"\" : \"\" #</p>\\r\\n                <p># if ((typeof AssetStatus!=\"undefined\") && !_.isUndefined(AssetStatus.Name)) { # &middot # } # </p>\\r\\n                <p>#: (Path!=null ) ? Path : \"\" # </p>\\r\\n                <p># if (Path!=null && Path!=\"\") { # &middot # } # </p>\\r\\n\\r\\n            </div>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <a class=\"k-delete-button\">#: localization.Remove #</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 affecteditems-grid\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\"><%= localization.Configurationitem %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-min-length=\"3\"\\r\\n                               data-bind=\"value: view.affectedItemController.selectedConfigItem, source: view.affectedItemController.configItemDataSource, events:{change:view.affectedItemController.onConfigItemChange }\"\\r\\n                               data-cid=\"ci-searchbox\" />\\r\\n                        <span class=\"search\"\\r\\n                              data-bind=\"events:{click: view.affectedItemController.searchConfigItem}\"\\r\\n                              data-cid=\"affecteditemssearchicon\">\\r\\n                            <i class=\"fa fa-search\"></i>\\r\\n                        </span>\\r\\n                        <button data-role=\"button\" class=\"search-button two-action-input-group__primary-action\"\\r\\n                                data-bind=\"events:{click: view.affectedItemController.addConfigItem}\"\\r\\n                                data-cid=\"affectedItemsSearchBoxAddButton\">\\r\\n                            <%= localization.Add %>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group affected-user-item-search\" data-bind=\"visible: view.affectedItemController.isUserCIVisible\">\\r\\n                    <label class=\"control-label\"><%= localization.AffectedUserItems %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-bind=\"value: view.affectedItemController.selectedUserConfigItem, source: view.affectedItemController.userConfigItemDataSource, events:{change:view.affectedItemController.onUserConfigItemChange }\"\\r\\n                               data-cid=\"auitems-searchbox\" />\\r\\n                        <button class=\"two-action-input-group__primary-action\" data-role=\"button\"\\r\\n                                data-bind=\"events:{click: view.affectedItemController.addUserConfigItem}\"\\r\\n                                data-cid=\"affectedItemsComboBoxAddButton\">\\r\\n                            <%= localization.Add %>\\r\\n\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div data-role=\"grid\"\\r\\n             data-bind=\"visible: view.affectedItemController.isDesktopView, source: view.affectedItemController.dataSource, events:{dataBinding: view.affectedItemController.onDataBinding}\"\\r\\n             data-selectable=\"false\"\\r\\n             data-sortable=\"true\"\\r\\n             data-filterable=\"true\"\\r\\n             data-scrollable=\"false\"\\r\\n             data-column-menu=\"true\"\\r\\n             data-pageable=\"false\"\\r\\n             data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n             data-columns=\\'[\\r\\n                    { title: \"\", width: \"1%\", template: \"\\\\u003cdiv data-base-id=\\\\\"#=BaseId#\\\\\" class=\\\\\"aci-context-menu open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.affectedItemController.isSlideOut\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\\\\u003cdiv class=\\\\\"open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.affectedItemController.isMoreInfo, events:{click:view.affectedItemController.showMoreInfo }\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"/\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\"},\\r\\n                    { field: \"DisplayName\", title: localization.DisplayName, width: \"50%\"},\\r\\n                    { field: \"BaseId\", title: localization.BaseId, width: \"25%\", hidden: true },\\r\\n                    { field: \"Path\", title: localization.Path, width: \"25%\" },\\r\\n                    { field: \"AssetStatus.Name\", title: localization.Status, width: \"25%\" },\\r\\n                    { title: localization.Actions, width: \"15%\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove, className:\"custom__grid-remove\" }] }\\r\\n                ]\\'>\\r\\n        </div>\\r\\n        <div data-bind=\"visible: view.affectedItemController.isMobileView\">\\r\\n            <div data-bind=\"mobileGrid: HasRelatedWorkItems\" data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\"></div>\\r\\n        </div>\\r\\n        <!--context menu for info icon-->\\r\\n        <ul id=\"tccmenu\" data-role=\"contextmenu\"\\r\\n            data-filter=\".aci-context-menu\"\\r\\n            data-show-on=\"click\"\\r\\n            data-bind=\"events:{select:view.affectedItemController.onContextmenuSelect, activate:view.affectedItemController.onContextmenuActivate}\">\\r\\n        </ul>\\r\\n   </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/popups/multipleObjectPickerPopup/view.html',[],function () { return '<div id=\"MultiObjectPickerWindow\" class=\"cireson-window defined-form task-window\" data-cid=\"MultiObjectPickerWindow\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-5\">\\r\\n                    <div class=\"form-group\">\\r\\n                        <label><%= localization.SearchText %></label>\\r\\n                        <span class=\"k-textbox k-space-right object-picker-search\">\\r\\n                            <input type=\"text\" data-objectpicker-action=\"search\" data-objectpicker-action-value=\"search\" value=\"\" data-cid=\"MultiObjectPickerWindowSearchBox\" />\\r\\n                            <span data-objectpicker-action=\"search\" class=\"fa fa-search text-primary cursor-pointer\"></span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"col-md-5\">\\r\\n                    <div class=\"form-group\">\\r\\n                        <label><%= localization.SearchObjectText %></label>\\r\\n                        <input type=\"text\" data-objectpicker-control=\"comboBox\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <label><%= localization.SelectObjects %></label>\\r\\n\\r\\n            <div class=\"objectPicker-container\">\\r\\n                <div class=\"k-widget k-grid k-secondary\" data-objectpicker-control=\"objectPickerGrid\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"objectPicker-actions\">\\r\\n                <button data-objectpicker-action=\"addObject\" class=\"btn btn-primary k-button\" data-cid=\"multiobject-picker-add-object-btn\"><%= localization.Add %></button>\\r\\n                <button data-objectpicker-action=\"removeObject\" class=\"btn btn-danger k-button\" data-cid=\"multiobject-picker-remove-object-btn\"><%= localization.Remove %></button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"k-widget k-grid k-secondary objectPicker-grid2-container\" data-objectpicker-control=\"objectPickerGrid2\"></div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\"\\r\\n                    data-cid=\"multiobject-picker-ok-btn\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\"\\r\\n                    data-cid=\"multiobject-picker-cancel-btn\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nmultipleObjectPickerPopup\r\n**/\r\n\r\ndefine('forms/popups/multipleObjectPickerPopup/controller',['require','text!forms/popups/multipleObjectPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/multipleObjectPickerPopup/view.html\");\r\n    var singletonName = \"objectPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (classId, columnNames, gridUrl, dataSourceFilter, isConfigItem) {\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built());\r\n            //var classId = classId;\r\n            //var columnNames = columnNames;\r\n            //var gridUrl = gridUrl;\r\n            // keep popup window as singleton\r\n            // check to see if dom element exists, if so get userPickerPopup object from it\r\n            var ele = $('[datasingleton=\"' + singletonName + '\"]');\r\n            var objectPickerPopup = ele.data(singletonName);\r\n            if (!ele.length) {\r\n                ele = templateFrag;\r\n                $(\"body\").append(ele);\r\n                objectPickerPopup = new ObjectPickerPopup(ele, classId, columnNames, gridUrl, dataSourceFilter, isConfigItem);\r\n                ele.data(singletonName, objectPickerPopup);\r\n            }\r\n            return objectPickerPopup;\r\n\r\n        }\r\n    }\r\n\r\n    /* -- ObjectPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            open = function(classId){ // opens popup with this classId }\r\n            close = function(){ // closes popup }\r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback(obj){  } returns selected user object\r\n    */\r\n    \r\n    // CONTROL\r\n    var ObjectPickerPopup = function (targetEle, classId, columnNames, gridUrl, dataSourceFilter, isConfigItem) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var classId = classId;\r\n        var columnNames = columnNames;\r\n        var controllerUrl = gridUrl;\r\n        var filter = dataSourceFilter;\r\n        var isConfigItem = isConfigItem;\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"DisplayName\";\r\n        var _idProp = \"Id\";\r\n       // var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, objects) { callback(objects); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, objects) { callback(objects); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                save: onSaveClick,\r\n                cancel: onCancelClick\r\n            });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n\r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSaveClick = function () {\r\n            var selectedRows = popup.grid2.dataSource.data();\r\n            if (selectedRows) {\r\n                $.each(selectedRows, function (i, itm) {\r\n                    if (_.isUndefined(itm.BaseId)) { itm.BaseId = itm.Id;}\r\n                    $(self).trigger(\"save\", itm);\r\n                });\r\n                closePopup();\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n\r\n        var openPopup = function () {\r\n            popup.actions.clearSearchText();\r\n            popup.gridFunctions.clear();\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup();\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function () {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            var gridUrl = (!_.isUndefined(controllerUrl) && !_.isNull(controllerUrl)) ? controllerUrl : \"/Search/GetSearchObjectsWithEnumObjectByClassId\";\r\n            var comboUrl = \"/Search/GetSearchClasses\";\r\n            var combo;\r\n            var grid;\r\n            var grid2;\r\n            var searchText;\r\n            var gridFunctions;\r\n            var actions;\r\n            var outObjs = new kendo.data.ObservableArray([]);\r\n            // CONSTRUCT\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                createCombo();\r\n                createGrid();\r\n                createGrid2();\r\n                bindEvents();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            // ACTIONS\r\n           \r\n\r\n            var callback = function () { }\r\n\r\n            var actions = new (function () {\r\n                this.addObject = function () {\r\n                    var selected = grid.select();\r\n                    for (var i = 0, max = selected.length; i < max; i++) {\r\n                        var item = grid.dataItem(selected[i]);\r\n                        if (item) grid2Funcs.addItem(item);\r\n                    }\r\n\r\n                    //var item = grid.dataItem(grid.select());\r\n                    //if (item) grid2Funcs.addItem(item);\r\n                }\r\n                this.removeObject = function () {\r\n                    //grid2.removeRow(grid2.select());\r\n                    var selected = grid2.select();\r\n                    for (var i = 0, max = selected.length; i < max; i++) {\r\n                        grid2.removeRow(selected[i]);\r\n                    }\r\n                }\r\n                this.search = function () {\r\n                    var ele = html.find('[data-objectpicker-action-value=\"search\"]');\r\n                    searchText = (ele) ? ele.val() : \"\";\r\n                    grid.dataSource.read();\r\n\r\n                    //used on RelatesToWorkItem relatinship, exclude current workitem from list\r\n                    if (!_.isUndefined(filter) && !_.isNull(filter)) {\r\n                        grid.dataSource.filter(filter);\r\n                    }\r\n                    grid.dataSource.page(1);\r\n                }\r\n                this.clearSearchText = function () {\r\n                    html.find('[data-objectpicker-action-value=\"search\"]').val('');\r\n                    searchText = \"\";\r\n                }\r\n            })();\r\n            self.actions = actions;\r\n\r\n            var gridFuncs = new (function () {\r\n                this.searchFilter = function () {\r\n                    return { searchFilter: searchText, classId: comboFuncs.getIdValue, columnNames: columnNames };\r\n                }\r\n                this.onChange = function () {\r\n\r\n                }\r\n                this.onDataBound = function () {\r\n                    if (grid.dataSource.totalPages() == 1) {\r\n                        grid.pager.element.hide();\r\n                    }\r\n                }\r\n                this.clear = function () {\r\n                    self.grid.dataSource.data([]);\r\n                    while (outObjs.length != 0) {\r\n                        $.each(self.grid2.items(), function (ii, iitem) {\r\n                            self.grid2.removeRow(iitem)\r\n                        });\r\n                    }\r\n                }\r\n                this.dblClick = function () {\r\n                    // $(this) add to grid 2\r\n                    grid2Funcs.addItem(grid.dataItem($(this)));\r\n                }\r\n                \r\n            })();\r\n            self.gridFunctions = gridFuncs;\r\n\r\n            var grid2Funcs = new (function () {\r\n                this.addItem = function (item) {\r\n                    var a = true;\r\n                    $.each(outObjs, function (i, itm) {\r\n                        if (item.uid == itm.uid) {\r\n                            a = false;\r\n                        }\r\n                    })\r\n                    if (a) outObjs.push(item);\r\n                }\r\n            })();\r\n\r\n            var comboFuncs = new (function () {\r\n                this.getIdValue = function () {\r\n                    var item1 = self.combo.value();\r\n                    return !_.isNull(item1) ? item1 : classId.toLowerCase();\r\n                }\r\n            })();\r\n\r\n            // METHODS\r\n            var createKendoWindow = function () {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: localization.SelectObject,\r\n                    content: null,\r\n                    width: 750,\r\n                    height: 710,\r\n                    actions: [\"Close\"],\r\n                    activate: function () {\r\n                        self.combo.value(classId.toLowerCase());\r\n                    }\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n\r\n            //combo\r\n            var createCombo = function () {\r\n                self.combo = html.find(\"[data-objectpicker-control='comboBox']\").kendoComboBox({\r\n                    \"dataSource\": {\r\n                        \"transport\": {\r\n                            \"prefix\": \"\",\r\n                            \"read\": {\r\n                                \"url\": comboUrl,\r\n                                \"data\": { classId: classId }\r\n                            }\r\n                        },\r\n                        \"schema\": {\r\n                            \"errors\": \"Errors\"\r\n                        }\r\n                    },\r\n                    \"dataTextField\": \"Item2\",\r\n                    \"autoBind\": true,\r\n                    \"dataValueField\": \"Item1\",\r\n                    \"filter\": \"contains\"\r\n                }).data(\"kendoComboBox\");\r\n            }\r\n\r\n            //first grid\r\n            var createGrid = function () {\r\n                var gc = html.find('[data-objectpicker-control=\"objectPickerGrid\"]');\r\n                var gridSettings = function () {\r\n                    var dataSource = {\r\n                        \"transport\": {\r\n                            \"prefix\": \"\",\r\n                            \"read\": {\r\n                                \"url\": gridUrl,\r\n                                \"data\": gridFuncs.searchFilter,\r\n                                \"type\": \"GET\",\r\n                                \"cache\": false\r\n                            }\r\n                        },\r\n                        \"pageSize\": 5,\r\n                        \"type\": \"aspnetmvc-ajax\",\r\n                        \"schema\": {\r\n                            \"data\": \"Data\",\r\n                            \"total\": \"Total\",\r\n                            \"errors\": \"Errors\",\r\n                        }\r\n                    }\r\n                    var columns = [\r\n                        {\r\n                            \"title\": \"Id\",\r\n                            \"hidden\": true,\r\n                            \"field\": \"Id\",\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.DisplayName,\r\n                            \"attributes\": {\r\n                                \"class\": \"grid-highlight-column\"\r\n                            },\r\n                            \"field\": \"DisplayName\",\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Class,\r\n                            \"field\": \"FullClassName\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Path,\r\n                            \"field\": \"Path\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }\r\n                    ];\r\n                    var userClassId = \"10a7f898-e672-ccf3-8881-360bfb6a8f9a\";\r\n                    var userColumns = [\r\n                       {\r\n                           \"title\": localization.FirstName,\r\n                           \"attributes\": {\r\n                               \"class\": \"grid-highlight-column\"\r\n                           },\r\n                           \"field\": \"FirstName\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }, {\r\n                           \"title\": localization.LastName,\r\n                           \"attributes\": {\r\n                               \"class\": \"grid-highlight-column\"\r\n                           },\r\n                           \"field\": \"LastName\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }, {\r\n                           \"title\": localization.Title,\r\n                           \"field\": \"Title\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }, {\r\n                           \"title\": localization.UserName,\r\n                           \"field\": \"UserName\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       },{\r\n                           \"title\": localization.Domain,\r\n                           \"field\": \"Domain\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       },{\r\n                           \"title\": localization.Company,\r\n                           \"field\": \"Company\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }\r\n                    ];\r\n                    return {\r\n                        \"columns\": (classId.toLowerCase() == userClassId) ? userColumns : columns,\r\n                        \"sortable\": {\r\n                            \"mode\": \"multiple\"\r\n                        },\r\n                        \"selectable\": \"Multiple, Row\",\r\n                        \"filterable\": {\r\n                            \"operators\": {\r\n                                \"string\": {\r\n                                    \"startswith\": localization.Startswith,\r\n                                    \"contains\": localization.Contains,\r\n                                    \"eq\": localization.Isequalto,\r\n                                    \"neq\": localization.Isnotequalto\r\n                                }\r\n                            }\r\n                        },\r\n                        \"columnMenu\": false,\r\n                        \"autoBind\": false,\r\n                        \"dataSource\": dataSource,\r\n                        \"pageable\": true\r\n                    }\r\n                }\r\n                grid = gc.kendoGrid(gridSettings()).data(\"kendoGrid\");\r\n                gridFuncs.onDataBound();\r\n                gc.on(\"dblclick\", \"tbody>tr\", gridFuncs.dblClick);\r\n                self.grid = grid;\r\n            }\r\n\r\n            //second grid\r\n            var createGrid2 = function () {\r\n                var gc = html.find('[data-objectpicker-control=\"objectPickerGrid2\"]');\r\n                var dataSource = {\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": \"\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": 5,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    data: {\r\n                        Data: outObjs,\r\n                        Total: outObjs.length\r\n                    },\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                    }\r\n                }\r\n                var columns = [\r\n                        {\r\n                            \"title\": \"Id\",\r\n                            \"hidden\": true,\r\n                            \"field\": \"Id\",\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.DisplayName,\r\n                            \"attributes\": {\r\n                                \"class\": \"grid-highlight-column\"\r\n                            },\r\n                            \"field\": \"DisplayName\",\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Class,\r\n                            \"field\": \"FullClassName\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Path,\r\n                            \"field\": \"Path\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }\r\n                ];\r\n                var userClassId = \"10a7f898-e672-ccf3-8881-360bfb6a8f9a\";\r\n                var userColumns = [\r\n                   {\r\n                       \"title\": localization.FirstName,\r\n                       \"attributes\": {\r\n                           \"class\": \"grid-highlight-column\"\r\n                       },\r\n                       \"field\": \"FirstName\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.LastName,\r\n                       \"attributes\": {\r\n                           \"class\": \"grid-highlight-column\"\r\n                       },\r\n                       \"field\": \"LastName\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.Title,\r\n                       \"field\": \"Title\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.UserName,\r\n                       \"field\": \"UserName\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.Domain,\r\n                       \"field\": \"Domain\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.Company,\r\n                       \"field\": \"Company\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }\r\n                ];\r\n                grid2 = gc.kendoGrid({\r\n                    \"columns\": (classId.toLowerCase() == userClassId) ? userColumns : columns,\r\n                    \"pageable\": true,\r\n                    \"dataSource\": dataSource,\r\n                    \"selectable\": \"Multiple, Row\",\r\n                    \"filterable\": {\r\n                        \"operators\": {\r\n                            \"string\": {\r\n                                \"startswith\": localization.Startswith,\r\n                                \"contains\": localization.contains,\r\n                                \"eq\": localization.Isequalto,\r\n                                \"neq\": localization.Isnotequalto\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    \"columnMenu\": false\r\n                }).data(\"kendoGrid\");\r\n\r\n                self.grid2 = grid2;\r\n            }\r\n\r\n            //bind events\r\n            var bindEvents = function () {\r\n                html.find('[data-objectpicker-action]').each(function (i, ele) {\r\n                    var action = $(this).attr('data-objectpicker-action');\r\n                    var nd = ele.nodeName.toLowerCase();\r\n                    if (!actions[action]) { app.lib.exception(\"The method action.\" + action + \" does not exist\"); }\r\n                    if ((nd == \"input\" && $(this).attr(\"type\").toLowerCase() == \"text\") || nd == \"textarea\") {\r\n                        $(this).bind('enter', actions[action]);\r\n                    } else {\r\n                        $(this).click(actions[action]);\r\n                    }\r\n                });\r\n            }\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        __construct();\r\n\r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","/**\naffectedItems\n**/\n\ndefine('CustomSpace/Scripts/forms/predefined/affectedItems/controller',['require','text!forms/predefined/affectedItems/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\n    var tpl = require(\"text!forms/predefined/affectedItems/view.html\");\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\n\n    var definition = {\n        template: tpl,\n        build: function (vm, node, callback) {\n            var built = _.template(tpl);\n            var properties = {\n                Disabled: !_.isUndefined(node.disabled) ? node.disabled : false\n            };\n\n            $.extend(true, properties, node);\n\n            var view = new kendo.View();\n\n            var cur_table = false;\n\n            //use setters and getters if you want vm boundOdj to trigger change\n            if (_.isUndefined(vm.HasRelatedWorkItems)) {\n                vm.set('HasRelatedWorkItems', new kendo.data.ObservableArray([]));\n            }\n            var boundArray = vm.get('HasRelatedWorkItems');\n\n            vm.view.affectedItemController = new kendo.observable({\n                addConfigItem: function (e) {\n                    if (!_.isUndefined(this.selectedConfigItemId)) { addAffectedItem(this.selectedConfigItemId); }\n                },\n                searchConfigItem: function () {\n                    var popupWindow = objectPickerPopup.getPopup(\"62F0BE9F-ECEA-E73C-F00D-3DD78A7422FC\", \"DisplayName,Path,Status\", null, null, true);\n                    popupWindow.setSaveCallback(function (object) {\n                        addAffectedItem(object.BaseId);\n                    });\n                    popupWindow.open();\n                },\n                selectedConfigItemId: \"\",\n                selectedConfigItem: \"\",\n                configItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: function (data) {\n                                var configItem = (data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                                return \"/api/V3/Config/GetAffectedItemsList?itemFilter=\" + configItem;\n                            },\n                            dataType: \"json\"\n                        }\n                    }\n                }),\n                onConfigItemChange: function (e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedConfigItemId = dataItem.Id;\n                },\n                isUserCIVisible: !_.isUndefined(vm.RequestedWorkItem) ? true : false,\n                selectedUserConfigItemId: \"\",\n                selectedUserConfigItem: \"\",\n                addUserConfigItem: function (e) {\n                    if (!_.isUndefined(this.selectedUserConfigItemId)) { addAffectedItem(this.selectedUserConfigItemId); }\n                },\n                userConfigItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: \"/ConfigItems/GetAffectedUserConfigItemsList\",\n                            data: {\n                                affectedUserId: function () {\n                                    return !_.isUndefined(vm.RequestedWorkItem) && !_.isNull(vm.RequestedWorkItem.BaseId) ? vm.RequestedWorkItem.BaseId : \"\";\n                                }\n                            },\n                            dataType: \"json\",\n                            type: \"GET\"\n                        },\n                        parameterMap: function (data) {\n                            var searchFilter = (data.filter && data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                            return _.extend(data, { searchFilter: searchFilter });\n                        }\n                    }\n                }),\n                onUserConfigItemChange: function (e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedUserConfigItemId = dataItem.Id;\n                },\n                dataSource: new kendo.data.DataSource({\n                    schema: {\n                        data: \"Data\",\n                        total: \"Total\",\n                        errors: \"Errors\",\n                        model: {\n                            id: \"BaseId\",\n                        }\n                    },\n                    data: {\n                        Data: boundArray,\n                        Total: boundArray.length\n                    }\n                }),\n                showMoreInfo: function (e) {\n                    var detailsPopupEle = $(\"<div>\");\n                    detailsPopupEle.appendTo(\"body\");\n\n                    var detailsPopup = detailsPopupEle.kendoCiresonWindow({\n                        title: \"\",\n                        width: 550,\n                        height: 500,\n                        actions: [\"Close\"]\n                    }).data(\"kendoWindow\");\n\n                    var baseId = null;\n                    var displayName = \"\";\n                    if (e.data == null && e.BaseId != null) {\n                        baseId = e.BaseId;\n                        displayName = e.DisplayName;\n                    } else {\n                        baseId = e.data.BaseId;\n                        displayName = e.data.DisplayName;\n                    }\n\n                    detailsPopup.refresh({\n                        url: \"/Search/ObjectViewer\",\n                        data: { id: baseId }\n                    });\n                    detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\n                    detailsPopup.title(displayName).center().open();\n                },\n                onDataBinding: function (e) {\n                    cur_table = e.sender.table;\n                    _.each(boundArray, function (item) {\n                        item.AssetStatus = (!_.isUndefined(item.AssetStatus) && !_.isNull(item.AssetStatus))? item.AssetStatus : { Id: null, Name: null };\n                        item.Status = (!_.isUndefined(item.Status) && !_.isNull(item.Status)) ? item.Status : { Id: null, Name: null };\n                        item.Hidden = properties.Disabled;\n                    });\n                },\n                isDesktopView: !app.isMobileDevice(),\n                isMobileView: app.isMobileDevice(),\n                isWindowsComputer: false,\n                isConfigItemWindowsComputer: function (id) {\n                    $.ajax({\r\n                        type: \"GET\",\n                        async: false,\n                        url: \"/ConfigItems/IsComputer\",\n                        data: { objectId: id },\n                        success: function (result) {\r\n                            vm.view.affectedItemController.isWindowsComputer = (result.toLowerCase() === \"true\");\r\n                        }\r\n                    });\n                },\n                isUser: false,\n                isConfigItemUser: function (id) {\n                    // Replaced IsUser call due to large delays in returning data\n                    /*\n                    $.ajax({\r\n                        type: \"GET\",\n                        async: false,\n                        url: \"/ConfigItems/IsUser\",\n                        data: { objectId: id },\n                        success: function (result) {\r\n                            vm.view.affectedItemController.isUser = (result.toLowerCase() === \"true\");\r\n                        }\r\n                    });\n                    */\n                    $.ajax({\n                        type: \"GET\",\n                        async: false,\n                        url: \"/Search/GetObjectProperties\",\n                        data: {\n\t\t\t\t\t\t\tid: id\n\t\t\t\t\t\t},\n                        success: function (result) {\n                            vm.view.affectedItemController.isUser = (result.IsUser === true);\n                        }\n                    });\n                },\n                isMoreInfo: function (viewModel) {\n                    var bSlideOut = vm.view.affectedItemController.isSlideOut(viewModel);\n                    return !bSlideOut;\n                },\n                isSlideOut: function (viewModel) {\n                    // Replaced unneeded calls to IsUser/IsWindowsComputer\n                    /*\n                    vm.view.affectedItemController.isConfigItemWindowsComputer(viewModel.BaseId);\n                    vm.view.affectedItemController.isConfigItemUser(viewModel.BaseId);\n\n                    var bIsWindowsComputer = vm.view.affectedItemController.isWindowsComputer;\n                    var bIsUser = vm.view.affectedItemController.isUser;\n                    */\n                    // Get IsUser Result\n                    vm.view.affectedItemController.isConfigItemUser(viewModel.BaseId);\n\t\t\t\t\tvar bIsUser = vm.view.affectedItemController.isUser;\n\n                    // Set Default IsWindowsComputer Result\n                    vm.view.affectedItemController.isWindowsComputer = false;\n\t\t\t\t\tvar bIsWindowsComputer = false;\n\n                    // If ConfigItem is not a user then check if it is a computer\n                    if (!bIsUser) {\n                        // Get IsWindowsComputer Result\n                        vm.view.affectedItemController.isConfigItemWindowsComputer(viewModel.BaseId);\n                        bIsWindowsComputer = vm.view.affectedItemController.isWindowsComputer;\n                    }\n\n                    var hasControlCenterURL = !_.isNull(session.consoleSetting.TrueControlCenterURL) && (session.consoleSetting.TrueControlCenterURL != \"\");\n\n                    return ((bIsWindowsComputer || bIsUser) && hasControlCenterURL) ? true : false;\n                },\n                showTCCInfo: function (dataItem) {\n                    var src = session.consoleSetting.TrueControlCenterURL;\n                    var bIsWindowsComputer = vm.view.affectedItemController.isWindowsComputer;\n                    var bIsUser = vm.view.affectedItemController.isUser;\n                    var tooltip = localization.ComputerManagement;\n\n                    if (bIsWindowsComputer) {\r\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"computer\");\r\n                    } else if (bIsUser) {\r\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"user\");\n                        tooltip = localization.UserManagement;\r\n                    }\n\n                    var options = {\r\n                        url: src,\r\n                        tooltip: tooltip\r\n                    }\n                    app.slideOutNav.show(options);\n                },\n                onContextmenuSelect: function (e) {\n                    var type = e.item.attributes[\"custom\"].value;\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    var dataItem = _.find(e.data.HasRelatedWorkItems, function (item) { return item.BaseId == baseId; });\n\n                    (type == \"slideout\") ? vm.view.affectedItemController.showTCCInfo(dataItem) : vm.view.affectedItemController.showMoreInfo(dataItem);\n                },\n                onContextmenuActivate: function (e) {\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    // Replaced unneeded calls to IsUser/IsWindowsComputer\n                    /*\n                    vm.view.affectedItemController.isConfigItemWindowsComputer(baseId);\n                    vm.view.affectedItemController.isConfigItemUser(baseId);\n                    */\n                    // Get IsUser Result\n                    vm.view.affectedItemController.isConfigItemUser(baseId);\n                    vm.view.affectedItemController.isWindowsComputer = false;\n\n                    // If ConfigItem is not a user then check if it is a computer\n                    if (!vm.view.affectedItemController.isUser) {\n                        vm.view.affectedItemController.isConfigItemWindowsComputer(baseId);\n                    }\n\n                    var managementTitle = localization.UserManagement;\n                    if (vm.view.affectedItemController.isWindowsComputer) {\n                        managementTitle = localization.ComputerManagement;\n                    }\n\n                    var menuItems = [{\n                        text: managementTitle,\n                        imageUrl: \"/Content/Images/Icons/Other/control-center-launcher.png\",\n                        imageAttr: {\n                            height: '16px',\n                            width: '16px'\n                        },\n                        attr: {\n                            custom: 'slideout' //custom attribute holds the link type\n                        }\n                    },\n                     {\n                         text: \"<i class='fa fa-info-circle cursor-pointer'></i>\" + localization.AdditionalDetails,\n                         encoded: false,\n                         attr: {\n                             custom: 'info' //custom attribute holds the link type\n                         }\n                     }];\n\n                    var contextmenu = $(\"#tccmenu\").data(\"kendoContextMenu\");\n                    contextmenu.setOptions({\n                        dataSource: menuItems\n                    });\n                }\n\n            });\n\n            var grid = vm.view.affectedItemController;\n\n            grid.dataSource.originalFilter = grid.dataSource.filter;\n\n            // Replace the original filter function.\n            grid.dataSource.filter = function () {\n\n                // Call the original filter function.\n                var result = grid.dataSource.originalFilter.apply(this, arguments);\n\n                // If a column is about to be filtered, then raise a new \"filtering\" event.\n                if (arguments.length > 0) {\n                    this.trigger(\"filterApplied\", arguments);\n                }\n\n                return result;\n            }\n\n            grid.dataSource.bind(\"filterApplied\", function () {\n\n                $.each($(cur_table).find(\"th a.k-header-column-menu i\"), function () {\n                    $(this).remove();\n                });\n\n                if (grid.dataSource.filter()) {\n\n                    var filters = grid.dataSource.filter().filters || [];\n                    var dsFilters = [];\n                    for (var i in filters) {\n                        if (filters[i].filters) {\n                            var innerFilters = filters[i].filters;\n                            for (var x in innerFilters) {\n                                dsFilters.push(innerFilters[x]);\n                            }\n                        } else {\n                            dsFilters.push(filters[i]);\n                        }\n                    }\n\n                    dsFilters = _.uniq(dsFilters, function (el) { return el.field; });\n\n                    for (var i in dsFilters) {\n                        $(cur_table).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\n                    }\n\n                }\n            });\n\n            var templateFrag = built(properties);\n            view = new kendo.View(templateFrag, { wrap: true, model: vm.view.affectedtemController });\n            callback(templateFrag);\n\n            if (vm.view.affectedItemController.isUserCIVisible) {\n                vm.RequestedWorkItem.bind(\"change\", function (e) {\n                    vm.view.affectedItemController.userConfigItemDataSource.read();\n                });\n            }\n\n            //more functions\n            var isDuplicate = function (idToAdd) {\n                var n = false;\n                $.each(boundArray, function (i, item) {\n                    if (item.BaseId == idToAdd) {\n                        n = true;\n                    }\n                });\n                return n;\n            }\n\n            var addAffectedItem = function (baseId) {\n                if (isDuplicate(baseId)) { return; }\n                $.getJSON('/ConfigItems/GetAffectedItem', { id: baseId }, function (json) {\n                    var item = {\n                        BaseId: baseId,\n                        DisplayName: json.DisplayName,\n                        ClassName: json.ObjectClassName,\n                        Path: json.Path,\n                        AssetStatus: !_.isUndefined(json.AssetStatus) ? (json.AssetStatus != null) ? json.AssetStatus : \"\" : { Name: !_.isUndefined(json.AssetStatus) ? json.AssetStatus : \"\" },\n                        Status: !_.isUndefined(json.Status) ? (json.Status != null) ? json.Status : \"\" : { Name: !_.isUndefined(json.Status) ? json.Status : \"\" }\n                    };\n                    boundArray.push(item);\n                });\n            }\n        }\n    }\n\n    return definition;\n\n});\n","\ndefine('text!forms/predefined/relatedItems/view.html',[],function () { return '<div id=\"relatedItemTemplate\" data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">#: DisplayName #</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <p>#: (typeof AssetStatus!=\"undefined\") ? !_.isUndefined(AssetStatus.Name)?AssetStatus.Name:\"\" : \"\" #</p>\\r\\n                <p># if ((typeof AssetStatus!=\"undefined\") && !_.isUndefined(AssetStatus.Name)) { # &middot # } # </p>\\r\\n                <p>#: (Path!=null ) ? Path : \"\" # </p>\\r\\n                <p># if (Path!=null && Path!=\"\") { # &middot # } # </p>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <a class=\"k-delete-button\">#: localization.Remove #</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 relateditems-grid\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\"><%= localization.Configurationitem %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-bind=\"value: view.relatedItemController.selectedConfigItem, source: view.relatedItemController.configItemDataSource, events:{change:view.relatedItemController.onConfigItemChange }\"\\r\\n                               <% if ( Disabled ){ %> disabled <% } %>/>\\r\\n\\r\\n                        <span data-bind=\"events:{click: view.relatedItemController.searchConfigItem}\"\\r\\n                              data-cid=\"relatedItemsSearchIcon\"\\r\\n                          <% if ( Disabled ){ %> disabled class=\"search search-disabled\" <% } else{ %> class=\"search\" <% } %>\\r\\n                          >\\r\\n                        <i class=\"fa fa-search\"></i>\\r\\n                    </span>\\r\\n                        <button data-role=\"button\" class=\"search-button two-action-input-group__primary-action\"\\r\\n                                data-bind=\"events:{click: view.relatedItemController.addConfigItem}\"\\r\\n                                data-cid=\"relatedItemSearchAddBbtn\"\\r\\n                            <% if ( Disabled ){ %> disabled <% } %>\\r\\n                            >\\r\\n                        <%= localization.Add %>\\r\\n                    </button>\\r\\n                    </div>\\r\\n                 </div>\\r\\n            </div>\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group affected-user-item-search\" data-bind=\"visible: view.relatedItemController.isUserCIVisible\">\\r\\n                    <label class=\"control-label\"><%= localization.AffectedUserItems %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-bind=\"value: view.relatedItemController.selectedUserConfigItem, source: view.relatedItemController.userConfigItemDataSource, events:{change:view.relatedItemController.onUserConfigItemChange }\"\\r\\n                               data-cid=\"affectedItemsUserItemBox\"\\r\\n                               <% if ( Disabled ){ %> disabled <% } %> />\\r\\n\\r\\n                        <button class=\"two-action-input-group__primary-action\"\\r\\n                                data-role=\"button\"\\r\\n                                data-bind=\"events:{click: view.relatedItemController.addUserConfigItem}\"\\r\\n                            <% if ( Disabled ){ %> disabled <% } %>\\r\\n                            >\\r\\n                        <%= localization.Add %>\\r\\n                    </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div data-role=\"grid\"\\r\\n             data-bind=\"visible: view.relatedItemController.isDesktopView, source: view.relatedItemController.dataSource, events:{dataBinding: view.relatedItemController.onDataBinding}\"\\r\\n             data-selectable=\"false\"\\r\\n             data-sortable=\"true\"\\r\\n             data-filterable=\"true\"\\r\\n             data-scrollable=\"false\"\\r\\n             data-column-menu=\"true\"\\r\\n             data-pageable=\"false\"\\r\\n             data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n             data-columns=\\'[\\r\\n                    { title: \"\", width: \"1%\", template: \"\\\\u003cdiv data-base-id=\\\\\"#=BaseId#\\\\\" class=\\\\\"ci-context-menu open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.relatedItemController.isSlideOut\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\\\\u003cdiv class=\\\\\"open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.relatedItemController.isMoreInfo, events:{click:view.relatedItemController.showMoreInfo }\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"/\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\"},\\r\\n                    { field: \"DisplayName\", title: localization.DisplayName, width: \"50%\"},\\r\\n                    { field: \"BaseId\", title: localization.BaseId, width: \"25%\", hidden: true },\\r\\n                    { field: \"Path\", title: localization.Path, width: \"25%\" },\\r\\n                    { field: \"AssetStatus.Name\", title: localization.Status, width: \"25%\" },\\r\\n                    { title: localization.Actions, width: \"15%\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove, className:\"custom__grid-remove\" }] }\\r\\n                ]\\'>\\r\\n        </div>\\r\\n        <div data-bind=\"visible: view.relatedItemController.isMobileView\">\\r\\n            <div data-bind=\"mobileGrid: RelatesToConfigItem\" data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\"></div>\\r\\n        </div>\\r\\n        <!--context menu for info icon-->\\r\\n        <ul id=\"tccmenu-related-ci\" data-role=\"contextmenu\" \\r\\n            data-filter=\".ci-context-menu\"\\r\\n            data-show-on=\"click\"\\r\\n            data-bind=\"events:{select:view.relatedItemController.onContextmenuSelect, activate:view.relatedItemController.onContextmenuActivate}\">\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\nrelatedItems\n**/\n\ndefine('CustomSpace/Scripts/forms/predefined/relatedItems/controller',['require','text!forms/predefined/relatedItems/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\n    var tpl = require(\"text!forms/predefined/relatedItems/view.html\");\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\n\n    var definition = {\n        template: tpl,\n        build: function (vm, node, callback) {\n            var built = _.template(tpl);\n            var properties = {\n                Disabled: !_.isUndefined(node.disabled) ? node.disabled : false\n            };\n\n            $.extend(true, properties, node);\n\n            var view = new kendo.View();\n\n            var cur_table = false;\n\n            //use setters and getters if you want vm boundOdj to trigger change\n            if (_.isUndefined(vm.RelatesToConfigItem)) {\n                vm.set('RelatesToConfigItem', new kendo.data.ObservableArray([]));\n            }\n            var boundArray = vm.get('RelatesToConfigItem');\n\n            vm.view.relatedItemController = new kendo.observable({\n                addConfigItem: function (e) {\n                    if (!_.isUndefined(this.selectedConfigItemId)) {\n                        addAffectedItem(this.selectedConfigItemId);\n                    }\n                },\n                searchConfigItem: function() {\n                    var popupWindow = objectPickerPopup.getPopup(\"62F0BE9F-ECEA-E73C-F00D-3DD78A7422FC\", \"DisplayName,Path,Status\", null, null, true);\n                    popupWindow.setSaveCallback(function(object) {\n                        addAffectedItem(object.BaseId);\n                    });\n                    popupWindow.open();\n                },\n                selectedConfigItemId: \"\",\n                selectedConfigItem: \"\",\n                configItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: function (data) {\n                                var configItem = (data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                                return \"/api/V3/Config/GetAffectedItemsList?itemFilter=\" + configItem;\n                            },\n                            dataType: \"json\"\n                        }\n                    }\n                }),\n                onConfigItemChange: function(e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedConfigItemId = dataItem.Id;\n                },\n                isUserCIVisible: !_.isUndefined(vm.RequestedWorkItem) ? true : false,\n                selectedUserConfigItemId: \"\",\n                selectedUserConfigItem: \"\",\n                addUserConfigItem: function(e) {\n                    if (!_.isUndefined(this.selectedUserConfigItemId)) {\n                        addAffectedItem(this.selectedUserConfigItemId);\n                    }\n                },\n                userConfigItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: \"/ConfigItems/GetAffectedUserConfigItemsList\",\n                            data: { affectedUserId: function() { return !_.isUndefined(vm.RequestedWorkItem) && !_.isNull(vm.RequestedWorkItem.BaseId) ? vm.RequestedWorkItem.BaseId : \"\" } },\n                            dataType: \"json\",\n                            type: \"GET\"\n                        },\n                        parameterMap: function (data) {\n                            var searchFilter = (data.filter && data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                            return _.extend(data, { searchFilter: searchFilter });\n                        }\n                    }\n                }),\n                onUserConfigItemChange: function(e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedUserConfigItemId = dataItem.Id;\n                },\n                dataSource: new kendo.data.DataSource({\n                    schema: {\n                        data: \"Data\",\n                        total: \"Total\",\n                        errors: \"Errors\",\n                        model: {\n                            id: \"BaseId\",\n                        }\n                    },\n                    data: {\n                        Data: boundArray,\n                        Total: boundArray.length\n                    }\n                }),\n                showMoreInfo: function (e) {\n                    var detailsPopupEle = $(\"<div>\");\n                    detailsPopupEle.appendTo(\"body\");\n\n                    var detailsPopup = detailsPopupEle.kendoCiresonWindow({\n                        title: \"\",\n                        width: 550,\n                        height: 500,\n                        actions: [\"Close\"]\n                    }).data(\"kendoWindow\");\n\n                    var baseId = null;\n                    var displayName = \"\";\n                    if (e.data == null && e.BaseId != null) {\n                        baseId = e.BaseId;\n                        displayName = e.DisplayName;\n                    } else {\n                        baseId = e.data.BaseId;\n                        displayName = e.data.DisplayName;\n                    }\n\n                    detailsPopup.refresh({\n                        url: \"/Search/ObjectViewer\",\n                        data: { id: baseId }\n                    });\n                    detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\n                    detailsPopup.title(displayName).center().open();\n                },\n                onDataBinding: function (e) {\n                    cur_table = e.sender.table;\n                    _.each(boundArray, function(item) {\n                        item.AssetStatus = !_.isUndefined(item.AssetStatus) ? item.AssetStatus : { Id: null, Name: null };\n                        item.Status = !_.isUndefined(item.Status) ? item.Status : { Id: null, Name: null };\n                    });\n                },\n                isDesktopView: !app.isMobileDevice(),\n                isMobileView: app.isMobileDevice(),\n                isEnabled: !properties.Disabled,\n                isWindowsComputer: false,\n                isConfigItemWindowsComputer: function (id) {\n                    $.ajax({\r\n                        type: \"GET\",\n                        async: false,\n                        url: \"/ConfigItems/IsComputer\",\n                        data: { objectId: id },\n                        success: function (result) {\r\n                            vm.view.relatedItemController.isWindowsComputer = (result.toLowerCase() === \"true\");\r\n                        }\r\n                    });\n                },\n                isUser: false,\n                isConfigItemUser: function (id) {\n                    // Replaced IsUser call due to large delays in returning data\n                    /*\n                    $.ajax({\r\n                        type: \"GET\",\n                        async: false,\n                        url: \"/ConfigItems/IsUser\",\n                        data: { objectId: id },\n                        success: function (result) {\r\n                            vm.view.relatedItemController.isUser = (result.toLowerCase() === \"true\");\r\n                        }\r\n                    });\n                    */\n                    $.ajax({\n                        type: \"GET\",\n                        async: false,\n                        url: \"/Search/GetObjectProperties\",\n                        data: {\n\t\t\t\t\t\t\tid: id\n\t\t\t\t\t\t},\n                        success: function (result) {\n                            vm.view.relatedItemController.isUser = (result.IsUser === true);\n                        }\n                    });\n                },\n                isMoreInfo: function (viewModel) {\n                    var bSlideOut = vm.view.relatedItemController.isSlideOut(viewModel);\n                    return !bSlideOut;\n                },\n                isSlideOut: function (viewModel) {\n                    // Replaced unneeded calls to IsUser/IsWindowsComputer\n                    /*\n                    vm.view.relatedItemController.isConfigItemWindowsComputer(viewModel.BaseId);\n                    vm.view.relatedItemController.isConfigItemUser(viewModel.BaseId);\n\n                    var bIsWindowsComputer = vm.view.relatedItemController.isWindowsComputer;\n                    var bIsUser = vm.view.relatedItemController.isUser;\n                    */\n                    // Get IsUser Result\n                    vm.view.relatedItemController.isConfigItemUser(viewModel.BaseId);\n\t\t\t\t\tvar bIsUser = vm.view.relatedItemController.isUser;\n\n                    // Set Default IsWindowsComputer Result\n                    vm.view.relatedItemController.isWindowsComputer = false;\n\t\t\t\t\tvar bIsWindowsComputer = false;\n\n                    // If ConfigItem is not a user then check if it is a computer\n                    if (!bIsUser) {\n                        // Get IsWindowsComputer Result\n                        vm.view.relatedItemController.isConfigItemWindowsComputer(viewModel.BaseId);\n                        bIsWindowsComputer = vm.view.relatedItemController.isWindowsComputer;\n                    }\n\n                    var hasControlCenterURL = !_.isNull(session.consoleSetting.TrueControlCenterURL) && (session.consoleSetting.TrueControlCenterURL != \"\");\n\n                    return ((bIsWindowsComputer || bIsUser) && hasControlCenterURL) ? true : false;\n                },\n                showTCCInfo: function (dataItem) {\n                    var src = session.consoleSetting.TrueControlCenterURL;\n                    var bIsWindowsComputer = vm.view.relatedItemController.isWindowsComputer;\n                    var bIsUser = vm.view.relatedItemController.isUser;\n                    var tooltip = localization.ComputerManagement;\n\n                    if (bIsWindowsComputer) {\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"computer\");\n                    } else if (bIsUser) {\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"user\");\n                        tooltip = localization.UserManagement;\n                    }\n\n                    var options = {\r\n                        url: src,\r\n                        tooltip: tooltip\r\n                    }\n                    app.slideOutNav.show(options);\n                },\n                onContextmenuSelect: function (e) {\n                    var type = e.item.attributes[\"custom\"].value;\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    var dataItem =_.find(e.data.RelatesToConfigItem, function (item) { return item.BaseId==baseId; });\n\n                    (type == \"slideout\") ? vm.view.relatedItemController.showTCCInfo(dataItem) : vm.view.relatedItemController.showMoreInfo(dataItem);\n                },\n                onContextmenuActivate: function (e) {\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    // Replaced unneeded calls to IsUser/IsWindowsComputer\n                    /*\n                    vm.view.relatedItemController.isConfigItemWindowsComputer(baseId);\n                    vm.view.relatedItemController.isConfigItemUser(baseId);\n                    */\n                    // Get IsUser Result\n                    vm.view.relatedItemController.isConfigItemUser(baseId);\n                    vm.view.relatedItemController.isWindowsComputer = false;\n\n                    // If ConfigItem is not a user then check if it is a computer\n                    if (!vm.view.relatedItemController.isUser) {\n                        vm.view.relatedItemController.isConfigItemWindowsComputer(baseId);\n                    }\n\n                    var managementTitle = localization.UserManagement;\n                    if (vm.view.relatedItemController.isWindowsComputer) {\n                        managementTitle = localization.ComputerManagement;\n                    }\n\n                    var menuItems = [{\n                        text: managementTitle,\n                        imageUrl: \"/Content/Images/Icons/Other/control-center-launcher.png\",\n                        imageAttr: {\n                            height: '16px',\n                            width: '16px'\n                        },\n                        attr: {\n                            custom: 'slideout' //custom attribute holds the link type\n                        }\n                     },\n                     {\n                         text: \"<i class='fa fa-info-circle cursor-pointer'></i>\" + localization.AdditionalDetails,\n                        encoded: false,\n                        attr: {\n                            custom: 'info' //custom attribute holds the link type\n                        }\n                     }];\n\n                    var contextmenu = $(\"#tccmenu-related-ci\").data(\"kendoContextMenu\");\n                    contextmenu.setOptions({\n                        dataSource: menuItems\n                    });\n                }\n            });\n\n            var grid = vm.view.relatedItemController;\n\n            grid.dataSource.originalFilter = grid.dataSource.filter;\n\n            // Replace the original filter function.\n            grid.dataSource.filter = function () {\n\n                // Call the original filter function.\n                var result = grid.dataSource.originalFilter.apply(this, arguments);\n\n                // If a column is about to be filtered, then raise a new \"filtering\" event.\n                if (arguments.length > 0) {\n                    this.trigger(\"filterApplied\", arguments);\n                }\n\n                return result;\n            }\n\n            grid.dataSource.bind(\"filterApplied\", function (e) {\n\n                $.each($(cur_table).find(\"th a.k-header-column-menu i\"), function () {\n                    $(this).remove();\n                });\n\n                if (grid.dataSource.filter()) {\n\n                    var filters = grid.dataSource.filter().filters || [];\n                    var dsFilters = [];\n                    for (var i in filters) {\n                        if (filters[i].filters) {\n                            var innerFilters = filters[i].filters;\n                            for (var x in innerFilters) {\n                                dsFilters.push(innerFilters[x]);\n                            }\n                        } else {\n                            dsFilters.push(filters[i]);\n                        }\n                    }\n\n                    dsFilters = _.uniq(dsFilters, function(el) { return el.field; });\n\n                    for (var i in dsFilters) {\n                        $(cur_table).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\n                    }\n\n                }\n            });\n\n            var templateFrag = built(properties);\n            view = new kendo.View(templateFrag, { wrap: true, model: vm.view.relatedItemController });\n            callback(templateFrag);\n\n\n            if (properties.Disabled) {\n                var searchButton = $(view.content).find(\".search\");\n                searchButton.addClass(\"search-disabled\");\n            }\n\n            if (vm.view.relatedItemController.isUserCIVisible) {\n                vm.RequestedWorkItem.bind(\"change\", function (e) {\n                    vm.view.relatedItemController.userConfigItemDataSource.read();\n                });\n            }\n\n            //more functions\n            var isDuplicate = function (idToAdd) {\n                var n = false;\n                $.each(boundArray, function (i, item) {\n                    if (item.BaseId == idToAdd) {\n                        n = true;\n                    }\n                });\n                return n;\n            }\n\n            var addAffectedItem = function (baseId) {\n                if (isDuplicate(baseId)) { return; }\n                $.getJSON('/ConfigItems/GetAffectedItem', { id: baseId }, function (json) {\n                    var item = {\n                        BaseId: baseId,\n                        DisplayName: json.DisplayName,\n                        ClassName: json.ObjectClassName,\n                        Path: json.Path,\n                        AssetStatus: !_.isUndefined(json.AssetStatus) ? (json.AssetStatus != null) ? json.AssetStatus : \"\" : { Name: !_.isUndefined(json.AssetStatus) ? json.AssetStatus : \"\" },\n                        Status: !_.isUndefined(json.Status) ? (json.Status != null) ? json.Status : \"\" : { Name: !_.isUndefined(json.Status) ? json.Status : \"\" }\n                    };\n                    boundArray.push(item);\n                });\n            }\n        }\n    }\n\n    return definition;\n\n});\n","\ndefine('text!forms/predefined/childWorkItems/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">${Id}: ${Title}</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <p>#: localizationHelper.localize(\"Status\") #: #: Status # </p>\\r\\n                <p>#: localizationHelper.localize(\"LastModified\") #: #: kendo.toString(kendo.parseDate(LastModified), \"g\") # </p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 file-attachments\"\\r\\n         data-control=\"childWorkItems\"\\r\\n         data-control-bind=\"ChildWorkItem\"\\r\\n         data-control-show=\"IsParent\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>>\\r\\n\\r\\n    <div >\\r\\n        <button class=\"btn btn-primary\" data-role=\"button\" data-click=\"addClick\"><%= localization.Add %> </button>\\r\\n    </div>\\r\\n    \\r\\n    <% if ( IsMobileView == false ){ %>\\r\\n        <div data-control-grid=\"objectGrid\" class=\"inline-spacing\"></div>\\r\\n    <% } %>\\r\\n    \\r\\n    <% if ( IsMobileView ){ %>\\r\\n        <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\" data-bind=\"mobileGrid: ChildWorkItem\"></div>\\r\\n    <% } %>\\r\\n    \\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchildWorkItem\r\n**/\r\n\r\ndefine('forms/predefined/childWorkItems/controller',['require','text!forms/predefined/childWorkItems/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/childWorkItems/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            boundObj = vm;\r\n            \r\n            var properties = {\r\n                Disabled: false,\r\n                PropertyName: \"ChildWorkItem\",\r\n                ClassId: (vm.ClassName === \"System.WorkItem.ReleaseRecord\") ? \"d02dc3b6-d709-46f8-cb72-452fa5e082b8\" : \"a604b942-4c7b-2fb2-28dc-61dc6f465c68\",\r\n                PropertyToDisplay: \"Id,Title,Status,LastModified\",\r\n                ControllerUrl: \"/Search/GetChildWorkItems\",\r\n                IsMobileView: app.isMobileDevice()\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(properties));\r\n            var popupWindow = objectPickerPopup.getPopup(properties.ClassId, properties.PropertyToDisplay, properties.ControllerUrl);\r\n            var objectPicker = new Control(templateFrag.find(\"[data-control='childWorkItems']\"), boundObj, properties.PropertyName, properties, popupWindow);\r\n            var showProp = templateFrag.find(\"[data-control='childWorkItems']\").attr(\"data-control-show\");\r\n            templateFrag.find(\"[data-control='childWorkItems']\").attr(\"data-control\", \"childWorkItemsBound\");\r\n            callback(templateFrag);\r\n\r\n            // Determine if group should be visible (IsParent)\r\n            if (boundObj[showProp] === false || _.isNull(boundObj[showProp])) {\r\n                templateFrag.parents(\".row\").hide();\r\n            }\r\n           \r\n        }\r\n    }\r\n\r\n    var Control = function (targetEle, boundObj, name, properties, popupWindow) {\r\n\r\n        //use setters and getters if you want vm boundOdj to trigger change\r\n        if (_.isUndefined(boundObj[name])) {\r\n            boundObj.set(name, new kendo.data.ObservableArray([]));\r\n        }\r\n        var boundArray = boundObj.get(name);\r\n\r\n        var __construct = function () {\r\n            bindButtonEvents();\r\n            bindEvents();\r\n            createGrid();\r\n        }\r\n\r\n        var bindEvents = function () {\r\n            \r\n        }\r\n\r\n        var bindButtonEvents = function () {\r\n            var actions = {\r\n                addClick: function () {\r\n                    popupWindow.setSaveCallback(function (object) {\r\n                        if (isDuplicate(object.BaseId)) { return; }\r\n                        boundArray.push(object);\r\n                    });\r\n                    popupWindow.open();\r\n                }\r\n            };\r\n\r\n            //bind add click event\r\n            targetEle.find('[data-click]').each(function () {\r\n                if (actions[$(this).attr('data-click')]) {\r\n                    $(this).click(actions[$(this).attr('data-click')]);\r\n                }\r\n            });\r\n        }\r\n\r\n       \r\n        var createGrid = function () {\r\n            var gridEle = targetEle.find(\"[data-control-grid]\");\r\n            \r\n            var grid = gridEle.kendoGrid({\r\n                columns:\r\n                 [\r\n                  { field: \"Id\", title: localization.Id, attributes: { \"class\": \"grid-highlight-column\" } },\r\n                  { field: \"Title\", title: localization.Title },\r\n                  { field: \"Status\", title: localization.Status, template: \"#= (Status.Name)?Status.Name:Status #\", },\r\n                  {\r\n                      field: \"LastModified\",\r\n                      title: localization.LastModified,\r\n                      type: \"date\",\r\n                      template: \"#= (LastModified) ? kendo.toString(new Date(LastModified), 'g'):'' #\"\r\n                  },\r\n                  { field: \"BaseId\", title: \"BaseId\", hidden: \"true\" },\r\n                  { width: \"105px\", command: [{ name: \"destroy\", text: localization.Remove }]}\r\n                 ],\r\n                scrollable: false,\r\n                filterable: {\r\n                    extra: false,\r\n                    messages: {\r\n                        info: localization.Showitemswithvaluethat,\r\n                        and: localization.And,\r\n                        or: localization.Or,\r\n                        filter: localization.Filter,\r\n                        clear: localization.Clear\r\n                    },\r\n                    operators: {\r\n                        string: {\r\n                            startswith: localization.Startswith,\r\n                            contains: localization.Contains,\r\n                            eq: localization.Isequalto,\r\n                            neq: localization.Isnotequalto\r\n                        }\r\n                    }\r\n                },\r\n                reorderable: true,\r\n                sortable: true,\r\n                columnMenu: {\r\n                    messages: {\r\n                        columns: localization.ChooseColumns,\r\n                        filter: localization.Filter,\r\n                        sortAscending: localization.SortAscending,\r\n                        sortDescending: localization.SortDescending\r\n                    }\r\n                },\r\n                editable: {\r\n                    confirmDelete: \"Delete\",\r\n                    cancelDelete: \"Cancel\",\r\n                    mode: \"incell\",\r\n                    template: null,\r\n                    create: true,\r\n                    update: false,\r\n                    destroy: true\r\n                },\r\n                toolbar: {},\r\n                dataSource: {\r\n                    transport: {\r\n                        prefix: \"\",\r\n                        read: {\r\n                            url: \"\"\r\n                        }\r\n                    },\r\n                    type: \"aspnetmvc-ajax\",\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\",\r\n                        model: {\r\n                            id: \"BaseId\",\r\n                        }\r\n                    },\r\n                    data: {\r\n                        Data: boundArray,\r\n                        Total: boundArray.length\r\n                    }\r\n                },\r\n                selectable: true\r\n            });\r\n\r\n            gridEle.on(\"click\", \"td\", function (e) {\r\n                var highlightedColumn = $(e.currentTarget).hasClass(\"grid-highlight-column\");\r\n                if (!highlightedColumn) { return }\r\n\r\n                var kendoGrid = grid.data(\"kendoGrid\");\r\n                var selectedItem = kendoGrid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n                var strClass = selectedItem.ClassName.split(/[\\s.]+/);\r\n                var className = strClass[strClass.length - 1];\r\n                window.open(\"/\" + className + \"/Edit/\" + selectedItem.Id + \"/\", '_blank');\r\n            });\r\n        }\r\n\r\n        var isDuplicate = function (idToAdd) {\r\n            var n = false;\r\n            $.each(boundArray, function (i, item) {\r\n                if (item.BaseId == idToAdd) {\r\n                    n = true;\r\n                }\r\n            });\r\n            return n;\r\n        }\r\n\r\n        __construct();\r\n    }\r\n    return definition;\r\n});\n","\ndefine('text!forms/predefined/userInput/view.html',[],function () { return '<div>\\r\\n    <div class=\"editor-label\">\\r\\n        <label><%= localization.UserInputs %></label>\\r\\n    </div>\\r\\n    <div class=\"editor-field\">\\r\\n        <div data-control=\"userInputs\" data-control-bind=\"UserInput\">\\r\\n            <div data-control-grid=\"userInputsGrid\" class=\"inline-spacing\"></div>\\r\\n        </div>    \\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nuserInput\r\n**/\r\n\r\ndefine('forms/predefined/userInput/controller',['require','text!forms/predefined/userInput/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/userInput/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/activities/view.html',[],function () { return '<div data-control=\"activityDisplay\" data-control-bind=\"Activity\" class=\"activity-list-container\"\\r\\n\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    >\\r\\n</div>\\r\\n';});\n\n","/**\r\nactivities\r\n**/\r\n\r\ndefine('forms/predefined/activities/controller',['require','text!forms/predefined/activities/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/activities/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/multipleObjectPicker/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">${title}</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                # $.each(details, function (index, item) {\\r\\n                # <p>${item}</p>  #\\r\\n                });\\r\\n                #\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12\">\\r\\n    <div data-control=\"multipleObjectPicker\"\\r\\n         data-control-bind=\"HasRelatedWorkItems\"\\r\\n         id=\"<%= PropertyName %>\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n    <% } %>\\r\\n    >\\r\\n\\r\\n        <button data-role=\"button\" class=\"btn btn-primary\" data-click=\"addClick\"><%= localization.Add %> </button>\\r\\n        <div class=\"grid-container\">\\r\\n            <% if ( IsMobileView == false ){ %>\\r\\n            <div data-control-grid=\"objectGrid\" class=\"inline-spacing\"></div>\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( IsMobileView ){ %>\\r\\n            <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\" data-bind=\"mobileGrid: <%= PropertyName %>\" multiple-picker data-columns=\"<%= ClassProperties %>\"></div>\\r\\n            <% } %>\\r\\n        </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nmultipleObjectPicker\r\n**/\r\n\r\ndefine('forms/predefined/multipleObjectPicker/controller',['require','text!forms/predefined/multipleObjectPicker/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/multipleObjectPicker/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\r\n\r\n    var projectionSearchUrl = \"/Search/GetObjectProjectionByCriteria\";\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            boundObj = node.vm;\r\n            name = node.PropertyName;\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            var properties = {\r\n                Disabled: false,\r\n                ClassId: \"\",\r\n                PropertyToDisplay: [],\r\n                PropertyName: \"\",\r\n                ShowAddButton: true,\r\n                ShowRemoveButton: true,\r\n                Scoped: false,\r\n                ClassProperties: \"\",\r\n                SelectableRow: false,\r\n                SelectProperty: \"Id\",\r\n                ProjectionId: \"\",\r\n                HiddenProperty: null,//separated by comma only\r\n                IsMobileView: app.isMobileDevice()\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            if (properties.PropertyToDisplay.length <= 0) { properties.PropertyToDisplay = { DisplayName: \"DisplayName\", Path: \"Path\", Status: \"Status\" }; }\r\n            for (var prop in properties.PropertyToDisplay) {\r\n                properties.ClassProperties = properties.ClassProperties.concat(prop).concat(\",\");\r\n            }\r\n\r\n            if ((properties.PropertyName === \"HasRelatedWorkItems\") && (properties.ClassProperties.indexOf(\"AssetStatus\") < 0)) {\r\n                properties.ClassProperties = properties.ClassProperties.concat(\"AssetStatus\");\r\n            }\r\n\r\n            if (!_.isNull(properties.HiddenProperty)) { //This will be use to load properties that is not need to display\r\n                properties.ClassProperties += properties.HiddenProperty.concat(\",\");\r\n            }\r\n\r\n            //set properties for watchlist\r\n            if ((properties.PropertyName === \"WatchList\")) {\r\n                if (!session.consoleSetting.DashboardsLicense.IsValid || !session.enableWatchlist) {\r\n                    properties.Visible = false;\r\n                }\r\n                //hide add/remove option when current user is and enduser and he or she is not the affected user\r\n                if ((!session.user.Analyst) && (typeof boundObj.RequestedWorkItem != 'undefined') && (session.user.Id != boundObj.RequestedWorkItem.BaseId)) {\r\n                    properties.ShowAddButton = false;\r\n                    properties.ShowRemoveButton = false;\r\n                }\r\n            }\r\n\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(properties));\r\n\r\n            //used on RelatesToWorkItem relatinship, exclude current workitem from list\r\n            var filter = { field: \"BaseId\", operator: \"neq\", value: boundObj.BaseId };\r\n\r\n            var popupWindow = (properties.PropertyName === \"RelatesToWorkItem\") ?\r\n                objectPickerPopup.getPopup(properties.ClassId, properties.ClassProperties, null, filter) :\r\n                objectPickerPopup.getPopup(properties.ClassId, properties.ClassProperties);\r\n\r\n            var objectPicker = new Control(templateFrag.find(\"[data-control='multipleObjectPicker']\"), boundObj, name, properties, popupWindow);\r\n            templateFrag.find(\"[data-control='multipleObjectPicker']\").attr(\"data-control\", \"multipleObjectPickerBound\");\r\n\r\n            callback(templateFrag);\r\n        },\r\n        openObject: function (selectedItem) {\r\n            var strClass = selectedItem.ClassName.split(/[\\s.]+/);\r\n            var className = strClass[strClass.length - 1];\r\n            switch (className) {\r\n                case \"HardwareAsset\":\r\n                case \"SoftwareAsset\":\r\n                    window.open(\"/AssetManagement/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Lease\":\r\n                case \"Warranty\":\r\n                    window.open(\"/AssetManagement/Contract/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"SupportContract\":\r\n                    window.open(\"/AssetManagement/Contract/SupportandMaintenance/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Location\":\r\n                case \"NoticeEvent\":\r\n                case \"Organization\":\r\n                case \"Standard\":\r\n                case \"Subnet\":\r\n                case \"Vendor\":\r\n                case \"CatalogItem\":\r\n                case \"CostCenter\":\r\n                case \"Invoice\":\r\n                case \"PurchaseOrder\":\r\n                case \"Purchase\":\r\n                    window.open(\"/AssetManagement/Administration/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Licence\":\r\n                    window.open(\"/AssetManagement/Administration/License/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Consumable\":\r\n                    window.open(\"/AssetManagement/Administration/Consumables/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"ManualActivity\":\r\n                case \"ReviewActivity\":\r\n                case \"SequentialActivity\":\r\n                case \"ParallelActivity\":\r\n                case \"DependentActivity\":\r\n                    window.open(\"/Activity/Edit/\" + selectedItem.Id, '_blank');\r\n                    break;\r\n                case \"Incident\":\r\n                case \"ServiceRequest\":\r\n                case \"ChangeRequest\":\r\n                case \"Problem\":\r\n                case \"ReleaseRecord\":\r\n                    window.open(\"/\" + className + \"/Edit/\" + selectedItem.Id + \"/\", '_blank');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    var Control = function (targetEle, boundObj, name, properties, popupWindow) {\r\n\r\n        //use setters and getters if you want vm boundOdj to trigger change\r\n        if (_.isUndefined(boundObj[name])) {\r\n            boundObj.set(name, new kendo.data.ObservableArray([]));\r\n        }\r\n\r\n        //if related object is of single cardinality, create a new array and add the related object \r\n        var boundArray = !_.isUndefined(boundObj[name].length) ? boundObj.get(name) : new kendo.data.ObservableArray([boundObj.get(name)]);\r\n        boundArray.properties = properties;\r\n\r\n        var self = this;\r\n\r\n        var __construct = function () {\r\n            buildSubProperties();\r\n            bindButtonEvents();\r\n            createGrid();\r\n        }\r\n\r\n        var buildSubProperties = function () {\r\n            var propToFill = [];\r\n            //This will going to build array of display properties that has sub properties. Ex:Target_PurchaseHasPurchaseOrder.DisplayName\r\n            for (var prop in properties.PropertyToDisplay) {\r\n                var propSplit = prop.split(\".\");\r\n                if (propSplit.length > 1) {\r\n                    propToFill.push(propSplit);\r\n                }\r\n            }\r\n\r\n            //This will going to check all properties. If property is not existing, this will going to create a dummy property so that kendo will render the grid.\r\n            _.each(boundArray, function (data) {\r\n                _.each(propToFill, function (prop) {\r\n                    var mainProp = prop[0];\r\n                    var subProp = prop[1];\r\n                    if (_.isUndefined(data[mainProp])) {\r\n                        data[mainProp] = {};\r\n                        data[mainProp][subProp] = \"\";\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        //Make this global so that this can be used when inserting data outside multiple object picker.\r\n        //This is the solution for now since kendo grid doesn't have preDataBinding which I need to manipulate data before binding\r\n        //This function is called also from software asset \"copy license assignment\" task\r\n        boundArray.addItem = function (object) {\r\n            var isItemExist = false;\r\n            if (isDuplicate(object.BaseId)) {\r\n                return;\r\n            }\r\n            _boundArray = this;\r\n            //This will going to get object related items\r\n            if (!_.isUndefined(_boundArray.properties.ProjectionId) && !_.isNull(_boundArray.properties.ProjectionId) && _boundArray.properties.ProjectionId != \"\") {\r\n\r\n                var colNames = \"\";\r\n                var splitedProp = [];\r\n                //This will going to get thos property whos have sub child on it.\r\n                //Ex. PropertyToDisplay: { DisplayName: \"DisplayName\", \"Currency.Name\": \"Currency\", Cost: \"Cost\",\"Target_PurchaseHasPurchaseOrder.DisplayName\":\"Purchase Order\" }\r\n                // => Target_PurchaseHasPurchaseOrder.DisplayName and Currency.Name\r\n                for (var prop in _boundArray.properties.PropertyToDisplay) {\r\n                    var propperty = prop.split(\".\");\r\n                    if (propperty.length > 1) {\r\n                        splitedProp.push(propperty);\r\n                        colNames = colNames == \"\" ? prop : colNames + \",\" + prop;\r\n\r\n                    }\r\n                }\r\n\r\n                $.post(projectionSearchUrl, { baseId: object.BaseId, projectionId: _boundArray.properties.ProjectionId, columnNames: colNames }, function (result) {\r\n                    for (index in result.Data) {\r\n                        for (propIndex in splitedProp) {\r\n                            var value = result.Data[index][splitedProp[propIndex][0]];\r\n                            if (!_.isUndefined(value[splitedProp[propIndex][1]])) { //this will check if this property is undefined or not. This will going to avoid conflict with enums\r\n                                object[splitedProp[propIndex][0]] = value;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    _boundArray.push(object);\r\n                });\r\n            } else {\r\n                _boundArray.push(object);\r\n            }\r\n        }\r\n\r\n        var bindButtonEvents = function () {\r\n            var actions = {\r\n                addClick: function () {\r\n                    popupWindow.setSaveCallback(function (object) {\r\n                        boundArray.addItem(object);\r\n\r\n                        //if related object is of single cardinality, replace the value\r\n                        if (_.isUndefined(boundObj[name].length)) {\r\n                            boundArray.shift();\r\n                            boundObj.set(name, boundArray[0]);\r\n                        }\r\n                    });\r\n                    popupWindow.open();\r\n                }\r\n            };\r\n\r\n            //bind add click event\r\n            targetEle.find('[data-click]').each(function () {\r\n                if (actions[$(this).attr('data-click')]) {\r\n                    $(this).click(actions[$(this).attr('data-click')]);\r\n                }\r\n            });\r\n\r\n            //hide add button when ShowAddButton=false or if Disabled\r\n            if (!properties.ShowAddButton || properties.Disabled || properties.vm.isDisabled) {\r\n                targetEle.find('[data-click]').each(function () {\r\n                    $(this).hide();\r\n                });\r\n            }\r\n        }\r\n\r\n        var createGrid = function () {\r\n            var gridEle = targetEle.find(\"[data-control-grid]\");\r\n            //always unhide remove button for watchlist \r\n            var hideRemoveButton = (properties.PropertyName === \"WatchList\") ? false : (!properties.ShowRemoveButton || properties.Disabled || properties.vm.isDisabled);\r\n            //building grid columns\r\n            var columnFields = buildColumnFields(properties.PropertyToDisplay);\r\n            var columnToDisplay = buildGridColumns(columnFields, hideRemoveButton);\r\n\r\n            var grid = gridEle.kendoGrid({\r\n                columns: columnToDisplay,\r\n                scrollable: false,\r\n                filterable: {\r\n                    extra: false,\r\n                    messages: {\r\n                        info: localization.Showitemswithvaluethat,\r\n                        and: localization.And,\r\n                        or: localization.Or,\r\n                        filter: localization.Filter,\r\n                        clear: localization.Clear\r\n                    },\r\n                    operators: {\r\n                        string: {\r\n                            startswith: localization.Startswith,\r\n                            contains: localization.Contains,\r\n                            eq: localization.Isequalto,\r\n                            neq: localization.Isnotequalto\r\n                        }\r\n                    }\r\n                },\r\n                reorderable: true,\r\n                sortable: true,\r\n                columnMenu: {\r\n                    messages: {\r\n                        columns: localization.ChooseColumns,\r\n                        filter: localization.Filter,\r\n                        sortAscending: localization.SortAscending,\r\n                        sortDescending: localization.SortDescending\r\n                    }\r\n                },\r\n                editable: {\r\n                    confirmDelete: \"Delete\",\r\n                    cancelDelete: \"Cancel\",\r\n                    mode: \"incell\",\r\n                    template: null,\r\n                    create: true,\r\n                    update: false,\r\n                    destroy: true\r\n                },\r\n                toolbar: {},\r\n                dataSource: {\r\n                    transport: {\r\n                        prefix: \"\",\r\n                        read: {\r\n                            url: \"\"\r\n                        }\r\n                    },\r\n                    type: \"aspnetmvc-ajax\",\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\",\r\n                        model: {\r\n                            id: \"BaseId\",\r\n                            fields: columnFields\r\n                        }\r\n                    },\r\n                    data: {\r\n                        Data: boundArray,\r\n                        Total: boundArray.length\r\n                    }\r\n                },\r\n                dataBinding: function (e) {\r\n                    //Change to only pass specific item\r\n                    if (!_.isUndefined(e.items) && e.items.length > 0) {\r\n                        formatPropertyInBoundArray(e, properties.ClassProperties)\r\n                    }\r\n                },\r\n                dataBound: function (e) {\r\n                    if (properties.Scoped) {\r\n                        scopeBoundArray(this, properties.ClassId, properties.ClassProperties);\r\n                    }\r\n\r\n                },\r\n                selectable: properties.SelectableRow ? \"multiple row\" : false\r\n            });\r\n\r\n            gridEle.on(\"click\", \"td\", function (e) {\r\n                var highlightedColumn = $(e.currentTarget).hasClass(\"grid-highlight-column\");\r\n                if (!highlightedColumn) { return }\r\n\r\n                var kendoGrid = grid.data(\"kendoGrid\");\r\n                var selectedItem = kendoGrid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n                openObject(selectedItem);\r\n            });\r\n\r\n            if (!app.isMobile())\r\n            {\r\n                grid.data(\"kendoGrid\").dataSource.originalFilter = grid.data(\"kendoGrid\").dataSource.filter;\r\n\r\n                // Replace the original filter function.\r\n                grid.data(\"kendoGrid\").dataSource.filter = function () {\r\n\r\n                    // Call the original filter function.\r\n                    var result = grid.data(\"kendoGrid\").dataSource.originalFilter.apply(this, arguments);\r\n\r\n                    // If a column is about to be filtered, then raise a new \"filtering\" event.\r\n                    if (arguments.length > 0) {\r\n                        this.trigger(\"filterApplied\", arguments);\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n\r\n                grid.data(\"kendoGrid\").dataSource.bind(\"filterApplied\", function () {\r\n                    $.each($(grid).find(\"th a.k-header-column-menu i\"), function () {\r\n                        $(this).remove();\r\n                    });\r\n\r\n                    if (grid.data(\"kendoGrid\").dataSource.filter()) {\r\n\r\n                        var dsFilters = grid.data(\"kendoGrid\").dataSource.filter().filters || [];\r\n\r\n                        for (var i in dsFilters) {\r\n                            $(grid).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\r\n                        }\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n            \r\n\r\n        }\r\n\r\n        var isDuplicate = function (idToAdd) {\r\n            var n = false;\r\n            $.each(boundArray, function (i, item) {\r\n                if (item.BaseId == idToAdd) {\r\n                    n = true;\r\n                }\r\n            });\r\n            return n;\r\n        }\r\n\r\n        var buildGridColumns = function (columnFields, showRemovButton) {\r\n            var columns = [];\r\n\r\n            for (var prop in properties.PropertyToDisplay) {\r\n                var propertyKey = prop;\r\n                var localizationKey = properties.PropertyToDisplay[prop];\r\n                var localizedText = (!_.isUndefined(localization[localizationKey]) && [localizationKey].length > 0) ? localization[localizationKey] : localizationKey;\r\n                var columnClass = (properties.SelectableRow && propertyKey === properties.SelectProperty) ? \"grid-highlight-column\" : \"\";\r\n                var dateFormat = (columnFields[propertyKey].type == \"date\") ? \"{0:\" + kendo.culture().calendar.patterns.g + \"}\" : null;\r\n\r\n                columns.push({\r\n                    title: localizedText,\r\n                    width: \"210px\",\r\n                    field: propertyKey,\r\n                    filterable: {},\r\n                    encoded: true,\r\n                    attributes: {\r\n                        \"class\": columnClass\r\n                    },\r\n                    format: dateFormat\r\n                });\r\n            }\r\n            columns.push({ title: localization.BaseId, width: \"210px\", field: \"BaseId\", filterable: {}, encoded: true, hidden: true });\r\n            columns.push({ width: \"105px\", command: [{ name: \"destroy\", text: localization.Remove }], hidden: showRemovButton });\r\n\r\n            return columns;\r\n        }\r\n\r\n\r\n        //traverse and format date\r\n        var formatPropertyInBoundArray = function (currentItemEvent, columnString) {\r\n            var currentItem = currentItemEvent.items[0];\r\n            $.each(columnString.split(\",\"), function (i, column) {\r\n                $.each(boundArray, function (index, item) {\r\n                    //mutate poorly structured provided enum data \r\n                    if (column.indexOf('.') > 0) {\r\n                        var property = column.split('.')[0];\r\n                        if (_.isUndefined(item[property])) {\r\n                            boundArray[index][property] = { Id: \"\", Name: \"\" }\r\n                        }\r\n                    }\r\n                    if (currentItem.BaseId != item.BaseId && currentItemEvent.action == \"add\") return; //This will be only used when adding new items\r\n                    if (_.isUndefined(item[column]) || _.isNull(item[column])) { return; }\r\n                    if (_.isBoolean(item[column]) || _.isNumber(item[column])) { return; }\r\n                    if (!_.isUndefined(item[column].Name)) { boundArray[index][column] = item[column].Name; } //enums\r\n                });\r\n            });\r\n        }\r\n\r\n        var scopeBoundArray = function (grid, scopeClassId, PropertyToDisplay) {\r\n\r\n            if (scopeClassId === \"\") { return; }\r\n\r\n            $.ajax({\r\n                url: \"/Search/GetSearchObjectsByClassId\",\r\n                data: { searchFilter: \"\", classId: scopeClassId, columnNames: PropertyToDisplay },\r\n                async: false,\r\n                timeout: 3000,\r\n                success: function (data) {\r\n                    var objectIds = [];\r\n                    $.each(data.Data, function (ii, iitem) {\r\n                        objectIds.push(iitem[\"BaseId\"]);\r\n                    });\r\n\r\n                    $.each(grid._data, function (ii, iitem) {\r\n                        if (!_.contains(objectIds, this.BaseId)) {\r\n                            var row = grid.tbody.find(\"tr[data-uid='\" + this.uid + \"']\");\r\n                            row.hide();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        var openObject = function (selectedItem) {\r\n            var strClass = selectedItem.ClassName.split(/[\\s.]+/);\r\n            var className = strClass[strClass.length - 1];\r\n            switch (className) {\r\n                case \"HardwareAsset\":\r\n                case \"SoftwareAsset\":\r\n                    window.open(\"/AssetManagement/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Lease\":\r\n                case \"Warranty\":\r\n                    window.open(\"/AssetManagement/Contract/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"SupportContract\":\r\n                    window.open(\"/AssetManagement/Contract/SupportandMaintenance/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Location\":\r\n                case \"NoticeEvent\":\r\n                case \"Organization\":\r\n                case \"Standard\":\r\n                case \"Subnet\":\r\n                case \"Vendor\":\r\n                case \"CatalogItem\":\r\n                case \"CostCenter\":\r\n                case \"Invoice\":\r\n                case \"PurchaseOrder\":\r\n                case \"Purchase\":\r\n                    window.open(\"/AssetManagement/Administration/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Licence\":\r\n                    window.open(\"/AssetManagement/Administration/License/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Consumable\":\r\n                    window.open(\"/AssetManagement/Administration/Consumables/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"ManualActivity\":\r\n                case \"ReviewActivity\":\r\n                case \"SequentialActivity\":\r\n                case \"ParallelActivity\":\r\n                case \"DependentActivity\":\r\n                    window.open(\"/Activity/Edit/\" + selectedItem.Id, '_blank');\r\n                    break;\r\n                case \"Incident\":\r\n                case \"ServiceRequest\":\r\n                case \"ChangeRequest\":\r\n                case \"Problem\":\r\n                case \"ReleaseRecord\":\r\n                    window.open(\"/\" + className + \"/Edit/\" + selectedItem.Id + \"/\", '_blank');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        var buildColumnFields = function (properties) {\r\n            var stringProp;\r\n\r\n            stringProp = '{';\r\n            for (var prop in properties) {\r\n                var type = (prop.indexOf(\"Date\") > -1 || prop == \"LastModified\") ? \"date\" : \"string\";\r\n                stringProp += '\"' + prop + '\":{\"type\":\"' + type + '\"},';\r\n            }\r\n            stringProp = stringProp.replace(/,([^,]*)$/, '$1');\r\n            stringProp += '}';\r\n\r\n            return JSON.parse(stringProp);\r\n        }\r\n        __construct();\r\n    }\r\n    return definition;\r\n\r\n});\n","\ndefine('text!CustomSpace/Scripts/forms/predefined/history/view.html',[],function () { return '<div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-12\">\\r\\n            <div class=\"form-group\">\\r\\n                <div class=\"input-group\">\\r\\n                    <div id=\"showHistoryDropDown\"\\r\\n                        data-role=\"dropdownlist\"\\r\\n                        data-text-field=\"text\"\\r\\n                        data-value-field=\"value\"\\r\\n                        data-template=\"dropDownHistoryTemplate\"\\r\\n                    ></div>\\r\\n                    <span class=\"input-group-btn\">\\r\\n                        <button data-role=\"button\" class=\"btn btn-primary k-button\" data-bind=\"events: {click: view.historyController.loadHistory}\">\\r\\n                            <span class=\"fa cursor-pointer\"></span><%= localization.ShowHistory %>\\r\\n                        </button>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"editor-label\">\\r\\n                <label id=\"showHistoryTitle\" data-bind=\"source: historyLabel\" data-template=\"labelHistoryTemplate\">PRE TEMPLATE</label>\\r\\n            </div>\\r\\n            <div id=\"historyView\" data-bind=\"visible: showHistory\"></div>  \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--kendo templates-->\\r\\n<script type=\"text/x-kendo-template\" id=\"labelHistoryTemplate\">\\r\\n    # if (type == \"loading\") { #\\r\\n        <span class=\\'k-icon k-loading\\'></span>\\r\\n    # } else if (type == \"error\") { #\\r\\n        <span class=\\'fa fa-warning\\'></span> Unable to load history. Please try again.\\r\\n    # } else if (type == \"info\") { #\\r\\n        #: text #\\r\\n    # } #\\r\\n</script>\\r\\n<script type=\"text/x-kendo-template\" id=\"dropDownHistoryTemplate\">\\r\\n    <span style=\\'white-space: pre;\\'>#= data.text #</span>\\r\\n</script>\\r\\n<script type=\"text/x-kendo-template\" id=\"viewHistoryTemplate\">\\r\\n    <ul class=\\'timeline\\' data-template=\\'propertyHistoryTemplate\\' data-bind=\\'source: nodes\\'></ul>\\r\\n</script>\\r\\n<script type=\"text/x-kendo-template\" id=\"propertyHistoryTemplate\">\\r\\n    # if ((!_.isUndefined(ClassHistory) && ClassHistory.length > 0) || RelationshipHistory.length > 0) { #\\r\\n    <li>\\r\\n\\r\\n        # if (RelationshipHistory.length > 0) { #\\r\\n        <div class=\"timeline-badge primary\">\\r\\n            <i class=\"fa fa-code-fork\"></i>\\r\\n        </div>\\r\\n        # } else{ #\\r\\n        <div class=\"timeline-badge\">\\r\\n            <i class=\"fa\"></i>\\r\\n        </div>\\r\\n        # } #\\r\\n        <div class=\"timeline-panel\">\\r\\n            <div class=\"timeline-heading\">\\r\\n                <a><h4 class=\"timeline-title\">#: UserName #</h4></a>\\r\\n                <p><small class=\"text-muted\"><i class=\"fa fa-clock-o\"></i>#: kendo.toString(new Date(DateOccurred),\\'g\\') #</small></p>\\r\\n            </div>\\r\\n            <div class=\"timeline-body\">\\r\\n                # if ((!_.isUndefined(ClassHistory) && ClassHistory.length > 0)) { #\\r\\n                <h5><%= localization.PropertyChanges %>:</h5>\\r\\n                <div class=\"table-responsive\">\\r\\n                    <table class=\"table\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th><%= localization.Property %></th>\\r\\n                                <th><%= localization.OldValue %></th>\\r\\n                                <th><%= localization.NewValue %></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            # for (var i = 0; i < ClassHistory.length; i++) { #\\r\\n                            <tr>\\r\\n                                <td>#: localizationHelper.localize(ClassHistory[i].Key.replace(/ /g,\"\"), ClassHistory[i].Key) #</td>\\r\\n                                <td>#: ClassHistory[i].BeforeValue && ClassHistory[i].IsDate ? kendo.toString(new Date(ClassHistory[i].BeforeValue),\\'g\\') : localizationHelper.localize(ClassHistory[i].BeforeValue.replace(/ /g,\"\"), ClassHistory[i].BeforeValue) #</td>\\r\\n                                <td>#: ClassHistory[i].AfterValue && ClassHistory[i].IsDate ? kendo.toString(new Date(ClassHistory[i].AfterValue),\\'g\\') : localizationHelper.localize(ClassHistory[i].AfterValue.replace(/ [0-9]/g,\"\"), ClassHistory[i].AfterValue) #</td>\\r\\n                            </tr>\\r\\n                            # } #\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                # } #\\r\\n                # if (RelationshipHistory.length > 0) { #\\r\\n                <h5><%= localization.RelationshipChanges %>:</h5>\\r\\n                <div class=\"table-responsive\">\\r\\n                    <table class=\"table\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th></th>\\r\\n                                <th><%= localization.RelationshipClass %></th>\\r\\n                                <th><%= localization.Item %></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            # for (var i = 0; i < RelationshipHistory.length; i++) { #\\r\\n                            <tr>\\r\\n                                # if (RelationshipHistory[i].ChangeType === \"Insert\") { #\\r\\n                                <td><i class=\"fa fa-plus text-success\"></i></td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \").replace(/ /g,\"\"), RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \")) #</td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].Item.replace(/ /g,\"\"), RelationshipHistory[i].Item) #</td>\\r\\n                                # } #\\r\\n\\r\\n                                # if (RelationshipHistory[i].ChangeType === \"Delete\") { #\\r\\n                                <td><i class=\"fa fa-minus text-danger\"></i></td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \").replace(/ /g,\"\"), RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \")) #</td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].Item.replace(/ /g,\"\"), RelationshipHistory[i].Item) #</td>\\r\\n                                # } #\\r\\n\\r\\n                                # if (RelationshipHistory[i].ChangeType === \"Update\") { #\\r\\n                                <td><i class=\"fa fa-exchange text-info\"></i></td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \").replace(/ /g,\"\"), RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \")) #</td>\\r\\n                                <td><strike class=\"text-danger\">#: localizationHelper.localize(RelationshipHistory[i].PreviousItem.replace(/ /g,\"\"), RelationshipHistory[i].PreviousItem) #</strike> <span class=\"text-success\">#: localizationHelper.localize(RelationshipHistory[i].Item.replace(/ /g,\"\"), RelationshipHistory[i].Item) #</span></td>\\r\\n                                # } #\\r\\n\\r\\n                            </tr>\\r\\n                            # } #\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                # } #\\r\\n            </div>\\r\\n        </div>\\r\\n    </li>\\r\\n    # } #\\r\\n    # for (var i = 0; i < ActionLogHistory.length; i++) { #\\r\\n    <li class=\"timeline-inverted\">\\r\\n        <div class=\"timeline-badge info\"><i class=\"fa fa-user\"></i></div>\\r\\n        <div class=\"timeline-panel\">\\r\\n            <div class=\"timeline-heading\">\\r\\n                <h4 class=\"timeline-title\">#: localizationHelper.localize(ActionLogHistory[i].EnteredBy.replace(/ /g,\"\"), ActionLogHistory[i].EnteredBy) #</h4>\\r\\n                <p><small class=\"text-muted\"><i class=\"fa fa-clock-o\"></i> #: kendo.toString(new Date(DateOccurred),\\'g\\') #</small></p>\\r\\n            </div>\\r\\n            <div class=\"timeline-body\">\\r\\n                <h5>#: localizationHelper.localize(ActionLogHistory[i].ActionType.replace(/ /g,\"\"), ActionLogHistory[i].ActionType) #</h5>\\r\\n                <blockquote>#: localizationHelper.localize(ActionLogHistory[i].Description.replace(/ /g,\"\"), ActionLogHistory[i].Description) #</blockquote>\\r\\n            </div>\\r\\n        </div>\\r\\n    </li>\\r\\n    # } #\\r\\n</script>\\r\\n';});\n\n","/*jslint nomen: true */\r\n/*global _, $, app, console, define, kendo */\r\n/*eslint no-console: [\"error\", { allow: [\"log\", \"warn\", \"error\"] }] */\r\n\r\n/**\r\nhistory\r\n**/\r\n\r\ndefine('CustomSpace/Scripts/forms/predefined/history/controller',[\r\n    'text!CustomSpace/Scripts/forms/predefined/history/view.html'\r\n], function (\r\n    historyTemplate\r\n) {\r\n    'use strict';\r\n    var definition = {\r\n        template: historyTemplate,\r\n        build: function (vm, node, callback) {\r\n            if (!_.isUndefined(app.storage.custom) && app.storage.custom.get('debug')) {\r\n                console.log('historyController:build', {\r\n                    'vm': vm,\r\n                    'node': node,\r\n                    'callback': callback\r\n                });\r\n            }\r\n\r\n            vm.setWithNoDirty = function (variable, value) {\r\n                var isDirtyState = vm.get('isDirty');\r\n                vm.set(variable, value);\r\n                vm.set('isDirty', isDirtyState);\r\n            };\r\n\r\n            /*\r\n            if (!_.isUndefined(pageForm.newWI)) { vm.set('HistoryButton', !pageForm.newWI); } //workitem\r\n            if (!_.isUndefined(pageForm.isNew)) { vm.set('HistoryButton', !pageForm.isNew); } //AM\r\n            */\r\n\r\n            vm.view.historyController = {\r\n                loadHistory: function () {\r\n                    var kendoDropDownList = $('#showHistoryDropDown').data('kendoDropDownList');\r\n                    vm.view.historyController.getObjectHistory(kendoDropDownList.value(), kendoDropDownList.text());\r\n                },\r\n\r\n                dropDownDataSet: false,\r\n\r\n                getDropDownDataSource: function () {\r\n                    var data = [],\r\n                        getChildren = function (viewModel, prefix) {\r\n                            prefix = prefix || '';\r\n                            data.push({\r\n                                text: prefix + viewModel.Id + ' - ' + viewModel.Title,\r\n                                value: viewModel.BaseId\r\n                            });\r\n                            if (viewModel.Activity !== undefined && viewModel.Activity.length > 0) {\r\n                                $.each(viewModel.Activity, function (Key, activity) {\r\n                                    getChildren(activity, prefix + '    ');\r\n                                });\r\n                            }\r\n                        };\r\n\r\n                    getChildren(vm);\r\n\r\n                    return data;\r\n                },\r\n\r\n                getObjectHistory: function (objectGUID, objectTitle) {\r\n                    vm.setWithNoDirty('historyLabel', { 'type': 'loading' });\r\n                    vm.setWithNoDirty('showHistory', false);\r\n\r\n                    $.ajax({\r\n                        url: '/Search/GetObjectHistory',\r\n                        data: { 'id': objectGUID },\r\n                        type: 'GET',\r\n                        cache: false,\r\n                        success: function (data) {\r\n                            vm.setWithNoDirty('historyLabel', { 'type': 'info', 'text': objectTitle });\r\n\r\n                            /*\r\n                            if(vm.view.historyController.model !== undefined) {\r\n                                vm.view.historyController.view.destroy();\r\n                            }*/\r\n\r\n                            try {\r\n                                if (vm.view.historyController.model === undefined) {\r\n                                    var customhistoryModel = kendo.observable({\r\n                                        nodes: data\r\n                                    });\r\n\r\n                                    vm.view.historyController.model = customhistoryModel;\r\n\r\n                                    vm.view.historyController.view = new kendo.View(\r\n                                        'viewHistoryTemplate',\r\n                                        {\r\n                                            model: customhistoryModel,\r\n                                            wrap: false,\r\n                                            init: $.noop //empty function\r\n                                        }\r\n                                    );\r\n\r\n                                    vm.view.historyController.view.render($('#historyView'));\r\n                                } else {\r\n                                    vm.view.historyController.model.set('nodes', data);\r\n                                }\r\n                            } catch (err) {\r\n                                if (!_.isUndefined(app.storage.custom) && app.storage.custom.get('debug')) {\r\n                                    console.log('historyController:error', {\r\n                                        'err': err\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            vm.setWithNoDirty('showHistory', true);\r\n                        },\r\n                        error: function (data) {\r\n                            vm.setWithNoDirty('historyLabel', { 'type': 'error' });\r\n                            if (!_.isUndefined(app.storage.custom) && app.storage.custom.get('debug')) {\r\n                                console.log('historyController:error', {\r\n                                    'err': data\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            function buildAndRender() {\r\n                var builtHistory = _.template(historyTemplate),\r\n                    historyElm = $(builtHistory(node));\r\n                \r\n                historyElm.find('#showHistoryDropDown').kendoDropDownList({\r\n                    dataSource: [{\r\n                        'text': vm.Id + ' - ' + vm.Title,\r\n                        'value': vm.BaseId\r\n                    }],\r\n                    select: function (event) {\r\n                        var dataItem = this.dataItem(event.item);\r\n                        vm.view.historyController.getObjectHistory(dataItem.value, dataItem.text);\r\n                    },\r\n                    open: function (event) {\r\n                        if (!vm.view.historyController.dataSourceSet) {\r\n                            event.sender.setDataSource(vm.view.historyController.getDropDownDataSource());\r\n                            vm.view.historyController.dataSourceSet = true;\r\n                        }\r\n                    }\r\n                }).data('kendoDropDownList');\r\n                \r\n                if (typeof callback === 'function') {\r\n                    callback(historyElm);\r\n                }\r\n            }\r\n            \r\n            function initHistory() {\r\n                if (!_.isUndefined(app.storage.custom) && app.storage.custom.get('debug')) {\r\n                    console.log('historyController:initHistory');\r\n                }\r\n                vm.setWithNoDirty('historyLabel', { 'type': 'info', 'text': '' });\r\n                buildAndRender();\r\n            }\r\n            \r\n            initHistory();\r\n        }\r\n    };\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/predefined/billableTime/view.html',[],function () { return '<div>\\r\\n    <div data-control=\"billableTime\" data-control-bind=\"AppliesToWorkItem\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    <div class=\"row\" data-bind=\"visible: view.billableTimeController.isVisible\">\\r\\n        <div class=\"col-md-3\">\\r\\n            <div class=\"form-group\" data-cid=\"work-itemBillableTime\" data-cid-propname=\"hours\">\\r\\n                <label for=\"hourNumeric\"><%= localization.hours %></label>\\r\\n                <div class=\"form-control form-control-picker input-sm\">\\r\\n                    <input id=\"hourNumeric\" data-role=\"numerictextbox\"\\r\\n                           data-format=\"n0\"\\r\\n                           data-min=\"0\"\\r\\n                           data-bind=\"value: view.billableTimeController.btHour,\\r\\n                               events: {spin: view.billableTimeController.onHourSpin }\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-3\">\\r\\n            <div class=\"form-group\" data-cid=\"work-itemBillableTime\" data-cid-propname=\"minutes\">\\r\\n                <label for=\"minuteNumeric\"><%= localization.minutes %></label>\\r\\n                <div class=\"form-control form-control-picker input-sm\">\\r\\n                    <input id=\"minuteNumeric\" data-role=\"numerictextbox\"\\r\\n                           data-format=\"n0\"\\r\\n                           data-min=\"0\"\\r\\n                           data-bind=\"value: view.billableTimeController.btMinute,\\r\\n                               events: {spin: view.billableTimeController.onMinuteSpin }\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-6 margin-t30\">\\r\\n            <button class=\"btn btn-primary\" data-role=\"button\" data-bind=\"events: {click: view.billableTimeController.onAddClick}\" data-cid=\"billableTimeAddButton\"><%= localization.Add %> </button>\\r\\n            <button class=\"btn btn-default\" data-role=\"button\" data-bind=\"events: {click: view.billableTimeController.onSubtractClick}\" data-cid=\"billableTimeSubtractButton\"><%= localization.Subtract %> </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-12\">\\r\\n            <div data-control=\"grid\"></div>\\r\\n            <div data-role=\"grid\" class=\"billable-time-grid\"\\r\\n                 data-bind=\"source: view.billableTimeController.dataSource, events:{dataBinding: view.billableTimeController.onDataBinding, dataBound: view.billableTimeController.onDataBound}\"\\r\\n                 data-selectable=\"false\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"false\"\\r\\n                 data-editable=\"{mode: \\'incell\\'}\"\\r\\n                 data-columns=\\'[\\r\\n                { field: \"BillableTime.DisplayName\", title: localization.Analyst, width: \"300px\", attributes: { \"class\": \"grid-highlight-column\" } },\\r\\n                { field: \"BaseId\", title: localization.BaseId, width: \"30px\", hidden: true },\\r\\n                { field: \"LastUpdatedDisplay\", title: localization.LastUpdated, width: \"100px\" },\\r\\n                { field: \"TimeInMinutes\", title: localization.TimeInMinutes, width: \"100px\", attributes: { \"class\": \"pull-right\" } },\\r\\n                <% if ( !Disabled ){ %>\\r\\n                 { width: \"100px\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove}]}\\r\\n                <% } %>\\r\\n            ]\\'>\\r\\n            </div>\\r\\n            <div class=\"pull-right\">\\r\\n                <label data-bind=\"html: view.billableTimeController.btTotalTimeInString\"></label>\\r\\n            </div>\\r\\n        </div>\\r\\n        </div>\\r\\n</div>\\r\\n</div>';});\n\n","/**\r\nbillableTime\r\n**/\r\n\r\ndefine('forms/predefined/billableTime/controller',['require','text!forms/predefined/billableTime/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/billableTime/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                Disabled: node.disabled,\r\n                PropertyName: \"AppliesToWorkItem\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var name = properties.PropertyName;\r\n            var boundArray = _.isUndefined(boundObj[name]) ? boundObj[name] = new kendo.data.ObservableArray([]) : boundObj[name];\r\n            boundArray.LastUpdatedDisplay = \"\";\r\n            \r\n\r\n            vm.view.billableTimeController = new kendo.observable({\r\n                btHour: 0,\r\n                btMinute: 0,\r\n                btTotalTime: 0,\r\n                btTotalTimeInString: \"\",\r\n                onHourSpin: function (e) {\r\n                    vm.view.billableTimeController.set('btHour', e.sender.value());\r\n                },\r\n                onMinuteSpin: function (e) {\r\n                    vm.view.billableTimeController.set('btMinute', e.sender.value());\r\n                },\r\n                dataSource: new kendo.data.DataSource({\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\",\r\n                        model: {\r\n                            id: \"BaseId\",\r\n                        }\r\n                    },\r\n                    data: {\r\n                        Data: boundArray,\r\n                        Total: boundArray.length\r\n                    }\r\n                }),\r\n                onDataBinding: function (e) {\r\n                    $.each(boundArray, function (i, item) {\r\n                        if (_.isUndefined(item.BillableTime)) {\r\n                            item.BillableTime = { BasedId: null, DisplayName: null };\r\n                        }\r\n                        item.LastUpdatedDisplay =\r\n                            !_.isUndefined(item.LastUpdated)\r\n                                ? kendo.toString(new Date(item.LastUpdated), 'g')\r\n                                : null;\r\n                    });\r\n                },\r\n                onDataBound: function (e) {\r\n                    for (var item in e.sender._data) {\r\n                        var dataItem = e.sender._data[item];\r\n                        if (_.isNull(dataItem.BillableTime.BasedId)) {\r\n                            var row = e.sender.tbody.find(\"tr[data-uid='\" + dataItem.uid + \"']\");\r\n                            row.hide();\r\n                        }\r\n                    }\r\n                },\r\n                onAddClick: function (e) {\r\n                    var hour = vm.view.billableTimeController.btHour;\r\n                    var minute = vm.view.billableTimeController.btMinute;\r\n                    var totalTime = vm.view.billableTimeController.btTotalTime;\r\n\r\n                    var isExisting = false;\r\n                    \r\n                    $.each(boundArray, function (i, item) {\r\n                        if (item.BillableTime.BaseId === session.user.Id) {\r\n                            item.set(\"LastUpdated\", new Date().toISOString());\r\n                            item.set(\"TimeInMinutes\", parseInt(item.get(\"TimeInMinutes\")) + (hour * 60) + minute);\r\n                            isExisting = true;\r\n                            return false;\r\n                        }\r\n                    });\r\n                    if (!isExisting) {\r\n                        var newBillableModel = {\r\n                            BillableTime: {\r\n                                BaseId: session.user.Id,\r\n                                DisplayName: session.user.Name\r\n                            },\r\n                            LastUpdated: new Date().toISOString(),\r\n                            LastModified: new Date().toISOString(),\r\n                            TimeInMinutes: (hour * 60) + minute,\r\n                            BasedId: app.lib.newGUID(),\r\n                            Image: app.config.iconPath + app.config.icons[\"comment\"],\r\n                            EnteredDate: new Date().toISOString(),\r\n                            ClassTypeId: \"6645cdbe-78a3-ab81-7de9-638b733214fe\",\r\n                            EnteredBy: session.user.Name,\r\n                            Title: null,\r\n                            Description: null\r\n                        }\r\n                        boundArray.push(newBillableModel);\r\n                    }\r\n                    vm.view.billableTimeController.computeTotalTime();\r\n                    vm.view.billableTimeController.resetTime();\r\n                },\r\n                onSubtractClick: function (e) {\r\n                    var hour = vm.view.billableTimeController.btHour;\r\n                    var minute = vm.view.billableTimeController.btMinute;\r\n                    var totalTime = vm.view.billableTimeController.btTotalTime;\r\n\r\n                    if ((totalTime < (hour * 60)) || (totalTime < minute)) {\r\n                        kendo.ui.ExtAlertDialog.show({\r\n                            title: localization.SubtractTimeTitle,\r\n                            message: localization.SubtractTimeMessage\r\n                        });\r\n                    } else {\r\n                        $.each(boundArray, function (i, item) {\r\n                            if (item.BillableTime.BaseId === session.user.Id) {\r\n                                item.set(\"LastUpdated\", new Date().toISOString());\r\n                                item.set(\"TimeInMinutes\", parseInt(item.get(\"TimeInMinutes\")) - (hour * 60) - minute);\r\n                                isExisting = true;\r\n                            }\r\n                        });\r\n                        vm.view.billableTimeController.computeTotalTime();\r\n                        vm.view.billableTimeController.resetTime();\r\n                    }\r\n                },\r\n                computeTotalTime: function (e) {\r\n                    var itemTotalTime = 0;\r\n                    \r\n                    $.each(boundArray, function (i, item) {\r\n                        if (item.get(\"ClassTypeId\") === \"6645cdbe-78a3-ab81-7de9-638b733214fe\") {\r\n                            itemTotalTime += parseInt(item.get(\"TimeInMinutes\"));\r\n                        }\r\n                    });\r\n\r\n                    if (boundArray.length > 1) {\r\n                        if (vm.view.billableTimeController.get(\"btTotalTime\") != null)\r\n                            itemTotalTime += parseInt(vm.view.billableTimeController.get(\"btTotalTime\"));\r\n                    }\r\n                    \r\n                    vm.view.billableTimeController.btTotalTime = itemTotalTime;\r\n                    vm.view.billableTimeController.btTotalTimeInString =\r\n                        (\"{0} : {1} {2}\")\r\n                        .replace(\"{0}\", localization.Totaltime)\r\n                        .replace(\"{1}\", vm.view.billableTimeController.btTotalTime)\r\n                        .replace(\"{2}\", localization.minutes);\r\n                },\r\n                resetTime: function () {\r\n                    $('#hourNumeric').data(\"kendoNumericTextBox\").value(0);\r\n                    vm.view.billableTimeController.set('btHour', 0);\r\n                    $('#minuteNumeric').data(\"kendoNumericTextBox\").value(0);\r\n                    vm.view.billableTimeController.set('btMinute', 0);\r\n                },\r\n                isVisible: !vm.isDisabled\r\n            });\r\n            vm.view.billableTimeController.computeTotalTime();\r\n            var view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/knowledgeArticle/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileHTMLGridTemplate\" class=\"mobile-grid\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">${KnowledgeArticleID}: ${Title}</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                # if ( Category && Category.length > 0 ){ #\\r\\n                <p>#: localizationHelper.localize(\"Category\") #: #: Category # </p>\\r\\n                # } #\\r\\n                # if ( Type && Type.length > 0 ){ #\\r\\n                <p>#: localizationHelper.localize(\"Type\") #: #: Type # </p>\\r\\n                # } #\\r\\n            </div>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <a class=\"k-delete-button\">#: localization.Remove #</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 file-attachments\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>>\\r\\n    <div>\\r\\n        <button class=\"btn btn-primary\" data-role=\"button\" data-bind=\"events:{click: view.knowledgeArticleModel.addClick}\"><%= localization.Add %> </button>\\r\\n    </div>\\r\\n    \\r\\n    <% if ( IsMobileView == false ){ %>\\r\\n        <div data-role=\"grid\"\\r\\n            data-bind=\"source: RelatedHTMLKB, events:{remove: view.knowledgeArticleModel.removeRelatedKB}\"\\r\\n            data-selectable=\"true\"\\r\\n            data-sortable=\"true\"\\r\\n            data-filterable=\"true\"\\r\\n            data-scrollable=\"false\"\\r\\n            data-column-menu=\"true\"\\r\\n            data-pageable=\"false\"\\r\\n            data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n            data-columns=\\'[\\r\\n                { field: \"KnowledgeArticleID\", title: localization.Id, width: \"10%\", attributes:{class:\"grid-highlight-column\"}},\\r\\n                { field: \"Title\", title: localization.Title, width: \"50%\", attributes:{class:\"grid-highlight-column\"}},\\r\\n                { field: \"Category\", title: localization.Category, width: \"20%\" },\\r\\n                { field: \"Type\", title: localization.Type, width: \"20%\" },\\r\\n                { width: \"4%\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove }] }\\r\\n                ]\\'>\\r\\n        </div>\\r\\n    <% } %>\\r\\n    <% if ( IsMobileView ){ %>\\r\\n        <div data-role=\"listview\" data-template=\"mobileHTMLGridTemplate\" data-bind=\"source: RelatedHTMLKB, events: {remove: view.knowledgeArticleModel.removeRelatedKB}\" class=\"mobile-grid-parent\"></div>\\r\\n    <% } %>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/predefined/knowledgeArticle/popup.html',[],function () { return '<div class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-5\">\\r\\n                    <div class=\"form-group\">\\r\\n                        <label><%= localization.SearchText %></label>\\r\\n                        <span class=\"k-textbox k-space-right\">\\r\\n                            <input type=\"text\" data-bind=\"value: searchText\" />\\r\\n                            <span data-bind=\"events:{click: search}\" class=\"fa fa-search cursor-pointer\">&nbsp;</span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <label><%= localization.SelectObjects %></label>\\r\\n\\r\\n            <div class=\"objectPicker-container\">\\r\\n                <div class=\"k-widget k-grid k-secondary\"\\r\\n                     data-role=\"grid\"\\r\\n                     data-bind=\"source: dataSource\"\\r\\n                     data-selectable=\"multiple, row\"\\r\\n                     data-sortable=\"true\"\\r\\n                     data-filterable=\"true\"\\r\\n                     data-scrollable=\"false\"\\r\\n                     data-column-menu=\"true\"\\r\\n                     data-pageable=\"true\"\\r\\n                     data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n                     data-columns=\\'[\\r\\n                { field: \"ArticleId\", title: localization.Id, width: \"10%\"},\\r\\n                { field: \"Title\", title: localization.Title, width: \"90%\"}\\r\\n                ]\\'>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"objectPicker-actions\">\\r\\n                <button data-role=\"button\" data-bind=\"events:{click: add}\" class=\"btn btn-primary k-button\"><%= localization.Add %> </button>\\r\\n                <button data-role=\"button\" data-bind=\"events:{click: remove}\" class=\"btn btn-danger k-button\"><%= localization.Remove %> </button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"k-widget k-grid k-secondary objectPicker-grid2-container\"\\r\\n                 data-role=\"grid\"\\r\\n                 data-bind=\"source: selectedItems\"\\r\\n                 data-selectable=\"multiple, row\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"true\"\\r\\n                 data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n                 data-columns=\\'[\\r\\n                { field: \"ArticleId\", title: localization.Id, width: \"10%\"},\\r\\n                { field: \"Title\", title: localization.Title, width: \"90%\"}\\r\\n                ]\\'>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n';});\n\n","/**\r\nknowledgeArticle\r\n**/\r\n\r\ndefine('forms/predefined/knowledgeArticle/controller',['require','text!forms/predefined/knowledgeArticle/view.html','text!forms/predefined/knowledgeArticle/popup.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/knowledgeArticle/view.html\");\r\n    var popupTpl = require(\"text!forms/predefined/knowledgeArticle/popup.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var properties = {\r\n                Disabled: false,\r\n                IsMobileView: app.isMobileDevice()\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //build the template for the popup window\r\n            var built = _.template(popupTpl);\r\n            var popupView = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in popup window\r\n            callback(popupView.render());\r\n\r\n            //view model\r\n            vm.view.knowledgeArticleModel = kendo.observable({\r\n                addClick: function (e) {\r\n                    var popupWindow= popupView.element; \r\n                    win = popupWindow.kendoCiresonWindow({\r\n                        title: localization.SelectObject,\r\n                        width: 750,\r\n                        height: 710,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the popup element\r\n                    var modalViewModel = new kendo.observable({\r\n                        dataSource: new kendo.data.DataSource({\r\n                            transport: {\r\n                                read: {\r\n                                    url: \"/api/V3/KnowledgeBase/GetHTMLArticles\",\r\n                                    dataType: \"json\",\r\n                                    data: { userId: session.user.Id },\r\n                                    cache: false\r\n                                }\r\n                            },\r\n                            schema: {\r\n                                model: {\r\n                                    fields: {\r\n                                        ArticleId: { type: \"string\" },\r\n                                        Title: { type: \"string\" },\r\n                                        Category: { type: \"string\" },\r\n                                        Type: { type: \"string\" }\r\n                                    }\r\n                                }\r\n                            },\r\n                            pageSize: 5,\r\n                        }),\r\n                        selectedItems: new kendo.data.ObservableArray([]),\r\n                        searchText:\"\",\r\n                        search: function(e){\r\n                            var val = this.get(\"searchText\");\r\n                            this.dataSource.read();\r\n                            this.dataSource.filter({\r\n                                logic: \"or\",\r\n                                filters: [\r\n                                    {\r\n                                        field: \"ArticleId\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Title\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Category\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Type\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    }\r\n                                ]\r\n                            });\r\n                        },\r\n                        add: function (e) {\r\n                            var gridEle = popupWindow.find('[data-role=\"grid\"]').first();\r\n                            var grid = gridEle.data(\"kendoGrid\");\r\n                            var selectedRows = grid.select();\r\n\r\n                            for (var i = 0; i < selectedRows.length; i++) {\r\n                                var dataItem = grid.dataItem(selectedRows[i]);\r\n                                if (dataItem) {\r\n                                    //check first if article is already on the selected list before adding it to the second grid\r\n                                    var articleIds = _.pluck(this.selectedItems, \"ArticleId\");\r\n                                    var isAdded = _.contains(articleIds, dataItem.ArticleId);\r\n\r\n                                    if (!isAdded) {\r\n                                        this.selectedItems.push(dataItem);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var selectedGridEle = popupWindow.find('[data-role=\"grid\"]').last();\r\n                            selectedGridEle.data(\"kendoGrid\").dataSource.query({ page: 1, pageSize: 5 });\r\n                        },\r\n                        remove: function (e) {\r\n                            var gridEle = popupWindow.find('[data-role=\"grid\"]').last();\r\n                            var grid = gridEle.data(\"kendoGrid\");\r\n                            var selectedRows = grid.select();\r\n\r\n                            for (var i = 0; i < selectedRows.length; i++) {\r\n                                var dataItem = grid.dataItem(selectedRows[i]);\r\n                                this.selectedItems.pop(dataItem);\r\n                            }\r\n                        },\r\n                        save: function (e) {\r\n                            var relatedHTMLKB = !_.isUndefined(vm.get(\"RelatedHTMLKB\")) ? vm.get(\"RelatedHTMLKB\") : [];\r\n                            _.each(this.selectedItems, function (item) {\r\n                                relatedHTMLKB.push({\r\n                                    KnowledgeArticleID: item.ArticleId,\r\n                                    WorkItemID: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.BaseId : null,\r\n                                    WorkItemId: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.Id : null,\r\n                                    AssetID: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.BaseId : null,\r\n                                    AssetId: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.Id : null,\r\n                                    Title: item.Title,\r\n                                    Category: item.Category,\r\n                                    Type: item.Type\r\n                                });\r\n                            });\r\n\r\n                            vm.set(\"RelatedHTMLKB\", relatedHTMLKB);\r\n\r\n                            win.close();\r\n                        },\r\n                        cancel: function (e) {\r\n                            win.close();\r\n                        }\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(popupWindow, modalViewModel);\r\n\r\n                    popupWindow.removeClass('hide');\r\n                    popupWindow.show();\r\n\r\n                    win.open();\r\n                },\r\n                bindRowClick: function (e) {\r\n                    var gridEle = view.element.find('[data-role=\"grid\"]').first();\r\n                    gridEle.on(\"click\", \"td\", function (e) {\r\n                        var highlightedColumn = $(e.currentTarget).hasClass(\"grid-highlight-column\");\r\n                        if (!highlightedColumn) { return }\r\n\r\n                        var kendoGrid = gridEle.data(\"kendoGrid\");\r\n                        var selectedItem = kendoGrid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n\r\n                        //open kb on a new tab when clicked\r\n                        window.open(\"/KnowledgeBase/View/\" + selectedItem.KnowledgeArticleID, '_blank');\r\n                    });\r\n\r\n\r\n                    if (!app.isMobile())\r\n                    {\r\n                        var grid = gridEle.data(\"kendoGrid\");\r\n\r\n                        grid.dataSource.originalFilter = grid.dataSource.filter;\r\n\r\n                        // Replace the original filter function.\r\n                        grid.dataSource.filter = function () {\r\n\r\n                            // Call the original filter function.\r\n                            var result = grid.dataSource.originalFilter.apply(this, arguments);\r\n\r\n                            // If a column is about to be filtered, then raise a new \"filtering\" event.\r\n                            if (arguments.length > 0) {\r\n                                this.trigger(\"filterApplied\", arguments);\r\n                            }\r\n\r\n                            return result;\r\n                        }\r\n\r\n                        grid.dataSource.bind(\"filterApplied\", function () {\r\n\r\n                            $.each($(gridEle).find(\"th a.k-header-column-menu i\"), function () {\r\n                                $(this).remove();\r\n                            });\r\n\r\n                            if (grid.dataSource.filter()) {\r\n\r\n                                var filters = grid.dataSource.filter().filters || [];\r\n                                var dsFilters = [];\r\n                                for (var i in filters) {\r\n                                    if (filters[i].filters) {\r\n                                        var innerFilters = filters[i].filters;\r\n                                        for (var x in innerFilters) {\r\n                                            dsFilters.push(innerFilters[x]);\r\n                                        }\r\n                                    } else {\r\n                                        dsFilters.push(filters[i]);\r\n                                    }\r\n                                }\r\n\r\n                                dsFilters = _.uniq(dsFilters, function (el) { return el.field; });\r\n\r\n                                for (var i in dsFilters) {\r\n                                    $(gridEle).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\r\n                                }\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                    },\r\n                    \r\n                getAllRelatedWorkItems: function (e) {\r\n                    //this will hold all the related knowledge article data\r\n                    var relatedHTMLKB = !_.isUndefined(vm.get(\"RelatedHTMLKB\")) ? vm.get(\"RelatedHTMLKB\") : new kendo.data.ObservableArray([]);\r\n\r\n                    var url = '';\r\n\r\n                    if (vm.ClassName.indexOf(\"WorkItem\") != -1)\r\n                        url = app.lib.addUrlParam(\"/api/V3/Article/GetArticlesRelatedToWorkItem\", \"workItemId\", vm.BaseId);\r\n                    else if (vm.ClassName.indexOf(\"AssetManagement\") != -1)\r\n                        url = app.lib.addUrlParam(\"/api/V3/Article/GetArticlesRelatedToAsset\", \"assetId\", vm.BaseId);\r\n\r\n                    $.ajax({\r\n                        url: url,\r\n                        dataType: 'json',\r\n                        type: \"POST\",\r\n                        success: function (data) {\r\n                            //set the value\r\n                            _.each(data, function (item) {\r\n                                relatedHTMLKB.push({\r\n                                    KnowledgeArticleID: item.ArticleID,\r\n                                    WorkItemID: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.BaseId : null,\r\n                                    WorkItemId: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.Id : null,\r\n                                    AssetID: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.BaseId : null,\r\n                                    AssetId: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.Id : null,\r\n                                    Title: item.Title,\r\n                                    Category: item.CategoryName,\r\n                                    Type: item.TypeName\r\n                                });\r\n                            });\r\n\r\n                            //to avoid triggering isDirty, update viewModel only if there is/are related KB\r\n                            if (relatedHTMLKB.length > 0) {\r\n                                vm.set(\"RelatedHTMLKB\", relatedHTMLKB);\r\n                            }\r\n                        },\r\n                        error: function (e) {\r\n                            //log error and display generic error tesxt\r\n                            app.lib.log(e.errorThrown + ' - When retrieving data from /api/V3/Article/GetArticlesRelatedToWorkItem');\r\n                        }\r\n                    });\r\n                },\r\n                removeRelatedKB: function (e) {\r\n                    //this will hold all the to be deleted related knowledge article \r\n                    var removeHTMLKB = !_.isUndefined(vm.get(\"RemoveRelatedHTMLKB\")) ? vm.get(\"RemoveRelatedHTMLKB\") : new kendo.data.ObservableArray([]);\r\n                    removeHTMLKB.push(e.model);\r\n                    vm.set(\"RemoveRelatedHTMLKB\", removeHTMLKB);\r\n                }\r\n            });\r\n\r\n            //build it\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false, model: vm.view.knowledgeArticleModel });\r\n            callback(view.render());\r\n\r\n            vm.view.knowledgeArticleModel.getAllRelatedWorkItems();\r\n            vm.view.knowledgeArticleModel.bindRowClick();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/fields/display/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <% if ( !HideLabel ){ %>\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\"></label>\\r\\n    <% } %>\\r\\n    <div class=\"display-field\" data-bind=\"text: <%= PropertyName %>\"></div>\\r\\n</div>';});\n\n","/**\r\nDISPLAY\r\n**/\r\n\r\ndefine('forms/fields/display/controller',['require','text!forms/fields/display/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/display/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                HideLabel: false\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/spacer/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nSPACER\r\n**/\r\n\r\ndefine('forms/fields/spacer/controller',['require','text!forms/fields/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/spacer/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nINT32\r\n**/\r\n\r\ndefine('forms/fields/int/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            var boundObj = node.vm;\r\n            //make sure we have all the vals set\r\n            \r\n            var properties = {\r\n                Required: node.Required,\r\n                DecimalPlaces: 0,\r\n                MinValue: -2147483648,\r\n                MaxValue: 2147483648,\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var templateFrag = $(built(properties));\r\n            new Control(templateFrag.find(\"[data-control='numericTextBox']\"), boundObj, node);\r\n\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n\r\n    var Control = function (targetEle, boundObj, node) {\r\n\r\n        //This will be used for mobile because the numeric event wont triggering when you type in the value.\r\n        if (app.isMobile()) {\r\n            var editor = targetEle.data();\r\n            setTimeout(function () {\r\n                var number = targetEle.parent().find(\"input[type='number']\");\r\n                number.change(function () {\r\n                    boundObj.set(node.PropertyName, number.val());\r\n                });\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nDECIMAL\r\n**/\r\n\r\ndefine('forms/fields/decimal/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                //Required: false,\r\n                DecimalPlaces: 20,\r\n                MinValue: '',\r\n                MaxValue: '',\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nDOUBLE\r\n**/\r\n\r\ndefine('forms/fields/double/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                //Required: false,\r\n                DecimalPlaces: 19,\r\n                MinValue: '',\r\n                MaxValue: '',\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Format:''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/datetime/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <input name=\"<%= PropertyName %>\"\\r\\n           data-control=\"dateTimePicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-from=\"<%= FromFilter %>\"\\r\\n           data-control-to=\"<%= ToFilter %>\"\\r\\n           data-control-from-relative=\"<%= FromRelative %>\"\\r\\n           data-control-to-relative=\"<%= ToRelative %>\"\\r\\n    \\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n\\r\\n    >\\r\\n</div>';});\n\n","/**\r\nDATETIME\r\n**/\r\n\r\ndefine('forms/fields/datetime/controller',['require','text!forms/fields/datetime/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/datetime/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                FromFilter: '',\r\n                ToFilter: '',\r\n                FromRelative: '',\r\n                ToRelative: '',\r\n                Disabled: node.disabled,\r\n                Required: node.Required\r\n            };\r\n\r\n            //set from filter\r\n            if (typeof node.MinValue == \"string\") {\r\n                if (node.MinValue.indexOf(\":\") != -1) {\r\n                    properties.FromRelative = node.MinValue;\r\n                } else {\r\n                    properties.FromFilter = node.MinValue;\r\n                }\r\n            }\r\n\r\n            //set to filter\r\n            if (typeof node.MaxValue == \"string\") {\r\n                if (node.MaxValue.indexOf(\":\") != -1) {\r\n                    properties.ToRelative = node.MaxValue;\r\n                 } else {\r\n                    properties.ToFilter = node.MaxValue;\r\n                 }\r\n            }\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/userPicker/view.html',[],function () { return '<div class=\"form-group\" data-cid=\"userpicker\" data-cid-propname=\"<%= PropertyName %>\"\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>>\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input class=\"input-userpicker\"\\r\\n           data-control=\"userPicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-extra=\"<%= ExtraProps %>\"\\r\\n           data-control-delay=\"<%= Delay %>\"\\r\\n           data-control-minlength=\"<%= MinLength %>\"\\r\\n           data-control-filterbyanalyst=\"<%= FilterByAnalyst%>\"\\r\\n           data-control-maxnumberofresults=\"<%= MaxNumberOfResults%>\"\\r\\n           type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n            <% if ( Disabled ){ %>\\r\\n            disabled\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\nuserPicker\n**/\n\ndefine('forms/fields/userPicker/controller',['require','text!forms/fields/userPicker/view.html','forms/popups/userPickerPopup/controller'],function (require) {\n    var tpl = require(\"text!forms/fields/userPicker/view.html\");\n    var userPickerPopup = require(\"forms/popups/userPickerPopup/controller\");\n    var definition = {\n        template: tpl,\n        build: function (vm, node, callback) {\n            if (_.isUndefined(node.vm)) {\n                boundObj = node;\n                name = node.PropertyName;\n            } else {\n                boundObj = node.vm;\n                name = node.PropertyName;\n            }\n            // add default values\n            var properties = {\n                Required: node.Required, // TODO: yo, this is stupid. fix it.\n                Disabled: node.disabled, // TODO: yo, this is stupid. fix it.\n                ExtraProps: false,\n                Delay: 200,\n                MinLength: 3,\n                FilterByAnalyst: false,\n                MaxNumberOfResults: 10\n            }\n            $.extend(true, properties, node);\n            var built = _.template(tpl);\n            var templateFrag = $(built(properties));\n            var popupWindow = userPickerPopup.getPopup();\n\n            // comment out next two lines to go back to using app.controls\n            var objectPicker = new Control(templateFrag.find(\"[data-control='userPicker']\"), boundObj, name, popupWindow);\n            templateFrag.find(\"[data-control='userPicker']\").attr(\"data-control\", \"userPickerBound\");\n\n            callback(templateFrag);\n        }\n    }\n\n    // NAME/ID pair data model\n    // used to map name/id to server or viewModel\n    // Generic getter and setters:  name,id\n    var NameIdModel = function (nameProp, idProp) {\n        var self = this;\n        this.serverNameProp = nameProp;\n        this.serverIdProp = idProp;\n        var data = {};\n        data[self.serverNameProp];\n        data[self.serverIdProp];\n        this.set = {\n            name: function (val) { data[self.serverNameProp] = val; },\n            id: function (val) { data[self.serverIdProp] = val; }\n        }\n        this.setObj = function (name, id) {\n            self.set.name(name); self.set.id(id);\n        }\n        this.setFromObj = function (obj) {\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\n        }\n        this.get = {\n            name: function () { return data[self.serverNameProp]; },\n            id: function () { return data[self.serverIdProp]; }\n        }\n        this.getFromObj = function (obj) {\n            self.setFromObj(obj);\n            return data;\n        }\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\n        this.getGenericFromObj = function (obj) {\n            this.setFromObj(obj);\n            return {\n                name: self.get.name(),\n                id: self.get.id()\n            }\n        }\n\n    }\n    // CONTROL\n    var Control = function (targetEle, boundObj, name, popupWindow) {\n        // control parameters\n        var targetEle = targetEle;\n        var extraProps = targetEle.attr(\"data-control-extra\");\n        var delay = targetEle.attr(\"data-control-delay\");\n        var minLength = targetEle.attr(\"data-control-minlength\");\n        var filterByAnalyst = targetEle.attr(\"data-control-filterByAnalyst\");\n        var maxNumberOfResults = targetEle.attr(\"data-control-maxNumberOfResults\");\n        var autoCompleteUrl = \"/api/V3/User/GetUserList\";\n        var detailsPopupUrl = \"/Search/ObjectViewer\";\n        var objectExtraUrl = \"/Search/GetObjectPropertiesByProjection?projectionId=490ab845-b14c-1d91-c39f-bb9e8a350933&id=\";\n        var boundObj = boundObj;\n        var propName = name;\n        var popupWindow = popupWindow;\n\n        // viewModel getters/setters\n        var _textProp = \"DisplayName\";\n        var _idProp = \"BaseId\";\n        var _model = new NameIdModel(_textProp, _idProp);\n        app.lib.forceKendoProp(boundObj, propName, kendo.observable(_model.getObj(null, null)));\n        var get = {\n            obj: function () { return boundObj[propName]; },\n            name: function () { return boundObj[propName][_textProp]; },\n            id: function () { return boundObj[propName][_idProp]; }\n        }\n        var set = {\n            obj: function (name, id) {\n                boundObj[propName].set(_idProp, id);\n                boundObj[propName].set(_textProp, name);\n            }\n        }\n\n        // private properties\n        var helperBlock;\n        var autoComplete;\n\n\n        /*******************/\n        /*** CONSTRUCT *****/\n        /*******************/\n\n        var __construct = function () {\n            createHelperBlock();\n            createAutocomplete();\n            refreshDisplayValues();\n            bindEvents();\n        }\n\n        /************************/\n        /*** CONTROL EVENTS *****/\n        /************************/\n\n        var bindEvents = function () {\n            boundObj[name].bind(\"change\", function () {\n                refreshDisplayValues();\n            });\n        }\n\n        /******************************/\n        /*** CONTROL USER ACTIONS *****/\n        /******************************/\n\n        var onAutoCompleteValueChanged = function (obj) {\n            if (obj) {\n                set.obj(obj.name, obj.id);\n            } else {\n                set.obj(null, null);\n            }\n        }\n        var onSearchIconClick = function () {\n            popupWindow.setSaveCallback(function (obj) {\n                set.obj(obj.name, obj.id);\n            });\n            popupWindow.vm.filterByAnalyst = filterByAnalyst;\n            popupWindow.open();\n        }\n\n        /*************************/\n        /*** CONTROL METHODS *****/\n        /*************************/\n\n        //do we have a model set in the bound object\n        //not sure what the get object is -jk\n        var isModelSet = function () {\n            return (boundObj && boundObj[name] && get.name() && get.id()) ? true : false;\n        }\n\n        //lets check for boundObject that is nulled\n        var isModelSetNulled = function () {\n            return (boundObj && boundObj[name] && _.isNull(get.name()) && _.isNull(get.id()) ) ? true : false;\n        }\n\n        var hasExtraProps = function () {\n            return (extraProps && extraProps != \"false\");\n        }\n        var createHelperBlock = function () {\n            if (hasExtraProps()) {\n                helperBlock = new HelperBlock({\n                    url: objectExtraUrl,\n                    container: targetEle.parent(),\n                    props: extraProps.split(\",\")\n                });\n            }\n        }\n        var createAutocomplete = function () {\n            autoComplete = new AutoComplete({\n                url: autoCompleteUrl,\n                detailsUrl: detailsPopupUrl,\n                targetEle: targetEle,\n                delay: delay,\n                minLength: minLength,\n                callback: onAutoCompleteValueChanged,\n                maxNumberOfResults: maxNumberOfResults\n            });\n        }\n        var refreshDisplayValues = function () {\n\n            if (isModelSet()) {\n                if (helperBlock) {\n                    helperBlock.setDisplay(get.id());\n                }\n                if (autoComplete) {\n                    autoComplete.setValue(get.name(), get.id());\n                }\n            }\n            /**Added to fix Task/BUG 2148: When using the Assign to Analyst by group task (where there is no assigned to user) in the portal, \n            then select an analyst and click \"cancel\" the analyst still appears on the form.**/\n            else if (isModelSetNulled()) {\n                if (autoComplete) {\n                    autoComplete.setValue(\"\", null);\n                }\n            }\n        }\n\n        /****************************/\n        /*** CONTROL SUBCLASSES *****/\n        /****************************/\n\n        /* -- HelperBlock --\n            // params\n                settings = {\n                    url: \"\", // url to get object extra props\n                    container: jqEle, // where helpblock will get appended\n                    props: [], // array of property names to be displayed in order\n                    delay: \"\", //numeric delay in ms before search is performed\n                    minLength: \"\", //numeric length of chars before search is performed\n                }\n            // public methods\n                obj.setDisplay(objectId) /// goes to server then displays helper data for that objectId\n        */\n        var HelperBlock = function (settings) {\n            var self = this;\n            var html;\n            var _vm;\n            var container = settings.container;\n            var url = settings.url;\n            var props = settings.props;\n\n            // CONSTRUCT\n\n            var __construct = function () {\n                createHtml();\n                createViewModel();\n                bindEvents();\n                self.setDisplay = _vm.getUserObjectData;\n            }\n\n            // EVENTS\n\n            var bindEvents = function () {\n                _vm.bind(\"change\", function (e) {\n                    if (e.field == \"extraPropText\") {\n                        _vm.set(\"isVisible\", (_vm.extraPropText.length > 0));\n                    } else if (e.field == \"data\") {\n                        setExtraPropsDisplay();\n                    }\n                });\n            }\n\n            // ACTIONS\n\n            // METHODS\n\n            var createHtml = function () {\n                // note: move this to definition.html\n                html = $('<span>', { \"class\": \"help-block\", \"data-bind\": \"text: extraPropText, visible: isVisible\" });\n                setTimeout(function () {\n                    container.append(html);\n                }, 100);\n            }\n            var createViewModel = function () {\n                _vm = kendo.observable({\n                    isVisible: false,\n                    extraPropText: \"\",\n                    data: {},\n                    getUserObjectData: getUserObjectData\n                });\n                kendo.bind(html, _vm);\n            }\n\n            var getUserObjectData = function (objectId) {\n                $.get(url + objectId, function (data) {\n                    if (data && data[0]) {\n                        data = data[0];\n                    }\n                    _vm.set(\"data\", data);\n                    setExtraPropsDisplay();\n                });\n            }\n\n            var getDisplayName = function (obj) {\n                var displayName = \"\";\n                if (!_.isUndefined(obj.Name) && !_.isNull(obj.Name)) {\n                    displayName = obj.Name;\n                }\n                if (!_.isUndefined(obj.DisplayName) && !_.isNull(obj.DisplayName)) {\n                    displayName = obj.DisplayName;\n                }\n                return displayName;\n            }\n\n            var setExtraPropsDisplay = function () {\n                var str = \"\";\n                $.each(props, function (i, item) {\n                    var dataItem = _vm.data[item];\n                    if (dataItem) {\n                        str += (_.isObject(dataItem) ? getDisplayName(dataItem) : dataItem) + \", \";\n                    }\n                });\n                _vm.set(\"extraPropText\", str.substring(0, str.length - 2));\n            }\n\n            // END\n\n            __construct();\n        }\n\n        /* -- Autocomplete --\n            // params\n                settings = {\n                    url: \"\", // url for datasource\n                    targetEle: jqEle, // element to apply autocomplete\n                    callback: function(obj){} // fired when object is change via autocomplete, provides selected object or null values\n                }\n            // public methods\n        */\n        var AutoComplete = function (settings) {\n            // settings\n            var self = this;\n            var targetEle = settings.targetEle;\n            var url = settings.url;\n            var detailsUrl = settings.detailsUrl;\n            var callback = settings.callback; // \n            var delay = settings.delay; // \n            var minLength = settings.minLength; // \n            var placeHolderText = (targetEle.attr('disabled')) ? \"\" : localization.SearchButton;\n\n            // private params\n            var autoComplete;\n            var dataSource;\n            var focusedItemIndex = false\n            var searchBtn;\n            var detailsBtn;\n            var detailsPopupEle;\n            var detailsPopup;\n            var _textProp = \"Name\";\n            var _idProp = \"Id\";\n            var _model = new NameIdModel(_textProp, _idProp);\n            var hasTCCURL = !_.isNull(session.consoleSetting.TrueControlCenterURL) && (session.consoleSetting.TrueControlCenterURL != \"\");\n\n            // CONSTRUCT\n\n            var __construct = function () {\n                createKendoDataSource();\n                createKendoAutoComplete();\n                createSearchButton();\n                hasTCCURL ? createTCCDetailsButton() : createDetailsButton();\n                createDetailsPopup();\n                bindEvents();\n                self.setValue = setValue;\n            }\n\n            // EVENTS\n\n            var bindEvents = function () {\n                autoComplete.bind(\"select\", function (e) {\n                    var obj = this.dataItem(e.item.index());\n                    callback(_model.getGenericFromObj(obj));\n                });\n                autoComplete.bind(\"change\", function (e) {\n                    validateAutoCompleteValue();\n                    callback(_model.getGenericFromObj(getDataSourceMatch(autoComplete.value())));\n                });\n                autoComplete.bind(\"dataBound\", function (e) {\n                    e.sender.ul.find(\"li\").first().addClass(\"k-state-hover\");\n                });\n                targetEle.on(\"keyup\", function (e) {\n                    if (e.which == 40 && !autoComplete.ul.is(\":visible\")) { //down arrow\n                        autoComplete.search(autoComplete.value());\n                        validateAutoCompleteValue();\n                    }\n                    else if (e.which != 13 && e.which != 9) { //enter\n                        focusedItemIndex = getFocusedIndex();\n                        validateAutoCompleteValue();\n                    }\n\n                });\n                targetEle.on(\"keydown\", function (e) {\n                    if (e.which == 13) {\n                        // enter click select first match in dropdown or focused\n                        var children = autoComplete.ul.children();\n                        if (children.length && autoComplete.ul.is(\":visible\")) {\n                            var index = (focusedItemIndex !== false) ? focusedItemIndex : 0;\n                            autoComplete.select(autoComplete.ul.children().eq(index));\n                            validateAutoCompleteValue();\n                        } else { //if enter is hit and we have no child do a search\n                            autoComplete.search(autoComplete.value());\n                        }\n                    }\n                });\n\n                //we need blur so we can handle tabbing out\n                targetEle.on(\"blur\", function (e) {\n                    focusedItemIndex = getFocusedIndex();\n                    validateAutoCompleteValue(true);\n                });\n\n                //handle copy-paste event\n                targetEle.on(\"input propertychange\", function (e) {\n                    //perform autocomplete search if search box is not empty\n                    if (e.currentTarget.value != \"\") {\n                        autoComplete.search(e.currentTarget.value);\n                        validateAutoCompleteValue();\n                    }\n                });\n\n                detailsPopup.bind(\"close\", function () {\n                    detailsPopupEle.find(\".k-content\").html('');\n                });\n                searchBtn.click(onSearchIconClick);\n                detailsBtn.click(onDetailsBtnClick);\n            }\n\n            // ACTIONS\n\n            var onDetailsBtnClick = function (e) {\n                hasTCCURL ? e.stopPropagation() : openModal();\n            }\n\n            var openSlideout = function (e) {\n                var userObj = { BaseId: _model.get.id(), Name: _model.get.name() }\n                var src = app.slideOutNav.getTCCSourceURL(userObj, \"user\");\n                var options = {\r\n                    url: src,\r\n                    tooltip: localization.UserManagement\r\n                }\n                app.slideOutNav.show(options);\n            }\n\n            var openModal = function (e) {\n                detailsPopup.refresh({\n                    url: detailsUrl,\n                    data: { id: _model.get.id() }\n                });\n                detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\n                detailsPopup.title(_model.get.name()).center().open();\n            }\n\n            // METHODS\n\n            var createSearchButton = function () {\n                searchBtn = $(\"<div>\", { \"class\": \"searchIcon\", \"data-control-action\": \"userPickerWindow\" });\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\n                var a = $(\"<i>\", { \"class\": \"fa fa-search cursor-pointer \" + iconColor })\n                searchBtn.append(a);\n                //don't want to  show search icon if field is disabled\n                if (!targetEle.attr('disabled') || app.isMobileDevice()) {\n                    searchBtn.insertAfter(targetEle);\n                }\n            }\n            var createDetailsButton = function () {\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\n                detailsBtn = $(\"<i>\", { \"class\": \"fa fa-info-circle cursor-pointer info-icon \" + iconColor });\n                detailsBtn.insertBefore(targetEle);\n                detailsBtn.hide();\n            }\n\n            var createTCCDetailsButton = function () {\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\n                detailsBtn = $(\"<ul>\", { \"class\": \"menu-usr-mgt\" });\n                detailsBtn.insertBefore(targetEle);\n                detailsBtn.hide();\n\n                detailsBtn.kendoMenu({\n                    dataSource: [\n                        {\n                            text: \"<i class='fa fa-info-circle cursor-pointer'></i>\",\n                            encoded: false,\n                            items: [\n                                {\n                                    text: localization.UserManagement,\n                                    imageUrl: \"/Content/Images/Icons/Other/control-center-launcher.png\",\n                                    imageAttr: {\n                                        height: '16px',\n                                        width: '16px'\n                                    },\n                                    attr: {\n                                        custom: 'tcc' //custom attribute holds the link type\n                                    }\n                                },\n                                {\n                                    text: \"<i class='fa fa-info-circle cursor-pointer' style='margin: -2px 7px 0 -3px;'></i>\"+localization.AdditionalDetails,\n                                    encoded: false,\n                                    attr: {\n                                        custom: 'info' //custom attribute holds the link type\n                                    }\n                                }\n                            ]\n                        }\n                    ],\n                    select: function (e) {\n                        if (!_.isUndefined(e.item.attributes[\"custom\"])) {\n                            var type = e.item.attributes[\"custom\"].value;\n                            (type == \"tcc\") ? openSlideout() : openModal();\n                        }\n                    },\n                    openOnClick: true\n                });\n            }\n\n            var createKendoDataSource = function () {\n                dataSource = new kendo.data.DataSource({\n                    transport: {\n                        read: {\n                            url: url,\n                            data: {\n                                userFilter: function () {\n                                    return autoComplete.value();\n                                },\n                                filterByAnalyst: filterByAnalyst,\n                                maxNumberOfResults: settings.maxNumberOfResults\n                            }\n                        }\n                    },\n                    serverFiltering: true\n                });\n            }\n            var createKendoAutoComplete = function () {\n                autoComplete = targetEle.kendoAutoComplete({\n                    dataTextField: _textProp,\n                    suggest: true,\n                    placeholder: placeHolderText + \"...\",\n                    valuePrimitive: false,\n                    dataSource: dataSource,\n                    delay: delay,\n                    minLength: minLength,\n                    enable: (targetEle.attr('disabled')) ? false : true,\n                    clearButton: false\n                }).data(\"kendoAutoComplete\");\n\n            }\n            var createDetailsPopup = function () {\n                detailsPopupEle = $(\"<div>\");\n                detailsPopupEle.appendTo(\"body\");\n                detailsPopup = detailsPopupEle.kendoCiresonWindow({\n                    title: \"\",\n                    width: 550,\n                    height: 500,\n                    actions: [\"Close\"]\n                }).data(\"kendoWindow\");\n            }\n\n            var validateAutoCompleteValue = function (blurred) {\n                var match = getDataSourceMatch(autoComplete.value());\n                if (!match && autoComplete.value() != \"\") { //empty values are valid bug 494\n                    detailsBtn.hide();\n                    if (targetEle.is(\":focus\") && !blurred) {\n                        // invalid while typing\n                        targetEle.css({\n                            \"text-decoration\": \"none\",\n                            \"background-color\": (targetEle.attr('disabled')) ? \"#a1a1a1\" : \"#fff\"\n                        });\n                    } else {\n                        // invalid after blur\n                        targetEle.css({\n                            \"text-decoration\": \"none\",\n                            \"background-color\": \"#FBE3E4\"\n                        });\n                        //add the invalid data attribute\n                        targetEle.attr('data-invalid', '');\n                    }\n                } else {\n                    // valid\n\n                    //remove the invalid data attribute\n                    targetEle.removeAttr('data-invalid', '');\n\n                    //do we actually have a value to show the extension properties for\n                    if (autoComplete.value() === \"\") {\n                        detailsBtn.hide();\n                    } else {\n                        detailsBtn.show();\n\n                        targetEle.css({\n                            \"text-decoration\": \"underline\"\n                        });\n                    }\n\n                    targetEle.css({\n                        \"background-color\": (targetEle.attr('disabled')) ? \"#eee\" : \"#fff\"\n                    });\n                }\n            }\n\n            var getDataSourceMatch = function (val) {\n                var ds = _.clone(dataSource);\n                var view = ds.view();\n\n                // matching needs to be case insensitive\n                var match = false;\n                $.each(view, function (i, item) {\n                    if (item.Name.toLowerCase() == val.toLowerCase()) {\n                        match = item;\n                    }\n                });\n                return match;\n            }\n            var setValue = function (name, id) {\n                dataSource.add(_model.getObj(name, id));\n                autoComplete.value(name);\n                validateAutoCompleteValue();\n            }\n            var getFocusedIndex = function () {\n                var focused = autoComplete.ul.find(\".k-state-focused\");\n                return (focused.length) ? focused.index() : false;\n            }\n\n            // END\n\n            __construct();\n        }\n\n        /*************/\n        /*** END *****/\n        /*************/\n\n        __construct();\n\n    }\n\n    return definition;\n\n});\n","\ndefine('text!forms/fields/objectPicker/view.html',[],function () { return '<div class=\"form-group\" data-cid=\"objectpicker\" data-cid-propname=\"<%= PropertyName %>\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input class=\"input-userpicker\"\\r\\n           data-control=\"objectPicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-extra=\"<%= ExtraProps %>\"\\r\\n           type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n            <% if ( Disabled ){ %>\\r\\n            disabled\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>\\r\\n    />\\r\\n</div>';});\n\n","\ndefine('text!forms/popups/objectPickerPopup/view.html',[],function () { return '<div id=\"ObjectPickerPopupWindow\" class=\"cireson-window defined-form task-window\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"col-group\">\\r\\n                <div class=\"c2\">\\r\\n                    <label data-bind=\"text: searchText\"></label>\\r\\n                    <span class=\"k-textbox\">\\r\\n                        <input class=\"textbox-padding-right\" type=\"text\" data-value-update=\"keyup\" data-bind=\"value: searchValue, events: { keypress: searchOnEnter }\">\\r\\n                        <a data-bind=\"click: search\" class=\"cursor-pointer fa fa-search\"></a>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div>\\r\\n                <label data-bind=\"text: selectObjectText\"></label>\\r\\n                <div data-control-grid=\"userPickerGrid\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\"cireson-window--footer window-buttons objectPicker-single-grid\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nobjectPickerPopup\r\n**/\r\nvar __objectPickerPopupSingleton;\r\n\r\ndefine('forms/popups/objectPickerPopup/controller',['require','text!forms/popups/objectPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/objectPickerPopup/view.html\");\r\n    var singletonName = \"objectPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (classId, BaseId) {\r\n            //BaseId will be used to remove it self from the list.\r\n            //need a specific instance per classId, so this singleton is a hash\r\n            if (__objectPickerPopupSingleton && __objectPickerPopupSingleton[classId]) {\r\n                return __objectPickerPopupSingleton[classId];\r\n            }\r\n\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n            var classId = classId;\r\n            var objectPickerPopup = ele.data(singletonName);\r\n\r\n            $(\"body\").append(ele);\r\n            __objectPickerPopupSingleton = new ObjectPickerPopup(ele, classId, BaseId);\r\n\r\n            return __objectPickerPopupSingleton;\r\n        }\r\n    }\r\n\r\n    /* -- ObjectPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            open = function(classId){ // opens popup with this classId }\r\n            close = function(){ // closes popup }\r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback(obj){  } returns selected user object\r\n    */\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // CONTROL\r\n    var ObjectPickerPopup = function (targetEle, classId, BaseId) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var classId = classId;\r\n        var gridHtml = targetEle.find(\"[data-control-grid]\");\r\n        var grid;\r\n        var gridUrl = \"/ConfigItems/GetObjectSearchResults\";\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"DisplayName\";\r\n        var _idProp = \"Id\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                searchText: localization.SearchText,\r\n                selectObjectText: localization.SelectObject,\r\n                searchValue: \"\",\r\n                okText: localization.OK,\r\n                cancelText: localization.Cancel,\r\n                search: onSearchClick,\r\n                searchOnEnter: function (e) {\r\n                    if (e.which == 13) {\r\n                        e.preventDefault();\r\n                        onSearchClick();\r\n                    }\r\n                },\r\n                save: onSaveClick,\r\n                cancel: onCancelClick\r\n            });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            createGrid();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n            self.vm = _vm;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n\r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSearchClick = function () {\r\n            grid.search(_vm.searchValue);\r\n        }\r\n        var onSaveClick = function () {\r\n            var selectedRow = grid.kendoGrid.select();\r\n            if (selectedRow) {\r\n                var obj = _model.getGenericFromObj(grid.kendoGrid.dataItem(selectedRow));\r\n                $(self).trigger(\"save\", obj);\r\n                closePopup();\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n\r\n        var openPopup = function () {\r\n            //clear out search box value and search results before opening the window\r\n            self.vm.set(\"searchValue\", \"\");\r\n            grid.kendoDataSource.data([]);\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup();\r\n        }\r\n        var createGrid = function () {\r\n            grid = new Grid({\r\n                html: gridHtml,\r\n                url: gridUrl\r\n            });\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function () {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            // ACTIONS\r\n\r\n            // METHODS\r\n\r\n            var createKendoWindow = function () {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: localization.SelectObject,\r\n                    content: null,\r\n                    width: 680,\r\n                    height: 400,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Grid --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n        */\r\n        var Grid = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var html = settings.html;\r\n            var url = settings.url;\r\n            var height = 150;\r\n            var kendoGrid;\r\n            var kendoDataSource;\r\n            var searchValue;\r\n            // private params           \r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoGrid();\r\n                kendoGrid.pager.element.hide();\r\n                bindEvents();\r\n                self.kendoGrid = kendoGrid;\r\n                self.kendoDataSource = kendoDataSource;\r\n                self.search = search;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                kendoGrid.bind(\"dataBound\", function (e) {\r\n                    kendoGrid.pager.element.show();\r\n                });\r\n                kendoGrid.element.on(\"dblclick\", \"tbody>tr\", onRowDblClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onRowDblClick = function () {\r\n                kendoGrid.select($(this));\r\n                onSaveClick();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var search = function (value) {\r\n                searchValue = value;\r\n                kendoDataSource.read();\r\n                if (!_.isUndefined(BaseId) || BaseId != \"\")\r\n                    kendoGrid.dataSource.filter([{ field: \"Id\", operator: \"neq\", value: BaseId }]);\r\n                kendoDataSource.page(1);\r\n            }\r\n            var createKendoDataSource = function () {\r\n                kendoDataSource = new kendo.data.DataSource({\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": url,\r\n                            \"data\": function () {\r\n                                return {\r\n                                    searchFilter: function () {\r\n                                        return searchValue;\r\n                                    },\r\n                                    classId: function () {\r\n                                        return classId;\r\n                                    },\r\n                                    groupFilter: \"\"\r\n                                }\r\n                            },\r\n                            \"type\": \"GET\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": 15,\r\n                    \"page\": 1,\r\n                    \"total\": 0,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                        \"model\": {\r\n                            \"fields\": {\r\n                                \"Id\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"ObjectClassId\": {\r\n                                    \"type\": \"number\"\r\n                                },\r\n                                \"ObjectClassName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"DisplayName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Path\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Hosted\": {\r\n                                    \"type\": \"number\"\r\n                                },\r\n                                \"LastModified\": {\r\n                                    \"type\": \"date\"\r\n                                },\r\n                                \"Status\": {\r\n                                    \"type\": \"string\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            var createKendoGrid = function () {\r\n                kendoGrid = html.kendoGrid({\r\n                    height: height,\r\n                    dataSource: kendoDataSource,\r\n                    selectable: \"Single,Row\",\r\n                    sortable: { mode: \"multiple\" },\r\n                    pageable: true,\r\n                    filterable: {\r\n                        extra: false,\r\n                        operators: {\r\n                            string: {\r\n                                startswith: localization.Startswith,\r\n                                contains: localization.Contains,\r\n                                eq: localization.Isequalto,\r\n                                neq: localization.Isnotequalto\r\n                            }\r\n                        }\r\n                    },\r\n                    autoBind: false,\r\n                    columns: [{\r\n                        \"title\": \"Id\",\r\n                        \"hidden\": true,\r\n                        \"field\": \"Id\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.DisplayName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"field\": \"DisplayName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Class,\r\n                        \"field\": \"ObjectClassName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Path,\r\n                        \"field\": \"Path\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }],\r\n                }).data(\"kendoGrid\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n\r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","/**\r\nobjectPicker\r\n**/\r\n\r\ndefine('forms/fields/objectPicker/controller',['require','text!forms/fields/objectPicker/view.html','forms/popups/objectPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/fields/objectPicker/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/objectPickerPopup/controller\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //console.log(node);\r\n            boundObj = node.vm;\r\n            name = node.PropertyName;\r\n            // add default values\r\n            var properties = {\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                ExtraProps: false,\r\n                ClassId: false // this is a required\r\n            }\r\n            $.extend(true, properties, node);\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(properties));\r\n            var popupWindow = objectPickerPopup.getPopup(properties.ClassId, boundObj.BaseId);\r\n\r\n            // comment out next two lines to go back to using app.controls\r\n            var objectPicker = new Control(templateFrag.find(\"[data-control='objectPicker']\"), boundObj, name, popupWindow, properties.ClassId, callback);\r\n            templateFrag.find(\"[data-control='objectPicker']\").attr(\"data-control\", \"objectPickerBound\");\r\n\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function isArray(ob) {\r\n        return Object.prototype.toString.call(ob) === '[object Array]';\r\n    }\r\n    // CONTROL\r\n    var Control = function (targetEle, boundObj, name, popupWindow, classId, callback) {\r\n        \r\n        // control parameters\r\n        var targetEle = targetEle;\r\n        var extraProps = targetEle.attr(\"data-control-extra\");\r\n        var autoCompleteUrl = \"/ConfigItems/GetObjectSearchResults\";\r\n        var detailsPopupUrl = \"/Search/ObjectViewer\";\r\n        var objectExtraUrl = \"/Search/GetObjectPropertiesByProjection?projectionId=490ab845-b14c-1d91-c39f-bb9e8a350933&id=\";\r\n        var boundObj = boundObj;\r\n        var propName = name;\r\n        var popupWindow = popupWindow;\r\n        var classId = classId;\r\n\r\n        // viewModel getters/setters\r\n        var _textProp = \"DisplayName\";\r\n        var _idProp = \"BaseId\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n        app.lib.forceKendoProp(boundObj, propName, kendo.observable(_model.getObj(null, null)));\r\n        var get = {\r\n            obj: function () { return boundObj[propName].length > 0 ? getIndexZero(boundObj[propName], null) : boundObj[propName]; },\r\n            name: function () { return boundObj[propName].length > 0 ? getIndexZero(boundObj[propName], _textProp) : boundObj[propName][_textProp]; },\r\n            id: function () { return boundObj[propName].length > 0 ? getIndexZero(boundObj[propName], _idProp) : boundObj[propName][_idProp]; }\r\n        }\r\n        var set = {\r\n            obj: function (name, id) {\r\n                if (boundObj[propName].length > 0) {\r\n                    \r\n                    boundObj[propName][0].set(_idProp, id);\r\n                    boundObj[propName][0].set(_textProp, name);\r\n                } else {\r\n                    boundObj[propName].set(_idProp, id);\r\n                    boundObj[propName].set(_textProp, name);\r\n                }\r\n            }\r\n        }\r\n\r\n        var getIndexZero = function (obj, property) {\r\n            var _obj = obj[0];\r\n            if (classId.toLowerCase() == _obj[\"ClassTypeId\"].toLowerCase()) {\r\n                if (property != null) {\r\n                    return _obj[property];\r\n                }\r\n                else {\r\n                    return _obj;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n\r\n        }\r\n\r\n        \r\n\r\n        // private properties\r\n        var helperBlock;\r\n        var autoComplete;\r\n\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            createHelperBlock();\r\n            createAutocomplete();\r\n            refreshDisplayValues();\r\n            bindEvents();\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n            boundObj[name].bind(\"change\", function () {\r\n                refreshDisplayValues();\r\n            });\r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onAutoCompleteValueChanged = function (obj) {\r\n            if (obj) {\r\n                set.obj(obj.name, obj.id);\r\n            } else {\r\n                set.obj(null, null);\r\n            }\r\n        }\r\n        var onSearchIconClick = function () {\r\n            popupWindow.setSaveCallback(function (obj) {\r\n                if (boundObj.BaseId != obj.id) {\r\n                    set.obj(obj.name, obj.id);\r\n                }\r\n            });\r\n            popupWindow.open();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n\r\n        var isModelSet = function () {\r\n            return (boundObj && boundObj[name] && get.name() && get.id()) ? true : false;\r\n        }\r\n        var hasExtraProps = function () {\r\n            return (extraProps && extraProps != \"false\");\r\n        }\r\n        var createHelperBlock = function () {\r\n            if (hasExtraProps()) {\r\n                helperBlock = new HelperBlock({\r\n                    url: objectExtraUrl,\r\n                    container: targetEle.parent(),\r\n                    props: extraProps.split(\",\")\r\n                });\r\n            }\r\n        }\r\n        var createAutocomplete = function () {\r\n            autoComplete = new AutoComplete({\r\n                url: autoCompleteUrl,\r\n                detailsUrl: detailsPopupUrl,\r\n                targetEle: targetEle,\r\n                callback: onAutoCompleteValueChanged\r\n            });\r\n        }\r\n        var refreshDisplayValues = function () {\r\n            if (isModelSet()) {\r\n                if (helperBlock) {\r\n                    helperBlock.setDisplay(get.id());\r\n                }\r\n                if (autoComplete) {\r\n                    autoComplete.setValue(get.name(), get.id());\r\n                }\r\n            }\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- HelperBlock --\r\n            // params\r\n                settings = {\r\n                    url: \"\", // url to get object extra props\r\n                    container: jqEle, // where helpblock will get appended\r\n                    props: [], // array of property names to be displayed in order\r\n                }\r\n            // public methods\r\n                obj.setDisplay(objectId) /// goes to server then displays helper data for that objectId\r\n        */\r\n        var HelperBlock = function (settings) {\r\n            var self = this;\r\n            var html;\r\n            var _vm;\r\n            var container = settings.container;\r\n            var url = settings.url;\r\n            var props = settings.props;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createHtml();\r\n                createViewModel();\r\n                bindEvents();\r\n                self.setDisplay = _vm.getUserObjectData;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                _vm.bind(\"change\", function (e) {\r\n                    if (e.field == \"extraPropText\") {\r\n                        _vm.set(\"isVisible\", (_vm.extraPropText.length > 0));\r\n                    } else if (e.field == \"data\") {\r\n                        setExtraPropsDisplay();\r\n                    }\r\n                });\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            // METHODS\r\n\r\n            var createHtml = function () {\r\n                // note: move this to definition.html\r\n                html = $('<span>', { \"class\": \"help-block\", \"data-bind\": \"text: extraPropText, visible: isVisible\" });\r\n                setTimeout(function () {\r\n                    container.append(html);\r\n                }, 100);\r\n            }\r\n            var createViewModel = function () {\r\n                _vm = kendo.observable({\r\n                    isVisible: false,\r\n                    extraPropText: \"\",\r\n                    data: {},\r\n                    getUserObjectData: getUserObjectData\r\n                });\r\n                kendo.bind(html, _vm);\r\n            }\r\n\r\n            var getUserObjectData = function (objectId) {\r\n                $.get(url + objectId, function (data) {\r\n                    if (data && data[0]) {\r\n                        data = data[0];\r\n                    }\r\n                    _vm.set(\"data\", data);\r\n                    setExtraPropsDisplay();\r\n                });\r\n            }\r\n\r\n            var setExtraPropsDisplay = function () {\r\n                var str = \"\";\r\n                $.each(props, function (i, item) {\r\n                    if (_vm.data[item]) {\r\n                        str += _vm.data[item] + \", \";\r\n                    }\r\n                });\r\n                _vm.set(\"extraPropText\", str.substring(0, str.length - 2));\r\n            }\r\n\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Autocomplete --\r\n            // params\r\n                settings = {\r\n                    url: \"\", // url for datasource\r\n                    targetEle: jqEle, // element to apply autocomplete\r\n                    callback: function(obj){} // fired when object is change via autocomplete, provides selected object or null values\r\n                }\r\n            // public methods\r\n        */\r\n        var AutoComplete = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var targetEle = settings.targetEle;\r\n            var url = settings.url;\r\n            var detailsUrl = settings.detailsUrl;\r\n            var placeHolderText = (targetEle.attr('disabled')) ? \"\" : localization.SearchPlaceholder;\r\n            var callback = settings.callback; // \r\n            // private params\r\n            var autoComplete;\r\n            var dataSource;\r\n            var focusedItemIndex = false\r\n            var searchBtn;\r\n            var detailsBtn;\r\n            var detailsPopupEle;\r\n            var detailsPopup;\r\n            var _textProp = \"DisplayName\";\r\n            var _idProp = \"Id\";\r\n            var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoAutoComplete();\r\n                createSearchButton();\r\n                createDetailsButton();\r\n                createDetailsPopup();\r\n                bindEvents();\r\n                self.setValue = setValue;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                autoComplete.bind(\"select\", function (e) {\r\n                    var obj = this.dataItem(e.item.index());\r\n                    callback(_model.getGenericFromObj(obj));\r\n                });\r\n                autoComplete.bind(\"change\", function (e) {\r\n                    validateAutoCompleteValue();\r\n                    callback(_model.getGenericFromObj(getDataSourceMatch(autoComplete.value())));\r\n                });\r\n                autoComplete.bind(\"dataBound\", function (e) {\r\n                    e.sender.ul.find(\"li\").first().addClass(\"k-state-hover\");\r\n                });\r\n                targetEle.on(\"keyup\", function (e) {\r\n                    if (e.which == 40 && !autoComplete.ul.is(\":visible\")) {\r\n                        autoComplete.search(autoComplete.value());\r\n                        validateAutoCompleteValue();\r\n                    }\r\n                    else if (e.which != 13) {\r\n                        focusedItemIndex = getFocusedIndex();\r\n                        validateAutoCompleteValue();\r\n                    }\r\n\r\n                });\r\n                targetEle.on(\"keydown\", function (e) {\r\n                    if (e.which == 13) {\r\n                        // enter click select first match in dropdown or focused\r\n                        var children = autoComplete.ul.children();\r\n                        if (children.length) {\r\n                            var index = (focusedItemIndex !== false) ? focusedItemIndex : 0;\r\n                            //console.log(\"in: \" + index);\r\n                            autoComplete.select(autoComplete.ul.children().eq(index));\r\n                            validateAutoCompleteValue();\r\n                        }\r\n                    }\r\n                });\r\n\r\n                //handle copy-paste event\r\n                targetEle.on(\"input propertychange\", function (e) {\r\n                    autoComplete.search(e.currentTarget.value);\r\n                    validateAutoCompleteValue();\r\n                });\r\n\r\n                detailsPopup.bind(\"close\", function () {\r\n                    detailsPopupEle.find(\".k-content\").html('');\r\n                });\r\n                searchBtn.click(onSearchIconClick);\r\n                detailsBtn.click(onDetailsBtnClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onDetailsBtnClick = function () {\r\n                detailsPopup.refresh({\r\n                    url: detailsUrl,\r\n                    data: { id: _model.get.id() }\r\n                });\r\n                detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\r\n                detailsPopup.title(_model.get.name()).center().open();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var createSearchButton = function () {\r\n                searchBtn = $(\"<div>\", { \"class\": \"searchIcon\", \"data-control-action\": \"userPickerWindow\" });\r\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\r\n                var a = (app.isMobileDevice()) ? $(\"<i>\", { \"class\": \"fa fa-search cursor-pointer \" + iconColor }) : $(\"<div>\", { \"class\": \"search fa fa-search cursor-pointer \" + iconColor });\r\n                searchBtn.append(a);\r\n                searchBtn.insertAfter(targetEle);\r\n            }\r\n            var createDetailsButton = function () {\r\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\r\n                detailsBtn = (app.isMobileDevice()) ? $(\"<i>\", { \"class\": \"fa fa-info-circle cursor-pointer info-icon \" + iconColor }) : $(\"<div>\", { \"class\": \"open-modal fa fa-info-circle\" });\r\n                detailsBtn.insertBefore(targetEle);\r\n                detailsBtn.hide();\r\n            }\r\n            var createKendoDataSource = function () {\r\n                dataSource = new kendo.data.DataSource({\r\n                    transport: {\r\n                        read: {\r\n                            url: url,\r\n                            data: {\r\n                                searchFilter: function () {\r\n                                    return autoComplete.value();\r\n                                },\r\n                                classId: classId\r\n                            },\r\n                            type: \"GET\"\r\n                        }\r\n                    },\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\"\r\n                    },\r\n                    serverFiltering: true\r\n                });\r\n            }\r\n\r\n            var preventClosing = 'init';\r\n            var createKendoAutoComplete = function () {\r\n                autoComplete = targetEle.kendoAutoComplete({\r\n                    dataTextField: _textProp,\r\n                    suggest: false,\r\n                    placeholder: placeHolderText,\r\n                    valuePrimitive: false,\r\n                    dataSource: dataSource,\r\n                    close: function (e) {\r\n                        if ($(window).scrollTop() + $(window).height() == $(document).height() && preventClosing == 'open') {\r\n                            e.preventDefault();\r\n                            preventClosing = 'close';\r\n                        }\r\n                    },\r\n                    change: function (e) {\r\n                        preventClosing = 'change';\r\n                        e.sender.close();\r\n                        \r\n                    },\r\n                    open: function (e) {\r\n                        preventClosing = 'open';\r\n                    },\r\n                    enable: (targetEle.attr('disabled')) ? false : true,\r\n                    clearButton: false\r\n                }).data(\"kendoAutoComplete\");\r\n            }\r\n            var createDetailsPopup = function () {\r\n                detailsPopupEle = $(\"<div>\");\r\n                detailsPopupEle.appendTo(\"body\");\r\n                detailsPopup = detailsPopupEle.kendoCiresonWindow({\r\n                    title: \"\",\r\n                    width: 550,\r\n                    height: 400,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n            var validateAutoCompleteValue = function () {\r\n                var match = getDataSourceMatch(autoComplete.value());\r\n                if (!match) {\r\n                    detailsBtn.hide();\r\n                    if (targetEle.is(\":focus\")) {\r\n                        // invalid while typing\r\n                        targetEle.css({\r\n                            \"text-decoration\": \"none\",\r\n                            \"background-color\": \"#fff\"\r\n                        });\r\n                    } else {\r\n                        // invalid after blur\r\n                        targetEle.css({\r\n                            \"text-decoration\": \"none\",\r\n                            \"background-color\": \"#FBE3E4\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    // valid\r\n                    detailsBtn.show();\r\n                    targetEle.css({\r\n                        \"text-decoration\": \"underline\",\r\n                        \"background-color\": \"#fff\"\r\n                    });\r\n                }\r\n            }\r\n            var getDataSourceMatch = function (val) {\r\n                var ds = _.clone(dataSource);\r\n                var view = ds.view();\r\n\r\n                // matching needs to be case insensitive\r\n                var match = false;\r\n                $.each(view, function (i, item) {\r\n                    if (item.DisplayName.toLowerCase() == val.toLowerCase()) {\r\n                        match = item;\r\n                    }\r\n                });\r\n                return match;\r\n            }\r\n            var setValue = function (name, id) {\r\n                dataSource.add(_model.getObj(name, id));\r\n                autoComplete.value(name);\r\n                validateAutoCompleteValue();\r\n            }\r\n            var getFocusedIndex = function () {\r\n                var focused = autoComplete.ul.find(\".k-state-focused\");\r\n                return (focused.length) ? focused.index() : false;\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/button/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <input type=\"button\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"button btn btn-<%= ButtonType %> btn-<%= ButtonSize %>\"\\r\\n           value=\"<%= PropertyDisplayName %>\"\\r\\n           data-bind=\"click: <%= Action %>\"\\r\\n\\r\\n            <% if ( Disabled ){ %>\\r\\n            disabled\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\r\nBUTTON\r\n**/\r\n\r\ndefine('forms/fields/button/controller',['require','text!forms/fields/button/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/button/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                PropertyName: 'defaultButton',\r\n                ButtonType: (node.ButtonType) ? node.ButtonType : 'default',\r\n                ButtonSize: (node.ButtonSize) ? node.ButtonSize : 'sm',\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/editor/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <textarea class=\"form-editor\" data-control=\"editor\" style=\"height:<%= Height %>px\" name=\"<%= PropertyName %>\">\\r\\n        <%= Content %>\\r\\n    </textarea>\\r\\n</div>\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nEDITOR\r\n**/\r\ndefine('forms/fields/editor/controller',['require','text!forms/fields/editor/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/editor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            boundObj = node.vm;\r\n            //make sure we have all the vals set\r\n            //document.write(JSON.stringify(boundObj));\r\n            var properties = {\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                Content: (boundObj[node.PropertyName]) ? $('<div/>').text(boundObj[node.PropertyName]).html() : boundObj[node.PropertyName],\r\n                Height: node.Height == null ? 440 : node.Height\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var templateFrag = $(built(properties));\r\n\r\n            new Control(templateFrag.find(\"[data-control='editor']\"), boundObj, node);\r\n            // get settings from attrs\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n\r\n    var Control = function (targetEle, boundObj, node) {\r\n        if (node.Options == null) {\r\n            var defaultTools = [\r\n                    \"bold\", \"italic\", \"underline\", \"strikethrough\",\r\n                    \"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\",\r\n                    \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                    \"createLink\", \"unlink\", \"insertImage\",\r\n                    \"superscript\", \"subscript\",\r\n                    \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                    \"viewHtml\",\r\n                    \"formatting\", \"foreColor\", \"backColor\"\r\n            ];\r\n            var mobileTools = [\r\n                \"formatting\",\r\n                \"createLink\", \"unlink\", \"insertImage\",\"viewHtml\",\r\n                \"bold\", \"italic\", \"underline\",\r\n                \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\"\r\n            ];\r\n            node.Options = app.isMobileDevice() ? mobileTools : defaultTools;\r\n        }\r\n        var boundObj = boundObj;\r\n        //Need to review\r\n        setTimeout(function () {\r\n            targetEle.kendoEditor({\r\n                change: function (e) {\r\n                    boundObj.set(node.PropertyName, targetEle.val());\r\n                },\r\n                tools: node.Options,\r\n                encoded: false,\r\n                stylesheets: [\r\n                    \"/Content/Styles/cireson.main.min.css?v=\" + session.staticFileVersion\r\n                ]\r\n            });\r\n            var editor = targetEle.data(\"kendoEditor\");\r\n            boundObj.bind(\"change\", function (e) {\r\n                editor.value(boundObj[node.PropertyName]);\r\n            });\r\n            $(editor.body).addClass(\"k-editor-content-body\");\r\n        }, 100);\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/combo/view.html',[],function () { return '<div class=\"form-group\" data-bind=\"ciresonCombo: ControlObject\"\\r\\n\\r\\n<% if ( Required ){ %>\\r\\n    required\\r\\n<% } %>\\r\\n    >\\r\\n    <label data-template-part=\"labelPart\" class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n    </label>\\r\\n\\r\\n    <input class=\"form-control form-control-picker input-sm\" data-template-part=\"inputControlPart\" data-control-bind=\"<%= PropertyName %>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n         >\\r\\n    </input>\\r\\n</div>\\r\\n';});\n\n","/**\r\nCOMBO - combobox\r\n**/\r\ndefine('forms/fields/combo/controller',['require','text!forms/fields/combo/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/combo/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n            var viewModel = {\r\n                PropertyName: node.PropertyName,\r\n                PropertyDisplayName: node.PropertyDisplayName,\r\n                DataSource: {},\r\n                IsCascading: _.isUndefined(node.IsCascading) ? false : node.IsCascading,\r\n                Cascade: {},\r\n                Required: _.isUndefined(node.Required) ? false : node.Required,\r\n                Disabled: _.isUndefined(node.Disabled) ? false : node.Disabled,\r\n                ControlObject: null,\r\n                serverFiltering: _.isUndefined(node.serverFiltering) ? false : node.serverFiltering,\r\n                pageSize: _.isUndefined(node.pageSize) ? 1000 : node.pageSize,\r\n            };\r\n            $.extend(true, viewModel, node);\r\n\r\n            var view = new kendo.View(built(viewModel), { wrap: false, model: kendo.observable(viewModel) });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/dropDownList/view.html',[],function () { return '<div class=\"form-group\" data-bind=\"ciresonDropDownList: ControlObject\"\\r\\n\\r\\n<% if ( Required ){ %>\\r\\n    required\\r\\n<% } %>\\r\\n    >\\r\\n    <label data-template-part=\"labelPart\" class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n    </label>\\r\\n\\r\\n    <input class=\"form-control form-control-picker input-sm\" data-template-part=\"inputControlPart\" data-control-bind=\"<%= PropertyName %>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n         >\\r\\n    </input>\\r\\n</div>\\r\\n';});\n\n","/**\r\nCOMBO - combobox\r\n**/\r\ndefine('forms/fields/dropDownList/controller',['require','text!forms/fields/dropDownList/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/dropDownList/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n            var viewModel = {\r\n                PropertyName: node.PropertyName,\r\n                PropertyDisplayName: node.PropertyDisplayName,\r\n                DataSource: {},\r\n                Required: _.isUndefined(node.Required) ? false : node.Required,\r\n                Disabled: _.isUndefined(node.Disabled) ? false : node.Disabled,\r\n                ControlObject: null\r\n            };\r\n            $.extend(true, viewModel, node);\r\n\r\n            var view = new kendo.View(built(viewModel), { wrap: false, model: kendo.observable(viewModel) });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/bundle/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n    <button data-role=\"button\"\\r\\n            class=\"btn btn-primary\"\\r\\n            data-sprite-css-class=\"k-icon k-edit\"\\r\\n            data-bind=\"events: { click: view.onClick }\">\\r\\n        <%= localization.Bundle %>\\r\\n    </button>\\r\\n\\r\\n    <div id=\"Bundle\" class=\"cireson-window defined-form hide\">\\r\\n        <div class=\"cireson-window--wrapper\">\\r\\n            <div class=\"cireson-window--body\">\\r\\n\\r\\n\\r\\n                <div id=\"bundleGrid\">\\r\\n                    <div style=\"width: 800px; height: 200px\"\\r\\n                         data-role=\"grid\"\\r\\n                         data-bind=\"source: products,\\r\\n                                visible: isVisible,\\r\\n                                events: {\\r\\n                                  save: onSave\\r\\n                                }\"\\r\\n                         date-scrollable=\"true\"\\r\\n                         data-editable=\"{mode:\\'inline\\', confirmation:false}\"\\r\\n                         data-toolbar=\"[{name:\\'create\\', text:\\'<%= localization.Create %>\\'}]\"\\r\\n                         data-columns=\"[\\r\\n                            { \\'field\\': \\'SoftwarePatternName\\', title: \\'<%= localization.SoftwarePatternName %>\\', \\'width\\': 150 },\\r\\n                            { \\'field\\': \\'SoftwarePattern\\', title: \\'<%= localization.SoftwarePattern %>\\', \\'width\\': 150 },\\r\\n                            { \\'field\\': \\'VersionPattern\\', title: \\'<%= localization.VersionPattern %>\\', \\'width\\': 150 },\\r\\n                            { \\'field\\': \\'ExclusionPattern\\', title: \\'<%= localization.ExclusionPattern %>\\', \\'width\\': 150 },\\r\\n                            { command:[{name:\\'edit\\', text:\\'<%= localization.Edit %>\\'}, {name:\\'destroy\\', text:\\'<%= localization.Delete %>\\'}], title: \\' \\', width: \\'150\\'}\\r\\n                        ]\">\\r\\n                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"cireson-window--footer window-buttons\">\\r\\n                <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-primary\"\\r\\n                        data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                    <%= localization.OK %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancelClick }\">\\r\\n                    <%= localization.Cancel %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nfileAttachments\r\n**/\r\n\r\ndefine('forms/fields/bundle/controller',['require','text!forms/fields/bundle/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/bundle/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var template = $(built(properties));\r\n            \r\n            //k-grid-add\r\n            var bundleData = [];\r\n            var gridViewModel;\r\n            \r\n            var cont = template.find(\"#Bundle\").clone(); //we have the element in memory so no need use a selector\r\n            var win = cont.kendoCiresonWindow({\r\n                title: localization.createOrEditSoftwareBundle,\r\n                width: 850,\r\n                height: 375,\r\n                actions: [],\r\n                activate: function () {}\r\n            }).data(\"kendoWindow\");\r\n\r\n            var _vmWindow = new kendo.observable({\r\n                okClick: function () {\r\n                    var dataList = gridViewModel.products._data;\r\n                    var tempSoftwarePattern = \"\";\r\n                    var tempExclusionPattern = \"\";\r\n                    var tempVersionPattern = \"\";\r\n                    \r\n                    for (var i = 0; i < dataList.length; i++) {\r\n                        if (dataList[i].SoftwarePatternName == \"\") continue;\r\n                        if ((dataList.length - 1) == i) {\r\n                            tempSoftwarePattern = tempSoftwarePattern + dataList[i].SoftwarePatternName + \"__\" + dataList[i].SoftwarePattern;\r\n                            tempExclusionPattern = tempExclusionPattern + dataList[i].ExclusionPattern;\r\n                            tempVersionPattern = tempVersionPattern + dataList[i].VersionPattern;\r\n                        }\r\n                        else {\r\n                            tempSoftwarePattern = tempSoftwarePattern + dataList[i].SoftwarePatternName + \"__\" + dataList[i].SoftwarePattern + \"|\";\r\n                            tempExclusionPattern = tempExclusionPattern + dataList[i].ExclusionPattern + \"|\";\r\n                            tempVersionPattern = tempVersionPattern + dataList[i].VersionPattern + \"|\";\r\n                        }\r\n                    }\r\n                    vm.set(\"SoftwarePattern\", tempSoftwarePattern);\r\n                    vm.set(\"ExclusionPattern\", tempExclusionPattern);\r\n                    vm.set(\"VersionPattern\", tempVersionPattern);\r\n                    var SoftwarePatternTxt = $(\"input[name='SoftwarePattern']\");\r\n                    var ExclusionPatternTxt = $(\"input[name='ExclusionPattern']\");\r\n                    var VersionPatternTxt = $(\"input[name='VersionPattern']\");\r\n                    if (vm.SoftwarePattern!=\"\") {\r\n                        vm.set(\"IsBundle\", true);\r\n                        enableDisableTextbox(SoftwarePatternTxt,false);\r\n                        enableDisableTextbox(ExclusionPatternTxt, false);\r\n                        enableDisableTextbox(VersionPatternTxt, false);\r\n                    } else {\r\n                        vm.set(\"IsBundle\", false);\r\n                        enableDisableTextbox(SoftwarePatternTxt, true);\r\n                        enableDisableTextbox(ExclusionPatternTxt, true);\r\n                        enableDisableTextbox(VersionPatternTxt, true);\r\n                    }\r\n                    win.close();\r\n                },\r\n                cancelClick: function () {\r\n                    win.close();\r\n                },\r\n            });\r\n\r\n            kendo.bind(cont, _vmWindow);\r\n            var enableDisableTextbox = function (txt, isEnable) {\r\n                if (isEnable) {\r\n                    txt.prop(\"disabled\", false).removeClass(\"k-state-disabled\");\r\n                }\r\n                else\r\n                    txt.prop(\"disabled\", true).addClass(\"k-state-disabled\").closest(\".has-error\")\r\n                                        .removeClass(\"has-error\");\r\n            }\r\n\r\n            vm.view.onClick = function () {\r\n                bundleData = [];\r\n                var softwarePatternList = new Array();\r\n                var exclusionPatternList = new Array();\r\n                var versionPatternList = new Array();\r\n                if (!_.isNull(vm.SoftwarePattern) && vm.SoftwarePattern != \"\") {\r\n                    softwarePatternList = vm.SoftwarePattern == \"\" ? \"\" : vm.SoftwarePattern.split(\"|\");\r\n                }\r\n\r\n                if (!_.isNull(vm.ExclusionPattern) && vm.ExclusionPattern != \"\") {\r\n                    exclusionPatternList = vm.ExclusionPattern == \"\" ? \"\" : vm.ExclusionPattern.split(\"|\");\r\n                }\r\n\r\n                if (!_.isNull(vm.VersionPattern) && vm.VersionPattern != \"\") {\r\n                    versionPatternList = vm.VersionPattern == \"\" ? \"\" : vm.VersionPattern.split(\"|\");\r\n                }\r\n\r\n                    \r\n                if (vm.IsBundle) {\r\n                    for (var i in softwarePatternList) {\r\n                        var softwarePattern = softwarePatternList[i].split(\"__\");\r\n                        bundleData.push({ SoftwarePatternName: softwarePattern[0], SoftwarePattern: softwarePattern[1], VersionPattern: versionPatternList[i], ExclusionPattern: exclusionPatternList[i] });\r\n                    }\r\n                }\r\n                \r\n\r\n                gridViewModel = kendo.observable({\r\n                    isVisible: true,\r\n                    onSave: function (e) {\r\n                        \r\n                    },\r\n                    products: new kendo.data.DataSource({\r\n                        schema: {\r\n                            model: {\r\n                                id: \"SoftwarePatternName\",//an id is required to maintain edit/cancel state correctlf TFS3424\r\n                                fields: {\r\n                                    SoftwarePatternName: {\r\n                                        editable: true,\r\n                                        validation: {\r\n                                            SoftwarePatternNamevalidation: function (input) {\r\n                                                if (input.is(\"[name='SoftwarePatternName']\") && input.val() == \"\") {\r\n                                                    input.attr(\"data-SoftwarePatternNamevalidation-msg\", localization.EnterRequiredFields);\r\n                                                    return false;\r\n                                                }\r\n                                                return true;\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    SoftwarePattern: {\r\n                                        editable: true, type: \"string\",\r\n                                        validation: {\r\n                                            SoftwarePatternvalidation: function (input) {\r\n                                                if (input.is(\"[name='SoftwarePattern']\") && input.val() == \"\") {\r\n                                                    input.attr(\"data-SoftwarePatternvalidation-msg\", localization.EnterRequiredFields);\r\n                                                    return false;\r\n                                                }\r\n                                                return true;\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    VersionPattern: { editable: true, type: \"string\", validation: { required: false } },\r\n                                    ExclusionPattern: { editable: true, type: \"string\", validation: { required: false } }\r\n                                }\r\n                            }\r\n                        },\r\n                        batch: false,\r\n                        data: bundleData,\r\n                    })\r\n                });\r\n\r\n                kendo.bind(cont.find(\"#bundleGrid\"), gridViewModel);\r\n\r\n                cont.removeClass('hide');\r\n                cont.show();\r\n\r\n                win.open();\r\n            }\r\n\r\n            callback(template);\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/fields/fileUpload/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <input id=\"<%= PropertyName %>\" type=\"file\"\\r\\n           accept=\"<%= AcceptExtension %>\"\\r\\n           data-role=\"upload\"\\r\\n           name=\"files\"\\r\\n           data-async=\"{ saveUrl: \\'/FileAttachment/FileUpload/?BaseId=<%= BaseId %>&fieldName=<%= PropertyName %>\\', autoUpload: true }\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"events: { select: onSelect, complete:complete, success:success }\" />\\r\\n    <br />\\r\\n    <div id=\"div<%= PropertyName %>\">\\r\\n        <div data-role=\"button\"\\r\\n                data-sprite-css-class=\"k-icon k-edit\"\\r\\n                data-bind=\"events: { click: onRemove }\">\\r\\n            <i class=\"fa fa-close\"></i>\\r\\n        </div>\\r\\n        <div>\\r\\n        <img />\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/fileUpload/controller',['require','text!forms/fields/fileUpload/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/fileUpload/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n\r\n            \r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n            var properties = {\r\n                Required: node.Required,\r\n                BaseId: vm.BaseId,\r\n                AcceptExtension: _.isUndefined(node.AcceptExtension) ? \"\" : vm.AcceptExtension\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            var template = $(built(properties));\r\n\r\n            var viewModel = new kendo.observable({\r\n                isEnabled: true,\r\n                isVisible: true,\r\n                onSelect: function (e) {\r\n                    template.find(\".k-file-error\").remove();\r\n                    $.each(e.files, function (index, value) {\r\n                        if (!_.isUndefined(node.AcceptExtension)\r\n                            && node.AcceptExtension!=\"\"\r\n                            && !(node.AcceptExtension.toLowerCase().indexOf(value.extension.toLowerCase()) > -1)) {\r\n                            kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.ErrorDescription,\r\n                                message: localization.FileExtensionInvalid + node.AcceptExtension,\r\n                                icon: \"fa fa-exclamation\"\r\n                            });\r\n                            e.preventDefault();\r\n                        }\r\n                    });\r\n                },\r\n                complete: function (e) {\r\n                    if (template.find(\".k-file\").length > 1) {\r\n                        template.find(\".k-file:first\").remove();\r\n                        \r\n                    }\r\n                },\r\n                success: function (e) {\r\n                    var img = template.find(\"img\");\r\n                    img.attr(\"src\", \"data:image/png;base64,\" + e.response);\r\n                    vm[node.PropertyName] = {\r\n                        \"streamId\": null,\r\n                        \"data\": \"stream\",\r\n                        \"bufferedMode\": true,\r\n                        \"streamLength\": 0\r\n                    };\r\n\r\n                    template.find(\"#div\" + node.PropertyName).show();\r\n                },\r\n                onRemove: function (e) {\r\n                    $.get(\"/FileAttachment/RemoveFileUpload/\", { BaseId: vm.BaseId, fieldName: node.PropertyName }, function (data) {\r\n                        template.find(\".k-file\").parent().remove();\r\n                        //template.find(\"img\").hide();\r\n                        template.find(\"#div\" + node.PropertyName).hide();\r\n                        vm[node.PropertyName] = null;\r\n                    });\r\n                }\r\n            });\r\n\r\n            $.get(\"/api/V3/Projection/GetBase64String\", { BaseId: vm.BaseId, PropertyName: node.PropertyName }, function (data) {\r\n                var img = template.find(\"#div\" + node.PropertyName);\r\n                if (data != \"\") {\r\n                    template.find(\"img\").attr(\"src\", \"data:image/png;base64,\" + data);\r\n                    img.show();\r\n                } else {\r\n                    img.hide();\r\n                }\r\n            });\r\n            \r\n\r\n            _.defer(function () { kendo.bind(template, viewModel); });\r\n            callback(template);\r\n\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/fields/urlTextbox/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"value: <%= PropertyName %>, events:{change:textChange}\" <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n\\r\\n        />\\r\\n    <div data-role=\"button\"\\r\\n         data-sprite-css-class=\"k-icon k-edit\"\\r\\n         class=\"urlTextboxIcon\"\\r\\n         data-bind=\"events: { click: openURL }\">\\r\\n        <i class=\"fa fa-external-link nav-icon-color\"></i>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/urlTextbox/controller',['require','text!forms/fields/urlTextbox/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/urlTextbox/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            \r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            \r\n            vm.view.buildURLTextbox = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var regexp = new RegExp(/^((ftp|http|https?):\\/\\/)?([w|W]{3}\\.)*?[a-zA-Z0-9\\-\\.]{3,}\\.[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})?$/);\r\n                var disabled = \"urlTextboxButtonDisabled\";\r\n                var error = \"input-error\";\r\n                var url = vm.get(node.PropertyName);\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled\r\n                };\r\n                \r\n                $.extend(true, properties, node);\r\n                var template = $(built(properties));\r\n                var txtBox = template.find(\"input\");\r\n                var link = template.find(\".urlTextboxIcon\");\r\n\r\n                var validateUrl = function () {\r\n                    var isOk = true;\r\n                    url = vm.get(node.PropertyName);\r\n                    link.removeClass(disabled);\r\n                    txtBox.removeClass(error);\r\n                    if (url == \"\" || _.isNull(url)) {\r\n                        isOk = false;\r\n                        link.addClass(disabled);\r\n                    } else if (!regexp.test(url)) {\r\n                        link.addClass(disabled);\r\n                        txtBox.addClass(error);\r\n                        isOk = false;\r\n                    }\r\n                    return isOk;\r\n                }\r\n                validateUrl();\r\n                vm.textChange = function (e) {\r\n                    validateUrl();\r\n                }\r\n\r\n                vm.openURL = function (e) {\r\n                    if (validateUrl()) {\r\n                        //append protocol if does not have one\r\n                        if (!url.match(/^ftp|http([s]?):\\/\\/.*/)) {\r\n                            url = 'http://' + url;\r\n                        }\r\n                        var win = window.open(url, '_blank');\r\n                        win.focus();\r\n                    }\r\n                };\r\n\r\n\r\n                view = new kendo.View(template, { wrap: false, model: vm });\r\n               \r\n               callback(view.render());\r\n            };\r\n            vm.view.buildURLTextbox();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nDECIMAL\r\n**/\r\n\r\ndefine('forms/fields/percentage/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                //Required: false,\r\n                DecimalPlaces: 2,\r\n                MinValue: '',\r\n                MaxValue: '',\r\n                StepIncrement: 0.01,\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Format: \"P0\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\r\n\r\n\r\ndefine('forms/formBuilder',[\r\n    \"forms/structure/formPanel/controller\",\r\n    \"forms/structure/formPanelFull/controller\",\r\n    \"forms/structure/customFieldGroup/controller\",\r\n    \"forms/structure/customFieldGroupRow/controller\",\r\n    \"forms/structure/columnField/controller\",\r\n    \"forms/structure/tab/controller\",\r\n    \"forms/structure/tabPane/controller\",\r\n    \"forms/structure/tabNavigation/controller\",\r\n    \"forms/structure/tabData/controller\",\r\n\r\n    \"forms/predefined/actionLog/controller\",\r\n    \"forms/predefined/fileAttachments/controller\",\r\n    \"CustomSpace/Scripts/forms/predefined/affectedItems/controller\", // \"forms/predefined/affectedItems/controller\",\r\n    \"CustomSpace/Scripts/forms/predefined/relatedItems/controller\", // \"forms/predefined/relatedItems/controller\",\r\n    \"forms/predefined/childWorkItems/controller\",\r\n    \"forms/predefined/userInput/controller\",\r\n    \"forms/predefined/activities/controller\",\r\n    \"forms/predefined/multipleObjectPicker/controller\",\r\n    \"CustomSpace/Scripts/forms/predefined/history/controller\", // \"forms/predefined/history/controller\",\r\n    \"forms/predefined/billableTime/controller\",\r\n    \"forms/predefined/knowledgeArticle/controller\",\r\n    \"forms/predefined/fileAttachmentsDragDrop/controller\",\r\n    \r\n\r\n    \"forms/fields/string/controller\",\r\n    \"forms/fields/longstring/controller\",\r\n    \"forms/fields/boolean/controller\",\r\n    \"forms/fields/display/controller\",\r\n    \"forms/fields/spacer/controller\",\r\n    \"forms/fields/numeric/controller\",\r\n    \"forms/fields/int/controller\",\r\n    \"forms/fields/decimal/controller\",\r\n    \"forms/fields/double/controller\",\r\n    \"forms/fields/date/controller\",\r\n    \"forms/fields/datetime/controller\",\r\n    \"forms/fields/enum/controller\",\r\n    \"forms/fields/userPicker/controller\",\r\n    \"forms/fields/objectPicker/controller\",\r\n    \"forms/fields/button/controller\",\r\n    \"forms/fields/editor/controller\",\r\n    \"forms/fields/combo/controller\",\r\n    \"forms/fields/dropDownList/controller\",\r\n    \"forms/fields/bundle/controller\",\r\n    \"forms/fields/fileUpload/controller\",\r\n    \"forms/fields/urlTextbox/controller\",\r\n    \"forms/fields/percentage/controller\"\r\n    \r\n\r\n\r\n], function (formPanel,\r\n    formPanelFull,\r\n    customFieldGroup,\r\n    customFieldGroupRow,\r\n    columnField,\r\n    tab, //.tab-content\r\n    tabPane, //.tab-pane\r\n    tabNavigation, //ul\r\n    tabData,//li\r\n\r\n    actionLog,\r\n    fileAttachments,\r\n    affectedItems,\r\n    relatedItems,\r\n    childWorkItems,\r\n    userInput,\r\n    activities,\r\n    multipleObjectPicker,\r\n    history,\r\n    billableTime,\r\n    knowledgeArticle,\r\n    fileAttachmentsDragDrop,\r\n    \r\n\r\n    String,\r\n    LongString,\r\n    Boolean,\r\n    Display,\r\n    Spacer,\r\n    Numeric,\r\n    Int32,\r\n    Decimal,\r\n    Double,\r\n    Date,\r\n    DateTime,\r\n    Enum,\r\n    UserPicker,\r\n    ObjectPicker,\r\n    Button,\r\n    Editor,\r\n    Combo,\r\n    DropDownList,\r\n    Bundle,\r\n    FileUpload,\r\n    UrlTextbox,\r\n    Percentage) {\r\n\r\n    var mainContainer;\r\n    var jsonTemplate;\r\n    var viewModel;\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            viewModel = vm.viewModel;\r\n            jsonTemplate = vm.formTemplate;\r\n\r\n            // Decide on layout template\r\n            eval(\"var _obj = \" + jsonTemplate.layoutType + \";\");\r\n            // if no template was found, use default ('form')\r\n            if (!_obj) {\r\n                _obj = formPanel;\r\n            }\r\n\r\n            _obj.build(function (tplString) {\r\n                mainContainer = $(tplString);\r\n            });\r\n\r\n            readTemplate(mainContainer, jsonTemplate);\r\n            callback(mainContainer);\r\n            //see if we have a non-default tab selection\r\n            $(\"a[selected='selected']\").tab('show'); //selected tab for loading ex: http://localhost:13463/Incident/Edit/IR430/?tab=activity&activityId=MA798\r\n        }\r\n    }\r\n\r\n    var readTemplate = function (container, json, columns) {\r\n        var columns = (columns != undefined && columns !== false) ? columns : false;\r\n\r\n        $.each(json, function (key, item) {\r\n            if (key != \"layoutType\") {\r\n                jsonDecision(container, key, item, columns);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Mutate any jsonFormTemplate items by name:value\r\n    var mutationLogic = {\r\n        // Run on all properties\r\n        all: function (propValue) {\r\n            propValue.vm = viewModel; // pass in viewModel\r\n        },\r\n        tabList: function (tabList) {\r\n            jsonTemplate.tabNavigation = {\r\n                nodeCount: tabList.length,\r\n                tabData: []\r\n            }\r\n            tabNavigation.build(viewModel, jsonTemplate, function (tabtplString) {\r\n                var tabnavCont = $(tabtplString);\r\n\r\n                //prevent multiple tabs being set to focus. \r\n                var focusSet = false;\r\n                $.each(tabList, function (i, tabNode) {\r\n                    //this gets ?tab= data from uri if present\r\n                    var focusedTab = app.getParameterByName(\"tab\").toLowerCase();\r\n                    var tabNodeNameKey = tabNode.name;\r\n                    //set vals\r\n                    tabNode.tabId = app.lib.newGUID();\r\n                    tabNode.active = (i == 0) ? \"active\" : \"\";\r\n                    tabNode.content.tabId = tabNode.tabId;\r\n                    tabNode.content.active = tabNode.active;\r\n\r\n                    //call build on each nav node \r\n                    tabData.build(viewModel, tabNode, function (tplString) {\r\n                        //append to tabnavcont\r\n                        var element = $(tplString);\r\n\r\n                        if (app.isMobile()) {\r\n                            tabnavCont.children('.nav-dropdown-content').find('ul').append(element);\r\n                        } else {\r\n                            tabnavCont.append(element);\r\n                        }\r\n                      \r\n                        if (!app.isMobile()) {\r\n                            //--Start focus tab logic\r\n                            //check if there we found and focused tab param in the uri\r\n                            if (!focusSet && focusedTab.length > 0) {\r\n                                //this statement will set focus if they have a tab name in the uri that matches a tab name on the page\r\n                                if (tabNodeNameKey.toLowerCase() === focusedTab) {\r\n                                    element.find(\"a\").attr(\"selected\", \"true\");\r\n                                    focusSet = true;\r\n                                }\r\n\r\n                                //if focus is on activity tab (i.e. click an activity from the grid) set focus on tab and open activity\r\n                                switch (focusedTab) {\r\n                                    case \"activity\":\r\n                                        //find the activity tab based on control type\r\n                                        $.each(tabNode.content, function (i, content) {\r\n                                            $.each(content.customFieldGroupList, function (i, group) {\r\n                                                if (group.type === \"activities\") {\r\n                                                    element.find(\"a\").attr(\"selected\", \"true\");\r\n                                                    focusSet = true;\r\n                                                };\r\n                                            });\r\n                                        });\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                };\r\n                            };\r\n                            //--End focused tab logic\r\n                        } \r\n                    });\r\n                });\r\n                //append tabnavcont to main form panel\r\n                mainContainer.append(tabnavCont);\r\n            });\r\n\r\n            // ------------ tab dropdown\r\n\r\n        },\r\n        // Run to determine colspan\r\n        columnFieldList: function (columnFieldList) {\r\n            app.lib.setColumnSizes(columnFieldList);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    var getContainer = function (tplReturn) {\r\n        return (typeof (tplReturn) === \"string\") ? $(tplReturn) : tplReturn;\r\n    }\r\n\r\n    var chooseNextAction = function (container, item, objectName, columnCount) {\r\n        if (item.content) { //this denotes a tabPane\r\n            jsonDecision(container, objectName + \"Pane\", item.content);\r\n        } else if (item.rows) { //this denotes a FieldGroupList\r\n            jsonDecision(container, objectName + \"Row\", item.rows);\r\n        } else if (item.DataType) { //denotes a standard field, like string or numeric\r\n            jsonDecision(container, item.DataType, item);\r\n        } else if (item.type) { // predefined\r\n            jsonDecision(container, item.type, item);\r\n        } else { //an array of items, re-loop to comb through the child properties\r\n            readTemplate(container, item, columnCount);\r\n        }\r\n    };\r\n\r\n    // \r\n    var jsonDecision = function (propContainer, propName, propValue, columns) {\r\n        //propName is the name of the obj we will call .build on\r\n        //propValue is the object itself, like { DataType: \"UserPicker\", PropertyDisplayName: \"PrimaryOwner\", PropertyName: \"RelatesToIncident\", FilterByAnalyst: true},\r\n        var objectName = propName;\r\n\r\n        var list = false;\r\n        var row = false;\r\n        var pane = false;\r\n        var columnCount = (columns == undefined) ? false : columns; //TODO: ELI do we need this now, with the mutate function\r\n\r\n        // mutation logic\r\n        if (mutationLogic[propName]) {\r\n            mutationLogic[propName](propValue);\r\n        }\r\n        mutationLogic[\"all\"](propValue);\r\n\r\n        // Check if it is a List\r\n        if (propValue.push) {\r\n            if (propName.indexOf(\"List\") > -1) {\r\n                list = true;\r\n                objectName = propName.split(\"List\")[0];\r\n            }\r\n            else if (propName.indexOf(\"Row\") > -1) {\r\n                row = true;\r\n                columnCount = propValue.length;\r\n            }\r\n            else if (propName.indexOf(\"Pane\") > -1) {\r\n                pane = true;\r\n            }\r\n        }\r\n\r\n        // Decide on Template\r\n        eval(\"var _obj = \" + objectName + \";\");\r\n        // Check if Template Exists\r\n        if (!_obj) {\r\n            throw Exception(objectName + \" is not part of the templating system\");\r\n            return false;\r\n        }\r\n\r\n        // xxxList \r\n        if (list || row || pane) {\r\n            if (_obj == tab) {\r\n                //if it is a tab object, need to call build first, then loop through children\r\n                _obj.build(viewModel, propValue, function (tplReturn) {\r\n                    var _container = getContainer(tplReturn);\r\n                    propContainer.append(_container);\r\n                    $.each(propValue, function (i, item) {\r\n                        chooseNextAction(_container, item, objectName);\r\n                    });\r\n                });\r\n\r\n            } else {\r\n                $.each(propValue, function (i, item) {\r\n                    if (objectName == \"columnField\") {\r\n                        item.columnCount = columnCount;\r\n                    }\r\n\r\n                    if (_obj == tabPane) { //this one passes in propValue, the else statement passes in item\r\n                        _obj.build(viewModel, propValue, function (tplReturn) {\r\n                            var _container = getContainer(tplReturn);\r\n                            propContainer.append(_container);\r\n                            readTemplate(_container, item, columnCount);\r\n                        });\r\n                    }\r\n                        //todo: note, possibly do manipulation here on customFieldGroupList/Row. do account for the bs-panels being wonky.\r\n\r\n                    else {\r\n\r\n                        _obj.build(viewModel, item, function (tplReturn) {\r\n                            var _container = getContainer(tplReturn);\r\n                            propContainer.append(_container);\r\n                            //allow view to define where children should be added \r\n                            if (_container.find(\".append-here\").length != 0) {\r\n                                chooseNextAction(_container.find(\".append-here\"), item, objectName, columnCount);\r\n                            } else {\r\n                                chooseNextAction(_container, item, objectName, columnCount);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            //we should only force a disable state if isDisabled is true\r\n            //otherwise keep default and defined disable value\r\n            if (!_.isUndefined(viewModel) && viewModel.isDisabled) {\r\n                propValue.disabled = true;\r\n            }\r\n\r\n            _obj.build(viewModel, propValue, function (tplReturn) {\r\n                var _container = getContainer(tplReturn);\r\n                propContainer.append(_container);\r\n            });\r\n        }\r\n\r\n    }\r\n    return definition;\r\n});\r\n\r\n\r\n\n","define('forms/formHelper',[\n\n], function (\n\n        ) {\n\n\n    var definition = {\n        \n        manageDirty: function (vm) {\n            //setup is dirty flag\n            vm.set('isDirty', false);\n            //bind to view model changes to set dirty flag\n            vm.bind(\"change\", function (e) {\n                //console.log(e.field); // will output the changed field once the event is raised\n                //TODO: may need to make this a little smarter\n                //don't trigger isDirty changes\n                if (e.field !== \"isDirty\" &&\n                    e.field !== \"HistoryButton\") {\n                    vm.set(\"isDirty\", true);\n                }\n            });\n            //don't let the user leave the page if form is dirty\n            window.onbeforeunload = function () {\n                //TODO find a way to over write default browser alert\n                if (vm.get(\"isDirty\")) {\n                    return localization.UnsavedDataMessage;\n                }\n            }\n        },\n\n        mobileDrawerTaskButton: function (taskContainer) { //This will going to create task button to the drawer for mobile task\n            //if (app.isMobileDevice()) \n            var task = drawermenu.addButton(localization.Tasks, \"fa fa-tasks\", function () { });\n            app.lib.makeDrawer(\"bottom\", taskContainer, task, true);\n\n            function mobileTaskShow() {\r\n                if (app.isMobile()) {\r\n                    task.show();\r\n                } else {\r\n                    task.hide();\r\n                }\n            }\n\n            $(window).resize(function () {\r\n                mobileTaskShow();\r\n            });\n\n            mobileTaskShow();\n        }\n    }\n\n\n    return definition;\n});\n\n\n","require.config({\n    waitSeconds: 0,\n    urlArgs: \"v=\" + session.staticFileVersion,\n    baseUrl: \"/Scripts/\",\n    paths: {\n        //kendo: \"kendo/js/kendo.mobile.min\",\n        //jquery: \"jquery/jquery.min\",\n        text: \"require/text\",\n        \"CustomSpace\": \"../CustomSpace\"\n    },\n\n    shim: {\n        //kendo: {\n        //    deps: ['jquery'],\n        //    exports: 'kendo'\n        //}\n    }\n});\n\n//let's let the user know that things are happening\napp.lib.mask.apply();\n$(\"body\").css(\"cursor\", \"wait\");\n$(document).ajaxStop(function () {\n    $(\"body\").css(\"cursor\", \"auto\");\n});\n\nrequire([\"forms/taskBuilder\", \"forms/headerBuilder\", \"forms/formBuilder\", \"forms/formHelper\"], function (taskBuilder, headerBuilder, formBuilder, formHelper, messagesStructure) {\n\n    var saveUrl = pageForm.saveUrl;\n    var mainContainer = $(pageForm.container);\n    var taskContainer = $('<div class=\"task-panel task-panel-narrow\"></div>');\n    //var headerContainer = $('<div/>').addClass(\"form-header form-panel\");\n    var headerContainer = $('.page_bar').empty(); //use new page header div, just clear it out before adding things\n    var formContainer = $('<div/>').addClass(\"page-form\");\n    var formType = pageForm.type;\n    var dataVM = pageForm.viewModel;\n    var dataVMUnchanged = pageForm.jsonRaw;\n    var priorityJSON = (pageForm.priorityJSON) ? pageForm.priorityJSON : false; // for priority matrix in Incident\n    var bHasNoInitalAssignee = (_.isUndefined(pageForm.viewModel.AssignedWorkItem) || _.isNull(pageForm.viewModel.AssignedWorkItem)) ? true : false; //for set first assigned date in incident\n    var bShowAddWatchList = _.isUndefined(_.find(pageForm.viewModel.WatchList, function (user) { return (user.Id == session.user.Id || user.BaseId == session.user.Id); }));\n    var bShowRemoveWatchList = !bShowAddWatchList;\n\n    //set a check for unsubmitted action log commnets\n    dataVM.set('commentDirty', false);\n\n    //seems like the activity builder calls this on ready function once all the activity stuff is loaded\n    pageForm.onReady = function () {\n        //make sure activities did not make the form dirty\n        pageForm.viewModel.set(\"isDirty\", false);\n        //pageForm.jsonRaw = dataVM.toJSON();\n    }\n\n    //check for errors\n    if (!_.isUndefined(pageForm.viewModel.WorkItemErrorMessage)) {\n        var jumbotron = $('<div/>').addClass('jumbotron');\n        jumbotron.append($('<h1 />').addClass(\"error uppercase\").html(\"<i class='fa fa-frown-o'></i> \" + localization.Failed));\n        jumbotron.append($('<p />').addClass(\"error\").html(pageForm.viewModel.WorkItemErrorMessage));\n\n        mainContainer.append(jumbotron);\n\n        app.lib.mask.remove();\n        $(\"body\").css(\"cursor\", \"auto\");\n        return;\n    }\n\n    //add the ability to bind to form load\n    var readyArray = [];\n    pageForm.boundReady = function (func) {\n        readyArray.push(func);\n    }\n\n    //add the ability to bind change to viewModel by index, with support for null index\n    var changesArray = [];\n    pageForm.boundChange = function (index, func) {\n        changesArray[index] = func;\n    }\n\n    //add custom viewModel function in the custom space\n    var methods = app.custom.actionMethod.get(formType);\n    if (_.isArray(methods)) {\n        dataVM.custom = {};\n        $.each(methods, function (i, method) {\n            if (_.isFunction(method.func)) {\n                dataVM.custom[method.index] = method.func;\n            }\n        });\n    }\n\n    //add header json definition\n    //since all WI have same header structure we put it in this file\n    //if this changes we need to move this to all the cshtml New/Edit files\n    pageForm.headerTemplate = {\n        rows: [\n                {\n                    columns: [\n                        { View: \"sticky\", Class: \"\" }\n                        //{ View: \"status\", Class: \"col-md-6 col-xs-12\" },\n                        //{ View: \"relationships\", Class: \"col-md-4 col-xs-12\" },\n                        //{ View: \"slo\", Class: \"col-md-3 col-xs-12\" }\n                    ]\n                }\n        ]\n    };\n\n    if ($(\"html\").attr(\"dir\")==\"rtl\") {\r\n        pageForm.headerTemplate.rows[0].columns.reverse();\r\n    }\n\n\n    //going to define tasks based on pageForm.type & pageForm.newWI to reduce repetative code\n    pageForm.taskTemplate = {};\n    pageForm.taskTemplate.task = [];\n\n    //Change Request Tasks\n\n    var ChangeStatus = \"0bf0a71b-9e9e-f719-0271-c9a4ff352600\";\n    var ChangeStatus_New = \"a87c003e-8c19-a25f-f8b2-151b56670e5c\";\n    var ChangeStatus_Failed = \"85f00ead-2603-6c68-dfec-531c83bf900f\";\n    var ChangeStatus_Closed = \"f228d50b-2b5a-010f-b1a4-5c7d95703a9b\";\n    var ChangeStatus_InProgress = \"6d6c64dd-07ac-aaf5-f812-6a7cceb5154d\";\n    var ChangeStatus_OnHold = \"dd6b0870-bcea-1520-993d-9f1337e39d4d\";\n    var ChangeStatus_Cancelled = \"877defb6-0d21-7d19-89d5-a1107d621270\";\n    var ChangeStatus_Submitted = \"504f294c-ae38-2a65-f395-bff4f085698b\";\n    var ChangeStatus_Completed = \"68277330-a0d3-cfdd-298d-d5c31d1d126f\";\n\n    if (pageForm.type === 'ChangeRequest') {\n        var statusCancelled = (pageForm.viewModel.Status.Id == ChangeStatus_Cancelled);\n        var statusCompleted = (pageForm.viewModel.Status.Id == ChangeStatus_Completed);\n        var statusFailed = (pageForm.viewModel.Status.Id == ChangeStatus_Failed);\n        var showCancelled = (session.user.Analyst && !pageForm.newWI) && !statusCancelled && !statusCompleted && !statusFailed;\n        var showChangeStatus = (session.user.Analyst && !pageForm.newWI);\n\n        pageForm.taskTemplate = {\n            tasks: [\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: ChangeStatus } },\n                        { Task: \"newStatus\", Label: localization.CancelRequest, Access: showCancelled, Configs: { confirmTitle: localization.CancelRequest, confirmMessage: localization.SureCancelRequest, newStatusName: localization.Cancelled, newStatusId: ChangeStatus_Cancelled } },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n            ]\n        };\n    }\n\n\n    //Incident Tasks\n\n    var IncidentStatus = \"89b34802-671e-e422-5e38-7dae9a413ef8\";\n    var IncidentStatus_Active = \"5e2d3932-ca6d-1515-7310-6f58584df73e\";\n    var IncidentStatus_Closed = \"bd0ae7c4-3315-2eb3-7933-82dfc482dbaf\";\n    var IncidentStatus_Resolved = \"2b8830b6-59f0-f574-9c2a-f4b4682f1681\";\n    var IncidentStatus_Active_Pending = \"b6679968-e84e-96fa-1fec-8cd4ab39c3de\";\n    var IncidentTierQueue = \"c3264527-a501-029f-6872-31300080b3bf\";\n    var IncidentResolution = \"72674491-02cb-1d90-a48f-1b269eb83602\";\n\n    if (pageForm.type === 'Incident') {\n        var statusNotResolvedOrClosed = (pageForm.viewModel.Status.Id !== IncidentStatus_Resolved && pageForm.viewModel.Status.Id !== IncidentStatus_Closed);\n        var showAcknowledge = session.user.Analyst && statusNotResolvedOrClosed && pageForm.viewModel.FirstResponseDate == null;\n        var showLinkToparent = session.user.Analyst && statusNotResolvedOrClosed && !pageForm.viewModel.IsParent;\n        var showRevertToParent = session.user.Analyst && statusNotResolvedOrClosed && pageForm.viewModel.IsParent;\n        var showConvertToParent = session.user.Analyst && statusNotResolvedOrClosed && !pageForm.viewModel.IsParent && (_.isNull(pageForm.viewModel.ParentWorkItem) || _.isUndefined(pageForm.viewModel.ParentWorkItem));\n        var statusResolved = (pageForm.viewModel.Status.Id == IncidentStatus_Resolved);\n        var showChangeStatus = (session.user.Analyst && !pageForm.newWI);\n\n        pageForm.taskTemplate = {\n            tasks: [\n                        { Task: \"analystByGroup\", Label: localization.AssignToAnalystByGroup, Access: session.user.Analyst, Configs: { propertyName: \"TierQueue\", enumId: IncidentTierQueue } },\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"acknowledge\", Label: localization.Acknowledge, Access: showAcknowledge, Configs: {} },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: IncidentStatus, resolutionCategoryEnumId: IncidentResolution } },\n                        { Task: \"convertToParent\", Label: localization.ConvertToParent, Access: showConvertToParent, Configs: { isParent: true, confirmTitle: localization.ConvertToParent, confirmMessage: localization.SureConvertToParent } },\n                        { Task: \"convertToParent\", Label: localization.RevertToParent, Access: showRevertToParent, Configs: { isParent: false, confirmTitle: localization.RevertToParent, confirmMessage: localization.SureRevertToParent } },\n                        { Task: \"linkToParent\", Label: localization.LinktoParentIncident, Access: showLinkToparent, Configs: {} },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"newStatus\", Label: localization.CloseIncident, Access: statusResolved, Configs: { confirmTitle: localization.CloseIncident, confirmMessage: localization.SureCloseIncident, newStatusName: localization.Closed, newStatusId: IncidentStatus_Closed } },\n                        { Task: \"newStatus\", Label: localization.ReactivateIncident, Access: statusResolved, Configs: { confirmTitle: localization.ReactivateIncident, confirmMessage: localization.SureReactivateIncident, newStatusName: localization.Active, newStatusId: IncidentStatus_Active, otherBoundChanges: { \"ResolutionDescription\": null, \"ResolutionCategory\": null, \"RelatesToTroubleTicket\": null } } },\n                        { Task: \"copyToNewWI\", Label: localization.CopyToNew, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n\n            ]\n        };\n    }\n\n\n\n    //Service Request Tasks\n\n    var ServiceRequestStatus = \"4e0ab24a-0b46-efe6-c7d2-5704d95824c7\";\n    var ServiceRequestStatus_New = \"a52fbc7d-0ee3-c630-f820-37eae24d6e9b\";\n    var ServiceRequestStatus_Closed = \"c7b65747-f99e-c108-1e17-3c1062138fc4\";\n    var ServiceRequestStatus_Completed = \"b026fdfd-89bd-490b-e1fd-a599c78d440f\";\n    var ServiceRequestStatus_Failed = \"21dbfcb4-05f3-fcc0-a58e-a9c48cde3b0e\";\n    var ServiceRequestStatus_Cancelled = \"674e87e4-a58e-eab0-9a05-b48881de784c\";\n    var ServiceRequestStatus_OnHold = \"05306bf5-a6b9-b5ad-326b-ba4e9724bf37\";\n    var ServiceRequestStatus_InProgress = \"59393f48-d85f-fa6d-2ebe-dcff395d7ed1\";\n    var ServiceRequestStatus_Submitted = \"72b55e17-1c7d-b34c-53ae-f61f8732e425\";\n    var ServiceRequestSupportGroup = \"23c243f6-9365-d46f-dff2-03826e24d228\";\n    var ServiceRequestImplementationResults = \"4ea37c27-9b24-615a-94da-510539371f4c\";\n\n\n\n    if (pageForm.type === 'ServiceRequest') {\n        var statusCancelled = (pageForm.viewModel.Status.Id == ServiceRequestStatus_Cancelled);\n        var statusCompleted = (pageForm.viewModel.Status.Id == ServiceRequestStatus_Completed);\n        var statusFailed = (pageForm.viewModel.Status.Id == ServiceRequestStatus_Failed);\n        var showCancelled = !pageForm.newWI && !statusCancelled && !statusCompleted && !statusFailed;\n        var showChangeStatus = (session.user.Analyst && pageForm.viewModel.Status.Id != ServiceRequestStatus_New);\n        var showCloseStatus = !pageForm.newWI && (statusCancelled || statusCompleted || statusFailed);\n        var showAcknowledge = session.user.Analyst && !statusCompleted && pageForm.viewModel.FirstResponseDate == null;\n\n        pageForm.taskTemplate = {\n            tasks: [\n                        { Task: \"analystByGroup\", Label: localization.AssignToAnalystByGroup, Access: session.user.Analyst, Configs: { propertyName: \"SupportGroup\", enumId: ServiceRequestSupportGroup } },\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"acknowledge\", Label: localization.Acknowledge, Access: showAcknowledge, Configs: {} },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: ServiceRequestStatus, resolutionCategoryEnumId: ServiceRequestImplementationResults } },\n                        { Task: \"newStatus\", Label: localization.CancelRequest, Access: showCancelled, Configs: { confirmTitle: localization.CancelRequest, confirmMessage: localization.SureCancelRequest, newStatusName: localization.Cancelled, newStatusId: ServiceRequestStatus_Cancelled } },\n                        { Task: \"newStatus\", Label: localization.CloseServiceRequest, Access: showCloseStatus, Configs: { confirmTitle: localization.CloseServiceRequest, confirmMessage: localization.SureCloseServiceRequest, newStatusName: localization.Closed, newStatusId: ServiceRequestStatus_Closed } },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"copyToNewWI\", Label: localization.CopyToNew, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n            ]\n        };\n    }\n\n\n\n    //Problem Tasks\n\n    var ProblemStatus = \"56c99a7d-6ac7-ab3c-e6c0-bbf5fe76a65c\";\n    var ProblemStatus_Active = \"720438eb-ba08-1263-0944-6791fcb48991\";\n    var ProblemStatus_Closed = \"25eac210-e091-8ae8-a713-fea2472f32ff\";\n    var ProblemStatus_Resolved = \"7ff92b06-1694-41e5-2df7-b4d5970d2d2b\";\n    //var ProblemStatus_Active_Pending = \"b6679968-e84e-96fa-1fec-8cd4ab39c3de\";\n    //var ProblemTierQueue = \"c3264527-a501-029f-6872-31300080b3bf\";\n    var ProblemResolution = \"52a0bfb0-b7e6-d16e-d06e-97ce62b4a335\";\n\n    if (pageForm.type === 'Problem') {\n        var statusNotResolvedOrClosed = (pageForm.viewModel.Status.Id !== ProblemStatus_Resolved && pageForm.viewModel.Status.Id !== ProblemStatus_Closed);\n        var statusResolved = (pageForm.viewModel.Status.Id == ProblemStatus_Resolved);\n        var showChangeStatus = (session.user.Analyst && !pageForm.newWI);\n\n        pageForm.taskTemplate = {\n            tasks: [\n                        //{ Task: \"analystByGroup\", Label: localization.AssignToAnalystByGroup, Access: session.user.Analyst, Configs: { propertyName: \"TierQueue\", enumId: ProblemTierQueue } },\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: ProblemStatus, resolutionCategoryEnumId: ProblemResolution } },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"newStatus\", Label: localization.CloseProblem, Access: statusResolved, Configs: { confirmTitle: localization.CloseProblem, confirmMessage: localization.SureCloseProblem, newStatusName: localization.Closed, newStatusId: ProblemStatus_Closed } },\n                        { Task: \"newStatus\", Label: localization.ReactivateProblem, Access: statusResolved, Configs: { confirmTitle: localization.ReactivateProblem, confirmMessage: localization.SureReactivateProblem, newStatusName: localization.Active, newStatusId: ProblemStatus_Active, otherBoundChanges: { \"ResolutionDescription\": null, \"ResolutionCategory\": null } } },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n\n\n            ]\n        };\n    }\n\n\n\n    //Release Record Tasks\n\n    var ReleaseRecordStatus = \"8909ce55-a87f-2d7e-eb64-aba670596696\";\n    var ReleaseRecordStatus_New = \"9b3c924a-3f95-b9d8-6711-42aa8271dd30\";\n    var ReleaseRecordStatus_Closed = \"221155fc-ad9f-1e40-c50e-9028ee303137\";\n    var ReleaseRecordStatus_Completed = \"c46ca677-e6c5-afe0-b51e-6aaad1f50e58\";\n    var ReleaseRecordStatus_Failed = \"f0073e33-fdda-a1ba-cd93-40b7c88afff4\";\n    var ReleaseRecordStatus_Cancelled = \"a000ff0a-2897-4184-73cb-308f533c0dca\";\n    var ReleaseRecordStatus_Editing = \"f71c86cf-afbd-debf-4464-52fe122b888b\";\n    var ReleaseRecordStatus_OnHold = \"bab68d61-1e58-96ff-9f64-33a530fdaf98\";\n    var ReleaseRecordStatus_InProgress = \"1840bfdc-3589-88a5-cea9-67536fd95a3b\";\n    //var ReleaseRecordSupportGroup = \"23c243f6-9365-d46f-dff2-03826e24d228\";\n    var ReleaseRecordImplementationResults = \"3f02cab3-0d33-804a-1b3e-7266e2728d69\";\n\n\n\n    if (pageForm.type === 'ReleaseRecord') {\n        var statusCancelled = (pageForm.viewModel.Status.Id == ReleaseRecordStatus_Cancelled);\n        var statusCompleted = (pageForm.viewModel.Status.Id == ReleaseRecordStatus_Completed);\n        var statusFailed = (pageForm.viewModel.Status.Id == ReleaseRecordStatus_Failed);\n        var showCancelled = !pageForm.newWI && !statusCancelled && !statusCompleted && !statusFailed;\n        var showChangeStatus = (session.user.Analyst && !pageForm.newWI);\n        var showCloseStatus = !pageForm.newWI && (statusCancelled || statusCompleted || statusFailed);\n        var showAcknowledge = session.user.Analyst && !statusCompleted && pageForm.viewModel.FirstResponseDate == null;\n        var statusNotResolvedOrClosed = (pageForm.viewModel.Status.Id !== ReleaseRecordStatus_Completed && pageForm.viewModel.Status.Id !== ReleaseRecordStatus_Failed && pageForm.viewModel.Status.Id !== ReleaseRecordStatus_Closed);\n        var showLinkToparent = session.user.Analyst && statusNotResolvedOrClosed && !pageForm.viewModel.IsParent;\n        var showRevertToParent = session.user.Analyst && statusNotResolvedOrClosed && pageForm.viewModel.IsParent;\n        var showConvertToParent = session.user.Analyst && statusNotResolvedOrClosed && !pageForm.viewModel.IsParent && (_.isNull(pageForm.viewModel.ParentWorkItem) || _.isUndefined(pageForm.viewModel.ParentWorkItem));\n        var showRun = (pageForm.viewModel.Status.Id == ReleaseRecordStatus_Editing || pageForm.viewModel.Status.Id == ReleaseRecordStatus_OnHold);\n\n        pageForm.taskTemplate = {\n            tasks: [\n                       //{ Task: \"analystByGroup\", Label: localization.AssignToAnalystByGroup, Access: session.user.Analyst, Configs: { propertyName: \"SupportGroup\", enumId: ReleaseRecordSupportGroup } },\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: ReleaseRecordStatus, resolutionCategoryEnumId: ReleaseRecordImplementationResults } },\n                        { Task: \"convertToParent\", Label: localization.ConvertToParent, Access: showConvertToParent, Configs: { isParent: true, confirmTitle: localization.ConvertToParent, confirmMessage: localization.SureConvertToParentRecord } },\n                        { Task: \"convertToParent\", Label: localization.RevertToParent, Access: showRevertToParent, Configs: { isParent: false, confirmTitle: localization.RevertToParent, confirmMessage: localization.SureRevertToParentRecord } },\n                        { Task: \"linkToParent\", Label: localization.LinktoParentRecord, Access: showLinkToparent, Configs: {} },\n                        { Task: \"newStatus\", Label: localization.Run, Access: showRun, Configs: { newStatusName: localization.Run, newStatusId: ReleaseRecordStatus_InProgress, commentMessage: localization.RunComentMessage } },\n                        { Task: \"newStatus\", Label: localization.CancelRequest, Access: showCancelled, Configs: { confirmTitle: localization.CancelRequest, confirmMessage: localization.SureCancelRequest, newStatusName: localization.Cancelled, newStatusId: ReleaseRecordStatus_Cancelled } },\n                        { Task: \"newStatus\", Label: localization.CloseReleaseRecord, Access: showCloseStatus, Configs: { confirmTitle: localization.CloseReleaseRecord, confirmMessage: localization.SureCloseReleaseRecord, newStatusName: localization.Closed, newStatusId: ReleaseRecordStatus_Closed } },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n            ]\n        };\n\n    }\n\n\n    //add custom tasks\n    var tasks = app.custom.formTasks.get(pageForm.type);\n    if (_.isArray(tasks)) {\n        $.each(tasks, function (i, task) {\n            pageForm.taskTemplate.tasks.push({ Task: \"custom\", Type: pageForm.type, Label: task.label, Access: true, Configs: { func: task.func } })\n        });\n    }\n\n\n    var init = function () {\n        var isClosed = false;\n        // select template\n        setTemplateJSONFromSessionAdJSON();\n\n        //check if form is disabled\n        if (!pageForm.newWI) {\n            //if status is closed then disable the form\n            if (pageForm.viewModel.Status.Id === ServiceRequestStatus_Closed || // \"c7b65747-f99e-c108-1e17-3c1062138fc4\" ||  // SR Closed\n                pageForm.viewModel.Status.Id === ChangeStatus_Closed ||// \"f228d50b-2b5a-010f-b1a4-5c7d95703a9b\" || // CR Closed\n                pageForm.viewModel.Status.Id === IncidentStatus_Closed || // \"bd0ae7c4-3315-2eb3-7933-82dfc482dbaf\") { // Incident Closed\n                pageForm.viewModel.Status.Id === ProblemStatus_Closed ||\n                pageForm.viewModel.Status.Id === ReleaseRecordStatus_Closed) {\n                isClosed = true;\n                pageForm.viewModel.isDisabled = true;\n            }\n        }\n\n        var alertContainer = $('#alertMessagesContainer');\n        alertContainer.addClass(\"sticky-header\");\n        formContainer.addClass(\"sticky-header\");\n        taskContainer.addClass(\"sticky-header\");\n        headerContainer.addClass(\"sticky-header\");\n        \n        if (!app.isMobile()) {\n\n            //add dynamic containers to main container\n            //mainContainer.append(headerContainer, formContainer);\n            mainContainer.append(formContainer);\r\n\n            //add task container before main\n            mainContainer.before(taskContainer);\n\n        } else {\n            mainContainer.append(formContainer);\n            mainContainer.after(taskContainer);\n        }\n\n        if (!isClosed) {\n            //build out tasks\n            taskContainer.append(\"<h2>\" + localization.Tasks + \"</h2>\");\n            taskBuilder.build(pageForm, function (view) {\n                taskContainer.append(view);\n            });\n\n        }\n\n        //build and add header container\n        headerBuilder.build(pageForm, function (view) {\n            headerContainer.append(view);\n        });\n\n        //build and add form from json definition\n        formBuilder.build(pageForm, function (html) {\n            formContainer.append(html);\n            app.controls.apply(formContainer, { localize: true, vm: dataVM, bind: true });\n            formContainer.show();\n\n            // make sure we have the drawer before we try to add buttons buttons\n            //if (!_.isUndefined(drawermenu)) { //stupid underscore need to move to lo-dash\n            if (typeof (drawermenu) != 'undefined') {\n                createButtons();\n            } else {\n                app.events.subscribe(\"drawerCreated\", function () {\n                    createButtons();\n                });\n            }\n\n            setPriorityByMatrix();\n            addRecordAssignedLog();\n            setScheduleDuration();\n            app.lib.handleMessages();\n\n            //bind change event no that form is built\n            dataVM.bind(\"change\", function (e) {\n                onVmChange(e);\n            });\n\n            // call bound on ready functions\n            _.each(readyArray, function (func, index) {\n                if (_.isFunction(func)) {\n                    func();\n                }\n            });\n\n            // prevent 'enter' key from submitting form on older browsers.\n            formContainer.on('keypress', function (e) {\n                app.lib.stopEnterKeySubmitting(e);\n            });\n\n            if (!app.isMobileDevice()) {\n                var $taskPanel = $('.task-panel').first();\n                $taskPanel.affix({ offset: { top: $taskPanel[0].getBoundingClientRect().top - 84 } });\n                kendo.data.binders.yScrollOnResize($taskPanel[0], { yScrollOnResize: { path: { top: 'auto', bottom: 50 } } }, {});\n            }\n            //manage dirty\n            formHelper.manageDirty(dataVM);\n        });\n\n        //remove the mask\n        app.lib.mask.remove();\n    }\n\n    // Template Decider\n    // Chooses template from JSON by session and work item type\n    var setTemplateJSONFromSessionAdJSON = function () {\n        var type = formType;\n        var defaultName = \"Default\";\n        var json = pageForm.formTemplate;\n        if (!json.Default) {\n            var msg = \"A '\" + defaultName + \"' template is required.\";\n            if (type) {\n                msg += \" \\r\\r When creating a JSON template for '\" + type + \"' you must add a template with the key of '\" + defaultName + \"'. This is used for fallback if a specific template is not found.\";\n            }\n            alert(msg);\n        }\n        // using a matcher in case something changes on either side\n        // this will be easier and faster fix\n        // { \"formType from work item cshtml\": \"prop name from session.user that holds template\" }\n        var typeToSession = {\n            \"Incident\": \"IncidentForm\",\n            \"ChangeRequest\": \"ChangeRequestForm\",\n            \"ServiceRequest\": \"ServiceRequestForm\",\n            \"Problem\": \"ProblemForm\",\n            \"ReleaseRecord\": \"ReleaseRecordForm\"\n        }\n        var getTemplateNameFromSession = function () {\n            if (type && typeToSession[type] && session && session.user &&\n                session.user[typeToSession[type]] && json[session.user[typeToSession[type]]]) {\n                return session.user[typeToSession[type]];\n            }\n            return defaultName;\n        }\n        var templateName = getTemplateNameFromSession();\n        pageForm.formTemplate = json[templateName];\n\n\n    }\n\n    // Form Buttons\n    var createButtons = function () {\n        // Save Failure\n        //TODO: this could possibly end up being a switch statement to check what the error source is\n        var saveFailure = function (exceptionMessage) {\n            //console.log('save failure');\n            if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\n                app.lib.message.add(exceptionMessage, \"danger\");\n            } else {\n                //fallback to generic message\n                app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\n            }\n            app.lib.message.show();\n            //take use to the error message\n            window.scrollTo(0, 0);\n        }\n\n        // Save Button\n        drawermenu.addButton(localization.Save, \"fa fa-check\", function () {\n\n            save(function (data) {\n                //console.log('save form type check');\n                //this message needs to be tailored to the different types of WIs\n                var message = \"\";\n                var link = \"\";\n                switch (pageForm.type) {\n                    case \"ChangeRequest\":\n                        message = localization.ChangeRequestSavedMessage;\n                        link = \"/ChangeRequest/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    case \"ServiceRequest\":\n                        message = localization.ServiceRequestSavedMessage;\n                        link = \"/ServiceRequest/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    case \"Incident\":\n                        message = localization.IncidentSavedMessage;\n                        link = \"/Incident/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    case \"Problem\":\n                        message = localization.ProblemSavedMessage;\n                        link = \"/Problem/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    case \"ReleaseRecord\":\n                        message = localization.ReleaseRecordSavedMessage;\n                        link = \"/ReleaseRecord/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    default:\n                        message = localization.WorkItemSavedMessage;\n                        break;\n\n                }\n\n                app.lib.message.add(message + \"&nbsp;&nbsp;<a href='\" + link + \"'><strong>\" + dataVM.Id + \"</strong></a> \", \"success\");\n                //forward the user along\n                app.lib.gotoFormReturnUrl();\n                return;\n\n            }, saveFailure);\n        });\n        // Apply Button\n        drawermenu.addButton(localization.Apply, \"fa fa-pencil\", function () {\n\n            save(function (data) {\n                app.lib.message.add(localization.ChangesApplied, \"success\");\n                //forcing the page to reload allows use to make sure change in status and form disable is handled\n                //we should only do this if status was changed to a value that requires the form tb be disabled\n                switch (pageForm.type) {\n                    case \"ChangeRequest\":\n                        location.href = \"/ChangeRequest/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    case \"ServiceRequest\":\n                        location.href = \"/ServiceRequest/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    case \"Incident\":\n                        location.href = \"/Incident/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    case \"Problem\":\n                        location.href = \"/Problem/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    case \"ReleaseRecord\":\n                        location.href = \"/ReleaseRecord/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    default:\n                        location.href = \"/WorkItems/MyItems/\";\n                        break;\n                }\n\n            }, saveFailure);\n        });\n        // Cancel Button\n        drawermenu.addButton(localization.Cancel, \"fa fa-times\", function () {\n            if (dataVM.get(\"isDirty\")) {\n                $.when(kendo.ui.ExtOkCancelDialog.show({\n                    title: localization.Warning,\n                    message: localization.UnsavedDataMessage,\n                    icon: \"fa fa-exclamation\"\n                })\n                ).done(function (response) {\n                    if (response.button === \"ok\") {\n                        //make the form clean so we don't trigger onbeforeunload\n                        dataVM.set(\"isDirty\", false);\n\n                        app.lib.gotoFormReturnUrl();\n                        return;\n                    }\n                });\n            } else {\n                app.lib.gotoFormReturnUrl();\n                return;\n            }\n        });\n\n\n        // mobile task Button\n        formHelper.mobileDrawerTaskButton(taskContainer);\n\n\n    }\n\n    var sendMentionsMail = function (emailData) {\n        $.ajax({\n            url: \"/EmailNotification/SendMentionsNotification\",\n            type: \"POST\",\n            data: emailData,\n            success: function () {\n                kendo.ui.progress($(\".k-window\"), false);\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                console.log(jqXHR, textStatus, errorThrown);\n            }\n        });\n    }\n\n    var processTemplate = function (actionLog, workItem, givenTemplate) {\n        //replace tokens in action log notification template\n        var template = $('<div/>').html(givenTemplate).text();\n\n        var tokens = template.match(/{{([^}]+)}}/g);\n        _.each(tokens, function (key) {\n            var token = key.replace('{{', '').replace('}}', '').replace(/\\s/g, '');\n            var type = token.substring(token.lastIndexOf(':') + 1, token.length)\n            token = token.substring(0, token.lastIndexOf(':'));\n            var value = \"\";\n            if (type === \"ActionLog\") \n                value = actionLog[token];\n\n            if (type === \"WorkItem\") {\n                if (token === \"URL\") {\n                    value = window.location.pathname;\n                } else\n                    value = workItem[token];\n            }\n            if (app.lib.isDateValue(value))\n                value = kendo.toString(kendo.parseDate(new Date(value)), \"g\");\n\n            template = template.replace(key, value);\n        });\n\n        if (!session.sendNotificationAsHTML)\n            template = app.lib.htmlEntities(template);\n\n        return template;\n    }\n\n    // Ajax Save Method (to be moved)\n    var save = function (success, failure) {\n        //ensure all values inputted have been bound to VM\n        //not sure this is even needed and it causes many problems\n        //need to delete after regression -JK\n        //$(\".page_content *\").blur();\n\n\n        app.lib.mask.apply();\n        var valid = true;\n        var required = true;\n        //todo separate function for CR and RR\n        //if separate function page is slows\n\n        if (pageForm.type === 'ReleaseRecord') {\n            if (!_.isNull(dataVM.ScheduledStartDate) || !_.isNull(dataVM.ScheduledEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ScheduledStartDate, dataVM.ScheduledEndDate, localization.ScheduledStartDateExceedScheduledEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n            if (!_.isNull(dataVM.ActualStartDate) || !_.isNull(dataVM.ActualEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ActualStartDate, dataVM.ActualEndDate, localization.ActualStartDateExceedActualEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n            if (!_.isNull(dataVM.ScheduledDowntimeStartDate) || !_.isNull(dataVM.ScheduledDowntimeEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ScheduledDowntimeStartDate, dataVM.ScheduledDowntimeEndDate, localization.ScheduledDowntimeStartDateExceedScheduledDowntimeEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n            if (!_.isNull(dataVM.ActualDowntimeStartDate) || !_.isNull(dataVM.ActualDowntimeEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ActualDowntimeStartDate, dataVM.ActualDowntimeEndDate, localization.ActualDowntimeStartDateExceedActualDowntimeEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n        }\n        if (pageForm.type === 'ChangeRequest') {\n            if (!_.isNull(dataVM.ScheduledStartDate) || !_.isNull(dataVM.ScheduledEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ScheduledStartDate, dataVM.ScheduledEndDate, localization.ScheduledStartDateExceedScheduledEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n\n        }\n\n        var checkActivityDates = function (dataVM) {\n            if (dataVM.Activity && dataVM.Activity.length > 0) {\n                _.each(dataVM.Activity, function (activity) {\n                    if (activity.ClassName == \"System.WorkItem.Activity.ManualActivity\") {\n                        //check actual end dates\n                        if (!_.isNull(activity.ActualStartDate) || !_.isNull(activity.ActualEndDate)) {\n                            if (!app.lib.CheckedManualActivityStartAndEndDate(activity.ActualStartDate, activity.ActualEndDate, localization.MaActualStartDateExceedActualEndDate)) {\n                                app.lib.mask.remove();\n                                valid = false;\n                                return;\n                            }\n                        }\n                        //check scheduled end dates \n                        if (!_.isNull(activity.ScheduledStartDate) || !_.isNull(activity.ScheduledEndDate)) {\n                            if (!app.lib.CheckedManualActivityStartAndEndDate(activity.ScheduledStartDate, activity.ScheduledEndDate, localization.MaScheduledStartDateExceedScheduledEndDate)) {\n                                app.lib.mask.remove();\n                                valid = false;\n                                return;\n                            }\n                        }\n                    }\n                    if (activity.ClassName == \"System.WorkItem.Activity.ParallelActivity\" || activity.ClassName == \"System.WorkItem.Activity.SequentialActivity\") {\n                        if (valid) {\n                            checkActivityDates(activity);\n                        }\n                    }\n                });\n            }\n            return;\n        }\n\n        //check for MA dates\n        if (dataVM.Activity && dataVM.Activity.length > 0) {\n            checkActivityDates(dataVM);\n        }\n\n        //checks all required fields\n        formContainer.find(\".form-group\").removeClass(\"has-error\");\n        formContainer.find(\"[required]\").each(function () {\n            var jqEle = $(this);\n\n            //This code is to check if enum is required or not for IE9.\n            var property = !_.isUndefined(jqEle.attr(\"data-control-bind\")) ? jqEle.attr(\"data-control-bind\") : jqEle[0].name;\n            if (_.isUndefined(property) || property != \"\") {\n                if (!_.isUndefined(jqEle[0].kendoBindingTarget) && !_.isUndefined(jqEle[0].kendoBindingTarget.options)) {\n                    property = jqEle[0].kendoBindingTarget.options.propertyName;\n                }\n            }\n            if (!_.isUndefined(property)) {\n                var isEnum = _.isObject(pageForm.viewModel[property]) && !_.isUndefined(pageForm.viewModel[property].Id);\n                if ((_.isNull(pageForm.viewModel[property]) || (pageForm.viewModel[property] === \"\")) ||\n                    (_.isObject(pageForm.viewModel[property]) && isEnum && (_.isNull(pageForm.viewModel[property].Id) || pageForm.viewModel[property].Id === \"\")) ||\n                    (((_.isObject(pageForm.viewModel[property]) && !isEnum && (_.isUndefined(pageForm.viewModel[property].BaseId) || _.isNull(pageForm.viewModel[property].BaseId)))))) {\n                    valid = false;\n                    jqEle.parents(\".form-group\").addClass(\"has-error\");\n                }\n            }\n            //END This code is to check if enum is required or not for IE9.\n\n            var nodeName = jqEle[0].nodeName.toLowerCase();\n            if (nodeName != \"input\" && nodeName != \"textarea\") {\n                jqEle = jqEle.find(\"input\");\n            }\n            if (jqEle.val() == \"\") {\n                valid = false;\n                jqEle.parents(\".form-group\").addClass(\"has-error\");\n            }\n\n        });\n\n        //check for valid enums\n        formContainer.find(\".input-error\").each(function () {\n            valid = false;\n        });\n\n        formContainer.find(\"[data-invalid]\").each(function () {\n            valid = false;\n            var jqEle = $(this);\n            jqEle.parents(\".form-group\").addClass(\"has-error\");\n\n            jqEle.css({\n                \"background-color\": \"#FBE3E4\"\n            });\n\n        });\n        if (!required) {\n            failure(localization.RequiredFieldsErrorMessage);\n            app.lib.mask.remove();\n            return;\n        }\n        //end check of req fields\n\n\n        if (!valid) {\n            failure(localization.PleaseCorrectErrors);\n            app.lib.mask.remove();\n            return;\n        }\n        //end check for valid enums\n\n\n        //check for un added action log commnets\n        if (dataVM.get('commentDirty')) {\n            app.lib.message.add(\"<strong>\" + localization.UnAddedActionLogComment + \"</strong>\", \"warning\");\n\n            //only going to warn you once\n            dataVM.set('commentDirty', false);\n\n            app.lib.message.show();\n            //take use to the error message\n            window.scrollTo(0, 0);\n\n            app.lib.mask.remove();\n            return;\n        }\n        //end check for un added action log commnets\n\n        var current = dataVM.toJSON();\n        //This will optimized the passing of mulitple object to only send the deleted or/and added items\n        if (pageForm.newWI == false) {\n            app.lib.optimizeFormMultiObject.BeforeSave(current, pageForm.jsonRaw);\n        }\n\n        var mailBox = [];\n\n        //check if there are mentioned users, send mail to users\n        if (current.AppliesToTroubleTicket) {\n            if (current.AppliesToTroubleTicket.length > 0) {\n                var logs = current.AppliesToTroubleTicket || [];\n                for (var i in logs) {\n                    if (logs[i].MentionedUsers) {\n                        if (logs[i].MentionedUsers.length > 0 && !session.disableActionLogNotification) {\n                            var emailData = {\n                                To: logs[i].MentionedUsers.join(\";\"),\n                                Cc: '',\n                                Subject: (session.actionLogNotificationTitle) ? processTemplate(logs[i], current, session.actionLogNotificationTitle) : (current.Id.length != 0) ? '[' + current.Id + '] ' + current.Title : current.Title,\n                                Message: (session.actionLogNotificationTemplate) ? encodeURIComponent(processTemplate(logs[i], current, session.actionLogNotificationTemplate)) : logs[i].DescriptionHTML,\n                                AttachedFileName: '',\n                                WorkItemId: current.BaseId\n                            };\n                            mailBox.push(emailData);\n                        }\n                        delete current.AppliesToTroubleTicket[i].MentionedUsers;\n                    }\n                    delete current.AppliesToTroubleTicket[i].DescriptionHTML;\n                }\n            }\n        } else if (current.AppliesToWorkItem) {\n            if (current.AppliesToWorkItem.length > 0) {\n                var logs = current.AppliesToWorkItem || [];\n                for (var i in logs) {\n                    if (logs[i].MentionedUsers) {\n                        if (logs[i].MentionedUsers.length > 0 && !session.disableActionLogNotification) {\n                            var emailData = {\n                                To: logs[i].MentionedUsers.join(\";\"),\n                                Cc: '',\n                                Subject: (session.actionLogNotificationTitle) ? processTemplate(logs[i], current, session.actionLogNotificationTitle): (current.Id.length != 0) ? '[' +current.Id + '] ' + current.Title: current.Title,\n                                Message: (session.actionLogNotificationTemplate) ? encodeURIComponent(processTemplate(logs[i], current, session.actionLogNotificationTemplate)) : logs[i].DescriptionHTML,\n                                WorkItemId: current.BaseId\n                            };\n                            mailBox.push(emailData);\n                        }\n                        delete current.AppliesToWorkItem[i].MentionedUsers;\n                    }\n                    delete current.AppliesToWorkItem[i].DescriptionHTML;\n                }\n            }\n        }\n\n        var postData = encodeURIComponent(JSON.stringify({\n            isDirty: true,\n            current: current,\n            original: pageForm.jsonRaw\n        }));\n        $.ajax({\n            type: 'POST',\n            dataType: 'text',\n            url: saveUrl,\n            data: \"formJson=\" + postData,\n            success: function (data, status, xhr) {\n\n                //make the form clean so we don't trigger onbeforeunload\n                dataVM.set(\"isDirty\", false);\n\n                _.each(mailBox,\n                    function(item) {\n                        sendMentionsMail(item);\n                    });\n\n                if (data.search('loginForm') < 0) { // Logged out check                   \n                    success(data);\n                } else {\n                    //session expired\n                    window.location = \"/Login/Login?ReturnUrl=\" + window.location.pathname;\n                }\n            },\n            error: function (xhr, ajaxOptions, thrownError) {\n                //do we have a data conflict\n                if (xhr.status == 409) {\n\n                    $.when(kendo.ui.ExtYesNoDialog.show({\n                        title: localization.DataConflict,\n                        message: localization.DataConflictError + \"<br/><br/><small>(\" + localization.DataConflictDescription + \")</small>\",\n                        icon: \"fa fa-exchange text-danger\",\n                        width: \"500px\",\n                        height: \"175px\"\n                    })\n                    ).done(function (response) {\n                        if (response.button === \"yes\") {\n                            //open in new tab, may not work this way in all browsers\n                            window.open(window.location.pathname);\n                        } else {\n                            //refresh page\n                            location.href = window.location.pathname;\n                        }\n                    });\n\n                } else if (xhr.status == 503) { //SDK unavailable\n                    var jsonRsp = xhr.responseText;\n                    app.lib.log(jsonRsp);\n                    var msgResponse = JSON.parse(jsonRsp);\n                    //determine error Message\n                    var errorMsg = localization.RequestFailed;\n                    if (msgResponse.exception && msgResponse.exception.length > 0) {\n                        errorMsg = msgResponse.exception;\n                    }\n                    //alert the user\n                    kendo.ui.ExtAlertDialog.show({\n                        title: localization.Failed,\n                        message: errorMsg,\n                        icon: \"fa fa-times-circle text-danger\"\n                    });\n                } else if (xhr.status == 403) { //user does not have access\n                    var jsonRsp = xhr.responseText;\n                    var errorMsg = \"\";\n                    try {\r\n                        app.lib.log(jsonRsp);\n                        var msgResponse = JSON.parse(jsonRsp);\n                        //determine error Message\n                        errorMsg = localization.RequestFailed;\n                        if (msgResponse.exception && msgResponse.exception.length > 0) {\r\n                            errorMsg = msgResponse.exception;\r\n                        }\r\n                    }\n                    catch (ex) {\r\n                        errorMsg = localization.RequestFailed;\r\n                    }\n\n                    //alert the user\n                    kendo.ui.ExtAlertDialog.show({\n                        title: localization.Failed,\n                        message: errorMsg,\n                        icon: \"fa fa-times-circle text-danger\"\n                    });\n\n\n                } else {\n\n                    failure();\n                    console && app.lib.log(localization.RequestFailed);\n                    app.lib.log(thrownError);\n\n                    var jsonRsp = xhr.responseText;\n                    app.lib.log(jsonRsp);\n\n                    var msgResponse = JSON.parse(jsonRsp);\n                    //determine error Message\n                    var errorMsg = localization.RequestFailed;\n                    if (msgResponse.exception && msgResponse.exception.length > 0) {\n                        errorMsg = msgResponse.exception;\n                    }\n\n                    kendo.ui.ExtAlertDialog.show({\n                        title: localization.ErrorDescription,\n                        message: errorMsg,\n                        icon: \"fa fa-exclamation\"\n                    });\n                }\n            },\n            processData: false,\n            async: true\n        });\n    }\n    //make pageForm Happy\n    pageForm.save = save;\n\n    // Priority Matrix logic for Incident\n    var setPriorityByMatrix = function () {\n        if (!priorityJSON) {\n            return;\n        }\n\n        var priority = !_.isNull(pageForm.viewModel.Priority) ? pageForm.viewModel.Priority : 0;\n        var priorityJSONU = priorityJSON.Matrix.U;\n        for (var i in priorityJSONU) {\n            var obj = priorityJSONU[i];\n            if (obj.Id == pageForm.viewModel.Urgency.Id) {\n                for (var x in obj.I) {\n                    var obj2 = obj.I[x];\n                    if (obj2.Id == pageForm.viewModel.Impact.Id) {\n                        priority = obj2.P;\n                        break;\n                    } else {\n                        priority = 9;\n                    }\n                }\n            }\n        }\n\n\n        if (priority != pageForm.viewModel.Priority) {\n            pageForm.viewModel.set(\"Priority\", priority);\n        }\n    }\n\n    //Set First Assigned Date(Incident/Service Request)\n    var setFirstAssignedDateValue = function () {\n        if ((session.user.Analyst == 1) && (pageForm.type === \"Incident\" || pageForm.type === \"ServiceRequest\")) {\n            if (_.isUndefined(pageForm.viewModel.AssignedWorkItem))\n                return;\n\n            var bHasCurrentAssignee = (pageForm.viewModel.AssignedWorkItem.BaseId != null) ? true : false;\n            var assignedDateEle = $(\"input[name='FirstAssignedDate']\");\n\n            if (pageForm.viewModel.FirstAssignedDate == null && bHasNoInitalAssignee && bHasCurrentAssignee) {\n                var date = new Date();\n                pageForm.viewModel.FirstAssignedDate = date.toISOString();\n\n                if (assignedDateEle.attr('data-control') == 'datePicker') {\n                    assignedDateEle.val(kendo.toString(new Date(), \"d\"));\n                } else if (assignedDateEle.attr('data-control') == 'dateTimePicker') {\n                    assignedDateEle.val(kendo.toString(new Date(), \"g\"));\n                }\n\n            } else if (bHasNoInitalAssignee && !bHasCurrentAssignee) {\n\n                //clear out first assigned date if first assignee is removed(prior to saving)\n                pageForm.viewModel.FirstAssignedDate = null;\n\n                if (assignedDateEle.attr('data-control') == 'datePicker') {\n                    assignedDateEle.val(\"\");\n                } else if (assignedDateEle.attr('data-control') == 'dateTimePicker') {\n                    assignedDateEle.val(\"\");\n                }\n            }\n\n\n\n\n\n        }\n    }\n\n    //add record assigned log everytime assignee is changed\n    var isBounded = false;\n    var lastAddedAssignee = null;\n    var addRecordAssignedLog = function () {\n\n        if ((session.user.Analyst == 1) && (pageForm.type === \"Incident\" || pageForm.type === \"ServiceRequest\" || pageForm.type === \"Problem\")) {\n            if (_.isUndefined(pageForm.viewModel.AssignedWorkItem))\n                return;\n\n            if (!isBounded) {\n                pageForm.viewModel.AssignedWorkItem.bind(\"change\", function (obj) {\n                    addRecordAssignedLog();\n                });\n                isBounded = true;\n            }\n\n            //skip on edit form page load\n            if (!pageForm.newWI && _.isNull(lastAddedAssignee)) {\n                lastAddedAssignee = !_.isNull(pageForm.viewModel.AssignedWorkItem.DisplayName) ? pageForm.viewModel.AssignedWorkItem.DisplayName : \"\";\n                return;\n            }\n\n            if ((!_.isNull(pageForm.viewModel.AssignedWorkItem.DisplayName) && !_.isUndefined(pageForm.viewModel.AssignedWorkItem.DisplayName))\n                && (pageForm.viewModel.AssignedWorkItem.DisplayName != lastAddedAssignee)) {\n                var actionLogType = app.controls.getWorkItemLogType(pageForm.viewModel);\n\n                if (actionLogType) {\n                    pageForm.viewModel[actionLogType]\n                        .unshift(new app.dataModels[actionLogType].recordAssigned(pageForm.viewModel.AssignedWorkItem.DisplayName));\n                }\n\n                lastAddedAssignee = pageForm.viewModel.AssignedWorkItem.DisplayName;\n            }\n        }\n    }\n\n    //set schedule duration for release record\n    var isScheduleBounded = false;\n    var setScheduleDuration = function () {\n\n        if ((pageForm.type !== \"ReleaseRecord\")) { return; }\n\n        if (!isScheduleBounded) {\n            pageForm.viewModel.bind(\"change\", function (obj) {\n                isScheduleBounded = true;\n                setScheduleDuration();\n            });\n        }\n\n        var scheduledDuration = calculateTimeDuration(pageForm.viewModel[\"ScheduledStartDate\"], pageForm.viewModel[\"ScheduledEndDate\"]);\n        var actualDuration = calculateTimeDuration(pageForm.viewModel[\"ActualStartDate\"], pageForm.viewModel[\"ActualEndDate\"]);\n        var scheduledDowntimeDuration = calculateTimeDuration(pageForm.viewModel[\"ScheduledDowntimeStartDate\"], pageForm.viewModel[\"ScheduledDowntimeEndDate\"]);\n        var actualDowntimeDuration = calculateTimeDuration(pageForm.viewModel[\"ActualDowntimeStartDate\"], pageForm.viewModel[\"ActualDowntimeEndDate\"]);\n\n        pageForm.viewModel.set(\"ScheduleDuration\", scheduledDuration);\n        pageForm.viewModel.set(\"ActualDuration\", actualDuration);\n        pageForm.viewModel.set(\"ScheduledDowntimeDuration\", scheduledDowntimeDuration);\n        pageForm.viewModel.set(\"ActualDowntimeDuration\", actualDowntimeDuration);\n\n    }\n    var calculateTimeDuration = function (startDate, endDate) {\n        if (_.isNull(startDate) || _.isNull(endDate)) { return \"\"; }\n        var dtStart = new Date(startDate);\n        var dtEnd = new Date(endDate);\n\n        var dayDiff = Math.round((dtEnd - dtStart) / 1000 / 60 / 60 / 24);\n        var hourDiff = Math.round(dtEnd.getHours() - dtStart.getHours());\n        var minDiff = Math.round(dtEnd.getMinutes() - dtStart.getMinutes());\n\n        if (hourDiff < 0) {\n            dayDiff = dayDiff - 1;\n            hourDiff = 24 + hourDiff;\n        }\n        if (minDiff < 0) {\n            hourDiff = hourDiff - 1;\n            minDiff = 60 + minDiff;\n        }\n\n        return localization.ScheduleDurationText.replace(\"{0}\", dayDiff).replace(\"{1}\", hourDiff).replace(\"{2}\", minDiff);\n    }\n\n    //set a global vm change function\n    var onVmChange = function (e) {\n        //console.log(e);\n        //console.log(e.field);\n\n        //This will optimized the passing of mulitple object to only send the deleted or/and added items\n        app.lib.optimizeFormMultiObject.OnVmChange(e);\n\n        //if we have a custom function bound to this change then fire it \n        if (_.isFunction(changesArray[e.field])) {\n            changesArray[e.field](e);\n        }\n\n        if (e.field === 'Urgency' || e.field === 'Impact') {\n            //update priority for IRs, which is calculated based on Urgency and Impact vals\n            setPriorityByMatrix();\n        }\n\n        if (e.field === 'Title') {\n            //update displayname every time title changes\n            var displayName = !_.isNull(pageForm.viewModel.Title) ? pageForm.viewModel.Id + \" - \" + pageForm.viewModel.Title : pageForm.viewModel.Id;\n            pageForm.viewModel.set(\"DisplayName\", displayName);\n        }\n\n        if (e.field === 'AssignedWorkItem.BaseId') {\n            setFirstAssignedDateValue();\n        }\n    }\n    //make the things global - grrrr\n    pageForm.onVmChange = onVmChange;\n\n    init();\n\n});\ndefine(\"forms/wiMain\", function(){});\n\n"]}