{"version":3,"sources":["require/text.js","forms/tasks/anchor/view.html!text","forms/tasks/anchor/controller.js","forms/tasks/analystByGroup/view.html!text","forms/fields/enum/view.html!text","forms/fields/enum/controller.js","forms/tasks/drawerTask/view.html!text","forms/tasks/analystByGroup/controller.js","forms/popups/notificationPopup/view.html!text","forms/tasks/assignToMe/controller.js","forms/tasks/changeStatus/view.html!text","forms/tasks/changeStatus/view.drawer.html!text","forms/fields/longstring/view.html!text","forms/fields/longstring/controller.js","forms/fields/boolean/view.html!text","forms/fields/boolean/controller.js","forms/tasks/changeStatus/controller.js","forms/tasks/amChangeStatus/controller.js","forms/tasks/acknowledge/view.html!text","forms/tasks/acknowledge/controller.js","forms/tasks/convertToParent/controller.js","forms/tasks/linkToParent/view.html!text","forms/header/relationships/view.html!text","forms/tasks/linkToParent/controller.js","forms/tasks/newStatus/view.html!text","forms/tasks/newStatus/controller.js","forms/tasks/sendEmail/mobile_view.html!text","forms/tasks/sendEmail/view.html!text","forms/popups/userPickerPopup/view.html!text","forms/popups/userPickerPopup/controller.js","forms/flyout/fileAttachmentsFlyout/mobile_view.html!text","forms/flyout/fileAttachmentsFlyout/view.html!text","forms/flyout/fileAttachmentsFlyout/controller.js","forms/tasks/sendEmail/controller.js","forms/tasks/custom/controller.js","forms/tasks/spacer/view.html!text","forms/tasks/spacer/controller.js","forms/tasks/associateItem/controller.js","forms/tasks/setDate/view.html!text","forms/fields/date/view.html!text","forms/fields/date/controller.js","forms/fields/string/view.html!text","forms/fields/string/controller.js","forms/tasks/setDate/controller.js","forms/tasks/updateAssetManagement/controller.js","forms/tasks/updateSupersededHardware/controller.js","forms/tasks/copyLicenseAssignments/view.html!text","forms/tasks/copyLicenseAssignments/controller.js","../CustomSpace/customtasks.tmpl.html!text","forms/tasks/copyToNewWI/controller.js","forms/tasks/increaseAvailableCount/view.html!text","forms/fields/longString/controller.js","forms/fields/numeric/view.html!text","forms/fields/numeric/controller.js","forms/tasks/increaseAvailableCount/controller.js","forms/tasks/decreaseAvailableCount/view.html!text","forms/tasks/decreaseAvailableCount/controller.js","forms/tasks/print/controller.js","forms/tasks/addMeToWatchList/controller.js","forms/taskBuilder.js","forms/header/status/view.html!text","forms/header/status/controller.js","forms/header/relationships/controller.js","forms/header/slo/view.html!text","forms/header/slo/controller.js","forms/header/spacer/view.html!text","forms/header/spacer/controller.js","forms/header/title/view.html!text","forms/header/title/controller.js","forms/header/approval/view.html!text","forms/header/approval/controller.js","forms/headerBuilder.js","forms/structure/formPanel/view.html!text","forms/structure/formPanel/controller.js","forms/structure/formPanelFull/view.html!text","forms/structure/formPanelFull/controller.js","forms/structure/customFieldGroup/view.html!text","forms/structure/customFieldGroup/controller.js","forms/structure/customFieldGroupRow/view.html!text","forms/structure/customFieldGroupRow/controller.js","forms/structure/columnField/view.html!text","forms/structure/columnField/controller.js","forms/structure/tab/view.html!text","forms/structure/tab/controller.js","forms/structure/tabPane/view.html!text","forms/structure/tabPane/controller.js","forms/structure/tabNavigation/view.html!text","forms/structure/tabNavigation/mobile.html!text","forms/structure/tabNavigation/controller.js","forms/structure/tabData/view.html!text","forms/structure/tabData/mobile.html!text","forms/structure/tabData/controller.js","forms/predefined/actionLog/view.html!text","forms/predefined/actionLog/controller.js","forms/predefined/fileAttachments/view.html!text","forms/predefined/fileAttachments/controller.js","forms/predefined/affectedItems/view.html!text","forms/popups/multipleObjectPickerPopup/view.html!text","forms/popups/multipleObjectPickerPopup/controller.js","forms/predefined/affectedItems/controller.js","forms/predefined/relatedItems/view.html!text","forms/predefined/relatedItems/controller.js","forms/predefined/childWorkItems/view.html!text","forms/predefined/childWorkItems/controller.js","forms/predefined/userInput/view.html!text","forms/predefined/userInput/controller.js","forms/predefined/activities/view.html!text","forms/predefined/activities/controller.js","forms/predefined/multipleObjectPicker/view.html!text","forms/predefined/multipleObjectPicker/controller.js","../CustomSpace/Scripts/forms/predefined/history/view.html!text","../CustomSpace/Scripts/forms/predefined/history/controller.js","forms/predefined/billableTime/view.html!text","forms/predefined/billableTime/controller.js","forms/predefined/knowledgeArticle/view.html!text","forms/predefined/knowledgeArticle/popup.html!text","forms/predefined/knowledgeArticle/controller.js","forms/predefined/fileAttachmentsDragDrop/view.html!text","forms/predefined/fileAttachmentsDragDrop/controller.js","forms/fields/display/view.html!text","forms/fields/display/controller.js","forms/fields/spacer/view.html!text","forms/fields/spacer/controller.js","forms/fields/int/controller.js","forms/fields/decimal/controller.js","forms/fields/double/controller.js","forms/fields/datetime/view.html!text","forms/fields/datetime/controller.js","forms/fields/userPicker/view.html!text","forms/fields/userPicker/controller.js","forms/fields/objectPicker/view.html!text","forms/popups/objectPickerPopup/view.html!text","forms/popups/objectPickerPopup/controller.js","forms/fields/objectPicker/controller.js","forms/fields/button/view.html!text","forms/fields/button/controller.js","forms/fields/editor/view.html!text","forms/fields/editor/controller.js","forms/fields/combo/view.html!text","forms/fields/combo/controller.js","forms/fields/dropDownList/view.html!text","forms/fields/dropDownList/controller.js","forms/fields/bundle/view.html!text","forms/fields/bundle/controller.js","forms/fields/fileUpload/view.html!text","forms/fields/fileUpload/controller.js","forms/fields/urlTextbox/view.html!text","forms/fields/urlTextbox/controller.js","forms/fields/percentage/controller.js","forms/formBuilder.js","forms/formHelper.js","forms/wiMain.js"],"names":["define","module","text","fs","Cc","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","location","href","defaultProtocol","protocol","replace","defaultHostName","hostname","defaultPort","port","undefined","buildMap","masterConfig","config","version","strip","content","matches","match","jsEscape","createXhr","xhr","i","progId","XMLHttpRequest","ActiveXObject","e","parseName","name","modName","ext","temp","index","indexOf","isRelative","substring","length","moduleName","xdRegExp","useXhr","url","uProtocol","uHostName","uPort","exec","split","toLowerCase","finishLoad","onLoad","isBuild","load","req","inlineText","parsed","nonStripName","toUrl","get","err","error","write","pluginName","hasOwnProperty","asModule","writeFile","extPart","fileName","value","textWrite","contents","env","process","versions","node","require","nodeRequire","callback","errback","file","readFileSync","headers","header","open","setRequestHeader","onXhr","onreadystatechange","evt","status","readyState","Error","responseText","onXhrComplete","send","Packages","java","stringBuffer","line","io","File","lineSeparator","lang","System","getProperty","input","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","charAt","append","String","toString","close","Components","classes","interfaces","utils","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","init","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString","path","tpl","template","build","built","_","properties","$","extend","kendo","View","wrap","render","vm","EnumId","Required","Disabled","disabled","LeafNodeOnly","ShowPath","FilterIds","anchorTemplate","windowTemplate","enumPickerControl","drawerTaskTemplate","configEnumId","configPropertyName","callerType","type","isBulkEdit","originalAssignedName","originalAssignedId","originalSupportGroup","originalSupportName","originalSupportId","getTaskViewModel","modalView","taskVm","observable","analystByGroup","selectedWorkItem","groupPropertyName","groupPropertyEnumId","viewModel","set","Id","Name","Configs","propertyName","enumId","modalEle","element","clone","modalControl","kendoCiresonWindow","title","localization","AssignToAnalystByGroup","width","height","actions","data","windowViewModal","assignToDataSource","getUserDataSource","userEnabled","okEnabled","userChange","sender","_prev","AssignedWorkItem","okClick","app","lib","mask","apply","postData","ProjectionId","projectionId","UpdateServiceManagement","ItemIds","pluck","currentSelection","EditedFields","getBulkEditedFieldData","ajax","JSON","stringify","dataType","contentType","success","onBulkEditSaveSuccess","onBulkEditSaveFailure","isUndefined","TierQueue","SupportGroup","cancelClick","buildEnumPicker","container","props","vmModel","enumControl","html","controls","localize","bind","groupProperties","PropertyName","PropertyDisplayName","find","groupPicker","groupDropDownControl","handler","_dropdown","groupTreeViewControl","_treeview","item","this","dataItem","select","assignToCombobox","setSupportGroupUsers","removeClass","show","refresh","setAdditionBulkTaskProperties","anchorViewModel","drawerTaskVm","assignedWorkItem","displayName","baseId","isEnabled","showTooltip","setEnabled","enabled","targetControlId","onTargetControlChange","grid","selectedDataItems","isMobile","map","toArray","onExceedSelectionCount","selectedTypes","selectedStatusNames","singleSelectedType","reduce","memo","currentVal","singleSelectedStatusName","setTrimmedWiType","constants","projectionIds","SystemWorkItemServiceRequestViewModel","enumPickerIds","ServiceRequestSupportGroup","SystemWorkItemIncidentViewModel","IncidentTierQueue","pop","json","trimmedType","EditedValue","assignedSupportGroup","PropertyType","PropertyRelationshipId","ActionType","Description","RecordAssignedDescription","session","user","DescriptionDisplay","EnteredBy","EnteredDate","Date","toISOString","LastModified","Title","RecordAssigned","Image","iconPath","icons","ui","ExtAlertDialog","localizationHelper","message","dataSource","query","targetGrid","targetGridState","gridUtils","savedState","getCurrentState","recheckGridState","add","remove","getOriginalFormValues","DisplayName","BaseId","isNull","Text","selectedSupportGroupId","DataSource","transport","read","addUrlParam","schema","model","fields","vmWindow","asssignToComboBox","focus","attr","ChooseOne","buildAndRender","windowEle","view","destroy","taskListItem","builtAnchor","anchorElm","formTaskViewModel","onClick","toolTipMessage","events","subscribe","event","listView","selectedCards","controlId","wrapper","Target","anchor","notificationTpl","notificationTemplate","target","assignToMe","cont","popupNotification","kendoNotification","templates","infoMessage","AssignedToMeNotificationMessage","link","longStringController","CheckLength","setTimeout","elem","currentTarget","helpBlock","next","maxChars","val","hide","removeAttr","buildLongStringView","limitLength","MinLength","MaxLength","LimitLength","Rows","visible","IsVisible","Inline","changeStatusTemplate","changeStatusDrawerTemplate","txtAreaControl","checkBoxControl","IsAutoResolve","AutoResolve","resolveChildIncidentSettings","originalVm","Status","ResolutionCategory","ResolutionDescription","ChildWorkItem","Notes","ImplementationResults","RelatesToWorkItem","Resolution","workItemStatuses","incidentResolved","Incident","Resolved","incidentActive","Active","incidentClosed","Closed","incidentActivePending","Pending","serviceRequestCancelled","ServiceRequest","Cancelled","serviceRequestCompleted","Completed","serviceRequestSubmitted","Submitted","serviceRequestInProgress","InProgress","serviceRequestOnHold","OnHold","serviceRequestFailed","Failed","serviceRequestClosed","changeRequestFailed","ChangeRequest","changeRequestClosed","changeRequestInProgress","changeRequestOnHold","changeRequestCancelled","changeRequestSubmitted","changeRequestCompleted","problemResolved","Problem","problemClosed","releaseRecordClosed","ReleaseRecord","releaseRecordCancelled","releaseRecordCompleted","releaseRecordFailed","releaseRecordEditing","Editing","releaseRecordOnHold","releaseRecordInProgress","getFormTaskViewModel","changeStatus","modalWindowEle","modalWindowControl","ChangeStatusTask","activate","selectedWiType","modalWindowViewModel","currentStatusId","onModalActivate","statusTreeViewControl","statusDropDownControl","statusEnumId","resolutionCategoryEnumId","resolveChildSettings","letAnalystDecide","workItemModel","requireResolution","resolveChildIncident","actionLogType","getWorkItemLogType","isString","RequestCategoryRequiredError","ImplementationNotesRequiredError","resDateEle","unshift","dataModels","recordResolved","RelatesToTroubleTicket","IsParent","ResolveChildIncident","ResolvedLetAnalystDecide","resolveChildIncidents","closeDateEle","RelatesToTroubleTicket_","recordClosed","ClosedByUser","recordActivated","comDateEle","resolveRelatedWorkItems","showComment","showResolution","showAutoResolve","createStatusPicker","enableResolutionSettings","createIncidentResolutionFields","createResultFields","createProblemResolutionFields","getDrawerTaskViewModel","currentSelectionOfParents","containsParents","currentStatusName","statusTypeId","resolutionResultEnumId","openModal","handleStatusControlChange","modalViewModel","toggleAdditionalFields","selectedWorkItems","selectedParents","newStatusObj","newResolutionId","resolutionDescription","newResultId","resultNote","resultComment","showPath","leafNodeOnly","wiStatusTypeId","irStatusResolved","srStatusCompleted","srStatusCancelled","irCategoryRequired","srNotesRequired","irResolveChildOption","windowViewModel","bulkEditFormIsValid","postBulkEditChangesWithChildren","getDrawerTaskEditedFields","postBulkEditChanges","selectedStatusIds","singleSelectedStatusId","ServiceRequestImplementationResults","parentItems","each","workItem","push","IncidentResolution","treeControl","dropDownControl","changeRules","getFormTaskChangeRules","changeRulesFilter","field","operator","options","serverFiltering","filter","id","itemFilter","comboDataSource","setDataSource","getResolveChildIncidentSettings","builtModal","ele","resolutionProperties","implementationNotesProperties","buildTextArea","autoResolveProperties","buildCheckbox","implementationResultProperties","commentProperties","resolutionDescriptionProperties","letAnalystDecideProperties","statusProperties","cbTxtAreaControl","txtCheckboxControl","getDrawerTaskChildEditedFields","resolutionCategoryId","propertyRelationshipId","RecordResolved","statusId","ChildIncidentResolutionCategorySameAsParent","ChildIncidentResolutionCategory","ResolvedDate","Array","logic","filters","windowVm","parentIds","childIds","itemIds","childId","uniqIds","uniq","childResolutionCatId","childrenPostData","wiSelectionPostData","postCallback","drawerTaskViewModel","anchorEleProps","titleKey","anchorTemplateProps","enumPicker","ChangeHardwareAssetStatus","enumName","ChangeHardwareAssetType","ChangeSoftwareAssetStatus","ChangeSoftwareAssetType","tempStatus","win","_vmWindow","acknowledge","Acknowledge","dateTimeNow","dateTimeNowUTC","actionLogComment","isPrivate","charactersRemaining","textCounter","FirstResponseDate","respondDateEle","newActionLog","Analyst","Comment","IsPrivate","ActionLog","pageForm","isParent","confirmTitle","confirmMessage","convertToParent","when","ExtYesNoDialog","done","response","button","save","ChangesApplied","saveFailure","exceptionMessage","RequiredFieldsErrorMessage","PleaseCorrectErrors","linkToParent","ClassId","LinktoNewParentIncident","LinkToNewParentRecord","refreshDataSource","getChildIncidentSettings","searchText","searchClick","selectedRow","ParentWorkItem","childIncidentSettings","ActiveChildIncidentLinkStatus","buildParentHeaderView","parentView","workItemType","cache","pageSize","gridChange","eventArgs","otherBoundChanges","setNewStatus","newStatusId","addComment","newStatusName","processChildIncidentReactivation","reactivateChildandSave","ChildIncidentReactivatedStatus","parseJSON","ReactivateLetAnalystDecide","ReactivateChildIncidentTitle","ReactivateChildIncidentMessage","ReactivateChildIncident","newStatusConfig","comment","newComment","commentMessage","CancelledStatusCommentMessage","__userPickerPopupSingleton","NameIdModel","nameProp","idProp","self","serverNameProp","serverIdProp","setObj","setFromObj","obj","getFromObj","getObj","getGenericFromObj","UserPickerPopup","targetEle","groupsOnly","popup","_vm","gridHtml","gridUrl","_model","setSaveCallback","unbind","setCancelCallback","bindEvents","onSearchClick","search","searchValue","onSaveClick","isMobileDevice","selectedUser","userObj","trigger","closePopup","kendoGrid","onCancelClick","openPopup","kendoDataSource","kendoWindow","createPopup","Popup","createGrid","Grid","createKendoWindow","SelectGroup","SelectUser","settings","pager","on","onRowDblClick","page","createKendoDataSource","prefix","userFilter","filterByAnalyst","serverPaging","serverSorting","serverGrouping","total","errors","PrincipalName","UserName","Domain","Company","FirstName","LastName","EmployeeId","createKendoGrid","selectable","sortable","mode","pageable","filterable","extra","operators","string","startswith","Startswith","contains","Contains","eq","Isequalto","neq","Isnotequalto","autoBind","columns","hidden","encoded","attributes","class","SearchText","selectUserText","searchOnEnter","which","preventDefault","cancel","userDataSource","onListViewChanged","isDesktopView","isMobileView","getPopup","__fileAttachmentsPopupSingleton","FileAttachmentsPopup","task","FileAttachments","selectedFiles","closeModal","onOpenFile","saveCancelBtn","closeBtn","modal","selectFile","el","isImage","closest","getByUid","action","downloadUrl","rootURL","window","document","body","appendChild","createElement","src","dialog","dialogs","kendoDialog","Content","animation","effects","addClass","before","off","kendoListView","FileAttachment","change","dataBound","parent","objectPickerPopup","attachmentPickerFlyout","sendEmail","SendEmail","getAffectedUserEmail","setDefaultWIStatus","emailTo","emailCC","emailSubject","emailHTMLMessage","emailBodyTemplate","emailTextMessage","emailAttachment","emailTemplateDataSource","tempateDataSource","emailTemplateValue","attachmentErrorMessage","addToLog","addToActionLogDefault","forceAddToActionLog","enableAddToLog","setAsPrivate","saveMessageAsPrivate","recipientToEmail","without","recipientToList","findWhere","Email","join","recipientCcEmail","recipientCCList","arrEmail","union","InvalidEmailAddress","PleaseProvideEmailAddress","invalidEmailAdress","validateEmailAddress","InvalidEmailAddressMessage","editor","innerText","textContent","trim","MessageRequired","MessageRequiredWhenAddingLogEntry","progress","ExtOkCancelDialog","Warning","UnsavedDataMessage","icon","shown","emailTemplateChange","_old","dView","subject","Subject","resizeEditor","$this","children","hasClass","toggleClass","showChangeStatus","sendEmailAttachments","fromWorkItemAttachementsId","setFirstResponseDate","enableFirstResponseDate","popupWindow","object","recipientType","picker","userEmailObj","users","guid","email","key","viewWorkItemFiles","flyoutWindow","n","filesCount","changeStatusSetting","defaultStatusId","rootStatusEnumId","enableChangeStatus","initializeUserPicker","initializeUploader","initializeStatusPicker","buildEditor","tooltip","getSendEmailChangeStatusSettings","applyChangeStatus","toPicker","ccPicker","stopImmediatePropagation","addToCommentLog","EMailSent","RequestedWorkItem","affectedUserId","textStatus","jqXHR","affectedUser","async","invalidEmailAddress","validateEmail","fileAction","blob","Blob","URL","createObjectURL","navigator","msSaveOrOpenBlob","msSaveBlob","a","style","download","click","revokeObjectURL","removeChild","kendoUpload","saveUrl","ClassName","autoUpload","operation","files","rawFile","ErrorDescription","console","warn","showFileList","dropZone","targetProp","targetKey","userPicker","kendoMultiSelect","placeholder","Search","dataTextField","dataValueField","maxNumberOfResults","filtering","tagTemplate","currentList","deselect","clearButton","keyCode","jQuery","Event","bChangeStatus","bAddActionLog","addToLogSkipped","bHasAttachment","strAttachedFileNames","strMessage","encodeURIComponent","strMessagePlain","workItemFileIds","emailFooterTemplate","emailData","To","Message","AttachedFileNames","WorkItemId","bSetFirstResponsDate","bSuccess","SendEmailSuccessMessage","fileAdded","handleSaveSuccess","SkippedAddingLogEntryTitle","ErrorAddingLogEntryMessage","SendEmailFailedMessage","errorThrown","log","uploadPastedImage","d","timestamp","getTime","formData","FormData","processData","getBase64Image","img","canvas","getContext","drawImage","toDataURL","dataURItoBlob","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","defaultTools","shift","mobileTools","kendoEditor","tools","stylesheets","paste","pasteCleanup","custom","tagName","dataSRC","setAttribute","one","complete","fetchAll","names","at_config","at","headerTpl","insertTpl","displayTpl","limit","startWithSpace","editableAtwhoQueryAttrs","iframe","prev","innerDoc","contentDocument","contentWindow","$inputor","atwho","caret","$li","userId","is","activeElement","removedAtWhoId","newList","filterIdParam","filterId","getChangeStatusRules","consoleSetting","SendEmailServiceRootStatusEnum","SendEmailServiceDefaultStatusEnum","SendEmailServiceAllowAnalystToChangeStatus","SendEmailChangeRootStatusEnum","SendEmailChangeDefaultStatusEnum","SendEmailChangeAllowAnalystToChangeStatus","SendEmailProblemRootStatusEnum","SendEmailProblemDefaultStatusEnum","SendEmailProblemAllowAnalystToChangeStatus","SendEmailReleaseRootStatusEnum","SendEmailReleaseDefaultStatusEnum","SendEmailReleaseAllowAnalystToChangeStatus","SendEmailIncidentRootStatusEnum","SendEmailIncidentDefaultStatusEnum","SendEmailIncidentAllowAnalystToChangeStatus","Label","func","customFunc","relationshipKey","FromFilter","ToFilter","FromRelative","ToRelative","MinValue","MaxValue","stringController","buildStringView","datePicker","stringArea","checkBox","datePickerCtrl","checkboxCtrl","openWindow","dateLabel","viewType","Disposed","blur","cancelledDate","originalDate","dateProperties","OriginalDisposalReference","recieveCheckbox","OriginalCheckBox","masterContractStartingDateCheckbox","DisposalDate","ReceiveDate","StartDate","propertyKey","buildDatePicker","stringProperties","DisposalReference","buildString","RemoveReceivedDate","RemoveMasterLeaseWarrantyStarts","dateControl","stringControl","checkboxControl","dtm","checked","enable","CommonContract","UpdateStatus","SetSeatsRemaining","UpdateSoftwareAsset","UpdateConsumable","SupersedesParent","CountAssignedConsumableUsers","CountAssignedConsumableAssets","assignedCount","Target_ConsumableHasAssignedUsers","Target_ConsumableHasAssignedAssets","CiresonAssetManagement","SoftwareAssetUpdateConfirmationMsg","isOk","Success","SoftwareAssetUpdated","reload","ErrorOccured","ajaxOptions","thrownError","failure","RequestFailed","jsonRsp","errorMsg","exception","UpdateSupersedesConfirmation","post","UpdatingAssets","TotalNumberofAssetsUpdated","count","ServerError","CopyLicenseAssignments","StartCopyLicenseAsssignements","serialize","bTransferUsers","bTransferComputers","bTranserToAuthorised","targetVM","selected","source","sourceVM","bTranserToAssigned","computerList","ComputerList","userList","UserList","PerformTransfer","UpdateSoftwareAssetMsg","itemList","targetProperty","isExist","indexTarget","addItem","copyToNewWI","hiddenVm","copy","method","submit","DecimalPlaces","StepIncrement","Format","numericArea","EditConsumableAvailableCount","tempLog","ObservableObject","ClassTypeId","Target_LogHasCreator","AllowCreatedDate","newGUID","Type","TaskRun","countProperties","zeroCount","buildNumeric","currentCount","addedcount","parseInt","newCount","IncreasedAvailableCount","AvailableCount","DecreasedAvailableCountBy","print","addMeToWatchList","isAddWatchlist","removeFromWatchList","AddMeToWatchList","addToWatchList","RemoveMeFromWatchList","WatchList","AddMeToWatchListNotificationMessage","splice","RemoveMeFromWatchListNotificationMessage","amChangeStatus","newStatus","spacer","associateItem","setDate","updateAssetManagement","updateSupersededHardware","copyLicenseAssignments","customTmpl","increaseAvailableCount","decreaseAvailableCount","definition","ulElement","fromDrawerBuilder","taskTemplate","tasks","taskCallback","Access","eval","Task","_obj","Exception","tmpl","viewAttachments","statusVisible","newWI","viewCallBack","controller","parentIncident","ParentRecord","Parentincident","editHref","editLink","unlinkParent","UnlinkToParent","SureUnlinkToParent","isAnalyst","DoWork","sloViewObj","sloObjects","sloActive","sloPaused","sloMet","sloWarning","sloBreached","sloNotReady","sloContainer","isMet","isPaused","sloTemplate","sloObj","imageClass","isBreach","sloImg","SLOCoundown","Time","Hours","Minutes","Seconds","WarningDate","ServerDatetimeNow","sloCloned","isMetStat","hours","minutes","seconds","warningDate","serverCurrentDate","secs","Math","abs","mins","hrs","setSeconds","getSeconds","rejected","approve","notYetVoted","approvalModel","decisionEnumId","comments","onRejectClick","updateStatus","onApproveClick","onCompleteClick","ManualActivity","updateManualActivity","onFailClick","isReviewActivity","updateReviewActivity","isManualActivity","ExtYesNoTextAreaDialog","Comments","DoYouHaveComments","required","Reviewer","reviewItem","group","userGroup","User","Decision","VotedBy","RequireImplementationNotes","ImplementationdetailsRequired","Implementationdetails","buttons","Save","$inputText","currentNotes","requiredCss","cls","Cancel","isDirty","current","toJSON","original","jsonRaw","successMessage","ReviewActivityApprovedMessage","ReviewActivityRejectedMessage","ManualActivityCompletedMessage","ManualActivityFailedMessage","handleMessages","pathname","DataConflict","DataConflictError","DataConflictDescription","ReconnectRequired","pageDataSource","isScoped","Security","IsWorkItemScoped","showInActives","requestEnd","updatePageDetails","pageCount","idx","pageString","statusInProgress","reviewDetails","fullDetails","review","nextClick","navigate","previousClick","dSource","nextItem","approvalUrl","onChangeSupportGroup","MASupportGroupField","SupportGroupFieldValue","currentPage","toatPage","pageText","disablePrevious","disableNext","workItemId","statusName","disabledButtons","reviewResult","reviewId","SupportGroupVisible","SupportGroupEnumId","MASupportGroupGuid","disabledMAButtons","relationships","slo","approval","headerTemplate","rows","row","rowElm","column","colElm","Class","appendTo","Visible","dtpl","mtpl","cid","ObjectPickerPopup","classId","columnNames","dataSourceFilter","isConfigItem","controllerUrl","objects","selectedRows","grid2","itm","clearSearchText","gridFunctions","clear","outObjs","ObservableArray","addObject","max","grid2Funcs","removeObject","removeRow","gridFuncs","searchFilter","comboFuncs","getIdValue","onChange","onDataBound","totalPages","items","ii","iitem","dblClick","uid","item1","combo","SelectObject","createCombo","kendoComboBox","gc","Path","userColumns","columnMenu","createGrid2","Data","Total","nd","nodeName","templateFrag","cur_table","HasRelatedWorkItems","boundArray","affectedItemController","addConfigItem","selectedConfigItemId","addAffectedItem","searchConfigItem","selectedConfigItem","configItemDataSource","onConfigItemChange","selectedIndex","isUserCIVisible","selectedUserConfigItemId","selectedUserConfigItem","addUserConfigItem","userConfigItemDataSource","onUserConfigItemChange","showMoreInfo","detailsPopupEle","detailsPopup","center","onDataBinding","table","AssetStatus","Hidden","isWindowsComputer","isConfigItemWindowsComputer","objectId","result","isUser","isConfigItemUser","IsUser","isMoreInfo","isSlideOut","bIsUser","bIsWindowsComputer","hasControlCenterURL","TrueControlCenterURL","showTCCInfo","ComputerManagement","slideOutNav","getTCCSourceURL","UserManagement","onContextmenuSelect","onContextmenuActivate","managementTitle","menuItems","imageUrl","imageAttr","AdditionalDetails","setOptions","originalFilter","arguments","dsFilters","innerFilters","x","affectedtemController","isDuplicate","idToAdd","getJSON","RelatesToConfigItem","relatedItemController","Control","boundObj","bindButtonEvents","addClick","gridEle","command","Remove","scrollable","messages","info","Showitemswithvaluethat","and","And","or","Or","Filter","Clear","reorderable","ChooseColumns","sortAscending","SortAscending","sortDescending","SortDescending","editable","confirmDelete","cancelDelete","create","update","toolbar","selectedItem","strClass","className","PropertyToDisplay","ControllerUrl","IsMobileView","showProp","parents","buildSubProperties","propToFill","prop","propSplit","mainProp","subProp","_boundArray","colNames","splitedProp","propperty","propIndex","ShowAddButton","isDisabled","hideRemoveButton","ShowRemoveButton","columnFields","buildColumnFields","columnToDisplay","buildGridColumns","dataBinding","formatPropertyInBoundArray","ClassProperties","Scoped","scopeBoundArray","SelectableRow","openObject","showRemovButton","localizationKey","localizedText","columnClass","SelectProperty","dateFormat","culture","calendar","patterns","g","format","currentItemEvent","columnString","currentItem","property","isBoolean","isNumber","scopeClassId","timeout","objectIds","_data","tbody","stringProp","parse","HiddenProperty","concat","DashboardsLicense","IsValid","enableWatchlist","historyTemplate","builtHistory","historyElm","kendoDropDownList","historyController","getObjectHistory","dataSourceSet","getDropDownDataSource","storage","setWithNoDirty","variable","isDirtyState","loadHistory","dropDownDataSet","getChildren","Activity","Key","activity","objectGUID","objectTitle","customhistoryModel","nodes","noop","LastUpdatedDisplay","billableTimeController","btHour","btMinute","btTotalTime","btTotalTimeInString","onHourSpin","onMinuteSpin","BillableTime","BasedId","LastUpdated","onAddClick","hour","minute","isExisting","newBillableModel","TimeInMinutes","computeTotalTime","resetTime","onSubtractClick","totalTime","SubtractTimeTitle","SubtractTimeMessage","itemTotalTime","Totaltime","isVisible","popupTpl","popupView","knowledgeArticleModel","ArticleId","Category","selectedItems","first","articleIds","last","relatedHTMLKB","KnowledgeArticleID","WorkItemID","AssetID","AssetId","bindRowClick","getAllRelatedWorkItems","ArticleID","CategoryName","TypeName","removeRelatedKB","removeHTMLKB","then","AcceptExtension","Clas","isDesktop","onSelect","extension","FileExtensionInvalid","onUploadSuccess","onUploadError","onRemove","fieldName","css","defer","removeUrl","HideLabel","number","userPickerPopup","ExtraProps","Delay","FilterByAnalyst","MaxNumberOfResults","extraProps","delay","minLength","propName","forceKendoProp","helperBlock","autoComplete","refreshDisplayValues","onAutoCompleteValueChanged","onSearchIconClick","isModelSet","isModelSetNulled","hasExtraProps","createHelperBlock","HelperBlock","createAutocomplete","AutoComplete","detailsUrl","setDisplay","setValue","extraPropText","setExtraPropsDisplay","createHtml","data-bind","createViewModel","getUserObjectData","getDisplayName","str","isObject","searchBtn","detailsBtn","placeHolderText","SearchButton","focusedItemIndex","hasTCCURL","validateAutoCompleteValue","getDataSourceMatch","ul","getFocusedIndex","onDetailsBtnClick","stopPropagation","openSlideout","createSearchButton","data-control-action","iconColor","insertAfter","createDetailsButton","insertBefore","createTCCDetailsButton","kendoMenu","openOnClick","createKendoAutoComplete","kendoAutoComplete","suggest","valuePrimitive","createDetailsPopup","blurred","text-decoration","background-color","ds","focused","__objectPickerPopupSingleton","groupFilter","ObjectClassId","ObjectClassName","Hosted","selectObjectText","okText","OK","cancelText","getIndexZero","SearchPlaceholder","preventClosing","scrollTop","ButtonType","ButtonSize","Options","staticFileVersion","Height","IsCascading","Cascade","ControlObject","gridViewModel","bundleData","createOrEditSoftwareBundle","dataList","products","tempSoftwarePattern","tempExclusionPattern","tempVersionPattern","SoftwarePatternName","SoftwarePattern","ExclusionPattern","VersionPattern","SoftwarePatternTxt","ExclusionPatternTxt","VersionPatternTxt","enableDisableTextbox","txt","isEnable","softwarePatternList","exclusionPatternList","versionPatternList","IsBundle","softwarePattern","onSave","validation","SoftwarePatternNamevalidation","EnterRequiredFields","SoftwarePatternvalidation","batch","streamId","bufferedMode","streamLength","buildURLTextbox","regexp","RegExp","txtBox","validateUrl","test","textChange","openURL","formPanel","formPanelFull","customFieldGroup","customFieldGroupRow","columnField","tab","tabPane","tabNavigation","tabData","actionLog","fileAttachments","affectedItems","relatedItems","childWorkItems","userInput","activities","multipleObjectPicker","history","billableTime","knowledgeArticle","fileAttachmentsDragDrop","LongString","Boolean","Display","Spacer","Numeric","Int32","Decimal","Double","DateTime","Enum","UserPicker","ObjectPicker","Button","Editor","Combo","DropDownList","Bundle","FileUpload","UrlTextbox","Percentage","mainContainer","jsonTemplate","formTemplate","layoutType","tplString","readTemplate","jsonDecision","mutationLogic","all","propValue","tabList","nodeCount","tabtplString","tabnavCont","focusSet","tabNode","focusedTab","getParameterByName","tabNodeNameKey","tabId","active","customFieldGroupList","columnFieldList","setColumnSizes","getContainer","tplReturn","chooseNextAction","objectName","columnCount","DataType","propContainer","list","pane","_container","manageDirty","onbeforeunload","mobileDrawerTaskButton","taskContainer","mobileTaskShow","drawermenu","addButton","Tasks","makeDrawer","resize","waitSeconds","urlArgs","baseUrl","paths","shim","ajaxStop","taskBuilder","headerBuilder","formBuilder","formHelper","messagesStructure","headerContainer","empty","formContainer","formType","dataVM","priorityJSON","bHasNoInitalAssignee","bShowAddWatchList","onReady","WorkItemErrorMessage","jumbotron","readyArray","boundReady","changesArray","boundChange","methods","actionMethod","isArray","isFunction","reverse","statusCancelled","statusCompleted","statusFailed","showCancelled","AssignToMe","CancelRequest","SureCancelRequest","Print","statusNotResolvedOrClosed","showAcknowledge","showLinkToparent","showRevertToParent","showConvertToParent","statusResolved","ConvertToParent","SureConvertToParent","RevertToParent","SureRevertToParent","LinktoParentIncident","CloseIncident","SureCloseIncident","ReactivateIncident","SureReactivateIncident","CopyToNew","showCloseStatus","CloseServiceRequest","SureCloseServiceRequest","CloseProblem","SureCloseProblem","ReactivateProblem","SureReactivateProblem","showRun","SureConvertToParentRecord","SureRevertToParentRecord","LinktoParentRecord","Run","RunComentMessage","CloseReleaseRecord","SureCloseReleaseRecord","formTasks","label","setTemplateJSONFromSessionAdJSON","Default","msg","alert","typeToSession","templateName","createButtons","scrollTo","ChangeRequestSavedMessage","ServiceRequestSavedMessage","IncidentSavedMessage","ProblemSavedMessage","ReleaseRecordSavedMessage","WorkItemSavedMessage","gotoFormReturnUrl","Apply","sendMentionsMail","processTemplate","givenTemplate","tokens","token","lastIndexOf","isDateValue","parseDate","sendNotificationAsHTML","htmlEntities","valid","ScheduledStartDate","ScheduledEndDate","CheckedManualActivityStartAndEndDate","ScheduledStartDateExceedScheduledEndDate","ActualStartDate","ActualEndDate","ActualStartDateExceedActualEndDate","ScheduledDowntimeStartDate","ScheduledDowntimeEndDate","ScheduledDowntimeStartDateExceedScheduledDowntimeEndDate","ActualDowntimeStartDate","ActualDowntimeEndDate","ActualDowntimeStartDateExceedActualDowntimeEndDate","checkActivityDates","MaActualStartDateExceedActualEndDate","MaScheduledStartDateExceedScheduledEndDate","jqEle","kendoBindingTarget","isEnum","UnAddedActionLogComment","optimizeFormMultiObject","BeforeSave","mailBox","AppliesToTroubleTicket","logs","MentionedUsers","disableActionLogNotification","actionLogNotificationTitle","actionLogNotificationTemplate","DescriptionHTML","AttachedFileName","AppliesToWorkItem","msgResponse","ex","setPriorityByMatrix","priority","Priority","priorityJSONU","Matrix","U","Urgency","I","obj2","Impact","P","setFirstAssignedDateValue","bHasCurrentAssignee","assignedDateEle","FirstAssignedDate","date","isBounded","lastAddedAssignee","addRecordAssignedLog","recordAssigned","isScheduleBounded","setScheduleDuration","scheduledDuration","calculateTimeDuration","actualDuration","scheduledDowntimeDuration","actualDowntimeDuration","startDate","endDate","dtStart","dtEnd","dayDiff","round","hourDiff","getHours","minDiff","getMinutes","ScheduleDurationText","onVmChange","OnVmChange","isClosed","stopEnterKeySubmitting","$taskPanel","affix","offset","top","getBoundingClientRect","binders","yScrollOnResize","bottom"],"mappings":"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","file":"wiMain-built.min.js","sourcesContent":["/**\r\n * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/requirejs/text for details\r\n */\r\n/*jslint regexp: true */\r\n/*global require, XMLHttpRequest, ActiveXObject,\r\n  define, window, process, Packages,\r\n  java, location, Components, FileUtils */\r\n\r\ndefine('text',['module'], function (module) {\r\n    'use strict';\r\n\r\n    var text, fs, Cc, Ci, xpcIsWindows,\r\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\r\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\r\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\r\n        hasLocation = typeof location !== 'undefined' && location.href,\r\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\r\n        defaultHostName = hasLocation && location.hostname,\r\n        defaultPort = hasLocation && (location.port || undefined),\r\n        buildMap = {},\r\n        masterConfig = (module.config && module.config()) || {};\r\n\r\n    text = {\r\n        version: '2.0.10',\r\n\r\n        strip: function (content) {\r\n            //Strips <?xml ...?> declarations so that external SVG and XML\r\n            //documents can be added to a document without worry. Also, if the string\r\n            //is an HTML document, only the part inside the body tag is returned.\r\n            if (content) {\r\n                content = content.replace(xmlRegExp, \"\");\r\n                var matches = content.match(bodyRegExp);\r\n                if (matches) {\r\n                    content = matches[1];\r\n                }\r\n            } else {\r\n                content = \"\";\r\n            }\r\n            return content;\r\n        },\r\n\r\n        jsEscape: function (content) {\r\n            return content.replace(/(['\\\\])/g, '\\\\$1')\r\n                .replace(/[\\f]/g, \"\\\\f\")\r\n                .replace(/[\\b]/g, \"\\\\b\")\r\n                .replace(/[\\n]/g, \"\\\\n\")\r\n                .replace(/[\\t]/g, \"\\\\t\")\r\n                .replace(/[\\r]/g, \"\\\\r\")\r\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\r\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\r\n        },\r\n\r\n        createXhr: masterConfig.createXhr || function () {\r\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\r\n            var xhr, i, progId;\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                return new XMLHttpRequest();\r\n            } else if (typeof ActiveXObject !== \"undefined\") {\r\n                for (i = 0; i < 3; i += 1) {\r\n                    progId = progIds[i];\r\n                    try {\r\n                        xhr = new ActiveXObject(progId);\r\n                    } catch (e) { }\r\n\r\n                    if (xhr) {\r\n                        progIds = [progId];  // so faster next time\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return xhr;\r\n        },\r\n\r\n        /**\r\n         * Parses a resource name into its component parts. Resource names\r\n         * look like: module/name.ext!strip, where the !strip part is\r\n         * optional.\r\n         * @param {String} name the resource name\r\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\r\n         * where strip is a boolean.\r\n         */\r\n        parseName: function (name) {\r\n            var modName, ext, temp,\r\n                strip = false,\r\n                index = name.indexOf(\".\"),\r\n                isRelative = name.indexOf('./') === 0 ||\r\n                             name.indexOf('../') === 0;\r\n\r\n            if (index !== -1 && (!isRelative || index > 1)) {\r\n                modName = name.substring(0, index);\r\n                ext = name.substring(index + 1, name.length);\r\n            } else {\r\n                modName = name;\r\n            }\r\n\r\n            temp = ext || modName;\r\n            index = temp.indexOf(\"!\");\r\n            if (index !== -1) {\r\n                //Pull off the strip arg.\r\n                strip = temp.substring(index + 1) === \"strip\";\r\n                temp = temp.substring(0, index);\r\n                if (ext) {\r\n                    ext = temp;\r\n                } else {\r\n                    modName = temp;\r\n                }\r\n            }\r\n\r\n            return {\r\n                moduleName: modName,\r\n                ext: ext,\r\n                strip: strip\r\n            };\r\n        },\r\n\r\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\r\n\r\n        /**\r\n         * Is an URL on another domain. Only works for browser use, returns\r\n         * false in non-browser environments. Only used to know if an\r\n         * optimized .js version of a text resource should be loaded\r\n         * instead.\r\n         * @param {String} url\r\n         * @returns Boolean\r\n         */\r\n        useXhr: function (url, protocol, hostname, port) {\r\n            var uProtocol, uHostName, uPort,\r\n                match = text.xdRegExp.exec(url);\r\n            if (!match) {\r\n                return true;\r\n            }\r\n            uProtocol = match[2];\r\n            uHostName = match[3];\r\n\r\n            uHostName = uHostName.split(':');\r\n            uPort = uHostName[1];\r\n            uHostName = uHostName[0];\r\n\r\n            return (!uProtocol || uProtocol === protocol) &&\r\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\r\n                   ((!uPort && !uHostName) || uPort === port);\r\n        },\r\n\r\n        finishLoad: function (name, strip, content, onLoad) {\r\n            content = strip ? text.strip(content) : content;\r\n            if (masterConfig.isBuild) {\r\n                buildMap[name] = content;\r\n            }\r\n            onLoad(content);\r\n        },\r\n\r\n        load: function (name, req, onLoad, config) {\r\n            //Name has format: some.module.filext!strip\r\n            //The strip part is optional.\r\n            //if strip is present, then that means only get the string contents\r\n            //inside a body tag in an HTML string. For XML/SVG content it means\r\n            //removing the <?xml ...?> declarations so the content can be inserted\r\n            //into the current doc without problems.\r\n\r\n            // Do not bother with the work if a build and text will\r\n            // not be inlined.\r\n            if (config.isBuild && !config.inlineText) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            masterConfig.isBuild = config.isBuild;\r\n\r\n            var parsed = text.parseName(name),\r\n                nonStripName = parsed.moduleName +\r\n                    (parsed.ext ? '.' + parsed.ext : ''),\r\n                url = req.toUrl(nonStripName),\r\n                useXhr = (masterConfig.useXhr) ||\r\n                         text.useXhr;\r\n\r\n            // Do not load if it is an empty: url\r\n            if (url.indexOf('empty:') === 0) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            //Load the text. Use XHR if possible and in a browser.\r\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\r\n                text.get(url, function (content) {\r\n                    text.finishLoad(name, parsed.strip, content, onLoad);\r\n                }, function (err) {\r\n                    if (onLoad.error) {\r\n                        onLoad.error(err);\r\n                    }\r\n                });\r\n            } else {\r\n                //Need to fetch the resource across domains. Assume\r\n                //the resource has been optimized into a JS module. Fetch\r\n                //by the module name + extension, but do not include the\r\n                //!strip part to avoid file system issues.\r\n                req([nonStripName], function (content) {\r\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\r\n                                    parsed.strip, content, onLoad);\r\n                });\r\n            }\r\n        },\r\n\r\n        write: function (pluginName, moduleName, write, config) {\r\n            if (buildMap.hasOwnProperty(moduleName)) {\r\n                var content = text.jsEscape(buildMap[moduleName]);\r\n                write.asModule(pluginName + \"!\" + moduleName,\r\n                               \"define(function () { return '\" +\r\n                                   content +\r\n                               \"';});\\n\");\r\n            }\r\n        },\r\n\r\n        writeFile: function (pluginName, moduleName, req, write, config) {\r\n            var parsed = text.parseName(moduleName),\r\n                extPart = parsed.ext ? '.' + parsed.ext : '',\r\n                nonStripName = parsed.moduleName + extPart,\r\n                //Use a '.js' file name so that it indicates it is a\r\n                //script that can be loaded across domains.\r\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\r\n\r\n            //Leverage own load() method to load plugin value, but only\r\n            //write out values that do not have the strip argument,\r\n            //to avoid any potential issues with ! in file names.\r\n            text.load(nonStripName, req, function (value) {\r\n                //Use own write() method to construct full module value.\r\n                //But need to create shell that translates writeFile's\r\n                //write() to the right interface.\r\n                var textWrite = function (contents) {\r\n                    return write(fileName, contents);\r\n                };\r\n                textWrite.asModule = function (moduleName, contents) {\r\n                    return write.asModule(moduleName, fileName, contents);\r\n                };\r\n\r\n                text.write(pluginName, nonStripName, textWrite, config);\r\n            }, config);\r\n        }\r\n    };\r\n\r\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\r\n            typeof process !== \"undefined\" &&\r\n            process.versions &&\r\n            !!process.versions.node &&\r\n            !process.versions['node-webkit'])) {\r\n        //Using special require.nodeRequire, something added by r.js.\r\n        fs = require.nodeRequire('fs');\r\n\r\n        text.get = function (url, callback, errback) {\r\n            try {\r\n                var file = fs.readFileSync(url, 'utf8');\r\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\r\n                if (file.indexOf('\\uFEFF') === 0) {\r\n                    file = file.substring(1);\r\n                }\r\n                callback(file);\r\n            } catch (e) {\r\n                errback(e);\r\n            }\r\n        };\r\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\r\n            text.createXhr())) {\r\n        text.get = function (url, callback, errback, headers) {\r\n            var xhr = text.createXhr(), header;\r\n            xhr.open('GET', url, true);\r\n\r\n            //Allow plugins direct access to xhr headers\r\n            if (headers) {\r\n                for (header in headers) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Allow overrides specified in config\r\n            if (masterConfig.onXhr) {\r\n                masterConfig.onXhr(xhr, url);\r\n            }\r\n\r\n            xhr.onreadystatechange = function (evt) {\r\n                var status, err;\r\n                //Do not explicitly handle errors, those should be\r\n                //visible via console output in the browser.\r\n                if (xhr.readyState === 4) {\r\n                    status = xhr.status;\r\n                    if (status > 399 && status < 600) {\r\n                        //An http 4xx or 5xx error. Signal an error.\r\n                        err = new Error(url + ' HTTP status: ' + status);\r\n                        err.xhr = xhr;\r\n                        errback(err);\r\n                    } else {\r\n                        callback(xhr.responseText);\r\n                    }\r\n\r\n                    if (masterConfig.onXhrComplete) {\r\n                        masterConfig.onXhrComplete(xhr, url);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send(null);\r\n        };\r\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\r\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\r\n        //Why Java, why is this so awkward?\r\n        text.get = function (url, callback) {\r\n            var stringBuffer, line,\r\n                encoding = \"utf-8\",\r\n                file = new java.io.File(url),\r\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\r\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\r\n                content = '';\r\n            try {\r\n                stringBuffer = new java.lang.StringBuffer();\r\n                line = input.readLine();\r\n\r\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\r\n                // http://www.unicode.org/faq/utf_bom.html\r\n\r\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\r\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\r\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\r\n                    // Eat the BOM, since we've already found the encoding on this file,\r\n                    // and we plan to concatenating this buffer with others; the BOM should\r\n                    // only appear at the top of a file.\r\n                    line = line.substring(1);\r\n                }\r\n\r\n                if (line !== null) {\r\n                    stringBuffer.append(line);\r\n                }\r\n\r\n                while ((line = input.readLine()) !== null) {\r\n                    stringBuffer.append(lineSeparator);\r\n                    stringBuffer.append(line);\r\n                }\r\n                //Make sure we return a JavaScript string and not a Java string.\r\n                content = String(stringBuffer.toString()); //String\r\n            } finally {\r\n                input.close();\r\n            }\r\n            callback(content);\r\n        };\r\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\r\n            typeof Components !== 'undefined' && Components.classes &&\r\n            Components.interfaces)) {\r\n        //Avert your gaze!\r\n        Cc = Components.classes,\r\n        Ci = Components.interfaces;\r\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\r\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\r\n\r\n        text.get = function (url, callback) {\r\n            var inStream, convertStream, fileObj,\r\n                readData = {};\r\n\r\n            if (xpcIsWindows) {\r\n                url = url.replace(/\\//g, '\\\\');\r\n            }\r\n\r\n            fileObj = new FileUtils.File(url);\r\n\r\n            //XPCOM, you so crazy\r\n            try {\r\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\r\n                           .createInstance(Ci.nsIFileInputStream);\r\n                inStream.init(fileObj, 1, 0, false);\r\n\r\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\r\n                                .createInstance(Ci.nsIConverterInputStream);\r\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\r\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\r\n\r\n                convertStream.readString(inStream.available(), readData);\r\n                convertStream.close();\r\n                inStream.close();\r\n                callback(readData.value);\r\n            } catch (e) {\r\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\r\n            }\r\n        };\r\n    }\r\n    return text;\r\n});\n","\ndefine('text!forms/tasks/anchor/view.html',[],function () { return '<li class=\"link\" data-bind=\"click: <%= Target %>\"><%= Label %></li>';});\n\n","/**\r\nAnchor\r\n**/\r\n\r\ndefine('forms/tasks/anchor/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = new kendo.View(built(properties), { wrap: false });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/analystByGroup/view.html',[],function () { return '<div id=\"AssignToAnalystByGroupWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div>\\r\\n                <div id=\"groupPicker\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\"form-group\">\\r\\n                <div class=\"control-label\">\\r\\n                    <label><%= localization.AssignedTo %></label>\\r\\n                </div>\\r\\n                <div class=\"editor-field\">\\r\\n                    <input id=\"assignedToCombo\"\\r\\n                           data-role=\"combobox\"\\r\\n                           data-bind=\"source: assignToDataSource, enabled:userEnabled, events: { change: userChange }\"\\r\\n                           data-text-field=\"Name\"\\r\\n                           data-value-field=\"Id\"\\r\\n                           data-placeholder=\"<%=localization.ChooseSupportGroup%>\"></input>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/fields/enum/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <div class=\"form-control form-control-picker input-sm\"\\r\\n         data-url=\"/api/V3/Enum/GetList\"\\r\\n         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n         data-showpath=\"<%= ShowPath %>\"\\r\\n         data-mustselectleafnode=\"<%= LeafNodeOnly %>\"\\r\\n         data-bind=\"ciresonDropDownTree: \\'<%= EnumId %>\\', value: <%= PropertyName %>\"\\r\\n         data-disabled=\"<%= Disabled %>\"\\r\\n         data-role=\"<%= PropertyName %>\"\\r\\n         data-filter=\"<%= FilterIds%>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n        >\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>';});\n\n","/**\r\nENUM - dropDownTree\r\n**/\r\n\r\ndefine('forms/fields/enum/controller',['require','text!forms/fields/enum/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/enum/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                EnumId: '',\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                LeafNodeOnly: false,\r\n                ShowPath: false,\r\n                FilterIds: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/drawerTask/view.html',[],function () { return '<span data-bind=\"visible: showTooltip\" class=\"tooltip-container\" rel=\"dynamictooltip\" title=\"<%= toolTipMessage %>\"></span>\\r\\n<li data-bind=\"click: <%= onClick %>, enabled: isEnabled\"><a data-bind=\"localize: <%= titleKey %>\"></a></li>';});\n\n","/**\r\nanalystByGroup\r\n**/\r\n\r\ndefine('forms/tasks/analystByGroup/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/analystByGroup/view.html','forms/fields/enum/controller','text!forms/tasks/drawerTask/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchorTemplate = require(\"text!forms/tasks/anchor/view.html\");\r\n    var windowTemplate = require(\"text!forms/tasks/analystByGroup/view.html\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n    var drawerTaskTemplate = require(\"text!forms/tasks/drawerTask/view.html\");\r\n\r\n    var definition = {\r\n        template: windowTemplate,\r\n        build: function (vm, node, callback) {\r\n            var callerType = vm.type; //\"Incident\", \"ServiceRequest\", \"BulkEdit\"\r\n            var isBulkEdit = vm.type == \"BulkEdit\";\r\n            var originalAssignedName = null;\r\n            var originalAssignedId = null;\r\n            var originalSupportGroup = null; //Todo: made need to initialize as an object\r\n            var originalSupportName = \"\";\r\n            var originalSupportId = \"00000000-0000-0000-0000-000000000000\";\r\n            var configEnumId;\r\n            var configPropertyName;\r\n\r\n\r\n\r\n            //viewModel set up\r\n            var getTaskViewModel = function (modalView) {\r\n                //this view Model is bound to the anchor element \r\n                var taskVm = kendo.observable({\r\n                    //this is the func that fires on link click\r\n                    analystByGroup: function () {\r\n                        \r\n\r\n                        if (isBulkEdit) {\r\n                            configPropertyName = taskVm.selectedWorkItem.groupPropertyName;\r\n                            configEnumId = taskVm.selectedWorkItem.groupPropertyEnumId;\r\n                        } else {\r\n                            //lets clear out the value for a better UX\r\n                            vm.viewModel.set(\"SupportGroup\", { Id: '', Name: '' });\r\n                            vm.viewModel.set(\"TierQueue\", { Id: '', Name: '' });\r\n                            configPropertyName = node.Configs.propertyName;\r\n                            configEnumId = node.Configs.enumId;\r\n                        }\r\n                        var modalEle = modalView.element.clone();\r\n                        var modalControl = modalEle.kendoCiresonWindow({\r\n                            title: localization.AssignToAnalystByGroup,\r\n                            width: 500,\r\n                            height: 300,\r\n                            actions: []\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //this view Model is bound to the window element\r\n                        var windowViewModal = kendo.observable({\r\n                            propertyName: configPropertyName,       //IR: \"TierQueue\", SR: \"SupportGroup\"\r\n                            enumId: configEnumId,                   //IR: IncidentTierQueue (enum), SR: ServiceRequestSupportGroup (enum)\r\n                            assignToDataSource: getUserDataSource(\"00000000-0000-0000-0000-000000000000\"),\r\n                            userEnabled: false,\r\n                            okEnabled: false,\r\n                            userChange: function (e) {\r\n                                if (isBulkEdit) {\r\n                                    taskVm.set(\"assignedWorkItem.displayName\", e.sender._prev);\r\n                                    taskVm.set(\"assignedWorkItem.baseId\", e.sender.value());\r\n                                } else {\r\n                                    //clear them out first\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", null);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", null);\r\n\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", e.sender._prev);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", e.sender.value());\r\n                                }\r\n                            },\r\n                            okClick: function () {\r\n                                modalControl.close();\r\n                                if (isBulkEdit) {\r\n                                    app.lib.mask.apply();\r\n                                    var postData = {\r\n                                        ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                        UpdateServiceManagement: true,\r\n                                        ItemIds: _.pluck(taskVm.currentSelection, 'BaseId'),\r\n                                        EditedFields: getBulkEditedFieldData(taskVm)\r\n                                    }\r\n\r\n                                    $.ajax({\r\n                                        url: '/api/v3/workitem/BulkEditWorkItems/',\r\n                                        data: JSON.stringify(postData),\r\n                                        dataType: 'json',\r\n                                        contentType: 'application/json',\r\n                                        type: \"POST\",\r\n                                        success: function() {\r\n                                            onBulkEditSaveSuccess(taskVm);\r\n                                        },\r\n                                        error: function() {\r\n                                            onBulkEditSaveFailure();\r\n                                        }\r\n                                    });\r\n\r\n                                } else {\r\n                                    //form task:\r\n                                    //replace original values with new saved values\r\n                                    originalAssignedName = vm.viewModel.AssignedWorkItem.get(\"DisplayName\");\r\n                                    originalAssignedId = vm.viewModel.AssignedWorkItem.get(\"BaseId\");\r\n\r\n                                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                                        originalSupportGroup = vm.viewModel.get(\"TierQueue\");\r\n                                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                                        originalSupportGroup = vm.viewModel.get(\"SupportGroup\");\r\n                                    }\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                modalControl.close();\r\n                                if (isBulkEdit) {\r\n                                    taskVm.set(\"assignedWorkItem.displayName\", null);\r\n                                    taskVm.set(\"assignedWorkItem.baseId\", null);\r\n                                } else {\r\n                                    //lets clean the model\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", null);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", null);\r\n\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", originalAssignedName);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", originalAssignedId);\r\n\r\n                                    \r\n                                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                                        vm.viewModel.set(\"TierQueue\", originalSupportGroup);\r\n                                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                                        vm.viewModel.set(\"SupportGroup\", originalSupportGroup);\r\n                                    }\r\n                                }\r\n                            },\r\n                        });\r\n\r\n                        var createGroupPicker = function (windowViewModal, modalEle) { \r\n                            var groupProperties = {\r\n                                PropertyName: windowViewModal.propertyName,\r\n                                PropertyDisplayName: \"SupportGroup\",\r\n                                EnumId: windowViewModal.enumId\r\n                            };\r\n                            buildEnumPicker(modalEle.find('#groupPicker'), groupProperties, vm.viewModel);\r\n\r\n                            //get the enum picker elm\r\n                            var groupPicker = modalEle.find('div[data-role=\"' + windowViewModal.propertyName + '\"]');\r\n\r\n                            //make sure we have a group picker object and we don't error\r\n                            if (groupPicker) {\r\n                                //get got handlers for event binding\r\n                                var groupDropDownControl = groupPicker.data().handler._dropdown;\r\n                                var groupTreeViewControl = groupPicker.data().handler._treeview;\r\n\r\n                                //bind group picker changes events\r\n                                groupDropDownControl.bind(\"change\", function (e) {\r\n                                    var item = this.dataItem(this.select());\r\n                                    var assignToCombobox = modalEle.find(\"#assignedToCombo\").data(\"kendoComboBox\");\r\n                                    setSupportGroupUsers(item, windowViewModal, assignToCombobox);\r\n                                    taskVm.set(\"assignedSupportGroup\", item);\r\n                                });\r\n                                groupTreeViewControl.bind(\"change\", function (e) {\r\n                                    var item = this.dataItem(this.select());\r\n                                    var assignToCombobox = modalEle.find(\"#assignedToCombo\").data(\"kendoComboBox\");\r\n                                    setSupportGroupUsers(item, windowViewModal, assignToCombobox);\r\n                                    taskVm.set(\"assignedSupportGroup\", item);\r\n                                });\r\n                            }\r\n                        };\r\n\r\n                        //form field helper\r\n                        var buildEnumPicker = function (container, props, vmModel) {\r\n                            enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                                container.html(enumControl);\r\n                                app.controls.apply(container, {\r\n                                    localize: true,\r\n                                    vm: vmModel,\r\n                                    bind: true\r\n                                });\r\n                            });\r\n                        };\r\n\r\n\r\n                        //bind window element to window viewModel\r\n                        kendo.bind(modalEle, windowViewModal);\r\n                        //create status enumPicker\r\n                        createGroupPicker(windowViewModal, modalEle);\r\n\r\n                        modalEle.removeClass('hide');\r\n                        modalEle.show();\r\n\r\n                        modalControl.refresh();\r\n                        modalControl.open();\r\n                    }\r\n                });\r\n\r\n                return taskVm;\r\n            };\r\n            //addition viewModel set up for bulk task\r\n            var setAdditionBulkTaskProperties = function (anchorViewModel) {\r\n                var drawerTaskVm = anchorViewModel;\r\n                //this view Model is bound to the anchor element \r\n                drawerTaskVm.currentSelection = [];\r\n                drawerTaskVm.selectedWorkItem = {\r\n                    type: '',\r\n                    projectionId: '',\r\n                    groupPropertyName: '',\r\n                    groupPropertyEnumId: '',\r\n                };\r\n                drawerTaskVm.assignedWorkItem = {\r\n                    displayName: \"\",\r\n                    baseId: \"\"\r\n                },\r\n                drawerTaskVm.isEnabled = false;\r\n                drawerTaskVm.showTooltip = true;\r\n                drawerTaskVm.setEnabled = function (enabled) {\r\n                    this.set('isEnabled', enabled);\r\n                    this.set('showTooltip', !enabled);\r\n                };;\r\n                drawerTaskVm.targetControlId = '';\r\n                drawerTaskVm.onTargetControlChange = function (grid) {\r\n                    var selectedDataItems = [];\r\n                    if (app.isMobile()) {\r\n                        //grid is selected items array when called from mobile\r\n                        selectedDataItems = grid;\r\n                    } else {\r\n                        selectedDataItems = grid.select().map(function (index, item) {\r\n                            return grid.dataItem($(item));\r\n                        }).toArray();\r\n                    }\r\n\r\n                    //we only update 10 items at a time\r\n                    if (selectedDataItems.length > 10) {\r\n                        onExceedSelectionCount();\r\n                    }\r\n\r\n                    anchorViewModel.set('currentSelection', selectedDataItems);\r\n\r\n                    //if nothing is selected disabled the item\r\n                    if (selectedDataItems.length <= 0 || selectedDataItems.length > 10) {\r\n                        drawerTaskVm.setEnabled(false);\r\n                    } else {\r\n                        var selectedTypes = _.pluck(selectedDataItems, \"WorkItemType\");\r\n                        var selectedStatusNames = _.pluck(selectedDataItems, \"Status\");\r\n\r\n                        //return false if multiple selected, otherwise returns string values\r\n                        var singleSelectedType = _.reduce(selectedTypes, function (memo, currentVal) {\r\n                            return (memo === currentVal) ? memo : false;\r\n                        });\r\n                        drawerTaskVm.set(\"selectedWorkItem.type\", singleSelectedType);\r\n\r\n                        var singleSelectedStatusName = _.reduce(selectedStatusNames, function (memo, currentVal) {\r\n                            return (memo === currentVal) ? memo : false;\r\n                        });\r\n\r\n                        if (singleSelectedType) {\r\n                            switch (singleSelectedType) {\r\n                                case \"System.WorkItem.ServiceRequest\":\r\n                                    drawerTaskVm.setTrimmedWiType();\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemServiceRequestViewModel);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', 'SupportGroup');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', app.constants.enumPickerIds.ServiceRequestSupportGroup);\r\n                                    //if SR is closed do not allow status change from here (TFS 3560)\r\n                                    if (singleSelectedStatusName === \"Closed\") {\r\n                                        drawerTaskVm.setEnabled(false);\r\n                                    } else {\r\n                                        drawerTaskVm.setEnabled(true);\r\n                                    }\r\n                                    break;\r\n                                case \"System.WorkItem.Incident\":\r\n                                    drawerTaskVm.setTrimmedWiType();\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemIncidentViewModel);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', 'TierQueue');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', app.constants.enumPickerIds.IncidentTierQueue);\r\n                                    drawerTaskVm.setEnabled(true);\r\n                                    break;\r\n                                default:\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', '');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', '');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', '');\r\n                                    // not a supported bulk edit Type, disable the edit button\r\n                                    drawerTaskVm.setEnabled(false);\r\n                            }\r\n                        } else {\r\n                            //not same type && status\r\n                            drawerTaskVm.setEnabled(false);\r\n                        }\r\n                    }\r\n                };\r\n                anchorViewModel.setTrimmedWiType = function () {\r\n                    this.set('selectedWorkItem.trimmedType', this.selectedWorkItem.type.split(/[\\s.]+/).pop());\r\n                };\r\n\r\n\r\n            };\r\n            //helper functions\r\n            var getBulkEditedFieldData = function (viewModel) {\r\n                var json = [];\r\n\r\n                switch (viewModel.selectedWorkItem.trimmedType) {\r\n                    case \"Incident\":\r\n                        json = [\r\n                           { \r\n                                PropertyName: \"TierQueue\",\r\n                                EditedValue: viewModel.assignedSupportGroup.Id,\r\n                                PropertyType: \"enum\"\r\n                           },\r\n                           {\r\n                                PropertyName: \"AssignedWorkItem\",\r\n                                EditedValue: viewModel.assignedWorkItem.baseId,\r\n                                PropertyType: \"singleCardinalityObject\",\r\n                                PropertyRelationshipId: \"15e577a3-6bf9-6713-4eac-ba5a5b7c4722\" //magic guid\r\n                            },\r\n                            {\r\n                                PropertyName: \"AppliesToTroubleTicket\",\r\n                                PropertyType: \"multiplecardinalityobject\",\r\n                                PropertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //more magic!\r\n                                EditedValue: {\r\n                                    ActionType: {\r\n                                        Id: \"b04370d9-3d4f-3981-61bb-ac9462a1fe65\", //magic?\r\n                                        Name: \"Record Assigned\"\r\n                                    },\r\n                                    Description: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    DescriptionDisplay: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    EnteredBy: session.user.Name,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Title: localization.RecordAssigned,\r\n                                    Image: app.config.iconPath + app.config.icons[\"Record Assigned\"]\r\n                                }\r\n                            }\r\n                        ];\r\n                        break;\r\n                    case \"ServiceRequest\":\r\n                        json = [\r\n                            {\r\n                                PropertyName: \"SupportGroup\",\r\n                                EditedValue: viewModel.assignedSupportGroup.Id,\r\n                                PropertyType: \"enum\"\r\n                            },\r\n                            {\r\n                                PropertyName: \"AssignedWorkItem\",\r\n                                EditedValue: viewModel.assignedWorkItem.baseId,\r\n                                PropertyType: \"singleCardinalityObject\",\r\n                                PropertyRelationshipId: \"15e577a3-6bf9-6713-4eac-ba5a5b7c4722\" //magic guid\r\n                            },\r\n                            {\r\n                                PropertyName: \"AppliesToWorkItem\",\r\n                                PropertyType: \"multiplecardinalityobject\",\r\n                                PropertyRelationshipId: \"79d27435-5917-b0a1-7911-fb2b678f32a6\", //more magic!\r\n                                EditedValue: {\r\n                                    ActionType: {\r\n                                        Id: \"b04370d9-3d4f-3981-61bb-ac9462a1fe65\", //magic?\r\n                                        Name: \"Record Assigned\"\r\n                                    },\r\n                                    Description: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    DescriptionDisplay: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    EnteredBy: session.user.Name,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Title: localization.RecordAssigned,\r\n                                    Image: app.config.iconPath + app.config.icons[\"Record Assigned\"]\r\n                                }\r\n                            }\r\n                        ];\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                return json;\r\n            }\r\n            var onExceedSelectionCount = function () {\r\n                kendo.ui.ExtAlertDialog.show({\r\n                    title: localizationHelper.localize('Warning'),\r\n                    message: localizationHelper.localize('BulkEditExceedMessage')\r\n                });\r\n            }\r\n            var onBulkEditSaveSuccess = function (taskVm) {\r\n                if (app.isMobile()) {\r\n                    var listControl = $(\"[data-control-id='\" + taskVm.targetControlId + \"']\").data('kendoListView');\r\n                    listControl.dataSource.query();\r\n                } else {\r\n                    //refresh the grid to get updated data.\r\n                    var targetGrid = $('#' + taskVm.targetControlId).data('kendoGrid');\r\n                    var targetGridState = app.gridUtils.savedState.getCurrentState(taskVm.targetControlId);\r\n                    app.lib.recheckGridState(targetGridState, targetGrid);\r\n                    targetGrid.dataSource.query(targetGridState);\r\n                }\r\n                app.lib.message.add(localizationHelper.localize('SaveSuccessMessage'), \"success\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var onBulkEditSaveFailure = function () {\r\n                app.lib.message.add(localizationHelper.localize('SaveErrorMessage'), \"danger\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var getOriginalFormValues = function () {\r\n                if (!_.isUndefined(vm.viewModel.AssignedWorkItem)) {\r\n                    originalAssignedName = vm.viewModel.AssignedWorkItem.DisplayName;\r\n                    originalAssignedId = vm.viewModel.AssignedWorkItem.BaseId;\r\n                }\r\n\r\n                if (callerType == \"Incident\") {\r\n                    originalSupportGroup = vm.viewModel.TierQueue;\r\n                    originalSupportName = (!_.isNull(vm.viewModel.TierQueue) && !_.isUndefined(vm.viewModel.TierQueue))\r\n                                                ? vm.viewModel.TierQueue.Name\r\n                                                : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel.TierQueue) && !_.isUndefined(vm.viewModel.TierQueue))\r\n                                                  ? vm.viewModel.TierQueue.Id\r\n                                                  : \"00000000-0000-0000-0000-000000000000\";\r\n                } else if (callerType == \"ServiceRequest\") {\r\n                    originalSupportGroup = vm.viewModel.SupportGroup;\r\n                    originalSupportName = (!_.isNull(vm.viewModel.SupportGroup) && !_.isUndefined(vm.viewModel.SupportGroup))\r\n                                          ? vm.viewModel.SupportGroup.Name : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel.SupportGroup) && !_.isUndefined(vm.viewModel.SupportGroup))\r\n                                            ? vm.viewModel.SupportGroup.Id : \"00000000-0000-0000-0000-000000000000\";\r\n                }\r\n                originalSupportGroup.Text = originalSupportGroup.Name; //Need this so mapping works later on :-( .  \r\n            }\r\n            var getUserDataSource = function (selectedSupportGroupId) {\r\n                var userDataSource = new kendo.data.DataSource({\r\n                    transport: {\r\n                        read: {\r\n                            url: app.lib.addUrlParam(\"/api/V3/User/GetSupportGroupUsers\", \"id\", selectedSupportGroupId),\r\n                            dataType: \"json\"\r\n                        }\r\n                    },\r\n                    schema: {\r\n                        model: {\r\n                            fields: {\r\n                                Id: { type: \"string\" },\r\n                                Name: { type: \"string\" }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                return userDataSource;\r\n            }\r\n            var setSupportGroupUsers = function (item, vmWindow, asssignToComboBox) {\r\n                if (_.isUndefined(item)) {\r\n                    return;\r\n                }\r\n\r\n                if (!isBulkEdit) {\r\n                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                        vm.viewModel.set(\"TierQueue\", item);\r\n                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                        vm.viewModel.set(\"SupportGroup\", item);\r\n                    }\r\n                }\r\n                vmWindow.set(\"userEnabled\", true);\r\n                vmWindow.set(\"okEnabled\", true);\r\n\r\n                vmWindow.set(\"assignToDataSource\", getUserDataSource(item.Id));\r\n                vmWindow.assignToDataSource.bind(\"change\", function (e) {\r\n                    asssignToComboBox.focus();\r\n                    asssignToComboBox.value(\"\");\r\n                    asssignToComboBox.input.attr(\"placeholder\", localization.ChooseOne);\r\n                });\r\n            }\r\n            var buildAndRender = {\r\n                windowEle: function () {\r\n                    //build the template for the window\r\n                    var built = _.template(windowTemplate);\r\n                    var view = new kendo.View(built(), { wrap: false });\r\n                    //add in hidden window\r\n                    callback(view.render());\r\n                    view.destroy();//there is some issue with the cloned element if we don't destroy the view\r\n                    return view;\r\n                },\r\n                taskListItem: function (properties, anchorViewModel, template) {\r\n                    $.extend(true, properties, node);\r\n                    //build the anchor and bind viewModel to it\r\n                    var builtAnchor = _.template(template);\r\n                    var anchorElm = new kendo.View(builtAnchor(properties), {\r\n                        wrap: false, model: anchorViewModel\r\n                    });\r\n                    //send anchor element back to caller (appended in the callback)\r\n                    callback(anchorElm.render());\r\n                    return anchorElm;\r\n                }\r\n            }\r\n            /* initialization code*/\r\n            function initTask() {\r\n                //build and render window\r\n                var modalView = buildAndRender.windowEle();\r\n                //save orig values for defined form\r\n                if (!isBulkEdit) {\r\n                    getOriginalFormValues();\r\n                }\r\n                //get the view models\r\n                var formTaskViewModel = getTaskViewModel(modalView);\r\n\r\n                if (isBulkEdit) {\r\n                    setAdditionBulkTaskProperties(formTaskViewModel);\r\n                    buildAndRender.taskListItem({ onClick: \"analystByGroup\", toolTipMessage: localizationHelper.localize('MustSelectSameType') }, formTaskViewModel, drawerTaskTemplate);\r\n                    /*subscribe to events*/\r\n                    if (!app.isMobile()) {\r\n                        //called on grid row clicks\r\n                        app.events.subscribe(\"gridChange\", function(event, grid) {\r\n                            formTaskViewModel.onTargetControlChange(grid);\r\n                            formTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                        });\r\n\r\n                        //for initial grid load listen to this event so we can set persisted state information\r\n                        app.events.subscribe(\"gridBound\", function(event, grid) {\r\n                            formTaskViewModel.onTargetControlChange(grid);\r\n                            formTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                        });\r\n                    } else {\r\n                        //called on mobile listview checkbox selection\r\n                        app.events.subscribe(\"mobileWiListSelectionChange\", function (event, listView) {\r\n                            if (!_.isUndefined(listView)) {\r\n                                formTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                                formTaskViewModel.targetControlId = listView.controlId;\r\n                            }\r\n                        });\r\n                        app.events.subscribe(\"mobileWiListInit\", function (event, listView) {\r\n                            if (!_.isUndefined(listView)) {\r\n                                formTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                                formTaskViewModel.targetControlId = listView.controlId;\r\n                            }\r\n                        });\r\n                    }\r\n                    /*END subscribe to events*/\r\n\r\n                    \r\n                } else {\r\n                    //build and render the link\r\n                    buildAndRender.taskListItem({ Target: \"analystByGroup\" }, formTaskViewModel, anchorTemplate);\r\n                }\r\n\r\n            };\r\n\r\n            /* END initialization code*/\r\n\r\n            //do it\r\n            initTask();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/popups/notificationPopup/view.html',[],function () { return '<div class=\"popupNotification\"></div>';});\n\n","/**\r\nAssign To Me\r\n**/\r\n\r\ndefine('forms/tasks/assignToMe/controller',['require','text!forms/tasks/anchor/view.html','text!forms/popups/notificationPopup/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var notificationTpl = require(\"text!forms/popups/notificationPopup/view.html\");\r\n\r\n    var definition = {\r\n        notificationTemplate: notificationTpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(notificationTpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var viewModel = kendo.observable({\r\n                displayName: node.Configs.displayName,\r\n                baseId: node.Configs.baseId,\r\n                target: node.Configs.target,\r\n                assignToMe: function () {\r\n                    //set AssingedWorkitem to current user\r\n                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", this.baseId);\r\n                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", this.displayName);\r\n\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.AssignedToMeNotificationMessage, \"This workitem is assigned to {0}\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"assignToMe\"\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/changeStatus/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"statusPicker\" />\\r\\n            <div id=\"resolutionPicker\" data-bind=\"visible: showResolution\" />\\r\\n            <div id=\"resolutionDescription\" data-bind=\"visible: showResolution\" />\\r\\n            <div id=\"comment\" data-bind=\"visible: showComment\" />\\r\\n            <div id=\"autoResolve\" data-bind=\"visible: showAutoResolve\" />\\r\\n            <div id=\"letAnalystDecide\" data-bind=\"visible: letAnalystDecide\" />\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/tasks/changeStatus/view.drawer.html',[],function () { return '<div class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <!-- status picker for IR or SR statuses -->\\r\\n            <div class=\"form-group\">\\r\\n                <label class=\"control-label\" data-bind=\"localize: Status\">\\r\\n                </label>\\r\\n                <div class=\"form-control form-control-picker input-sm\"\\r\\n                     data-role=\"Status\"\\r\\n                     data-url=\"/api/V3/Enum/GetList\"\\r\\n                     data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                     data-disabled=\"false\"\\r\\n                     data-bind=\"ciresonDropDownTree: wiStatusTypeId, value: newStatusObj, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n            </div>\\r\\n            <!-- resolution category picker for IR -->\\r\\n            <div data-bind=\"visible: irStatusResolved\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: ResolutionCategory\"></span> (<span data-bind=\"localize: Required\"></span>)\\r\\n                    </label>\\r\\n                    <div class=\"form-control form-control-picker input-sm\"\\r\\n                         data-role=\"Resolution\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-disabled=\"false\"\\r\\n                         data-bind=\"ciresonDropDownTree: resolutionResultEnumId, value: newResolutionId, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n\\r\\n                </div>\\r\\n                <!-- resolution description for IR -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\" data-bind=\"localize: ResolutionDescription\">\\r\\n                    </label>\\r\\n                    <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                              data-bind=\"value: resolutionDescription\" maxlength=\"4000\"></textarea>\\r\\n                </div>\\r\\n\\r\\n                <!-- resolve child incidents: let analyst decide option-->\\r\\n                <div class=\"form-group\" data-bind=\"visible: irResolveChildOption\">\\r\\n                    <div class=\"checkbox  checkbox-inline \">\\r\\n                        <input type=\"checkbox\" name=\"resolveChildIncident\" data-bind=\"checked: resolveChildIncident\">\\r\\n                        <label class=\"control-label\" for=\"resolveChildIncident\">\\r\\n                            <span data-bind=\"localize: ResolveChildIncidentMessage\" />\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div data-bind=\"visible: srStatusCompleted\">\\r\\n                <!-- SR Implementation Results -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: ImplementationResults\"></span>\\r\\n                    </label>\\r\\n                    <div class=\"form-control form-control-picker input-sm\"\\r\\n                         data-role=\"Resolution\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-disabled=\"false\"\\r\\n                         data-bind=\"ciresonDropDownTree: resolutionResultEnumId, value: newResultId, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n\\r\\n                </div>\\r\\n                <!-- SR Implementation Notes -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: Implementationnotes\"></span> (<span data-bind=\"localize: Required\"></span>)\\r\\n                    </label>\\r\\n                    <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                              data-bind=\"value: resultNote\" maxlength=\"4000\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- comment for SR in \\'Cancelled\\' status -->\\r\\n            <div class=\"form-group\" data-bind=\"visible: srStatusCancelled\">\\r\\n                <label class=\"control-label\" data-bind=\"localize: Comment\">\\r\\n                </label>\\r\\n                <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                          data-bind=\"value: resultComment\" maxlength=\"4000\"></textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\" class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled,\\r\\n                           events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\" class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/fields/longstring/view.html',[],function () { return '<div class=\"form-group <%= visible %>\" style=\"\">\\r\\n\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <textarea name=\"<%= PropertyName %>\"\\r\\n              class=\"k-textbox form-control input-sm\"\\r\\n              rows=\"<%= Rows %>\"\\r\\n              data-bind=\"value: <%= PropertyName %><% if ( LimitLength ){ %>, events : { blur: view.longStringController.CheckLength }<% } %>\"\\r\\n        <% if ( LimitLength ){ %>\\r\\n        maxlength=\"<%= MaxLength %>\"\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    </textarea>\\r\\n    <% if ( LimitLength ){ %>\\r\\n    <p class=\"help-block validation-summary-errors\" style=\"display: none;\"><%= localization.MaxLengthError.replace(\"{0}\", MaxLength) %></p>\\r\\n    <% } %>\\r\\n</div>\\r\\n<script>\\r\\n    $(\\'textarea[name=ResolutionDescription]\\').removeClass(\\'form-control\\');\\r\\n</script>\\r\\n';});\n\n","/**\r\nLONGSTRING\r\n**/\r\n\r\ndefine('forms/fields/longstring/controller',['require','text!forms/fields/longstring/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/longstring/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.longStringController = {\r\n                CheckLength: function checkLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n            vm.view.buildLongStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength,\r\n                    Rows: 10,\r\n                    visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n                };\r\n                $.extend(true, properties, node);\r\n                //console.log(properties);\r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildLongStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\r\n\n","\ndefine('text!forms/fields/boolean/view.html',[],function () { return '<div class=\"form-group <%= visible %>\">\\r\\n    <% if ( !Inline ){ %>\\r\\n    <label class=\"control-label\" data-localize=\"<%= PropertyDisplayName %>\"><span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span></label>\\r\\n    <% } %>\\r\\n\\r\\n    <div class=\"checkbox <% if ( Inline ){ %> checkbox-inline <% } else { %> checkbox-block <% } %>\">\\r\\n        <input type=\"checkbox\"\\r\\n               name=\"<%= PropertyName %>\"\\r\\n               id=\"<%= PropertyName %>\"\\r\\n               data-bind=\"checked: <%= PropertyName %>\"<% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        />\\r\\n\\r\\n\\r\\n        <label class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n            <% if ( Inline ){ %>\\r\\n            <span data-localize=\"<%= PropertyDisplayName %>\"></span>\\r\\n            <% } %>\\r\\n        </label>\\r\\n\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nBOOLEAN\r\n**/\r\n\r\ndefine('forms/fields/boolean/controller',['require','text!forms/fields/boolean/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/boolean/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Inline: node.Inline || false,\r\n                visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n        };\r\n            \r\n            \r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/changeStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/changeStatus/view.html','text!forms/tasks/changeStatus/view.drawer.html','forms/fields/enum/controller','forms/fields/longstring/controller','forms/fields/boolean/controller','text!forms/tasks/drawerTask/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchorTemplate = require(\"text!forms/tasks/anchor/view.html\");\r\n    var changeStatusTemplate = require(\"text!forms/tasks/changeStatus/view.html\");\r\n    var changeStatusDrawerTemplate = require(\"text!forms/tasks/changeStatus/view.drawer.html\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n    var txtAreaControl = require(\"forms/fields/longstring/controller\");\r\n    var checkBoxControl = require(\"forms/fields/boolean/controller\");\r\n    var drawerTaskTemplate = require(\"text!forms/tasks/drawerTask/view.html\");\r\n\r\n    var definition = {\r\n        template: changeStatusTemplate,\r\n        build: function (vm, node, callback) {\r\n            /*\r\n             * Change mustSelectLeafNode and/or showEnumPath to modify\r\n             * bulk status change enum picker behavior. \r\n             */\r\n            var mustSelectLeafNode = false;\r\n            var showEnumPath = false;\r\n\r\n            //for problem's autoresolve \r\n            if (vm.type == \"Problem\" && _.isUndefined(vm.viewModel.IsAutoResolve)) {\r\n                vm.viewModel.set(\"IsAutoResolve\", vm.viewModel.AutoResolve);\r\n            }\r\n\r\n            /* variables */\r\n            var resolveChildIncidentSettings;\r\n            if (vm.type != \"BulkEdit\") {\r\n                //used for cancel click event on form task\r\n                var originalVm = {\r\n                    Status: _.clone(vm.viewModel.Status),\r\n                    ResolutionCategory: !_.isUndefined(vm.viewModel.ResolutionCategory) ? _.clone(vm.viewModel.ResolutionCategory) : null,\r\n                    ResolutionDescription: _.clone(vm.viewModel.ResolutionDescription),\r\n                    ChildWorkItem: _.clone(vm.viewModel.ChildWorkItem),\r\n                    Notes: _.clone(vm.viewModel.Notes),\r\n                    ImplementationResults: !_.isUndefined(vm.viewModel.ImplementationResults) ? _.clone(vm.viewModel.ImplementationResults) : null,\r\n                    RelatesToWorkItem: _.clone(vm.viewModel.RelatesToWorkItem),\r\n                    Resolution: !_.isUndefined(vm.viewModel.Resolution) ? _.clone(vm.viewModel.Resolution) : null,\r\n                    AutoResolve: !_.isUndefined(vm.viewModel.AutoResolve) ? _.clone(vm.viewModel.AutoResolve) : false,\r\n                }\r\n            }\r\n            var workItemStatuses = app.constants.workItemStatuses;\r\n            //map all the status constants to shorter local vars. used in getFormTaskViewModel() and getFormTaskChangeRules()\r\n            var incidentResolved = workItemStatuses.Incident.Resolved;\r\n            var incidentActive = workItemStatuses.Incident.Active;\r\n            var incidentClosed = workItemStatuses.Incident.Closed;\r\n            var incidentActivePending = workItemStatuses.Incident.Pending;\r\n            var serviceRequestCancelled = workItemStatuses.ServiceRequest.Cancelled;\r\n            var serviceRequestCompleted = workItemStatuses.ServiceRequest.Completed;\r\n            var serviceRequestSubmitted = workItemStatuses.ServiceRequest.Submitted;\r\n            var serviceRequestInProgress = workItemStatuses.ServiceRequest.InProgress;\r\n            var serviceRequestOnHold = workItemStatuses.ServiceRequest.OnHold;\r\n            var serviceRequestFailed = workItemStatuses.ServiceRequest.Failed;\r\n            var serviceRequestClosed = workItemStatuses.ServiceRequest.Closed;\r\n            var changeRequestFailed = workItemStatuses.ChangeRequest.Failed;\r\n            var changeRequestClosed = workItemStatuses.ChangeRequest.Closed;\r\n            var changeRequestInProgress = workItemStatuses.ChangeRequest.InProgress;\r\n            var changeRequestOnHold = workItemStatuses.ChangeRequest.OnHold;\r\n            var changeRequestCancelled = workItemStatuses.ChangeRequest.Cancelled;\r\n            var changeRequestSubmitted = workItemStatuses.ChangeRequest.Submitted;\r\n            var changeRequestCompleted = workItemStatuses.ChangeRequest.Completed;\r\n            var problemResolved = workItemStatuses.Problem.Resolved;\r\n            var problemClosed = workItemStatuses.Problem.Closed;\r\n            var releaseRecordClosed = workItemStatuses.ReleaseRecord.Closed;\r\n            var releaseRecordCancelled = workItemStatuses.ReleaseRecord.Cancelled;\r\n            var releaseRecordCompleted = workItemStatuses.ReleaseRecord.Completed;\r\n            var releaseRecordFailed = workItemStatuses.ReleaseRecord.Failed;\r\n            var releaseRecordEditing = workItemStatuses.ReleaseRecord.Editing;\r\n            var releaseRecordOnHold = workItemStatuses.ReleaseRecord.OnHold;\r\n            var releaseRecordInProgress = workItemStatuses.ReleaseRecord.InProgress;\r\n            /* END variables */\r\n\r\n\r\n            /* functions */\r\n            //main viewModel that holds ALL THE THINGS\r\n            var getFormTaskViewModel = function (modalEle) {\r\n                return kendo.observable({\r\n                    //'changeStatus' function is bound to anchor click event via data-bind=\"click: blahblah\"\r\n                    changeStatus: function () {\r\n                        var modalWindowEle = modalEle.element.clone(); //we have the element in memory so no need use a selector\r\n\r\n                        var modalWindowControl = modalWindowEle.kendoCiresonWindow({\r\n                            title: localization.ChangeStatusTask,\r\n                            width: 600,\r\n                            height: 480,\r\n                            actions: [],\r\n                            //activate trigger when window open animation is complete.\r\n                            activate: function () {\r\n                                var selectedWiType = modalWindowViewModel.type;\r\n                                var currentStatusId = vm.viewModel.Status.Id;\r\n                                onModalActivate(selectedWiType, currentStatusId, statusTreeViewControl, statusDropDownControl, modalWindowViewModel.enumId);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //this view Model is bound to the window element\r\n                        var modalWindowViewModel = kendo.observable({\r\n                            enumId: node.Configs.statusEnumId,\r\n                            resolutionCategoryEnumId: node.Configs.resolutionCategoryEnumId,\r\n                            type: node.Configs.type,\r\n                            resolveChildSettings: null,\r\n                            letAnalystDecide: false,\r\n                            workItemModel: vm.viewModel,\r\n                            okEnabled: false,\r\n                            requireResolution: false,\r\n                            resolveChildIncident: true,\r\n                            okClick: function () {\r\n                                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                if (_.isString(vm.viewModel.Status.Name) && vm.viewModel.Status.Name.length < 1) {\r\n                                    vm.viewModel.set(\"Status\", { Id: originalVm.Status.Id, Name: originalVm.Status.Name });\r\n                                } else if (this.requireResolution && (!_.isUndefined(vm.viewModel.ResolutionCategory) && _.isNull(vm.viewModel.ResolutionCategory.Id))) {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(localization.RequestCategoryRequiredError);\r\n                                } else if (this.requireResolution && _.isNull(vm.viewModel.Notes) && (vm.type == \"ServiceRequest\")) {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(localization.ImplementationNotesRequiredError);\r\n                                } else if (vm.viewModel.Status.Id === incidentResolved) { //resolved incident\r\n                                    //set resolved date\r\n                                    vm.viewModel.set(\"ResolvedDate\", new Date().toISOString());\r\n                                    var resDateEle = $(\"input[name='ResolvedDate']\");\r\n                                    if (resDateEle.attr('data-control') == 'datePicker') {\r\n                                        resDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (resDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        resDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //add to action log\r\n                                   if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordResolved(vm.viewModel.ResolutionDescription));\r\n                                    }\r\n                                    //set resolved by user \r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: session.user.Id };\r\n\r\n                                    //if incident is a parent, check if we need to resolve its child incidents\r\n                                    if (vm.viewModel.IsParent && (this.resolveChildSettings.ResolveChildIncident || (this.resolveChildSettings.ResolvedLetAnalystDecide && this.resolveChildIncident)))\r\n                                        resolveChildIncidents(this.resolveChildSettings);\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === incidentClosed || vm.viewModel.Status.Id === serviceRequestClosed || vm.viewModel.Status.Id === problemClosed) { //closed IR or closed SR\r\n                                    //set closed date\r\n                                    vm.viewModel.set(\"ClosedDate\", new Date().toISOString());\r\n                                    var closeDateEle = $(\"input[name='ClosedDate']\");\r\n                                    if (closeDateEle.attr('data-control') == 'datePicker') {\r\n                                        closeDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (closeDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        closeDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //set closed by user \r\n                                    switch (vm.viewModel.Status.Id) {\r\n                                        case problemClosed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            break;\r\n                                        case incidentClosed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordClosed());\r\n                                            break;\r\n                                        case serviceRequestClosed:\r\n                                            vm.viewModel.ClosedByUser = { BaseId: session.user.Id };\r\n                                            break;\r\n                                    }\r\n                                    \r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                }\r\n                                else if (vm.viewModel.Status.Id === incidentActive) { //activate incident\r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: null };\r\n                                    vm.viewModel.ResolutionCategory.set(\"Id\", null);\r\n                                    vm.viewModel.ResolutionCategory.set(\"Name\", \"\");\r\n                                    vm.viewModel.set(\"ResolutionDescription\", null);\r\n                                    vm.viewModel.set(\"ResolvedDate\", null);\r\n\r\n                                    //add to action log\r\n                                    var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                    if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordActivated());\r\n                                    }\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === serviceRequestCompleted) { //completed service request\r\n                                    //set completed date\r\n                                    vm.viewModel.set(\"CompletedDate\", new Date().toISOString());\r\n                                    var comDateEle = $(\"input[name='CompletedDate']\");\r\n                                    if (comDateEle.attr('data-control') == 'datePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (comDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === problemResolved) { //resolved problem\r\n                                    //set resolve date\r\n                                    vm.viewModel.set(\"ResolvedDate\", new Date().toISOString());\r\n                                    var comDateEle = $(\"input[name='ResolvedDate']\");\r\n                                    if (comDateEle.attr('data-control') == 'datePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (comDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //set resolved by user \r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: session.user.Id };\r\n\r\n                                    if (vm.viewModel.IsAutoResolve) {\r\n                                        resolveRelatedWorkItems();\r\n                                    }\r\n\r\n                                    vm.viewModel.set(\"AutoResolve\", vm.viewModel.IsAutoResolve);\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                //reset to original values\r\n                                vm.viewModel.set(\"Status\", { Id: originalVm.Status.Id, Name: originalVm.Status.Name });\r\n                                if (node.Configs.type === \"Incident\") {\r\n                                    vm.viewModel.set(\"ResolutionCategory\", { Id: originalVm.ResolutionCategory.Id, Name: originalVm.ResolutionCategory.Name });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", originalVm.ResolutionDescription);\r\n                                    vm.viewModel.set(\"ChildWorkItem\", originalVm.ChildWorkItem);\r\n                                }\r\n                                if (node.Configs.type === \"ServiceRequest\") {\r\n                                    vm.viewModel.set(\"ImplementationResults\", { Id: originalVm.ImplementationResults.Id, Name: originalVm.ImplementationResults.Name });\r\n                                    vm.viewModel.set(\"Notes\", originalVm.Notes);\r\n                                }\r\n                                if (node.Configs.type === \"Problem\") {\r\n                                    vm.viewModel.set(\"Resolution\", { Id: originalVm.Resolution.Id, Name: originalVm.Resolution.Name });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", originalVm.ResolutionDescription);\r\n                                    vm.viewModel.set(\"RelatedWorkItems\", originalVm.RelatesToWorkItem);\r\n                                    vm.viewModel.set(\"AutoResolve\", originalVm.AutoResolve);\r\n                                    vm.viewModel.set(\"IsAutoResolve\", originalVm.AutoResolve);\r\n                                }\r\n                                modalWindowControl.close();\r\n                            },\r\n                            showComment: vm.viewModel.Status.Id == serviceRequestCancelled,\r\n                            showResolution: (vm.viewModel.Status.Id == incidentResolved || vm.viewModel.Status.Id == serviceRequestCompleted || vm.viewModel.Status.Id == problemResolved),\r\n                            showAutoResolve: (vm.viewModel.Status.Id == problemResolved)\r\n                        });\r\n\r\n                        //bind window element to window viewModel\r\n                        kendo.bind(modalWindowEle, modalWindowViewModel);\r\n\r\n                        //create status enumPicker\r\n                        createStatusPicker(modalWindowViewModel, modalWindowEle);\r\n                        var statusDropDownControl = modalWindowEle.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                        var statusTreeViewControl = modalWindowEle.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n\r\n                        //bind status picker changes events\r\n                        statusDropDownControl.bind(\"change\", function (e) {\r\n                            //make sure button is disabled again\r\n                            vm.viewModel.set(\"okEnabled\", false);\r\n                            enableResolutionSettings(vm.viewModel.Status.Id, modalWindowViewModel);\r\n                        });\r\n                        statusTreeViewControl.bind(\"change\", function (e) {\r\n                            //make sure button is disabled again\r\n                            vm.viewModel.set(\"okEnabled\", false);\r\n                            enableResolutionSettings(vm.viewModel.Status.Id, modalWindowViewModel);\r\n                        });\r\n\r\n\r\n                        /*\r\n                         * conditionally added fields\r\n                         */\r\n\r\n                        if (modalWindowViewModel.type === \"Incident\") {\r\n                            createIncidentResolutionFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        if (modalWindowViewModel.type === \"ServiceRequest\") {\r\n                            createResultFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        if (modalWindowViewModel.type === \"Problem\") {\r\n                            createProblemResolutionFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        /*\r\n                         * END conditionally added fields\r\n                         */\r\n\r\n\r\n                        modalWindowEle.removeClass('hide');\r\n                        modalWindowEle.show();\r\n                        modalWindowControl.open();\r\n                    }\r\n                });\r\n            };\r\n\r\n            var getDrawerTaskViewModel = function (modalView) {\r\n                //drawerTaskVm is the viewModel that sits between the modal window and the page controls.\r\n                var drawerTaskVm = kendo.observable({\r\n                    currentSelection: [],\r\n                    currentSelectionOfParents: [],\r\n                    containsParents: false,\r\n                    selectedWorkItem: {\r\n                        type: '',\r\n                        trimmedType: '',\r\n                        projectionId: '',\r\n                        currentStatusId: '',\r\n                        currentStatusName: '',\r\n                        statusTypeId: '',\r\n                        resolutionResultEnumId: ''\r\n                    },\r\n                    openModal: function () {\r\n                        if (!this.isEnabled) {\r\n                            return;\r\n                        }\r\n                        var taskVm = this;\r\n                        var modalEle = modalView.element.clone();\r\n                        var modalControl = modalEle.kendoCiresonWindow({\r\n                            title: localization.ChangeStatusTask,\r\n                            actions: [],\r\n                            activate: function () {\r\n                                var selectedWiType = taskVm.selectedWorkItem.trimmedType;\r\n                                var currentStatusId = taskVm.selectedWorkItem.currentStatusId;\r\n                                onModalActivate(selectedWiType, currentStatusId, statusTreeViewControl, statusDropDownControl, taskVm.selectedWorkItem.statusTypeId);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //viewModel for the kendo window control and form\r\n                        var modalViewModel = kendo.observable({\r\n                            selectedWorkItems: taskVm.currentSelection,\r\n                            //parent/child IR fields\r\n                            selectedParents: taskVm.currentSelectionOfParents,\r\n                            resolveChildSettings: null,\r\n                            resolveChildIncident: true,\r\n                            //edited form fields\r\n                            newStatusObj: '',                //IR|SR work item status (enum, required)\r\n                            newResolutionId: '',            //IR 'Resolution' (enum, required)\r\n                            resolutionDescription: '',      //IR 'Resolution Description' (textarea)\r\n                            newResultId: '',                //SR Implementation Results (enum)\r\n                            resultNote: '',                 //SR 'Completed' status 'Implementation Notes' (textarea, required)\r\n                            resultComment: '',              //SR 'Cancelled' status 'Comment' (textarea)\r\n                            showPath: showEnumPath,\r\n                            leafNodeOnly: mustSelectLeafNode,\r\n                            //wiStatusTypeId is the enum id for IR or SR used to get there wi status, resolutionResultEnumId is the enum id for IR resolution or SR result\r\n                            wiStatusTypeId: taskVm.selectedWorkItem.statusTypeId,\r\n                            resolutionResultEnumId: taskVm.selectedWorkItem.resolutionResultEnumId,\r\n\r\n                            //toggles for fields required and visible\r\n                            irStatusResolved: false,\r\n                            srStatusCompleted: false,\r\n                            srStatusCancelled: false,\r\n                            irCategoryRequired: false,\r\n                            srNotesRequired: false,\r\n                            irResolveChildOption: false,\r\n\r\n                            //button events/logic\r\n                            okEnabled: false,\r\n                            okClick: function () {\r\n\r\n                                var windowViewModel = this;\r\n                                var isValid = bulkEditFormIsValid(windowViewModel, modalEle);\r\n                                if (isValid) {\r\n                                    //check if we need to handle child wi resolution\r\n                                    if (windowViewModel.irStatusResolved && (resolveChildIncidentSettings.ResolveChildIncident || (windowViewModel.irResolveChildOption && windowViewModel.resolveChildIncident)) && taskVm.containsParents) {\r\n                                        //handles post for IR-resolved parents and children WIs\r\n                                        postBulkEditChangesWithChildren(taskVm, windowViewModel, modalControl);\r\n                                    } else {\r\n                                        //handles post for everything else\r\n                                        var data = {\r\n                                            ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                            UpdateServiceManagement: true,\r\n                                            ItemIds: _.pluck(windowViewModel.selectedWorkItems, 'BaseId'),\r\n                                            EditedFields: getDrawerTaskEditedFields(windowViewModel)\r\n                                        }\r\n\r\n                                        postBulkEditChanges(data, taskVm, modalControl);\r\n                                    }\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                modalControl.close();\r\n                            }\r\n                        });\r\n\r\n                        kendo.bind(modalEle, modalViewModel);\r\n\r\n                        //create status enumPicker && bind change events\r\n                        var statusDropDownControl = modalEle.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                        var statusTreeViewControl = modalEle.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n                        function handleStatusControlChange() {\r\n                            var item = modalViewModel.get(\"newStatusObj\");\r\n                            if (item) {\r\n                                toggleAdditionalFields(item.Id, taskVm.selectedWorkItem.currentStatusId, modalViewModel);\r\n                            }\r\n                        }\r\n                        statusDropDownControl.bind(\"change\", function (e) {\r\n                             handleStatusControlChange();\r\n                        });\r\n                        statusTreeViewControl.bind(\"change\", function (e) {\r\n                            handleStatusControlChange();\r\n                        });\r\n                        \r\n                        //set vis/require depending on the current status \r\n                        if (taskVm.selectedWorkItem.trimmedType === \"Incident\" && taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.Incident.Resolved) {\r\n                            modalViewModel.set('irStatusResolved', true);\r\n                            modalViewModel.set('irCategoryRequired', true);\r\n                        }\r\n                        if (taskVm.selectedWorkItem.trimmedType === \"ServiceRequest\") {\r\n                            if (taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.ServiceRequest.Completed) {\r\n                                modalViewModel.set('srStatusCompleted', true);\r\n                                modalViewModel.set('srStatusCancelled', false);\r\n                            } else if (taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.ServiceRequest.Cancelled) {\r\n                                modalViewModel.set('srStatusCancelled', true);\r\n                                modalViewModel.set('srStatusCompleted', false);\r\n                            }\r\n                        }\r\n\r\n                        //show the window\r\n                        modalEle.removeClass('hide');\r\n                        modalEle.show();\r\n                        modalControl.open();\r\n                    },\r\n                    isEnabled: false,\r\n                    showTooltip: true,\r\n                    setEnabled: function (enabled) {\r\n                        this.set('isEnabled', enabled);\r\n                        this.set('showTooltip', !enabled);\r\n                    },\r\n                    targetControlId: '',\r\n                    onTargetControlChange: function (grid) {\r\n                        //empty out parentitems and set to false, readded below if applicable\r\n                        drawerTaskVm.set('currentSelectionOfParents', []);\r\n                        drawerTaskVm.set('containsParents', false);\r\n\r\n                        var selectedDataItems = [];\r\n                        if (app.isMobile()) {\r\n                            //grid is selected items array when called from mobile\r\n                            selectedDataItems = grid;\r\n                        } else {\r\n                            selectedDataItems = grid.select().map(function (index, item) {\r\n                                return grid.dataItem($(item));\r\n                            }).toArray();\r\n                        }\r\n\r\n                        //we only update 10 items at a time\r\n                        if (selectedDataItems.length > 10) {\r\n                            this.onExceedSelectionCount();\r\n                        }\r\n\r\n                        drawerTaskVm.set('currentSelection', selectedDataItems);\r\n\r\n                        //if nothing is selected disabled the item\r\n                        if (selectedDataItems.length <= 0 || selectedDataItems.length > 10) {\r\n                            drawerTaskVm.setEnabled(false);\r\n                        } else {\r\n                            var selectedTypes = _.pluck(selectedDataItems, \"WorkItemType\");\r\n                            var selectedStatusIds = _.pluck(selectedDataItems, \"StatusId\");\r\n                            var selectedStatusNames = _.pluck(selectedDataItems, \"Status\");\r\n\r\n                            //return false if multiple selected, otherwise returns string values\r\n                            var singleSelectedType = _.reduce(selectedTypes, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            drawerTaskVm.set(\"selectedWorkItem.type\", singleSelectedType);\r\n\r\n                            //return false if multiple selected, otherwise returns string values\r\n                            var singleSelectedStatusId = _.reduce(selectedStatusIds, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            var singleSelectedStatusName = _.reduce(selectedStatusNames, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            drawerTaskVm.set(\"selectedWorkItem.currentStatusId\", singleSelectedStatusId);\r\n                            drawerTaskVm.set(\"selectedWorkItem.currentStatusName\", singleSelectedStatusName);\r\n\r\n\r\n                            if (singleSelectedStatusId && singleSelectedType) {\r\n                                switch (singleSelectedType) {\r\n                                    case \"System.WorkItem.ServiceRequest\":\r\n                                        drawerTaskVm.setTrimmedWiType();\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemServiceRequestViewModel);\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', app.constants.workItemStatuses.ServiceRequest.Id);\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', app.constants.enumPickerIds.ServiceRequestImplementationResults);\r\n\r\n                                        //if SR is closed do not allow status change from here (TFS 3560)\r\n                                        if (singleSelectedStatusName === \"Closed\") {\r\n                                            drawerTaskVm.setEnabled(false);\r\n                                        } else {\r\n                                            drawerTaskVm.setEnabled(true);\r\n                                        }\r\n\r\n                                        break;\r\n                                    case \"System.WorkItem.Incident\":\r\n                                        var parentItems = [];\r\n                                        _.each(selectedDataItems, function (workItem) {\r\n                                            if (workItem.IsParent) {\r\n                                                drawerTaskVm.set('containsParents', true);\r\n                                                parentItems.push(workItem);\r\n                                            }\r\n                                        });\r\n                                        drawerTaskVm.set('currentSelectionOfParents', parentItems);\r\n\r\n                                        drawerTaskVm.setTrimmedWiType();\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemIncidentViewModel);\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', app.constants.workItemStatuses.Incident.Id);\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', app.constants.enumPickerIds.IncidentResolution);\r\n                                        drawerTaskVm.setEnabled(true);\r\n                                        break;\r\n                                    default:\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', '');\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', '');\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', '');\r\n                                        // not a supported bulk edit Type, disable the edit button\r\n                                        drawerTaskVm.setEnabled(false);\r\n                                }\r\n                            } else {\r\n                                //not same type && status\r\n                                drawerTaskVm.setEnabled(false);\r\n                            }\r\n                        }\r\n                    },\r\n                    setTrimmedWiType: function () {\r\n                        this.set('selectedWorkItem.trimmedType', this.selectedWorkItem.type.split(/[\\s.]+/).pop());\r\n                    },\r\n                    onExceedSelectionCount: function() {\r\n                        kendo.ui.ExtAlertDialog.show({\r\n                            title: localizationHelper.localize('Warning'),\r\n                            message: localizationHelper.localize('BulkEditExceedMessage')\r\n                        });\r\n                    }\r\n                });\r\n\r\n                return drawerTaskVm;\r\n            };\r\n\r\n            //executes when modal dialog is opening\r\n            var onModalActivate = function (selectedWiType, currentStatusId, treeControl, dropDownControl, statusEnumId) {\r\n                //determine allowed status changes based on current type and status\r\n                var changeRules = getFormTaskChangeRules();\r\n                var changeRulesFilter = changeRules[selectedWiType][currentStatusId];\r\n                \r\n                //since Incident can have custom enums we need to check here if no rules were set then its not resolved\r\n                if (selectedWiType == \"Incident\" && _.isUndefined(changeRulesFilter)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"neq\", value: app.constants.workItemStatuses.Incident.Closed };\r\n                }\r\n\r\n                //apply allowed status filtering\r\n                treeControl.dataSource.options.serverFiltering = false;\r\n                treeControl.dataSource.filter(changeRulesFilter);\r\n\r\n                //reassign dropdown datasource with filtered data so that users will not be able to access restricted status by typing\r\n                $.get(\"/api/V3/Enum/GetFlatList/\", { id: statusEnumId, itemFilter: \"\" }, function (data) {\r\n                    var comboDataSource = new kendo.data.DataSource();\r\n                    comboDataSource.data(data);\r\n                    comboDataSource.filter(changeRulesFilter);\r\n                    if (comboDataSource.view().length > 0) {\r\n                        dropDownControl.setDataSource(comboDataSource.view());\r\n                    }\r\n                });\r\n                \r\n                resolveChildIncidentSettings = getResolveChildIncidentSettings();\r\n            };\r\n\r\n            //template .build() and view.renderererers.\r\n            var buildAndRender = {\r\n                windowEle: function (windowTemplate) {\r\n                    //build the template for the window\r\n                    var builtModal = _.template(windowTemplate);\r\n                    var ele = new kendo.View(builtModal(), { wrap: false });\r\n                    //send hidden window back to caller (appended in the callback)\r\n                    callback(ele.render());\r\n                    return ele;\r\n                },\r\n                taskListItem: function (properties, anchorViewModel, template) {\r\n                    $.extend(true, properties, node);\r\n                    //build the anchor and bind viewModel to it\r\n                    var builtAnchor = _.template(template);\r\n                    var anchorElm = new kendo.View(builtAnchor(properties), {\r\n                        wrap: false, model: anchorViewModel\r\n                    });\r\n                    //send anchor element back to caller (appended in the callback)\r\n                    callback(anchorElm.render());\r\n                    return anchorElm;\r\n                }\r\n            }\r\n            //creators of controls in the window\r\n            var createProblemResolutionFields = function (modalWindowViewModel, modalWindowEle) {\r\n                var resolutionProperties = {\r\n                    PropertyName: \"Resolution\",\r\n                    PropertyDisplayName: \"Resolution\",\r\n                    Required: false,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), resolutionProperties, vm.viewModel);\r\n\r\n                var implementationNotesProperties = {\r\n                    PropertyName: \"ResolutionDescription\",\r\n                    PropertyDisplayName: \"ResolutionDescription\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), implementationNotesProperties, vm.viewModel);\r\n\r\n                var autoResolveProperties = {\r\n                    PropertyName: \"IsAutoResolve\",\r\n                    PropertyDisplayName: \"ProblemAutoResolveIncident\",\r\n                    Inline: true,\r\n                    Disabled: false\r\n                };\r\n                buildCheckbox(modalWindowEle.find(\"#autoResolve\"), autoResolveProperties, vm.viewModel);\r\n            };\r\n            var createResultFields = function (modalWindowViewModel, modalWindowEle) {\r\n                var implementationResultProperties = {\r\n                    PropertyName: \"ImplementationResults\",\r\n                    PropertyDisplayName: \"ImplementationResults\",\r\n                    Required: false,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), implementationResultProperties, vm.viewModel);\r\n\r\n                var implementationNotesProperties = {\r\n                    PropertyName: \"Notes\",\r\n                    PropertyDisplayName: \"Implementationnotes\",\r\n                    Required: true,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), implementationNotesProperties, vm.viewModel);\r\n\r\n                var commentProperties = {\r\n                    PropertyName: \"Notes\",\r\n                    PropertyDisplayName: \"Comment\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#comment\"), commentProperties, vm.viewModel);\r\n            };\r\n            var createIncidentResolutionFields = function (modalWindowViewModel, modalWindowEle) {\r\n                //resolution picker\r\n                var resolutionProperties = {\r\n                    PropertyName: \"ResolutionCategory\",\r\n                    PropertyDisplayName: \"ResolutionCategory\",\r\n                    Required: true,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), resolutionProperties, vm.viewModel);\r\n\r\n                //resolution description\r\n                var resolutionDescriptionProperties = {\r\n                    PropertyName: \"ResolutionDescription\",\r\n                    PropertyDisplayName: \"ResolutionDescription\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), resolutionDescriptionProperties, vm.viewModel);\r\n\r\n                var letAnalystDecideProperties = {\r\n                    PropertyName: \"resolveChildIncident\",\r\n                    PropertyDisplayName: \"ResolveChildIncidentMessage\",\r\n                    Inline: true,\r\n                    Disabled: false\r\n                };\r\n                buildCheckbox(modalWindowEle.find(\"#letAnalystDecide\"), letAnalystDecideProperties, vm.viewModel);\r\n            };\r\n            var createStatusPicker = function (modalWindowViewModel, modalWindowEle) {\r\n                var statusProperties = {\r\n                    PropertyName: \"Status\",\r\n                    PropertyDisplayName: \"Status\",\r\n                    EnumId: modalWindowViewModel.enumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#statusPicker'), statusProperties, vm.viewModel);\r\n            };\r\n            //form field helper\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n            var buildTextArea = function (container, props, vmModel) {\r\n                txtAreaControl.build(vmModel, props, function (cbTxtAreaControl) {\r\n                    container.html(cbTxtAreaControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n            var buildCheckbox = function (container, props, vmModel) {\r\n                checkBoxControl.build(vmModel, props, function (txtCheckboxControl) {\r\n                    container.html(txtCheckboxControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true, vm: vmModel, bind: true\r\n                    });\r\n                });\r\n            }\r\n            var getDrawerTaskChildEditedFields = function (viewModel, resolutionCategoryId) {\r\n                var json = [\r\n                    {\r\n                        PropertyName: \"Status\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: viewModel.get(\"newStatusObj\").Id\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolutionCategory\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: resolutionCategoryId\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolutionDescription\",\r\n                        PropertyType: \"string\",\r\n                        EditedValue: viewModel.get(\"resolutionDescription\")\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolvedDate\",\r\n                        PropertyType: \"date\",\r\n                        EditedValue: new Date().toISOString()\r\n                    },\r\n                    {\r\n                        //resolved by user \r\n                        PropertyName: \"RelatesToTroubleTicket\",\r\n                        PropertyType: \"singlecardinalityobject\",\r\n                        PropertyRelationshipId: \"f7d9b385-a84d-3884-7cde-e2c926d931a5\", //TroubleTicketResolvedByUserRelationshipString\r\n                        EditedValue: session.user.Id\r\n                    },\r\n                    {\r\n                        //action log for IR resolved.\r\n                        PropertyName: \"AppliesToTroubleTicket\",\r\n                        PropertyType: \"multiplecardinalityobject\",\r\n                        propertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //TroubleTicketHasActionLogId\r\n                        EditedValue: {\r\n                            ActionType: {\r\n                                Id: \"5ca2cfee-6740-1576-540B-ce17222840b8\",\r\n                                Name: \"Record Resolved\"\r\n                            },\r\n                            Description: viewModel.get(\"resolutionDescription\"),\r\n                            DescriptionDisplay: viewModel.get(\"resolutionDescription\"),\r\n                            EnteredBy: session.user.Name,\r\n                            EnteredDate: new Date().toISOString(),\r\n                            LastModified: new Date().toISOString(),\r\n                            Title: localization.RecordResolved,\r\n                            Image: app.config.iconPath + app.config.icons[\"Record Resolved\"]\r\n                        }\r\n                    }];\r\n\r\n                return json;\r\n            }\r\n            var getDrawerTaskEditedFields = function (viewModel) {\r\n                var json = [\r\n                    {\r\n                        PropertyName: \"Status\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: viewModel.get(\"newStatusObj\").Id\r\n                    }\r\n                ];\r\n                switch (viewModel.get(\"newStatusObj\").Id) {\r\n                    case app.constants.workItemStatuses.Incident.Closed:\r\n                        json.push({\r\n                            PropertyName: \"ClosedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                           //closed by user \r\n                           PropertyName: \"RelatesToTroubleTicket_\",\r\n                           PropertyType: \"singlecardinalityobject\",\r\n                           PropertyRelationshipId: \"76bc6c3b-a77b-2468-0a63-169d23dfcdf0\", //TroubleTicketClosedByUserRelationshipString\r\n                           EditedValue: session.user.Id\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Closed:\r\n                        json.push({\r\n                            PropertyName: \"ClosedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                            //closed by user \r\n                            PropertyName: \"ClosedByUser\",\r\n                            PropertyType: \"singlecardinalityobject\",\r\n                            PropertyRelationshipId: \"ba8180d3-5bf9-1bbd-ae87-145dd8fc520f\", //WorkItemClosedByUserRelationshipString\r\n                            EditedValue: session.user.Id\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.Incident.Resolved:\r\n                        json.push({\r\n                            PropertyName: \"ResolutionCategory\",\r\n                            PropertyType: \"enum\",\r\n                            EditedValue: viewModel.get(\"newResolutionId\").Id\r\n                        },\r\n                        {\r\n                            PropertyName: \"ResolutionDescription\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resolutionDescription\")\r\n                        },\r\n                        {\r\n                            PropertyName: \"ResolvedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                            //resolved by user \r\n                            PropertyName: \"RelatesToTroubleTicket\",\r\n                            PropertyType: \"singlecardinalityobject\",\r\n                            PropertyRelationshipId: \"f7d9b385-a84d-3884-7cde-e2c926d931a5\", //TroubleTicketResolvedByUserRelationshipString\r\n                            EditedValue: session.user.Id\r\n                        },\r\n                        {\r\n                            //action log for IR resolved.\r\n                            PropertyName: \"AppliesToTroubleTicket\",\r\n                            PropertyType: \"multiplecardinalityobject\",\r\n                            propertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //TroubleTicketHasActionLogId\r\n                            EditedValue: {\r\n                                ActionType: {\r\n                                    Id: \"5ca2cfee-6740-1576-540B-ce17222840b8\",\r\n                                    Name: \"Record Resolved\"\r\n                                },\r\n                                Description: viewModel.get(\"resolutionDescription\"),\r\n                                DescriptionDisplay: viewModel.get(\"resolutionDescription\"),\r\n                                EnteredBy: session.user.Name,\r\n                                EnteredDate: new Date().toISOString(),\r\n                                LastModified: new Date().toISOString(),\r\n                                Title: localization.RecordResolved,\r\n                                Image: app.config.iconPath + app.config.icons[\"Record Resolved\"]\r\n                            }\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Completed:\r\n\r\n                        json.push({\r\n                            PropertyName: \"Notes\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resultNote\")\r\n                        },\r\n                        {\r\n                            PropertyName: \"CompletedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        });\r\n\r\n                        if (!_.isUndefined(viewModel.get(\"newResultId\").Id)) {\r\n                            json.push({\r\n                                PropertyName: \"ImplementationResults\",\r\n                                PropertyType: \"enum\",\r\n                                EditedValue: viewModel.get(\"newResultId\").Id\r\n                            });\r\n                        }\r\n\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Cancelled:\r\n                        json.push({\r\n                            PropertyName: \"Notes\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resultComment\")\r\n                        });\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                return json;\r\n            }\r\n            //resolution funcs\r\n            var getResolveChildIncidentSettings = function () {\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    resolveChildIncidentSettings = data;\r\n                });\r\n            };\r\n            var toggleAdditionalFields = function (statusId, currentStatusId, vmWindow) {\r\n                \r\n                switch (statusId) {\r\n                    case incidentResolved:\r\n                        vmWindow.set(\"irStatusResolved\", true);\r\n                        vmWindow.set(\"irCategoryRequired\", true);\r\n                        vmWindow.set(\"irResolveChildOption\", vmWindow.selectedParents.length>0 && resolveChildIncidentSettings.ResolvedLetAnalystDecide);\r\n                        break;\r\n                    case serviceRequestCancelled:\r\n                        vmWindow.set(\"srStatusCancelled\", true);\r\n                        vmWindow.set(\"srStatusCompleted\", false);\r\n                        break;\r\n                    case serviceRequestCompleted:\r\n                        vmWindow.set(\"srStatusCompleted\", true);\r\n                        vmWindow.set(\"srNotesRequired\", true);\r\n                        vmWindow.set(\"srStatusCancelled\", false);\r\n                        break;\r\n                    default:\r\n                        vmWindow.set(\"irStatusResolved\", false);\r\n                        vmWindow.set(\"irCategoryRequired\", false);\r\n                        vmWindow.set(\"srStatusCancelled\", false);\r\n                        vmWindow.set(\"srStatusCompleted\", false);\r\n                        vmWindow.set(\"srNotesRequired\", false);\r\n                        break;\r\n                }\r\n\r\n                vmWindow.set(\"okEnabled\", true);\r\n\r\n            };\r\n            var enableResolutionSettings = function (statusId, vmWindow) {\r\n                switch (statusId) {\r\n                    case incidentResolved: // incident resolved (check for resolve child settings ans how resolution section)\r\n                        vmWindow.set(\"resolveChildSettings\", resolveChildIncidentSettings);\r\n                        vmWindow.set(\"letAnalystDecide\", (resolveChildIncidentSettings.ResolvedLetAnalystDecide && vm.viewModel.IsParent));\r\n                        vmWindow.set(\"requireResolution\", true);\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        break;\r\n                    case serviceRequestCancelled: //sr cancelled (show comment section)\r\n                        vmWindow.set(\"showComment\", true);\r\n                        break;\r\n                    case serviceRequestCompleted: //sr completed (show implementation section)\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        vmWindow.set(\"requireResolution\", true)\r\n                        break;\r\n                    case problemResolved: //problem resolved (show resolution and auto resolve option)\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        vmWindow.set(\"requireResolution\", true);\r\n                        vmWindow.set(\"showAutoResolve\", true);\r\n                        break;\r\n                    default:\r\n                        vmWindow.set(\"showComment\", false);\r\n                        vmWindow.set(\"showResolution\", false);\r\n                        vmWindow.set(\"requireResolution\", false);\r\n                        vmWindow.set(\"showAutoResolve\", false);\r\n                        vmWindow.set(\"letAnalystDecide\", false);\r\n                        break;\r\n                }\r\n\r\n                //make sure we have a new value\r\n                if (_.isString(vm.viewModel.Status.Name) && vm.viewModel.Status.Name.length > 0) {\r\n                    vmWindow.set(\"okEnabled\", true);\r\n                } else {\r\n                    vmWindow.set(\"okEnabled\", false); //turn off the button now\r\n                }\r\n            };\r\n            var resolveChildIncidents = function (resolveChildSettings) {\r\n                var resolutionCategoryId = resolveChildSettings.ChildIncidentResolutionCategorySameAsParent\r\n                                           ? vm.viewModel.ResolutionCategory.Id\r\n                                           : resolveChildSettings.ChildIncidentResolutionCategory.Id;\r\n\r\n                $.each(vm.viewModel.ChildWorkItem, function (i, item) {\r\n                    item.set(\"Status\", { Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name });\r\n                    item.set(\"ResolutionCategory\", { Id: resolutionCategoryId }); //TODO: I have some concearns here need to ask david -jk\r\n                    item.set(\"ResolutionDescription\", vm.viewModel.ResolutionDescription);\r\n                    item.set(\"ResolvedDate\", vm.viewModel.ResolvedDate);\r\n                });\r\n            };\r\n\r\n            var resolveRelatedWorkItems = function () {\r\n\r\n                $.each(vm.viewModel.RelatesToWorkItem, function (i, item) {\r\n                    item.set(\"Status\", { Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name });\r\n                    item.set(\"ResolutionDescription\", vm.viewModel.ResolutionDescription);\r\n                    item.set(\"ResolvedDate\", vm.viewModel.ResolvedDate);\r\n                });\r\n            };\r\n\r\n            //rules on what statuses are available based on current WI status\r\n            var getFormTaskChangeRules = function () {\r\n                //define change rules and states\r\n                var changeRules = new Array();\r\n\r\n                /*ServiceRequest*/\r\n                changeRules['ServiceRequest'] = new Array();\r\n\r\n                changeRules['ServiceRequest'][serviceRequestSubmitted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestSubmitted }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestInProgress] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestOnHold },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestInProgress }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                /*END ServiceRequest*/\r\n\r\n\r\n                /*Release Record*/\r\n                changeRules['ReleaseRecord'] = new Array();\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordInProgress] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordEditing] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCompleted }\r\n                    ]\r\n                };\r\n\r\n                /*END Release Record*/\r\n\r\n\r\n                /*Change Request*/\r\n                changeRules['ChangeRequest'] = new Array();\r\n\r\n                changeRules['ChangeRequest'][changeRequestSubmitted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestSubmitted }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestInProgress] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestOnHold },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestInProgress }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n                /*END Change Request*/\r\n\r\n                /*Incident*/\r\n                changeRules['Incident'] = new Array();\r\n\r\n                changeRules['Incident'][incidentActive] = {\r\n                    field: \"Id\",\r\n                    operator: \"neq\",\r\n                    value: incidentClosed\r\n                };\r\n\r\n                changeRules['Incident'][incidentActivePending] = {\r\n                    field: \"Id\",\r\n                    operator: \"neq\",\r\n                    value: incidentClosed\r\n                };\r\n\r\n                changeRules['Incident'][incidentResolved] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: incidentActive },\r\n                        { field: \"Id\", operator: \"eq\", value: incidentClosed }\r\n                    ]\r\n                };\r\n\r\n                /*END Incident*/\r\n\r\n                /*Problem*/\r\n                changeRules['Problem'] = new Array();\r\n                /*END Problem*/\r\n\r\n\r\n                return changeRules;\r\n            }\r\n            //bulk edit form funcs\r\n            var bulkEditFormIsValid = function (windowViewModel, modalEle) {\r\n                if (windowViewModel.irCategoryRequired\r\n                    && (_.isUndefined(windowViewModel.newResolutionId.Id)\r\n                        || windowViewModel.newResolutionId.Id.length <= 0)) {\r\n\r\n                    modalEle.find('#changeStatusErrorWin').html(localization.RequestCategoryRequiredError);\r\n                    return false;\r\n                } else if (windowViewModel.srNotesRequired && windowViewModel.resultNote.length <= 0) {\r\n                    modalEle.find('#changeStatusErrorWin').html(localization.ImplementationNotesRequiredError);\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            };\r\n\r\n            var postBulkEditChangesWithChildren = function (taskVm, windowVm, modalControl) {\r\n                var parentIds = _.pluck(taskVm.currentSelectionOfParents, 'BaseId'); \r\n                $.ajax({\r\n                    url: '/api/v3/workitem/GetChildWorkItems/',\r\n                    data: JSON.stringify(parentIds),\r\n                    dataType: 'json',\r\n                    contentType: 'application/json',\r\n                    type: \"POST\",\r\n                    success: function (childIds) {\r\n                        //determine if we set resolution category to same as parent\r\n                        if (resolveChildIncidentSettings.ChildIncidentResolutionCategorySameAsParent) {\r\n                            //parent and non-children wi base ids\r\n                            var itemIds = _.pluck(windowVm.selectedWorkItems, 'BaseId');\r\n                            //add in children\r\n                            _.each(childIds, function (childId) {\r\n                                itemIds.push(childId);\r\n                            });\r\n                            var uniqIds = _.uniq(itemIds);\r\n                            var postData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: uniqIds,\r\n                                EditedFields: getDrawerTaskEditedFields(windowVm)\r\n                            }\r\n\r\n                            postBulkEditChanges(postData, taskVm, modalControl);\r\n\r\n                        } else {\r\n                            //get child resolution cat\r\n                            var childResolutionCatId = resolveChildIncidentSettings.ChildIncidentResolutionCategory.Id;\r\n                            var childrenPostData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: childIds,\r\n                                EditedFields: getDrawerTaskChildEditedFields(windowVm, childResolutionCatId)\r\n                            }\r\n\r\n                            var wiSelectionPostData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: _.pluck(windowVm.selectedWorkItems, 'BaseId'),\r\n                                EditedFields: getDrawerTaskEditedFields(windowVm)\r\n                            }\r\n                            \r\n                            postBulkEditChanges(wiSelectionPostData, taskVm, modalControl, function (success) {\r\n                                if (success) {\r\n                                    postBulkEditChanges(childrenPostData, taskVm, modalControl);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n\r\n            };\r\n            var postBulkEditChanges = function (postData, taskVm, modalControl, postCallback) {\r\n                modalControl.close();\r\n                app.lib.mask.apply();\r\n                $.ajax({\r\n                    url: '/api/v3/workitem/BulkEditWorkItems/',\r\n                    data: JSON.stringify(postData),\r\n                    dataType: 'json',\r\n                    contentType: 'application/json',\r\n                    type: \"POST\",\r\n                    success: function () {\r\n                        if (!_.isUndefined(postCallback)) {\r\n                            postCallback(true);\r\n                        } else {\r\n                            onBulkEditSaveSuccess(taskVm);\r\n                        }\r\n                    },\r\n                    error: function () {\r\n                        if (!_.isUndefined(postCallback)) {\r\n                            postCallback(false);\r\n                        } else {\r\n                            onBulkEditSaveFailure();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            var onBulkEditSaveSuccess = function (taskVm) {\r\n                if (app.isMobile()) {\r\n                    var listControl = $(\"[data-control-id='\" + taskVm.targetControlId + \"']\").data('kendoListView');\r\n                    listControl.dataSource.query();\r\n                } else {\r\n                    //refresh the grid to get updated data.\r\n                    var targetGrid = $('#' + taskVm.targetControlId).data('kendoGrid');\r\n                    var targetGridState = app.gridUtils.savedState.getCurrentState(taskVm.targetControlId);\r\n                    app.lib.recheckGridState(targetGridState, targetGrid);\r\n                    targetGrid.dataSource.query(targetGridState);\r\n                }\r\n                app.lib.message.add(localizationHelper.localize('SaveSuccessMessage'), \"success\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var onBulkEditSaveFailure = function () {\r\n                app.lib.message.add(localizationHelper.localize('SaveErrorMessage'), \"danger\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            /* END functions */\r\n\r\n            /* initialization code*/\r\n            function initFormTask() {\r\n                var modalEle = buildAndRender.windowEle(changeStatusTemplate);\r\n                var formTaskViewModel = getFormTaskViewModel(modalEle);\r\n                var anchorTemplateProps = { Target: \"changeStatus\" };\r\n                buildAndRender.taskListItem(anchorTemplateProps, formTaskViewModel, anchorTemplate);\r\n            };\r\n\r\n            function initBulkTask() {\r\n                var modalView = buildAndRender.windowEle(changeStatusDrawerTemplate);\r\n                var drawerTaskViewModel = getDrawerTaskViewModel(modalView);\r\n                var anchorEleProps = { onClick: \"openModal\", titleKey: node.titleKey, toolTipMessage: localizationHelper.localize('MustSelectSameTypeStatus') };\r\n                buildAndRender.taskListItem(anchorEleProps, drawerTaskViewModel, drawerTaskTemplate);\r\n\r\n                /*subscribe to events*/\r\n                if (!app.isMobile()) {\r\n                    //called on grid row clicks\r\n                    app.events.subscribe(\"gridChange\", function(event, grid) {\r\n                        drawerTaskViewModel.onTargetControlChange(grid);\r\n                        drawerTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                    });\r\n\r\n                    //for initial grid load listen to this event so we can set persisted state information\r\n                    app.events.subscribe(\"gridBound\", function(event, grid) {\r\n                        drawerTaskViewModel.onTargetControlChange(grid);\r\n                        drawerTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                    });\r\n                } else {\r\n                    app.events.subscribe(\"mobileWiListSelectionChange\", function (event, listView) {\r\n                        if (!_.isUndefined(listView)) {\r\n                            drawerTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                            drawerTaskViewModel.targetControlId = listView.controlId;\r\n                        }\r\n                    });\r\n                    app.events.subscribe(\"mobileWiListInit\", function (event, listView) {\r\n                        if (!_.isUndefined(listView)) {\r\n                            drawerTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                            drawerTaskViewModel.targetControlId = listView.controlId;\r\n                        }\r\n                    });\r\n                }\r\n                /*END subscribe to events*/\r\n            };\r\n            /* END initialization code*/\r\n\r\n            //do it\r\n            if (vm.type == \"BulkEdit\") {\r\n                initBulkTask();\r\n            } else {\r\n                initFormTask();\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/amChangeStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/changeStatus/view.html','forms/fields/enum/controller','forms/fields/longstring/controller','forms/fields/boolean/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/changeStatus/view.html\");\r\n    var enumPicker = require(\"forms/fields/enum/controller\");\r\n    var txtArea = require(\"forms/fields/longstring/controller\");\r\n    var checkBox = require(\"forms/fields/boolean/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.ChangeHardwareAssetStatus;\r\n            var statusPropertyName;\r\n            if (node.Configs.type == \"HardwareAsset\") {\r\n                if (node.Configs.enumName == \"HardwareAssetStatus\") {\r\n                    \r\n                } else if (node.Configs.enumName == \"HardwareAssetType\") {\r\n                    title = localization.ChangeHardwareAssetType;\r\n                } \r\n            } else if (node.Configs.type == \"SoftwareAsset\") {\r\n                if (node.Configs.enumName == \"SoftwareAssetStatus\") {\r\n                    title = localization.ChangeSoftwareAssetStatus;\r\n                } else if (node.Configs.enumName == \"SoftwareAssetType\") {\r\n                    title = localization.ChangeSoftwareAssetType;\r\n                }\r\n            }\r\n\r\n            var tempStatus = { \"Id\": vm.viewModel[node.Configs.enumName].Id, \"Name\": vm.viewModel[node.Configs.enumName].Name };\r\n            \r\n\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        enumId: node.Configs.statusEnumId,\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            vm.viewModel.set(node.Configs.enumName, tempStatus);\r\n                            win.close();\r\n                        },\r\n                       \r\n                    });\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    //create status enumPicker\r\n                    var statusProperties = {\r\n                        PropertyName: node.Configs.enumName,\r\n                        PropertyDisplayName: 'Status',\r\n                        EnumId: _vmWindow.enumId\r\n                    };\r\n                    buildEnumPicker(cont.find('#statusPicker'), statusProperties, vm.viewModel);\r\n\r\n                    //var statusDropDown = cont.find('div[data-role=\"HardwareAssetStatus\"]').data().handler._dropdown;\r\n                    //var statusTreeView = cont.find('div[data-role=\"status\"]').data().handler._treeview;\r\n\r\n\r\n\r\n                    //bind status change\r\n                    //vm.viewModel.HardwareAssetStatus.bind(\"change\", function (e) {\r\n                    vm.viewModel[node.Configs.enumName].bind(\"change\", function (e) {\r\n                        switch (e.sender.Id) {\r\n                            \r\n                            default:\r\n                                //_vmWindow.set(\"showComment\", false);\r\n                                //_vmWindow.set(\"showResolution\", false);\r\n                                //_vmWindow.set(\"requireResolution\", false);\r\n                                break;\r\n                        }\r\n                        _vmWindow.set(\"okEnabled\", true);\r\n                    });\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPicker.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n          \r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/acknowledge/view.html',[],function () { return '<div id=\"AcknowledgeIncidentWindow\" class=\"hide task-window cireson-window defined-form\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"inline-spacing\">\\r\\n                <label><%= localization.AcknowledgementTime %> : <span data-bind=\"html:dateTimeNow\"></span></label>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"inline-spacing\">\\r\\n                <label><%= localization.AcknowledgementComment %></label>\\r\\n                <textarea data-bind=\"value: actionLogComment, events: {keyup:textCounter}\"\\r\\n                          data-value-update=\"keyup\"\\r\\n                          class=\"k-textbox\" rows=5></textarea>\\r\\n            </div>\\r\\n            <div class=\"inline-spacing\">\\r\\n                <span data-bind=\"html:charactersRemaining\"></span>\\r\\n                <span><%= localization.CharactersRemaining %></span>\\r\\n            </div>\\r\\n            <div class=\"inline-spacing checkbox checkbox-inline\">\\r\\n                <input id=\"IsPrivate\" type=\"checkbox\" data-bind=\"checked: isPrivate\" />\\r\\n                <label for=\"IsPrivate\" class=\"checkbox-label\"><%= localization.IsPrivate %></label>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button class=\"btn btn-primary\"\\r\\n                    data-role=\"button\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button class=\"btn btn-default\"\\r\\n                    data-role=\"button\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nacknowledge incident\r\n**/\r\n\r\ndefine('forms/tasks/acknowledge/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/acknowledge/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/acknowledge/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            \r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                acknowledge: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: localization.Acknowledge,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        dateTimeNow: kendo.toString(new Date(), \"g\"),\r\n                        dateTimeNowUTC: new Date().toISOString(),\r\n                        actionLogComment: \"\",\r\n                        isPrivate: false,\r\n                        charactersRemaining: \"4000\",\r\n                        textCounter: function () {\r\n                            var maximumLength = 4000;\r\n                            var val = this.actionLogComment.length;\r\n\r\n                            if (val > maximumLength) {\r\n                                this.actionLogComment.substring(0, maximumLength);\r\n                            } else {\r\n                                this.set(\"charactersRemaining\", maximumLength - val);\r\n                            }\r\n                        },\r\n                        okClick: function () {\r\n                            if (vm.viewModel.FirstResponseDate == null){\r\n                                vm.viewModel.FirstResponseDate = this.dateTimeNowUTC;\r\n                                var respondDateEle = $(\"input[name='FirstResponseDate']\");\r\n                                if (respondDateEle.attr('data-control') == 'datePicker') {\r\n                                    respondDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                } else if (respondDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                    respondDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                }\r\n                            }\r\n                            if (this.actionLogComment.length) {\r\n                                var newActionLog = {\r\n                                    EnteredBy: session.user.Name,\r\n                                    Title: localization.Analyst + \" \" + localization.Comment,\r\n                                    IsPrivate: this.isPrivate,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Description: this.actionLogComment,\r\n                                    DescriptionDisplay: this.actionLogComment,\r\n                                    Image: (this.isPrivate) ? app.config.iconPath + app.config.icons[\"privateComment\"] : app.config.iconPath + app.config.icons[\"comment\"],\r\n                                    ActionType: \"AnalystComment\"\r\n                                }\r\n                                if (!vm.viewModel.ActionLog) {\r\n                                    vm.viewModel.ActionLog = [];\r\n                                }\r\n                                var actionLogType = app.controls.getWorkItemLogType(pageForm.viewModel);\r\n                                if (actionLogType) {\r\n                                    pageForm.viewModel[actionLogType].push(newActionLog);\r\n                                }\r\n                            }\r\n\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        }\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"acknowledge\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nconvert To Parent\r\n**/\r\n\r\ndefine('forms/tasks/convertToParent/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //first add the anchor\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"convertToParent\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n           \r\n           //create view model \r\n            var viewModel = kendo.observable({\r\n                isParent: node.Configs.isParent,\r\n                confirmTitle: node.Configs.confirmTitle,\r\n                confirmMessage: node.Configs.confirmMessage,\r\n                convertToParent: function () {\r\n                    $.when(kendo.ui.ExtYesNoDialog.show({\r\n                        title: this.confirmTitle,\r\n                        message: this.confirmMessage\r\n                    })).done(function (response) {\r\n                        if (response.button === \"yes\") {\r\n                            vm.viewModel.IsParent = node.Configs.isParent;\r\n                            if (!vm.viewModel.IsParent) {\r\n                                if (vm.viewModel.ChildWorkItem != null) {\r\n                                    delete vm.viewModel.ChildWorkItem;\r\n                                }\r\n                            }\r\n                            vm.save(function (data) {\r\n                                app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                switch (pageForm.type) {\r\n                                    case \"ReleaseRecord\":\r\n                                        location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                        break;\r\n                                    default:\r\n                                        location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                        break;\r\n                                }\r\n                            }, saveFailure);\r\n                        } else {\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/linkToParent/view.html',[],function () { return '<div id=\"AssignParentWindow\" class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"margin-b20\">\\r\\n                <label><%= localization.SearchText %></label>\\r\\n                <span class=\"k-textbox k-space-right\">\\r\\n                    <input type=\"text\" data-bind=\"value: searchText\" />\\r\\n                    <a data-bind=\"click: searchClick\" href=\"javascript:void(0)\" class=\"\">\\r\\n                        <i class=\"fa fa-search\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n            </div>\\r\\n            <label><%= localization.SelectParent %></label>\\r\\n            <div data-role=\"grid\"\\r\\n                 data-bind=\"source: dataSource, events: { change: gridChange }\"\\r\\n                 data-selectable=\"true\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"true\"\\r\\n                 data-columns=\\'[\\r\\n                    { field: \"Id\", title: \" <%= localization.Id %>\", width: \"50px\", attributes: {\"class\": \"grid-highlight-column\"} },\\r\\n                    { field: \"Title\", title: \" <%= localization.Title %>\", width: \"300px\", attributes: {\"class\": \"grid-highlight-column\"} },\\r\\n                    { field: \"Status\", title: \" <%= localization.Status %>\", width: \"100px\" }\\r\\n                    ]\\'>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/header/relationships/view.html',[],function () { return '<div class=\"parent-header-link\" >\\r\\n    <label data-bind=\"text: view.controller.parentIncident\"></label> :\\r\\n    <a data-bind=\"attr: { href: view.controller.editHref}, text: view.controller.editLink\" target=\"_blank\"></a>\\r\\n    <span class=\"fa fa-trash-o fa-lg cursor-pointer\" data-bind=\"click: view.controller.unlinkParent\"></span>\\r\\n</div>';});\n\n","/**\r\nlink To Parent\r\n**/\r\n\r\ndefine('forms/tasks/linkToParent/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/linkToParent/view.html','text!forms/header/relationships/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/linkToParent/view.html\");\r\n    var headerLinkTpl = require(\"text!forms/header/relationships/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            \r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                linkToParent: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n                    var releaseRecordClassId = \"d02dc3b6-d709-46f8-cb72-452fa5e082b8\"; //classid for release record\r\n\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: (vm.viewModel.ClassId == releaseRecordClassId) ? localization.LinktoNewParentIncident : localization.LinkToNewParentRecord,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            _vmWindow.refreshDataSource();\r\n                            getChildIncidentSettings();\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        searchText: \"\",\r\n                        searchClick: function () {\r\n                            var val = this.get(\"searchText\");\r\n                            this.refreshDataSource();\r\n                            this.dataSource.filter({\r\n                                logic: \"or\",\r\n                                filters: [\r\n                                    {\r\n                                        field: \"Id\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Title\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Status.Name\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    }\r\n                                ]\r\n                            });\r\n                        },\r\n                        okEnabled: false, \r\n                        okClick: function () {\r\n                            if (!this.selectedRow)\r\n                                return;\r\n\r\n                            if (vm.viewModel.ParentWorkItem == null) {\r\n                                vm.viewModel.ParentWorkItem = {};\r\n                            }\r\n\r\n                            vm.viewModel.ParentWorkItem.BaseId = this.selectedRow.BaseId;\r\n                            vm.viewModel.ParentWorkItem.Id = this.selectedRow.Id;\r\n                            vm.viewModel.ParentWorkItem.Title = this.selectedRow.Title;\r\n\r\n                            //check if we need to change child's status\r\n                            if (!_.isUndefined(childIncidentSettings.ActiveChildIncidentLinkStatus.Id)) {\r\n                                vm.viewModel.set(\"Status\", { Id: childIncidentSettings.ActiveChildIncidentLinkStatus.Id, Name: childIncidentSettings.ActiveChildIncidentLinkStatus.Name });\r\n                            }\r\n\r\n                            vm.view.buildParentHeaderView(function (tpl) {\r\n                                parentView = new kendo.View(tpl, { wrapper: false, model: vm });\r\n                                $('#parent-header-space').html(parentView.render()).show();\r\n                            });\r\n\r\n                            this.dataSource.filter([]);\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            this.dataSource.filter([]);\r\n                            win.close();\r\n                        },\r\n                        dataSource: new kendo.data.DataSource({\r\n                            transport: {\r\n                                read: {\r\n                                    type: \"GET\",\r\n                                    dataType: \"json\",\r\n                                    url: \"/Search/GetParentWorkItems\",\r\n                                    data: { workItemType: vm.type },\r\n                                    cache: false\r\n                                }\r\n                            },\r\n                            schema: {\r\n                                model: {\r\n                                    fields: {\r\n                                        Id: { type: \"string\" },\r\n                                        Title: { type: \"string\" },\r\n                                        Status: { type: \"string\" },\r\n                                        BaseId: { type: \"string\" }\r\n                                    }\r\n                                }\r\n                            },\r\n                            pageSize: 5,\r\n                        }),\r\n                        selectedRow: null,\r\n                        gridChange: function (eventArgs) {\r\n                            this.set(\"okEnabled\", true);\r\n                            this.set(\"selectedRow\", eventArgs.sender.dataItem(eventArgs.sender.select()));\r\n                        },\r\n                        refreshDataSource: function () {\r\n                            this.dataSource.read();\r\n                        }\r\n                    });\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"linkToParent\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var childIncidentSettings;\r\n            var getChildIncidentSettings = function () {\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    childIncidentSettings = data;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/newStatus/view.html',[],function () { return '<div class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"col-group\">\\r\\n                <span data-bind=\"html: commentMessage\"></span>\\r\\n            </div>\\r\\n            <div class=\"col-group\">\\r\\n                <div class=\"editor-label\">\\r\\n                    <label><%= localization.Comment %></label>\\r\\n                </div>\\r\\n                <div class=\"editor-field\">\\r\\n                    <textarea data-bind=\"value: comment, events: {keyup:textCounter}\"\\r\\n                              data-value-update=\"keyup\"\\r\\n                              class=\"k-textbox\"\\r\\n                              rows=\"6\" />\\r\\n                    <div class=\"inline-spacing\">\\r\\n                        <span data-bind=\"html:charactersRemaining\"></span>\\r\\n                        <span><%= localization.CharactersRemaining %></span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nNew Status\r\n**/\r\n\r\ndefine('forms/tasks/newStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/newStatus/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/newStatus/view.html\");\r\n\r\n    var incidentResolved = \"2b8830b6-59f0-f574-9c2a-f4b4682f1681\";\r\n    var incidentActive = \"5e2d3932-ca6d-1515-7310-6f58584df73e\";\r\n    var IncidentClosed = \"bd0ae7c4-3315-2eb3-7933-82dfc482dbaf\";\r\n    var IncidentActivePending = \"b6679968-e84e-96fa-1fec-8cd4ab39c3de\";\r\n\r\n    var serviceRequestCancelled = \"674e87e4-a58e-eab0-9a05-b48881de784c\";\r\n    var serviceRequestCompleted = \"b026fdfd-89bd-490b-e1fd-a599c78d440f\";\r\n    var serviceRequestSubmitted = \"72b55e17-1c7d-b34c-53ae-f61f8732e425\";\r\n    var serviceRequestInProgress = \"59393f48-d85f-fa6d-2ebe-dcff395d7ed1\";\r\n    var serviceRequestOnHold = \"05306bf5-a6b9-b5ad-326b-ba4e9724bf37\";\r\n    var serviceRequestFailed = \"21dbfcb4-05f3-fcc0-a58e-a9c48cde3b0e\";\r\n    var serviceRequestClosed = \"c7b65747-f99e-c108-1e17-3c1062138fc4\";\r\n\r\n    var releaseRecordInProgress = \"1840bfdc-3589-88a5-cea9-67536fd95a3b\";\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //first add the anchor\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"setNewStatus\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n           \r\n            //all other bound changes to be triggered\r\n            if (!_.isUndefined(node.Configs.otherBoundChanges)) {\r\n                //var otherBoundChanges = $.parseJSON(node.Configs.otherBoundChanges);\r\n                var otherBoundChanges = node.Configs.otherBoundChanges;\r\n            } else {\r\n                var otherBoundChanges = {};\r\n            }\r\n\r\n            //create view model \r\n            var viewModel = kendo.observable({\r\n                setNewStatus: function () {\r\n                    //show comment for cancelled service request\r\n                    if (node.Configs.newStatusId === serviceRequestCancelled || node.Configs.newStatusId === releaseRecordInProgress) {\r\n                        addComment(view.element, node.Configs);\r\n                    } else {\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: node.Configs.confirmTitle,\r\n                            message: node.Configs.confirmMessage\r\n                        })).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n\r\n                                //set new status\r\n                                vm.viewModel.set(\"Status\", { Id: node.Configs.newStatusId, Name: node.Configs.newStatusName });\r\n\r\n                                //re-initiate resolution details on re-activate(active status) only\r\n                                if (vm.viewModel.Status.Id == app.constants.workItemStatuses.Incident.Active) {\r\n                                    vm.viewModel.set(\"ResolutionCategory\", { Name: null, Id: null });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", null);\r\n                                    vm.viewModel.set(\"ResolvedDate\", null);\r\n\r\n                                   \r\n                                    if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordActivated());\r\n                                    }\r\n                                }\r\n\r\n                                //make other changes\r\n                                $.each(otherBoundChanges, function (index, val) {\r\n                                    vm.viewModel.set(index, val);\r\n                                });\r\n\r\n                                //if IR or SR closed set closed date.\r\n                                if (node.Configs.newStatusId == app.constants.workItemStatuses.Incident.Closed || \r\n                                    node.Configs.newStatusId == app.constants.workItemStatuses.ServiceRequest.Closed) {\r\n                                    vm.viewModel.set(\"ClosedDate\", new Date().toISOString());\r\n\r\n                                    //set closed by user \r\n                                    switch (node.Configs.newStatusId) {\r\n                                        case app.constants.workItemStatuses.Incident.Closed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordClosed());\r\n                                            break;\r\n                                        case app.constants.workItemStatuses.ServiceRequest.Closed:\r\n                                            vm.viewModel.ClosedByUser = { BaseId: session.user.Id };\r\n                                            break;\r\n                                    }\r\n                                }\r\n\r\n                                //reactivating child incidents when a parent is reactivated\r\n                                if (vm.type === \"Incident\" && vm.viewModel.IsParent && vm.viewModel.Status.Id == incidentActive) {\r\n                                    processChildIncidentReactivation();\r\n                                } else {\r\n                                    save();\r\n                                }\r\n                            } else {\r\n                                //reset the viewModel\r\n                                vm.viewModel.set(\"Status\",{Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name});\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var save = function () {\r\n                //save/apply the current changes\r\n                vm.save(function (data) {\r\n                    app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                    switch (vm.type) {\r\n                        case \"ChangeRequest\":\r\n                            location.href = \"/ChangeRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"ServiceRequest\":\r\n                            location.href = \"/ServiceRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"Incident\":\r\n                            location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"ReleaseRecord\":\r\n                            location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"Problem\":\r\n                            location.href = \"/Problem/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        default:\r\n                            location.href = \"/WorkItems/MyItems/\";\r\n                            break;\r\n                    }\r\n                }, saveFailure);\r\n            }\r\n\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n\r\n            var reactivateChildandSave = function () {\r\n                $.each(vm.viewModel.ChildWorkItem, function (i, item) {\r\n                    item.set(\"Status\", {Name: childIncidentSettings.ChildIncidentReactivatedStatus.Name, Id: childIncidentSettings.ChildIncidentReactivatedStatus.Id});\r\n                    item.set(\"ResolutionCategory\", {Name: null,Id: null});\r\n                    item.set(\"ResolutionDescription\", null);\r\n                    item.set(\"ResolvedDate\", null);\r\n                });\r\n                save();\r\n            }\r\n\r\n            var processChildIncidentReactivation = function () {\r\n                var childIncidentSettings;\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    childIncidentSettings = $.parseJSON(data);\r\n\r\n                    if (childIncidentSettings.ReactivateLetAnalystDecide) { //let analyst decide setting\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: localization.ReactivateChildIncidentTitle,\r\n                            message: localization.ReactivateChildIncidentMessage\r\n                        })).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                reactivateChildandSave();\r\n                            } else {\r\n                                save();\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (childIncidentSettings.ReactivateChildIncident) { //automatic reactivate setting\r\n                        reactivateChildandSave();\r\n                    } else { // do nothing setting\r\n                        save();\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n            var addComment = function (cont, newStatusConfig) {\r\n                //var cont = view.element; //we have the element in memory so no need use a selector\r\n                win = cont.kendoCiresonWindow({\r\n                    title: localization.Comment,\r\n                    width: 500,\r\n                    height: 300,\r\n                    actions: []\r\n                }).data(\"kendoWindow\");\r\n                \r\n                //this view Model is bound to the window element\r\n                var _vmWindow = new kendo.observable({\r\n                    comment: \"\",\r\n                    okEnabled: false,\r\n                    charactersRemaining: \"4000\",\r\n                    textCounter: function () {\r\n                        var maximumLength = 4000;\r\n                        var val = this.comment.length;\r\n\r\n                        if (val > maximumLength) {\r\n                            this.comment.substring(0, maximumLength);\r\n                        } else {\r\n                            this.set(\"charactersRemaining\", maximumLength - val);\r\n                        }\r\n\r\n                        if (val > 0) {\r\n                            this.set(\"okEnabled\", true);\r\n                        } else {\r\n                            this.set(\"okEnabled\", false);\r\n                        }\r\n                    },\r\n                    okClick: function () {\r\n                        //set new status\r\n                        vm.viewModel.set(\"Status\",{Id: newStatusConfig.newStatusId, Name: newStatusConfig.newStatusName});\r\n\r\n                        //set comment\r\n                        var newComment = _.isNull(vm.viewModel.Notes) ? this.comment : vm.viewModel.Notes + \"\\r\\n\" + this.comment;\r\n                        vm.viewModel.set(\"Notes\", newComment);\r\n\r\n                        //save changes\r\n                        win.close();\r\n                        save();\r\n                    },\r\n                    cancelClick: function () {\r\n                        win.close();\r\n                    },\r\n                    commentMessage: !_.isUndefined(newStatusConfig.commentMessage) ? newStatusConfig.commentMessage : localization.CancelledStatusCommentMessage\r\n                });\r\n                //add control to the window\r\n                kendo.bind(cont, _vmWindow);\r\n\r\n                cont.removeClass('hide');\r\n                cont.show();\r\n\r\n                win.open();\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/sendEmail/mobile_view.html',[],function () { return '<div id=\"EmailNotificationWindow\" class=\"cireson-window defined-form task-window hide\">\\n    <div class=\"cireson-window--wrapper\">\\n        <div class=\"cireson-window--body\">\\n            <div class=\"col-md-6 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailTo %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <div class=\"k-autocomplete\">\\r\\n                        <select id=\"userPickerTo\"></select>\\r\\n                        <button id=\"toField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailCC %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <div class=\"k-autocomplete\">\\r\\n                        <select id=\"userPickerCc\"></select>\\r\\n                        <button id=\"ccField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"col-md-12 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.Subject %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <input data-bind=\"value: emailSubject\" class=\" k-textbox\" type=\"text\">\\n                </div>\\n            </div>\\n            \\n            <div class=\"col-md-12 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailTemplate %></label>\\n                </div>\\n                <div class=\"editor-field\" id=\"templateDiv\">\\n                    <input data-role=\"combobox\"\\n                           data-placeholder=\"<%= localization.ChooseOne %>\"\\n                           data-value-primitive=\"true\"\\n                           data-text-field=\"Name\"\\n                           data-value-field=\"Id\"\\n                           data-filter=\"contains\"\\n                           data-bind=\"value: emailTemplateValue, source: emailTemplateDataSource, events:{change:emailTemplateChange }\"/>\\n                </div>\\n            </div>\\n\\n            <div class=\"col-md-12 pad10\">\\r\\n                <div id=\"mobileStatusPicker\" />\\r\\n            </div>\\n            <div class=\"col-md-12 pad10\">\\r\\n                <div class=\"col-md-6 pad0\">\\r\\n                    <label><%= localization.Message %></label>\\r\\n                </div>\\r\\n                <div class=\"col-md-6 pad0\">\\r\\n                    <a href=\"#\" data-bind=\"events: { click: resizeEditor }\" role=\"button\" title=\"Expand Editor\" class=\"pull-right\"><i class=\"fa fa-expand\"></i></a>\\r\\n                </div>\\r\\n                <hr>\\r\\n                <div class=\"editor-field\">\\r\\n                    <textarea id=\"messageEditor\" class=\"form-editor hidden\" data-bind=\"value: emailHTMLMessage\" />\\r\\n                </div>\\r\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <div id=\"statusPicker\" />\\n                <div class=\"checkbox\">\\n                    <input id=\"IsAddToLog\" type=\"checkbox\" data-bind=\"checked: addToLog, enabled: enableAddToLog\" />\\r\\n                    <label for=\"IsAddToLog\" class=\"control-label \">\\n                        <%= localization.SendEmailAddToLog %>\\n                    </label>\\n                </div>\\n                <div class=\"checkbox col-md-12 margin-l30\" data-bind=\"visible: addToLog\">\\n                    <input id=\"setAsPrivate\" type=\"checkbox\" data-bind=\"checked: setAsPrivate\" />\\n                    <label for=\"setAsPrivate\" class=\"control-label col-md-10\">\\n                        <%= localization.SetAsPrivate %>\\n                        <i class=\"fa fa-info-circle info-icon text-primary\" data-toggle=\"tooltip\" title=\"<%= localization.SaveMessageAsPrivateTooltip %>\"></i>\\n                    </label>\\n                </div>\\n                <div data-bind=\"visible: showChangeStatus\" class=\"checkbox\">\\n                    <input id=\"SetFirstResponseDate\" type=\"checkbox\" data-bind=\"checked: setFirstResponseDate, enabled:enableFirstResponseDate\" />\\n                    <label for=\"SetFirstResponseDate\" class=\"control-label\"><%= localization.SetFirstResponseDate %></label>\\n                </div>\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <label><%= localization.SendEmailAttachment %></label>\\n                <div class=\"form-group\">\\r\\n                    <div class=\"drop-zone-element\">\\r\\n                        <div class=\"text-wrapper\">\\r\\n                            <span class=\"drag-image-text\">\\n                                <a class=\"browse-file\"><b><%= localization.Browse %></b></a>\\n                                <span data-bind=\"visible: filesCount > 0\"><span class=\"lowercase\"> <%= localization.Or %> </span><a data-bind=\"events: { click: viewWorkItemFiles }\"><b><%= localization.BrowseWorkItemFiles %></b></a></span>\\r\\n                            </span>\\r\\n                            <div style=\"display:none\"><input name=\"files\" id=\"email-attachment\" type=\"file\" /></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\n                <div>\\r\\n                    <div class=\"fileattachment-list\"></div>\\r\\n                    <div class=\"fileattachment-img-modal\"></div>\\r\\n                    <script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n                        <div class=\"thumbnail-file\">\\r\\n                            <div class=\"cursor-pointer thumbnail-img\">\\r\\n                                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                                # } else{ #\\r\\n                                <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                                # } #\\r\\n                            </div>\\r\\n                            <div class=\"thumbnail-caption\">\\r\\n                                <span>#: DisplayName #</span>\\r\\n                                <!--<div class=\"overlay transparent\">\\r\\n                                    <span class=\"pull-right\">\\r\\n                                        <a class=\"k-delete-button\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                    </span>\\r\\n                                </div>-->\\r\\n                                <div class=\"overlay\">\\r\\n                                    # if (DisplayName.match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                                            <i class=\"fa fa-eye\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                                            <i class=\"fa fa-external-link\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    # } #\\r\\n                                    # if (BaseId!=null) { #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                                            <i class=\"fa fa-download\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    # } #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </script>\\r\\n                </div>\\n                <!--<input data-bind=\"value: emailAttachment\" class=\"k-textbox\" type=\"text\" readonly=\"readonly\">\\n                <span data-bind=\"text: attachmentErrorMessage\" class=\"send-email-attachment-error\"></span>\\n                <div>\\n                    <input type=\"file\" name=\"files\" id=\"fileUploader\" />\\n                    <div class=\"k-widget k-upload\">\\n                        <input type=\"button\" value=\"<%= localization.Remove %>\" class=\"k-button\" />\\n                    </div>\\n                </div>-->\\n            </div>\\n        </div>\\n        <div class=\"window-buttons cireson-window--footer\">\\n            <button id=\"emailOk\" data-role=\"button\"\\n                    class=\"btn btn-primary\"\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\n                <%= localization.OK %>\\n            </button>\\n            <button data-role=\"button\"\\n                    class=\"btn btn-default\"\\n                    data-bind=\"events: { click: cancelClick }\">\\n                <%= localization.Cancel %>\\n            </button>\\n        </div>\\n    </div>\\n</div>';});\n\n","\ndefine('text!forms/tasks/sendEmail/view.html',[],function () { return '<div id=\"EmailNotificationWindow\" tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\">\\n    <div class=\"modal-dialog modal-lg\">\\n        <div class=\"modal-content\">\\n            <div class=\"modal-header\">\\n                 <h4 class=\"modal-title\"><%= localization.SendEmail %></h4>\\n            </div> \\n            <div class=\"modal-body\">\\n                <div class=\"row\">\\n                    <div class=\"col-md-6 pad10\">\\n                        <div class=\"editor-label\">\\n                            <label><%= localization.SendEmailTo %></label>\\n                        </div>\\n                        <div class=\"editor-field\">\\n                            <div class=\"k-autocomplete\">\\r\\n                                <select id=\"userPickerTo\"></select>\\r\\n                                <button id=\"toField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\n                            <label><%= localization.SendEmailCC %></label>\\n                        </div>\\n                        <div class=\"editor-field\">\\n                            <div class=\"k-autocomplete\">\\n                                <select id=\"userPickerCc\"></select>\\n                                <button id=\"ccField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\r\\n                            <label><%= localization.Subject %></label>\\r\\n                        </div>\\r\\n                        <div class=\"editor-field\">\\r\\n                            <input data-bind=\"value: emailSubject\" class=\"k-textbox\" type=\"text\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\r\\n                            <label><%= localization.SendEmailTemplate %></label>\\r\\n                        </div>\\r\\n                        <div class=\"editor-field\" id=\"templateDiv\">\\r\\n                            <input data-role=\"combobox\"\\r\\n                                   data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                                   data-value-primitive=\"true\"\\r\\n                                   data-text-field=\"Name\"\\r\\n                                   data-value-field=\"Id\"\\r\\n                                   data-filter=\"contains\"\\r\\n                                   data-bind=\"value: emailTemplateValue, source: emailTemplateDataSource, events:{change:emailTemplateChange }\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-12 pad10\">\\r\\n                        <div class=\"col-md-6 pad0\">\\r\\n                            <label><%= localization.Message %></label>\\r\\n                        </div>\\r\\n                        <div class=\"col-md-6 pad0\">\\r\\n                            <a href=\"#\" data-bind=\"events: { click: resizeEditor }\" role=\"button\" title=\"Expand Editor\" class=\"pull-right\"><i class=\"fa fa-expand\"></i></a>\\r\\n                        </div>\\r\\n                        <hr>\\r\\n                        <div class=\"editor-field\">\\r\\n                            <textarea id=\"messageEditor\" class=\"form-editor hidden\" data-bind=\"value: emailHTMLMessage\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div id=\"statusPicker\" />\\r\\n                        <div class=\"checkbox\">\\r\\n                            <input id=\"IsAddToLog\" type=\"checkbox\" data-bind=\"checked: addToLog, enabled: enableAddToLog\" />\\r\\n                            <label for=\"IsAddToLog\" class=\"control-label \">\\r\\n                                <%= localization.SendEmailAddToLog %>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\"checkbox col-md-12 margin-l30\" data-bind=\"visible: addToLog\">\\r\\n                            <input id=\"setAsPrivate\" type=\"checkbox\" data-bind=\"checked: setAsPrivate\" />\\r\\n                            <label for=\"setAsPrivate\" class=\"control-label col-md-10\">\\r\\n                                <%= localization.SetAsPrivate %>\\r\\n                                <i class=\"fa fa-info-circle info-icon text-primary\" data-toggle=\"tooltip\" title=\"<%= localization.SaveMessageAsPrivateTooltip %>\"></i>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div data-bind=\"visible: showChangeStatus\" class=\"checkbox \">\\r\\n                            <input id=\"SetFirstResponseDate\" type=\"checkbox\" data-bind=\"checked: setFirstResponseDate, enabled:enableFirstResponseDate\" />\\r\\n                            <label for=\"SetFirstResponseDate\" class=\"control-label\"><%= localization.SetFirstResponseDate %></label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <label><%= localization.SendEmailAttachment %></label>\\r\\n                        <div class=\"form-group\">\\r\\n                            <div class=\"drop-zone-element\">\\r\\n                                <div class=\"text-wrapper\">\\r\\n                                    <span class=\"drag-image-text\">\\r\\n                                        <img src=\"/Content/Images/Icons/FileUpload/upload_to_cloud.svg\" />\\r\\n                                        <b><%= localization.DragAndDrop %> </b> <%= localization.YourFilesOr %>\\r\\n                                        <a class=\"browse-file\"><b><%= localization.Browse %></b></a>\\r\\n                                        <span data-bind=\"visible: filesCount > 0\">\\r\\n                                            <span class=\"lowercase\">  <%= localization.Or %>  </span>\\r\\n                                            <a data-bind=\"events: { click: viewWorkItemFiles }\"><b><%= localization.BrowseWorkItemFiles %></b></a>\\r\\n                                        </span>\\r\\n                                    </span>\\r\\n                                    <div style=\"display:none\"><input name=\"files\" id=\"email-attachment\" type=\"file\" /></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <div class=\"fileattachment-list\"></div>\\r\\n                            <div class=\"fileattachment-img-modal\"></div>\\r\\n                        </div>\\r\\n                        <script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n                            <div class=\"thumbnail-file\">\\r\\n                                <div class=\"cursor-pointer thumbnail-img\">\\r\\n                                    # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                    <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                                    # } else{ #\\r\\n                                    <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                                    # } #\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\"thumbnail-caption\">\\r\\n                                    <span>#: DisplayName #</span>\\r\\n                                    <!--<div class=\"overlay transparent\">\\r\\n                            <span class=\"pull-right\">\\r\\n                                <a class=\"k-delete-button\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                            </span>\\r\\n                        </div>-->\\r\\n                                    <div class=\"overlay\">\\r\\n                                        # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                                                <i class=\"fa fa-eye\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                                                <i class=\"fa fa-external-link\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        # } #\\r\\n                                        # if (BaseId!=null) { #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                                                <i class=\"fa fa-download\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        # } #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </script>\\r\\n                    </div>\\r\\n                </div> \\n            </div>\\n\\n            <div class=\"modal-footer\">\\r\\n            <button id=\"emailOk\" data-role=\"button\"\\n                    class=\"btn btn-primary\"\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\n                <%= localization.OK %>\\n            </button>\\n            <button data-role=\"button\"\\n                    class=\"btn btn-default\"\\n                    data-bind=\"events: { click: cancelClick }\">\\n                <%= localization.Cancel %>\\n            </button>\\n        </div>\\n    </div>\\n</div>\\r\\n\\r\\n\\r\\n    \\r\\n</div>';});\n\n","\ndefine('text!forms/popups/userPickerPopup/view.html',[],function () { return '<div id=\"UserPickerPopupWindow\" class=\"cireson-window defined-form task-window\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-6\">\\r\\n                    <div class=\"form-group popup-search-box\">\\r\\n                        <input type=\"text\" data-value-update=\"keyup\" placeholder=\"<%= localization.SearchText %>\" data-bind=\"value: searchValue, events: { keypress: searchOnEnter }\" class=\"search-input\">\\r\\n                        <span data-bind=\"events:{click: search}\" class=\"search-icon\">\\r\\n                            <i class=\"fa fa-search\"></i>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div data-bind=\"visible: isDesktopView\">\\r\\n                <div data-control-grid=\"userPickerGrid\"></div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\"row\" data-bind=\"visible: isMobileView\">\\r\\n                <div class=\"col-md-4\">\\r\\n                    <div data-role=\"listview\"\\r\\n                         data-bind=\"source: userDataSource, events:{change: onListViewChanged}\"\\r\\n                         data-template=\"user-grid-mobile-template\"\\r\\n                         data-selectable=\"true\"\\r\\n                         class=\"user-listBox\"></div>\\r\\n                    <div data-role=\"pager\"\\r\\n                         data-bind=\"source: userDataSource\"\\r\\n                         data-numeric=\"false\"></div>\\r\\n                    <script type=\"text/x-kendo-template\" id=\"user-grid-mobile-template\">\\r\\n                        <div class=\"user-info\">\\r\\n                            <dl>\\r\\n                                <dt>#: FirstName # #: LastName #</dt>\\r\\n                                <dd>#: UserName # &middot; #: Title #</dd>\\r\\n                                <dd>#: Domain # &middot; #: Company #</dd>\\r\\n                            </dl>\\r\\n                        </div>\\r\\n\\r\\n                    </script>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons objectPicker-single-grid\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nuserPickerPopup\r\n**/\r\nvar __userPickerPopupSingleton;\r\n\r\ndefine('forms/popups/userPickerPopup/controller',['require','text!forms/popups/userPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/userPickerPopup/view.html\");\r\n    var singletonName = \"userPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (groupsOnly) {\r\n            // keep popup window as singleton\r\n            if (__userPickerPopupSingleton) {\r\n                return __userPickerPopupSingleton;\r\n            }\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            $(\"body\").append(ele);\r\n            __userPickerPopupSingleton = new UserPickerPopup(ele, groupsOnly);\r\n            \r\n            return __userPickerPopupSingleton;\r\n        }\r\n    }\r\n\r\n    /* -- UserPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback returns selected user object\r\n    */\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // CONTROL\r\n    var UserPickerPopup = function (targetEle, groupsOnly) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var gridHtml = targetEle.find(\"[data-control-grid]\");\r\n        var grid;\r\n        var gridUrl = groupsOnly\r\n            ? \"/User/GetUserSearchResults?groupsOnly=true\"\r\n            : \"/User/GetUserSearchResults\";\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"Name\";\r\n        var _idProp = \"Id\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                searchText: localization.SearchText,\r\n                selectUserText: groupsOnly ? localization.SelectGroup : localization.SelectUser,\r\n                searchValue: \"\",\r\n                //okText: localization.OK,\r\n                //cancelText: localization.Cancel,\r\n                search: onSearchClick,\r\n                searchOnEnter: function(e) {\r\n                    if (e.which == 13) {\r\n                        e.preventDefault();\r\n                        onSearchClick();\r\n                    }\r\n                },\r\n                save: onSaveClick,\r\n                cancel: onCancelClick,\r\n                userDataSource: new kendo.data.DataSource(),\r\n                onListViewChanged: function (e) {\r\n                    var index = e.sender.select().index();\r\n                    var dataItem = e.sender.dataSource.view()[index];\r\n                    this.set(\"selectedUser\", dataItem);\r\n                },\r\n                selectedUser: null,\r\n                isDesktopView: !app.isMobileDevice(),\r\n                isMobileView: app.isMobileDevice()\r\n\r\n        });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            createGrid();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n            self.vm = _vm;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n            \r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSearchClick = function () {\r\n            grid.search(_vm.searchValue);\r\n        }\r\n        var onSaveClick = function (e) {\r\n            var onMobile = app.isMobileDevice();\r\n            if (onMobile) {\r\n                if (!_.isNull(_vm.selectedUser)) {\r\n                    var userObj = _model.getGenericFromObj(_vm.selectedUser);\r\n                    $(self).trigger(\"save\", userObj);\r\n                    closePopup();\r\n                }\r\n            } else {\r\n                var selectedRow = grid.kendoGrid.select();\r\n                if (selectedRow) {\r\n                    var obj = _model.getGenericFromObj(grid.kendoGrid.dataItem(selectedRow));\r\n                    $(self).trigger(\"save\", obj);\r\n                    closePopup();\r\n                }\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n        var openPopup = function () {\r\n            //clear out search box value and search results before opening the window\r\n            self.vm.set(\"searchValue\", \"\");\r\n            grid.kendoDataSource.data([]);\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup(groupsOnly);\r\n        }        \r\n        var createGrid = function () {\r\n            grid = new Grid({\r\n                html: gridHtml,\r\n                url: gridUrl\r\n            });\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function (groupsOnly) {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n           \r\n            // ACTIONS\r\n\r\n            // METHODS\r\n            \r\n            var createKendoWindow = function() {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: groupsOnly ? localization.SelectGroup : localization.SelectUser,\r\n                    content: null,\r\n                    width: 680,\r\n                    height: 420,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Grid --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n        */\r\n        var Grid = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var html = settings.html;\r\n            var url = settings.url;\r\n            var height = 200;\r\n            var kendoGrid;\r\n            var kendoDataSource;\r\n            var searchValue;\r\n            // private params           \r\n           \r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoGrid();\r\n                kendoGrid.pager.element.hide();\r\n                bindEvents();\r\n                self.kendoGrid = kendoGrid;\r\n                self.kendoDataSource = kendoDataSource;\r\n                self.search = search;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                kendoGrid.bind(\"dataBound\", function (e) {\r\n                    kendoGrid.pager.element.show();\r\n                });\r\n                kendoGrid.element.on(\"dblclick\", \"tbody>tr\", onRowDblClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onRowDblClick = function () {\r\n                kendoGrid.select($(this));\r\n                onSaveClick();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var search = function(value){\r\n                searchValue = value;\r\n                kendoDataSource.read();\r\n                kendoDataSource.page(1);\r\n\r\n                _vm.set(\"userDataSource\", kendoDataSource);\r\n            }\r\n            var createKendoDataSource = function () {\r\n                kendoDataSource = new kendo.data.DataSource({\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": url,\r\n                            \"data\": function() {\r\n                                return {\r\n                                    userFilter: function() {\r\n                                        return searchValue;\r\n                                    },\r\n                                    filterByAnalyst: _vm.filterByAnalyst\r\n                                }\r\n                            },\r\n                            \"type\": \"GET\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": app.isMobileDevice ? 3 : 15,\r\n                    \"serverPaging\": true,\r\n                    \"serverSorting\": true,\r\n                    \"serverFiltering\": true,\r\n                    \"serverGrouping\": true,\r\n                    \"total\": 0,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                        \"model\": {\r\n                            \"fields\": {\r\n                                \"Id\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Name\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"PrincipalName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"UserName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Domain\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Company\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Title\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"FirstName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"LastName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"EmployeeId\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Analyst\": {\r\n                                    \"type\": \"number\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            var createKendoGrid = function () {\r\n                kendoGrid = html.kendoGrid({\r\n                    height: height,\r\n                    dataSource: kendoDataSource,\r\n                    selectable: \"Single,Row\",\r\n                    sortable: { mode: \"multiple\" },\r\n                    pageable: true,\r\n                    filterable: {\r\n                        extra: false,\r\n                        operators: {\r\n                            string: {\r\n                                startswith: localization.Startswith,\r\n                                contains: localization.Contains,\r\n                                eq: localization.Isequalto,\r\n                                neq: localization.Isnotequalto\r\n                            }\r\n                        }\r\n                    },\r\n                    autoBind: false,\r\n                    columns: [{\r\n                        \"title\": localization.id,\r\n                        \"hidden\": true,\r\n                        \"field\": \"Id\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.FirstName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"width\": \"110px\",\r\n                        \"field\": \"FirstName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.LastName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"width\": \"110px\",\r\n                        \"field\": \"LastName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Title,\r\n                        \"field\": \"Title\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.UserName,\r\n                        \"field\": \"UserName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Domain,\r\n                        \"field\": \"Domain\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Company,\r\n                        \"field\": \"Company\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }],\r\n                }).data(\"kendoGrid\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n        \r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/flyout/fileAttachmentsFlyout/mobile_view.html',[],function () { return '<div class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div>\\r\\n                <div class=\"fileattachment-list\"></div>\\r\\n                <div class=\"fileattachment-img-modal\"></div>\\r\\n            </div>\\r\\n\\r\\n            <script type=\"text/x-kendo-template\" id=\"filesTemplate\">\\r\\n                <div class=\"thumbnail-file\">\\r\\n                    <div class=\"cursor-pointer thumbnail-img\">\\r\\n                        # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                        <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                        # } else{ #\\r\\n                        <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                        # } #\\r\\n                    </div>\\r\\n                    <div class=\"thumbnail-caption\">\\r\\n                        <span>#: DisplayName #</span>\\r\\n                        <div class=\"overlay\">\\r\\n                            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"View Image\" action=\"view\">\\r\\n                                    <i class=\"fa fa-eye\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"Open in New Tab\" action=\"opennewtab\">\\r\\n                                    <i class=\"fa fa-external-link\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                            # } #\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"Download\" action=\"download\">\\r\\n                                    <i class=\"fa fa-download\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </script>\\r\\n            <script>\\r\\n                function selectFile(el, action) {\\r\\n                    //var listView = $(\".fileattachment-list\").data(\"kendoListView\");\\r\\n                    //var item = $(el).closest(\"[role=\\'option\\']\");\\r\\n                    //var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\\r\\n\\r\\n                    //if (action === \"download\") {\\r\\n                    //    var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\\r\\n                    //    location.href = downloadUrl + dataItem.BaseId;\\r\\n                    //} else if (action === \"opennewtab\") {\\r\\n                    //    var win = window.open(\\'about:blank\\');\\r\\n                    //    setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\\r\\n                    //        win.document.body.appendChild(win.document.createElement(\\'img\\')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\\r\\n                    //        win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\\r\\n                    //        win.focus();\\r\\n                    //    }, 0);\\r\\n\\r\\n\\r\\n                    //} else {\\r\\n                    //    var dialog = $(\\'.fileattachment-img-modal\\');\\r\\n                    //    dialog.kendoDialog({\\r\\n                    //        modal: true,\\r\\n                    //        title: dataItem.DisplayName,\\r\\n                    //        content: \"<div class=\\'file-img-container\\'><img src=\\\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\\\" onerror=\\\\\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\\\\\" alt=\\\\\"\" + dataItem.DisplayName + \"\\\\\" /></div>\",\\r\\n                    //        animation: {\\r\\n                    //            open: {\\r\\n                    //                effects: \"fade:in\"\\r\\n                    //            }\\r\\n                    //        }\\r\\n                    //    });\\r\\n                    //    $(\\'.k-window.k-widget\\').addClass(\\'acivity-popup-window\\');\\r\\n                    //    dialog.data(\"kendoDialog\").open();\\r\\n                    //}\\r\\n                }\\r\\n\\r\\n            </script>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }, visible: saveCancelBtn\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }, visible: saveCancelBtn\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel}, visible: closeBtn \">\\r\\n                <%= localization.Close %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/flyout/fileAttachmentsFlyout/view.html',[],function () { return '<div tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\">\\r\\n    <div class=\"modal-dialog\">\\r\\n        <div class=\"modal-content\">\\r\\n            <div class=\"modal-header\">\\r\\n                <h4 class=\"modal-title\"><%= localization.FileAttachments %></h4>\\r\\n            </div>\\r\\n            <div class=\"modal-body\">\\r\\n                <div>\\r\\n                    <div class=\"fileattachment-list\"></div>\\r\\n                    <div class=\"fileattachment-img-modal\"></div>\\r\\n                </div>\\r\\n\\r\\n                <script type=\"text/x-kendo-template\" id=\"filesTemplate\">\\r\\n                    <div class=\"thumbnail-file\">\\r\\n                        <div class=\"cursor-pointer thumbnail-img\">\\r\\n                            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                            <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                            # } else{ #\\r\\n                            <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" action=\"download\" onerror=\"    this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                            # } #\\r\\n                        </div>\\r\\n                        <div class=\"thumbnail-caption\">\\r\\n                            <span>#: DisplayName #</span>\\r\\n                            <div class=\"overlay\">\\r\\n                                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" view-image action=\"view\" title=\"View Image\">\\r\\n                                        <i class=\"fa fa-eye\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" title=\"Open in New Tab\" action=\"opennewtab\">\\r\\n                                        <i class=\"fa fa-external-link\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                # } #\\r\\n                                # if (BaseId!=null) { #\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" title=\"Download\" action=\"download\">\\r\\n                                        <i class=\"fa fa-download\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                # } #\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </script>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"modal-footer\">\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-primary\"\\r\\n                        data-bind=\"events: { click: save }, visible: saveCancelBtn\">\\r\\n                    <%= localization.OK %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancel }, visible: saveCancelBtn\">\\r\\n                    <%= localization.Cancel %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancel}, visible: closeBtn \">\\r\\n                    <%= localization.Close %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>';});\n\n","/**\r\nfileAttachmentsFlyout\r\n**/\r\n\r\nvar __fileAttachmentsPopupSingleton;\r\n\r\ndefine('forms/flyout/fileAttachmentsFlyout/controller',['require','text!forms/flyout/fileAttachmentsFlyout/mobile_view.html','text!forms/flyout/fileAttachmentsFlyout/view.html'],function (require) {\r\n    var tpl = app.isMobile() ? require(\"text!forms/flyout/fileAttachmentsFlyout/mobile_view.html\") : require(\"text!forms/flyout/fileAttachmentsFlyout/view.html\");\r\n    var singletonName = \"fileAttachmentsFlyout\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (vm, task) {\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            $(\"body\").append(ele);\r\n            __fileAttachmentsPopupSingleton = new FileAttachmentsPopup(vm, ele, task);\r\n\r\n            return __fileAttachmentsPopupSingleton;\r\n        }\r\n    }\r\n\r\n    // CONTROL\r\n    var FileAttachmentsPopup = function (vm, targetEle, task) {\r\n        var self = this;\r\n        var html = targetEle;\r\n\r\n        var _vmWindow, win;\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n\r\n            if (app.isMobile()) {\r\n                win = html.kendoCiresonWindow({\r\n                    title: localization.FileAttachments,\r\n                    width: 650,\r\n                    height: 740,\r\n                    actions: []\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            _vmWindow = kendo.observable({\r\n                save: function() {\r\n                    $(self).trigger(\"save\", { selectedFiles: _vmWindow.selectedFiles });\r\n                    _vmWindow.closeModal();\r\n                },\r\n                cancel: function() {\r\n                    $(self).trigger(\"cancel\");\r\n                    _vmWindow.closeModal();\r\n                },\r\n                isDesktopView: !app.isMobileDevice(),\r\n                isMobileView: app.isMobileDevice(),\r\n                selectedFiles: [],\r\n                onOpenFile: function(e) {\r\n                    var data = this.dataSource.view();\r\n\r\n                    _vmWindow.selectedFiles = $.map(this.select(),\r\n                        function(item) {\r\n                            return data[$(item).index()];\r\n                        });\r\n                },\r\n                saveCancelBtn: (task),\r\n                closeBtn: (!task),\r\n                openModal: function () {\r\n                    if (!app.isMobile())\r\n                        html.modal('show');\r\n                    else {\r\n                        html.removeClass('hide');\r\n                        html.show();\r\n                        win.open();\r\n                    }\r\n                },\r\n                closeModal: function() {\r\n                    if (app.isMobile())\r\n                        win.close();\r\n                    else\r\n                        html.modal('hide');\r\n                },\r\n                selectFile: function(el, isImage) {\r\n                    var listView = html.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                    var item = el.closest(\"[role='option']\");\r\n                    var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n\r\n                    if (isImage && task == \"sendEmail\") return;\r\n\r\n                    action = el.attr(\"action\");\r\n                    if (action === \"download\") {\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        location.href = downloadUrl + dataItem.BaseId;\r\n                    } else if (action === \"opennewtab\") {\r\n                        var win = window.open('about:blank');\r\n                        setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                            win.document.body.appendChild(win.document.createElement('img')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.focus();\r\n                        }, 0);\r\n                        \r\n                        \r\n                    } else {\r\n                        var dialog = $('.fileattachment-img-modal');\r\n\r\n                        if (dialog.length > 1) {\r\n                            for (var i = 1; i < dialog.length; i++) {\r\n                                if ($(dialog[i]).data(\"kendoDialog\"))\r\n                                    $(dialog[i]).data(\"kendoDialog\").destroy();\r\n                                dialog.eq(i).remove();\r\n                            }\r\n                        }\r\n\r\n                        if (dataItem) {\r\n\r\n                            var dialogs = $('.acivity-popup-window');\r\n                            if (dialogs.length > 1) {\r\n                                for (var i = 1; i < dialogs.length; i++) {\r\n                                    dialogs.eq(i).remove();\r\n                                }\r\n                            }\r\n\r\n                            dialog.kendoDialog({\r\n                                modal: true,\r\n                                title: dataItem.DisplayName,\r\n                                content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" +\r\n                                    dataItem.Content.data +\r\n                                    \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" +\r\n                                    dataItem.DisplayName +\r\n                                    \"\\\" /></div>\",\r\n                                animation: {\r\n                                    open: {\r\n                                        effects: \"fade:in\"\r\n                                    }\r\n                                }\r\n                            });\r\n                            $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                            dialog.data(\"kendoDialog\").open();\r\n\r\n                            //close preview window on overlay click\r\n                            $('.k-overlay').on(\"click\", function () {\r\n                                dialog.data(\"kendoDialog\").close();\r\n                            });\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            });\r\n            kendo.bind(html, _vmWindow);\r\n\r\n            if (!app.isMobile()) {\r\n\r\n                html.on('shown.bs.modal',\r\n                    function() {\r\n                        //reposition modal backdrop\r\n                        $('.modal-backdrop').each(function(i, obj) {\r\n                            html.before(obj);\r\n                        });\r\n\r\n                        //remove modal focus so tools with popup would work\r\n                        $(document).off('focusin.modal');\r\n                    });\r\n\r\n                html.on('hidden.bs.modal',\r\n                    function() {\r\n                        $('.modal-backdrop').remove();\r\n                    });\r\n\r\n            }\r\n\r\n            self.open = _vmWindow.openModal;\r\n            self.close = _vmWindow.closeModal;\r\n            self.vm = _vmWindow;\r\n\r\n            html.find(\".fileattachment-list\").kendoListView({\r\n                dataSource: vm.viewModel.FileAttachment,\r\n                template: kendo.template($(\"#filesTemplate\").html()),\r\n                selectable: (task) ? \"multiple\" : \"single\",\r\n                change: _vmWindow.onOpenFile,\r\n                dataBound: function () {\r\n                    //Remove view image icon if from send email.\r\n                    if (task == undefined && task != \"sendEmail\") {\r\n                        html.find(\"a[view-image]\").parent().hide();\r\n                    }\r\n\r\n                    html.find(\".custom-click\").on(\"click\", function () {\r\n                        _vmWindow.selectFile($(this), false);\r\n                    });\r\n\r\n                    if (!app.isMobile()) {\r\n                        html.find(\".thumbnail-img img\").on(\"click\", function () {\r\n                            _vmWindow.selectFile($(this), true);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        __construct();\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nsend email\r\n**/\r\n\r\n\r\ndefine('forms/tasks/sendEmail/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/sendEmail/mobile_view.html','text!forms/tasks/sendEmail/view.html','forms/popups/userPickerPopup/controller','forms/flyout/fileAttachmentsFlyout/controller','forms/fields/enum/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = app.isMobile() ?  require(\"text!forms/tasks/sendEmail/mobile_view.html\") : require(\"text!forms/tasks/sendEmail/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/userPickerPopup/controller\");\r\n    var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            var filter = {};\r\n\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            view.destroy();//there is some issue with the cloned element if we don't destroy the view\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                sendEmail: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n\r\n                    if (app.isMobile()) {\r\n                        win = cont.kendoCiresonWindow({\r\n                            title: localization.SendEmail,\r\n                            width: 650,\r\n                            height: 740,\r\n                            actions: [],\r\n                            activate: function () {\r\n                                getAffectedUserEmail(_vmWindow);\r\n                                setDefaultWIStatus(_vmWindow);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n                    }\r\n                    \r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        emailTo: \"\",\r\n                        emailCC: \"\",\r\n                        emailSubject: \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title,\r\n                        emailHTMLMessage: (session.emailBodyTemplate.length > 0) ? $('<div/>').html(session.emailBodyTemplate).text() : \"\",\r\n                        emailTextMessage:\"\",\r\n                        emailAttachment: \"\",\r\n                        emailTemplateDataSource: tempateDataSource,\r\n                        emailTemplateValue: \"\",\r\n                        attachmentErrorMessage: \"\",\r\n                        addToLog: (session.addToActionLogDefault === \"true\" || session.forceAddToActionLog === \"true\") ? true : false,\r\n                        enableAddToLog: (session.forceAddToActionLog === \"true\") ? false : true,\r\n                        okEnabled: true,\r\n                        setAsPrivate: (session.saveMessageAsPrivate === \"true\") ? true : false,\r\n                        okClick: function (e) {\r\n                            var recipientToEmail = _.without(_vmWindow.recipientToList, _.findWhere(_vmWindow.recipientToList, {\r\n                                Email: \"\"\r\n                            }));\r\n                            recipientToEmail = _.pluck(recipientToEmail, \"Email\");\r\n                            _vmWindow.set(\"emailTo\", recipientToEmail.join(\";\"));\r\n\r\n                            var recipientCcEmail = _.without(_vmWindow.recipientCCList, _.findWhere(_vmWindow.recipientCCList, {\r\n                                Email: \"\"\r\n                            }));\r\n                            recipientCcEmail = _.pluck(recipientCcEmail, \"Email\");\r\n                            _vmWindow.set(\"emailCC\", recipientCcEmail.join(\";\"));\r\n\r\n\r\n                            //validate email addresses first\r\n                            var arrEmail = _.union(recipientToEmail, recipientCcEmail);\r\n                            if (recipientToEmail.length <= 0) {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.InvalidEmailAddress,\r\n                                    message: localization.PleaseProvideEmailAddress\r\n                                });\r\n                                return;\r\n                            }\r\n                            else {\r\n                                var invalidEmailAdress = validateEmailAddress(arrEmail);\r\n\r\n                                if (invalidEmailAdress != null) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.InvalidEmailAddress,\r\n                                        message: localization.InvalidEmailAddressMessage.replace(\"{0}\", invalidEmailAdress)\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            //if we are adding to action log we require there to be message content\r\n                            if (this.addToLog) {\r\n                                var editor = cont.find(\"#messageEditor\").data(\"kendoEditor\");\r\n                                this.set(\"emailTextMessage\", editor.body.innerText || editor.body.textContent);\r\n\r\n                                var trimmedMessage = (this.emailTextMessage && _.isString(this.emailTextMessage)) ? this.emailTextMessage.trim() : \"\";\r\n\r\n                                if (trimmedMessage.length <= 0) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.MessageRequired,\r\n                                        message: localization.MessageRequiredWhenAddingLogEntry\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            //send email\r\n                            kendo.ui.progress(cont, true);\r\n                            sendEmail(this, cont);\r\n\r\n                        },\r\n                        cancelClick: function (e) {\r\n                            if (app.isMobile()) {\r\n                                win.close();\r\n                            } else {\r\n                                $.when(kendo.ui.ExtOkCancelDialog.show({\r\n                                    title: localization.Warning,\r\n                                    message: localization.UnsavedDataMessage,\r\n                                    icon: \"fa fa-exclamation\"\r\n                                })\r\n                                   ).done(function (response) {\r\n                                       if (response.button === \"ok\") {\r\n                                           shown = false;\r\n                                           cont.modal('hide');\r\n                                       }\r\n                                   });\r\n                            }\r\n                        },\r\n                        emailTemplateChange: function (e) {\r\n                            var filter = {\r\n                                field: \"Id\",\r\n                                operator: \"eq\",\r\n                                value: e.sender._old //_old stores the selected value's id\r\n                            };\r\n                            tempateDataSource.filter(filter);\r\n                        \r\n                            var dView = tempateDataSource.view();\r\n                            var subject = (dView.length > 0) ? \"[\" + vm.viewModel.Id + \"] \" + dView[0].Subject : \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title;\r\n                            var content = (dView.length > 0) ? dView[0].Content : \"\";\r\n                            \r\n                            content = cont.find(\"#messageEditor\").html(content).text();\r\n\r\n                            //change new line (\\n) to line break (<br>) on non-html template only\r\n                            if (!content.match(/<(\\w+)((?:\\s+\\w+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/)) {\r\n                                content = cont.find(\"#messageEditor\").html(content).text().replace(/\\r\\n|\\r|\\n/g, \"<br />\");\r\n                            }\r\n                            \r\n                            this.set(\"emailSubject\", subject);\r\n                            this.set(\"emailHTMLMessage\", content);\r\n\r\n                            tempateDataSource.filter({});\r\n                        },\r\n                        resizeEditor: function (e) {\r\n                            e.preventDefault();\r\n\r\n                            var $this = $(e.currentTarget);\r\n\r\n                            if ($this.children('i').hasClass('fa-expand')) {\r\n                                $this.children('i').removeClass('fa-expand');\r\n                                $this.children('i').addClass('fa-compress');\r\n                            }\r\n                            else if ($this.children('i').hasClass('fa-compress')) {\r\n                                $this.children('i').removeClass('fa-compress');\r\n                                $this.children('i').addClass('fa-expand');\r\n                            }\r\n                            $('#EmailNotificationWindow').find('table.k-editor').toggleClass('editor-expanded');\r\n                        },\r\n                        showChangeStatus: (vm.type === \"Incident\"),\r\n                        changeStatus: false,\r\n                        sendEmailAttachments: [],\r\n                        fromWorkItemAttachementsId: [],\r\n                        setFirstResponseDate: (_.isNull(vm.viewModel.FirstResponseDate)) ? true : false,\r\n                        enableFirstResponseDate: (_.isNull(vm.viewModel.FirstResponseDate)) ? true : false,\r\n                        openPopup: function (e) {\r\n                            var popupWindow = objectPickerPopup.getPopup();\r\n                            popupWindow.setSaveCallback(function (object) {\r\n                                var recipientType = (e.currentTarget.id === \"toField\") ? \"recipientToList\" : \"recipientCCList\";\r\n\r\n                                var picker = (e.currentTarget.id === \"toField\")\r\n                                    ? cont.find(\"#userPickerTo\").data(\"kendoMultiSelect\")\r\n                                    : cont.find(\"#userPickerCc\").data(\"kendoMultiSelect\");\r\n\r\n                                var userEmailObj = _.find(_vmWindow.users, function (item) {\r\n                                    return item.guid === object.id;\r\n                                });\r\n\r\n                                var selectedUser = !_.isUndefined(userEmailObj)\r\n                                    ? { Id: object.id, Name: object.name, Email: userEmailObj.email }\r\n                                    : { Id: object.id, Name: object.name, Email: \"\" };\r\n\r\n                                var isUserExist = picker.dataSource.data().find(function (element) {\r\n                                    return element.Id === selectedUser.Id;\r\n                                });\r\n\r\n                                if (!isUserExist) {\r\n                                    var key = (recipientType.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                                    filter[key] = selectedUser.Name;\r\n                                    picker.dataSource.add(selectedUser);\r\n                                }\r\n\r\n                                _vmWindow[recipientType].push(selectedUser);\r\n                                picker.value(_.pluck(_vmWindow[recipientType], \"Id\"));\r\n                            });\r\n                            popupWindow.vm.filterByAnalyst = false;\r\n                            popupWindow.open();\r\n                        },\r\n                        viewWorkItemFiles: function() {\r\n                            var flyoutWindow = attachmentPickerFlyout.getPopup(vm, \"sendEmail\");\r\n                            flyoutWindow.setSaveCallback(function(data) {\r\n                                var selectedFiles = data.selectedFiles || [];\r\n                                for (var n = 0; n < selectedFiles.length; n++) {\r\n                                    _vmWindow.sendEmailAttachments.push(selectedFiles[n]);\r\n                                }\r\n                            });\r\n                            flyoutWindow.open();\r\n                        },\r\n                        filesCount: vm.viewModel.FileAttachment.length || 0,\r\n                        users: [],\r\n                        recipientToList: [],\r\n                        recipientCCList: [],\r\n                        Status: { Id: \"\", Name: \"\" },\r\n                        changeStatusSetting: {\r\n                            statusTypeId: \"\",\r\n                            defaultStatusId: \"\",\r\n                            rootStatusEnumId: \"\",\r\n                            enableChangeStatus: true\r\n                        }\r\n                    });\r\n                   \r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    if (!app.isMobile()) {\r\n                        cont.on('shown.bs.modal',\r\n                            function () {\r\n                                //prevent shown event from duplicate trigger\r\n                                $(this).off('shown.bs.modal');\r\n                                //prevent body from scrolling when flyout is open\r\n                                $(\"body\").addClass(\"modal-open\");\r\n                                //set to true when flyout is open\r\n                                shown = true;\r\n                                //reposition modal backdrop\r\n                                $('.modal-backdrop').each(function (i, obj) {\r\n                                    cont.before(obj);\r\n                                });\r\n                                //remove modal focus so tools with popup would work\r\n                                $(document).off('focusin.modal');\r\n\r\n                                $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n                                //set defaults\r\n                                getAffectedUserEmail(_vmWindow);\r\n                                getSendEmailChangeStatusSettings(_vmWindow);\r\n                                setDefaultWIStatus(_vmWindow);\r\n\r\n                                //build editor\r\n                                buildEditor(cont.find(\"#messageEditor\"), _vmWindow);\r\n\r\n                                //build uploader\r\n                                initializeUploader(cont, _vmWindow);\r\n\r\n                                //build userpicker\r\n                                initializeUserPicker(cont.find(\"#userPickerTo\"), _vmWindow, \"recipientToList\");\r\n                                initializeUserPicker(cont.find(\"#userPickerCc\"), _vmWindow, \"recipientCCList\");\r\n\r\n                                //build status picker\r\n                                initializeStatusPicker(cont.find(\"#statusPicker\"), _vmWindow);\r\n\r\n                                //apply change status rule if root enum is not specified\r\n                                if (_.isNull(_vmWindow.changeStatusSetting.rootStatusEnumId)) {\r\n                                    applyChangeStatus(cont, vm, _vmWindow);\r\n                                }\r\n\r\n                            });\r\n\r\n                        cont.on('hidden.bs.modal', function () {\r\n                            $(\"body\").removeClass(\"modal-open\");\r\n\r\n                            $('.modal-backdrop').remove();\r\n\r\n                            var toPicker = cont.find(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                            var ccPicker = cont.find(\"#userPickerCc\").data(\"kendoMultiSelect\");\r\n\r\n                            //clear userpicker values on modal close\r\n                            toPicker.value(\"\");\r\n                            ccPicker.value(\"\");\r\n                        });\r\n\r\n                        cont.on('hide.bs.modal',\r\n                            function (e) {\r\n                                if (shown && $('#extOkCancelDialog').length <= 1) {\r\n                                    _vmWindow.cancelClick(e);\r\n                                    e.preventDefault();\r\n                                    e.stopImmediatePropagation();\r\n                                    return false;\r\n                                }\r\n                            });\r\n\r\n                        cont.modal('show');\r\n                    } else {\r\n                        //build userpicker\r\n                        initializeUserPicker(cont.find(\"#userPickerTo\"), _vmWindow, \"recipientToList\");\r\n                        initializeUserPicker(cont.find(\"#userPickerCc\"), _vmWindow, \"recipientCCList\");\r\n\r\n                        //build uploader\r\n                        initializeUploader(cont, _vmWindow);\r\n\r\n                        //build status picker\r\n                        initializeStatusPicker(cont.find(\"#statusPicker\"), _vmWindow);\r\n\r\n                        //init editor\r\n                        buildEditor(cont.find(\"#messageEditor\"), _vmWindow);\r\n\r\n                        $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n                        cont.removeClass('hide');\r\n                        cont.show();\r\n\r\n                        win.open();\r\n\r\n                    }\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"sendEmail\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var tempateDataSource = new kendo.data.DataSource({\r\n                transport: {\r\n                    read: \"/EmailNotification/GetNotificationTemplates\",\r\n                    dataType: \"json\"\r\n                },\r\n                schema: {\r\n                    model: {\r\n                        fields: {\r\n                            Id: { type: \"string\" },\r\n                            Name: { type: \"string\" }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            var addToCommentLog = function (commentMessage,  setAsPrivate) {\r\n                var newActionLog = {\r\n                    EnteredBy: session.user.Name,\r\n                    Title: localization.EMailSent,\r\n                    IsPrivate: setAsPrivate,\r\n                    EnteredDate: new Date().toISOString(),\r\n                    LastModified: new Date().toISOString(),\r\n                    Description: commentMessage,\r\n                    DescriptionDisplay: commentMessage,\r\n                    Image: app.config.iconPath + app.config.icons[\"E-Mail Sent\"], \r\n\t\t            ActionType: {\r\n\t\t                Id: \"15e86d4a-1b55-01be-C9fa-660a3cb3fc26\",\r\n\t\t                Name: \"Email Sent\"\r\n\t\t            }\r\n                    //ActionType: { Id: \"15E86D4A-1B55-01BE-C9FA-660A3CB3FC26\", Name: \"E-Mail Sent\" }\r\n                }\r\n                if (!vm.viewModel.ActionLog) {\r\n                    vm.viewModel.ActionLog = [];\r\n                }\r\n                \r\n                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                if (actionLogType) {\r\n                    vm.viewModel[actionLogType].push(newActionLog);\r\n                }\r\n            }\r\n\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n\r\n            var getAffectedUserEmail = function (_vmWindow) {\r\n                if (viewModel.RequestedWorkItem && viewModel.RequestedWorkItem.DisplayName != null) {\r\n                    filter['TO'] = vm.viewModel.RequestedWorkItem.DisplayName;\r\n                }\r\n                var affectedUserId = (vm.viewModel.RequestedWorkItem) ? vm.viewModel.RequestedWorkItem.BaseId : \"\";\r\n                $.ajax({\r\n                    url: \"/EmailNotification/GetffectedUserEmail\",\r\n                    type: \"GET\",\r\n                    data: { baseId: affectedUserId },\r\n                    success: function (data, textStatus, jqXHR) {\r\n                        if (!_.isUndefined(data) && data != \"\") {\r\n                            var affectedUser = { Id: vm.viewModel.RequestedWorkItem.BaseId, Name: vm.viewModel.RequestedWorkItem.DisplayName, Email: data };\r\n                            var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                            var isUserExist = picker.dataSource.data().find(function (element) {\r\n                                return element.Id === affectedUser.Id;\r\n                            });\r\n\r\n                            //add affected user to userpicker data source if id does not exist\r\n                            if (!isUserExist) {\r\n                                picker.dataSource.add(affectedUser);\r\n                            }\r\n\r\n                            //add affected user to recipient list\r\n                            _vmWindow.recipientToList.push(affectedUser);\r\n\r\n                            //set userpicker value to affected user\r\n                            picker.value(affectedUser.Id);\r\n                        }\r\n                    }\r\n                }); \r\n            }\r\n\r\n            var setDefaultWIStatus = function (_vmWindow) {\r\n                var enumId = _vmWindow.changeStatusSetting.defaultStatusId;\r\n\r\n                if (enumId == null) {\r\n                    _vmWindow.Status.set(\"Id\", vm.viewModel.Status.Id);\r\n                    _vmWindow.Status.set(\"Name\", vm.viewModel.Status.Name);\r\n                } else {\r\n                    $.ajax({\r\n                        url: \"/api/V3/Enum/GetEnumDisplayName\",\r\n                        type: \"GET\",\r\n                        data: { id: enumId },\r\n                        async: false,\r\n                        success: function (data, textStatus, jqXHR) {\r\n                            _vmWindow.Status.set(\"Id\", enumId);\r\n                            _vmWindow.Status.set(\"Name\", data);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            var validateEmailAddress = function (arrEmail) {\r\n                var invalidEmailAddress = null;\r\n                for (var i in arrEmail) {\r\n                    var email = arrEmail[i].trim();\r\n                    if (email == \"\") continue;\r\n                    if (app.validateEmail(email) == false) {\r\n                        invalidEmailAddress = email;\r\n                        break;\r\n                    }\r\n                }\r\n                return invalidEmailAddress;\r\n            }\r\n\r\n            var initializeUploader = function (cont, _vmWindow) {\r\n                _vmWindow.set(\"sendEmailAttachments\", []);\r\n                _vmWindow.set(\"filesCount\", 0);\r\n\r\n                var fileAction = function (el) {\r\n\r\n                    if (el.hasClass(\"opennewtab\")) {\r\n                        var win = window.open('about:blank');\r\n                        setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                            win.document.body.appendChild(win.document.createElement('img')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.focus();\r\n                        }, 0);\r\n\r\n                    }\r\n                    else {\r\n                        var dialog = $('.fileattachment-img-modal');\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        var listView = cont.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                        var item = el.closest(\"[role='option']\");\r\n                        var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n\r\n\r\n                        if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/) && !el.hasClass(\"download\")) {\r\n                            dialog.kendoDialog({\r\n                                modal: true,\r\n                                title: dataItem.DisplayName,\r\n                                content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" + dataItem.DisplayName + \"\\\" /></div>\",\r\n                                animation: {\r\n                                    open: {\r\n                                        effects: \"fade:in\"\r\n                                    }\r\n                                }\r\n                            });\r\n                            $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                            dialog.data(\"kendoDialog\").open();\r\n                        } else {\r\n                            if (dataItem.Content.data && !dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                                var blob = new Blob([dataItem.Content.data]);\r\n                                var url = window.URL.createObjectURL(blob);\r\n                                var fileName = dataItem.DisplayName;\r\n\r\n                                if (navigator.msSaveOrOpenBlob) {\r\n                                    navigator.msSaveOrOpenBlob(blob, fileName);\r\n                                    return;\r\n                                } else if (window.navigator.msSaveBlob) { // for IE browser\r\n                                    window.navigator.msSaveBlob(blob, fileName);\r\n                                    return;\r\n                                }\r\n\r\n                                var a = document.createElement(\"a\");\r\n                                document.body.appendChild(a);\r\n                                a.style = \"display: none\";\r\n\r\n                                a.href = url;\r\n                                a.download = fileName;\r\n                                a.click();\r\n                                window.URL.revokeObjectURL(url);\r\n                                document.body.removeChild(a);\r\n                            } else if (dataItem.BaseId) {\r\n                                if (dataItem.BaseId != null) {\r\n                                    location.href = downloadUrl + dataItem.BaseId;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                cont.find(\".fileattachment-list\").kendoListView({\r\n                    dataSource: _vmWindow.sendEmailAttachments,\r\n                    template: kendo.template(cont.find(\"#fileTemplate\").html()),\r\n                    selectable: \"single\",\r\n                    dataBound: function (e) {\r\n\r\n                        cont.find(\".custom-click\").on(\"click\", function () {\r\n                            fileAction($(this));\r\n                        });\r\n\r\n                        if (!app.isMobile()) {\r\n                            //Remove view image icon if not in mobile.\r\n                            cont.find(\"a[view-image]\").parent().hide();\r\n\r\n                            cont.find(\".thumbnail-img img\").on(\"click\", function () {\r\n                                fileAction($(this));\r\n                            });\r\n                        }\r\n                        \r\n                        /*var dialog = $('.fileattachment-img-modal');\r\n                        var index = this.select().index(),\r\n                        dataItem = this.dataSource.view()[index];\r\n\r\n                        if (dialog.length > 1) {\r\n                            for (var i = 1; i < dialog.length; i++) {\r\n                                if ($(dialog[i]).data(\"kendoDialog\"))\r\n                                    $(dialog[i]).data(\"kendoDialog\").destroy();\r\n                                dialog.eq(i).remove();\r\n                            }\r\n                        }\r\n\r\n                        if (dataItem) {\r\n\r\n                            var dialogs = $('.acivity-popup-window');\r\n                            if (dialogs.length > 1) {\r\n                                for (var i = 1; i < dialogs.length; i++) {\r\n                                    dialogs.eq(i).remove();\r\n                                }\r\n                            }\r\n\r\n                            if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                                dialog.kendoDialog({\r\n                                    modal: true,\r\n                                    title: dataItem.DisplayName,\r\n                                    content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" +\r\n                                        dataItem.Content.data +\r\n                                        \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" +\r\n                                        dataItem.DisplayName +\r\n                                        \"\\\" /></div>\",\r\n                                    animation: {\r\n                                        open: {\r\n                                            effects: \"fade:in\"\r\n                                        }\r\n                                    }\r\n                                });\r\n                                $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                                dialog.data(\"kendoDialog\").open();\r\n                            } else {\r\n                                if (dataItem.Content.data) {\r\n                                    var blob = new Blob([dataItem.Content.data]);\r\n                                    var url = window.URL.createObjectURL(blob);\r\n                                    var fileName = dataItem.DisplayName;\r\n\r\n                                    if (navigator.msSaveOrOpenBlob) {\r\n                                        navigator.msSaveOrOpenBlob(blob, fileName);\r\n                                        return;\r\n                                    } else if (window.navigator.msSaveBlob) { // for IE browser\r\n                                        window.navigator.msSaveBlob(blob, fileName);\r\n                                        return;\r\n                                    }\r\n\r\n                                    var a = document.createElement(\"a\");\r\n                                    document.body.appendChild(a);\r\n                                    a.style = \"display: none\";\r\n\r\n                                    a.href = url;\r\n                                    a.download = fileName;\r\n                                    a.click();\r\n                                    window.URL.revokeObjectURL(url);\r\n                                    document.body.removeChild(a);\r\n                                }else if (dataItem.BaseId) {\r\n                                    var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                                    location.href = downloadUrl + dataItem.BaseId;\r\n                                }\r\n                            }\r\n                        }\r\n                        */\r\n                    },\r\n                    remove: function (e) {\r\n                        //console.warn(_vmWindow)\r\n                    }\r\n                });\r\n\r\n\r\n               \r\n                var uploader = cont.find(\"#email-attachment\").kendoUpload({\r\n                    async: {\r\n                        saveUrl: \"/FileAttachment/UploadAttachment/\" + vm.viewModel.BaseId + \"?className=\" + vm.viewModel.ClassName + \"&count=\" + vm.viewModel.FileAttachment.length,\r\n                        autoUpload: true\r\n                    },\r\n                    success: function (e) {\r\n                        kendo.ui.progress(cont.find(\".fileattachment-list\"), true);\r\n                        var response = e.response;\r\n                        if (e.operation == \"upload\") {\r\n                            for (var i = 0; i < e.files.length; i++) {\r\n                                var file = e.files[i].rawFile;\r\n                                if (file) {\r\n                                    if (!_.isUndefined(response.FileAttachment)) {\r\n                                        _vmWindow.sendEmailAttachments.push(response.FileAttachment);\r\n                                        _vmWindow.set(\"attachmentErrorMessage\", \"\");\r\n                                        _vmWindow.set(\"okEnabled\", true);\r\n                                    } else if (!_.isUndefined(response.success) && response.success == false) {\r\n                                        _vmWindow.set(\"okEnabled\", false);\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.ErrorDescription,\r\n                                            message: response.message,\r\n                                            icon: \"fa fa-exclamation\"\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        kendo.ui.progress(cont.find(\".fileattachment-list\"), false);\r\n                    },\r\n                    error: function (e) {\r\n                        var err = $.parseJSON(e.XMLHttpRequest.responseText);\r\n                        $.map(e.files, function (file) {\r\n                            console.warn(\"Could not upload \" + file.name);\r\n                        });\r\n                    },\r\n                    showFileList: false,\r\n                    dropZone: \".drop-zone-element\"\r\n                }).data(\"kendoUpload\");\r\n              \r\n                cont.find(\".browse-file\").click(function (e) {\r\n                    $(\"#email-attachment\").trigger(\"click\");\r\n                });\r\n\r\n\r\n            }\r\n\r\n            var initializeUserPicker = function (targetEle, viewModel, targetProp) {\r\n                //skipped initialization if we already have one created\r\n                if (!_.isUndefined(targetEle.data(\"kendoMultiSelect\"))) { return; }\r\n\r\n                var targetKey = (targetEle[0].id.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                var userPicker = targetEle.kendoMultiSelect({\r\n                    placeholder: localization.Search,\r\n                    dataTextField: \"Name\",\r\n                    dataValueField: \"Id\",\r\n                    autoBind: false,\r\n                    filter: \"contains\",\r\n                    dataSource: new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/api/V3/User/GetUserListWithEmail\",\r\n                                data: {\r\n                                    filterByAnalyst: false,\r\n                                    maxNumberOfResults: 1000,\r\n                                    userFilter: function () {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true,\r\n                        filter: [{ field: \"Email\", operator: \"neq\", value: \"\" }]\r\n                    }),\r\n                    filtering: function (e) {\r\n                        if (e.filter != undefined) {\r\n                            var key = (e.sender.element[0].id.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                            filter[key] = e.filter.value;\r\n                        }\r\n                    },\r\n                    open: function () {\r\n                        var filters = this.dataSource.filter();\r\n                        if (filters!=null) {\r\n                            //clear applied filters\r\n                            //Filter should be cleared to remove conflict with assigning the affected users.\r\n                            //this.dataSource.filter({});\r\n                        }\r\n                    },\r\n                    tagTemplate: \"<span title='#: data.Email #'>#: data.Name #;</span>\",\r\n                    select: function (e) {\r\n                        var currentList = viewModel.get(targetProp);\r\n                        currentList.push(e.dataItem);\r\n                        viewModel.set(targetProp, currentList);\r\n                    },\r\n                    deselect: function (e) {\r\n                        var currentList = viewModel.get(targetProp);\r\n                        if (e.dataItem.Id) {\r\n                            currentList = _.filter(currentList,\r\n                                function(item) {\r\n                                    return item.Id !== e.dataItem.Id;\r\n                                });\r\n                        }\r\n                        viewModel.set(targetProp, currentList);\r\n                    },\r\n                    clearButton: false\r\n                }).data(\"kendoMultiSelect\");\r\n              \r\n                userPicker.input.on(\"keydown\", function (e) {\r\n                    if (e.keyCode === 9) {\r\n                        //treat tab event as \"enter\"\r\n                        var e = jQuery.Event(\"keydown\");\r\n                        e.which = 13; // # Some key code value\r\n                        e.keyCode = 13;\r\n                        userPicker.input.trigger(e);\r\n                    }\r\n                });\r\n            }\r\n\r\n            var sendEmail = function (_vmWindow, cont) {\r\n                var bChangeStatus = _vmWindow.changeStatus;\r\n                var bAddActionLog = _vmWindow.addToLog;\r\n                var addToLogSkipped = false;\r\n                var bHasAttachment = (_vmWindow.sendEmailAttachments.length > 0);\r\n                var strAttachedFileNames = (_vmWindow.sendEmailAttachments.length > 0)\r\n                    ? _.pluck(_vmWindow.sendEmailAttachments, \"DisplayName\").join(',') : \"\"; //multiple filenames, comma delimited\r\n                var strMessage = encodeURIComponent(_vmWindow.emailHTMLMessage);\r\n                var strMessagePlain = _vmWindow.emailTextMessage;\r\n\r\n                var workItemFileIds = (_vmWindow.fromWorkItemAttachementsId.length > 0)\r\n                    ? _vmWindow.fromWorkItemAttachementsId.join(',') : \"\";\r\n\r\n\r\n                strMessage = (session.emailFooterTemplate.length > 0)\r\n                    ? strMessage + \"\\r\\n\" + encodeURIComponent($('<div/>').html(session.emailFooterTemplate).text())\r\n                    : strMessage;\r\n                \r\n                var emailData = {\r\n                    To: _vmWindow.emailTo,\r\n                    Cc: _vmWindow.emailCC,\r\n                    Subject: _vmWindow.emailSubject.replace(/</g, \"%3C\").replace(/>/g, \"%3E\"),\r\n                    Message: strMessage,\r\n                    AttachedFileNames: strAttachedFileNames,\r\n                    WorkItemId: vm.viewModel.BaseId,\r\n                    workItemFileIds: workItemFileIds\r\n                };\r\n                var sendEmailAttachments = _vmWindow.sendEmailAttachments;\r\n                var bSetFirstResponsDate = _vmWindow.setFirstResponseDate;\r\n                \r\n                $.ajax({\r\n                    url: \"/EmailNotification/SendEmailNotification\",\r\n                    type: \"POST\",\r\n                    data: emailData,\r\n                    success: function (data, textStatus, jqXHR) {\r\n                        var bSuccess = data.toLowerCase() == \"true\" ? true : false;\r\n                        kendo.ui.progress(cont, false);\r\n                        if (bSuccess) {\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.SendEmail,\r\n                                message: localization.SendEmailSuccessMessage\r\n                            })).done(function (response) {\r\n                                //change status if status in dropdown has value\r\n                                if (_vmWindow.Status != null && _vmWindow.Status.Id != \"\") {\r\n                                    vm.viewModel.Status.set(\"Id\", _vmWindow.Status.Id);\r\n                                    bChangeStatus = true;\r\n                                }\r\n\r\n                                if (bHasAttachment) {\r\n                                    //add file attachment details to vm after email is sent\r\n                                    if (!_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                                        _.each(sendEmailAttachments, function (item) {\r\n                                            vm.viewModel.FileAttachment.push(item);\r\n\r\n                                            var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                            if (actionLogType) {\r\n                                                vm.viewModel[actionLogType].unshift(new app.dataModels[actionLogType].fileAdded(item.DisplayName));\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (bAddActionLog) {\r\n                                    strMessagePlain = _.isUndefined(strMessagePlain) ? \"\" : strMessagePlain.substring(0, 4000);\r\n\r\n                                    if (strMessagePlain.length > 0) {\r\n                                        addToCommentLog(strMessagePlain.replace(/</g, '&lt;').replace(/>/g, '&gt;'), _vmWindow.setAsPrivate);\r\n                                    } else {\r\n                                        bAddActionLog = false;\r\n                                        addToLogSkipped = true;\r\n                                    }\r\n                                }\r\n\r\n                                if (bSetFirstResponsDate) {\r\n                                    vm.viewModel.set(\"FirstResponseDate\", new Date().toISOString());\r\n                                }\r\n\r\n                                //--end additional change checks/processing\r\n\r\n                                //save changes and show warnings, if any\r\n                                var handleSaveSuccess = function () {\r\n                                    if (bAddActionLog || bHasAttachment || bChangeStatus || bSetFirstResponsDate) {\r\n                                        vm.save(function () {\r\n                                            app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                            switch (vm.type) {\r\n                                                case \"ChangeRequest\":\r\n                                                    location.href = \"/ChangeRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                                    break;\r\n                                                case \"ServiceRequest\":\r\n                                                    location.href = \"/ServiceRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                                    break;\r\n                                                case \"Incident\":\r\n                                                    location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                                    break;\r\n                                                case \"Problem\":\r\n                                                    location.href = \"/Problem/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                                    break;\r\n                                                case \"ReleaseRecord\":\r\n                                                    location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                                    break;\r\n                                                default:\r\n                                                    //my workitem view\r\n                                                    location.href = \"/View/cca5abda-6803-4833-accd-d59a43e2d2cf/\";\r\n                                                    break;\r\n                                            }\r\n                                        }, saveFailure);\r\n                                    }\r\n                                }\r\n                                if (addToLogSkipped) {\r\n                                    //note: addToLogSkipped dialog will only show if the empty message validation fails\r\n                                    $.when(kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.SkippedAddingLogEntryTitle,\r\n                                        message: localization.ErrorAddingLogEntryMessage,\r\n                                        icon: \"fa fa-warning\"\r\n                                    })).done(function() {\r\n                                        handleSaveSuccess();\r\n                                    });\r\n                                } else {\r\n                                    handleSaveSuccess();\r\n                                }\r\n                                //--end save changes and warnings\r\n                            });\r\n                        } else {\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.SendEmail,\r\n                                message: localization.SendEmailFailedMessage\r\n                            }));\r\n                            kendo.ui.progress(cont, false);\r\n                        }\r\n                    },\r\n                    error: function (jqXHR, textStatus, errorThrown) {\r\n                        console.log(jqXHR, textStatus, errorThrown)\r\n                    }\r\n                });\r\n            }\r\n\r\n            var buildEditor = function (targetEle, _vmWindow) {\r\n                var defaultTools = [\r\n                     \"bold\", \"italic\", \"underline\",\r\n                     \"formatting\", \"foreColor\", \"backColor\",\r\n                     \"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\",\r\n                     \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                     \"createLink\", \"unlink\", \"insertImage\",\r\n                     \"viewHtml\",\r\n                     \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                     { name: \"insertLineBreak\", shift: true },\r\n                     { name: \"insertParagraph\", shift: true }\r\n                ];\r\n                var mobileTools = [\r\n                    \"formatting\",\r\n                    \"createLink\", \"unlink\", \"insertImage\", \"viewHtml\",\r\n                    \"bold\", \"italic\", \"underline\",\r\n                    \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                    \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                    { name: \"insertLineBreak\", shift: true },\r\n                    { name: \"insertParagraph\", shift: true }\r\n                ];\r\n                var editor = targetEle.data(\"kendoEditor\");\r\n                if (!_.isUndefined(editor)) { return; }\r\n                editor = targetEle.kendoEditor({\r\n                    change: function (e) {\r\n                        var content = e.sender.body.innerText || e.sender.body.textContent;\r\n                        _vmWindow.set(\"emailTextMessage\", content);\r\n                    },\r\n                    tools: app.isMobileDevice() ? mobileTools : defaultTools,\r\n                    stylesheets: [\"/Content/Styles/cireson.mentions-in-keditor.min.css\"],\r\n                    encoded: true,\r\n                    paste: function (e) {\r\n                    },\r\n                    pasteCleanup: {\r\n                        custom: function (html) {\r\n\r\n                            try {\r\n                                if ($(html)[0].tagName === \"IMG\") {\r\n\r\n                                    var dataSRC = $(html).attr('src');\r\n                                    var blob;\r\n\r\n                                    if (dataSRC.match(/^data:image\\/(png|jpg);base64,/) === null) {\r\n                                        var img = new Image;\r\n\r\n                                        img.setAttribute('crossOrigin', 'anonymous');\r\n\r\n                                        img.src = dataSRC;\r\n\r\n                                        $(img).one(\"load\",\r\n                                            function () {\r\n                                                setTimeout(function () {\r\n                                                        dataSRC = getBase64Image(img);\r\n                                                        blob = dataURItoBlob(dataSRC);\r\n                                                        uploadPastedImage(blob, _vmWindow);\r\n                                                    },\r\n                                                    0);\r\n                                            }).each(function () {\r\n                                            if (this.complete) $(this).load();\r\n                                        });\r\n                                    } else {\r\n                                        blob = dataURItoBlob(dataSRC);\r\n                                        uploadPastedImage(blob, _vmWindow);\r\n                                    }\r\n                                }\r\n                            } catch (err) {\r\n                                //console.error(err);\r\n                            }\r\n\r\n                            return html;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                function uploadPastedImage(file, _vmWindow) {\r\n                    var d = new Date();\r\n                    var timestamp = d.getTime();\r\n\r\n                    var formData = new FormData();\r\n                    formData.append('files', file, \"screenshot_\" + timestamp + \".png\");\r\n\r\n                    $.ajax({\r\n                        url: \"/FileAttachment/UploadAttachment/\" +\r\n                            vm.viewModel.BaseId +\r\n                            \"?className=\" +\r\n                            vm.viewModel.ClassName +\r\n                            \"&count=\" +\r\n                            vm.viewModel.FileAttachment.length,\r\n                        data: formData,\r\n                        type: 'POST',\r\n                        async: true,\r\n                        contentType: false,\r\n                        processData: false,\r\n                        dataType: \"json\",\r\n                        success: function (response) {\r\n                            if (!_.isUndefined(response.FileAttachment)) {\r\n                                _vmWindow.sendEmailAttachments.push(response.FileAttachment);\r\n                                _vmWindow.set(\"attachmentErrorMessage\", \"\");\r\n                                _vmWindow.set(\"okEnabled\", true);\r\n                            } else {\r\n                                _vmWindow.set(\"attachmentErrorMessage\", response.message);\r\n                                _vmWindow.set(\"okEnabled\", false);\r\n                                _vmWindow.set(\"emailAttachment\", \"\");\r\n                            }\r\n                        },\r\n                        error: function(err) {\r\n                            console.warn(err);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                function getBase64Image(img) {\r\n                    // Create an empty canvas element\r\n                    var canvas = document.createElement(\"canvas\");\r\n                    canvas.width = img.width;\r\n                    canvas.height = img.height;\r\n                    // Copy the image contents to the canvas\r\n                    var ctx = canvas.getContext(\"2d\");\r\n                    ctx.drawImage(img, 0, 0);\r\n                    // Get the data-URL formatted image\r\n                    // Firefox supports PNG and JPEG. You could check img.src to\r\n                    // guess the original format, but be aware the using \"image/jpg\"\r\n                    // will re-encode the image.\r\n                    var dataURL = canvas.toDataURL(\"image/png\");\r\n                    return dataURL;\r\n                }\r\n\r\n                function dataURItoBlob(dataURI) {\r\n                    // convert base64 to raw binary data held in a string\r\n                    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n                    var byteString = atob(dataURI.split(',')[1]);\r\n\r\n                    // separate out the mime component\r\n                    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\r\n\r\n                    // write the bytes of the string to an ArrayBuffer\r\n                    var ab = new ArrayBuffer(byteString.length);\r\n\r\n                    // create a view into the buffer\r\n                    var ia = new Uint8Array(ab);\r\n\r\n                    // set the bytes of the buffer to the correct values\r\n                    for (var i = 0; i < byteString.length; i++) {\r\n                        ia[i] = byteString.charCodeAt(i);\r\n                    }\r\n\r\n                    // write the ArrayBuffer to a blob, and you're done\r\n                    var blob = new Blob([ab], { type: mimeString });\r\n                    return blob;\r\n\r\n                }\r\n\r\n\r\n                $.get(\"/api/V3/User/GetUserList\", { fetchAll: true }, function (data) {\r\n\r\n                    var names = $.map(data, function (value, i) {\r\n                        return { 'id': i, 'name': value.Name, 'guid': value.Id, 'email': value.Email };\r\n                    });\r\n\r\n                    //store user data to viewmodel\r\n                    _vmWindow.users = names;\r\n\r\n                    var at_config = {\r\n                        at: \"@\",\r\n                        data: names,\r\n                        headerTpl: '<div class=\"atwho-header\">Search Users</div>',\r\n                        insertTpl: '${atwho-at}${name}',\r\n                        displayTpl: \"<li id='${guid}'> ${name} <br><span>${email}</span> </li>\",\r\n                        limit: 5,\r\n                        startWithSpace: false,\r\n                        editableAtwhoQueryAttrs: {}\r\n                    }\r\n\r\n                    var iframe = editor.prev()[0];\r\n                    var innerDoc = iframe.contentDocument || iframe.contentWindow.document;\r\n                   \r\n                    $inputor = $(innerDoc).find('body').atwho(at_config);\r\n                    $inputor.caret('pos', 47);\r\n                    $inputor.atwho('run');\r\n\r\n                    $inputor.on(\"inserted.atwho\", function (event, $li) {\r\n                        var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                        var userId = $($li)[0].id;\r\n\r\n                        var user = _.filter(data,\r\n                            function (el) {\r\n                                return el.Id === userId;\r\n                            });\r\n\r\n                        _vmWindow.recipientToList.push(user[0]);\r\n                        picker.value(_.pluck(_vmWindow.recipientToList, \"Id\"));\r\n                    });\r\n\r\n                    $(document).on(\"removed.atwho\", function (e) {\r\n                        var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                        if ($(iframe).is($(e.target.activeElement))) {\r\n                            var userId = e.removedAtWhoId;\r\n                            var newList = _.without(_vmWindow.recipientToList, _.findWhere(_vmWindow.recipientToList, {\r\n                                Id: userId\r\n                            }));\r\n                            _vmWindow.set(\"recipientToList\", newList);\r\n                            picker.value(_.pluck(_vmWindow.recipientToList, \"Id\"));\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n            var initializeStatusPicker = function (targetEle, viewModel) {\r\n                var filterIdParam = \"\";\r\n                var filterId = viewModel.changeStatusSetting.rootStatusEnumId;\r\n                if (filterId != null) {\r\n                    if (filterId.toLowerCase() == viewModel.Status.Id.toLowerCase()) {\r\n                        filterIdParam = filterId;\r\n                    } else {\r\n                        filterIdParam = filterId + \",\" + viewModel.Status.Id;\r\n                    }\r\n                }\r\n                var enumId = viewModel.changeStatusSetting.statusTypeId;\r\n\r\n                var statusProperties = {\r\n                    PropertyName: \"Status\",\r\n                    PropertyDisplayName: \"ChangeStatus\",\r\n                    EnumId: viewModel.changeStatusSetting.statusTypeId,\r\n                    FilterIds: filterIdParam,\r\n                    Disabled: !viewModel.changeStatusSetting.enableChangeStatus\r\n                };\r\n\r\n                buildEnumPicker(targetEle, statusProperties, viewModel);\r\n            };\r\n\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n           \r\n            var applyChangeStatus = function (cont, vm, _vmWindow) {\r\n                var selectedWiType = vm.type;\r\n                var currentStatusId = vm.viewModel.Status.Id;\r\n                var statusEnumId = _vmWindow.changeStatusSetting.statusTypeId;\r\n                var rootStatusEnumId = _vmWindow.changeStatusSetting.rootStatusEnumId;\r\n                var dropDownControl = cont.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                var treeControl = cont.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n\r\n                //determine allowed status changes based on current type and status\r\n                var changeRules = app.lib.getChangeStatusRules();\r\n                var changeRulesFilter = changeRules[selectedWiType][currentStatusId];\r\n\r\n                //since Incident can have custom enums we need to check here if no rules were set then its not resolved\r\n                if (selectedWiType == \"Incident\" && _.isUndefined(changeRulesFilter)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"neq\", value: app.constants.workItemStatuses.Incident.Closed };\r\n                }\r\n\r\n                if (!_.isNull(rootStatusEnumId)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"eq\", value: rootStatusEnumId };\r\n                }\r\n\r\n                //apply allowed status filtering\r\n                treeControl.dataSource.options.serverFiltering = false;\r\n                treeControl.dataSource.filter(changeRulesFilter);\r\n\r\n                //reassign dropdown datasource with filtered data so that users will not be able to access restricted status by typing\r\n                $.get(\"/api/V3/Enum/GetFlatList/\", { id: statusEnumId, itemFilter: \"\" }, function (data) {\r\n                    var comboDataSource = new kendo.data.DataSource();\r\n                    comboDataSource.data(data);\r\n                    comboDataSource.filter(changeRulesFilter);\r\n                    if (comboDataSource.view().length > 0) {\r\n                        dropDownControl.setDataSource(comboDataSource.view());\r\n                    }\r\n                });\r\n            };\r\n           \r\n            var getSendEmailChangeStatusSettings = function (viewModel) {\r\n                switch (vm.type) {\r\n                    case \"ServiceRequest\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ServiceRequest.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailServiceRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailServiceDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailServiceAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"ChangeRequest\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ChangeRequest.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailChangeRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailChangeDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailChangeAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"Problem\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.Problem.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailProblemRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailProblemDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailProblemAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"ReleaseRecord\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ReleaseRecord.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailReleaseRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailReleaseDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailReleaseAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"Incident\":\r\n                    default:\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.Incident.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailIncidentRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailIncidentDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailIncidentAllowAnalystToChangeStatus;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nCustom\r\n**/\r\n\r\ndefine('forms/tasks/custom/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            if (_.isNull(node.Label)) {\r\n                //if no label (achot no link, just call the function)\r\n                node.Configs.func(vm, vm.viewModel);\r\n\r\n            } else {\r\n                //first add the anchor\r\n                var link = _.template(anchor);\r\n\r\n                //make sure we have all the node set\r\n                var properties = {\r\n                    Target: \"customFunc\"\r\n                };\r\n\r\n                $.extend(true, properties, node);\r\n\r\n                //create view model \r\n                var viewModel = kendo.observable({\r\n                    //call custom defined function\r\n                    customFunc: function () {\r\n                        node.Configs.func(vm, vm.viewModel);\r\n                    }\r\n                });\r\n\r\n                var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n                callback(anchorElm.render());\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/spacer/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nSPACER\r\n**/\r\n\r\ndefine('forms/tasks/spacer/controller',['require','text!forms/tasks/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/tasks/spacer/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/associateItem/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    $(\"input[name='\" + node.Configs.relationshipKey + \"']\").parent().find(\".searchIcon\").click();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            \r\n\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/setDate/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"datePicker\"/>\\r\\n            <div id=\"disposalReference\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/fields/date/view.html',[],function () { return '<div class=\"form-group\"\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n    >\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input name=\"<%= PropertyName %>\"\\r\\n           data-control=\"datePicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-from=\"<%= FromFilter %>\"\\r\\n           data-control-to=\"<%= ToFilter %>\"\\r\\n           data-control-from-relative=\"<%= FromRelative %>\"\\r\\n           data-control-to-relative=\"<%= ToRelative %>\"\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n     />\\r\\n</div>';});\n\n","/**\r\nDate\r\n**/\r\n\r\ndefine('forms/fields/date/controller',['require','text!forms/fields/date/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/date/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                FromFilter: '',\r\n                ToFilter: '',\r\n                FromRelative: '',\r\n                ToRelative: '',\r\n                Disabled: node.disabled,\r\n                Required: node.Required\r\n            };\r\n\r\n            //set from filter\r\n            if (node.MinValue != undefined) {\r\n                if (node.MinValue.indexOf(\":\") != -1) {\r\n                    properties.FromRelative = node.MinValue;\r\n                } else if (typeof node.MinValue == \"string\") {\r\n                    properties.FromFilter = node.MinValue;\r\n                }\r\n            }\r\n\r\n            //set to filter\r\n            if (node.MaxValue != undefined) {\r\n                if (node.MaxValue.indexOf(\":\") != -1) {\r\n                    properties.ToRelative = node.MaxValue;\r\n                } else if (typeof node.MaxValue == \"string\") {\r\n                    properties.ToFilter = node.MaxValue;\r\n                }\r\n            }\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/string/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"value: <%= PropertyName %><% if ( LimitLength ){ %>, events : { blur: view.stringController.CheckLength }<% } %>\"\\r\\n\\r\\n\\r\\n    <% if ( LimitLength ){ %>\\r\\n    maxlength=\"<%= MaxLength %>\"\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n\\r\\n    />\\r\\n\\r\\n    <% if ( LimitLength ){ %>\\r\\n    <p class=\"help-block validation-summary-errors\" style=\"display: none;\"><%= localization.MaxLengthError.replace(\"{0}\", MaxLength) %></p>\\r\\n    <% } %>\\r\\n\\r\\n</div>';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/string/controller',['require','text!forms/fields/string/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/string/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.stringController = {\r\n                CheckLength: function CheckLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n\r\n            vm.view.buildStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength\r\n                };\r\n                $.extend(true, properties, node);\r\n                \r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/setDate/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/setDate/view.html','forms/fields/date/controller','forms/fields/string/controller','forms/fields/longstring/controller','forms/fields/boolean/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/setDate/view.html\");\r\n    var datePicker = require(\"forms/fields/date/controller\");\r\n    var stringArea = require(\"forms/fields/string/controller\");\r\n    var txtArea = require(\"forms/fields/longstring/controller\");\r\n    var checkBox = require(\"forms/fields/boolean/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = node.Configs.Title;//localization.ChangeStatusTask;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            var datePickerCtrl;\r\n            var checkboxCtrl;\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            switch(node.Configs.viewType){\r\n                                case \"hdDisposal\":\r\n                                    vm.viewModel.set(\"HardwareAssetStatus\", { Id: \"020822bd-7d3a-4c0f-1be4-325ef1aa52b4\", Name: localization.Disposed });\r\n                                    break;\r\n                                case \"hdREcieveDate\":\r\n                                case \"MasterContractRenewedOn\":\r\n                                    if (vm.viewModel.get(checkboxCtrl.attr(\"name\"))) {\r\n                                        datePickerCtrl.val(\"\").blur();\r\n\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            var cancelledDate = \"\";\r\n                            if (!_.isNull(originalDate)) {\r\n                                cancelledDate = kendo.toString(new Date(originalDate), \"g\");\r\n                            }\r\n                            $('[name=\"' + dateProperties.PropertyName + '\"]').val(cancelledDate).blur();\r\n                            if (node.Configs.viewType == \"hdDisposal\") {\r\n                                vm.viewModel.set(\"DisposalReference\", OriginalDisposalReference);\r\n                            } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                                vm.viewModel.recieveCheckbox = OriginalCheckBox;\r\n                            }\r\n                            else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                                vm.viewModel.masterContractStartingDateCheckbox = OriginalCheckBox;\r\n                            }\r\n\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    if (node.Configs.viewType == \"hdDisposal\") {\r\n                        dateLabel = localization.DisposalDate;\r\n                    } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                        dateLabel = localization.ReceiveDate;\r\n                    } else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                        dateLabel = localization.StartDate;\r\n                    }\r\n\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    //create status enumPicker\r\n                    \r\n                    var originalDate = vm.viewModel.get(node.Configs.propertyKey);\r\n                    var dateProperties = {\r\n                        PropertyName: node.Configs.propertyKey,\r\n                        PropertyDisplayName: dateLabel,\r\n                        vm: vm.viewModel,\r\n                        disabled:false\r\n                    };\r\n                    \r\n                    buildDatePicker(cont.find('#datePicker'), dateProperties, vm.viewModel);\r\n\r\n                    if (node.Configs.viewType == \"hdDisposal\") {\r\n                        var OriginalDisposalReference = vm.viewModel.get(\"DisposalReference\");\r\n                        var stringProperties = {\r\n                            PropertyName: \"DisposalReference\",\r\n                            PropertyDisplayName: localization.DisposalReference,\r\n                            vm: vm.viewModel\r\n                        };\r\n                        buildString(cont.find(\"#disposalReference\"), stringProperties, vm.viewModel);\r\n                    } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                        var OriginalCheckBox = vm.viewModel.recieveCheckbox;\r\n                        var properties = {\r\n                            PropertyName: \"recieveCheckbox\",\r\n                            PropertyDisplayName: localization.RemoveReceivedDate,\r\n                            Inline: true\r\n                        };\r\n                        buildCheckbox(cont.find(\"#disposalReference\"), properties, vm.viewModel);\r\n                    } else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                        var OriginalCheckBox = vm.viewModel.masterContractStartingDateCheckbox;\r\n                        var properties = {\r\n                            PropertyName: \"masterContractStartingDateCheckbox\",\r\n                            PropertyDisplayName: localization.RemoveMasterLeaseWarrantyStarts,\r\n                            Inline: true\r\n                        };\r\n                        buildCheckbox(cont.find(\"#disposalReference\"), properties, vm.viewModel);\r\n                    }\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var buildDatePicker = function (container, props, vmModel) {\r\n                if (_.isNull(vmModel[props.PropertyName]) || vmModel[props.PropertyName] == \"\") {\r\n                    vmModel.set(props.PropertyName, kendo.toString(new Date(), \"g\"));\r\n                } else {\r\n                    vmModel.set(props.PropertyName, kendo.toString(new Date(vmModel[props.PropertyName]), \"g\"));\r\n                }\r\n                \r\n                datePicker.build(vmModel, props, function (dateControl) {\r\n                    container.html(dateControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                    datePickerCtrl = container.find(\"input[name='\" + props.PropertyName + \"']\");\r\n\r\n                    //will make sure date will reflect back to the main control from the form\r\n                    datePickerCtrl.focus();\r\n                    datePickerCtrl.blur();\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildCheckbox = function (container, props, vmModel) {\r\n                checkBox.build(vmModel, props, function (checkboxControl) {\r\n                    container.html(checkboxControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                    checkboxCtrl = container.find(\"input[name='\" + props.PropertyName + \"']\");\r\n                    vm.viewModel.set(props.PropertyName,false);\r\n                    checkboxCtrl.click(function () {\r\n                        var dtm = datePickerCtrl.data(\"kendoDatePicker\");\r\n                        if (this.checked) {\r\n                            dtm.enable(false);\r\n                        } else {\r\n                            dtm.enable(true);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nupdate Asset Management\r\n**/\r\n\r\n\r\ndefine('forms/tasks/updateAssetManagement/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n            var onloadTaskTrigger = function () {\r\n                switch (node.Configs.type) {\r\n                    case \"WarrantyContract\":\r\n                    case \"SupportAndMaintenance\":\r\n                    case \"ContractLease\":\r\n                        CommonContract.UpdateStatus(vm.viewModel,true);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            onloadTaskTrigger();\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    switch (node.Configs.type) {\r\n                        case \"License\":\r\n                            pageForm.SetSeatsRemaining(pageForm.viewModel);\r\n                            break;\r\n                        case \"SoftwareAsset\":\r\n                            UpdateSoftwareAsset(vm.viewModel);\r\n                            break;\r\n                        case \"Consumables\":\r\n                            UpdateConsumable(vm.viewModel);\r\n                            break;\r\n                        default:\r\n                            CommonContract.SupersedesParent(vm.viewModel);\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            \r\n\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            var UpdateConsumable = function (vmModel) {\r\n                if (vmModel.CountAssignedConsumableUsers || vmModel.CountAssignedConsumableAssets) {\r\n                    var assignedCount = 0;\r\n                    if (!_.isNull(vmModel.Target_ConsumableHasAssignedUsers) && vmModel.CountAssignedConsumableUsers) {\r\n                        assignedCount += vmModel.Target_ConsumableHasAssignedUsers.length;\r\n                    }\r\n                    if (!_.isNull(vmModel.Target_ConsumableHasAssignedAssets) && vmModel.CountAssignedConsumableAssets) {\r\n                        assignedCount += vmModel.Target_ConsumableHasAssignedAssets.length;\r\n                    }\r\n                    vmModel.set(\"AssignedCount\", assignedCount);\r\n                }\r\n            }\r\n\r\n            var UpdateSoftwareAsset = function (vmModel) {\r\n\r\n                $.when(kendo.ui.ExtYesNoDialog.show({\r\n                    title: localization.CiresonAssetManagement,\r\n                    message: localization.SoftwareAssetUpdateConfirmationMsg\r\n                })).done(function (response) {\r\n                    if (response.button === \"yes\") {\r\n                        vmModel.save(function (isOk, postData) {\r\n                            if (isOk == true) {\r\n                                $.ajax({\r\n                                    type: 'POST',\r\n                                    dataType: 'json',\r\n                                    url: \"/AssetManagement/SoftwareAsset/UpdateSoftwareAsset/\",\r\n                                    data: \"formJson=\" + postData + \"&id=\" + vmModel.BaseId,\r\n                                    success: function (data, status, xhr) {\r\n                                        if (data.Success == true) {\r\n                                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                                title: localization.CiresonAssetManagement,\r\n                                                message: localization.SoftwareAssetUpdated\r\n                                            })).done(function (response) {\r\n                                                vmModel.set(\"isDirty\", false);\r\n                                                app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                                window.location.reload(true);\r\n                                            });;\r\n                                        } else {\r\n                                            kendo.ui.ExtAlertDialog.show({\r\n                                                title: localization.CiresonAssetManagement,\r\n                                                message: localization.ErrorOccured\r\n                                            });\r\n                                        }\r\n                                    },\r\n                                    error: function (xhr, ajaxOptions, thrownError) {\r\n                                        failure();\r\n                                        console && app.lib.log(localization.RequestFailed);\r\n                                        app.lib.log(thrownError);\r\n\r\n                                        var jsonRsp = xhr.responseText;\r\n                                        app.lib.log(jsonRsp);\r\n\r\n                                        var errorMsg = localization.RequestFailed;\r\n                                        if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                            errorMsg = jsonRsp.exception;\r\n                                        }\r\n\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.ErrorDescription,\r\n                                            message: errorMsg,\r\n                                            icon: \"fa fa-exclamation\"\r\n                                        });\r\n                                    },\r\n                                    processData: false,\r\n                                    async: false\r\n                                });\r\n\r\n                            \r\n                            }\r\n\r\n                        }, vmModel.saveFailure, true);\r\n                    }\r\n                });\r\n            }\r\n\r\n            \r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    return definition;\r\n\r\n});\r\n\r\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/updateSupersededHardware/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    $.when(kendo.ui.ExtYesNoDialog.show({\r\n                        title: localization.CiresonAssetManagement,\r\n                        message: localization.UpdateSupersedesConfirmation\r\n                    })).done(function (response) {\r\n                        if (response.button === \"yes\") {\r\n                            $.post(node.Configs.url, { baseId: node.Configs.baseId }, function (data) {\r\n                                if (data.success === true) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.UpdatingAssets,\r\n                                        message: localization.TotalNumberofAssetsUpdated + \": \" + data.count\r\n                                    });\r\n                                } else {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.ServerError,\r\n                                        message: data.error\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/copyLicenseAssignments/view.html',[],function () { return '<div id=\"CopyLicenseAssignmentsWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div id=\"windowContent\" class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <form>\\r\\n                <fieldset id=\"source\">\\r\\n                    <legend><%= localization.RelatedLicenseAssignmentSource %></legend>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input class=\"control-label\" type=\"radio\" id=\"Computers\" value=\"Computers\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Computers %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Users\" value=\"Users\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Users %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Both\" value=\"Both\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Both %>\\r\\n                    </label>\\r\\n                </fieldset>\\r\\n                <br />\\r\\n                <br />\\r\\n                <fieldset id=\"target\">\\r\\n                    <legend><%= localization.SelectedSoftwareAssetTargetList %></legend>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input class=\"control-label\" type=\"radio\" id=\"AuthorizedList\" value=\"AuthorizedList\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.AuthorizedList %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"AssignedList\" value=\"AssignedList\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.AssignedListNamedLicenses %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Both\" value=\"Both\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Both %>\\r\\n                    </label>\\r\\n                </fieldset>\\r\\n            </form>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\" />    \\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/copyLicenseAssignments/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/copyLicenseAssignments/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/copyLicenseAssignments/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: localization.CopyLicenseAssignments,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        okClick: function () {\r\n                            \r\n\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.CiresonAssetManagement,\r\n                                message: localization.StartCopyLicenseAsssignements\r\n                            })).done(function (response) {\r\n                                $.post(\"/AssetManagement/SoftwareAsset/CopyLicenseAssignments/\", cont.find(\"#windowContent form\").serialize() + \"&id=\" + vm.viewModel.BaseId, function (data) {\r\n                                    if (data.success == true) {\r\n                                        //console.log(data);\r\n                                        //source.selected\r\n\r\n                                        var bTransferUsers = false;\r\n                                        var bTransferComputers = false;\r\n                                        var bTranserToAuthorised = false;\r\n                                        \r\n                                        var target = targetVM.selected;\r\n                                        var source = sourceVM.selected;\r\n                                        var bTranserToAssigned = target==\"AssignedList\";\r\n\r\n                                        var computerList = data.ComputerList;\r\n                                        var userList = data.UserList;\r\n\r\n                                        if (target==\"AuthorizedList\") bTranserToAuthorised = true;\r\n                                        if (source==\"Users\") bTransferUsers = true;\r\n                                        if (source==\"Computers\") bTransferComputers = true;\r\n\r\n                                        if (source==\"Both\") {\r\n                                            bTransferUsers = true;\r\n                                            bTransferComputers = true;\r\n                                        }\r\n\r\n                                        if (target==\"Both\") {\r\n                                            bTranserToAssigned = true;\r\n                                            bTranserToAuthorised = true;\r\n                                        }\r\n\r\n\r\n                                        if (bTransferUsers && bTranserToAssigned) {\r\n                                            PerformTransfer(vm.viewModel, userList, \"Target_SoftwareAssetHasAssignedUsers\");\r\n                                        }\r\n\r\n                                        if (bTransferComputers && bTranserToAssigned) {\r\n                                            PerformTransfer(vm.viewModel, computerList, \"Target_SoftwareAssetHasAssignedComputers\");\r\n                                        }\r\n\r\n                                        if (bTransferUsers && bTranserToAuthorised) \r\n                                        {\r\n                                            PerformTransfer(vm.viewModel, userList, \"Target_SoftwareAssetHasAuthorisedUser\");\r\n                                        }\r\n\r\n                                        if (bTransferComputers && bTranserToAuthorised)\r\n                                        {\r\n                                            PerformTransfer(vm.viewModel, computerList, \"Target_SoftwareAssetHasAuthorisedComputer\");\r\n                                        }\r\n\r\n                                        \r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.CiresonAssetManagement,\r\n                                            message: localization.UpdateSoftwareAssetMsg\r\n                                        });\r\n                                    } else {\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.CiresonAssetManagement,\r\n                                            message: data.error\r\n                                        });\r\n                                    }\r\n                                });\r\n                            });\r\n                            \r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            \r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    var PerformTransfer = function (viewModel, itemList, targetProperty) {\r\n                        var target = viewModel[targetProperty];\r\n                        var isExist = false;\r\n                        for (var index in itemList) {\r\n                            isExist = false;\r\n                            for (var indexTarget in target) {\r\n                                if (target[indexTarget].BaseId == itemList[index].BaseId) {\r\n                                    isExist = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (isExist) continue;\r\n                            target.addItem(itemList[index]);\r\n                        }\r\n                    }\r\n\r\n                    var sourceVM = kendo.observable({\r\n                        selected: \"Computers\"\r\n                    });\r\n\r\n                    kendo.bind(cont.find(\"#source\"), sourceVM);\r\n\r\n                    var targetVM = kendo.observable({\r\n                        selected: \"AuthorizedList\"\r\n                    });\r\n\r\n                    kendo.bind(cont.find(\"#target\"), targetVM);\r\n                    \r\n                    //create status enumPicker\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!CustomSpace/customtasks.tmpl.html',[],function () { return '<div>\\r\\n<div id=\"commentHTML\" class=\"form-horiztontal\">\\r\\n<div>\\r\\n<div class=\"col-group\">\\r\\n<div class=\"inline-spacing\">\\r\\n<label>What do you want to search?</label>\\r\\n</div>\\r\\n<div class=\"inline-spacing\">\\r\\n<textarea data-bind=\"value: comment, events: {keyup:textCounter}\"\\r\\ndata-value-update=\"keyup\"\\r\\nclass=\"k-textbox\"\\r\\nrows=\"7\" ></textarea>\\r\\n<div class=\"inline-spacing\">\\r\\n<span data-bind=\"html:charactersRemaining\"></span>\\r\\n<span>characters remaining</span>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\"window-buttons\">\\r\\n<button data-role=\"button\"\\r\\nclass=\"btn btn-primary\"\\r\\ndata-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\nOK\\r\\n</button>\\r\\n<button data-role=\"button\"\\r\\nclass=\"btn btn-primary\"\\r\\ndata-bind=\"events: { click: cancelClick }\">\\r\\nCancel\\r\\n</button>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n</div>';});\n\n","/**\r\nCopy To New Workitem\r\n**/\r\n\r\ndefine('forms/tasks/copyToNewWI/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(anchor);\r\n            \r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"copyToNewWI\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = built(properties);\r\n\r\n            var viewModel = kendo.observable({\r\n                copyToNewWI: function () {\r\n                    var hiddenVm;\r\n                    var copy;\r\n                    copy = $(\"<form>\", { \"method\": \"post\", \"target\": \"_blank\" });\r\n                    hiddenVm = $(\"<input>\", { \"type\": \"hidden\", \"name\": \"vm\" });\r\n                    copy.append(hiddenVm);\r\n                    $(\"body\").append(copy);\r\n                    hiddenVm.val(JSON.stringify(vm.viewModel));\r\n                    if (vm.type == \"Incident\")\r\n                        copy.attr(\"action\", \"/Incident/New/\");\r\n                    if (vm.type == \"ServiceRequest\")\r\n                        copy.attr(\"action\", \"/ServiceRequest/New/\");\r\n                    copy.submit();\r\n                    copy.remove();\r\n                }\r\n            });\r\n\r\n            var view = new kendo.View(built(properties), { wrap: false, model: viewModel });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/increaseAvailableCount/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"increaseAvailableCount\"/>\\r\\n            <div id=\"commentAvailableCount\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nLONGSTRING\r\n**/\r\n\r\ndefine('forms/fields/longString/controller',['require','text!forms/fields/longstring/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/longstring/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.longStringController = {\r\n                CheckLength: function checkLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n            vm.view.buildLongStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength,\r\n                    Rows: 10,\r\n                    visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n                };\r\n                $.extend(true, properties, node);\r\n                //console.log(properties);\r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildLongStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\r\n\n","\ndefine('text!forms/fields/numeric/view.html',[],function () { return '<div data-cid=\"NumericControl\" data-cid-propname=\"<%= PropertyName %>\" class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"number\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"form-control form-control-picker input-sm\"\\r\\n           data-control=\"numericTextBox\"\\r\\n           data-bind=\"value: <%= PropertyName %>\"\\r\\n           data-control-decimals=\"<%= DecimalPlaces %>\"\\r\\n           data-control-min=\"<%= MinValue%>\"\\r\\n           data-control-max=\"<%= MaxValue %>\"\\r\\n           data-step=\"<%= StepIncrement %>\"\\r\\n           data-format=\"<%= Format%>\"\\r\\n\\r\\n            <% if ( Disabled ){ %>\\r\\n                disabled\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\r\nNUMERIC\r\n**/\r\n\r\ndefine('forms/fields/numeric/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                Required: node.Required,\r\n                DecimalPlaces: 2,\r\n                MinValue: 0,\r\n                MaxValue: 100,\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/increaseAvailableCount/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/increaseAvailableCount/view.html','forms/fields/longString/controller','forms/fields/numeric/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/increaseAvailableCount/view.html\");\r\n    var stringArea = require(\"forms/fields/longString/controller\");\r\n    var numericArea = require(\"forms/fields/numeric/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.EditConsumableAvailableCount;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            var tempLog;\r\n            \r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 380,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            tempLog = new kendo.data.ObservableObject({\r\n                                ClassTypeId: \"67ce5b07-835d-246d-478d-29cee397c66e\",\r\n                                Comment: \"\",\r\n                                Target_LogHasCreator: {\r\n                                    ClassTypeId: \"eca3c52a-f273-5cdc-f165-3eb95a2b26cf\",\r\n                                    BaseId: session.user.Id,\r\n                                },\r\n                                AllowCreatedDate: true,\r\n                                Name: app.lib.newGUID(),\r\n                                Type: {\r\n                                    Id: \"884650a1-632a-0532-b0d4-8c6b1d990752\",\r\n                                    Name: localization.TaskRun\r\n                                }\r\n                            });\r\n\r\n                            var countProperties = {\r\n                                PropertyName: \"zeroCount\",\r\n                                PropertyDisplayName: \"IncreaseConsumableAvailableCountBy\",\r\n                                DecimalPlaces: 0,\r\n                                Required: true,\r\n                                vm: zeroCount\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#increaseAvailableCount\"), countProperties, zeroCount);\r\n\r\n                            var commentProperties = {\r\n                                PropertyName: \"Comment\",\r\n                                PropertyDisplayName: \"Comment\",\r\n                                Required: true,\r\n                                vm: tempLog,\r\n                                Rows: 5\r\n                            };\r\n\r\n\r\n                            buildString(cont.find(\"#commentAvailableCount\"), commentProperties, tempLog);\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var currentCount = vm.viewModel.get(\"Count\");\r\n                    var zeroCount = new kendo.data.ObservableObject({ zeroCount: 0 });\r\n                    \r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            var addedcount = parseInt(zeroCount.get(\"zeroCount\"));\r\n                            if (addedcount == 0 || tempLog.get(\"Comment\") == \"\") {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.CiresonAssetManagement,\r\n                                    message: localization.RequiredFieldsErrorMessage\r\n                                });\r\n                            } else {\r\n                                var newCount = parseInt(currentCount) + addedcount;\r\n                                vm.viewModel.set(\"Count\", newCount);\r\n                                //tempLog.set(\"Title\",\"Increased Available Count by \" + currentCount + \" to \" + newCount);\r\n                                tempLog.set(\"Title\", localization.IncreasedAvailableCount.replace(\"{0}\", currentCount) + newCount);\r\n                                tempLog.set(\"CreatedDate\",new Date());\r\n                                vm.viewModel[\"Target_ConsumableHasLogs\"].unshift(tempLog);\r\n                                win.close();\r\n                            }\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    \r\n                    \r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n           \r\n            var buildNumeric = function (container, props, vmModel) {\r\n                numericArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/decreaseAvailableCount/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"decreaseCount\"/>\\r\\n            <div id=\"decreaseAvailableCount\"/>\\r\\n            <div id=\"commentAvailableCount\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/decreaseAvailableCount/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/decreaseAvailableCount/view.html','forms/fields/longString/controller','forms/fields/numeric/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/decreaseAvailableCount/view.html\");\r\n    var stringArea = require(\"forms/fields/longString/controller\");\r\n    var numericArea = require(\"forms/fields/numeric/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.EditConsumableAvailableCount;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var tempLog;\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            tempLog = new kendo.data.ObservableObject({\r\n                                ClassTypeId: \"67ce5b07-835d-246d-478d-29cee397c66e\",\r\n                                Comment: \"\",\r\n                                Target_LogHasCreator: {\r\n                                    ClassTypeId: \"eca3c52a-f273-5cdc-f165-3eb95a2b26cf\",\r\n                                    BaseId: session.user.Id,\r\n                                },\r\n                                AllowCreatedDate: true,\r\n                                Name: app.lib.newGUID(),\r\n                                Type: {\r\n                                    Id: \"884650a1-632a-0532-b0d4-8c6b1d990752\",\r\n                                    Name: localization.TaskRun\r\n                                }\r\n                            });\r\n                            var countProperties = {\r\n                                PropertyName: \"zeroCount\",\r\n                                PropertyDisplayName: \"DecreaseConsumableCountBy\",\r\n                                Required: true,\r\n                                DecimalPlaces: 0,\r\n                                MaxValue: currentCount\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#decreaseCount\"), countProperties, zeroCount);\r\n\r\n                            var countProperties = {\r\n                                PropertyName: \"AvailableCount\",\r\n                                PropertyDisplayName: \"AvailableCount\",\r\n                                DecimalPlaces: 0,\r\n                                Disabled: true,\r\n                                vm: { AvailableCount: currentCount }\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#decreaseAvailableCount\"), countProperties, countProperties.vm);\r\n\r\n                            var commentProperties = {\r\n                                PropertyName: \"Comment\",\r\n                                PropertyDisplayName: \"Comment\",\r\n                                Required: true,\r\n                                vm: tempLog,\r\n                                Rows: 5\r\n                            };\r\n\r\n                            buildString(cont.find(\"#commentAvailableCount\"), commentProperties, tempLog);\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var currentCount = vm.viewModel.get(\"Count\");\r\n                    var zeroCount = new kendo.data.ObservableObject({ zeroCount: 0 });\r\n                    \r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            var addedcount = parseInt(zeroCount.get(\"zeroCount\"));\r\n                            if (addedcount == 0 || tempLog.get(\"Comment\") == \"\") {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.CiresonAssetManagement,\r\n                                    message: localization.RequiredFieldsErrorMessage\r\n                                });\r\n                            } else {\r\n                                var newCount = parseInt(currentCount) - addedcount;\r\n                                vm.viewModel.set(\"Count\", newCount);\r\n                                tempLog.set(\"Title\", localization.DecreasedAvailableCountBy.replace(\"{0}\", currentCount) + newCount);\r\n                                tempLog.set(\"CreatedDate\", new Date());\r\n                                vm.viewModel[\"Target_ConsumableHasLogs\"].unshift(tempLog);\r\n                                win.close();\r\n                            }\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    \r\n                    \r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n           \r\n            var buildNumeric = function (container, props, vmModel) {\r\n                numericArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nPrint Page\r\n**/\r\n\r\ndefine('forms/tasks/print/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    \r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"print\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = built(properties);\r\n\r\n            var viewModel = kendo.observable({\r\n                print: function () {\r\n                    window.print();\r\n                }\r\n            });\r\n\r\n            var view = new kendo.View(built(properties), { wrap: false, model: viewModel });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nAdd Me to Watchlist\r\n**/\r\n\r\ndefine('forms/tasks/addMeToWatchList/controller',['require','text!forms/tasks/anchor/view.html','text!forms/popups/notificationPopup/view.html'],function (require) {\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var notificationTpl = require(\"text!forms/popups/notificationPopup/view.html\");\r\n\r\n    var definition = {\r\n        notificationTemplate: notificationTpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(notificationTpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var viewModel = kendo.observable({\r\n                addMeToWatchList: function (ele) {\r\n                    if (!_.isUndefined(node.Configs.isAddWatchlist)) {\r\n                        switch (node.Configs.isAddWatchlist) {\r\n                            case false:\r\n                                this.removeFromWatchList();\r\n                                node.Configs.isAddWatchlist = true;\r\n                                $(ele.currentTarget).html(localization.AddMeToWatchList);\r\n                                break;\r\n                            case true:\r\n                            default:\r\n                                this.addToWatchList();\r\n                                node.Configs.isAddWatchlist = false;\r\n                                $(ele.currentTarget).html(localization.RemoveMeFromWatchList);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                },\r\n                addToWatchList: function () {\r\n                    //set current user's baseid in case it is missing\r\n                    var currentUser = session.user;\r\n                    currentUser.BaseId = session.user.Id;\r\n\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n\r\n                    //if user is not yet on the watchlist, add it in\r\n                    var isAdded = !_.isUndefined(_.find(vm.viewModel.WatchList, function (user) { return (user.Id == session.user.Id || user.BaseId == session.user.Id); }));\r\n                    if (!isAdded) {\r\n                        if (_.isUndefined(vm.viewModel.WatchList)) {\r\n                            vm.viewModel.set(\"WatchList\", []);\r\n                        }\r\n                        vm.viewModel.WatchList.push(session.user);\r\n\r\n                    }\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.AddMeToWatchListNotificationMessage, \"{0} is added to the watchlist\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                },\r\n                removeFromWatchList: function () {\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n                    var index = -1;\r\n\r\n                    _.find(vm.viewModel.WatchList, function (user, i) {\r\n                        if (user.Id == session.user.Id || user.BaseId == session.user.Id) {\r\n                            index = i;\r\n                            return user;\r\n                        }\r\n                    });\r\n\r\n                    //remove current user from watchlist\r\n                    if (index !== -1) vm.viewModel.WatchList.splice(index, 1);\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.RemoveMeFromWatchListNotificationMessage, \"{0} is removed from the watchlist\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"addMeToWatchList\"\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","define('forms/taskBuilder',[\r\n    \"forms/tasks/anchor/controller\",\r\n    \"forms/tasks/analystByGroup/controller\",\r\n    \"forms/tasks/assignToMe/controller\",\r\n    \"forms/tasks/changeStatus/controller\",\r\n    \"forms/tasks/amChangeStatus/controller\",\r\n    \"forms/tasks/acknowledge/controller\",\r\n    \"forms/tasks/convertToParent/controller\",\r\n    \"forms/tasks/linkToParent/controller\",\r\n    \"forms/tasks/newStatus/controller\",\r\n    \"forms/tasks/sendEmail/controller\",\r\n    \"forms/tasks/custom/controller\",\r\n    \"forms/tasks/spacer/controller\",\r\n    \"forms/tasks/associateItem/controller\",\r\n    \"forms/tasks/setDate/controller\",\r\n    \"forms/tasks/updateAssetManagement/controller\",\r\n    \"forms/tasks/updateSupersededHardware/controller\",\r\n    \"forms/tasks/copyLicenseAssignments/controller\",\r\n    \"text!CustomSpace/customtasks.tmpl.html\",\r\n    \"forms/tasks/copyToNewWI/controller\",\r\n    \"forms/tasks/increaseAvailableCount/controller\",\r\n    \"forms/tasks/decreaseAvailableCount/controller\",\r\n    \"forms/tasks/print/controller\",\r\n    \"forms/tasks/addMeToWatchList/controller\"\r\n\r\n], function (\r\n    anchor,\r\n    analystByGroup,\r\n    assignToMe,\r\n    changeStatus,\r\n    amChangeStatus,\r\n    acknowledge,\r\n    convertToParent,\r\n    linkToParent,\r\n    newStatus,\r\n    sendEmail,\r\n    custom,\r\n    spacer,\r\n    associateItem,\r\n    setDate,\r\n    updateAssetManagement,\r\n    updateSupersededHardware,\r\n    copyLicenseAssignments,\r\n    customTmpl,\r\n    copyToNewWI,\r\n    increaseAvailableCount,\r\n    decreaseAvailableCount,\r\n    print,\r\n    addMeToWatchList\r\n        ) {\r\n\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            var ulElement = $('<ul/>');\r\n\r\n            if (vm.fromDrawerBuilder) {\r\n                //remap the list of tasks to match what form builder does\r\n                vm.taskTemplate = {\r\n                    tasks: vm.tasks\r\n                }\r\n                ulElement.addClass(\"drawer-task-menu dropdown-menu\");\r\n                ulElement.attr('role', 'menu');\r\n            } else {\r\n                ulElement.addClass(\"taskmenu\");\r\n            }\r\n            \r\n            var taskCallback = function (view) {\r\n                ulElement.append(view);\r\n            };\r\n\r\n            //set up each task\r\n            _.each(vm.taskTemplate.tasks, function (task) {\r\n                \r\n                if (_.isString(task.Access)) {\r\n                    //coming from drawerbuild task.Access needs to be evaluated here\r\n                    task.Access = eval(task.Access);\r\n                }\r\n                \r\n                if (task.Access) {\r\n                    //get template and check for existance\r\n                    eval(\"var _obj = \" + task.Task + \";\");\r\n                    if (!_obj) {\r\n                        throw Exception(task.Task + \" is not part of the templating system\");\r\n                        return false;\r\n                    }\r\n\r\n                    _obj.build(vm, task, function (view) {\r\n                        taskCallback(view);\r\n                    });\r\n                }\r\n            });\r\n\r\n            //send back <ul> with <li> of each task\r\n            callback(ulElement);\r\n\r\n            if (!vm.fromDrawerBuilder) {\r\n                //not drawer tasks so now add custom template html\r\n                var tmpl = $('<div/>').addClass(\"hide\");\r\n                tmpl.append(customTmpl);\r\n                //add the menu\r\n                callback(tmpl);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/header/status/view.html',[],function () { return '<h1 class=\"page_title\">\\r\\n    <span data-bind=\"text: view.title\"></span><span>-</span><span class=\"uppercase\" data-bind=\"text: view.id\"></span>\\r\\n    <span class=\"cursor-pointer\" id=\"viewAttachments\" data-bind=\"click: view.viewAttachments, visible: view.filesCount > 0\"><i class=\"fa fa-paperclip text-primary\" style=\"font-size: inherit\"></i></span>\\r\\n    <span class=\"label label-info label-heading\" id=\"statusname\" data-bind=\"visible: view.statusVisible, text: viewModel.Status.Name\"></span>\\r\\n    <span class=\"label label-heading\" data-bind=\"visible: viewModel.IsParent\"><img src=\"/Content/Images/Icons/WorkItemsStatus/workitem-parent-icon.svg\"></span>\\r\\n</h2>\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/status/controller',['require','text!forms/header/status/view.html','forms/flyout/fileAttachmentsFlyout/controller'],function (require) {\r\n    var tpl = require(\"text!forms/header/status/view.html\");\r\n    var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n            \r\n            //modify vm for this view\r\n            vm.view.viewAttachments = function () {\r\n\r\n                var flyoutWindow = attachmentPickerFlyout.getPopup(vm);\r\n                flyoutWindow.open();\r\n            }\r\n\r\n            vm.view.filesCount = vm.viewModel.FileAttachment.length;\r\n\r\n            vm.view.statusVisible = function () {\r\n                if (vm.newWI) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            //set page <title>\r\n            document.title = vm.view.title + ' - ' + vm.view.id;\r\n\r\n            var view = new kendo.View(built(), { wrap: false, model: vm });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/relationships/controller',['require','text!forms/header/relationships/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/relationships/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //we need to have a container to add to via task\r\n            var container = $('<div/>').attr(\"id\", \"parent-header-space\");\r\n            var view = new kendo.View(container, { wrapper: false });\r\n           \r\n            //this function is called from the link parent task so we need to allow callback function to be an input\r\n            vm.view.buildParentHeaderView = function (viewCallBack) {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                \r\n                //modify vm for this view\r\n                vm.view.controller = {\r\n                    parentIncident: (vm.type === \"ReleaseRecord\") ? localization.ParentRecord : localization.Parentincident,\r\n                    editHref: \"/\"+vm.type+\"/Edit/\" + vm.viewModel.ParentWorkItem.Id + \"/\",\r\n                    editLink: vm.viewModel.ParentWorkItem.Id + \"-\" + vm.viewModel.ParentWorkItem.Title,\r\n                    unlinkParent: function () {\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: localization.UnlinkToParent,\r\n                            message: localization.SureUnlinkToParent\r\n                        })\r\n                        ).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                delete vm.viewModel.ParentWorkItem;\r\n                                vm.viewModel.set(\"isDirty\", true);\r\n                                view.content.hide();\r\n                            } else {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                viewCallBack(built());\r\n            }\r\n\r\n            if (!_.isNull(vm.viewModel.ParentWorkItem) &&\r\n                !_.isUndefined(vm.viewModel.ParentWorkItem)) {\r\n                vm.view.buildParentHeaderView(function (tpl) {\r\n                    //destroy default container\r\n                    view.destroy();\r\n\r\n                    container.append(tpl);\r\n                    view = new kendo.View(container, { wrapper: false, model: vm });\r\n                    callback(view.render());\r\n                });\r\n            } else {\r\n                callback(view.render());\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/slo/view.html',[],function () { return '<div class=\"slo-container pull-right\">\\r\\n\\r\\n</div>\\r\\n<script id=\"slo-template\" type=\"text/x-kendo-template\">\\r\\n        <li class=\"slo-timer\"></li>\\r\\n        <li class=\"slo-icon fa #: imageClass # fa-lg\"></li>\\r\\n        <li class=\"slo-title\">#: Title #</li>\\r\\n</script>';});\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/slo/controller',['require','text!forms/header/slo/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/slo/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function(vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            if (vm.isAnalyst) {\r\n                var built = _.template(tpl);\r\n\r\n                var view = new kendo.View(built(), {\r\n                    wrap: false,\r\n                    init: function() {\r\n                        setTimeout(function() { DoWork(); }, 100);\r\n                    },\r\n                    model: vm\r\n                });\r\n                view.render(); //so we can manipulate it\r\n\r\n                var DoWork = function() {\r\n\r\n                    if (vm.viewModel[\"SLO\"] == null) return;\r\n\r\n                    var sloViewObj = view.element,\r\n                        sloObjects = vm.viewModel[\"SLO\"],\r\n                        sloActive = \"SLAInstance.Status.Active\",\r\n                        sloPaused = \"SLAInstance.Status.Paused\",\r\n                        sloMet = \"SLAInstance.Status.Met\",\r\n                        sloWarning = \"SLAInstance.Status.Warning\",\r\n                        sloBreached = \"SLAInstance.Status.Breached\",\r\n                        sloNotReady = \"SLAInstance.Status.NotReady\";\r\n\r\n                    //var sloContainer = sloViewObj.find(\".slo-container\");\r\n                    var sloContainer = $(\".slo-container\");\r\n\r\n                    for (var key in sloObjects) {\r\n                        if (sloObjects[key].DisplayName == null) continue;\r\n                        var isMet = false;\r\n                        var isPaused = false;\r\n\r\n                        //var sloTemplate = kendo.template(sloViewObj.find(\"#slo-template\").html());\r\n                        var sloTemplate = kendo.template($(\"#slo-template\").html());\r\n\r\n                        var sloObj = {};\r\n                        sloObj.Id = sloObjects[key].DisplayName.replace(\" \", \"\");\r\n                        sloObj.Title = sloObjects[key].DisplayName;\r\n\r\n                        switch (sloObjects[key].Status) {\r\n                        case sloActive:\r\n                            sloObj.imageClass = \"fa-clock-o text-primary\";\r\n                            break;\r\n                        case sloPaused:\r\n                        case sloNotReady:\r\n                            isPaused = true;\r\n                            sloObj.imageClass = \"fa-pause text-info\";\r\n                            break;\r\n                        case sloMet:\r\n                            sloObj.imageClass = \"fa-check-circle-o text-success\";\r\n                            //vm.view.controller.isMet = true;\r\n                            isMet = true;\r\n                            break;\r\n                        case sloWarning:\r\n                            sloObj.imageClass = \"fa-exclamation-circle text-warning\";\r\n                            break;\r\n                        case sloBreached:\r\n                            sloObj.imageClass = \"fa-bell text-danger\";\r\n                            isBreach = true;\r\n                            break;\r\n                        }\r\n\r\n                        var sloImg = sloObj.imageClass; //should remove\r\n\r\n                        var clone = $('<ul/>').addClass(\"slo-status-item\");\r\n                        clone.html(sloTemplate(sloObj));\r\n\r\n                        //alert(sloObjects[key].Time.Hours);\r\n                        SLOCoundown(clone, isMet, isPaused, sloObjects[key].Time.Hours, sloObjects[key].Time.Minutes, sloObjects[key].Time.Seconds,\r\n                            eval(sloObjects[key].WarningDate), eval(sloObjects[key].ServerDatetimeNow), false);\r\n                        sloContainer.append(clone);\r\n                    }\r\n                }\r\n\r\n                var SLOCoundown = function(sloCloned, isMetStat, isPaused, hours, minutes, seconds, warningDate, serverCurrentDate, isBreach) {\r\n                    //force warning image\r\n                    if (!isMetStat && !isBreach && warningDate <= serverCurrentDate) {\r\n                        //reset all classes \r\n                        sloCloned.find(\".slo-icon\").attr('class', \"slo-icon fa fa-exclamation-circle text-warning fa-lg\");\r\n                    }\r\n\r\n                    //set breached\r\n                    if (!isMetStat && (seconds <= 0 && minutes <= 0 && hours <= 0)) {\r\n                        isBreach = true;\r\n                        sloCloned.find(\".slo-icon\").attr('class', \"slo-icon fa fa-bell text-danger fa-lg\");\r\n                        sloCloned.find(\".slo-timer\").addClass(\"text-danger\");\r\n                    }\r\n\r\n                    //set time in view\r\n                    if (!isMetStat) {\r\n                        var secs = (Math.abs(seconds) < 10) ? \"0\" + Math.abs(seconds) : Math.abs(seconds);\r\n                        var mins = (Math.abs(minutes) < 10) ? \"0\" + Math.abs(minutes) : Math.abs(minutes);\r\n                        var hrs = (Math.abs(hours) < 10) ? \"0\" + Math.abs(hours) : Math.abs(hours);\r\n                        if (isBreach) {\r\n                            sloCloned.find(\".slo-timer\").html(\"\");\r\n                        } else\r\n                            sloCloned.find(\".slo-timer\").html((isBreach ? \"-\" : \"\") + Math.abs(hrs) + \":\" + mins + \":\" + secs);\r\n                        //return;\r\n                    } else {\r\n                        sloCloned.find(\".slo-timer\").html(\"&nbsp;\");\r\n                        return;\r\n                    }\r\n\r\n                    if (isPaused) return;\r\n\r\n                    //make the fancy js countdown\r\n                    serverCurrentDate.setSeconds(serverCurrentDate.getSeconds() + 1);\r\n                    seconds = parseInt(seconds) - 1;\r\n\r\n\r\n                    if (seconds <= 0 && minutes <= 0 && hours <= 0) {\r\n                        if (seconds <= -60) {\r\n                            seconds = 0;\r\n                            minutes = parseInt(minutes) - 1;\r\n                        }\r\n\r\n                        if (minutes <= -60) {\r\n                            minutes = 0;\r\n                            hours = parseInt(hours) - 1;\r\n                        }\r\n                    } else {\r\n                        if (minutes < 0) {\r\n                            minutes = 59;\r\n                            hours = parseInt(hours) - 1;\r\n                        }\r\n\r\n                        if (seconds < 0) {\r\n                            seconds = 59;\r\n                            minutes = parseInt(minutes) - 1;\r\n                        }\r\n                    }\r\n\r\n\r\n                    setTimeout(function() {\r\n                        SLOCoundown(sloCloned, isMetStat, isPaused, hours, minutes, seconds,\r\n                            warningDate, serverCurrentDate, isBreach);\r\n                    }, 1000);\r\n                }\r\n\r\n\r\n                callback(view.render());\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\r\n\n","\ndefine('text!forms/header/spacer/view.html',[],function () { return '<div></div>';});\n\n","/**\r\nHeader Spacer\r\n**/\r\ndefine('forms/header/spacer/controller',['require','text!forms/header/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/spacer/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //modify vm for this view\r\n\r\n            var view = new kendo.View(built(), { model: vm });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/title/view.html',[],function () { return '<h1 class=\"page_title\">\\r\\n    <span data-bind=\"html: title\"></span>\\r\\n</h1>\\r\\n\\r\\n';});\n\n","/**\r\nHeader Status\r\n**/\r\ndefine('forms/header/title/controller',['require','text!forms/header/title/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/title/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            vm.title = (!_.isUndefined(localization[vm.type]) && [vm.type].length > 0) ? localization[vm.type] : vm.type;\r\n\r\n            //set page <title>\r\n            document.title = vm.title;\r\n\r\n            var view = new kendo.View(built(), { wrap: false, model: vm });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/header/approval/view.html',[],function () { return '<div class=\"container-fluid\" data-bind=\"visible: isDesktopView\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-6 col-xs-12\">\\r\\n            <h1 class=\"page_title\">\\r\\n                <span data-bind=\"text: title\"></span><span>-</span><span class=\"uppercase\" data-bind=\"text: workItemId\"></span>\\r\\n                <span class=\"label label-info label-heading\" id=\"statusName\" data-bind=\"text: statusName\"></span>\\r\\n                <span class=\"label label-heading\" data-bind=\"visible: isParent\"><img src=\"/Content/Images/Icons/WorkItemsStatus/workitem-parent-icon.svg\"></span>\\r\\n            </h1>\\r\\n        </div>\\r\\n        <div class=\"col-md-6 col-xs-12\">       \\r\\n            <div class=\"pull-right ra-approval-space\">\\r\\n                <!-- Support group -->\\r\\n                <div class=\"pull-left\">\\r\\n                    <div class=\"form-control-picker input-sm ra-input\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-bind=\"ciresonDropDownTree: SupportGroupEnumId, value: SupportGroupFieldValue, visible: SupportGroupVisible, click: onChangeSupportGroup, options: {disabled:disabledMAButtons}\"\\r\\n                         data-role=\"SupportGroupField\"\\r\\n                         data-placeholder=\"SupportGroup\"></div>\\r\\n                </div>\\r\\n                <div class=\"pull-right\">\\r\\n                    <!--RA buttons-->\\r\\n                    <button class=\"btn btn-success\"\\r\\n                            data-bind=\"events: { click: onApproveClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                        <%= localization.Approve %>\\r\\n                    </button>\\r\\n                    <button class=\"btn btn-danger\"\\r\\n                            data-bind=\"events: { click: onRejectClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                        <%= localization.Reject %>\\r\\n                    </button>\\r\\n                    <!--RA buttons-->\\r\\n                    <!--MA buttons-->\\r\\n                    <button class=\"btn btn-success\"\\r\\n                            data-bind=\"events: { click: onCompleteClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                        <%= localization.Completed %>\\r\\n                    </button>\\r\\n                    <button class=\"btn btn-danger\"\\r\\n                            data-bind=\"events: { click: onFailClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                        <%= localization.Failed %>\\r\\n                    </button>\\r\\n                    <!--MA buttons-->\\r\\n                    <span>\\r\\n                        <button class=\"btn-link\" data-bind=\"disabled:disablePrevious, events:{click: previousClick}\"><i class=\"fa fa-chevron-left\"></i></button>\\r\\n                        <span data-bind=\"html: pageText\"></span>\\r\\n                        <button class=\"btn-link\" data-bind=\"disabled:disableNext, events:{click: nextClick}\"><i class=\"fa fa-chevron-right\"></i></button>\\r\\n                    </span>\\r\\n                </div>\\r\\n             </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"container-fluid\" data-bind=\"visible: isMobileView\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space pull-right\">\\r\\n                <div>\\r\\n                    <button class=\"btn-link\" data-bind=\"disabled:disablePrevious, events:{click: previousClick}\"><i class=\"fa fa-chevron-left\"></i></button>\\r\\n                    <span data-bind=\"html: pageText\"></span>\\r\\n                    <button class=\"btn-link\" data-bind=\"disabled:disableNext, events:{click: nextClick}\"><i class=\"fa fa-chevron-right\"></i></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <!-- Support group -->\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"form-control-picker ra-input\"\\r\\n                 data-url=\"/api/V3/Enum/GetList\"\\r\\n                 data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                 data-bind=\"ciresonDropDownTree: SupportGroupEnumId, value: SupportGroupFieldValue, visible: SupportGroupVisible, click: onChangeSupportGroup\"\\r\\n                 data-role=\"SupportGroupField\"\\r\\n                 data-placeholder=\"SupportGroup\"></div>\\r\\n        </div>\\r\\n        <!--RA buttons-->\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-success\"\\r\\n                        data-bind=\"events: { click: onApproveClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                    <%= localization.Approve %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-danger\"\\r\\n                        data-bind=\"events: { click: onRejectClick }, disabled:disabledButtons, visible:isReviewActivity\">\\r\\n                    <%= localization.Reject %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--RA buttons-->\\r\\n\\r\\n        <!--MA buttons-->\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-success\"\\r\\n                        data-bind=\"events: { click: onCompleteClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                    <%= localization.Completed %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-12 col-xs-12\">\\r\\n            <div class=\"ra-approval-space\">\\r\\n                <button class=\"btn btn-danger\"\\r\\n                        data-bind=\"events: { click: onFailClick }, disabled:disabledMAButtons, visible:isManualActivity\">\\r\\n                    <%= localization.Failed %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--MA buttons-->\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-6 col-xs-12\">\\r\\n            <h1 class=\"page_title\">\\r\\n                <span data-bind=\"text: title\"></span><span>-</span><span class=\"uppercase\" data-bind=\"text: workItemId\"></span>\\r\\n                <span class=\"label label-info label-heading\" id=\"statusname\" data-bind=\"text: statusName\"></span>\\r\\n                <span class=\"label label-heading\" data-bind=\"visible: isParent\"><img src=\"/Content/Images/Icons/WorkItemsStatus/workitem-parent-icon.svg\"></span>\\r\\n            </h1>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n';});\n\n","/**\r\nRA Approval controls\r\n**/\r\ndefine('forms/header/approval/controller',['require','text!forms/header/approval/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/header/approval/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n            var rejected = \"107fc6bd-2bb3-0282-4425-f43b5b32ef13\";\r\n            var approve = \"0e856c6c-04e5-0a8e-6041-bc7715b4747e\";\r\n            var notYetVoted = \"dae75d12-89ac-a8d8-4fe3-516c2a6a26f7\";\r\n\r\n\r\n            vm.view.approvalModel = new kendo.observable({\r\n                decisionEnumId: null,\r\n                comments: \"\",\r\n                onRejectClick: function () {\r\n                    vm.view.approvalModel.decisionEnumId = rejected;\r\n                    this.updateStatus();\r\n                },\r\n                onApproveClick: function () {\r\n                    vm.view.approvalModel.decisionEnumId = approve;\r\n\r\n                    this.updateStatus();\r\n                },\r\n                onCompleteClick: function () {\r\n                    var status = { Id: app.constants.workItemStatuses.ManualActivity.Completed, Name: localization.Completed };\r\n                    vm.view.approvalModel.updateManualActivity(status);\r\n                },\r\n                onFailClick: function () {\r\n                    var status = { Id: app.constants.workItemStatuses.ManualActivity.Failed, Name: localization.Failed }\r\n                    vm.view.approvalModel.updateManualActivity(status);\r\n                },\r\n                updateStatus: function () {\r\n                    if (vm.view.approvalModel.isReviewActivity) {\r\n                        vm.view.approvalModel.updateReviewActivity();\r\n                    }\r\n\r\n                    if (vm.view.approvalModel.isManualActivity) {\r\n                        vm.view.approvalModel.updateManualActivity();\r\n                    }\r\n                },\r\n                updateReviewActivity: function () {\r\n                    $.when(kendo.ui.ExtYesNoTextAreaDialog.show({\r\n                        title: localization.Comments,\r\n                        message: localization.DoYouHaveComments,\r\n                        required: true,\r\n                        height: 250\r\n                    })\r\n                  ).done(function (response) {\r\n                      if (response.button === \"yes\") {\r\n                          vm.view.approvalModel.comments = response.input;\r\n                      }\r\n\r\n\r\n                      _.each(pageForm.viewModel.Reviewer, function (reviewItem) {\r\n\r\n                          var group = _.find(pageForm.userGroup, function (group) {\r\n                              return (!_.isUndefined(reviewItem.User)) ? reviewItem.User.BaseId == group.Id : false;\r\n                          });\r\n\r\n                          if (reviewItem.Decision.Id == notYetVoted\r\n                              && ((!_.isUndefined(reviewItem.User) && reviewItem.User.BaseId == session.user.Id)\r\n                              || !_.isUndefined(group))) {\r\n\r\n                              var comment = \"\";\r\n                              if (_.isNull(reviewItem.Comments)) {\r\n                                  comment = vm.view.approvalModel.comments;\r\n                              }\r\n                              else {\r\n                                  comment = reviewItem.Comments + \" \" + vm.view.approvalModel.comments;\r\n                              }\r\n\r\n                              reviewItem.VotedBy = {};\r\n                              reviewItem.VotedBy.BaseId = session.user.Id;\r\n                              reviewItem.Decision.set(\"Id\", vm.view.approvalModel.decisionEnumId);\r\n                              reviewItem.set(\"Comments\", comment);\r\n                              reviewItem.set(\"DecisionDate\", new Date().toISOString());\r\n\r\n                          }\r\n                      });\r\n\r\n                      //exclude parent workitem details\r\n                      if (pageForm.viewModel.ParentWorkItem) delete pageForm.viewModel.ParentWorkItem;\r\n\r\n                      vm.view.approvalModel.save();\r\n                  });\r\n                },\r\n                updateManualActivity: function (status) {\r\n                    $.when(kendo.ui.ExtYesNoTextAreaDialog.show({\r\n                        title: session.consoleSetting.RequireImplementationNotes ? localization.ImplementationdetailsRequired : localization.Implementationdetails,\r\n                        buttons: [\r\n                            {\r\n                                name: localization.Save,\r\n                                click: function (e) {\r\n                                    var $inputText = $(\"#extInputDialog .k-ext-input-dialog-input\");\r\n                                    var comment = $(\"#extInputDialog .k-ext-input-dialog-input\").val();\r\n                                    var currentNotes = !_.isNull(pageForm.viewModel.Notes) ? pageForm.viewModel.Notes : \"\";\r\n\r\n                                    if (e.dialog.options.required && $inputText.val().length == 0) {\r\n                                        $inputText.addClass(e.dialog.options.requiredCss);\r\n                                    } else {\r\n                                        //exclude parent workitem details\r\n                                        if (pageForm.viewModel.ParentWorkItem) delete pageForm.viewModel.ParentWorkItem;\r\n\r\n                                        //set status \r\n                                        pageForm.viewModel.set(\"Status\", status)\r\n\r\n                                        //set notes\r\n                                        pageForm.viewModel.set(\"Notes\", currentNotes + \"\\n\" + comment);\r\n                                        vm.view.approvalModel.save();\r\n                                        e.dialog.close();\r\n                                    }\r\n                                },\r\n                                cls: \"btn-primary\"\r\n                            },\r\n                            {\r\n                                name: localization.Cancel,\r\n                                click: function (e) {\r\n                                    e.dialog.close();\r\n                                }\r\n                        }],\r\n                        required: session.consoleSetting.RequireImplementationNotes,\r\n                        requiredCss: \"k-ext-required\"\r\n                    })\r\n                 );\r\n                },\r\n                save: function () {\r\n                    var postData = encodeURIComponent(JSON.stringify({\r\n                        isDirty: true,\r\n                        current: pageForm.viewModel.toJSON(),\r\n                        original: pageForm.jsonRaw\r\n                    }));\r\n\r\n                    $.ajax({\r\n                        type: 'POST',\r\n                        dataType: 'text',\r\n                        url: pageForm.saveUrl,\r\n                        data: \"formJson=\" + postData,\r\n                        success: function (data, status, xhr) {\r\n                            location.reload();\r\n                            if (data.search('loginForm') < 0) { // Logged out check    \r\n                                var successMessage = vm.view.approvalModel.decisionEnumId == \"0e856c6c-04e5-0a8e-6041-bc7715b4747e\" ?\r\n                                    localization.ReviewActivityApprovedMessage : localization.ReviewActivityRejectedMessage;\r\n                                \r\n                                if (pageForm.viewModel.ClassName == \"System.WorkItem.Activity.ManualActivity\") {\r\n                                    successMessage = (pageForm.viewModel.Status.Id == app.constants.workItemStatuses.ManualActivity.Completed) ?\r\n                                                    localization.ManualActivityCompletedMessage :\r\n                                                    localization.ManualActivityFailedMessage;\r\n                                }\r\n\r\n                                app.lib.message.add(successMessage.replace(\"{0}\", vm.viewModel.Id), \"success\");\r\n                                app.lib.handleMessages();\r\n                            } else {\r\n                                //session expired\r\n                                window.location = \"/Login/Login?ReturnUrl=\" + window.location.pathname;\r\n                            }\r\n                        },\r\n                        error: function (xhr, ajaxOptions, thrownError) {\r\n                            //do we have a data conflict\r\n                            if (xhr.status == 409) {\r\n\r\n                                $.when(kendo.ui.ExtYesNoDialog.show({\r\n                                    title: localization.DataConflict,\r\n                                    message: localization.DataConflictError + \"<br/><br/><small>(\" + localization.DataConflictDescription + \")</small>\",\r\n                                    icon: \"fa fa-exchange text-danger\",\r\n                                    width: \"500px\",\r\n                                    height: \"175px\"\r\n                                })\r\n                                ).done(function (response) {\r\n                                    if (response.button === \"yes\") {\r\n                                        //open in new tab, may not work this way in all browsers\r\n                                        window.open(window.location.pathname);\r\n                                    } else {\r\n                                        //refresh page\r\n                                        location.href = window.location.pathname;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (xhr.status == 503) { //SDK unavailable\r\n                                var jsonRsp = xhr.responseText;\r\n                                app.lib.log(jsonRsp);\r\n                                //determine error Message\r\n                                var errorMsg = localization.ReconnectRequired;\r\n                                if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                    errorMsg = jsonRsp.exception;\r\n                                }\r\n                                //alert the user\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.Failed,\r\n                                    message: errorMsg,\r\n                                    icon: \"fa fa-times-circle text-danger\"\r\n                                });\r\n                            } else if (xhr.status == 403) { //user does not have access\r\n                                var jsonRsp = xhr.responseText;\r\n                                app.lib.log(jsonRsp);\r\n                                //determine error Message\r\n                                var errorMsg = localization.RequestFailed;\r\n                                if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                    errorMsg = jsonRsp.exception;\r\n                                }\r\n                                //alert the user\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.Failed,\r\n                                    message: errorMsg,\r\n                                    icon: \"fa fa-times-circle text-danger\"\r\n                                });\r\n\r\n                            } else {\r\n                                console && app.lib.log(localization.RequestFailed);\r\n                                app.lib.log(thrownError);\r\n\r\n                                var jsonRsp = xhr.responseText;\r\n                                app.lib.log(jsonRsp);\r\n\r\n                                var errorMsg = localization.RequestFailed;\r\n                                if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                    errorMsg = jsonRsp.exception;\r\n                                }\r\n\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.ErrorDescription,\r\n                                    message: errorMsg,\r\n                                    icon: \"fa fa-exclamation\"\r\n                                });\r\n                            }\r\n                        },\r\n                        processData: false,\r\n                        async: false\r\n                    });\r\n                },\r\n                pageDataSource: new kendo.data.DataSource({\r\n                    serverFiltering: true,\r\n                    serverSorting: true,\r\n                    transport: {\r\n                        read: {\r\n                            url: pageForm.viewModel.ClassTypeId.toLowerCase() == \"bfd90aaa-80dd-0fbb-6eaf-65d92c1d8e36\" ? \"/api/V3/WorkItem/GetGridWorkItemsMyApprovals/\" : \"/api/V3/WorkItem/GetGridWorkItemsMyManualActivities/\",\r\n                            data: {\r\n                                userId: session.user.Id,\r\n                                isScoped: session.user.Security.IsWorkItemScoped,\r\n                                showInActives: false\r\n                            },\r\n                            cache: false\r\n                        }\r\n                    },\r\n                    requestEnd: function (e) {\r\n                        vm.view.approvalModel.updatePageDetails(e.response);\r\n                    }\r\n                }),\r\n                updatePageDetails: function (data) {\r\n                    var index = 1;\r\n                    var pageCount = (data) ? data.length : 0;\r\n\r\n                    _.find(data, function (item, idx) {\r\n                        if (item.Id == vm.viewModel.Id) {\r\n                            index = idx;\r\n                        }\r\n                    });\r\n\r\n                    var pageString = (index + 1) + \" / \" + pageCount;\r\n\r\n                    vm.view.approvalModel.set(\"currentPage\", index);\r\n                    vm.view.approvalModel.set(\"toatPage\", pageCount);\r\n                    vm.view.approvalModel.set(\"pageText\", pageString);\r\n                    vm.view.approvalModel.set(\"disablePrevious\", (index == 0) ? true : false);\r\n                    vm.view.approvalModel.set(\"disableNext\", (index == pageCount - 1) ? true : false);\r\n\r\n                    var statusInProgress = vm.viewModel.Status.Id === \"11fc3cef-15e5-bca4-dee0-9c1155ec8d83\";\r\n\r\n                    if (!statusInProgress || (!_.isUndefined(vm.viewModel.reviewDetails) && (vm.viewModel.reviewDetails.fullDetails.Decision.Id == approve || vm.viewModel.reviewDetails.fullDetails.Decision.Id == rejected) && (vm.viewModel.reviewDetails.fullDetails.User.BaseId == session.user.Id))) {\r\n                        vm.view.approvalModel.set(\"disabledButtons\", true);\r\n                    }\r\n                    else {\r\n                        var review = _.find(pageForm.viewModel.Reviewer, function (reviewItem) {\r\n                            if (_.isUndefined(reviewItem.User)) {\r\n                                return null;\r\n                            }\r\n                            var group = _.find(pageForm.userGroup, function (group) {\r\n                                return reviewItem.User.BaseId == group.Id;\r\n                            });\r\n\r\n                            return !_.isUndefined(reviewItem.User) && reviewItem.Decision.Id == notYetVoted && (reviewItem.User.BaseId == session.user.Id || !_.isUndefined(group));\r\n                        });\r\n\r\n                        if (!review) return;\r\n\r\n                        if (!statusInProgress || (_.isUndefined(review) || _.isNull(review))) {\r\n                            vm.view.approvalModel.set(\"disabledButtons\", true);\r\n                        }\r\n                    }\r\n                },\r\n                nextClick: function () {\r\n                    var index = vm.view.approvalModel.get(\"currentPage\") + 1;\r\n                    vm.view.approvalModel.navigate(index);\r\n                },\r\n                previousClick: function () {\r\n                    var index = vm.view.approvalModel.get(\"currentPage\") - 1;\r\n                    vm.view.approvalModel.navigate(index);\r\n                },\r\n                navigate: function (index) {\r\n                    vm.view.approvalModel.pageDataSource.read();\r\n                    var dSource = vm.view.approvalModel.pageDataSource.data();\r\n\r\n                    var nextItem = dSource[index];\r\n                    var url = vm.view.approvalModel.isReviewActivity ? \"/ReviewActivity/Approval/\" : \"/ManualActivity/Complete/\";\r\n                    var approvalUrl = url + nextItem.Id;\r\n\r\n                    location.href = approvalUrl;\r\n                },\r\n                onChangeSupportGroup: function() {\r\n                    vm.viewModel[pageForm.MASupportGroupField] = vm.view.approvalModel.SupportGroupFieldValue;\r\n                },\r\n                currentPage: 0,\r\n                toatPage: 0,\r\n                pageText: \"\",\r\n                disablePrevious: false,\r\n                disableNext: false,\r\n                title: vm.view.title,\r\n                workItemId: vm.viewModel.Id,\r\n                statusVisible: vm.view.statusVisible,\r\n                statusName: vm.viewModel.Status.Name,\r\n                isParent: vm.viewModel.IsParent,\r\n                isDesktopView: !app.isMobile(),\r\n                isMobileView: app.isMobile(),\r\n                disabledButtons: false,\r\n                reviewResult: null,\r\n                reviewId: 0,\r\n                SupportGroupVisible: pageForm.MASupportGroupField !== \"\",\r\n                SupportGroupEnumId: pageForm.MASupportGroupGuid,\r\n                SupportGroupFieldValue: vm.viewModel[pageForm.MASupportGroupField],\r\n                isManualActivity: pageForm.viewModel.ClassName == \"System.WorkItem.Activity.ManualActivity\",\r\n                isReviewActivity: pageForm.viewModel.ClassName == \"System.WorkItem.Activity.ReviewActivity\",\r\n                disabledMAButtons: pageForm.viewModel.Status.Id == app.constants.workItemStatuses.ManualActivity.Completed ||\r\n                    pageForm.viewModel.Status.Id == app.constants.workItemStatuses.ManualActivity.Failed\r\n                \r\n            });\r\n\r\n            vm.view.approvalModel.pageDataSource.read();\r\n            var view = new kendo.View(built(), { wrap: false, model: vm.view.approvalModel });\r\n\r\n            callback(view.render());\r\n\r\n\r\n        }\r\n    }\r\n    \r\n    return definition;\r\n\r\n});\n","define('forms/headerBuilder',[\r\n    \"forms/header/status/controller\",\r\n    \"forms/header/relationships/controller\",\r\n    \"forms/header/slo/controller\",\r\n    \"forms/header/spacer/controller\",\r\n    \"forms/header/title/controller\",\r\n    \"forms/header/approval/controller\"\r\n\r\n], function (\r\n    status,\r\n    relationships,\r\n    slo,\r\n    spacer,\r\n    title,\r\n    approval\r\n        ) {\r\n\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            //loop all rows in header definition\r\n            _.each(vm.headerTemplate.rows, function (row) {\r\n                //create row dom element\r\n                var rowElm = $('<div/>').addClass(\"row\");\r\n                //loop all cols in def\r\n                _.each(row.columns, function (column) {\r\n                    //create col element\r\n                    var colElm = $('<div/>').addClass(column.Class);\r\n\r\n                    // Decide on Template\r\n                    eval(\"var _obj = \" + column.View + \";\");\r\n                    // Check if Template Exists\r\n                    if (!_obj) {\r\n                        //TODO: should we maybe just default to the string object?\r\n                        throw Exception(column.View + \" is not part of the templating system\");\r\n                        return false;\r\n                    }\r\n\r\n                    _obj.build(vm, column, function (view) {\r\n                        //callback(view);\r\n                        colElm.append(view);\r\n                        colElm.appendTo(rowElm);\r\n                    });\r\n\r\n\r\n                });\r\n\r\n                callback(rowElm);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/structure/formPanel/view.html',[],function () { return '<div class=\"form-panel\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nForm Panel\r\n**/\r\ndefine('forms/structure/formPanel/controller',['require','text!forms/structure/formPanel/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/formPanel/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/formPanelFull/view.html',[],function () { return '<div class=\"form-panel\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nForm Panel\r\n**/\r\ndefine('forms/structure/formPanelFull/controller',['require','text!forms/structure/formPanelFull/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/formPanelFull/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/customFieldGroup/view.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"panel panel-default no-shadow\">\\r\\n        <div class=\"panel-heading\"><%= name %></div>\\r\\n        <div class=\"panel-body append-here\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nCustom Field Group\r\n**/\r\ndefine('forms/structure/customFieldGroup/controller',['require','text!forms/structure/customFieldGroup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/customFieldGroup/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            if (!_.isUndefined(node.Visible) && !node.Visible) {\r\n                return;\r\n            }\r\n\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/customFieldGroupRow/view.html',[],function () { return '<div class=\"row\"></div>';});\n\n","/**\r\ncustomFieldGroupRow\r\n**/\r\ndefine('forms/structure/customFieldGroupRow/controller',['require','text!forms/structure/customFieldGroupRow/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/customFieldGroupRow/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            callback(tpl);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/columnField/view.html',[],function () { return '<div class=\"col-md-<%= ColSize %>\"></div>';});\n\n","/**\r\ncolumnField\r\n**/\r\ndefine('forms/structure/columnField/controller',['require','text!forms/structure/columnField/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/columnField/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/tab/view.html',[],function () { return '<div class=\"tab-content\"></div>';});\n\n","/**\r\nTab List\r\n**/\r\ndefine('forms/structure/tab/controller',['require','text!forms/structure/tab/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/tab/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/structure/tabPane/view.html',[],function () { return '<div class=\"tab-pane <%= active %>\" id=\"<%= tabId %>\"></div>   ';});\n\n","/**\r\nTab pane\r\n**/\r\ndefine('forms/structure/tabPane/controller',['require','text!forms/structure/tabPane/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/structure/tabPane/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/structure/tabNavigation/view.html',[],function () { return '<ul class=\"nav nav-pills\" id=\"myTab\" data-bind=\"tabDrop:true\"></ul>';});\n\n","\ndefine('text!forms/structure/tabNavigation/mobile.html',[],function () { return '<div class=\"nav-dropdown\">\\r\\n    <span class=\"nav-dropdown-default\"></span>\\r\\n    <div class=\"nav-dropdown-trigger\">\\r\\n        <i class=\"fa fa-sort-desc\"></i>\\r\\n    </div>\\r\\n    <div class=\"nav-dropdown-content\">\\r\\n        <ul id=\"myTab\" data-bind=\"navDrop:true\"></ul>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nTab navigation\r\n**/\r\ndefine('forms/structure/tabNavigation/controller',['require','text!forms/structure/tabNavigation/view.html','text!forms/structure/tabNavigation/mobile.html'],function (require) {\r\n    var dtpl = require(\"text!forms/structure/tabNavigation/view.html\");\r\n    var mtpl = require(\"text!forms/structure/tabNavigation/mobile.html\");\r\n    \r\n    var tpl = (app.isMobile()) ? mtpl : dtpl;\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/structure/tabData/view.html',[],function () { return '<li class=\"<%= active %>\"><a href=\"#<%= tabId %>\" data-toggle=\"tab\" data-cid=\"<%= cid %>\"><%= name %></a></li>';});\n\n","\ndefine('text!forms/structure/tabData/mobile.html',[],function () { return '<li value=\"<%= tabId %>\" data-cid=\"<%= cid %>\" data-toggle=\"tab\"\\r\\n      <% if ( active ){ %>\\r\\n         class=\"selected\" \\r\\n       <% } %>\\r\\n         > <%= name %>\\r\\n</li>\\r\\n\\r\\n';});\n\n","/**\r\nTab data\r\n**/\r\ndefine('forms/structure/tabData/controller',['require','text!forms/structure/tabData/view.html','text!forms/structure/tabData/mobile.html'],function (require) {\r\n    var dtpl = require(\"text!forms/structure/tabData/view.html\");\r\n    var mtpl = require(\"text!forms/structure/tabData/mobile.html\");\r\n  \r\n    var tpl = (app.isMobile()) ? mtpl : dtpl;\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            node.cid = node.name;\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/predefined/actionLog/view.html',[],function () { return '<div data-control=\"actionLog\">\\r\\n    <div class=\"row\" data-bind=\"visible:isDesktop\">\\r\\n        <div class=\"col-md-12\">\\r\\n            <div class=\"form-group\">\\r\\n                <label for=\"commentBoxEditor\" data-localize=\"Comment\"></label>\\r\\n                <textarea id=\"commentBoxEditor\" class=\"k-textbox form-control input-sm action-log-textarea\" data-bind=\"value: commentBoxHTML\"\\r\\n                <% if ( Disabled ){ %>\\r\\n                disabled\\r\\n                <% } %>>\\r\\n                    </textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-12\">\\r\\n            <div class=\"pull-left\">\\r\\n                <span data-bind=\"text: charactersRemaining\"></span>\\r\\n                <span data-localize=\"CharactersRemaining\"> </span>\\r\\n            </div>\\r\\n            <div class=\"pull-right\">\\r\\n                <button type=\"button\" data-bind=\"click: addComment, enabled: addEnabled\" class=\"k-button btn btn-primary action-log-add-button\" data-localize=\"Add\"></button>\\r\\n            </div>\\r\\n            <div data-bind=\"visible: isAnalyst\" class=\"pull-right checkbox action-log-private\">\\r\\n                <input type=\"checkbox\" data-bind=\"checked: isPrivate\" id=\"actionLogisPrivate\" \\r\\n                       <% if (Disabled) { %>\\r\\n                        disabled\\r\\n                    <% } %>>\\r\\n                </input>\\r\\n\\r\\n                <label class=\"label-middle-align checkbox-inline checkbox-label\" data-localize=\"IsPrivate\" for=\"actionLogisPrivate\" />\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\"row\" data-bind=\"visible:isMobile\">\\r\\n        <div class=\"action-log-mobile\">\\r\\n            <textarea id=\"commentBoxEditorMobile\" class=\"k-textbox form-control input-sm action-log-textarea\" data-bind=\"value: commentBoxHTML\"\\r\\n            <% if (Disabled) { %>disabled<% } %>></textarea>\\r\\n            <div class=\"action-log-mobile-buttons\">\\r\\n                <button type=\"button\" data-bind=\"click: addComment\" data-localize=\"Add Comment\" class=\"col-xs-7 btn btn-primary\"></button>\\r\\n                <div data-bind=\"visible: isAnalyst\" class=\"pull-left checkbox checkbox-inline action-log-mobile-private\">\\r\\n                    <input type=\"checkbox\" data-bind=\"checked: isPrivate\" id=\"actionLogisPrivate\"><% if (Disabled) { %>\\r\\n                    disabled\\r\\n                    <% } %>></input>\\r\\n                    <label class=\"label-middle-align control-label\" data-localize=\"IsPrivate\" for=\"actionLogisPrivate\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n\\r\\n        <div class=\"col-md-12\" data-bind=\"visible:isDesktop\">\\r\\n\\r\\n            <div data-control-grid=\"actionLogGrid\" class=\"inline-spacing\"></div>\\r\\n\\r\\n            <!-- kendo details template used by action grid -->\\r\\n            <script data-id=\"commentDetailTemplate\" type=\"text/kendo-tmpl\">\\r\\n                <p name=\"CommentBoxDetail\" class=\"action-log-comment\">#=DescriptionDisplay#</p>\\r\\n            </script>\\r\\n        </div>\\r\\n        <div data-bind=\"visible:isMobile\">\\r\\n            <div data-role=\"listview\" data-bind=\"source: actionLogSource\" data-template=\"action-log-grid-mobile-template\" class=\"action-log-mobile-grid \"></div>\\r\\n            <script type=\"text/x-kendo-template\" id=\"action-log-grid-mobile-template\">\\r\\n                <div class=\"col-md-12 action-log-info\">\\r\\n                    <div class=\"row\">\\r\\n                        <div class=\"col-xs-2 action-log-icon\">\\r\\n                            <img src=\"#:data.Image#\" alt=\"#:data.Image#\" />\\r\\n                        </div>\\r\\n                        <div class=\"col-xs-10 action-log-details\">\\r\\n                            <p>\\r\\n                                #: EnteredBy # &middot; #: (EnteredDate) ? kendo.toString(new Date(EnteredDate), \\'d\\'):\\'\\' #\\r\\n                            </p>\\r\\n                            <p> #: Title #</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"row\">\\r\\n                        <div class=\"col-xs-offset-2 col-xs-10 action-log-content\">\\r\\n                            #: Description #\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </script>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nactionLog\r\n**/\r\n\r\ndefine('forms/predefined/actionLog/controller',['require','text!forms/predefined/actionLog/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/actionLog/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var view = built(properties);\r\n\r\n            callback(view);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/fileAttachments/view.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"col-md-12 fileAttachmentGrid\" data-control=\"fileAttachmentGrid\" data-control-bind=\"FileAttachment\"\\r\\n\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nfileAttachments\r\n**/\r\n\r\ndefine('forms/predefined/fileAttachments/controller',['require','text!forms/predefined/fileAttachments/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/fileAttachments/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/affectedItems/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">#: DisplayName #</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <p>#: (AssetStatus.Name!=null) ? AssetStatus.Name : \"\" #</p>\\r\\n                <p># if (AssetStatus.Name!=null && AssetStatus.Name!=\"\") { # &middot # } # </p>\\r\\n                <p>#: (Path!=null ) ? Path : \"\" # </p>\\r\\n                <p># if (Path!=null && Path!=\"\") { # &middot # } # </p>\\r\\n\\r\\n            </div>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <a class=\"k-delete-button\">#: localization.Remove #</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 affecteditems-grid\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\"><%= localization.Configurationitem %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-min-length=\"3\"\\r\\n                               data-bind=\"value: view.affectedItemController.selectedConfigItem, source: view.affectedItemController.configItemDataSource, events:{change:view.affectedItemController.onConfigItemChange }\"\\r\\n                               data-cid=\"ci-searchbox\" />\\r\\n                        <span class=\"search\"\\r\\n                              data-bind=\"events:{click: view.affectedItemController.searchConfigItem}\"\\r\\n                              data-cid=\"affecteditemssearchicon\">\\r\\n                            <i class=\"fa fa-search\"></i>\\r\\n                        </span>\\r\\n                        <button data-role=\"button\" class=\"search-button two-action-input-group__primary-action\"\\r\\n                                data-bind=\"events:{click: view.affectedItemController.addConfigItem}\"\\r\\n                                data-cid=\"affectedItemsSearchBoxAddButton\">\\r\\n                            <%= localization.Add %>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group affected-user-item-search\" data-bind=\"visible: view.affectedItemController.isUserCIVisible\">\\r\\n                    <label class=\"control-label\"><%= localization.AffectedUserItems %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-bind=\"value: view.affectedItemController.selectedUserConfigItem, source: view.affectedItemController.userConfigItemDataSource, events:{change:view.affectedItemController.onUserConfigItemChange }\"\\r\\n                               data-cid=\"auitems-searchbox\" />\\r\\n                        <button class=\"two-action-input-group__primary-action\" data-role=\"button\"\\r\\n                                data-bind=\"events:{click: view.affectedItemController.addUserConfigItem}\"\\r\\n                                data-cid=\"affectedItemsComboBoxAddButton\">\\r\\n                            <%= localization.Add %>\\r\\n\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div data-role=\"grid\"\\r\\n             data-bind=\"visible: view.affectedItemController.isDesktopView, source: view.affectedItemController.dataSource, events:{dataBinding: view.affectedItemController.onDataBinding}\"\\r\\n             data-selectable=\"false\"\\r\\n             data-sortable=\"true\"\\r\\n             data-filterable=\"true\"\\r\\n             data-scrollable=\"false\"\\r\\n             data-column-menu=\"true\"\\r\\n             data-pageable=\"false\"\\r\\n             data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n             data-columns=\\'[\\r\\n                    { title: \"\", width: \"1%\", template: \"\\\\u003cdiv data-base-id=\\\\\"#=BaseId#\\\\\" class=\\\\\"aci-context-menu open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.affectedItemController.isSlideOut\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\\\\u003cdiv class=\\\\\"open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.affectedItemController.isMoreInfo, events:{click:view.affectedItemController.showMoreInfo }\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"/\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\"},\\r\\n                    { field: \"DisplayName\", title: localization.DisplayName, width: \"50%\"},\\r\\n                    { field: \"BaseId\", title: localization.BaseId, width: \"25%\", hidden: true },\\r\\n                    { field: \"Path\", title: localization.Path, width: \"25%\" },\\r\\n                    { field: \"AssetStatus.Name\", title: localization.Status, width: \"25%\" },\\r\\n                    { title: localization.Actions, width: \"15%\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove, className:\"custom__grid-remove\" }] }\\r\\n                ]\\'>\\r\\n        </div>\\r\\n        <div data-bind=\"visible: view.affectedItemController.isMobileView\">\\r\\n            <div data-bind=\"mobileGrid: HasRelatedWorkItems\" data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\"></div>\\r\\n        </div>\\r\\n        <!--context menu for info icon-->\\r\\n        <ul id=\"tccmenu\" data-role=\"contextmenu\"\\r\\n            data-filter=\".aci-context-menu\"\\r\\n            data-show-on=\"click\"\\r\\n            data-bind=\"events:{select:view.affectedItemController.onContextmenuSelect, activate:view.affectedItemController.onContextmenuActivate}\">\\r\\n        </ul>\\r\\n   </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/popups/multipleObjectPickerPopup/view.html',[],function () { return '<div id=\"MultiObjectPickerWindow\" class=\"cireson-window defined-form task-window\" data-cid=\"MultiObjectPickerWindow\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-5\">\\r\\n                    <div class=\"form-group\">\\r\\n                        <label><%= localization.SearchText %></label>\\r\\n                        <span class=\"k-textbox k-space-right object-picker-search\">\\r\\n                            <input type=\"text\" data-objectpicker-action=\"search\" data-objectpicker-action-value=\"search\" value=\"\" data-cid=\"MultiObjectPickerWindowSearchBox\" />\\r\\n                            <span data-objectpicker-action=\"search\" class=\"fa fa-search text-primary cursor-pointer\"></span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"col-md-5\">\\r\\n                    <div class=\"form-group\">\\r\\n                        <label><%= localization.SearchObjectText %></label>\\r\\n                        <input type=\"text\" data-objectpicker-control=\"comboBox\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <label><%= localization.SelectObjects %></label>\\r\\n\\r\\n            <div class=\"objectPicker-container\">\\r\\n                <div class=\"k-widget k-grid k-secondary\" data-objectpicker-control=\"objectPickerGrid\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"objectPicker-actions\">\\r\\n                <button data-objectpicker-action=\"addObject\" class=\"btn btn-primary k-button\" data-cid=\"multiobject-picker-add-object-btn\"><%= localization.Add %></button>\\r\\n                <button data-objectpicker-action=\"removeObject\" class=\"btn btn-danger k-button\" data-cid=\"multiobject-picker-remove-object-btn\"><%= localization.Remove %></button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"k-widget k-grid k-secondary objectPicker-grid2-container\" data-objectpicker-control=\"objectPickerGrid2\"></div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\"\\r\\n                    data-cid=\"multiobject-picker-ok-btn\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\"\\r\\n                    data-cid=\"multiobject-picker-cancel-btn\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nmultipleObjectPickerPopup\r\n**/\r\n\r\ndefine('forms/popups/multipleObjectPickerPopup/controller',['require','text!forms/popups/multipleObjectPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/multipleObjectPickerPopup/view.html\");\r\n    var singletonName = \"objectPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (classId, columnNames, gridUrl, dataSourceFilter, isConfigItem) {\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built());\r\n            //var classId = classId;\r\n            //var columnNames = columnNames;\r\n            //var gridUrl = gridUrl;\r\n            // keep popup window as singleton\r\n            // check to see if dom element exists, if so get userPickerPopup object from it\r\n            var ele = $('[datasingleton=\"' + singletonName + '\"]');\r\n            var objectPickerPopup = ele.data(singletonName);\r\n            if (!ele.length) {\r\n                ele = templateFrag;\r\n                $(\"body\").append(ele);\r\n                objectPickerPopup = new ObjectPickerPopup(ele, classId, columnNames, gridUrl, dataSourceFilter, isConfigItem);\r\n                ele.data(singletonName, objectPickerPopup);\r\n            }\r\n            return objectPickerPopup;\r\n\r\n        }\r\n    }\r\n\r\n    /* -- ObjectPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            open = function(classId){ // opens popup with this classId }\r\n            close = function(){ // closes popup }\r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback(obj){  } returns selected user object\r\n    */\r\n    \r\n    // CONTROL\r\n    var ObjectPickerPopup = function (targetEle, classId, columnNames, gridUrl, dataSourceFilter, isConfigItem) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var classId = classId;\r\n        var columnNames = columnNames;\r\n        var controllerUrl = gridUrl;\r\n        var filter = dataSourceFilter;\r\n        var isConfigItem = isConfigItem;\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"DisplayName\";\r\n        var _idProp = \"Id\";\r\n       // var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, objects) { callback(objects); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, objects) { callback(objects); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                save: onSaveClick,\r\n                cancel: onCancelClick\r\n            });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n\r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSaveClick = function () {\r\n            var selectedRows = popup.grid2.dataSource.data();\r\n            if (selectedRows) {\r\n                $.each(selectedRows, function (i, itm) {\r\n                    if (_.isUndefined(itm.BaseId)) { itm.BaseId = itm.Id;}\r\n                    $(self).trigger(\"save\", itm);\r\n                });\r\n                closePopup();\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n\r\n        var openPopup = function () {\r\n            popup.actions.clearSearchText();\r\n            popup.gridFunctions.clear();\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup();\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function () {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            var gridUrl = (!_.isUndefined(controllerUrl) && !_.isNull(controllerUrl)) ? controllerUrl : \"/Search/GetSearchObjectsWithEnumObjectByClassId\";\r\n            var comboUrl = \"/Search/GetSearchClasses\";\r\n            var combo;\r\n            var grid;\r\n            var grid2;\r\n            var searchText;\r\n            var gridFunctions;\r\n            var actions;\r\n            var outObjs = new kendo.data.ObservableArray([]);\r\n            // CONSTRUCT\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                createCombo();\r\n                createGrid();\r\n                createGrid2();\r\n                bindEvents();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            // ACTIONS\r\n           \r\n\r\n            var callback = function () { }\r\n\r\n            var actions = new (function () {\r\n                this.addObject = function () {\r\n                    var selected = grid.select();\r\n                    for (var i = 0, max = selected.length; i < max; i++) {\r\n                        var item = grid.dataItem(selected[i]);\r\n                        if (item) grid2Funcs.addItem(item);\r\n                    }\r\n\r\n                    //var item = grid.dataItem(grid.select());\r\n                    //if (item) grid2Funcs.addItem(item);\r\n                }\r\n                this.removeObject = function () {\r\n                    //grid2.removeRow(grid2.select());\r\n                    var selected = grid2.select();\r\n                    for (var i = 0, max = selected.length; i < max; i++) {\r\n                        grid2.removeRow(selected[i]);\r\n                    }\r\n                }\r\n                this.search = function () {\r\n                    var ele = html.find('[data-objectpicker-action-value=\"search\"]');\r\n                    searchText = (ele) ? ele.val() : \"\";\r\n                    grid.dataSource.read();\r\n\r\n                    //used on RelatesToWorkItem relatinship, exclude current workitem from list\r\n                    if (!_.isUndefined(filter) && !_.isNull(filter)) {\r\n                        grid.dataSource.filter(filter);\r\n                    }\r\n                    grid.dataSource.page(1);\r\n                }\r\n                this.clearSearchText = function () {\r\n                    html.find('[data-objectpicker-action-value=\"search\"]').val('');\r\n                    searchText = \"\";\r\n                }\r\n            })();\r\n            self.actions = actions;\r\n\r\n            var gridFuncs = new (function () {\r\n                this.searchFilter = function () {\r\n                    return { searchFilter: searchText, classId: comboFuncs.getIdValue, columnNames: columnNames };\r\n                }\r\n                this.onChange = function () {\r\n\r\n                }\r\n                this.onDataBound = function () {\r\n                    if (grid.dataSource.totalPages() == 1) {\r\n                        grid.pager.element.hide();\r\n                    }\r\n                }\r\n                this.clear = function () {\r\n                    self.grid.dataSource.data([]);\r\n                    while (outObjs.length != 0) {\r\n                        $.each(self.grid2.items(), function (ii, iitem) {\r\n                            self.grid2.removeRow(iitem)\r\n                        });\r\n                    }\r\n                }\r\n                this.dblClick = function () {\r\n                    // $(this) add to grid 2\r\n                    grid2Funcs.addItem(grid.dataItem($(this)));\r\n                }\r\n                \r\n            })();\r\n            self.gridFunctions = gridFuncs;\r\n\r\n            var grid2Funcs = new (function () {\r\n                this.addItem = function (item) {\r\n                    var a = true;\r\n                    $.each(outObjs, function (i, itm) {\r\n                        if (item.uid == itm.uid) {\r\n                            a = false;\r\n                        }\r\n                    })\r\n                    if (a) outObjs.push(item);\r\n                }\r\n            })();\r\n\r\n            var comboFuncs = new (function () {\r\n                this.getIdValue = function () {\r\n                    var item1 = self.combo.value();\r\n                    return !_.isNull(item1) ? item1 : classId.toLowerCase();\r\n                }\r\n            })();\r\n\r\n            // METHODS\r\n            var createKendoWindow = function () {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: localization.SelectObject,\r\n                    content: null,\r\n                    width: 750,\r\n                    height: 710,\r\n                    actions: [\"Close\"],\r\n                    activate: function () {\r\n                        self.combo.value(classId.toLowerCase());\r\n                    }\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n\r\n            //combo\r\n            var createCombo = function () {\r\n                self.combo = html.find(\"[data-objectpicker-control='comboBox']\").kendoComboBox({\r\n                    \"dataSource\": {\r\n                        \"transport\": {\r\n                            \"prefix\": \"\",\r\n                            \"read\": {\r\n                                \"url\": comboUrl,\r\n                                \"data\": { classId: classId }\r\n                            }\r\n                        },\r\n                        \"schema\": {\r\n                            \"errors\": \"Errors\"\r\n                        }\r\n                    },\r\n                    \"dataTextField\": \"Item2\",\r\n                    \"autoBind\": true,\r\n                    \"dataValueField\": \"Item1\",\r\n                    \"filter\": \"contains\"\r\n                }).data(\"kendoComboBox\");\r\n            }\r\n\r\n            //first grid\r\n            var createGrid = function () {\r\n                var gc = html.find('[data-objectpicker-control=\"objectPickerGrid\"]');\r\n                var gridSettings = function () {\r\n                    var dataSource = {\r\n                        \"transport\": {\r\n                            \"prefix\": \"\",\r\n                            \"read\": {\r\n                                \"url\": gridUrl,\r\n                                \"data\": gridFuncs.searchFilter,\r\n                                \"type\": \"GET\",\r\n                                \"cache\": false\r\n                            }\r\n                        },\r\n                        \"pageSize\": 5,\r\n                        \"type\": \"aspnetmvc-ajax\",\r\n                        \"schema\": {\r\n                            \"data\": \"Data\",\r\n                            \"total\": \"Total\",\r\n                            \"errors\": \"Errors\",\r\n                        }\r\n                    }\r\n                    var columns = [\r\n                        {\r\n                            \"title\": \"Id\",\r\n                            \"hidden\": true,\r\n                            \"field\": \"Id\",\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.DisplayName,\r\n                            \"attributes\": {\r\n                                \"class\": \"grid-highlight-column\"\r\n                            },\r\n                            \"field\": \"DisplayName\",\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Class,\r\n                            \"field\": \"FullClassName\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Path,\r\n                            \"field\": \"Path\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": { },\r\n                            \"encoded\": true\r\n                        }\r\n                    ];\r\n                    var userClassId = \"10a7f898-e672-ccf3-8881-360bfb6a8f9a\";\r\n                    var userColumns = [\r\n                       {\r\n                           \"title\": localization.FirstName,\r\n                           \"attributes\": {\r\n                               \"class\": \"grid-highlight-column\"\r\n                           },\r\n                           \"field\": \"FirstName\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }, {\r\n                           \"title\": localization.LastName,\r\n                           \"attributes\": {\r\n                               \"class\": \"grid-highlight-column\"\r\n                           },\r\n                           \"field\": \"LastName\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }, {\r\n                           \"title\": localization.Title,\r\n                           \"field\": \"Title\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }, {\r\n                           \"title\": localization.UserName,\r\n                           \"field\": \"UserName\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       },{\r\n                           \"title\": localization.Domain,\r\n                           \"field\": \"Domain\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       },{\r\n                           \"title\": localization.Company,\r\n                           \"field\": \"Company\",\r\n                           \"filterable\": {},\r\n                           \"encoded\": true\r\n                       }\r\n                    ];\r\n                    return {\r\n                        \"columns\": (classId.toLowerCase() == userClassId) ? userColumns : columns,\r\n                        \"sortable\": {\r\n                            \"mode\": \"multiple\"\r\n                        },\r\n                        \"selectable\": \"Multiple, Row\",\r\n                        \"filterable\": {\r\n                            \"operators\": {\r\n                                \"string\": {\r\n                                    \"startswith\": localization.Startswith,\r\n                                    \"contains\": localization.Contains,\r\n                                    \"eq\": localization.Isequalto,\r\n                                    \"neq\": localization.Isnotequalto\r\n                                }\r\n                            }\r\n                        },\r\n                        \"columnMenu\": false,\r\n                        \"autoBind\": false,\r\n                        \"dataSource\": dataSource,\r\n                        \"pageable\": true\r\n                    }\r\n                }\r\n                grid = gc.kendoGrid(gridSettings()).data(\"kendoGrid\");\r\n                gridFuncs.onDataBound();\r\n                gc.on(\"dblclick\", \"tbody>tr\", gridFuncs.dblClick);\r\n                self.grid = grid;\r\n            }\r\n\r\n            //second grid\r\n            var createGrid2 = function () {\r\n                var gc = html.find('[data-objectpicker-control=\"objectPickerGrid2\"]');\r\n                var dataSource = {\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": \"\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": 5,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    data: {\r\n                        Data: outObjs,\r\n                        Total: outObjs.length\r\n                    },\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                    }\r\n                }\r\n                var columns = [\r\n                        {\r\n                            \"title\": \"Id\",\r\n                            \"hidden\": true,\r\n                            \"field\": \"Id\",\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.DisplayName,\r\n                            \"attributes\": {\r\n                                \"class\": \"grid-highlight-column\"\r\n                            },\r\n                            \"field\": \"DisplayName\",\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Class,\r\n                            \"field\": \"FullClassName\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }, {\r\n                            \"title\": localization.Path,\r\n                            \"field\": \"Path\",\r\n                            \"hidden\": app.isMobile(),\r\n                            \"filterable\": {},\r\n                            \"encoded\": true\r\n                        }\r\n                ];\r\n                var userClassId = \"10a7f898-e672-ccf3-8881-360bfb6a8f9a\";\r\n                var userColumns = [\r\n                   {\r\n                       \"title\": localization.FirstName,\r\n                       \"attributes\": {\r\n                           \"class\": \"grid-highlight-column\"\r\n                       },\r\n                       \"field\": \"FirstName\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.LastName,\r\n                       \"attributes\": {\r\n                           \"class\": \"grid-highlight-column\"\r\n                       },\r\n                       \"field\": \"LastName\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.Title,\r\n                       \"field\": \"Title\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.UserName,\r\n                       \"field\": \"UserName\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.Domain,\r\n                       \"field\": \"Domain\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }, {\r\n                       \"title\": localization.Company,\r\n                       \"field\": \"Company\",\r\n                       \"filterable\": {},\r\n                       \"encoded\": true\r\n                   }\r\n                ];\r\n                grid2 = gc.kendoGrid({\r\n                    \"columns\": (classId.toLowerCase() == userClassId) ? userColumns : columns,\r\n                    \"pageable\": true,\r\n                    \"dataSource\": dataSource,\r\n                    \"selectable\": \"Multiple, Row\",\r\n                    \"filterable\": {\r\n                        \"operators\": {\r\n                            \"string\": {\r\n                                \"startswith\": localization.Startswith,\r\n                                \"contains\": localization.contains,\r\n                                \"eq\": localization.Isequalto,\r\n                                \"neq\": localization.Isnotequalto\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    \"columnMenu\": false\r\n                }).data(\"kendoGrid\");\r\n\r\n                self.grid2 = grid2;\r\n            }\r\n\r\n            //bind events\r\n            var bindEvents = function () {\r\n                html.find('[data-objectpicker-action]').each(function (i, ele) {\r\n                    var action = $(this).attr('data-objectpicker-action');\r\n                    var nd = ele.nodeName.toLowerCase();\r\n                    if (!actions[action]) { app.lib.exception(\"The method action.\" + action + \" does not exist\"); }\r\n                    if ((nd == \"input\" && $(this).attr(\"type\").toLowerCase() == \"text\") || nd == \"textarea\") {\r\n                        $(this).bind('enter', actions[action]);\r\n                    } else {\r\n                        $(this).click(actions[action]);\r\n                    }\r\n                });\r\n            }\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        __construct();\r\n\r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","/**\naffectedItems\n**/\n\ndefine('forms/predefined/affectedItems/controller',['require','text!forms/predefined/affectedItems/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\n    var tpl = require(\"text!forms/predefined/affectedItems/view.html\");\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\n\n    var definition = {\n        template: tpl,\n        build: function (vm, node, callback) {\n            var built = _.template(tpl);\n            var properties = {\n                Disabled: !_.isUndefined(node.disabled) ? node.disabled : false\n            };\n\n            $.extend(true, properties, node);\n\n            var view = new kendo.View();\n\n            var cur_table = false;\n\n            //use setters and getters if you want vm boundOdj to trigger change\n            if (_.isUndefined(vm.HasRelatedWorkItems)) {\n                vm.set('HasRelatedWorkItems', new kendo.data.ObservableArray([]));\n            }\n            var boundArray = vm.get('HasRelatedWorkItems');\n\n            vm.view.affectedItemController = new kendo.observable({\n                addConfigItem: function (e) {\n                    if (!_.isUndefined(this.selectedConfigItemId)) { addAffectedItem(this.selectedConfigItemId); }\n                },\n                searchConfigItem: function () {\n                    var popupWindow = objectPickerPopup.getPopup(\"62F0BE9F-ECEA-E73C-F00D-3DD78A7422FC\", \"DisplayName,Path,Status\", null, null, true);\n                    popupWindow.setSaveCallback(function (object) {\n                        addAffectedItem(object.BaseId);\n                    });\n                    popupWindow.open();\n                },\n                selectedConfigItemId: \"\",\n                selectedConfigItem: \"\",\n                configItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: function (data) {\n                                var configItem = (data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                                return \"/api/V3/Config/GetAffectedItemsList?itemFilter=\" + configItem;\n                            },\n                            dataType: \"json\"\n                        }\n                    }\n                }),\n                onConfigItemChange: function (e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedConfigItemId = dataItem.Id;\n                },\n                isUserCIVisible: !_.isUndefined(vm.RequestedWorkItem) ? true : false,\n                selectedUserConfigItemId: \"\",\n                selectedUserConfigItem: \"\",\n                addUserConfigItem: function (e) {\n                    if (!_.isUndefined(this.selectedUserConfigItemId)) { addAffectedItem(this.selectedUserConfigItemId); }\n                },\n                userConfigItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: \"/ConfigItems/GetAffectedUserConfigItemsList\",\n                            data: {\n                                affectedUserId: function () {\n                                    return !_.isUndefined(vm.RequestedWorkItem) && !_.isNull(vm.RequestedWorkItem.BaseId) ? vm.RequestedWorkItem.BaseId : \"\";\n                                }\n                            },\n                            dataType: \"json\",\n                            type: \"GET\"\n                        }\n                    }\n                }),\n                onUserConfigItemChange: function (e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedUserConfigItemId = dataItem.Id;\n                },\n                dataSource: new kendo.data.DataSource({\n                    schema: {\n                        data: \"Data\",\n                        total: \"Total\",\n                        errors: \"Errors\",\n                        model: {\n                            id: \"BaseId\",\n                        }\n                    },\n                    data: {\n                        Data: boundArray,\n                        Total: boundArray.length\n                    }\n                }),\n                showMoreInfo: function (e) {\n                    var detailsPopupEle = $(\"<div>\");\n                    detailsPopupEle.appendTo(\"body\");\n\n                    var detailsPopup = detailsPopupEle.kendoCiresonWindow({\n                        title: \"\",\n                        width: 550,\n                        height: 500,\n                        actions: [\"Close\"]\n                    }).data(\"kendoWindow\");\n\n                    var baseId = null;\n                    var displayName = \"\";\n                    if (e.data == null && e.BaseId != null) {\n                        baseId = e.BaseId;\n                        displayName = e.DisplayName;\n                    } else {\n                        baseId = e.data.BaseId;\n                        displayName = e.data.DisplayName;\n                    }\n\n                    detailsPopup.refresh({\n                        url: \"/Search/ObjectViewer\",\n                        data: { id: baseId }\n                    });\n                    detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\n                    detailsPopup.title(displayName).center().open();\n                },\n                onDataBinding: function (e) {\n                    cur_table = e.sender.table;\n                    _.each(boundArray, function (item) {\n                        item.AssetStatus = (!_.isUndefined(item.AssetStatus) && !_.isNull(item.AssetStatus))? item.AssetStatus : { Id: null, Name: null };\n                        item.Status = (!_.isUndefined(item.Status) && !_.isNull(item.Status)) ? item.Status : { Id: null, Name: null };\n                        item.Hidden = properties.Disabled;\n                    });\n                },\n                isDesktopView: !app.isMobileDevice(),\n                isMobileView: app.isMobileDevice(),\n                isWindowsComputer: false,\n                isConfigItemWindowsComputer: function (id) {\n                    $.ajax({\r\n                        type: \"GET\",\n                        async: false,\n                        url: \"/ConfigItems/IsComputer\",\n                        data: { objectId: id },\n                        success: function (result) {\r\n                            vm.view.affectedItemController.isWindowsComputer = (result.toLowerCase() === \"true\");\r\n                        }\r\n                    });\n                },\n                isUser: false,\n                isConfigItemUser: function (id) {\n                    /*$.ajax({\r\n                        type: \"GET\",\n                        async: false,\n                        url: \"/ConfigItems/IsUser\",\n                        data: { objectId: id },\n                        success: function (result) {\r\n                            vm.view.affectedItemController.isUser = (result.toLowerCase() === \"true\");\r\n                        }\r\n                    });\n\t\t\t\t\t*/\n\t\t\t\t\t/*\n\t\t\t\t\t$.ajax({\n                        type: \"GET\",\n                        async: false,\n                        url: \"/api/v3/Dashboard/GetDashboardDataById/\",\n                        data: {\n\t\t\t\t\t\t\tqueryId: '7b608bb5-4db0-b770-9e63-27cfb647b157',\n\t\t\t\t\t\t\tuserObjectId: id\n\t\t\t\t\t\t},\n                        success: function (result) {\n                            vm.view.affectedItemController.isUser = (result[0].isUser.toLowerCase() === \"true\");\n                        }\n                    });\n\t\t\t\t\t*/\n\t\t\t\t\t$.ajax({\n                        type: \"GET\",\n                        async: false,\n                        url: \"/Search/GetObjectProperties/\",\n                        data: {\n\t\t\t\t\t\t\tid: id\n\t\t\t\t\t\t},\n                        success: function (result) {\n                            vm.view.affectedItemController.isUser = (result.IsUser === true);\n                        }\n                    });\n                },\n                isMoreInfo: function (viewModel) {\n                    var bSlideOut = vm.view.affectedItemController.isSlideOut(viewModel);\n                    return !bSlideOut;\n                },\n                isSlideOut: function (viewModel) {\n                    /*\n\t\t\t\t\tvm.view.affectedItemController.isConfigItemWindowsComputer(viewModel.BaseId);\n                    vm.view.affectedItemController.isConfigItemUser(viewModel.BaseId);\n                    \n                    var bIsWindowsComputer = vm.view.affectedItemController.isWindowsComputer;\n                    var bIsUser = vm.view.affectedItemController.isUser;\n\t\t\t\t\t*/\n\t\t\t\t\tvm.view.affectedItemController.isConfigItemUser(viewModel.BaseId);\n\t\t\t\t\tvar bIsUser = vm.view.affectedItemController.isUser;\n\t\t\t\t\t\n\t\t\t\t\tvm.view.affectedItemController.isWindowsComputer = false;\n\t\t\t\t\tvar bIsWindowsComputer = false;\n\t\t\t\t\t\n\t\t\t\t\tif (bIsUser !== true) {\n\t\t\t\t\t\tvm.view.affectedItemController.isConfigItemWindowsComputer(viewModel.BaseId);\n\t\t\t\t\t\tbIsWindowsComputer = vm.view.affectedItemController.isWindowsComputer;\n\t\t\t\t\t}\n\n                    var hasControlCenterURL = !_.isNull(session.consoleSetting.TrueControlCenterURL) && (session.consoleSetting.TrueControlCenterURL != \"\");\n\n                    return ((bIsWindowsComputer || bIsUser) && hasControlCenterURL) ? true : false;\n                },\n                showTCCInfo: function (dataItem) {\n                    var src = session.consoleSetting.TrueControlCenterURL;\n                    var bIsWindowsComputer = vm.view.affectedItemController.isWindowsComputer;\n                    var bIsUser = vm.view.affectedItemController.isUser;\n                    var tooltip = localization.ComputerManagement;\n\n                    if (bIsWindowsComputer) {\r\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"computer\");\r\n                    } else if (bIsUser) {\r\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"user\");\n                        tooltip = localization.UserManagement;\r\n                    }\n\n                    var options = {\r\n                        url: src,\r\n                        tooltip: tooltip\r\n                    }\n                    app.slideOutNav.show(options);\n                },\n                onContextmenuSelect: function (e) {\n                    var type = e.item.attributes[\"custom\"].value;\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    var dataItem = _.find(e.data.HasRelatedWorkItems, function (item) { return item.BaseId == baseId; });\n\n                    (type == \"slideout\") ? vm.view.affectedItemController.showTCCInfo(dataItem) : vm.view.affectedItemController.showMoreInfo(dataItem);\n                },\n                onContextmenuActivate: function (e) {\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    vm.view.affectedItemController.isConfigItemWindowsComputer(baseId);\n                    vm.view.affectedItemController.isConfigItemUser(baseId);\n\n                    var managementTitle = localization.UserManagement;\n                    if (vm.view.affectedItemController.isWindowsComputer) {\n                        managementTitle = localization.ComputerManagement;\n                    }\n\n                    var menuItems = [{\n                        text: managementTitle,\n                        imageUrl: \"/Content/Images/Icons/Other/control-center-launcher.png\",\n                        imageAttr: {\n                            height: '16px',\n                            width: '16px'\n                        },\n                        attr: {\n                            custom: 'slideout' //custom attribute holds the link type\n                        }\n                    },\n                     {\n                         text: \"<i class='fa fa-info-circle cursor-pointer'></i>\" + localization.AdditionalDetails,\n                         encoded: false,\n                         attr: {\n                             custom: 'info' //custom attribute holds the link type\n                         }\n                     }];\n\n                    var contextmenu = $(\"#tccmenu\").data(\"kendoContextMenu\");\n                    contextmenu.setOptions({\n                        dataSource: menuItems\n                    });\n                }\n\n            });\n\n            var grid = vm.view.affectedItemController;\n\n            grid.dataSource.originalFilter = grid.dataSource.filter;\n\n            // Replace the original filter function.\n            grid.dataSource.filter = function () {\n\n                // Call the original filter function.\n                var result = grid.dataSource.originalFilter.apply(this, arguments);\n\n                // If a column is about to be filtered, then raise a new \"filtering\" event.\n                if (arguments.length > 0) {\n                    this.trigger(\"filterApplied\", arguments);\n                }\n\n                return result;\n            }\n\n            grid.dataSource.bind(\"filterApplied\", function () {\n\n                $.each($(cur_table).find(\"th a.k-header-column-menu i\"), function () {\n                    $(this).remove();\n                });\n\n                if (grid.dataSource.filter()) {\n\n                    var filters = grid.dataSource.filter().filters || [];\n                    var dsFilters = [];\n                    for (var i in filters) {\n                        if (filters[i].filters) {\n                            var innerFilters = filters[i].filters;\n                            for (var x in innerFilters) {\n                                dsFilters.push(innerFilters[x]);\n                            }\n                        } else {\n                            dsFilters.push(filters[i]);\n                        }\n                    }\n\n                    dsFilters = _.uniq(dsFilters, function (el) { return el.field; });\n\n                    for (var i in dsFilters) {\n                        $(cur_table).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\n                    }\n\n                }\n            });\n\n            var templateFrag = built(properties);\n            view = new kendo.View(templateFrag, { wrap: true, model: vm.view.affectedtemController });\n            callback(templateFrag);\n            \n            if (vm.view.affectedItemController.isUserCIVisible) {\n                vm.RequestedWorkItem.bind(\"change\", function (e) {\n                    vm.view.affectedItemController.userConfigItemDataSource.read();\n                });\n            }\n\n            //more functions\n            var isDuplicate = function (idToAdd) {\n                var n = false;\n                $.each(boundArray, function (i, item) {\n                    if (item.BaseId == idToAdd) {\n                        n = true;\n                    }\n                });\n                return n;\n            }\n\n            var addAffectedItem = function (baseId) {\n                if (isDuplicate(baseId)) { return; }\n                $.getJSON('/ConfigItems/GetAffectedItem', { id: baseId }, function (json) {\n                    var item = {\n                        BaseId: baseId,\n                        DisplayName: json.DisplayName,\n                        Path: json.Path,\n                        AssetStatus: !_.isUndefined(json.AssetStatus) ? (json.AssetStatus != null) ? json.AssetStatus : \"\" : { Name: !_.isUndefined(json.AssetStatus) ? json.AssetStatus : \"\" },\n                        Status: !_.isUndefined(json.Status) ? (json.Status != null) ? json.Status : \"\" : { Name: !_.isUndefined(json.Status) ? json.Status : \"\" }\n                    };\n                    boundArray.push(item);\n                });\n            }\n        }\n    }\n\n    return definition;\n\n});\n","\ndefine('text!forms/predefined/relatedItems/view.html',[],function () { return '<div id=\"relatedItemTemplate\" data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">#: DisplayName #</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <p>#: (AssetStatus.Name!=null) ? AssetStatus.Name : \"\" #</p>\\r\\n                <p># if (AssetStatus.Name!=null && AssetStatus.Name!=\"\") { # &middot # } # </p>\\r\\n                <p>#: (Path!=null ) ? Path : \"\" # </p>\\r\\n                <p># if (Path!=null && Path!=\"\") { # &middot # } # </p>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <a class=\"k-delete-button\">#: localization.Remove #</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 relateditems-grid\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\"><%= localization.Configurationitem %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-bind=\"value: view.relatedItemController.selectedConfigItem, source: view.relatedItemController.configItemDataSource, events:{change:view.relatedItemController.onConfigItemChange }\"\\r\\n                               <% if ( Disabled ){ %> disabled <% } %>/>\\r\\n\\r\\n                        <span data-bind=\"events:{click: view.relatedItemController.searchConfigItem}\"\\r\\n                              data-cid=\"relatedItemsSearchIcon\"\\r\\n                          <% if ( Disabled ){ %> disabled class=\"search search-disabled\" <% } else{ %> class=\"search\" <% } %>\\r\\n                          >\\r\\n                        <i class=\"fa fa-search\"></i>\\r\\n                    </span>\\r\\n                        <button data-role=\"button\" class=\"search-button two-action-input-group__primary-action\"\\r\\n                                data-bind=\"events:{click: view.relatedItemController.addConfigItem}\"\\r\\n                                data-cid=\"relatedItemSearchAddBbtn\"\\r\\n                            <% if ( Disabled ){ %> disabled <% } %>\\r\\n                            >\\r\\n                        <%= localization.Add %>\\r\\n                    </button>\\r\\n                    </div>\\r\\n                 </div>\\r\\n            </div>\\r\\n            <div class=\"col-md-6\">\\r\\n                <div class=\"form-group affected-user-item-search\" data-bind=\"visible: view.relatedItemController.isUserCIVisible\">\\r\\n                    <label class=\"control-label\"><%= localization.AffectedUserItems %></label>\\r\\n                    <div class=\"two-action-input-group\">\\r\\n                        <input data-role=\"combobox\" class=\"search-combo\"\\r\\n                               data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-text-field=\"Text\"\\r\\n                               data-value-field=\"Value\"\\r\\n                               data-filter=\"contains\"\\r\\n                               data-auto-bind=\"false\"\\r\\n                               data-bind=\"value: view.relatedItemController.selectedUserConfigItem, source: view.relatedItemController.userConfigItemDataSource, events:{change:view.relatedItemController.onUserConfigItemChange }\"\\r\\n                               data-cid=\"affectedItemsUserItemBox\"\\r\\n                               <% if ( Disabled ){ %> disabled <% } %> />\\r\\n\\r\\n                        <button class=\"two-action-input-group__primary-action\"\\r\\n                                data-role=\"button\"\\r\\n                                data-bind=\"events:{click: view.relatedItemController.addUserConfigItem}\"\\r\\n                            <% if ( Disabled ){ %> disabled <% } %>\\r\\n                            >\\r\\n                        <%= localization.Add %>\\r\\n                    </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div data-role=\"grid\"\\r\\n             data-bind=\"visible: view.relatedItemController.isDesktopView, source: view.relatedItemController.dataSource, events:{dataBinding: view.relatedItemController.onDataBinding}\"\\r\\n             data-selectable=\"false\"\\r\\n             data-sortable=\"true\"\\r\\n             data-filterable=\"true\"\\r\\n             data-scrollable=\"false\"\\r\\n             data-column-menu=\"true\"\\r\\n             data-pageable=\"false\"\\r\\n             data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n             data-columns=\\'[\\r\\n                    { title: \"\", width: \"1%\", template: \"\\\\u003cdiv data-base-id=\\\\\"#=BaseId#\\\\\" class=\\\\\"ci-context-menu open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.relatedItemController.isSlideOut\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\\\\u003cdiv class=\\\\\"open-modal pull-right\\\\\" data-bind=\\\\\"visible: view.relatedItemController.isMoreInfo, events:{click:view.relatedItemController.showMoreInfo }\\\\\"\\\\u003e\\\\u003ci class=\\\\\"fa fa-info-circle\\\\\"/\\\\u003e\\\\u003c/i\\\\u003e\\\\u003c/div\\\\u003e\"},\\r\\n                    { field: \"DisplayName\", title: localization.DisplayName, width: \"50%\"},\\r\\n                    { field: \"BaseId\", title: localization.BaseId, width: \"25%\", hidden: true },\\r\\n                    { field: \"Path\", title: localization.Path, width: \"25%\" },\\r\\n                    { field: \"AssetStatus.Name\", title: localization.Status, width: \"25%\" },\\r\\n                    { title: localization.Actions, width: \"15%\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove, className:\"custom__grid-remove\" }] }\\r\\n                ]\\'>\\r\\n        </div>\\r\\n        <div data-bind=\"visible: view.relatedItemController.isMobileView\">\\r\\n            <div data-bind=\"mobileGrid: RelatesToConfigItem\" data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\"></div>\\r\\n        </div>\\r\\n        <!--context menu for info icon-->\\r\\n        <ul id=\"tccmenu-related-ci\" data-role=\"contextmenu\" \\r\\n            data-filter=\".ci-context-menu\"\\r\\n            data-show-on=\"click\"\\r\\n            data-bind=\"events:{select:view.relatedItemController.onContextmenuSelect, activate:view.relatedItemController.onContextmenuActivate}\">\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\nrelatedItems\n**/\n\ndefine('forms/predefined/relatedItems/controller',['require','text!forms/predefined/relatedItems/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\n    var tpl = require(\"text!forms/predefined/relatedItems/view.html\");\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\n\n    var definition = {\n        template: tpl,\n        build: function (vm, node, callback) {\n            var built = _.template(tpl);\n            var properties = {\n                Disabled: !_.isUndefined(node.disabled) ? node.disabled : false\n            };\n\n            $.extend(true, properties, node);\n\n            var view = new kendo.View();\n\n            var cur_table = false;\n\n            //use setters and getters if you want vm boundOdj to trigger change\n            if (_.isUndefined(vm.RelatesToConfigItem)) {\n                vm.set('RelatesToConfigItem', new kendo.data.ObservableArray([]));\n            }\n            var boundArray = vm.get('RelatesToConfigItem');\n\n            vm.view.relatedItemController = new kendo.observable({\n                addConfigItem: function (e) {\n                    if (!_.isUndefined(this.selectedConfigItemId)) {\n                        addAffectedItem(this.selectedConfigItemId);\n                    }\n                },\n                searchConfigItem: function() {\n                    var popupWindow = objectPickerPopup.getPopup(\"62F0BE9F-ECEA-E73C-F00D-3DD78A7422FC\", \"DisplayName,Path,Status\", null, null, true);\n                    popupWindow.setSaveCallback(function(object) {\n                        addAffectedItem(object.BaseId);\n                    });\n                    popupWindow.open();\n                },\n                selectedConfigItemId: \"\",\n                selectedConfigItem: \"\",\n                configItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: function (data) {\n                                var configItem = (data.filter.filters.length > 0) ? data.filter.filters[0].value : \"\";\n                                return \"/api/V3/Config/GetAffectedItemsList?itemFilter=\" + configItem;\n                            },\n                            dataType: \"json\"\n                        }\n                    }\n                }),\n                onConfigItemChange: function(e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedConfigItemId = dataItem.Id;\n                },\n                isUserCIVisible: !_.isUndefined(vm.RequestedWorkItem) ? true : false,\n                selectedUserConfigItemId: \"\",\n                selectedUserConfigItem: \"\",\n                addUserConfigItem: function(e) {\n                    if (!_.isUndefined(this.selectedUserConfigItemId)) {\n                        addAffectedItem(this.selectedUserConfigItemId);\n                    }\n                },\n                userConfigItemDataSource: new kendo.data.DataSource({\n                    serverFiltering: true,\n                    transport: {\n                        read: {\n                            url: \"/ConfigItems/GetAffectedUserConfigItemsList\",\n                            data: { affectedUserId: function() { return !_.isUndefined(vm.RequestedWorkItem) && !_.isNull(vm.RequestedWorkItem.BaseId) ? vm.RequestedWorkItem.BaseId : \"\" } },\n                            dataType: \"json\",\n                            type: \"GET\",\n                        }\n                    }\n                }),\n                onUserConfigItemChange: function(e) {\n                    var dataItem = e.sender.dataItem(e.sender.selectedIndex);\n                    if (!_.isUndefined(dataItem))\n                        this.selectedUserConfigItemId = dataItem.Id;\n                },\n                dataSource: new kendo.data.DataSource({\n                    schema: {\n                        data: \"Data\",\n                        total: \"Total\",\n                        errors: \"Errors\",\n                        model: {\n                            id: \"BaseId\",\n                        }\n                    },\n                    data: {\n                        Data: boundArray,\n                        Total: boundArray.length\n                    }\n                }),\n                showMoreInfo: function (e) {\n                    var detailsPopupEle = $(\"<div>\");\n                    detailsPopupEle.appendTo(\"body\");\n\n                    var detailsPopup = detailsPopupEle.kendoCiresonWindow({\n                        title: \"\",\n                        width: 550,\n                        height: 500,\n                        actions: [\"Close\"]\n                    }).data(\"kendoWindow\");\n\n                    var baseId = null;\n                    var displayName = \"\";\n                    if (e.data == null && e.BaseId != null) {\n                        baseId = e.BaseId;\n                        displayName = e.DisplayName;\n                    } else {\n                        baseId = e.data.BaseId;\n                        displayName = e.data.DisplayName;\n                    }\n\n                    detailsPopup.refresh({\n                        url: \"/Search/ObjectViewer\",\n                        data: { id: baseId }\n                    });\n                    detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\n                    detailsPopup.title(displayName).center().open();\n                },\n                onDataBinding: function (e) {\n                    cur_table = e.sender.table;\n                    _.each(boundArray, function(item) {\n                        item.AssetStatus = !_.isUndefined(item.AssetStatus) ? item.AssetStatus : { Id: null, Name: null };\n                        item.Status = !_.isUndefined(item.Status) ? item.Status : { Id: null, Name: null };\n                    });\n                },\n                isDesktopView: !app.isMobileDevice(),\n                isMobileView: app.isMobileDevice(),\n                isEnabled: !properties.Disabled,\n                isWindowsComputer: false,\n                isConfigItemWindowsComputer: function (id) {\n                    $.ajax({\r\n                        type: \"GET\",\n                        async: false,\n                        url: \"/ConfigItems/IsComputer\",\n                        data: { objectId: id },\n                        success: function (result) {\r\n                            vm.view.relatedItemController.isWindowsComputer = (result.toLowerCase() === \"true\");\r\n                        }\r\n                    });\n                },\n                isUser: false,\n                isConfigItemUser: function (id) {\n                    /*\n\t\t\t\t\t$.ajax({\r\n                        type: \"GET\",\n                        async: false,\n                        url: \"/ConfigItems/IsUser\",\n                        data: { objectId: id },\n                        success: function (result) {\r\n                            vm.view.relatedItemController.isUser = (result.toLowerCase() === \"true\");\r\n                        }\r\n                    });\n\t\t\t\t\t*/\n\t\t\t\t\t/*\n\t\t\t\t\t$.ajax({\n                        type: \"GET\",\n                        async: false,\n                        url: \"/api/v3/Dashboard/GetDashboardDataById/\",\n                        data: {\n\t\t\t\t\t\t\tqueryId: '7b608bb5-4db0-b770-9e63-27cfb647b157',\n\t\t\t\t\t\t\tuserObjectId: id\n\t\t\t\t\t\t},\n                        success: function (result) {\n                            vm.view.relatedItemController.isUser = (result[0].isUser.toLowerCase() === \"true\");\n                        }\n                    });\n\t\t\t\t\t*/\n\t\t\t\t\t$.ajax({\n                        type: \"GET\",\n                        async: false,\n                        url: \"/Search/GetObjectProperties/\",\n                        data: {\n\t\t\t\t\t\t\tid: id\n\t\t\t\t\t\t},\n                        success: function (result) {\n                            vm.view.relatedItemController.isUser = (result.IsUser === true);\n                        }\n                    });\n                },\n                isMoreInfo: function (viewModel) {\n                    var bSlideOut = vm.view.relatedItemController.isSlideOut(viewModel);\n                    return !bSlideOut;\n                },\n                isSlideOut: function (viewModel) {\n                    /*\n\t\t\t\t\tvm.view.relatedItemController.isConfigItemWindowsComputer(viewModel.BaseId);\n                    vm.view.relatedItemController.isConfigItemUser(viewModel.BaseId);\n                    \n                    var bIsWindowsComputer = vm.view.relatedItemController.isWindowsComputer;\n                    var bIsUser = vm.view.relatedItemController.isUser;\n\t\t\t\t\t*/\n\t\t\t\t\tvm.view.relatedItemController.isConfigItemUser(viewModel.BaseId);\n\t\t\t\t\tvar bIsUser = vm.view.relatedItemController.isUser;\n\t\t\t\t\t\n\t\t\t\t\tvm.view.relatedItemController.isWindowsComputer = false;\n\t\t\t\t\tvar bIsWindowsComputer = false;\n\t\t\t\t\t\n\t\t\t\t\tif (bIsUser !== true) {\n\t\t\t\t\t\tvm.view.relatedItemController.isConfigItemWindowsComputer(viewModel.BaseId);\n\t\t\t\t\t\tbIsWindowsComputer = vm.view.relatedItemController.isWindowsComputer;\n\t\t\t\t\t}\n\n                    var hasControlCenterURL = !_.isNull(session.consoleSetting.TrueControlCenterURL) && (session.consoleSetting.TrueControlCenterURL != \"\");\n                    \n                    return ((bIsWindowsComputer || bIsUser) && hasControlCenterURL) ? true : false;\n                },\n                showTCCInfo: function (dataItem) {\n                    var src = session.consoleSetting.TrueControlCenterURL;\n                    var bIsWindowsComputer = vm.view.relatedItemController.isWindowsComputer;\n                    var bIsUser = vm.view.relatedItemController.isUser;\n                    var tooltip = localization.ComputerManagement;\n\n                    if (bIsWindowsComputer) {\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"computer\");\n                    } else if (bIsUser) {\n                        src = app.slideOutNav.getTCCSourceURL(dataItem, \"user\");\n                        tooltip = localization.UserManagement;\n                    }\n\n                    var options = {\r\n                        url: src,\r\n                        tooltip: tooltip\r\n                    }\n                    app.slideOutNav.show(options);\n                },\n                onContextmenuSelect: function (e) {\n                    var type = e.item.attributes[\"custom\"].value;\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    var dataItem =_.find(e.data.RelatesToConfigItem, function (item) { return item.BaseId==baseId; });\n                   \n                    (type == \"slideout\") ? vm.view.relatedItemController.showTCCInfo(dataItem) : vm.view.relatedItemController.showMoreInfo(dataItem);\n                },\n                onContextmenuActivate: function (e) {\n                    var baseId = e.target.attributes[\"data-base-id\"].value;\n                    vm.view.relatedItemController.isConfigItemWindowsComputer(baseId);\n                    vm.view.relatedItemController.isConfigItemUser(baseId);\n                    \n                    var managementTitle = localization.UserManagement;\n                    if (vm.view.relatedItemController.isWindowsComputer) {\n                        managementTitle = localization.ComputerManagement;\n                    }\n\n                    var menuItems = [{\n                        text: managementTitle,\n                        imageUrl: \"/Content/Images/Icons/Other/control-center-launcher.png\",\n                        imageAttr: {\n                            height: '16px',\n                            width: '16px'\n                        },\n                        attr: {\n                            custom: 'slideout' //custom attribute holds the link type\n                        }\n                     },\n                     {\n                         text: \"<i class='fa fa-info-circle cursor-pointer'></i>\" + localization.AdditionalDetails,\n                        encoded: false,\n                        attr: {\n                            custom: 'info' //custom attribute holds the link type\n                        }\n                     }];\n\n                    var contextmenu = $(\"#tccmenu-related-ci\").data(\"kendoContextMenu\");\n                    contextmenu.setOptions({\n                        dataSource: menuItems\n                    });\n                }\n            });\n\n            var grid = vm.view.relatedItemController;\n\n            grid.dataSource.originalFilter = grid.dataSource.filter;\n\n            // Replace the original filter function.\n            grid.dataSource.filter = function () {\n                    \n                // Call the original filter function.\n                var result = grid.dataSource.originalFilter.apply(this, arguments);\n\n                // If a column is about to be filtered, then raise a new \"filtering\" event.\n                if (arguments.length > 0) {\n                    this.trigger(\"filterApplied\", arguments);\n                }\n\n                return result;\n            }\n\n            grid.dataSource.bind(\"filterApplied\", function (e) {\n\n                $.each($(cur_table).find(\"th a.k-header-column-menu i\"), function () {\n                    $(this).remove();\n                });\n\n                if (grid.dataSource.filter()) {\n\n                    var filters = grid.dataSource.filter().filters || [];\n                    var dsFilters = [];\n                    for (var i in filters) {\n                        if (filters[i].filters) {\n                            var innerFilters = filters[i].filters;\n                            for (var x in innerFilters) {\n                                dsFilters.push(innerFilters[x]);\n                            }\n                        } else {\n                            dsFilters.push(filters[i]);\n                        }\n                    }\n\n                    dsFilters = _.uniq(dsFilters, function(el) { return el.field; });\n\n                    for (var i in dsFilters) {\n                        $(cur_table).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\n                    }\n\n                }\n            });\n            \n            var templateFrag = built(properties);\n            view = new kendo.View(templateFrag, { wrap: true, model: vm.view.relatedItemController });\n            callback(templateFrag);\n\n\n            if (properties.Disabled) {\n                var searchButton = $(view.content).find(\".search\");\n                searchButton.addClass(\"search-disabled\");\n            }\n\n            if (vm.view.relatedItemController.isUserCIVisible) {\n                vm.RequestedWorkItem.bind(\"change\", function (e) {\n                    vm.view.relatedItemController.userConfigItemDataSource.read();\n                });\n            }\n\n            //more functions\n            var isDuplicate = function (idToAdd) {\n                var n = false;\n                $.each(boundArray, function (i, item) {\n                    if (item.BaseId == idToAdd) {\n                        n = true;\n                    }\n                });\n                return n;\n            }\n\n            var addAffectedItem = function (baseId) {\n                if (isDuplicate(baseId)) { return; }\n                $.getJSON('/ConfigItems/GetAffectedItem', { id: baseId }, function (json) {\n                    var item = {\n                        BaseId: baseId,\n                        DisplayName: json.DisplayName,\n                        Path: json.Path,\n                        AssetStatus: !_.isUndefined(json.AssetStatus) ? (json.AssetStatus != null) ? json.AssetStatus : \"\" : { Name: !_.isUndefined(json.AssetStatus) ? json.AssetStatus : \"\" },\n                        Status: !_.isUndefined(json.Status) ? (json.Status != null) ? json.Status : \"\" : { Name: !_.isUndefined(json.Status) ? json.Status : \"\" }\n                    };\n                    boundArray.push(item);\n                });\n            }\n        }\n    }\n\n    return definition;\n\n});\n","\ndefine('text!forms/predefined/childWorkItems/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">${Id}: ${Title}</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <p>#: localizationHelper.localize(\"Status\") #: #: Status # </p>\\r\\n                <p>#: localizationHelper.localize(\"LastModified\") #: #: kendo.toString(kendo.parseDate(LastModified), \"g\") # </p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 file-attachments\"\\r\\n         data-control=\"childWorkItems\"\\r\\n         data-control-bind=\"ChildWorkItem\"\\r\\n         data-control-show=\"IsParent\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>>\\r\\n\\r\\n    <div >\\r\\n        <button class=\"btn btn-primary\" data-role=\"button\" data-click=\"addClick\"><%= localization.Add %> </button>\\r\\n    </div>\\r\\n    \\r\\n    <% if ( IsMobileView == false ){ %>\\r\\n        <div data-control-grid=\"objectGrid\" class=\"inline-spacing\"></div>\\r\\n    <% } %>\\r\\n    \\r\\n    <% if ( IsMobileView ){ %>\\r\\n        <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\" data-bind=\"mobileGrid: ChildWorkItem\"></div>\\r\\n    <% } %>\\r\\n    \\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchildWorkItem\r\n**/\r\n\r\ndefine('forms/predefined/childWorkItems/controller',['require','text!forms/predefined/childWorkItems/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/childWorkItems/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            boundObj = vm;\r\n            \r\n            var properties = {\r\n                Disabled: false,\r\n                PropertyName: \"ChildWorkItem\",\r\n                ClassId: (vm.ClassName === \"System.WorkItem.ReleaseRecord\") ? \"d02dc3b6-d709-46f8-cb72-452fa5e082b8\" : \"a604b942-4c7b-2fb2-28dc-61dc6f465c68\",\r\n                PropertyToDisplay: \"Id,Title,Status,LastModified\",\r\n                ControllerUrl: \"/Search/GetChildWorkItems\",\r\n                IsMobileView: app.isMobileDevice()\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(properties));\r\n            var popupWindow = objectPickerPopup.getPopup(properties.ClassId, properties.PropertyToDisplay, properties.ControllerUrl);\r\n            var objectPicker = new Control(templateFrag.find(\"[data-control='childWorkItems']\"), boundObj, properties.PropertyName, properties, popupWindow);\r\n            var showProp = templateFrag.find(\"[data-control='childWorkItems']\").attr(\"data-control-show\");\r\n            templateFrag.find(\"[data-control='childWorkItems']\").attr(\"data-control\", \"childWorkItemsBound\");\r\n            callback(templateFrag);\r\n\r\n            // Determine if group should be visible (IsParent)\r\n            if (boundObj[showProp] === false || _.isNull(boundObj[showProp])) {\r\n                templateFrag.parents(\".row\").hide();\r\n            }\r\n           \r\n        }\r\n    }\r\n\r\n    var Control = function (targetEle, boundObj, name, properties, popupWindow) {\r\n\r\n        //use setters and getters if you want vm boundOdj to trigger change\r\n        if (_.isUndefined(boundObj[name])) {\r\n            boundObj.set(name, new kendo.data.ObservableArray([]));\r\n        }\r\n        var boundArray = boundObj.get(name);\r\n\r\n        var __construct = function () {\r\n            bindButtonEvents();\r\n            bindEvents();\r\n            createGrid();\r\n        }\r\n\r\n        var bindEvents = function () {\r\n            \r\n        }\r\n\r\n        var bindButtonEvents = function () {\r\n            var actions = {\r\n                addClick: function () {\r\n                    popupWindow.setSaveCallback(function (object) {\r\n                        if (isDuplicate(object.BaseId)) { return; }\r\n                        boundArray.push(object);\r\n                    });\r\n                    popupWindow.open();\r\n                }\r\n            };\r\n\r\n            //bind add click event\r\n            targetEle.find('[data-click]').each(function () {\r\n                if (actions[$(this).attr('data-click')]) {\r\n                    $(this).click(actions[$(this).attr('data-click')]);\r\n                }\r\n            });\r\n        }\r\n\r\n       \r\n        var createGrid = function () {\r\n            var gridEle = targetEle.find(\"[data-control-grid]\");\r\n            \r\n            var grid = gridEle.kendoGrid({\r\n                columns:\r\n                 [\r\n                  { field: \"Id\", title: localization.Id, attributes: { \"class\": \"grid-highlight-column\" } },\r\n                  { field: \"Title\", title: localization.Title },\r\n                  { field: \"Status\", title: localization.Status, template: \"#= (Status.Name)?Status.Name:Status #\", },\r\n                  {\r\n                      field: \"LastModified\",\r\n                      title: localization.LastModified,\r\n                      type: \"date\",\r\n                      template: \"#= (LastModified) ? kendo.toString(new Date(LastModified), 'g'):'' #\"\r\n                  },\r\n                  { field: \"BaseId\", title: \"BaseId\", hidden: \"true\" },\r\n                  { width: \"105px\", command: [{ name: \"destroy\", text: localization.Remove }]}\r\n                 ],\r\n                scrollable: false,\r\n                filterable: {\r\n                    extra: false,\r\n                    messages: {\r\n                        info: localization.Showitemswithvaluethat,\r\n                        and: localization.And,\r\n                        or: localization.Or,\r\n                        filter: localization.Filter,\r\n                        clear: localization.Clear\r\n                    },\r\n                    operators: {\r\n                        string: {\r\n                            startswith: localization.Startswith,\r\n                            contains: localization.Contains,\r\n                            eq: localization.Isequalto,\r\n                            neq: localization.Isnotequalto\r\n                        }\r\n                    }\r\n                },\r\n                reorderable: true,\r\n                sortable: true,\r\n                columnMenu: {\r\n                    messages: {\r\n                        columns: localization.ChooseColumns,\r\n                        filter: localization.Filter,\r\n                        sortAscending: localization.SortAscending,\r\n                        sortDescending: localization.SortDescending\r\n                    }\r\n                },\r\n                editable: {\r\n                    confirmDelete: \"Delete\",\r\n                    cancelDelete: \"Cancel\",\r\n                    mode: \"incell\",\r\n                    template: null,\r\n                    create: true,\r\n                    update: false,\r\n                    destroy: true\r\n                },\r\n                toolbar: {},\r\n                dataSource: {\r\n                    transport: {\r\n                        prefix: \"\",\r\n                        read: {\r\n                            url: \"\"\r\n                        }\r\n                    },\r\n                    type: \"aspnetmvc-ajax\",\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\",\r\n                        model: {\r\n                            id: \"BaseId\",\r\n                        }\r\n                    },\r\n                    data: {\r\n                        Data: boundArray,\r\n                        Total: boundArray.length\r\n                    }\r\n                },\r\n                selectable: true\r\n            });\r\n\r\n            gridEle.on(\"click\", \"td\", function (e) {\r\n                var highlightedColumn = $(e.currentTarget).hasClass(\"grid-highlight-column\");\r\n                if (!highlightedColumn) { return }\r\n\r\n                var kendoGrid = grid.data(\"kendoGrid\");\r\n                var selectedItem = kendoGrid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n                var strClass = selectedItem.ClassName.split(/[\\s.]+/);\r\n                var className = strClass[strClass.length - 1];\r\n                window.open(\"/\" + className + \"/Edit/\" + selectedItem.Id + \"/\", '_blank');\r\n            });\r\n        }\r\n\r\n        var isDuplicate = function (idToAdd) {\r\n            var n = false;\r\n            $.each(boundArray, function (i, item) {\r\n                if (item.BaseId == idToAdd) {\r\n                    n = true;\r\n                }\r\n            });\r\n            return n;\r\n        }\r\n\r\n        __construct();\r\n    }\r\n    return definition;\r\n});\n","\ndefine('text!forms/predefined/userInput/view.html',[],function () { return '<div>\\r\\n    <div class=\"editor-label\">\\r\\n        <label><%= localization.UserInputs %></label>\\r\\n    </div>\\r\\n    <div class=\"editor-field\">\\r\\n        <div data-control=\"userInputs\" data-control-bind=\"UserInput\">\\r\\n            <div data-control-grid=\"userInputsGrid\" class=\"inline-spacing\"></div>\\r\\n        </div>    \\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nuserInput\r\n**/\r\n\r\ndefine('forms/predefined/userInput/controller',['require','text!forms/predefined/userInput/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/userInput/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/activities/view.html',[],function () { return '<div data-control=\"activityDisplay\" data-control-bind=\"Activity\" class=\"activity-list-container\"\\r\\n\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    >\\r\\n</div>\\r\\n';});\n\n","/**\r\nactivities\r\n**/\r\n\r\ndefine('forms/predefined/activities/controller',['require','text!forms/predefined/activities/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/activities/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/multipleObjectPicker/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">${title}</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                # $.each(details, function (index, item) {\\r\\n                # <p>${item}</p>  #\\r\\n                });\\r\\n                #\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12\">\\r\\n    <div data-control=\"multipleObjectPicker\"\\r\\n         data-control-bind=\"HasRelatedWorkItems\"\\r\\n         id=\"<%= PropertyName %>\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n    <% } %>\\r\\n    >\\r\\n\\r\\n        <button data-role=\"button\" class=\"btn btn-primary\" data-click=\"addClick\"><%= localization.Add %> </button>\\r\\n        <div class=\"grid-container\">\\r\\n            <% if ( IsMobileView == false ){ %>\\r\\n            <div data-control-grid=\"objectGrid\" class=\"inline-spacing\"></div>\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( IsMobileView ){ %>\\r\\n            <div data-template-name=\"mobileGridTemplate\" class=\"mobile-grid-parent\" data-bind=\"mobileGrid: <%= PropertyName %>\" multiple-picker data-columns=\"<%= ClassProperties %>\"></div>\\r\\n            <% } %>\\r\\n        </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nmultipleObjectPicker\r\n**/\r\n\r\ndefine('forms/predefined/multipleObjectPicker/controller',['require','text!forms/predefined/multipleObjectPicker/view.html','forms/popups/multipleObjectPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/multipleObjectPicker/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/multipleObjectPickerPopup/controller\");\r\n\r\n    var projectionSearchUrl = \"/Search/GetObjectProjectionByCriteria\";\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            boundObj = node.vm;\r\n            name = node.PropertyName;\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            var properties = {\r\n                Disabled: false,\r\n                ClassId: \"\",\r\n                PropertyToDisplay: [],\r\n                PropertyName: \"\",\r\n                ShowAddButton: true,\r\n                ShowRemoveButton: true,\r\n                Scoped: false,\r\n                ClassProperties: \"\",\r\n                SelectableRow: false,\r\n                SelectProperty: \"Id\",\r\n                ProjectionId: \"\",\r\n                HiddenProperty: null,//separated by comma only\r\n                IsMobileView: app.isMobileDevice()\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            if (properties.PropertyToDisplay.length <= 0) { properties.PropertyToDisplay = { DisplayName: \"DisplayName\", Path: \"Path\", Status: \"Status\" }; }\r\n            for (var prop in properties.PropertyToDisplay) {\r\n                properties.ClassProperties = properties.ClassProperties.concat(prop).concat(\",\");\r\n            }\r\n\r\n            if ((properties.PropertyName === \"HasRelatedWorkItems\") && (properties.ClassProperties.indexOf(\"AssetStatus\") < 0)) {\r\n                properties.ClassProperties = properties.ClassProperties.concat(\"AssetStatus\");\r\n            }\r\n\r\n            if (!_.isNull(properties.HiddenProperty)) { //This will be use to load properties that is not need to display\r\n                properties.ClassProperties += properties.HiddenProperty.concat(\",\");\r\n            }\r\n\r\n            //set properties for watchlist\r\n            if ((properties.PropertyName === \"WatchList\")) {\r\n                if (!session.consoleSetting.DashboardsLicense.IsValid || !session.enableWatchlist) {\r\n                    properties.Visible = false;\r\n                }\r\n                //hide add/remove option when current user is and enduser and he or she is not the affected user\r\n                if ((!session.user.Analyst) && (typeof boundObj.RequestedWorkItem != 'undefined') && (session.user.Id != boundObj.RequestedWorkItem.BaseId)) {\r\n                    properties.ShowAddButton = false;\r\n                    properties.ShowRemoveButton = false;\r\n                }\r\n            }\r\n\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(properties));\r\n\r\n            //used on RelatesToWorkItem relatinship, exclude current workitem from list\r\n            var filter = { field: \"BaseId\", operator: \"neq\", value: boundObj.BaseId };\r\n\r\n            var popupWindow = (properties.PropertyName === \"RelatesToWorkItem\") ?\r\n                objectPickerPopup.getPopup(properties.ClassId, properties.ClassProperties, null, filter) :\r\n                objectPickerPopup.getPopup(properties.ClassId, properties.ClassProperties);\r\n\r\n            var objectPicker = new Control(templateFrag.find(\"[data-control='multipleObjectPicker']\"), boundObj, name, properties, popupWindow);\r\n            templateFrag.find(\"[data-control='multipleObjectPicker']\").attr(\"data-control\", \"multipleObjectPickerBound\");\r\n\r\n            callback(templateFrag);\r\n        },\r\n        openObject: function (selectedItem) {\r\n            var strClass = selectedItem.ClassName.split(/[\\s.]+/);\r\n            var className = strClass[strClass.length - 1];\r\n            switch (className) {\r\n                case \"HardwareAsset\":\r\n                case \"SoftwareAsset\":\r\n                    window.open(\"/AssetManagement/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Lease\":\r\n                case \"Warranty\":\r\n                    window.open(\"/AssetManagement/Contract/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"SupportContract\":\r\n                    window.open(\"/AssetManagement/Contract/SupportandMaintenance/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Location\":\r\n                case \"NoticeEvent\":\r\n                case \"Organization\":\r\n                case \"Standard\":\r\n                case \"Subnet\":\r\n                case \"Vendor\":\r\n                case \"CatalogItem\":\r\n                case \"CostCenter\":\r\n                case \"Invoice\":\r\n                case \"PurchaseOrder\":\r\n                case \"Purchase\":\r\n                    window.open(\"/AssetManagement/Administration/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Licence\":\r\n                    window.open(\"/AssetManagement/Administration/License/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Consumable\":\r\n                    window.open(\"/AssetManagement/Administration/Consumables/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"ManualActivity\":\r\n                case \"ReviewActivity\":\r\n                case \"SequentialActivity\":\r\n                case \"ParallelActivity\":\r\n                case \"DependentActivity\":\r\n                    window.open(\"/Activity/Edit/\" + selectedItem.Id, '_blank');\r\n                    break;\r\n                case \"Incident\":\r\n                case \"ServiceRequest\":\r\n                case \"ChangeRequest\":\r\n                case \"Problem\":\r\n                case \"ReleaseRecord\":\r\n                    window.open(\"/\" + className + \"/Edit/\" + selectedItem.Id + \"/\", '_blank');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    var Control = function (targetEle, boundObj, name, properties, popupWindow) {\r\n\r\n        //use setters and getters if you want vm boundOdj to trigger change\r\n        if (_.isUndefined(boundObj[name])) {\r\n            boundObj.set(name, new kendo.data.ObservableArray([]));\r\n        }\r\n\r\n        //if related object is of single cardinality, create a new array and add the related object \r\n        var boundArray = !_.isUndefined(boundObj[name].length) ? boundObj.get(name) : new kendo.data.ObservableArray([boundObj.get(name)]);\r\n        boundArray.properties = properties;\r\n\r\n        var self = this;\r\n\r\n        var __construct = function () {\r\n            buildSubProperties();\r\n            bindButtonEvents();\r\n            createGrid();\r\n        }\r\n\r\n        var buildSubProperties = function () {\r\n            var propToFill = [];\r\n            //This will going to build array of display properties that has sub properties. Ex:Target_PurchaseHasPurchaseOrder.DisplayName\r\n            for (var prop in properties.PropertyToDisplay) {\r\n                var propSplit = prop.split(\".\");\r\n                if (propSplit.length > 1) {\r\n                    propToFill.push(propSplit);\r\n                }\r\n            }\r\n\r\n            //This will going to check all properties. If property is not existing, this will going to create a dummy property so that kendo will render the grid.\r\n            _.each(boundArray, function (data) {\r\n                _.each(propToFill, function (prop) {\r\n                    var mainProp = prop[0];\r\n                    var subProp = prop[1];\r\n                    if (_.isUndefined(data[mainProp])) {\r\n                        data[mainProp] = {};\r\n                        data[mainProp][subProp] = \"\";\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        //Make this global so that this can be used when inserting data outside multiple object picker.\r\n        //This is the solution for now since kendo grid doesn't have preDataBinding which I need to manipulate data before binding\r\n        //This function is called also from software asset \"copy license assignment\" task\r\n        boundArray.addItem = function (object) {\r\n            var isItemExist = false;\r\n            if (isDuplicate(object.BaseId)) {\r\n                return;\r\n            }\r\n            _boundArray = this;\r\n            //This will going to get object related items\r\n            if (!_.isUndefined(_boundArray.properties.ProjectionId) && !_.isNull(_boundArray.properties.ProjectionId) && _boundArray.properties.ProjectionId != \"\") {\r\n\r\n                var colNames = \"\";\r\n                var splitedProp = [];\r\n                //This will going to get thos property whos have sub child on it.\r\n                //Ex. PropertyToDisplay: { DisplayName: \"DisplayName\", \"Currency.Name\": \"Currency\", Cost: \"Cost\",\"Target_PurchaseHasPurchaseOrder.DisplayName\":\"Purchase Order\" }\r\n                // => Target_PurchaseHasPurchaseOrder.DisplayName and Currency.Name\r\n                for (var prop in _boundArray.properties.PropertyToDisplay) {\r\n                    var propperty = prop.split(\".\");\r\n                    if (propperty.length > 1) {\r\n                        splitedProp.push(propperty);\r\n                        colNames = colNames == \"\" ? prop : colNames + \",\" + prop;\r\n\r\n                    }\r\n                }\r\n\r\n                $.post(projectionSearchUrl, { baseId: object.BaseId, projectionId: _boundArray.properties.ProjectionId, columnNames: colNames }, function (result) {\r\n                    for (index in result.Data) {\r\n                        for (propIndex in splitedProp) {\r\n                            var value = result.Data[index][splitedProp[propIndex][0]];\r\n                            if (!_.isUndefined(value[splitedProp[propIndex][1]])) { //this will check if this property is undefined or not. This will going to avoid conflict with enums\r\n                                object[splitedProp[propIndex][0]] = value;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    _boundArray.push(object);\r\n                });\r\n            } else {\r\n                _boundArray.push(object);\r\n            }\r\n        }\r\n\r\n        var bindButtonEvents = function () {\r\n            var actions = {\r\n                addClick: function () {\r\n                    popupWindow.setSaveCallback(function (object) {\r\n                        boundArray.addItem(object);\r\n\r\n                        //if related object is of single cardinality, replace the value\r\n                        if (_.isUndefined(boundObj[name].length)) {\r\n                            boundArray.shift();\r\n                            boundObj.set(name, boundArray[0]);\r\n                        }\r\n                    });\r\n                    popupWindow.open();\r\n                }\r\n            };\r\n\r\n            //bind add click event\r\n            targetEle.find('[data-click]').each(function () {\r\n                if (actions[$(this).attr('data-click')]) {\r\n                    $(this).click(actions[$(this).attr('data-click')]);\r\n                }\r\n            });\r\n\r\n            //hide add button when ShowAddButton=false or if Disabled\r\n            if (!properties.ShowAddButton || properties.Disabled || properties.vm.isDisabled) {\r\n                targetEle.find('[data-click]').each(function () {\r\n                    $(this).hide();\r\n                });\r\n            }\r\n        }\r\n\r\n        var createGrid = function () {\r\n            var gridEle = targetEle.find(\"[data-control-grid]\");\r\n            //always unhide remove button for watchlist \r\n            var hideRemoveButton = (properties.PropertyName === \"WatchList\") ? false : (!properties.ShowRemoveButton || properties.Disabled || properties.vm.isDisabled);\r\n            //building grid columns\r\n            var columnFields = buildColumnFields(properties.PropertyToDisplay);\r\n            var columnToDisplay = buildGridColumns(columnFields, hideRemoveButton);\r\n\r\n            var grid = gridEle.kendoGrid({\r\n                columns: columnToDisplay,\r\n                scrollable: false,\r\n                filterable: {\r\n                    extra: false,\r\n                    messages: {\r\n                        info: localization.Showitemswithvaluethat,\r\n                        and: localization.And,\r\n                        or: localization.Or,\r\n                        filter: localization.Filter,\r\n                        clear: localization.Clear\r\n                    },\r\n                    operators: {\r\n                        string: {\r\n                            startswith: localization.Startswith,\r\n                            contains: localization.Contains,\r\n                            eq: localization.Isequalto,\r\n                            neq: localization.Isnotequalto\r\n                        }\r\n                    }\r\n                },\r\n                reorderable: true,\r\n                sortable: true,\r\n                columnMenu: {\r\n                    messages: {\r\n                        columns: localization.ChooseColumns,\r\n                        filter: localization.Filter,\r\n                        sortAscending: localization.SortAscending,\r\n                        sortDescending: localization.SortDescending\r\n                    }\r\n                },\r\n                editable: {\r\n                    confirmDelete: \"Delete\",\r\n                    cancelDelete: \"Cancel\",\r\n                    mode: \"incell\",\r\n                    template: null,\r\n                    create: true,\r\n                    update: false,\r\n                    destroy: true\r\n                },\r\n                toolbar: {},\r\n                dataSource: {\r\n                    transport: {\r\n                        prefix: \"\",\r\n                        read: {\r\n                            url: \"\"\r\n                        }\r\n                    },\r\n                    type: \"aspnetmvc-ajax\",\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\",\r\n                        model: {\r\n                            id: \"BaseId\",\r\n                            fields: columnFields\r\n                        }\r\n                    },\r\n                    data: {\r\n                        Data: boundArray,\r\n                        Total: boundArray.length\r\n                    }\r\n                },\r\n                dataBinding: function (e) {\r\n                    //Change to only pass specific item\r\n                    if (!_.isUndefined(e.items) && e.items.length > 0) {\r\n                        formatPropertyInBoundArray(e, properties.ClassProperties)\r\n                    }\r\n                },\r\n                dataBound: function (e) {\r\n                    if (properties.Scoped) {\r\n                        scopeBoundArray(this, properties.ClassId, properties.ClassProperties);\r\n                    }\r\n\r\n                },\r\n                selectable: properties.SelectableRow ? \"multiple row\" : false\r\n            });\r\n\r\n            gridEle.on(\"click\", \"td\", function (e) {\r\n                var highlightedColumn = $(e.currentTarget).hasClass(\"grid-highlight-column\");\r\n                if (!highlightedColumn) { return }\r\n\r\n                var kendoGrid = grid.data(\"kendoGrid\");\r\n                var selectedItem = kendoGrid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n                openObject(selectedItem);\r\n            });\r\n\r\n            if (!app.isMobile())\r\n            {\r\n                grid.data(\"kendoGrid\").dataSource.originalFilter = grid.data(\"kendoGrid\").dataSource.filter;\r\n\r\n                // Replace the original filter function.\r\n                grid.data(\"kendoGrid\").dataSource.filter = function () {\r\n\r\n                    // Call the original filter function.\r\n                    var result = grid.data(\"kendoGrid\").dataSource.originalFilter.apply(this, arguments);\r\n\r\n                    // If a column is about to be filtered, then raise a new \"filtering\" event.\r\n                    if (arguments.length > 0) {\r\n                        this.trigger(\"filterApplied\", arguments);\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n\r\n                grid.data(\"kendoGrid\").dataSource.bind(\"filterApplied\", function () {\r\n                    $.each($(grid).find(\"th a.k-header-column-menu i\"), function () {\r\n                        $(this).remove();\r\n                    });\r\n\r\n                    if (grid.data(\"kendoGrid\").dataSource.filter()) {\r\n\r\n                        var dsFilters = grid.data(\"kendoGrid\").dataSource.filter().filters || [];\r\n\r\n                        for (var i in dsFilters) {\r\n                            $(grid).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\r\n                        }\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n            \r\n\r\n        }\r\n\r\n        var isDuplicate = function (idToAdd) {\r\n            var n = false;\r\n            $.each(boundArray, function (i, item) {\r\n                if (item.BaseId == idToAdd) {\r\n                    n = true;\r\n                }\r\n            });\r\n            return n;\r\n        }\r\n\r\n        var buildGridColumns = function (columnFields, showRemovButton) {\r\n            var columns = [];\r\n\r\n            for (var prop in properties.PropertyToDisplay) {\r\n                var propertyKey = prop;\r\n                var localizationKey = properties.PropertyToDisplay[prop];\r\n                var localizedText = (!_.isUndefined(localization[localizationKey]) && [localizationKey].length > 0) ? localization[localizationKey] : localizationKey;\r\n                var columnClass = (properties.SelectableRow && propertyKey === properties.SelectProperty) ? \"grid-highlight-column\" : \"\";\r\n                var dateFormat = (columnFields[propertyKey].type == \"date\") ? \"{0:\" + kendo.culture().calendar.patterns.g + \"}\" : null;\r\n\r\n                columns.push({\r\n                    title: localizedText,\r\n                    width: \"210px\",\r\n                    field: propertyKey,\r\n                    filterable: {},\r\n                    encoded: true,\r\n                    attributes: {\r\n                        \"class\": columnClass\r\n                    },\r\n                    format: dateFormat\r\n                });\r\n            }\r\n            columns.push({ title: localization.BaseId, width: \"210px\", field: \"BaseId\", filterable: {}, encoded: true, hidden: true });\r\n            columns.push({ width: \"105px\", command: [{ name: \"destroy\", text: localization.Remove }], hidden: showRemovButton });\r\n\r\n            return columns;\r\n        }\r\n\r\n\r\n        //traverse and format date\r\n        var formatPropertyInBoundArray = function (currentItemEvent, columnString) {\r\n            var currentItem = currentItemEvent.items[0];\r\n            $.each(columnString.split(\",\"), function (i, column) {\r\n                $.each(boundArray, function (index, item) {\r\n                    //mutate poorly structured provided enum data \r\n                    if (column.indexOf('.') > 0) {\r\n                        var property = column.split('.')[0];\r\n                        if (_.isUndefined(item[property])) {\r\n                            boundArray[index][property] = { Id: \"\", Name: \"\" }\r\n                        }\r\n                    }\r\n                    if (currentItem.BaseId != item.BaseId && currentItemEvent.action == \"add\") return; //This will be only used when adding new items\r\n                    if (_.isUndefined(item[column]) || _.isNull(item[column])) { return; }\r\n                    if (_.isBoolean(item[column]) || _.isNumber(item[column])) { return; }\r\n                    if (!_.isUndefined(item[column].Name)) { boundArray[index][column] = item[column].Name; } //enums\r\n                });\r\n            });\r\n        }\r\n\r\n        var scopeBoundArray = function (grid, scopeClassId, PropertyToDisplay) {\r\n\r\n            if (scopeClassId === \"\") { return; }\r\n\r\n            $.ajax({\r\n                url: \"/Search/GetSearchObjectsByClassId\",\r\n                data: { searchFilter: \"\", classId: scopeClassId, columnNames: PropertyToDisplay },\r\n                async: false,\r\n                timeout: 3000,\r\n                success: function (data) {\r\n                    var objectIds = [];\r\n                    $.each(data.Data, function (ii, iitem) {\r\n                        objectIds.push(iitem[\"BaseId\"]);\r\n                    });\r\n\r\n                    $.each(grid._data, function (ii, iitem) {\r\n                        if (!_.contains(objectIds, this.BaseId)) {\r\n                            var row = grid.tbody.find(\"tr[data-uid='\" + this.uid + \"']\");\r\n                            row.hide();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        var openObject = function (selectedItem) {\r\n            var strClass = selectedItem.ClassName.split(/[\\s.]+/);\r\n            var className = strClass[strClass.length - 1];\r\n            switch (className) {\r\n                case \"HardwareAsset\":\r\n                case \"SoftwareAsset\":\r\n                    window.open(\"/AssetManagement/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Lease\":\r\n                case \"Warranty\":\r\n                    window.open(\"/AssetManagement/Contract/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"SupportContract\":\r\n                    window.open(\"/AssetManagement/Contract/SupportandMaintenance/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Location\":\r\n                case \"NoticeEvent\":\r\n                case \"Organization\":\r\n                case \"Standard\":\r\n                case \"Subnet\":\r\n                case \"Vendor\":\r\n                case \"CatalogItem\":\r\n                case \"CostCenter\":\r\n                case \"Invoice\":\r\n                case \"PurchaseOrder\":\r\n                case \"Purchase\":\r\n                    window.open(\"/AssetManagement/Administration/\" + className + \"/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Licence\":\r\n                    window.open(\"/AssetManagement/Administration/License/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"Consumable\":\r\n                    window.open(\"/AssetManagement/Administration/Consumables/Edit/\" + selectedItem.BaseId + \"/\", '_blank');\r\n                    break;\r\n                case \"ManualActivity\":\r\n                case \"ReviewActivity\":\r\n                case \"SequentialActivity\":\r\n                case \"ParallelActivity\":\r\n                case \"DependentActivity\":\r\n                    window.open(\"/Activity/Edit/\" + selectedItem.Id, '_blank');\r\n                    break;\r\n                case \"Incident\":\r\n                case \"ServiceRequest\":\r\n                case \"ChangeRequest\":\r\n                case \"Problem\":\r\n                case \"ReleaseRecord\":\r\n                    window.open(\"/\" + className + \"/Edit/\" + selectedItem.Id + \"/\", '_blank');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        var buildColumnFields = function (properties) {\r\n            var stringProp;\r\n\r\n            stringProp = '{';\r\n            for (var prop in properties) {\r\n                var type = (prop.indexOf(\"Date\") > -1 || prop == \"LastModified\") ? \"date\" : \"string\";\r\n                stringProp += '\"' + prop + '\":{\"type\":\"' + type + '\"},';\r\n            }\r\n            stringProp = stringProp.replace(/,([^,]*)$/, '$1');\r\n            stringProp += '}';\r\n\r\n            return JSON.parse(stringProp);\r\n        }\r\n        __construct();\r\n    }\r\n    return definition;\r\n\r\n});\n","\ndefine('text!CustomSpace/Scripts/forms/predefined/history/view.html',[],function () { return '<div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-12\">\\r\\n            <div class=\"form-group\">\\r\\n                <div class=\"input-group\">\\r\\n                    <div id=\"showHistoryDropDown\"\\r\\n                        data-role=\"dropdownlist\"\\r\\n                        data-text-field=\"text\"\\r\\n                        data-value-field=\"value\"\\r\\n                        data-template=\"dropDownHistoryTemplate\"\\r\\n                    ></div>\\r\\n                    <span class=\"input-group-btn\">\\r\\n                        <button data-role=\"button\" class=\"btn btn-primary k-button\" data-bind=\"events: {click: view.historyController.loadHistory}\">\\r\\n                            <span class=\"fa cursor-pointer\"></span><%= localization.ShowHistory %>\\r\\n                        </button>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"editor-label\">\\r\\n                <label id=\"showHistoryTitle\" data-bind=\"source: historyLabel\" data-template=\"labelHistoryTemplate\">PRE TEMPLATE</label>\\r\\n            </div>\\r\\n            <div id=\"historyView\" data-bind=\"visible: showHistory\"></div>  \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--kendo templates-->\\r\\n<script type=\"text/x-kendo-template\" id=\"labelHistoryTemplate\">\\r\\n    # if (type == \"loading\") { #\\r\\n        <span class=\\'k-icon k-loading\\'></span>\\r\\n    # } else if (type == \"error\") { #\\r\\n        <span class=\\'fa fa-warning\\'></span> Unable to load history. Please try again.\\r\\n    # } else if (type == \"info\") { #\\r\\n        #: text #\\r\\n    # } #\\r\\n</script>\\r\\n<script type=\"text/x-kendo-template\" id=\"dropDownHistoryTemplate\">\\r\\n    <span style=\\'white-space: pre;\\'>#= data.text #</span>\\r\\n</script>\\r\\n<script type=\"text/x-kendo-template\" id=\"viewHistoryTemplate\">\\r\\n    <ul class=\\'timeline\\' data-template=\\'propertyHistoryTemplate\\' data-bind=\\'source: nodes\\'></ul>\\r\\n</script>\\r\\n<script type=\"text/x-kendo-template\" id=\"propertyHistoryTemplate\">\\r\\n    # if ((!_.isUndefined(ClassHistory) && ClassHistory.length > 0) || RelationshipHistory.length > 0) { #\\r\\n    <li>\\r\\n\\r\\n        # if (RelationshipHistory.length > 0) { #\\r\\n        <div class=\"timeline-badge primary\">\\r\\n            <i class=\"fa fa-code-fork\"></i>\\r\\n        </div>\\r\\n        # } else{ #\\r\\n        <div class=\"timeline-badge\">\\r\\n            <i class=\"fa\"></i>\\r\\n        </div>\\r\\n        # } #\\r\\n        <div class=\"timeline-panel\">\\r\\n            <div class=\"timeline-heading\">\\r\\n                <a><h4 class=\"timeline-title\">#: UserName #</h4></a>\\r\\n                <p><small class=\"text-muted\"><i class=\"fa fa-clock-o\"></i>#: kendo.toString(new Date(DateOccurred),\\'g\\') #</small></p>\\r\\n            </div>\\r\\n            <div class=\"timeline-body\">\\r\\n                # if ((!_.isUndefined(ClassHistory) && ClassHistory.length > 0)) { #\\r\\n                <h5><%= localization.PropertyChanges %>:</h5>\\r\\n                <div class=\"table-responsive\">\\r\\n                    <table class=\"table\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th><%= localization.Property %></th>\\r\\n                                <th><%= localization.OldValue %></th>\\r\\n                                <th><%= localization.NewValue %></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            # for (var i = 0; i < ClassHistory.length; i++) { #\\r\\n                            <tr>\\r\\n                                <td>#: localizationHelper.localize(ClassHistory[i].Key.replace(/ /g,\"\"), ClassHistory[i].Key) #</td>\\r\\n                                <td>#: ClassHistory[i].BeforeValue && ClassHistory[i].IsDate ? kendo.toString(new Date(ClassHistory[i].BeforeValue),\\'g\\') : localizationHelper.localize(ClassHistory[i].BeforeValue.replace(/ /g,\"\"), ClassHistory[i].BeforeValue) #</td>\\r\\n                                <td>#: ClassHistory[i].AfterValue && ClassHistory[i].IsDate ? kendo.toString(new Date(ClassHistory[i].AfterValue),\\'g\\') : localizationHelper.localize(ClassHistory[i].AfterValue.replace(/ [0-9]/g,\"\"), ClassHistory[i].AfterValue) #</td>\\r\\n                            </tr>\\r\\n                            # } #\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                # } #\\r\\n                # if (RelationshipHistory.length > 0) { #\\r\\n                <h5><%= localization.RelationshipChanges %>:</h5>\\r\\n                <div class=\"table-responsive\">\\r\\n                    <table class=\"table\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th></th>\\r\\n                                <th><%= localization.RelationshipClass %></th>\\r\\n                                <th><%= localization.Item %></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            # for (var i = 0; i < RelationshipHistory.length; i++) { #\\r\\n                            <tr>\\r\\n                                # if (RelationshipHistory[i].ChangeType === \"Insert\") { #\\r\\n                                <td><i class=\"fa fa-plus text-success\"></i></td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \").replace(/ /g,\"\"), RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \")) #</td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].Item.replace(/ /g,\"\"), RelationshipHistory[i].Item) #</td>\\r\\n                                # } #\\r\\n\\r\\n                                # if (RelationshipHistory[i].ChangeType === \"Delete\") { #\\r\\n                                <td><i class=\"fa fa-minus text-danger\"></i></td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \").replace(/ /g,\"\"), RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \")) #</td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].Item.replace(/ /g,\"\"), RelationshipHistory[i].Item) #</td>\\r\\n                                # } #\\r\\n\\r\\n                                # if (RelationshipHistory[i].ChangeType === \"Update\") { #\\r\\n                                <td><i class=\"fa fa-exchange text-info\"></i></td>\\r\\n                                <td>#: localizationHelper.localize(RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \").replace(/ /g,\"\"), RelationshipHistory[i].RelationshipName.replace(/\\\\./g,\". \")) #</td>\\r\\n                                <td><strike class=\"text-danger\">#: localizationHelper.localize(RelationshipHistory[i].PreviousItem.replace(/ /g,\"\"), RelationshipHistory[i].PreviousItem) #</strike> <span class=\"text-success\">#: localizationHelper.localize(RelationshipHistory[i].Item.replace(/ /g,\"\"), RelationshipHistory[i].Item) #</span></td>\\r\\n                                # } #\\r\\n\\r\\n                            </tr>\\r\\n                            # } #\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                # } #\\r\\n            </div>\\r\\n        </div>\\r\\n    </li>\\r\\n    # } #\\r\\n    # for (var i = 0; i < ActionLogHistory.length; i++) { #\\r\\n    <li class=\"timeline-inverted\">\\r\\n        <div class=\"timeline-badge info\"><i class=\"fa fa-user\"></i></div>\\r\\n        <div class=\"timeline-panel\">\\r\\n            <div class=\"timeline-heading\">\\r\\n                <h4 class=\"timeline-title\">#: localizationHelper.localize(ActionLogHistory[i].EnteredBy.replace(/ /g,\"\"), ActionLogHistory[i].EnteredBy) #</h4>\\r\\n                <p><small class=\"text-muted\"><i class=\"fa fa-clock-o\"></i> #: kendo.toString(new Date(DateOccurred),\\'g\\') #</small></p>\\r\\n            </div>\\r\\n            <div class=\"timeline-body\">\\r\\n                <h5>#: localizationHelper.localize(ActionLogHistory[i].ActionType.replace(/ /g,\"\"), ActionLogHistory[i].ActionType) #</h5>\\r\\n                <blockquote>#: localizationHelper.localize(ActionLogHistory[i].Description.replace(/ /g,\"\"), ActionLogHistory[i].Description) #</blockquote>\\r\\n            </div>\\r\\n        </div>\\r\\n    </li>\\r\\n    # } #\\r\\n</script>\\r\\n';});\n\n","/*jslint nomen: true */\r\n/*global _, $, app, console, define, kendo */\r\n/*eslint no-console: [\"error\", { allow: [\"log\", \"warn\", \"error\"] }] */\r\n\r\n/**\r\nhistory\r\n**/\r\n\r\ndefine('CustomSpace/Scripts/forms/predefined/history/controller',[\r\n    \"text!CustomSpace/Scripts/forms/predefined/history/view.html\"\r\n], function (\r\n    historyTemplate\r\n) {\r\n    \"use strict\";\r\n    var definition = {\r\n        template: historyTemplate,\r\n        build: function (vm, node, callback) {\r\n            if (!_.isUndefined(app.storage.custom) && app.storage.custom.get(\"debug\")) {\r\n                console.log(\"historyController:build\", {\r\n                    \"vm\": vm,\r\n                    \"node\": node,\r\n                    \"callback\": callback\r\n                });\r\n            }\r\n\r\n            vm.setWithNoDirty = function (variable, value) {\r\n                var isDirtyState = vm.get(\"isDirty\");\r\n                vm.set(variable, value);\r\n                vm.set(\"isDirty\", isDirtyState);\r\n            };\r\n\r\n            /*\r\n            if (!_.isUndefined(pageForm.newWI)) { vm.set(\"HistoryButton\", !pageForm.newWI); } //workitem\r\n            if (!_.isUndefined(pageForm.isNew)) { vm.set(\"HistoryButton\", !pageForm.isNew); } //AM\r\n            */\r\n\r\n            vm.view.historyController = {\r\n                loadHistory: function () {\r\n                    var kendoDropDownList = $(\"#showHistoryDropDown\").data(\"kendoDropDownList\");\r\n                    vm.view.historyController.getObjectHistory(kendoDropDownList.value(), kendoDropDownList.text());\r\n                },\r\n\r\n                dropDownDataSet: false,\r\n\r\n                getDropDownDataSource: function () {\r\n                    var data = [],\r\n                        getChildren = function (viewModel, prefix) {\r\n                            prefix = prefix || \"\";\r\n                            data.push({\r\n                                text: prefix + viewModel.Id + \" - \" + viewModel.Title,\r\n                                value: viewModel.BaseId\r\n                            });\r\n                            if (viewModel.Activity !== undefined && viewModel.Activity.length > 0) {\r\n                                $.each(viewModel.Activity, function (Key, activity) {\r\n                                    getChildren(activity, prefix + \"    \");\r\n                                });\r\n                            }\r\n                        };\r\n\r\n                    getChildren(vm);\r\n\r\n                    return data;\r\n                },\r\n\r\n                getObjectHistory: function (objectGUID, objectTitle) {\r\n                    vm.setWithNoDirty(\"historyLabel\", { \"type\": \"loading\" });\r\n                    vm.setWithNoDirty(\"showHistory\", false);\r\n\r\n                    $.ajax({\r\n                        url: \"/Search/GetObjectHistory\",\r\n                        data: { \"id\": objectGUID },\r\n                        type: \"GET\",\r\n                        cache: false,\r\n                        success: function (data) {\r\n                            vm.setWithNoDirty(\"historyLabel\", { \"type\": \"info\", \"text\": objectTitle });\r\n\r\n                            /*\r\n                            if(vm.view.historyController.model !== undefined) {\r\n                                vm.view.historyController.view.destroy();\r\n                            }*/\r\n\r\n                            try {\r\n                                if (vm.view.historyController.model === undefined) {\r\n                                    var customhistoryModel = kendo.observable({\r\n                                        nodes: data\r\n                                    });\r\n\r\n                                    vm.view.historyController.model = customhistoryModel;\r\n\r\n                                    vm.view.historyController.view = new kendo.View(\r\n                                        \"viewHistoryTemplate\",\r\n                                        {\r\n                                            model: customhistoryModel,\r\n                                            wrap: false,\r\n                                            init: $.noop //empty function\r\n                                        }\r\n                                    );\r\n\r\n                                    vm.view.historyController.view.render($(\"#historyView\"));\r\n                                } else {\r\n                                    vm.view.historyController.model.set(\"nodes\", data);\r\n                                }\r\n                            } catch (err) {\r\n                                if (!_.isUndefined(app.storage.custom) && app.storage.custom.get(\"debug\")) {\r\n                                    console.log(\"historyController:error\", {\r\n                                        \"err\": err\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            vm.setWithNoDirty(\"showHistory\", true);\r\n                        },\r\n                        error: function (data) {\r\n                            vm.setWithNoDirty(\"historyLabel\", { \"type\": \"error\" });\r\n                            if (!_.isUndefined(app.storage.custom) && app.storage.custom.get(\"debug\")) {\r\n                                console.log(\"historyController:error\", {\r\n                                    \"err\": data\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            function buildAndRender() {\r\n                var builtHistory = _.template(historyTemplate),\r\n                    historyElm = $(builtHistory(node));\r\n                \r\n                historyElm.find(\"#showHistoryDropDown\").kendoDropDownList({\r\n                    dataSource: [{\r\n                        \"text\": vm.Id + \" - \" + vm.Title,\r\n                        \"value\": vm.BaseId\r\n                    }],\r\n                    select: function (event) {\r\n                        var dataItem = this.dataItem(event.item);\r\n                        vm.view.historyController.getObjectHistory(dataItem.value, dataItem.text);\r\n                    },\r\n                    open: function (event) {\r\n                        if (!vm.view.historyController.dataSourceSet) {\r\n                            event.sender.setDataSource(vm.view.historyController.getDropDownDataSource());\r\n                            vm.view.historyController.dataSourceSet = true;\r\n                        }\r\n                    }\r\n                }).data(\"kendoDropDownList\");\r\n                \r\n                callback(historyElm);\r\n            }\r\n            \r\n            function initHistory() {\r\n                if (!_.isUndefined(app.storage.custom) && app.storage.custom.get(\"debug\")) {\r\n                    console.log(\"historyController:initHistory\");\r\n                }\r\n                vm.setWithNoDirty(\"historyLabel\", { \"type\": \"info\", \"text\": \"\" });\r\n                buildAndRender();\r\n            }\r\n            \r\n            initHistory();\r\n        }\r\n    };\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/predefined/billableTime/view.html',[],function () { return '<div>\\r\\n    <div data-control=\"billableTime\" data-control-bind=\"AppliesToWorkItem\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    <div class=\"row\" data-bind=\"visible: view.billableTimeController.isVisible\">\\r\\n        <div class=\"col-md-3\">\\r\\n            <div class=\"form-group\" data-cid=\"work-itemBillableTime\" data-cid-propname=\"hours\">\\r\\n                <label for=\"hourNumeric\"><%= localization.hours %></label>\\r\\n                <div class=\"form-control form-control-picker input-sm\">\\r\\n                    <input id=\"hourNumeric\" data-role=\"numerictextbox\"\\r\\n                           data-format=\"n0\"\\r\\n                           data-min=\"0\"\\r\\n                           data-bind=\"value: view.billableTimeController.btHour,\\r\\n                               events: {spin: view.billableTimeController.onHourSpin }\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-3\">\\r\\n            <div class=\"form-group\" data-cid=\"work-itemBillableTime\" data-cid-propname=\"minutes\">\\r\\n                <label for=\"minuteNumeric\"><%= localization.minutes %></label>\\r\\n                <div class=\"form-control form-control-picker input-sm\">\\r\\n                    <input id=\"minuteNumeric\" data-role=\"numerictextbox\"\\r\\n                           data-format=\"n0\"\\r\\n                           data-min=\"0\"\\r\\n                           data-bind=\"value: view.billableTimeController.btMinute,\\r\\n                               events: {spin: view.billableTimeController.onMinuteSpin }\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"col-md-6 margin-t30\">\\r\\n            <button class=\"btn btn-primary\" data-role=\"button\" data-bind=\"events: {click: view.billableTimeController.onAddClick}\" data-cid=\"billableTimeAddButton\"><%= localization.Add %> </button>\\r\\n            <button class=\"btn btn-default\" data-role=\"button\" data-bind=\"events: {click: view.billableTimeController.onSubtractClick}\" data-cid=\"billableTimeSubtractButton\"><%= localization.Subtract %> </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"col-md-12\">\\r\\n            <div data-control=\"grid\"></div>\\r\\n            <div data-role=\"grid\" class=\"billable-time-grid\"\\r\\n                 data-bind=\"source: view.billableTimeController.dataSource, events:{dataBinding: view.billableTimeController.onDataBinding, dataBound: view.billableTimeController.onDataBound}\"\\r\\n                 data-selectable=\"false\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"false\"\\r\\n                 data-editable=\"{mode: \\'incell\\'}\"\\r\\n                 data-columns=\\'[\\r\\n                { field: \"BillableTime.DisplayName\", title: localization.Analyst, width: \"300px\", attributes: { \"class\": \"grid-highlight-column\" } },\\r\\n                { field: \"BaseId\", title: localization.BaseId, width: \"30px\", hidden: true },\\r\\n                { field: \"LastUpdatedDisplay\", title: localization.LastUpdated, width: \"100px\" },\\r\\n                { field: \"TimeInMinutes\", title: localization.TimeInMinutes, width: \"100px\", attributes: { \"class\": \"pull-right\" } },\\r\\n                <% if ( !Disabled ){ %>\\r\\n                 { width: \"100px\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove}]}\\r\\n                <% } %>\\r\\n            ]\\'>\\r\\n            </div>\\r\\n            <div class=\"pull-right\">\\r\\n                <label data-bind=\"html: view.billableTimeController.btTotalTimeInString\"></label>\\r\\n            </div>\\r\\n        </div>\\r\\n        </div>\\r\\n</div>\\r\\n</div>';});\n\n","/**\r\nbillableTime\r\n**/\r\n\r\ndefine('forms/predefined/billableTime/controller',['require','text!forms/predefined/billableTime/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/billableTime/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                Disabled: node.disabled,\r\n                PropertyName: \"AppliesToWorkItem\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var name = properties.PropertyName;\r\n            var boundArray = _.isUndefined(boundObj[name]) ? boundObj[name] = new kendo.data.ObservableArray([]) : boundObj[name];\r\n            boundArray.LastUpdatedDisplay = \"\";\r\n            \r\n\r\n            vm.view.billableTimeController = new kendo.observable({\r\n                btHour: 0,\r\n                btMinute: 0,\r\n                btTotalTime: 0,\r\n                btTotalTimeInString: \"\",\r\n                onHourSpin: function (e) {\r\n                    vm.view.billableTimeController.set('btHour', e.sender.value());\r\n                },\r\n                onMinuteSpin: function (e) {\r\n                    vm.view.billableTimeController.set('btMinute', e.sender.value());\r\n                },\r\n                dataSource: new kendo.data.DataSource({\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\",\r\n                        model: {\r\n                            id: \"BaseId\",\r\n                        }\r\n                    },\r\n                    data: {\r\n                        Data: boundArray,\r\n                        Total: boundArray.length\r\n                    }\r\n                }),\r\n                onDataBinding: function (e) {\r\n                    $.each(boundArray, function (i, item) {\r\n                        if (_.isUndefined(item.BillableTime)) {\r\n                            item.BillableTime = { BasedId: null, DisplayName: null };\r\n                        }\r\n                        item.LastUpdatedDisplay =\r\n                            !_.isUndefined(item.LastUpdated)\r\n                                ? kendo.toString(new Date(item.LastUpdated), 'g')\r\n                                : null;\r\n                    });\r\n                },\r\n                onDataBound: function (e) {\r\n                    for (var item in e.sender._data) {\r\n                        var dataItem = e.sender._data[item];\r\n                        if (_.isNull(dataItem.BillableTime.BasedId)) {\r\n                            var row = e.sender.tbody.find(\"tr[data-uid='\" + dataItem.uid + \"']\");\r\n                            row.hide();\r\n                        }\r\n                    }\r\n                },\r\n                onAddClick: function (e) {\r\n                    var hour = vm.view.billableTimeController.btHour;\r\n                    var minute = vm.view.billableTimeController.btMinute;\r\n                    var totalTime = vm.view.billableTimeController.btTotalTime;\r\n\r\n                    var isExisting = false;\r\n                    \r\n                    $.each(boundArray, function (i, item) {\r\n                        if (item.BillableTime.BaseId === session.user.Id) {\r\n                            item.set(\"LastUpdated\", new Date().toISOString());\r\n                            item.set(\"TimeInMinutes\", parseInt(item.get(\"TimeInMinutes\")) + (hour * 60) + minute);\r\n                            isExisting = true;\r\n                            return false;\r\n                        }\r\n                    });\r\n                    if (!isExisting) {\r\n                        var newBillableModel = {\r\n                            BillableTime: {\r\n                                BaseId: session.user.Id,\r\n                                DisplayName: session.user.Name\r\n                            },\r\n                            LastUpdated: new Date().toISOString(),\r\n                            LastModified: new Date().toISOString(),\r\n                            TimeInMinutes: (hour * 60) + minute,\r\n                            BasedId: app.lib.newGUID(),\r\n                            Image: app.config.iconPath + app.config.icons[\"comment\"],\r\n                            EnteredDate: new Date().toISOString(),\r\n                            ClassTypeId: \"6645cdbe-78a3-ab81-7de9-638b733214fe\",\r\n                            EnteredBy: session.user.Name,\r\n                            Title: null,\r\n                            Description: null\r\n                        }\r\n                        boundArray.push(newBillableModel);\r\n                    }\r\n                    vm.view.billableTimeController.computeTotalTime();\r\n                    vm.view.billableTimeController.resetTime();\r\n                },\r\n                onSubtractClick: function (e) {\r\n                    var hour = vm.view.billableTimeController.btHour;\r\n                    var minute = vm.view.billableTimeController.btMinute;\r\n                    var totalTime = vm.view.billableTimeController.btTotalTime;\r\n\r\n                    if ((totalTime < (hour * 60)) || (totalTime < minute)) {\r\n                        kendo.ui.ExtAlertDialog.show({\r\n                            title: localization.SubtractTimeTitle,\r\n                            message: localization.SubtractTimeMessage\r\n                        });\r\n                    } else {\r\n                        $.each(boundArray, function (i, item) {\r\n                            if (item.BillableTime.BaseId === session.user.Id) {\r\n                                item.set(\"LastUpdated\", new Date().toISOString());\r\n                                item.set(\"TimeInMinutes\", parseInt(item.get(\"TimeInMinutes\")) - (hour * 60) - minute);\r\n                                isExisting = true;\r\n                            }\r\n                        });\r\n                        vm.view.billableTimeController.computeTotalTime();\r\n                        vm.view.billableTimeController.resetTime();\r\n                    }\r\n                },\r\n                computeTotalTime: function (e) {\r\n                    var itemTotalTime = 0;\r\n                    \r\n                    $.each(boundArray, function (i, item) {\r\n                        if (item.get(\"ClassTypeId\") === \"6645cdbe-78a3-ab81-7de9-638b733214fe\") {\r\n                            itemTotalTime += parseInt(item.get(\"TimeInMinutes\"));\r\n                        }\r\n                    });\r\n\r\n                    if (boundArray.length > 1) {\r\n                        if (vm.view.billableTimeController.get(\"btTotalTime\") != null)\r\n                            itemTotalTime += parseInt(vm.view.billableTimeController.get(\"btTotalTime\"));\r\n                    }\r\n                    \r\n                    vm.view.billableTimeController.btTotalTime = itemTotalTime;\r\n                    vm.view.billableTimeController.btTotalTimeInString =\r\n                        (\"{0} : {1} {2}\")\r\n                        .replace(\"{0}\", localization.Totaltime)\r\n                        .replace(\"{1}\", vm.view.billableTimeController.btTotalTime)\r\n                        .replace(\"{2}\", localization.minutes);\r\n                },\r\n                resetTime: function () {\r\n                    $('#hourNumeric').data(\"kendoNumericTextBox\").value(0);\r\n                    vm.view.billableTimeController.set('btHour', 0);\r\n                    $('#minuteNumeric').data(\"kendoNumericTextBox\").value(0);\r\n                    vm.view.billableTimeController.set('btMinute', 0);\r\n                },\r\n                isVisible: !vm.isDisabled\r\n            });\r\n            vm.view.billableTimeController.computeTotalTime();\r\n            var view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/predefined/knowledgeArticle/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"mobileHTMLGridTemplate\" class=\"mobile-grid\">\\r\\n        <!-- repeated template content here -->\\r\\n        <div class=\"gridcard gridcard--form\">\\r\\n            <p class=\"gridcard__title\">${KnowledgeArticleID}: ${Title}</p>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                # if ( Category && Category.length > 0 ){ #\\r\\n                <p>#: localizationHelper.localize(\"Category\") #: #: Category # </p>\\r\\n                # } #\\r\\n                # if ( Type && Type.length > 0 ){ #\\r\\n                <p>#: localizationHelper.localize(\"Type\") #: #: Type # </p>\\r\\n                # } #\\r\\n            </div>\\r\\n            <div class=\"gridcard__detailblock\">\\r\\n                <a class=\"k-delete-button\">#: localization.Remove #</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\"row\">\\r\\n    <div class=\"col-md-12 file-attachments\"\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>>\\r\\n    <div>\\r\\n        <button class=\"btn btn-primary\" data-role=\"button\" data-bind=\"events:{click: view.knowledgeArticleModel.addClick}\"><%= localization.Add %> </button>\\r\\n    </div>\\r\\n    \\r\\n    <% if ( IsMobileView == false ){ %>\\r\\n        <div data-role=\"grid\"\\r\\n            data-bind=\"source: RelatedHTMLKB, events:{remove: view.knowledgeArticleModel.removeRelatedKB}\"\\r\\n            data-selectable=\"true\"\\r\\n            data-sortable=\"true\"\\r\\n            data-filterable=\"true\"\\r\\n            data-scrollable=\"false\"\\r\\n            data-column-menu=\"true\"\\r\\n            data-pageable=\"false\"\\r\\n            data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n            data-columns=\\'[\\r\\n                { field: \"KnowledgeArticleID\", title: localization.Id, width: \"10%\", attributes:{class:\"grid-highlight-column\"}},\\r\\n                { field: \"Title\", title: localization.Title, width: \"50%\", attributes:{class:\"grid-highlight-column\"}},\\r\\n                { field: \"Category\", title: localization.Category, width: \"20%\" },\\r\\n                { field: \"Type\", title: localization.Type, width: \"20%\" },\\r\\n                { width: \"4%\", command: [{ name: \"destroy\", buttonType: \"ImageAndText\", text: localization.Remove }] }\\r\\n                ]\\'>\\r\\n        </div>\\r\\n    <% } %>\\r\\n    <% if ( IsMobileView ){ %>\\r\\n        <div data-role=\"listview\" data-template=\"mobileHTMLGridTemplate\" data-bind=\"source: RelatedHTMLKB, events: {remove: view.knowledgeArticleModel.removeRelatedKB}\" class=\"mobile-grid-parent\"></div>\\r\\n    <% } %>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/predefined/knowledgeArticle/popup.html',[],function () { return '<div class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-5\">\\r\\n                    <div class=\"form-group\">\\r\\n                        <label><%= localization.SearchText %></label>\\r\\n                        <span class=\"k-textbox k-space-right\">\\r\\n                            <input type=\"text\" data-bind=\"value: searchText\" />\\r\\n                            <span data-bind=\"events:{click: search}\" class=\"fa fa-search cursor-pointer\">&nbsp;</span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <label><%= localization.SelectObjects %></label>\\r\\n\\r\\n            <div class=\"objectPicker-container\">\\r\\n                <div class=\"k-widget k-grid k-secondary\"\\r\\n                     data-role=\"grid\"\\r\\n                     data-bind=\"source: dataSource\"\\r\\n                     data-selectable=\"multiple, row\"\\r\\n                     data-sortable=\"true\"\\r\\n                     data-filterable=\"true\"\\r\\n                     data-scrollable=\"false\"\\r\\n                     data-column-menu=\"true\"\\r\\n                     data-pageable=\"true\"\\r\\n                     data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n                     data-columns=\\'[\\r\\n                { field: \"ArticleId\", title: localization.Id, width: \"10%\"},\\r\\n                { field: \"Title\", title: localization.Title, width: \"90%\"}\\r\\n                ]\\'>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"objectPicker-actions\">\\r\\n                <button data-role=\"button\" data-bind=\"events:{click: add}\" class=\"btn btn-primary k-button\"><%= localization.Add %> </button>\\r\\n                <button data-role=\"button\" data-bind=\"events:{click: remove}\" class=\"btn btn-danger k-button\"><%= localization.Remove %> </button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"k-widget k-grid k-secondary objectPicker-grid2-container\"\\r\\n                 data-role=\"grid\"\\r\\n                 data-bind=\"source: selectedItems\"\\r\\n                 data-selectable=\"multiple, row\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"true\"\\r\\n                 data-editable=\"{mode: \\'incell\\', create: false, update: false}\"\\r\\n                 data-columns=\\'[\\r\\n                { field: \"ArticleId\", title: localization.Id, width: \"10%\"},\\r\\n                { field: \"Title\", title: localization.Title, width: \"90%\"}\\r\\n                ]\\'>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n';});\n\n","/**\r\nknowledgeArticle\r\n**/\r\n\r\ndefine('forms/predefined/knowledgeArticle/controller',['require','text!forms/predefined/knowledgeArticle/view.html','text!forms/predefined/knowledgeArticle/popup.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/knowledgeArticle/view.html\");\r\n    var popupTpl = require(\"text!forms/predefined/knowledgeArticle/popup.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var properties = {\r\n                Disabled: false,\r\n                IsMobileView: app.isMobileDevice()\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //build the template for the popup window\r\n            var built = _.template(popupTpl);\r\n            var popupView = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in popup window\r\n            callback(popupView.render());\r\n\r\n            //view model\r\n            vm.view.knowledgeArticleModel = kendo.observable({\r\n                addClick: function (e) {\r\n                    var popupWindow= popupView.element; \r\n                    win = popupWindow.kendoCiresonWindow({\r\n                        title: localization.SelectObject,\r\n                        width: 750,\r\n                        height: 710,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the popup element\r\n                    var modalViewModel = new kendo.observable({\r\n                        dataSource: new kendo.data.DataSource({\r\n                            transport: {\r\n                                read: {\r\n                                    url: \"/api/V3/KnowledgeBase/GetHTMLArticles\",\r\n                                    dataType: \"json\",\r\n                                    data: { userId: session.user.Id },\r\n                                    cache: false\r\n                                }\r\n                            },\r\n                            schema: {\r\n                                model: {\r\n                                    fields: {\r\n                                        ArticleId: { type: \"string\" },\r\n                                        Title: { type: \"string\" },\r\n                                        Category: { type: \"string\" },\r\n                                        Type: { type: \"string\" }\r\n                                    }\r\n                                }\r\n                            },\r\n                            pageSize: 5,\r\n                        }),\r\n                        selectedItems: new kendo.data.ObservableArray([]),\r\n                        searchText:\"\",\r\n                        search: function(e){\r\n                            var val = this.get(\"searchText\");\r\n                            this.dataSource.read();\r\n                            this.dataSource.filter({\r\n                                logic: \"or\",\r\n                                filters: [\r\n                                    {\r\n                                        field: \"ArticleId\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Title\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Category\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Type\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    }\r\n                                ]\r\n                            });\r\n                        },\r\n                        add: function (e) {\r\n                            var gridEle = popupWindow.find('[data-role=\"grid\"]').first();\r\n                            var grid = gridEle.data(\"kendoGrid\");\r\n                            var selectedRows = grid.select();\r\n\r\n                            for (var i = 0; i < selectedRows.length; i++) {\r\n                                var dataItem = grid.dataItem(selectedRows[i]);\r\n                                if (dataItem) {\r\n                                    //check first if article is already on the selected list before adding it to the second grid\r\n                                    var articleIds = _.pluck(this.selectedItems, \"ArticleId\");\r\n                                    var isAdded = _.contains(articleIds, dataItem.ArticleId);\r\n\r\n                                    if (!isAdded) {\r\n                                        this.selectedItems.push(dataItem);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var selectedGridEle = popupWindow.find('[data-role=\"grid\"]').last();\r\n                            selectedGridEle.data(\"kendoGrid\").dataSource.query({ page: 1, pageSize: 5 });\r\n                        },\r\n                        remove: function (e) {\r\n                            var gridEle = popupWindow.find('[data-role=\"grid\"]').last();\r\n                            var grid = gridEle.data(\"kendoGrid\");\r\n                            var selectedRows = grid.select();\r\n\r\n                            for (var i = 0; i < selectedRows.length; i++) {\r\n                                var dataItem = grid.dataItem(selectedRows[i]);\r\n                                this.selectedItems.pop(dataItem);\r\n                            }\r\n                        },\r\n                        save: function (e) {\r\n                            var relatedHTMLKB = !_.isUndefined(vm.get(\"RelatedHTMLKB\")) ? vm.get(\"RelatedHTMLKB\") : [];\r\n                            _.each(this.selectedItems, function (item) {\r\n                                relatedHTMLKB.push({\r\n                                    KnowledgeArticleID: item.ArticleId,\r\n                                    WorkItemID: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.BaseId : null,\r\n                                    WorkItemId: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.Id : null,\r\n                                    AssetID: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.BaseId : null,\r\n                                    AssetId: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.Id : null,\r\n                                    Title: item.Title,\r\n                                    Category: item.Category,\r\n                                    Type: item.Type\r\n                                });\r\n                            });\r\n\r\n                            vm.set(\"RelatedHTMLKB\", relatedHTMLKB);\r\n\r\n                            win.close();\r\n                        },\r\n                        cancel: function (e) {\r\n                            win.close();\r\n                        }\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(popupWindow, modalViewModel);\r\n\r\n                    popupWindow.removeClass('hide');\r\n                    popupWindow.show();\r\n\r\n                    win.open();\r\n                },\r\n                bindRowClick: function (e) {\r\n                    var gridEle = view.element.find('[data-role=\"grid\"]').first();\r\n                    gridEle.on(\"click\", \"td\", function (e) {\r\n                        var highlightedColumn = $(e.currentTarget).hasClass(\"grid-highlight-column\");\r\n                        if (!highlightedColumn) { return }\r\n\r\n                        var kendoGrid = gridEle.data(\"kendoGrid\");\r\n                        var selectedItem = kendoGrid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n\r\n                        //open kb on a new tab when clicked\r\n                        window.open(\"/KnowledgeBase/View/\" + selectedItem.KnowledgeArticleID, '_blank');\r\n                    });\r\n\r\n\r\n                    if (!app.isMobile())\r\n                    {\r\n                        var grid = gridEle.data(\"kendoGrid\");\r\n\r\n                        grid.dataSource.originalFilter = grid.dataSource.filter;\r\n\r\n                        // Replace the original filter function.\r\n                        grid.dataSource.filter = function () {\r\n\r\n                            // Call the original filter function.\r\n                            var result = grid.dataSource.originalFilter.apply(this, arguments);\r\n\r\n                            // If a column is about to be filtered, then raise a new \"filtering\" event.\r\n                            if (arguments.length > 0) {\r\n                                this.trigger(\"filterApplied\", arguments);\r\n                            }\r\n\r\n                            return result;\r\n                        }\r\n\r\n                        grid.dataSource.bind(\"filterApplied\", function () {\r\n\r\n                            $.each($(gridEle).find(\"th a.k-header-column-menu i\"), function () {\r\n                                $(this).remove();\r\n                            });\r\n\r\n                            if (grid.dataSource.filter()) {\r\n\r\n                                var filters = grid.dataSource.filter().filters || [];\r\n                                var dsFilters = [];\r\n                                for (var i in filters) {\r\n                                    if (filters[i].filters) {\r\n                                        var innerFilters = filters[i].filters;\r\n                                        for (var x in innerFilters) {\r\n                                            dsFilters.push(innerFilters[x]);\r\n                                        }\r\n                                    } else {\r\n                                        dsFilters.push(filters[i]);\r\n                                    }\r\n                                }\r\n\r\n                                dsFilters = _.uniq(dsFilters, function (el) { return el.field; });\r\n\r\n                                for (var i in dsFilters) {\r\n                                    $(gridEle).find(\"th[data-field=\" + dsFilters[i].field + \"] a.k-header-column-menu\").append(\"<i class=\\\"fa fa-filter\\\"></i>\");\r\n                                }\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                    },\r\n                    \r\n                getAllRelatedWorkItems: function (e) {\r\n                    //this will hold all the related knowledge article data\r\n                    var relatedHTMLKB = !_.isUndefined(vm.get(\"RelatedHTMLKB\")) ? vm.get(\"RelatedHTMLKB\") : new kendo.data.ObservableArray([]);\r\n\r\n                    var url = '';\r\n\r\n                    if (vm.ClassName.indexOf(\"WorkItem\") != -1)\r\n                        url = app.lib.addUrlParam(\"/api/V3/Article/GetArticlesRelatedToWorkItem\", \"workItemId\", vm.BaseId);\r\n                    else if (vm.ClassName.indexOf(\"AssetManagement\") != -1)\r\n                        url = app.lib.addUrlParam(\"/api/V3/Article/GetArticlesRelatedToAsset\", \"assetId\", vm.BaseId);\r\n\r\n                    $.ajax({\r\n                        url: url,\r\n                        dataType: 'json',\r\n                        type: \"POST\",\r\n                        success: function (data) {\r\n                            //set the value\r\n                            _.each(data, function (item) {\r\n                                relatedHTMLKB.push({\r\n                                    KnowledgeArticleID: item.ArticleID,\r\n                                    WorkItemID: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.BaseId : null,\r\n                                    WorkItemId: (vm.ClassName.indexOf(\"WorkItem\") != -1) ? vm.Id : null,\r\n                                    AssetID: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.BaseId : null,\r\n                                    AssetId: (vm.ClassName.indexOf(\"AssetManagement\") != -1) ? vm.Id : null,\r\n                                    Title: item.Title,\r\n                                    Category: item.CategoryName,\r\n                                    Type: item.TypeName\r\n                                });\r\n                            });\r\n\r\n                            //to avoid triggering isDirty, update viewModel only if there is/are related KB\r\n                            if (relatedHTMLKB.length > 0) {\r\n                                vm.set(\"RelatedHTMLKB\", relatedHTMLKB);\r\n                            }\r\n                        },\r\n                        error: function (e) {\r\n                            //log error and display generic error tesxt\r\n                            app.lib.log(e.errorThrown + ' - When retrieving data from /api/V3/Article/GetArticlesRelatedToWorkItem');\r\n                        }\r\n                    });\r\n                },\r\n                removeRelatedKB: function (e) {\r\n                    //this will hold all the to be deleted related knowledge article \r\n                    var removeHTMLKB = !_.isUndefined(vm.get(\"RemoveRelatedHTMLKB\")) ? vm.get(\"RemoveRelatedHTMLKB\") : new kendo.data.ObservableArray([]);\r\n                    removeHTMLKB.push(e.model);\r\n                    vm.set(\"RemoveRelatedHTMLKB\", removeHTMLKB);\r\n                }\r\n            });\r\n\r\n            //build it\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false, model: vm.view.knowledgeArticleModel });\r\n            callback(view.render());\r\n\r\n            vm.view.knowledgeArticleModel.getAllRelatedWorkItems();\r\n            vm.view.knowledgeArticleModel.bindRowClick();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/predefined/fileAttachmentsDragDrop/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <div class=\"drop-zone-element\">\\r\\n        <div class=\"text-wrapper\">\\r\\n            <span class=\"drag-image-text\">\\r\\n                <img data-bind=\"visible:isDesktop\" src=\"/Content/Images/Icons/FileUpload/upload_to_cloud.svg\" />\\r\\n                <span data-bind=\"visible:isDesktop\"><b><%= localization.DragAndDrop %> </b> <%= localization.YourFilesOr %> <a class=\"browse-file\"><b><%= localization.Browse %></b></a></span>\\r\\n                <a  data-bind=\"visible:isMobile\" class=\"browse-file\"><b><%= localization.Browse %></b></a>\\r\\n                <div style=\"display:none\"><input name=\"files\" id=\"files\" type=\"file\"/></div>\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div>\\r\\n    <div class=\"fileattachment-list\"></div>\\r\\n    <div class=\"fileattachment-img-modal\"></div>\\r\\n</div>\\r\\n\\r\\n<script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n    <div class=\"thumbnail-file\">\\r\\n        <div class=\"cursor-pointer thumbnail-img\">\\r\\n            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n            <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n            # } else{ #\\r\\n            <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n            # } #\\r\\n        </div>\\r\\n        <div class=\"thumbnail-caption\">\\r\\n            <span>#: DisplayName #</span>\\r\\n            <div class=\"overlay\">\\r\\n                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                        <i class=\"fa fa-eye\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                        <i class=\"fa fa-external-link\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (BaseId!=null) { #\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                        <i class=\"fa fa-download\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n                # } #\\r\\n                <span class=\"label\">\\r\\n                    <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\"  title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<style>\\r\\n\\r\\n</style>';});\n\n","/**\r\nfileAttachmentsDragDrop\r\n**/\r\n\r\ndefine('forms/predefined/fileAttachmentsDragDrop/controller',['require','text!forms/predefined/fileAttachmentsDragDrop/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/predefined/fileAttachmentsDragDrop/view.html\");\r\n   \r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            //get file content for images\r\n            if (!_.isUndefined(vm.FileAttachment) && vm.FileAttachment.length > 0) {\r\n                _.each(vm.FileAttachment, function (file) {\r\n                    if (file.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                        $.ajax({\r\n                            type: \"GET\",\r\n                            async: false,\r\n                            url: \"/FileAttachment/GetFileContent/\",\r\n                            data: { id: file.BaseId }\r\n                        }).then(function (data) {\r\n                            file.Content.data = data;\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            var properties = {\r\n                Required: node.Required,\r\n                BaseId: vm.BaseId,\r\n                AcceptExtension: _.isUndefined(node.AcceptExtension) ? \"\" : vm.AcceptExtension,\r\n                ClassName: vm.Clas\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            var template = $(built(properties));\r\n\r\n            var viewModel = new kendo.observable({\r\n                isDesktop: !app.isMobile(),\r\n                isMobile: app.isMobile(),\r\n                isEnabled: true,\r\n                isVisible: true,\r\n                onSelect: function (e) {\r\n                    template.find(\".k-file-error\").remove();\r\n                    $.each(e.files, function (index, value) {\r\n                        if (!_.isUndefined(node.AcceptExtension)\r\n                            && node.AcceptExtension != \"\"\r\n                            && !(node.AcceptExtension.toLowerCase().indexOf(value.extension.toLowerCase()) > -1)) {\r\n                            kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.ErrorDescription,\r\n                                message: localization.FileExtensionInvalid + node.AcceptExtension,\r\n                                icon: \"fa fa-exclamation\"\r\n                            });\r\n                            e.preventDefault();\r\n                        }\r\n                    });\r\n                },\r\n                onUploadSuccess: function (e) {\r\n                    var vmFiles = !_.isUndefined(vm.FileAttachment) ? vm.FileAttachment : [];\r\n                    var response = e.response;\r\n\r\n                    if (e.operation == \"upload\") {\r\n                        for (var i = 0; i < e.files.length; i++) {\r\n                            var file = e.files[i].rawFile;\r\n                            if (file) {\r\n                                if (!_.isUndefined(response.FileAttachment)) {\r\n                                    vm.FileAttachment.push(response.FileAttachment); //save to viewModel\r\n                                } else if (!_.isUndefined(response.success) && response.success == false) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.ErrorDescription,\r\n                                        message: response.message,\r\n                                        icon: \"fa fa-exclamation\"\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                onUploadError: function (e) {\r\n                    var err = $.parseJSON(e.XMLHttpRequest.responseText);\r\n                    $.map(e.files, function (file) {\r\n                        console.warn(\"Could not upload \" + file.name);\r\n                    });\r\n                },\r\n                onRemove: function (e) {\r\n                    $.get(\"/FileAttachment/RemoveFileUpload/\", { BaseId: vm.BaseId, fieldName: node.PropertyName }, function (data) {\r\n                        template.find(\".k-file\").parent().remove();\r\n                        //template.find(\"img\").hide();\r\n                        template.find(\"#div\" + node.PropertyName).hide();\r\n                        vm[node.PropertyName] = null;\r\n                    });\r\n                },\r\n                onOpenFile: function (el) {\r\n\r\n                    if (el.hasClass(\"opennewtab\")) {\r\n                        var win = window.open('about:blank');\r\n                        setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                            win.document.body.appendChild(win.document.createElement('img')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.focus();\r\n                        }, 0);\r\n\r\n                    }\r\n                    else {\r\n                        var dialog = $('.fileattachment-img-modal');\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        var listView = template.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                        var item = el.closest(\"[role='option']\");\r\n                        var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n                        \r\n                        \r\n                        if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/) && !el.hasClass(\"download\")) {\r\n                            dialog.kendoDialog({\r\n                                modal: true,\r\n                                title: dataItem.DisplayName,\r\n                                content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" + dataItem.DisplayName + \"\\\" /></div>\",\r\n                                animation: {\r\n                                    open: {\r\n                                        effects: \"fade:in\"\r\n                                    }\r\n                                }\r\n                            });\r\n                            $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                            dialog.data(\"kendoDialog\").open();\r\n                            dialog.parent().css(\"position\", \"fixed\");\r\n\r\n                            //close preview window on overlay click\r\n                            $('.k-overlay').on(\"click\", function () {\r\n                                dialog.data(\"kendoDialog\").close();\r\n                            });\r\n\r\n                        } else {\r\n                            if (dataItem.Content.data && !dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                                var blob = new Blob([dataItem.Content.data]);\r\n                                var url = window.URL.createObjectURL(blob);\r\n                                var fileName = dataItem.DisplayName;\r\n\r\n                                if (navigator.msSaveOrOpenBlob) {\r\n                                    navigator.msSaveOrOpenBlob(blob, fileName);\r\n                                    return;\r\n                                } else if (window.navigator.msSaveBlob) { // for IE browser\r\n                                    window.navigator.msSaveBlob(blob, fileName);\r\n                                    return;\r\n                                }\r\n\r\n                                var a = document.createElement(\"a\");\r\n                                document.body.appendChild(a);\r\n                                a.style = \"display: none\";\r\n\r\n                                a.href = url;\r\n                                a.download = fileName;\r\n                                a.click();\r\n                                window.URL.revokeObjectURL(url);\r\n                                document.body.removeChild(a);\r\n                            } else if (dataItem.BaseId) {\r\n                                if (dataItem.BaseId != null) {\r\n                                    location.href = downloadUrl + dataItem.BaseId;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            _.defer(function () {\r\n                kendo.bind(template, viewModel);\r\n                template.find(\".fileattachment-list\").kendoListView({\r\n                    dataSource: vm.FileAttachment,\r\n                    template: kendo.template($(\"#fileTemplate\").html()),\r\n                    selectable: \"single\",\r\n                    //change: viewModel.onOpenFile,\r\n                    dataBound: function () {\r\n                        template.find(\".custom-click\").on(\"click\", function () {\r\n                            viewModel.onOpenFile($(this));\r\n                        });\r\n\r\n                        if (!app.isMobile()) {\r\n                            //Remove view image icon if not in mobile.\r\n                            template.find(\"a[view-image]\").parent().hide();\r\n\r\n                            template.find(\".thumbnail-img img\").on(\"click\", function () {\r\n                                viewModel.onOpenFile($(this));\r\n                            });\r\n                        }\r\n                        \r\n                    }\r\n                });\r\n\r\n                $(\"#files\").kendoUpload({\r\n                    async: {\r\n                        saveUrl: \"/FileAttachment/UploadAttachment/\" + vm.BaseId + \"?className=\" + vm.ClassName,\r\n                        removeUrl: \"remove\",\r\n                        autoUpload: true\r\n                    },\r\n                    success:  viewModel.onUploadSuccess,\r\n                    error: viewModel.onUploadError,\r\n                    showFileList: false,\r\n                    dropZone: \".drop-zone-element\"\r\n                });\r\n\r\n                $(\".browse-file\").click(function (e) {\r\n                    $(\"#files\").trigger(\"click\");\r\n                });\r\n\r\n               \r\n            });\r\n            callback(template);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/display/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <% if ( !HideLabel ){ %>\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\"></label>\\r\\n    <% } %>\\r\\n    <div class=\"display-field\" data-bind=\"text: <%= PropertyName %>\"></div>\\r\\n</div>';});\n\n","/**\r\nDISPLAY\r\n**/\r\n\r\ndefine('forms/fields/display/controller',['require','text!forms/fields/display/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/display/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                HideLabel: false\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/spacer/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nSPACER\r\n**/\r\n\r\ndefine('forms/fields/spacer/controller',['require','text!forms/fields/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/spacer/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nINT32\r\n**/\r\n\r\ndefine('forms/fields/int/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            var boundObj = node.vm;\r\n            //make sure we have all the vals set\r\n            \r\n            var properties = {\r\n                Required: node.Required,\r\n                DecimalPlaces: 0,\r\n                MinValue: -2147483648,\r\n                MaxValue: 2147483648,\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var templateFrag = $(built(properties));\r\n            new Control(templateFrag.find(\"[data-control='numericTextBox']\"), boundObj, node);\r\n\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n\r\n    var Control = function (targetEle, boundObj, node) {\r\n\r\n        //This will be used for mobile because the numeric event wont triggering when you type in the value.\r\n        if (app.isMobile()) {\r\n            var editor = targetEle.data();\r\n            setTimeout(function () {\r\n                var number = targetEle.parent().find(\"input[type='number']\");\r\n                number.change(function () {\r\n                    boundObj.set(node.PropertyName, number.val());\r\n                });\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nDECIMAL\r\n**/\r\n\r\ndefine('forms/fields/decimal/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                //Required: false,\r\n                DecimalPlaces: 20,\r\n                MinValue: '',\r\n                MaxValue: '',\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nDOUBLE\r\n**/\r\n\r\ndefine('forms/fields/double/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                //Required: false,\r\n                DecimalPlaces: 19,\r\n                MinValue: '',\r\n                MaxValue: '',\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Format:''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/datetime/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <input name=\"<%= PropertyName %>\"\\r\\n           data-control=\"dateTimePicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-from=\"<%= FromFilter %>\"\\r\\n           data-control-to=\"<%= ToFilter %>\"\\r\\n           data-control-from-relative=\"<%= FromRelative %>\"\\r\\n           data-control-to-relative=\"<%= ToRelative %>\"\\r\\n    \\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n\\r\\n    >\\r\\n</div>';});\n\n","/**\r\nDATETIME\r\n**/\r\n\r\ndefine('forms/fields/datetime/controller',['require','text!forms/fields/datetime/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/datetime/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                FromFilter: '',\r\n                ToFilter: '',\r\n                FromRelative: '',\r\n                ToRelative: '',\r\n                Disabled: node.disabled,\r\n                Required: node.Required\r\n            };\r\n\r\n            //set from filter\r\n            if (typeof node.MinValue == \"string\") {\r\n                if (node.MinValue.indexOf(\":\") != -1) {\r\n                    properties.FromRelative = node.MinValue;\r\n                } else {\r\n                    properties.FromFilter = node.MinValue;\r\n                }\r\n            }\r\n\r\n            //set to filter\r\n            if (typeof node.MaxValue == \"string\") {\r\n                if (node.MaxValue.indexOf(\":\") != -1) {\r\n                    properties.ToRelative = node.MaxValue;\r\n                 } else {\r\n                    properties.ToFilter = node.MaxValue;\r\n                 }\r\n            }\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/userPicker/view.html',[],function () { return '<div class=\"form-group\" data-cid=\"userpicker\" data-cid-propname=\"<%= PropertyName %>\"\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>>\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input class=\"input-userpicker\"\\r\\n           data-control=\"userPicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-extra=\"<%= ExtraProps %>\"\\r\\n           data-control-delay=\"<%= Delay %>\"\\r\\n           data-control-minlength=\"<%= MinLength %>\"\\r\\n           data-control-filterbyanalyst=\"<%= FilterByAnalyst%>\"\\r\\n           data-control-maxnumberofresults=\"<%= MaxNumberOfResults%>\"\\r\\n           type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n            <% if ( Disabled ){ %>\\r\\n            disabled\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\nuserPicker\n**/\n\ndefine('forms/fields/userPicker/controller',['require','text!forms/fields/userPicker/view.html','forms/popups/userPickerPopup/controller'],function (require) {\n    var tpl = require(\"text!forms/fields/userPicker/view.html\");\n    var userPickerPopup = require(\"forms/popups/userPickerPopup/controller\");\n    var definition = {\n        template: tpl,\n        build: function (vm, node, callback) {\n            if (_.isUndefined(node.vm)) {\n                boundObj = node;\n                name = node.PropertyName;\n            } else {\n                boundObj = node.vm;\n                name = node.PropertyName;\n            }\n            // add default values\n            var properties = {\n                Required: node.Required, // TODO: yo, this is stupid. fix it.\n                Disabled: node.disabled, // TODO: yo, this is stupid. fix it.\n                ExtraProps: false,\n                Delay: 200,\n                MinLength: 3,\n                FilterByAnalyst: false,\n                MaxNumberOfResults: 10\n            }\n            $.extend(true, properties, node);\n            var built = _.template(tpl);\n            var templateFrag = $(built(properties));\n            var popupWindow = userPickerPopup.getPopup();\n\n            // comment out next two lines to go back to using app.controls\n            var objectPicker = new Control(templateFrag.find(\"[data-control='userPicker']\"), boundObj, name, popupWindow);\n            templateFrag.find(\"[data-control='userPicker']\").attr(\"data-control\", \"userPickerBound\");\n\n            callback(templateFrag);\n        }\n    }\n\n    // NAME/ID pair data model\n    // used to map name/id to server or viewModel\n    // Generic getter and setters:  name,id\n    var NameIdModel = function (nameProp, idProp) {\n        var self = this;\n        this.serverNameProp = nameProp;\n        this.serverIdProp = idProp;\n        var data = {};\n        data[self.serverNameProp];\n        data[self.serverIdProp];\n        this.set = {\n            name: function (val) { data[self.serverNameProp] = val; },\n            id: function (val) { data[self.serverIdProp] = val; }\n        }\n        this.setObj = function (name, id) {\n            self.set.name(name); self.set.id(id);\n        }\n        this.setFromObj = function (obj) {\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\n        }\n        this.get = {\n            name: function () { return data[self.serverNameProp]; },\n            id: function () { return data[self.serverIdProp]; }\n        }\n        this.getFromObj = function (obj) {\n            self.setFromObj(obj);\n            return data;\n        }\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\n        this.getGenericFromObj = function (obj) {\n            this.setFromObj(obj);\n            return {\n                name: self.get.name(),\n                id: self.get.id()\n            }\n        }\n\n    }\n    // CONTROL\n    var Control = function (targetEle, boundObj, name, popupWindow) {\n        // control parameters\n        var targetEle = targetEle;\n        var extraProps = targetEle.attr(\"data-control-extra\");\n        var delay = targetEle.attr(\"data-control-delay\");\n        var minLength = targetEle.attr(\"data-control-minlength\");\n        var filterByAnalyst = targetEle.attr(\"data-control-filterByAnalyst\");\n        var maxNumberOfResults = targetEle.attr(\"data-control-maxNumberOfResults\");\n        var autoCompleteUrl = \"/api/V3/User/GetUserList\";\n        var detailsPopupUrl = \"/Search/ObjectViewer\";\n        var objectExtraUrl = \"/Search/GetObjectPropertiesByProjection?projectionId=490ab845-b14c-1d91-c39f-bb9e8a350933&id=\";\n        var boundObj = boundObj;\n        var propName = name;\n        var popupWindow = popupWindow;\n\n        // viewModel getters/setters\n        var _textProp = \"DisplayName\";\n        var _idProp = \"BaseId\";\n        var _model = new NameIdModel(_textProp, _idProp);\n        app.lib.forceKendoProp(boundObj, propName, kendo.observable(_model.getObj(null, null)));\n        var get = {\n            obj: function () { return boundObj[propName]; },\n            name: function () { return boundObj[propName][_textProp]; },\n            id: function () { return boundObj[propName][_idProp]; }\n        }\n        var set = {\n            obj: function (name, id) {\n                boundObj[propName].set(_idProp, id);\n                boundObj[propName].set(_textProp, name);\n            }\n        }\n\n        // private properties\n        var helperBlock;\n        var autoComplete;\n\n\n        /*******************/\n        /*** CONSTRUCT *****/\n        /*******************/\n\n        var __construct = function () {\n            createHelperBlock();\n            createAutocomplete();\n            refreshDisplayValues();\n            bindEvents();\n        }\n\n        /************************/\n        /*** CONTROL EVENTS *****/\n        /************************/\n\n        var bindEvents = function () {\n            boundObj[name].bind(\"change\", function () {\n                refreshDisplayValues();\n            });\n        }\n\n        /******************************/\n        /*** CONTROL USER ACTIONS *****/\n        /******************************/\n\n        var onAutoCompleteValueChanged = function (obj) {\n            if (obj) {\n                set.obj(obj.name, obj.id);\n            } else {\n                set.obj(null, null);\n            }\n        }\n        var onSearchIconClick = function () {\n            popupWindow.setSaveCallback(function (obj) {\n                set.obj(obj.name, obj.id);\n            });\n            popupWindow.vm.filterByAnalyst = filterByAnalyst;\n            popupWindow.open();\n        }\n\n        /*************************/\n        /*** CONTROL METHODS *****/\n        /*************************/\n\n        //do we have a model set in the bound object\n        //not sure what the get object is -jk\n        var isModelSet = function () {\n            return (boundObj && boundObj[name] && get.name() && get.id()) ? true : false;\n        }\n\n        //lets check for boundObject that is nulled\n        var isModelSetNulled = function () {\n            return (boundObj && boundObj[name] && _.isNull(get.name()) && _.isNull(get.id()) ) ? true : false;\n        }\n\n        var hasExtraProps = function () {\n            return (extraProps && extraProps != \"false\");\n        }\n        var createHelperBlock = function () {\n            if (hasExtraProps()) {\n                helperBlock = new HelperBlock({\n                    url: objectExtraUrl,\n                    container: targetEle.parent(),\n                    props: extraProps.split(\",\")\n                });\n            }\n        }\n        var createAutocomplete = function () {\n            autoComplete = new AutoComplete({\n                url: autoCompleteUrl,\n                detailsUrl: detailsPopupUrl,\n                targetEle: targetEle,\n                delay: delay,\n                minLength: minLength,\n                callback: onAutoCompleteValueChanged,\n                maxNumberOfResults: maxNumberOfResults\n            });\n        }\n        var refreshDisplayValues = function () {\n\n            if (isModelSet()) {\n                if (helperBlock) {\n                    helperBlock.setDisplay(get.id());\n                }\n                if (autoComplete) {\n                    autoComplete.setValue(get.name(), get.id());\n                }\n            }\n            /**Added to fix Task/BUG 2148: When using the Assign to Analyst by group task (where there is no assigned to user) in the portal, \n            then select an analyst and click \"cancel\" the analyst still appears on the form.**/\n            else if (isModelSetNulled()) {\n                if (autoComplete) {\n                    autoComplete.setValue(\"\", null);\n                }\n            }\n        }\n\n        /****************************/\n        /*** CONTROL SUBCLASSES *****/\n        /****************************/\n\n        /* -- HelperBlock --\n            // params\n                settings = {\n                    url: \"\", // url to get object extra props\n                    container: jqEle, // where helpblock will get appended\n                    props: [], // array of property names to be displayed in order\n                    delay: \"\", //numeric delay in ms before search is performed\n                    minLength: \"\", //numeric length of chars before search is performed\n                }\n            // public methods\n                obj.setDisplay(objectId) /// goes to server then displays helper data for that objectId\n        */\n        var HelperBlock = function (settings) {\n            var self = this;\n            var html;\n            var _vm;\n            var container = settings.container;\n            var url = settings.url;\n            var props = settings.props;\n\n            // CONSTRUCT\n\n            var __construct = function () {\n                createHtml();\n                createViewModel();\n                bindEvents();\n                self.setDisplay = _vm.getUserObjectData;\n            }\n\n            // EVENTS\n\n            var bindEvents = function () {\n                _vm.bind(\"change\", function (e) {\n                    if (e.field == \"extraPropText\") {\n                        _vm.set(\"isVisible\", (_vm.extraPropText.length > 0));\n                    } else if (e.field == \"data\") {\n                        setExtraPropsDisplay();\n                    }\n                });\n            }\n\n            // ACTIONS\n\n            // METHODS\n\n            var createHtml = function () {\n                // note: move this to definition.html\n                html = $('<span>', { \"class\": \"help-block\", \"data-bind\": \"text: extraPropText, visible: isVisible\" });\n                setTimeout(function () {\n                    container.append(html);\n                }, 100);\n            }\n            var createViewModel = function () {\n                _vm = kendo.observable({\n                    isVisible: false,\n                    extraPropText: \"\",\n                    data: {},\n                    getUserObjectData: getUserObjectData\n                });\n                kendo.bind(html, _vm);\n            }\n\n            var getUserObjectData = function (objectId) {\n                $.get(url + objectId, function (data) {\n                    if (data && data[0]) {\n                        data = data[0];\n                    }\n                    _vm.set(\"data\", data);\n                    setExtraPropsDisplay();\n                });\n            }\n\n            var getDisplayName = function (obj) {\n                var displayName = \"\";\n                if (!_.isUndefined(obj.Name) && !_.isNull(obj.Name)) {\n                    displayName = obj.Name;\n                }\n                if (!_.isUndefined(obj.DisplayName) && !_.isNull(obj.DisplayName)) {\n                    displayName = obj.DisplayName;\n                }\n                return displayName;\n            }\n\n            var setExtraPropsDisplay = function () {\n                var str = \"\";\n                $.each(props, function (i, item) {\n                    var dataItem = _vm.data[item];\n                    if (dataItem) {\n                        str += (_.isObject(dataItem) ? getDisplayName(dataItem) : dataItem) + \", \";\n                    }\n                });\n                _vm.set(\"extraPropText\", str.substring(0, str.length - 2));\n            }\n\n            // END\n\n            __construct();\n        }\n\n        /* -- Autocomplete --\n            // params\n                settings = {\n                    url: \"\", // url for datasource\n                    targetEle: jqEle, // element to apply autocomplete\n                    callback: function(obj){} // fired when object is change via autocomplete, provides selected object or null values\n                }\n            // public methods\n        */\n        var AutoComplete = function (settings) {\n            // settings\n            var self = this;\n            var targetEle = settings.targetEle;\n            var url = settings.url;\n            var detailsUrl = settings.detailsUrl;\n            var callback = settings.callback; // \n            var delay = settings.delay; // \n            var minLength = settings.minLength; // \n            var placeHolderText = (targetEle.attr('disabled')) ? \"\" : localization.SearchButton;\n\n            // private params\n            var autoComplete;\n            var dataSource;\n            var focusedItemIndex = false\n            var searchBtn;\n            var detailsBtn;\n            var detailsPopupEle;\n            var detailsPopup;\n            var _textProp = \"Name\";\n            var _idProp = \"Id\";\n            var _model = new NameIdModel(_textProp, _idProp);\n            var hasTCCURL = !_.isNull(session.consoleSetting.TrueControlCenterURL) && (session.consoleSetting.TrueControlCenterURL != \"\");\n\n            // CONSTRUCT\n\n            var __construct = function () {\n                createKendoDataSource();\n                createKendoAutoComplete();\n                createSearchButton();\n                hasTCCURL ? createTCCDetailsButton() : createDetailsButton();\n                createDetailsPopup();\n                bindEvents();\n                self.setValue = setValue;\n            }\n\n            // EVENTS\n\n            var bindEvents = function () {\n                autoComplete.bind(\"select\", function (e) {\n                    var obj = this.dataItem(e.item.index());\n                    callback(_model.getGenericFromObj(obj));\n                });\n                autoComplete.bind(\"change\", function (e) {\n                    validateAutoCompleteValue();\n                    callback(_model.getGenericFromObj(getDataSourceMatch(autoComplete.value())));\n                });\n                autoComplete.bind(\"dataBound\", function (e) {\n                    e.sender.ul.find(\"li\").first().addClass(\"k-state-hover\");\n                });\n                targetEle.on(\"keyup\", function (e) {\n                    if (e.which == 40 && !autoComplete.ul.is(\":visible\")) { //down arrow\n                        autoComplete.search(autoComplete.value());\n                        validateAutoCompleteValue();\n                    }\n                    else if (e.which != 13 && e.which != 9) { //enter\n                        focusedItemIndex = getFocusedIndex();\n                        validateAutoCompleteValue();\n                    }\n\n                });\n                targetEle.on(\"keydown\", function (e) {\n                    if (e.which == 13) {\n                        // enter click select first match in dropdown or focused\n                        var children = autoComplete.ul.children();\n                        if (children.length && autoComplete.ul.is(\":visible\")) {\n                            var index = (focusedItemIndex !== false) ? focusedItemIndex : 0;\n                            autoComplete.select(autoComplete.ul.children().eq(index));\n                            validateAutoCompleteValue();\n                        } else { //if enter is hit and we have no child do a search\n                            autoComplete.search(autoComplete.value());\n                        }\n                    }\n                });\n\n                //we need blur so we can handle tabbing out\n                targetEle.on(\"blur\", function (e) {\n                    focusedItemIndex = getFocusedIndex();\n                    validateAutoCompleteValue(true);\n                });\n\n                //handle copy-paste event\n                targetEle.on(\"input propertychange\", function (e) {\n                    //perform autocomplete search if search box is not empty\n                    if (e.currentTarget.value != \"\") {\n                        autoComplete.search(e.currentTarget.value);\n                        validateAutoCompleteValue();\n                    }\n                });\n\n                detailsPopup.bind(\"close\", function () {\n                    detailsPopupEle.find(\".k-content\").html('');\n                });\n                searchBtn.click(onSearchIconClick);\n                detailsBtn.click(onDetailsBtnClick);\n            }\n\n            // ACTIONS\n\n            var onDetailsBtnClick = function (e) {\n                hasTCCURL ? e.stopPropagation() : openModal();\n            }\n\n            var openSlideout = function (e) {\n                var userObj = { BaseId: _model.get.id(), Name: _model.get.name() }\n                var src = app.slideOutNav.getTCCSourceURL(userObj, \"user\");\n                var options = {\r\n                    url: src,\r\n                    tooltip: localization.UserManagement\r\n                }\n                app.slideOutNav.show(options);\n            }\n\n            var openModal = function (e) {\n                detailsPopup.refresh({\n                    url: detailsUrl,\n                    data: { id: _model.get.id() }\n                });\n                detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\n                detailsPopup.title(_model.get.name()).center().open();\n            }\n\n            // METHODS\n\n            var createSearchButton = function () {\n                searchBtn = $(\"<div>\", { \"class\": \"searchIcon\", \"data-control-action\": \"userPickerWindow\" });\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\n                var a = $(\"<i>\", { \"class\": \"fa fa-search cursor-pointer \" + iconColor })\n                searchBtn.append(a);\n                //don't want to  show search icon if field is disabled\n                if (!targetEle.attr('disabled') || app.isMobileDevice()) {\n                    searchBtn.insertAfter(targetEle);\n                }\n            }\n            var createDetailsButton = function () {\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\n                detailsBtn = $(\"<i>\", { \"class\": \"fa fa-info-circle cursor-pointer info-icon \" + iconColor });\n                detailsBtn.insertBefore(targetEle);\n                detailsBtn.hide();\n            }\n\n            var createTCCDetailsButton = function () {\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\n                detailsBtn = $(\"<ul>\", { \"class\": \"menu-usr-mgt\" });\n                detailsBtn.insertBefore(targetEle);\n                detailsBtn.hide();\n\n                detailsBtn.kendoMenu({\n                    dataSource: [\n                        {\n                            text: \"<i class='fa fa-info-circle cursor-pointer'></i>\",\n                            encoded: false,\n                            items: [\n                                {\n                                    text: localization.UserManagement,\n                                    imageUrl: \"/Content/Images/Icons/Other/control-center-launcher.png\",\n                                    imageAttr: {\n                                        height: '16px',\n                                        width: '16px'\n                                    },\n                                    attr: {\n                                        custom: 'tcc' //custom attribute holds the link type\n                                    }\n                                },\n                                {\n                                    text: \"<i class='fa fa-info-circle cursor-pointer' style='margin: -2px 7px 0 -3px;'></i>\"+localization.AdditionalDetails,\n                                    encoded: false,\n                                    attr: {\n                                        custom: 'info' //custom attribute holds the link type\n                                    }\n                                }\n                            ]\n                        }\n                    ],\n                    select: function (e) {\n                        if (!_.isUndefined(e.item.attributes[\"custom\"])) {\n                            var type = e.item.attributes[\"custom\"].value;\n                            (type == \"tcc\") ? openSlideout() : openModal();\n                        }\n                    },\n                    openOnClick: true\n                });\n            }\n\n            var createKendoDataSource = function () {\n                dataSource = new kendo.data.DataSource({\n                    transport: {\n                        read: {\n                            url: url,\n                            data: {\n                                userFilter: function () {\n                                    return autoComplete.value();\n                                },\n                                filterByAnalyst: filterByAnalyst,\n                                maxNumberOfResults: settings.maxNumberOfResults\n                            }\n                        }\n                    },\n                    serverFiltering: true\n                });\n            }\n            var createKendoAutoComplete = function () {\n                autoComplete = targetEle.kendoAutoComplete({\n                    dataTextField: _textProp,\n                    suggest: true,\n                    placeholder: placeHolderText + \"...\",\n                    valuePrimitive: false,\n                    dataSource: dataSource,\n                    delay: delay,\n                    minLength: minLength,\n                    enable: (targetEle.attr('disabled')) ? false : true,\n                    clearButton: false\n                }).data(\"kendoAutoComplete\");\n\n            }\n            var createDetailsPopup = function () {\n                detailsPopupEle = $(\"<div>\");\n                detailsPopupEle.appendTo(\"body\");\n                detailsPopup = detailsPopupEle.kendoCiresonWindow({\n                    title: \"\",\n                    width: 550,\n                    height: 500,\n                    actions: [\"Close\"]\n                }).data(\"kendoWindow\");\n            }\n\n            var validateAutoCompleteValue = function (blurred) {\n                var match = getDataSourceMatch(autoComplete.value());\n                if (!match && autoComplete.value() != \"\") { //empty values are valid bug 494\n                    detailsBtn.hide();\n                    if (targetEle.is(\":focus\") && !blurred) {\n                        // invalid while typing\n                        targetEle.css({\n                            \"text-decoration\": \"none\",\n                            \"background-color\": (targetEle.attr('disabled')) ? \"#a1a1a1\" : \"#fff\"\n                        });\n                    } else {\n                        // invalid after blur\n                        targetEle.css({\n                            \"text-decoration\": \"none\",\n                            \"background-color\": \"#FBE3E4\"\n                        });\n                        //add the invalid data attribute\n                        targetEle.attr('data-invalid', '');\n                    }\n                } else {\n                    // valid\n\n                    //remove the invalid data attribute\n                    targetEle.removeAttr('data-invalid', '');\n\n                    //do we actually have a value to show the extension properties for\n                    if (autoComplete.value() === \"\") {\n                        detailsBtn.hide();\n                    } else {\n                        detailsBtn.show();\n\n                        targetEle.css({\n                            \"text-decoration\": \"underline\"\n                        });\n                    }\n\n                    targetEle.css({\n                        \"background-color\": (targetEle.attr('disabled')) ? \"#eee\" : \"#fff\"\n                    });\n                }\n            }\n\n            var getDataSourceMatch = function (val) {\n                var ds = _.clone(dataSource);\n                var view = ds.view();\n\n                // matching needs to be case insensitive\n                var match = false;\n                $.each(view, function (i, item) {\n                    if (item.Name.toLowerCase() == val.toLowerCase()) {\n                        match = item;\n                    }\n                });\n                return match;\n            }\n            var setValue = function (name, id) {\n                dataSource.add(_model.getObj(name, id));\n                autoComplete.value(name);\n                validateAutoCompleteValue();\n            }\n            var getFocusedIndex = function () {\n                var focused = autoComplete.ul.find(\".k-state-focused\");\n                return (focused.length) ? focused.index() : false;\n            }\n\n            // END\n\n            __construct();\n        }\n\n        /*************/\n        /*** END *****/\n        /*************/\n\n        __construct();\n\n    }\n\n    return definition;\n\n});\n","\ndefine('text!forms/fields/objectPicker/view.html',[],function () { return '<div class=\"form-group\" data-cid=\"objectpicker\" data-cid-propname=\"<%= PropertyName %>\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input class=\"input-userpicker\"\\r\\n           data-control=\"objectPicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-extra=\"<%= ExtraProps %>\"\\r\\n           type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n            <% if ( Disabled ){ %>\\r\\n            disabled\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>\\r\\n    />\\r\\n</div>';});\n\n","\ndefine('text!forms/popups/objectPickerPopup/view.html',[],function () { return '<div id=\"ObjectPickerPopupWindow\" class=\"cireson-window defined-form task-window\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"col-group\">\\r\\n                <div class=\"c2\">\\r\\n                    <label data-bind=\"text: searchText\"></label>\\r\\n                    <span class=\"k-textbox\">\\r\\n                        <input class=\"textbox-padding-right\" type=\"text\" data-value-update=\"keyup\" data-bind=\"value: searchValue, events: { keypress: searchOnEnter }\">\\r\\n                        <a data-bind=\"click: search\" class=\"cursor-pointer fa fa-search\"></a>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div>\\r\\n                <label data-bind=\"text: selectObjectText\"></label>\\r\\n                <div data-control-grid=\"userPickerGrid\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\"cireson-window--footer window-buttons objectPicker-single-grid\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nobjectPickerPopup\r\n**/\r\nvar __objectPickerPopupSingleton;\r\n\r\ndefine('forms/popups/objectPickerPopup/controller',['require','text!forms/popups/objectPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/objectPickerPopup/view.html\");\r\n    var singletonName = \"objectPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (classId, BaseId) {\r\n            //BaseId will be used to remove it self from the list.\r\n            //need a specific instance per classId, so this singleton is a hash\r\n            if (__objectPickerPopupSingleton && __objectPickerPopupSingleton[classId]) {\r\n                return __objectPickerPopupSingleton[classId];\r\n            }\r\n\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n            var classId = classId;\r\n            var objectPickerPopup = ele.data(singletonName);\r\n\r\n            $(\"body\").append(ele);\r\n            __objectPickerPopupSingleton = new ObjectPickerPopup(ele, classId, BaseId);\r\n\r\n            return __objectPickerPopupSingleton;\r\n        }\r\n    }\r\n\r\n    /* -- ObjectPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            open = function(classId){ // opens popup with this classId }\r\n            close = function(){ // closes popup }\r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback(obj){  } returns selected user object\r\n    */\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // CONTROL\r\n    var ObjectPickerPopup = function (targetEle, classId, BaseId) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var classId = classId;\r\n        var gridHtml = targetEle.find(\"[data-control-grid]\");\r\n        var grid;\r\n        var gridUrl = \"/ConfigItems/GetObjectSearchResults\";\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"DisplayName\";\r\n        var _idProp = \"Id\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                searchText: localization.SearchText,\r\n                selectObjectText: localization.SelectObject,\r\n                searchValue: \"\",\r\n                okText: localization.OK,\r\n                cancelText: localization.Cancel,\r\n                search: onSearchClick,\r\n                searchOnEnter: function (e) {\r\n                    if (e.which == 13) {\r\n                        e.preventDefault();\r\n                        onSearchClick();\r\n                    }\r\n                },\r\n                save: onSaveClick,\r\n                cancel: onCancelClick\r\n            });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            createGrid();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n            self.vm = _vm;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n\r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSearchClick = function () {\r\n            grid.search(_vm.searchValue);\r\n        }\r\n        var onSaveClick = function () {\r\n            var selectedRow = grid.kendoGrid.select();\r\n            if (selectedRow) {\r\n                var obj = _model.getGenericFromObj(grid.kendoGrid.dataItem(selectedRow));\r\n                $(self).trigger(\"save\", obj);\r\n                closePopup();\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n\r\n        var openPopup = function () {\r\n            //clear out search box value and search results before opening the window\r\n            self.vm.set(\"searchValue\", \"\");\r\n            grid.kendoDataSource.data([]);\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup();\r\n        }\r\n        var createGrid = function () {\r\n            grid = new Grid({\r\n                html: gridHtml,\r\n                url: gridUrl\r\n            });\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function () {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            // ACTIONS\r\n\r\n            // METHODS\r\n\r\n            var createKendoWindow = function () {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: localization.SelectObject,\r\n                    content: null,\r\n                    width: 680,\r\n                    height: 400,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Grid --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n        */\r\n        var Grid = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var html = settings.html;\r\n            var url = settings.url;\r\n            var height = 150;\r\n            var kendoGrid;\r\n            var kendoDataSource;\r\n            var searchValue;\r\n            // private params           \r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoGrid();\r\n                kendoGrid.pager.element.hide();\r\n                bindEvents();\r\n                self.kendoGrid = kendoGrid;\r\n                self.kendoDataSource = kendoDataSource;\r\n                self.search = search;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                kendoGrid.bind(\"dataBound\", function (e) {\r\n                    kendoGrid.pager.element.show();\r\n                });\r\n                kendoGrid.element.on(\"dblclick\", \"tbody>tr\", onRowDblClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onRowDblClick = function () {\r\n                kendoGrid.select($(this));\r\n                onSaveClick();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var search = function (value) {\r\n                searchValue = value;\r\n                kendoDataSource.read();\r\n                if (!_.isUndefined(BaseId) || BaseId != \"\")\r\n                    kendoGrid.dataSource.filter([{ field: \"Id\", operator: \"neq\", value: BaseId }]);\r\n                kendoDataSource.page(1);\r\n            }\r\n            var createKendoDataSource = function () {\r\n                kendoDataSource = new kendo.data.DataSource({\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": url,\r\n                            \"data\": function () {\r\n                                return {\r\n                                    searchFilter: function () {\r\n                                        return searchValue;\r\n                                    },\r\n                                    classId: function () {\r\n                                        return classId;\r\n                                    },\r\n                                    groupFilter: \"\"\r\n                                }\r\n                            },\r\n                            \"type\": \"GET\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": 15,\r\n                    \"page\": 1,\r\n                    \"total\": 0,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                        \"model\": {\r\n                            \"fields\": {\r\n                                \"Id\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"ObjectClassId\": {\r\n                                    \"type\": \"number\"\r\n                                },\r\n                                \"ObjectClassName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"DisplayName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Path\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Hosted\": {\r\n                                    \"type\": \"number\"\r\n                                },\r\n                                \"LastModified\": {\r\n                                    \"type\": \"date\"\r\n                                },\r\n                                \"Status\": {\r\n                                    \"type\": \"string\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            var createKendoGrid = function () {\r\n                kendoGrid = html.kendoGrid({\r\n                    height: height,\r\n                    dataSource: kendoDataSource,\r\n                    selectable: \"Single,Row\",\r\n                    sortable: { mode: \"multiple\" },\r\n                    pageable: true,\r\n                    filterable: {\r\n                        extra: false,\r\n                        operators: {\r\n                            string: {\r\n                                startswith: localization.Startswith,\r\n                                contains: localization.Contains,\r\n                                eq: localization.Isequalto,\r\n                                neq: localization.Isnotequalto\r\n                            }\r\n                        }\r\n                    },\r\n                    autoBind: false,\r\n                    columns: [{\r\n                        \"title\": \"Id\",\r\n                        \"hidden\": true,\r\n                        \"field\": \"Id\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.DisplayName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"field\": \"DisplayName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Class,\r\n                        \"field\": \"ObjectClassName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Path,\r\n                        \"field\": \"Path\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }],\r\n                }).data(\"kendoGrid\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n\r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","/**\r\nobjectPicker\r\n**/\r\n\r\ndefine('forms/fields/objectPicker/controller',['require','text!forms/fields/objectPicker/view.html','forms/popups/objectPickerPopup/controller'],function (require) {\r\n    var tpl = require(\"text!forms/fields/objectPicker/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/objectPickerPopup/controller\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //console.log(node);\r\n            boundObj = node.vm;\r\n            name = node.PropertyName;\r\n            // add default values\r\n            var properties = {\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                ExtraProps: false,\r\n                ClassId: false // this is a required\r\n            }\r\n            $.extend(true, properties, node);\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(properties));\r\n            var popupWindow = objectPickerPopup.getPopup(properties.ClassId, boundObj.BaseId);\r\n\r\n            // comment out next two lines to go back to using app.controls\r\n            var objectPicker = new Control(templateFrag.find(\"[data-control='objectPicker']\"), boundObj, name, popupWindow, properties.ClassId, callback);\r\n            templateFrag.find(\"[data-control='objectPicker']\").attr(\"data-control\", \"objectPickerBound\");\r\n\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function isArray(ob) {\r\n        return Object.prototype.toString.call(ob) === '[object Array]';\r\n    }\r\n    // CONTROL\r\n    var Control = function (targetEle, boundObj, name, popupWindow, classId, callback) {\r\n        \r\n        // control parameters\r\n        var targetEle = targetEle;\r\n        var extraProps = targetEle.attr(\"data-control-extra\");\r\n        var autoCompleteUrl = \"/ConfigItems/GetObjectSearchResults\";\r\n        var detailsPopupUrl = \"/Search/ObjectViewer\";\r\n        var objectExtraUrl = \"/Search/GetObjectPropertiesByProjection?projectionId=490ab845-b14c-1d91-c39f-bb9e8a350933&id=\";\r\n        var boundObj = boundObj;\r\n        var propName = name;\r\n        var popupWindow = popupWindow;\r\n        var classId = classId;\r\n\r\n        // viewModel getters/setters\r\n        var _textProp = \"DisplayName\";\r\n        var _idProp = \"BaseId\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n        app.lib.forceKendoProp(boundObj, propName, kendo.observable(_model.getObj(null, null)));\r\n        var get = {\r\n            obj: function () { return boundObj[propName].length > 0 ? getIndexZero(boundObj[propName], null) : boundObj[propName]; },\r\n            name: function () { return boundObj[propName].length > 0 ? getIndexZero(boundObj[propName], _textProp) : boundObj[propName][_textProp]; },\r\n            id: function () { return boundObj[propName].length > 0 ? getIndexZero(boundObj[propName], _idProp) : boundObj[propName][_idProp]; }\r\n        }\r\n        var set = {\r\n            obj: function (name, id) {\r\n                if (boundObj[propName].length > 0) {\r\n                    \r\n                    boundObj[propName][0].set(_idProp, id);\r\n                    boundObj[propName][0].set(_textProp, name);\r\n                } else {\r\n                    boundObj[propName].set(_idProp, id);\r\n                    boundObj[propName].set(_textProp, name);\r\n                }\r\n            }\r\n        }\r\n\r\n        var getIndexZero = function (obj, property) {\r\n            var _obj = obj[0];\r\n            if (classId.toLowerCase() == _obj[\"ClassTypeId\"].toLowerCase()) {\r\n                if (property != null) {\r\n                    return _obj[property];\r\n                }\r\n                else {\r\n                    return _obj;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n\r\n        }\r\n\r\n        \r\n\r\n        // private properties\r\n        var helperBlock;\r\n        var autoComplete;\r\n\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            createHelperBlock();\r\n            createAutocomplete();\r\n            refreshDisplayValues();\r\n            bindEvents();\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n            boundObj[name].bind(\"change\", function () {\r\n                refreshDisplayValues();\r\n            });\r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onAutoCompleteValueChanged = function (obj) {\r\n            if (obj) {\r\n                set.obj(obj.name, obj.id);\r\n            } else {\r\n                set.obj(null, null);\r\n            }\r\n        }\r\n        var onSearchIconClick = function () {\r\n            popupWindow.setSaveCallback(function (obj) {\r\n                if (boundObj.BaseId != obj.id) {\r\n                    set.obj(obj.name, obj.id);\r\n                }\r\n            });\r\n            popupWindow.open();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n\r\n        var isModelSet = function () {\r\n            return (boundObj && boundObj[name] && get.name() && get.id()) ? true : false;\r\n        }\r\n        var hasExtraProps = function () {\r\n            return (extraProps && extraProps != \"false\");\r\n        }\r\n        var createHelperBlock = function () {\r\n            if (hasExtraProps()) {\r\n                helperBlock = new HelperBlock({\r\n                    url: objectExtraUrl,\r\n                    container: targetEle.parent(),\r\n                    props: extraProps.split(\",\")\r\n                });\r\n            }\r\n        }\r\n        var createAutocomplete = function () {\r\n            autoComplete = new AutoComplete({\r\n                url: autoCompleteUrl,\r\n                detailsUrl: detailsPopupUrl,\r\n                targetEle: targetEle,\r\n                callback: onAutoCompleteValueChanged\r\n            });\r\n        }\r\n        var refreshDisplayValues = function () {\r\n            if (isModelSet()) {\r\n                if (helperBlock) {\r\n                    helperBlock.setDisplay(get.id());\r\n                }\r\n                if (autoComplete) {\r\n                    autoComplete.setValue(get.name(), get.id());\r\n                }\r\n            }\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- HelperBlock --\r\n            // params\r\n                settings = {\r\n                    url: \"\", // url to get object extra props\r\n                    container: jqEle, // where helpblock will get appended\r\n                    props: [], // array of property names to be displayed in order\r\n                }\r\n            // public methods\r\n                obj.setDisplay(objectId) /// goes to server then displays helper data for that objectId\r\n        */\r\n        var HelperBlock = function (settings) {\r\n            var self = this;\r\n            var html;\r\n            var _vm;\r\n            var container = settings.container;\r\n            var url = settings.url;\r\n            var props = settings.props;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createHtml();\r\n                createViewModel();\r\n                bindEvents();\r\n                self.setDisplay = _vm.getUserObjectData;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                _vm.bind(\"change\", function (e) {\r\n                    if (e.field == \"extraPropText\") {\r\n                        _vm.set(\"isVisible\", (_vm.extraPropText.length > 0));\r\n                    } else if (e.field == \"data\") {\r\n                        setExtraPropsDisplay();\r\n                    }\r\n                });\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            // METHODS\r\n\r\n            var createHtml = function () {\r\n                // note: move this to definition.html\r\n                html = $('<span>', { \"class\": \"help-block\", \"data-bind\": \"text: extraPropText, visible: isVisible\" });\r\n                setTimeout(function () {\r\n                    container.append(html);\r\n                }, 100);\r\n            }\r\n            var createViewModel = function () {\r\n                _vm = kendo.observable({\r\n                    isVisible: false,\r\n                    extraPropText: \"\",\r\n                    data: {},\r\n                    getUserObjectData: getUserObjectData\r\n                });\r\n                kendo.bind(html, _vm);\r\n            }\r\n\r\n            var getUserObjectData = function (objectId) {\r\n                $.get(url + objectId, function (data) {\r\n                    if (data && data[0]) {\r\n                        data = data[0];\r\n                    }\r\n                    _vm.set(\"data\", data);\r\n                    setExtraPropsDisplay();\r\n                });\r\n            }\r\n\r\n            var setExtraPropsDisplay = function () {\r\n                var str = \"\";\r\n                $.each(props, function (i, item) {\r\n                    if (_vm.data[item]) {\r\n                        str += _vm.data[item] + \", \";\r\n                    }\r\n                });\r\n                _vm.set(\"extraPropText\", str.substring(0, str.length - 2));\r\n            }\r\n\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Autocomplete --\r\n            // params\r\n                settings = {\r\n                    url: \"\", // url for datasource\r\n                    targetEle: jqEle, // element to apply autocomplete\r\n                    callback: function(obj){} // fired when object is change via autocomplete, provides selected object or null values\r\n                }\r\n            // public methods\r\n        */\r\n        var AutoComplete = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var targetEle = settings.targetEle;\r\n            var url = settings.url;\r\n            var detailsUrl = settings.detailsUrl;\r\n            var placeHolderText = (targetEle.attr('disabled')) ? \"\" : localization.SearchPlaceholder;\r\n            var callback = settings.callback; // \r\n            // private params\r\n            var autoComplete;\r\n            var dataSource;\r\n            var focusedItemIndex = false\r\n            var searchBtn;\r\n            var detailsBtn;\r\n            var detailsPopupEle;\r\n            var detailsPopup;\r\n            var _textProp = \"DisplayName\";\r\n            var _idProp = \"Id\";\r\n            var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoAutoComplete();\r\n                createSearchButton();\r\n                createDetailsButton();\r\n                createDetailsPopup();\r\n                bindEvents();\r\n                self.setValue = setValue;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                autoComplete.bind(\"select\", function (e) {\r\n                    var obj = this.dataItem(e.item.index());\r\n                    callback(_model.getGenericFromObj(obj));\r\n                });\r\n                autoComplete.bind(\"change\", function (e) {\r\n                    validateAutoCompleteValue();\r\n                    callback(_model.getGenericFromObj(getDataSourceMatch(autoComplete.value())));\r\n                });\r\n                autoComplete.bind(\"dataBound\", function (e) {\r\n                    e.sender.ul.find(\"li\").first().addClass(\"k-state-hover\");\r\n                });\r\n                targetEle.on(\"keyup\", function (e) {\r\n                    if (e.which == 40 && !autoComplete.ul.is(\":visible\")) {\r\n                        autoComplete.search(autoComplete.value());\r\n                        validateAutoCompleteValue();\r\n                    }\r\n                    else if (e.which != 13) {\r\n                        focusedItemIndex = getFocusedIndex();\r\n                        validateAutoCompleteValue();\r\n                    }\r\n\r\n                });\r\n                targetEle.on(\"keydown\", function (e) {\r\n                    if (e.which == 13) {\r\n                        // enter click select first match in dropdown or focused\r\n                        var children = autoComplete.ul.children();\r\n                        if (children.length) {\r\n                            var index = (focusedItemIndex !== false) ? focusedItemIndex : 0;\r\n                            //console.log(\"in: \" + index);\r\n                            autoComplete.select(autoComplete.ul.children().eq(index));\r\n                            validateAutoCompleteValue();\r\n                        }\r\n                    }\r\n                });\r\n\r\n                //handle copy-paste event\r\n                targetEle.on(\"input propertychange\", function (e) {\r\n                    autoComplete.search(e.currentTarget.value);\r\n                    validateAutoCompleteValue();\r\n                });\r\n\r\n                detailsPopup.bind(\"close\", function () {\r\n                    detailsPopupEle.find(\".k-content\").html('');\r\n                });\r\n                searchBtn.click(onSearchIconClick);\r\n                detailsBtn.click(onDetailsBtnClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onDetailsBtnClick = function () {\r\n                detailsPopup.refresh({\r\n                    url: detailsUrl,\r\n                    data: { id: _model.get.id() }\r\n                });\r\n                detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\r\n                detailsPopup.title(_model.get.name()).center().open();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var createSearchButton = function () {\r\n                searchBtn = $(\"<div>\", { \"class\": \"searchIcon\", \"data-control-action\": \"userPickerWindow\" });\r\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\r\n                var a = (app.isMobileDevice()) ? $(\"<i>\", { \"class\": \"fa fa-search cursor-pointer \" + iconColor }) : $(\"<div>\", { \"class\": \"search fa fa-search cursor-pointer \" + iconColor });\r\n                searchBtn.append(a);\r\n                searchBtn.insertAfter(targetEle);\r\n            }\r\n            var createDetailsButton = function () {\r\n                var iconColor = !targetEle.attr('disabled') ? \"text-primary\" : \"\";\r\n                detailsBtn = (app.isMobileDevice()) ? $(\"<i>\", { \"class\": \"fa fa-info-circle cursor-pointer info-icon \" + iconColor }) : $(\"<div>\", { \"class\": \"open-modal fa fa-info-circle\" });\r\n                detailsBtn.insertBefore(targetEle);\r\n                detailsBtn.hide();\r\n            }\r\n            var createKendoDataSource = function () {\r\n                dataSource = new kendo.data.DataSource({\r\n                    transport: {\r\n                        read: {\r\n                            url: url,\r\n                            data: {\r\n                                searchFilter: function () {\r\n                                    return autoComplete.value();\r\n                                },\r\n                                classId: classId\r\n                            },\r\n                            type: \"GET\"\r\n                        }\r\n                    },\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        errors: \"Errors\"\r\n                    },\r\n                    serverFiltering: true\r\n                });\r\n            }\r\n\r\n            var preventClosing = 'init';\r\n            var createKendoAutoComplete = function () {\r\n                autoComplete = targetEle.kendoAutoComplete({\r\n                    dataTextField: _textProp,\r\n                    suggest: false,\r\n                    placeholder: placeHolderText,\r\n                    valuePrimitive: false,\r\n                    dataSource: dataSource,\r\n                    close: function (e) {\r\n                        if ($(window).scrollTop() + $(window).height() == $(document).height() && preventClosing == 'open') {\r\n                            e.preventDefault();\r\n                            preventClosing = 'close';\r\n                        }\r\n                    },\r\n                    change: function (e) {\r\n                        preventClosing = 'change';\r\n                        e.sender.close();\r\n                        \r\n                    },\r\n                    open: function (e) {\r\n                        preventClosing = 'open';\r\n                    },\r\n                    enable: (targetEle.attr('disabled')) ? false : true,\r\n                    clearButton: false\r\n                }).data(\"kendoAutoComplete\");\r\n            }\r\n            var createDetailsPopup = function () {\r\n                detailsPopupEle = $(\"<div>\");\r\n                detailsPopupEle.appendTo(\"body\");\r\n                detailsPopup = detailsPopupEle.kendoCiresonWindow({\r\n                    title: \"\",\r\n                    width: 550,\r\n                    height: 400,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n            var validateAutoCompleteValue = function () {\r\n                var match = getDataSourceMatch(autoComplete.value());\r\n                if (!match) {\r\n                    detailsBtn.hide();\r\n                    if (targetEle.is(\":focus\")) {\r\n                        // invalid while typing\r\n                        targetEle.css({\r\n                            \"text-decoration\": \"none\",\r\n                            \"background-color\": \"#fff\"\r\n                        });\r\n                    } else {\r\n                        // invalid after blur\r\n                        targetEle.css({\r\n                            \"text-decoration\": \"none\",\r\n                            \"background-color\": \"#FBE3E4\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    // valid\r\n                    detailsBtn.show();\r\n                    targetEle.css({\r\n                        \"text-decoration\": \"underline\",\r\n                        \"background-color\": \"#fff\"\r\n                    });\r\n                }\r\n            }\r\n            var getDataSourceMatch = function (val) {\r\n                var ds = _.clone(dataSource);\r\n                var view = ds.view();\r\n\r\n                // matching needs to be case insensitive\r\n                var match = false;\r\n                $.each(view, function (i, item) {\r\n                    if (item.DisplayName.toLowerCase() == val.toLowerCase()) {\r\n                        match = item;\r\n                    }\r\n                });\r\n                return match;\r\n            }\r\n            var setValue = function (name, id) {\r\n                dataSource.add(_model.getObj(name, id));\r\n                autoComplete.value(name);\r\n                validateAutoCompleteValue();\r\n            }\r\n            var getFocusedIndex = function () {\r\n                var focused = autoComplete.ul.find(\".k-state-focused\");\r\n                return (focused.length) ? focused.index() : false;\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/button/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <input type=\"button\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"button btn btn-<%= ButtonType %> btn-<%= ButtonSize %>\"\\r\\n           value=\"<%= PropertyDisplayName %>\"\\r\\n           data-bind=\"click: <%= Action %>\"\\r\\n\\r\\n            <% if ( Disabled ){ %>\\r\\n            disabled\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\r\nBUTTON\r\n**/\r\n\r\ndefine('forms/fields/button/controller',['require','text!forms/fields/button/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/button/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                PropertyName: 'defaultButton',\r\n                ButtonType: (node.ButtonType) ? node.ButtonType : 'default',\r\n                ButtonSize: (node.ButtonSize) ? node.ButtonSize : 'sm',\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/editor/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <textarea class=\"form-editor\" data-control=\"editor\" style=\"height:<%= Height %>px\" name=\"<%= PropertyName %>\">\\r\\n        <%= Content %>\\r\\n    </textarea>\\r\\n</div>\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nEDITOR\r\n**/\r\ndefine('forms/fields/editor/controller',['require','text!forms/fields/editor/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/editor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            boundObj = node.vm;\r\n            //make sure we have all the vals set\r\n            //document.write(JSON.stringify(boundObj));\r\n            var properties = {\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                Content: (boundObj[node.PropertyName]) ? $('<div/>').text(boundObj[node.PropertyName]).html() : boundObj[node.PropertyName],\r\n                Height: node.Height == null ? 440 : node.Height\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var templateFrag = $(built(properties));\r\n\r\n            new Control(templateFrag.find(\"[data-control='editor']\"), boundObj, node);\r\n            // get settings from attrs\r\n            callback(templateFrag);\r\n        }\r\n    }\r\n\r\n\r\n    var Control = function (targetEle, boundObj, node) {\r\n        if (node.Options == null) {\r\n            var defaultTools = [\r\n                    \"bold\", \"italic\", \"underline\", \"strikethrough\",\r\n                    \"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\",\r\n                    \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                    \"createLink\", \"unlink\", \"insertImage\",\r\n                    \"superscript\", \"subscript\",\r\n                    \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                    \"viewHtml\",\r\n                    \"formatting\", \"foreColor\", \"backColor\"\r\n            ];\r\n            var mobileTools = [\r\n                \"formatting\",\r\n                \"createLink\", \"unlink\", \"insertImage\",\"viewHtml\",\r\n                \"bold\", \"italic\", \"underline\",\r\n                \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\"\r\n            ];\r\n            node.Options = app.isMobileDevice() ? mobileTools : defaultTools;\r\n        }\r\n        var boundObj = boundObj;\r\n        //Need to review\r\n        setTimeout(function () {\r\n            targetEle.kendoEditor({\r\n                change: function (e) {\r\n                    boundObj.set(node.PropertyName, targetEle.val());\r\n                },\r\n                tools: node.Options,\r\n                encoded: false,\r\n                stylesheets: [\r\n                    \"/Content/Styles/cireson.main.min.css?v=\" + session.staticFileVersion\r\n                ]\r\n            });\r\n            var editor = targetEle.data(\"kendoEditor\");\r\n            boundObj.bind(\"change\", function (e) {\r\n                editor.value(boundObj[node.PropertyName]);\r\n            });\r\n            $(editor.body).addClass(\"k-editor-content-body\");\r\n        }, 100);\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/combo/view.html',[],function () { return '<div class=\"form-group\" data-bind=\"ciresonCombo: ControlObject\"\\r\\n\\r\\n<% if ( Required ){ %>\\r\\n    required\\r\\n<% } %>\\r\\n    >\\r\\n    <label data-template-part=\"labelPart\" class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n    </label>\\r\\n\\r\\n    <input class=\"form-control form-control-picker input-sm\" data-template-part=\"inputControlPart\" data-control-bind=\"<%= PropertyName %>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n         >\\r\\n    </input>\\r\\n</div>\\r\\n';});\n\n","/**\r\nCOMBO - combobox\r\n**/\r\ndefine('forms/fields/combo/controller',['require','text!forms/fields/combo/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/combo/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n            var viewModel = {\r\n                PropertyName: node.PropertyName,\r\n                PropertyDisplayName: node.PropertyDisplayName,\r\n                DataSource: {},\r\n                IsCascading: _.isUndefined(node.IsCascading) ? false : node.IsCascading,\r\n                Cascade: {},\r\n                Required: _.isUndefined(node.Required) ? false : node.Required,\r\n                Disabled: _.isUndefined(node.Disabled) ? false : node.Disabled,\r\n                ControlObject: null,\r\n                serverFiltering: _.isUndefined(node.serverFiltering) ? false : node.serverFiltering,\r\n                pageSize: _.isUndefined(node.pageSize) ? 1000 : node.pageSize,\r\n            };\r\n            $.extend(true, viewModel, node);\r\n\r\n            var view = new kendo.View(built(viewModel), { wrap: false, model: kendo.observable(viewModel) });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/dropDownList/view.html',[],function () { return '<div class=\"form-group\" data-bind=\"ciresonDropDownList: ControlObject\"\\r\\n\\r\\n<% if ( Required ){ %>\\r\\n    required\\r\\n<% } %>\\r\\n    >\\r\\n    <label data-template-part=\"labelPart\" class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n    </label>\\r\\n\\r\\n    <input class=\"form-control form-control-picker input-sm\" data-template-part=\"inputControlPart\" data-control-bind=\"<%= PropertyName %>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n         >\\r\\n    </input>\\r\\n</div>\\r\\n';});\n\n","/**\r\nCOMBO - combobox\r\n**/\r\ndefine('forms/fields/dropDownList/controller',['require','text!forms/fields/dropDownList/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/dropDownList/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n            var viewModel = {\r\n                PropertyName: node.PropertyName,\r\n                PropertyDisplayName: node.PropertyDisplayName,\r\n                DataSource: {},\r\n                Required: _.isUndefined(node.Required) ? false : node.Required,\r\n                Disabled: _.isUndefined(node.Disabled) ? false : node.Disabled,\r\n                ControlObject: null\r\n            };\r\n            $.extend(true, viewModel, node);\r\n\r\n            var view = new kendo.View(built(viewModel), { wrap: false, model: kendo.observable(viewModel) });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/bundle/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n    <button data-role=\"button\"\\r\\n            class=\"btn btn-primary\"\\r\\n            data-sprite-css-class=\"k-icon k-edit\"\\r\\n            data-bind=\"events: { click: view.onClick }\">\\r\\n        <%= localization.Bundle %>\\r\\n    </button>\\r\\n\\r\\n    <div id=\"Bundle\" class=\"cireson-window defined-form hide\">\\r\\n        <div class=\"cireson-window--wrapper\">\\r\\n            <div class=\"cireson-window--body\">\\r\\n\\r\\n\\r\\n                <div id=\"bundleGrid\">\\r\\n                    <div style=\"width: 800px; height: 200px\"\\r\\n                         data-role=\"grid\"\\r\\n                         data-bind=\"source: products,\\r\\n                                visible: isVisible,\\r\\n                                events: {\\r\\n                                  save: onSave\\r\\n                                }\"\\r\\n                         date-scrollable=\"true\"\\r\\n                         data-editable=\"{mode:\\'inline\\', confirmation:false}\"\\r\\n                         data-toolbar=\"[{name:\\'create\\', text:\\'<%= localization.Create %>\\'}]\"\\r\\n                         data-columns=\"[\\r\\n                            { \\'field\\': \\'SoftwarePatternName\\', title: \\'<%= localization.SoftwarePatternName %>\\', \\'width\\': 150 },\\r\\n                            { \\'field\\': \\'SoftwarePattern\\', title: \\'<%= localization.SoftwarePattern %>\\', \\'width\\': 150 },\\r\\n                            { \\'field\\': \\'VersionPattern\\', title: \\'<%= localization.VersionPattern %>\\', \\'width\\': 150 },\\r\\n                            { \\'field\\': \\'ExclusionPattern\\', title: \\'<%= localization.ExclusionPattern %>\\', \\'width\\': 150 },\\r\\n                            { command:[{name:\\'edit\\', text:\\'<%= localization.Edit %>\\'}, {name:\\'destroy\\', text:\\'<%= localization.Delete %>\\'}], title: \\' \\', width: \\'150\\'}\\r\\n                        ]\">\\r\\n                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"cireson-window--footer window-buttons\">\\r\\n                <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-primary\"\\r\\n                        data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                    <%= localization.OK %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancelClick }\">\\r\\n                    <%= localization.Cancel %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nfileAttachments\r\n**/\r\n\r\ndefine('forms/fields/bundle/controller',['require','text!forms/fields/bundle/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/bundle/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n\r\n            var properties = {\r\n                Disabled: node.disabled\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var template = $(built(properties));\r\n            \r\n            //k-grid-add\r\n            var bundleData = [];\r\n            var gridViewModel;\r\n            \r\n            var cont = template.find(\"#Bundle\").clone(); //we have the element in memory so no need use a selector\r\n            var win = cont.kendoCiresonWindow({\r\n                title: localization.createOrEditSoftwareBundle,\r\n                width: 850,\r\n                height: 375,\r\n                actions: [],\r\n                activate: function () {}\r\n            }).data(\"kendoWindow\");\r\n\r\n            var _vmWindow = new kendo.observable({\r\n                okClick: function () {\r\n                    var dataList = gridViewModel.products._data;\r\n                    var tempSoftwarePattern = \"\";\r\n                    var tempExclusionPattern = \"\";\r\n                    var tempVersionPattern = \"\";\r\n                    \r\n                    for (var i = 0; i < dataList.length; i++) {\r\n                        if (dataList[i].SoftwarePatternName == \"\") continue;\r\n                        if ((dataList.length - 1) == i) {\r\n                            tempSoftwarePattern = tempSoftwarePattern + dataList[i].SoftwarePatternName + \"__\" + dataList[i].SoftwarePattern;\r\n                            tempExclusionPattern = tempExclusionPattern + dataList[i].ExclusionPattern;\r\n                            tempVersionPattern = tempVersionPattern + dataList[i].VersionPattern;\r\n                        }\r\n                        else {\r\n                            tempSoftwarePattern = tempSoftwarePattern + dataList[i].SoftwarePatternName + \"__\" + dataList[i].SoftwarePattern + \"|\";\r\n                            tempExclusionPattern = tempExclusionPattern + dataList[i].ExclusionPattern + \"|\";\r\n                            tempVersionPattern = tempVersionPattern + dataList[i].VersionPattern + \"|\";\r\n                        }\r\n                    }\r\n                    vm.set(\"SoftwarePattern\", tempSoftwarePattern);\r\n                    vm.set(\"ExclusionPattern\", tempExclusionPattern);\r\n                    vm.set(\"VersionPattern\", tempVersionPattern);\r\n                    var SoftwarePatternTxt = $(\"input[name='SoftwarePattern']\");\r\n                    var ExclusionPatternTxt = $(\"input[name='ExclusionPattern']\");\r\n                    var VersionPatternTxt = $(\"input[name='VersionPattern']\");\r\n                    if (vm.SoftwarePattern!=\"\") {\r\n                        vm.set(\"IsBundle\", true);\r\n                        enableDisableTextbox(SoftwarePatternTxt,false);\r\n                        enableDisableTextbox(ExclusionPatternTxt, false);\r\n                        enableDisableTextbox(VersionPatternTxt, false);\r\n                    } else {\r\n                        vm.set(\"IsBundle\", false);\r\n                        enableDisableTextbox(SoftwarePatternTxt, true);\r\n                        enableDisableTextbox(ExclusionPatternTxt, true);\r\n                        enableDisableTextbox(VersionPatternTxt, true);\r\n                    }\r\n                    win.close();\r\n                },\r\n                cancelClick: function () {\r\n                    win.close();\r\n                },\r\n            });\r\n\r\n            kendo.bind(cont, _vmWindow);\r\n            var enableDisableTextbox = function (txt, isEnable) {\r\n                if (isEnable) {\r\n                    txt.prop(\"disabled\", false).removeClass(\"k-state-disabled\");\r\n                }\r\n                else\r\n                    txt.prop(\"disabled\", true).addClass(\"k-state-disabled\").closest(\".has-error\")\r\n                                        .removeClass(\"has-error\");\r\n            }\r\n\r\n            vm.view.onClick = function () {\r\n                bundleData = [];\r\n                var softwarePatternList = new Array();\r\n                var exclusionPatternList = new Array();\r\n                var versionPatternList = new Array();\r\n                if (!_.isNull(vm.SoftwarePattern) && vm.SoftwarePattern != \"\") {\r\n                    softwarePatternList = vm.SoftwarePattern == \"\" ? \"\" : vm.SoftwarePattern.split(\"|\");\r\n                }\r\n\r\n                if (!_.isNull(vm.ExclusionPattern) && vm.ExclusionPattern != \"\") {\r\n                    exclusionPatternList = vm.ExclusionPattern == \"\" ? \"\" : vm.ExclusionPattern.split(\"|\");\r\n                }\r\n\r\n                if (!_.isNull(vm.VersionPattern) && vm.VersionPattern != \"\") {\r\n                    versionPatternList = vm.VersionPattern == \"\" ? \"\" : vm.VersionPattern.split(\"|\");\r\n                }\r\n\r\n                    \r\n                if (vm.IsBundle) {\r\n                    for (var i in softwarePatternList) {\r\n                        var softwarePattern = softwarePatternList[i].split(\"__\");\r\n                        bundleData.push({ SoftwarePatternName: softwarePattern[0], SoftwarePattern: softwarePattern[1], VersionPattern: versionPatternList[i], ExclusionPattern: exclusionPatternList[i] });\r\n                    }\r\n                }\r\n                \r\n\r\n                gridViewModel = kendo.observable({\r\n                    isVisible: true,\r\n                    onSave: function (e) {\r\n                        \r\n                    },\r\n                    products: new kendo.data.DataSource({\r\n                        schema: {\r\n                            model: {\r\n                                id: \"SoftwarePatternName\",//an id is required to maintain edit/cancel state correctlf TFS3424\r\n                                fields: {\r\n                                    SoftwarePatternName: {\r\n                                        editable: true,\r\n                                        validation: {\r\n                                            SoftwarePatternNamevalidation: function (input) {\r\n                                                if (input.is(\"[name='SoftwarePatternName']\") && input.val() == \"\") {\r\n                                                    input.attr(\"data-SoftwarePatternNamevalidation-msg\", localization.EnterRequiredFields);\r\n                                                    return false;\r\n                                                }\r\n                                                return true;\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    SoftwarePattern: {\r\n                                        editable: true, type: \"string\",\r\n                                        validation: {\r\n                                            SoftwarePatternvalidation: function (input) {\r\n                                                if (input.is(\"[name='SoftwarePattern']\") && input.val() == \"\") {\r\n                                                    input.attr(\"data-SoftwarePatternvalidation-msg\", localization.EnterRequiredFields);\r\n                                                    return false;\r\n                                                }\r\n                                                return true;\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    VersionPattern: { editable: true, type: \"string\", validation: { required: false } },\r\n                                    ExclusionPattern: { editable: true, type: \"string\", validation: { required: false } }\r\n                                }\r\n                            }\r\n                        },\r\n                        batch: false,\r\n                        data: bundleData,\r\n                    })\r\n                });\r\n\r\n                kendo.bind(cont.find(\"#bundleGrid\"), gridViewModel);\r\n\r\n                cont.removeClass('hide');\r\n                cont.show();\r\n\r\n                win.open();\r\n            }\r\n\r\n            callback(template);\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/fields/fileUpload/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <input id=\"<%= PropertyName %>\" type=\"file\"\\r\\n           accept=\"<%= AcceptExtension %>\"\\r\\n           data-role=\"upload\"\\r\\n           name=\"files\"\\r\\n           data-async=\"{ saveUrl: \\'/FileAttachment/FileUpload/?BaseId=<%= BaseId %>&fieldName=<%= PropertyName %>\\', autoUpload: true }\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"events: { select: onSelect, complete:complete, success:success }\" />\\r\\n    <br />\\r\\n    <div id=\"div<%= PropertyName %>\">\\r\\n        <div data-role=\"button\"\\r\\n                data-sprite-css-class=\"k-icon k-edit\"\\r\\n                data-bind=\"events: { click: onRemove }\">\\r\\n            <i class=\"fa fa-close\"></i>\\r\\n        </div>\\r\\n        <div>\\r\\n        <img />\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/fileUpload/controller',['require','text!forms/fields/fileUpload/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/fileUpload/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n\r\n            \r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n            var properties = {\r\n                Required: node.Required,\r\n                BaseId: vm.BaseId,\r\n                AcceptExtension: _.isUndefined(node.AcceptExtension) ? \"\" : vm.AcceptExtension\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            var template = $(built(properties));\r\n\r\n            var viewModel = new kendo.observable({\r\n                isEnabled: true,\r\n                isVisible: true,\r\n                onSelect: function (e) {\r\n                    template.find(\".k-file-error\").remove();\r\n                    $.each(e.files, function (index, value) {\r\n                        if (!_.isUndefined(node.AcceptExtension)\r\n                            && node.AcceptExtension!=\"\"\r\n                            && !(node.AcceptExtension.toLowerCase().indexOf(value.extension.toLowerCase()) > -1)) {\r\n                            kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.ErrorDescription,\r\n                                message: localization.FileExtensionInvalid + node.AcceptExtension,\r\n                                icon: \"fa fa-exclamation\"\r\n                            });\r\n                            e.preventDefault();\r\n                        }\r\n                    });\r\n                },\r\n                complete: function (e) {\r\n                    if (template.find(\".k-file\").length > 1) {\r\n                        template.find(\".k-file:first\").remove();\r\n                        \r\n                    }\r\n                },\r\n                success: function (e) {\r\n                    var img = template.find(\"img\");\r\n                    img.attr(\"src\", \"data:image/png;base64,\" + e.response);\r\n                    vm[node.PropertyName] = {\r\n                        \"streamId\": null,\r\n                        \"data\": \"stream\",\r\n                        \"bufferedMode\": true,\r\n                        \"streamLength\": 0\r\n                    };\r\n\r\n                    template.find(\"#div\" + node.PropertyName).show();\r\n                },\r\n                onRemove: function (e) {\r\n                    $.get(\"/FileAttachment/RemoveFileUpload/\", { BaseId: vm.BaseId, fieldName: node.PropertyName }, function (data) {\r\n                        template.find(\".k-file\").parent().remove();\r\n                        //template.find(\"img\").hide();\r\n                        template.find(\"#div\" + node.PropertyName).hide();\r\n                        vm[node.PropertyName] = null;\r\n                    });\r\n                }\r\n            });\r\n\r\n            $.get(\"/api/V3/Projection/GetBase64String\", { BaseId: vm.BaseId, PropertyName: node.PropertyName }, function (data) {\r\n                var img = template.find(\"#div\" + node.PropertyName);\r\n                if (data != \"\") {\r\n                    template.find(\"img\").attr(\"src\", \"data:image/png;base64,\" + data);\r\n                    img.show();\r\n                } else {\r\n                    img.hide();\r\n                }\r\n            });\r\n            \r\n\r\n            _.defer(function () { kendo.bind(template, viewModel); });\r\n            callback(template);\r\n\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!forms/fields/urlTextbox/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"value: <%= PropertyName %>, events:{change:textChange}\" <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n\\r\\n        />\\r\\n    <div data-role=\"button\"\\r\\n         data-sprite-css-class=\"k-icon k-edit\"\\r\\n         class=\"urlTextboxIcon\"\\r\\n         data-bind=\"events: { click: openURL }\">\\r\\n        <i class=\"fa fa-external-link nav-icon-color\"></i>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/urlTextbox/controller',['require','text!forms/fields/urlTextbox/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/urlTextbox/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            \r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            \r\n            vm.view.buildURLTextbox = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var regexp = new RegExp(/^((ftp|http|https?):\\/\\/)?([w|W]{3}\\.)*?[a-zA-Z0-9\\-\\.]{3,}\\.[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})?$/);\r\n                var disabled = \"urlTextboxButtonDisabled\";\r\n                var error = \"input-error\";\r\n                var url = vm.get(node.PropertyName);\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled\r\n                };\r\n                \r\n                $.extend(true, properties, node);\r\n                var template = $(built(properties));\r\n                var txtBox = template.find(\"input\");\r\n                var link = template.find(\".urlTextboxIcon\");\r\n\r\n                var validateUrl = function () {\r\n                    var isOk = true;\r\n                    url = vm.get(node.PropertyName);\r\n                    link.removeClass(disabled);\r\n                    txtBox.removeClass(error);\r\n                    if (url == \"\" || _.isNull(url)) {\r\n                        isOk = false;\r\n                        link.addClass(disabled);\r\n                    } else if (!regexp.test(url)) {\r\n                        link.addClass(disabled);\r\n                        txtBox.addClass(error);\r\n                        isOk = false;\r\n                    }\r\n                    return isOk;\r\n                }\r\n                validateUrl();\r\n                vm.textChange = function (e) {\r\n                    validateUrl();\r\n                }\r\n\r\n                vm.openURL = function (e) {\r\n                    if (validateUrl()) {\r\n                        //append protocol if does not have one\r\n                        if (!url.match(/^ftp|http([s]?):\\/\\/.*/)) {\r\n                            url = 'http://' + url;\r\n                        }\r\n                        var win = window.open(url, '_blank');\r\n                        win.focus();\r\n                    }\r\n                };\r\n\r\n\r\n                view = new kendo.View(template, { wrap: false, model: vm });\r\n               \r\n               callback(view.render());\r\n            };\r\n            vm.view.buildURLTextbox();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nDECIMAL\r\n**/\r\n\r\ndefine('forms/fields/percentage/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\"); //use numeric template\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                //Required: false,\r\n                DecimalPlaces: 2,\r\n                MinValue: '',\r\n                MaxValue: '',\r\n                StepIncrement: 0.01,\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Format: \"P0\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\r\n\r\n\r\ndefine('forms/formBuilder',[\r\n    \"forms/structure/formPanel/controller\",\r\n    \"forms/structure/formPanelFull/controller\",\r\n    \"forms/structure/customFieldGroup/controller\",\r\n    \"forms/structure/customFieldGroupRow/controller\",\r\n    \"forms/structure/columnField/controller\",\r\n    \"forms/structure/tab/controller\",\r\n    \"forms/structure/tabPane/controller\",\r\n    \"forms/structure/tabNavigation/controller\",\r\n    \"forms/structure/tabData/controller\",\r\n\r\n    \"forms/predefined/actionLog/controller\",\r\n    \"forms/predefined/fileAttachments/controller\",\r\n    \"forms/predefined/affectedItems/controller\",\r\n    \"forms/predefined/relatedItems/controller\",\r\n    \"forms/predefined/childWorkItems/controller\",\r\n    \"forms/predefined/userInput/controller\",\r\n    \"forms/predefined/activities/controller\",\r\n    \"forms/predefined/multipleObjectPicker/controller\",\r\n    //\"forms/predefined/history/controller\",\r\n\t\"CustomSpace/Scripts/forms/predefined/history/controller\",\r\n    \"forms/predefined/billableTime/controller\",\r\n    \"forms/predefined/knowledgeArticle/controller\",\r\n    \"forms/predefined/fileAttachmentsDragDrop/controller\",\r\n    \r\n\r\n    \"forms/fields/string/controller\",\r\n    \"forms/fields/longstring/controller\",\r\n    \"forms/fields/boolean/controller\",\r\n    \"forms/fields/display/controller\",\r\n    \"forms/fields/spacer/controller\",\r\n    \"forms/fields/numeric/controller\",\r\n    \"forms/fields/int/controller\",\r\n    \"forms/fields/decimal/controller\",\r\n    \"forms/fields/double/controller\",\r\n    \"forms/fields/date/controller\",\r\n    \"forms/fields/datetime/controller\",\r\n    \"forms/fields/enum/controller\",\r\n    \"forms/fields/userPicker/controller\",\r\n    \"forms/fields/objectPicker/controller\",\r\n    \"forms/fields/button/controller\",\r\n    \"forms/fields/editor/controller\",\r\n    \"forms/fields/combo/controller\",\r\n    \"forms/fields/dropDownList/controller\",\r\n    \"forms/fields/bundle/controller\",\r\n    \"forms/fields/fileUpload/controller\",\r\n    \"forms/fields/urlTextbox/controller\",\r\n    \"forms/fields/percentage/controller\"\r\n    \r\n\r\n\r\n], function (formPanel,\r\n    formPanelFull,\r\n    customFieldGroup,\r\n    customFieldGroupRow,\r\n    columnField,\r\n    tab, //.tab-content\r\n    tabPane, //.tab-pane\r\n    tabNavigation, //ul\r\n    tabData,//li\r\n\r\n    actionLog,\r\n    fileAttachments,\r\n    affectedItems,\r\n    relatedItems,\r\n    childWorkItems,\r\n    userInput,\r\n    activities,\r\n    multipleObjectPicker,\r\n    history,\r\n    billableTime,\r\n    knowledgeArticle,\r\n    fileAttachmentsDragDrop,\r\n    \r\n\r\n    String,\r\n    LongString,\r\n    Boolean,\r\n    Display,\r\n    Spacer,\r\n    Numeric,\r\n    Int32,\r\n    Decimal,\r\n    Double,\r\n    Date,\r\n    DateTime,\r\n    Enum,\r\n    UserPicker,\r\n    ObjectPicker,\r\n    Button,\r\n    Editor,\r\n    Combo,\r\n    DropDownList,\r\n    Bundle,\r\n    FileUpload,\r\n    UrlTextbox,\r\n    Percentage) {\r\n\r\n    var mainContainer;\r\n    var jsonTemplate;\r\n    var viewModel;\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            viewModel = vm.viewModel;\r\n            jsonTemplate = vm.formTemplate;\r\n\r\n            // Decide on layout template\r\n            eval(\"var _obj = \" + jsonTemplate.layoutType + \";\");\r\n            // if no template was found, use default ('form')\r\n            if (!_obj) {\r\n                _obj = formPanel;\r\n            }\r\n\r\n            _obj.build(function (tplString) {\r\n                mainContainer = $(tplString);\r\n            });\r\n\r\n            readTemplate(mainContainer, jsonTemplate);\r\n            callback(mainContainer);\r\n            //see if we have a non-default tab selection\r\n            $(\"a[selected='selected']\").tab('show'); //selected tab for loading ex: http://localhost:13463/Incident/Edit/IR430/?tab=activity&activityId=MA798\r\n        }\r\n    }\r\n\r\n    var readTemplate = function (container, json, columns) {\r\n        var columns = (columns != undefined && columns !== false) ? columns : false;\r\n\r\n        $.each(json, function (key, item) {\r\n            if (key != \"layoutType\") {\r\n                jsonDecision(container, key, item, columns);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Mutate any jsonFormTemplate items by name:value\r\n    var mutationLogic = {\r\n        // Run on all properties\r\n        all: function (propValue) {\r\n            propValue.vm = viewModel; // pass in viewModel\r\n        },\r\n        tabList: function (tabList) {\r\n            jsonTemplate.tabNavigation = {\r\n                nodeCount: tabList.length,\r\n                tabData: []\r\n            }\r\n            tabNavigation.build(viewModel, jsonTemplate, function (tabtplString) {\r\n                var tabnavCont = $(tabtplString);\r\n\r\n                //prevent multiple tabs being set to focus. \r\n                var focusSet = false;\r\n                $.each(tabList, function (i, tabNode) {\r\n                    //this gets ?tab= data from uri if present\r\n                    var focusedTab = app.getParameterByName(\"tab\").toLowerCase();\r\n                    var tabNodeNameKey = tabNode.name;\r\n                    //set vals\r\n                    tabNode.tabId = app.lib.newGUID();\r\n                    tabNode.active = (i == 0) ? \"active\" : \"\";\r\n                    tabNode.content.tabId = tabNode.tabId;\r\n                    tabNode.content.active = tabNode.active;\r\n\r\n                    //call build on each nav node \r\n                    tabData.build(viewModel, tabNode, function (tplString) {\r\n                        //append to tabnavcont\r\n                        var element = $(tplString);\r\n\r\n                        if (app.isMobile()) {\r\n                            tabnavCont.children('.nav-dropdown-content').find('ul').append(element);\r\n                        } else {\r\n                            tabnavCont.append(element);\r\n                        }\r\n                      \r\n                        if (!app.isMobile()) {\r\n                            //--Start focus tab logic\r\n                            //check if there we found and focused tab param in the uri\r\n                            if (!focusSet && focusedTab.length > 0) {\r\n                                //this statement will set focus if they have a tab name in the uri that matches a tab name on the page\r\n                                if (tabNodeNameKey.toLowerCase() === focusedTab) {\r\n                                    element.find(\"a\").attr(\"selected\", \"true\");\r\n                                    focusSet = true;\r\n                                }\r\n\r\n                                //if focus is on activity tab (i.e. click an activity from the grid) set focus on tab and open activity\r\n                                switch (focusedTab) {\r\n                                    case \"activity\":\r\n                                        //find the activity tab based on control type\r\n                                        $.each(tabNode.content, function (i, content) {\r\n                                            $.each(content.customFieldGroupList, function (i, group) {\r\n                                                if (group.type === \"activities\") {\r\n                                                    element.find(\"a\").attr(\"selected\", \"true\");\r\n                                                    focusSet = true;\r\n                                                };\r\n                                            });\r\n                                        });\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                };\r\n                            };\r\n                            //--End focused tab logic\r\n                        } \r\n                    });\r\n                });\r\n                //append tabnavcont to main form panel\r\n                mainContainer.append(tabnavCont);\r\n            });\r\n\r\n            // ------------ tab dropdown\r\n\r\n        },\r\n        // Run to determine colspan\r\n        columnFieldList: function (columnFieldList) {\r\n            app.lib.setColumnSizes(columnFieldList);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    var getContainer = function (tplReturn) {\r\n        return (typeof (tplReturn) === \"string\") ? $(tplReturn) : tplReturn;\r\n    }\r\n\r\n    var chooseNextAction = function (container, item, objectName, columnCount) {\r\n        if (item.content) { //this denotes a tabPane\r\n            jsonDecision(container, objectName + \"Pane\", item.content);\r\n        } else if (item.rows) { //this denotes a FieldGroupList\r\n            jsonDecision(container, objectName + \"Row\", item.rows);\r\n        } else if (item.DataType) { //denotes a standard field, like string or numeric\r\n            jsonDecision(container, item.DataType, item);\r\n        } else if (item.type) { // predefined\r\n            jsonDecision(container, item.type, item);\r\n        } else { //an array of items, re-loop to comb through the child properties\r\n            readTemplate(container, item, columnCount);\r\n        }\r\n    };\r\n\r\n    // \r\n    var jsonDecision = function (propContainer, propName, propValue, columns) {\r\n        //propName is the name of the obj we will call .build on\r\n        //propValue is the object itself, like { DataType: \"UserPicker\", PropertyDisplayName: \"PrimaryOwner\", PropertyName: \"RelatesToIncident\", FilterByAnalyst: true},\r\n        var objectName = propName;\r\n\r\n        var list = false;\r\n        var row = false;\r\n        var pane = false;\r\n        var columnCount = (columns == undefined) ? false : columns; //TODO: ELI do we need this now, with the mutate function\r\n\r\n        // mutation logic\r\n        if (mutationLogic[propName]) {\r\n            mutationLogic[propName](propValue);\r\n        }\r\n        mutationLogic[\"all\"](propValue);\r\n\r\n        // Check if it is a List\r\n        if (propValue.push) {\r\n            if (propName.indexOf(\"List\") > -1) {\r\n                list = true;\r\n                objectName = propName.split(\"List\")[0];\r\n            }\r\n            else if (propName.indexOf(\"Row\") > -1) {\r\n                row = true;\r\n                columnCount = propValue.length;\r\n            }\r\n            else if (propName.indexOf(\"Pane\") > -1) {\r\n                pane = true;\r\n            }\r\n        }\r\n\r\n        // Decide on Template\r\n        eval(\"var _obj = \" + objectName + \";\");\r\n        // Check if Template Exists\r\n        if (!_obj) {\r\n            throw Exception(objectName + \" is not part of the templating system\");\r\n            return false;\r\n        }\r\n\r\n        // xxxList \r\n        if (list || row || pane) {\r\n            if (_obj == tab) {\r\n                //if it is a tab object, need to call build first, then loop through children\r\n                _obj.build(viewModel, propValue, function (tplReturn) {\r\n                    var _container = getContainer(tplReturn);\r\n                    propContainer.append(_container);\r\n                    $.each(propValue, function (i, item) {\r\n                        chooseNextAction(_container, item, objectName);\r\n                    });\r\n                });\r\n\r\n            } else {\r\n                $.each(propValue, function (i, item) {\r\n                    if (objectName == \"columnField\") {\r\n                        item.columnCount = columnCount;\r\n                    }\r\n\r\n                    if (_obj == tabPane) { //this one passes in propValue, the else statement passes in item\r\n                        _obj.build(viewModel, propValue, function (tplReturn) {\r\n                            var _container = getContainer(tplReturn);\r\n                            propContainer.append(_container);\r\n                            readTemplate(_container, item, columnCount);\r\n                        });\r\n                    }\r\n                        //todo: note, possibly do manipulation here on customFieldGroupList/Row. do account for the bs-panels being wonky.\r\n\r\n                    else {\r\n\r\n                        _obj.build(viewModel, item, function (tplReturn) {\r\n                            var _container = getContainer(tplReturn);\r\n                            propContainer.append(_container);\r\n                            //allow view to define where children should be added \r\n                            if (_container.find(\".append-here\").length != 0) {\r\n                                chooseNextAction(_container.find(\".append-here\"), item, objectName, columnCount);\r\n                            } else {\r\n                                chooseNextAction(_container, item, objectName, columnCount);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            //we should only force a disable state if isDisabled is true\r\n            //otherwise keep default and defined disable value\r\n            if (!_.isUndefined(viewModel) && viewModel.isDisabled) {\r\n                propValue.disabled = true;\r\n            }\r\n\r\n            _obj.build(viewModel, propValue, function (tplReturn) {\r\n                var _container = getContainer(tplReturn);\r\n                propContainer.append(_container);\r\n            });\r\n        }\r\n\r\n    }\r\n    return definition;\r\n});\r\n\r\n\r\n\n","define('forms/formHelper',[\n\n], function (\n\n        ) {\n\n\n    var definition = {\n        \n        manageDirty: function (vm) {\n            //setup is dirty flag\n            vm.set('isDirty', false);\n            //bind to view model changes to set dirty flag\n            vm.bind(\"change\", function (e) {\n                //console.log(e.field); // will output the changed field once the event is raised\n                //TODO: may need to make this a little smarter\n                //don't trigger isDirty changes\n                if (e.field !== \"isDirty\" &&\n                    e.field !== \"HistoryButton\") {\n                    vm.set(\"isDirty\", true);\n                }\n            });\n            //don't let the user leave the page if form is dirty\n            window.onbeforeunload = function () {\n                //TODO find a way to over write default browser alert\n                if (vm.get(\"isDirty\")) {\n                    return localization.UnsavedDataMessage;\n                }\n            }\n        },\n\n        mobileDrawerTaskButton: function (taskContainer) { //This will going to create task button to the drawer for mobile task\n            //if (app.isMobileDevice()) \n            var task = drawermenu.addButton(localization.Tasks, \"fa fa-tasks\", function () { });\n            app.lib.makeDrawer(\"bottom\", taskContainer, task, true);\n\n            function mobileTaskShow() {\r\n                if (app.isMobile()) {\r\n                    task.show();\r\n                } else {\r\n                    task.hide();\r\n                }\n            }\n\n            $(window).resize(function () {\r\n                mobileTaskShow();\r\n            });\n\n            mobileTaskShow();\n        }\n    }\n\n\n    return definition;\n});\n\n\n","require.config({\n    waitSeconds: 0,\n    urlArgs: \"v=\" + session.staticFileVersion,\n    baseUrl: \"/Scripts/\",\n    paths: {\n        //kendo: \"kendo/js/kendo.mobile.min\",\n        //jquery: \"jquery/jquery.min\",\n        text: \"require/text\"\n    },\n\n    shim: {\n        //kendo: {\n        //    deps: ['jquery'],\n        //    exports: 'kendo'\n        //}\n    }\n});\n\n//let's let the user know that things are happening\napp.lib.mask.apply();\n$(\"body\").css(\"cursor\", \"wait\");\n$(document).ajaxStop(function () {\n    $(\"body\").css(\"cursor\", \"auto\");\n});\n\nrequire([\"forms/taskBuilder\", \"forms/headerBuilder\", \"forms/formBuilder\", \"forms/formHelper\"], function (taskBuilder, headerBuilder, formBuilder, formHelper, messagesStructure) {\n\n    var saveUrl = pageForm.saveUrl;\n    var mainContainer = $(pageForm.container);\n    var taskContainer = $('<div class=\"task-panel task-panel-narrow\"></div>');\n    //var headerContainer = $('<div/>').addClass(\"form-header form-panel\");\n    var headerContainer = $('.page_bar').empty(); //use new page header div, just clear it out before adding things\n    var formContainer = $('<div/>').addClass(\"page-form\");\n    var formType = pageForm.type;\n    var dataVM = pageForm.viewModel;\n    var dataVMUnchanged = pageForm.jsonRaw;\n    var priorityJSON = (pageForm.priorityJSON) ? pageForm.priorityJSON : false; // for priority matrix in Incident\n    var bHasNoInitalAssignee = (_.isUndefined(pageForm.viewModel.AssignedWorkItem) || _.isNull(pageForm.viewModel.AssignedWorkItem)) ? true : false; //for set first assigned date in incident\n    var bShowAddWatchList = _.isUndefined(_.find(pageForm.viewModel.WatchList, function (user) { return (user.Id == session.user.Id || user.BaseId == session.user.Id); }));\n    var bShowRemoveWatchList = !bShowAddWatchList;\n\n    //set a check for unsubmitted action log commnets\n    dataVM.set('commentDirty', false);\n\n    //seems like the activity builder calls this on ready function once all the activity stuff is loaded\n    pageForm.onReady = function () {\n        //make sure activities did not make the form dirty\n        pageForm.viewModel.set(\"isDirty\", false);\n        //pageForm.jsonRaw = dataVM.toJSON();\n    }\n\n    //check for errors\n    if (!_.isUndefined(pageForm.viewModel.WorkItemErrorMessage)) {\n        var jumbotron = $('<div/>').addClass('jumbotron');\n        jumbotron.append($('<h1 />').addClass(\"error uppercase\").html(\"<i class='fa fa-frown-o'></i> \" + localization.Failed));\n        jumbotron.append($('<p />').addClass(\"error\").html(pageForm.viewModel.WorkItemErrorMessage));\n\n        mainContainer.append(jumbotron);\n\n        app.lib.mask.remove();\n        $(\"body\").css(\"cursor\", \"auto\");\n        return;\n    }\n\n    //add the ability to bind to form load\n    var readyArray = [];\n    pageForm.boundReady = function (func) {\n        readyArray.push(func);\n    }\n\n    //add the ability to bind change to viewModel by index, with support for null index\n    var changesArray = [];\n    pageForm.boundChange = function (index, func) {\n        changesArray[index] = func;\n    }\n\n    //add custom viewModel function in the custom space\n    var methods = app.custom.actionMethod.get(formType);\n    if (_.isArray(methods)) {\n        dataVM.custom = {};\n        $.each(methods, function (i, method) {\n            if (_.isFunction(method.func)) {\n                dataVM.custom[method.index] = method.func;\n            }\n        });\n    }\n\n    //add header json definition\n    //since all WI have same header structure we put it in this file\n    //if this changes we need to move this to all the cshtml New/Edit files\n    pageForm.headerTemplate = {\n        rows: [\n                {\n                    columns: [\n                        { View: \"status\", Class: \"col-md-6 col-xs-12\" },\n                        { View: \"relationships\", Class: \"col-md-4 col-xs-12\" },\n                        { View: \"slo\", Class: \"col-md-3 col-xs-12\" }\n                    ]\n                }\n        ]\n    };\n\n    if ($(\"html\").attr(\"dir\")==\"rtl\") {\r\n        pageForm.headerTemplate.rows[0].columns.reverse();\r\n    }\n\n\n    //going to define tasks based on pageForm.type & pageForm.newWI to reduce repetative code\n    pageForm.taskTemplate = {};\n    pageForm.taskTemplate.task = [];\n\n    //Change Request Tasks\n\n    var ChangeStatus = \"0bf0a71b-9e9e-f719-0271-c9a4ff352600\";\n    var ChangeStatus_New = \"a87c003e-8c19-a25f-f8b2-151b56670e5c\";\n    var ChangeStatus_Failed = \"85f00ead-2603-6c68-dfec-531c83bf900f\";\n    var ChangeStatus_Closed = \"f228d50b-2b5a-010f-b1a4-5c7d95703a9b\";\n    var ChangeStatus_InProgress = \"6d6c64dd-07ac-aaf5-f812-6a7cceb5154d\";\n    var ChangeStatus_OnHold = \"dd6b0870-bcea-1520-993d-9f1337e39d4d\";\n    var ChangeStatus_Cancelled = \"877defb6-0d21-7d19-89d5-a1107d621270\";\n    var ChangeStatus_Submitted = \"504f294c-ae38-2a65-f395-bff4f085698b\";\n    var ChangeStatus_Completed = \"68277330-a0d3-cfdd-298d-d5c31d1d126f\";\n\n    if (pageForm.type === 'ChangeRequest') {\n        var statusCancelled = (pageForm.viewModel.Status.Id == ChangeStatus_Cancelled);\n        var statusCompleted = (pageForm.viewModel.Status.Id == ChangeStatus_Completed);\n        var statusFailed = (pageForm.viewModel.Status.Id == ChangeStatus_Failed);\n        var showCancelled = (session.user.Analyst && !pageForm.newWI) && !statusCancelled && !statusCompleted && !statusFailed;\n        var showChangeStatus = (session.user.Analyst && !pageForm.newWI);\n\n        pageForm.taskTemplate = {\n            tasks: [\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: ChangeStatus } },\n                        { Task: \"newStatus\", Label: localization.CancelRequest, Access: showCancelled, Configs: { confirmTitle: localization.CancelRequest, confirmMessage: localization.SureCancelRequest, newStatusName: localization.Cancelled, newStatusId: ChangeStatus_Cancelled } },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n            ]\n        };\n    }\n\n\n    //Incident Tasks\n\n    var IncidentStatus = \"89b34802-671e-e422-5e38-7dae9a413ef8\";\n    var IncidentStatus_Active = \"5e2d3932-ca6d-1515-7310-6f58584df73e\";\n    var IncidentStatus_Closed = \"bd0ae7c4-3315-2eb3-7933-82dfc482dbaf\";\n    var IncidentStatus_Resolved = \"2b8830b6-59f0-f574-9c2a-f4b4682f1681\";\n    var IncidentStatus_Active_Pending = \"b6679968-e84e-96fa-1fec-8cd4ab39c3de\";\n    var IncidentTierQueue = \"c3264527-a501-029f-6872-31300080b3bf\";\n    var IncidentResolution = \"72674491-02cb-1d90-a48f-1b269eb83602\";\n\n    if (pageForm.type === 'Incident') {\n        var statusNotResolvedOrClosed = (pageForm.viewModel.Status.Id !== IncidentStatus_Resolved && pageForm.viewModel.Status.Id !== IncidentStatus_Closed);\n        var showAcknowledge = session.user.Analyst && statusNotResolvedOrClosed && pageForm.viewModel.FirstResponseDate == null;\n        var showLinkToparent = session.user.Analyst && statusNotResolvedOrClosed && !pageForm.viewModel.IsParent;\n        var showRevertToParent = session.user.Analyst && statusNotResolvedOrClosed && pageForm.viewModel.IsParent;\n        var showConvertToParent = session.user.Analyst && statusNotResolvedOrClosed && !pageForm.viewModel.IsParent && (_.isNull(pageForm.viewModel.ParentWorkItem) || _.isUndefined(pageForm.viewModel.ParentWorkItem));\n        var statusResolved = (pageForm.viewModel.Status.Id == IncidentStatus_Resolved);\n        var showChangeStatus = (session.user.Analyst && !pageForm.newWI);\n\n        pageForm.taskTemplate = {\n            tasks: [\n                        { Task: \"analystByGroup\", Label: localization.AssignToAnalystByGroup, Access: session.user.Analyst, Configs: { propertyName: \"TierQueue\", enumId: IncidentTierQueue } },\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"acknowledge\", Label: localization.Acknowledge, Access: showAcknowledge, Configs: {} },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: IncidentStatus, resolutionCategoryEnumId: IncidentResolution } },\n                        { Task: \"convertToParent\", Label: localization.ConvertToParent, Access: showConvertToParent, Configs: { isParent: true, confirmTitle: localization.ConvertToParent, confirmMessage: localization.SureConvertToParent } },\n                        { Task: \"convertToParent\", Label: localization.RevertToParent, Access: showRevertToParent, Configs: { isParent: false, confirmTitle: localization.RevertToParent, confirmMessage: localization.SureRevertToParent } },\n                        { Task: \"linkToParent\", Label: localization.LinktoParentIncident, Access: showLinkToparent, Configs: {} },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"newStatus\", Label: localization.CloseIncident, Access: statusResolved, Configs: { confirmTitle: localization.CloseIncident, confirmMessage: localization.SureCloseIncident, newStatusName: localization.Closed, newStatusId: IncidentStatus_Closed } },\n                        { Task: \"newStatus\", Label: localization.ReactivateIncident, Access: statusResolved, Configs: { confirmTitle: localization.ReactivateIncident, confirmMessage: localization.SureReactivateIncident, newStatusName: localization.Active, newStatusId: IncidentStatus_Active, otherBoundChanges: { \"ResolutionDescription\": null, \"ResolutionCategory\": null, \"RelatesToTroubleTicket\": null } } },\n                        { Task: \"copyToNewWI\", Label: localization.CopyToNew, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n\n            ]\n        };\n    }\n\n\n\n    //Service Request Tasks\n\n    var ServiceRequestStatus = \"4e0ab24a-0b46-efe6-c7d2-5704d95824c7\";\n    var ServiceRequestStatus_New = \"a52fbc7d-0ee3-c630-f820-37eae24d6e9b\";\n    var ServiceRequestStatus_Closed = \"c7b65747-f99e-c108-1e17-3c1062138fc4\";\n    var ServiceRequestStatus_Completed = \"b026fdfd-89bd-490b-e1fd-a599c78d440f\";\n    var ServiceRequestStatus_Failed = \"21dbfcb4-05f3-fcc0-a58e-a9c48cde3b0e\";\n    var ServiceRequestStatus_Cancelled = \"674e87e4-a58e-eab0-9a05-b48881de784c\";\n    var ServiceRequestStatus_OnHold = \"05306bf5-a6b9-b5ad-326b-ba4e9724bf37\";\n    var ServiceRequestStatus_InProgress = \"59393f48-d85f-fa6d-2ebe-dcff395d7ed1\";\n    var ServiceRequestStatus_Submitted = \"72b55e17-1c7d-b34c-53ae-f61f8732e425\";\n    var ServiceRequestSupportGroup = \"23c243f6-9365-d46f-dff2-03826e24d228\";\n    var ServiceRequestImplementationResults = \"4ea37c27-9b24-615a-94da-510539371f4c\";\n\n\n\n    if (pageForm.type === 'ServiceRequest') {\n        var statusCancelled = (pageForm.viewModel.Status.Id == ServiceRequestStatus_Cancelled);\n        var statusCompleted = (pageForm.viewModel.Status.Id == ServiceRequestStatus_Completed);\n        var statusFailed = (pageForm.viewModel.Status.Id == ServiceRequestStatus_Failed);\n        var showCancelled = !pageForm.newWI && !statusCancelled && !statusCompleted && !statusFailed;\n        var showChangeStatus = (session.user.Analyst && pageForm.viewModel.Status.Id != ServiceRequestStatus_New);\n        var showCloseStatus = !pageForm.newWI && (statusCancelled || statusCompleted || statusFailed);\n        var showAcknowledge = session.user.Analyst && !statusCompleted && pageForm.viewModel.FirstResponseDate == null;\n\n        pageForm.taskTemplate = {\n            tasks: [\n                        { Task: \"analystByGroup\", Label: localization.AssignToAnalystByGroup, Access: session.user.Analyst, Configs: { propertyName: \"SupportGroup\", enumId: ServiceRequestSupportGroup } },\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"acknowledge\", Label: localization.Acknowledge, Access: showAcknowledge, Configs: {} },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: ServiceRequestStatus, resolutionCategoryEnumId: ServiceRequestImplementationResults } },\n                        { Task: \"newStatus\", Label: localization.CancelRequest, Access: showCancelled, Configs: { confirmTitle: localization.CancelRequest, confirmMessage: localization.SureCancelRequest, newStatusName: localization.Cancelled, newStatusId: ServiceRequestStatus_Cancelled } },\n                        { Task: \"newStatus\", Label: localization.CloseServiceRequest, Access: showCloseStatus, Configs: { confirmTitle: localization.CloseServiceRequest, confirmMessage: localization.SureCloseServiceRequest, newStatusName: localization.Closed, newStatusId: ServiceRequestStatus_Closed } },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"copyToNewWI\", Label: localization.CopyToNew, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n            ]\n        };\n    }\n\n\n\n    //Problem Tasks\n\n    var ProblemStatus = \"56c99a7d-6ac7-ab3c-e6c0-bbf5fe76a65c\";\n    var ProblemStatus_Active = \"720438eb-ba08-1263-0944-6791fcb48991\";\n    var ProblemStatus_Closed = \"25eac210-e091-8ae8-a713-fea2472f32ff\";\n    var ProblemStatus_Resolved = \"7ff92b06-1694-41e5-2df7-b4d5970d2d2b\";\n    //var ProblemStatus_Active_Pending = \"b6679968-e84e-96fa-1fec-8cd4ab39c3de\";\n    //var ProblemTierQueue = \"c3264527-a501-029f-6872-31300080b3bf\";\n    var ProblemResolution = \"52a0bfb0-b7e6-d16e-d06e-97ce62b4a335\";\n\n    if (pageForm.type === 'Problem') {\n        var statusNotResolvedOrClosed = (pageForm.viewModel.Status.Id !== ProblemStatus_Resolved && pageForm.viewModel.Status.Id !== ProblemStatus_Closed);\n        var statusResolved = (pageForm.viewModel.Status.Id == ProblemStatus_Resolved);\n        var showChangeStatus = (session.user.Analyst && !pageForm.newWI);\n\n        pageForm.taskTemplate = {\n            tasks: [\n                        //{ Task: \"analystByGroup\", Label: localization.AssignToAnalystByGroup, Access: session.user.Analyst, Configs: { propertyName: \"TierQueue\", enumId: ProblemTierQueue } },\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: ProblemStatus, resolutionCategoryEnumId: ProblemResolution } },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"newStatus\", Label: localization.CloseProblem, Access: statusResolved, Configs: { confirmTitle: localization.CloseProblem, confirmMessage: localization.SureCloseProblem, newStatusName: localization.Closed, newStatusId: ProblemStatus_Closed } },\n                        { Task: \"newStatus\", Label: localization.ReactivateProblem, Access: statusResolved, Configs: { confirmTitle: localization.ReactivateProblem, confirmMessage: localization.SureReactivateProblem, newStatusName: localization.Active, newStatusId: ProblemStatus_Active, otherBoundChanges: { \"ResolutionDescription\": null, \"ResolutionCategory\": null } } },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n\n\n            ]\n        };\n    }\n\n\n\n    //Release Record Tasks\n\n    var ReleaseRecordStatus = \"8909ce55-a87f-2d7e-eb64-aba670596696\";\n    var ReleaseRecordStatus_New = \"9b3c924a-3f95-b9d8-6711-42aa8271dd30\";\n    var ReleaseRecordStatus_Closed = \"221155fc-ad9f-1e40-c50e-9028ee303137\";\n    var ReleaseRecordStatus_Completed = \"c46ca677-e6c5-afe0-b51e-6aaad1f50e58\";\n    var ReleaseRecordStatus_Failed = \"f0073e33-fdda-a1ba-cd93-40b7c88afff4\";\n    var ReleaseRecordStatus_Cancelled = \"a000ff0a-2897-4184-73cb-308f533c0dca\";\n    var ReleaseRecordStatus_Editing = \"f71c86cf-afbd-debf-4464-52fe122b888b\";\n    var ReleaseRecordStatus_OnHold = \"bab68d61-1e58-96ff-9f64-33a530fdaf98\";\n    var ReleaseRecordStatus_InProgress = \"1840bfdc-3589-88a5-cea9-67536fd95a3b\";\n    //var ReleaseRecordSupportGroup = \"23c243f6-9365-d46f-dff2-03826e24d228\";\n    var ReleaseRecordImplementationResults = \"3f02cab3-0d33-804a-1b3e-7266e2728d69\";\n\n\n\n    if (pageForm.type === 'ReleaseRecord') {\n        var statusCancelled = (pageForm.viewModel.Status.Id == ReleaseRecordStatus_Cancelled);\n        var statusCompleted = (pageForm.viewModel.Status.Id == ReleaseRecordStatus_Completed);\n        var statusFailed = (pageForm.viewModel.Status.Id == ReleaseRecordStatus_Failed);\n        var showCancelled = !pageForm.newWI && !statusCancelled && !statusCompleted && !statusFailed;\n        var showChangeStatus = (session.user.Analyst && !pageForm.newWI);\n        var showCloseStatus = !pageForm.newWI && (statusCancelled || statusCompleted || statusFailed);\n        var showAcknowledge = session.user.Analyst && !statusCompleted && pageForm.viewModel.FirstResponseDate == null;\n        var statusNotResolvedOrClosed = (pageForm.viewModel.Status.Id !== ReleaseRecordStatus_Completed && pageForm.viewModel.Status.Id !== ReleaseRecordStatus_Failed && pageForm.viewModel.Status.Id !== ReleaseRecordStatus_Closed);\n        var showLinkToparent = session.user.Analyst && statusNotResolvedOrClosed && !pageForm.viewModel.IsParent;\n        var showRevertToParent = session.user.Analyst && statusNotResolvedOrClosed && pageForm.viewModel.IsParent;\n        var showConvertToParent = session.user.Analyst && statusNotResolvedOrClosed && !pageForm.viewModel.IsParent && (_.isNull(pageForm.viewModel.ParentWorkItem) || _.isUndefined(pageForm.viewModel.ParentWorkItem));\n        var showRun = (pageForm.viewModel.Status.Id == ReleaseRecordStatus_Editing || pageForm.viewModel.Status.Id == ReleaseRecordStatus_OnHold);\n\n        pageForm.taskTemplate = {\n            tasks: [\n                       //{ Task: \"analystByGroup\", Label: localization.AssignToAnalystByGroup, Access: session.user.Analyst, Configs: { propertyName: \"SupportGroup\", enumId: ReleaseRecordSupportGroup } },\n                        { Task: \"assignToMe\", Label: localization.AssignToMe, Access: session.user.Analyst, Configs: { target: \"AssignedWorkItem\", baseId: session.user.Id, displayName: session.user.Name } },\n                        { Task: \"addMeToWatchList\", Label: bShowAddWatchList ? localization.AddMeToWatchList : localization.RemoveMeFromWatchList, Access: true, Configs: { isAddWatchlist: bShowAddWatchList } },\n                        { Task: \"changeStatus\", Label: localization.ChangeStatusTask, Access: showChangeStatus, Configs: { type: pageForm.type, statusEnumId: ReleaseRecordStatus, resolutionCategoryEnumId: ReleaseRecordImplementationResults } },\n                        { Task: \"convertToParent\", Label: localization.ConvertToParent, Access: showConvertToParent, Configs: { isParent: true, confirmTitle: localization.ConvertToParent, confirmMessage: localization.SureConvertToParentRecord } },\n                        { Task: \"convertToParent\", Label: localization.RevertToParent, Access: showRevertToParent, Configs: { isParent: false, confirmTitle: localization.RevertToParent, confirmMessage: localization.SureRevertToParentRecord } },\n                        { Task: \"linkToParent\", Label: localization.LinktoParentRecord, Access: showLinkToparent, Configs: {} },\n                        { Task: \"newStatus\", Label: localization.Run, Access: showRun, Configs: { newStatusName: localization.Run, newStatusId: ReleaseRecordStatus_InProgress, commentMessage: localization.RunComentMessage } },\n                        { Task: \"newStatus\", Label: localization.CancelRequest, Access: showCancelled, Configs: { confirmTitle: localization.CancelRequest, confirmMessage: localization.SureCancelRequest, newStatusName: localization.Cancelled, newStatusId: ReleaseRecordStatus_Cancelled } },\n                        { Task: \"newStatus\", Label: localization.CloseReleaseRecord, Access: showCloseStatus, Configs: { confirmTitle: localization.CloseReleaseRecord, confirmMessage: localization.SureCloseReleaseRecord, newStatusName: localization.Closed, newStatusId: ReleaseRecordStatus_Closed } },\n                        { Task: \"sendEmail\", Label: localization.SendEmail, Access: session.user.Analyst, Configs: {} },\n                        { Task: \"print\", Label: localization.Print, Access: true, Configs: {} }\n            ]\n        };\n\n    }\n\n\n    //add custom tasks\n    var tasks = app.custom.formTasks.get(pageForm.type);\n    if (_.isArray(tasks)) {\n        $.each(tasks, function (i, task) {\n            pageForm.taskTemplate.tasks.push({ Task: \"custom\", Type: pageForm.type, Label: task.label, Access: true, Configs: { func: task.func } })\n        });\n    }\n\n\n    var init = function () {\n        var isClosed = false;\n        // select template\n        setTemplateJSONFromSessionAdJSON();\n\n        //check if form is disabled\n        if (!pageForm.newWI) {\n            //if status is closed then disable the form\n            if (pageForm.viewModel.Status.Id === ServiceRequestStatus_Closed || // \"c7b65747-f99e-c108-1e17-3c1062138fc4\" ||  // SR Closed\n                pageForm.viewModel.Status.Id === ChangeStatus_Closed ||// \"f228d50b-2b5a-010f-b1a4-5c7d95703a9b\" || // CR Closed\n                pageForm.viewModel.Status.Id === IncidentStatus_Closed || // \"bd0ae7c4-3315-2eb3-7933-82dfc482dbaf\") { // Incident Closed\n                pageForm.viewModel.Status.Id === ProblemStatus_Closed ||\n                pageForm.viewModel.Status.Id === ReleaseRecordStatus_Closed) {\n                isClosed = true;\n                pageForm.viewModel.isDisabled = true;\n            }\n        }\n\n        //add dynamic containers to main container\n        //mainContainer.append(headerContainer, formContainer);\n        mainContainer.append(formContainer);\n\n\n        //add task container before main\n        mainContainer.before(taskContainer);\n\n        if (!isClosed) {\n            //build out tasks\n            taskContainer.append(\"<h2>\" + localization.Tasks + \"</h2>\");\n            taskBuilder.build(pageForm, function (view) {\n                taskContainer.append(view);\n            });\n\n        }\n\n        //build and add header container\n        headerBuilder.build(pageForm, function (view) {\n            headerContainer.append(view);\n        });\n\n        //build and add form from json definition\n        formBuilder.build(pageForm, function (html) {\n            formContainer.append(html);\n            app.controls.apply(formContainer, { localize: true, vm: dataVM, bind: true });\n            formContainer.show();\n\n            // make sure we have the drawer before we try to add buttons buttons\n            //if (!_.isUndefined(drawermenu)) { //stupid underscore need to move to lo-dash\n            if (typeof (drawermenu) != 'undefined') {\n                createButtons();\n            } else {\n                app.events.subscribe(\"drawerCreated\", function () {\n                    createButtons();\n                });\n            }\n\n            setPriorityByMatrix();\n            addRecordAssignedLog();\n            setScheduleDuration();\n            app.lib.handleMessages();\n\n            //bind change event no that form is built\n            dataVM.bind(\"change\", function (e) {\n                onVmChange(e);\n            });\n\n            // call bound on ready functions\n            _.each(readyArray, function (func, index) {\n                if (_.isFunction(func)) {\n                    func();\n                }\n            });\n\n            // prevent 'enter' key from submitting form on older browsers.\n            formContainer.on('keypress', function (e) {\n                app.lib.stopEnterKeySubmitting(e);\n            });\n\n            if (!app.isMobileDevice()) {\n                var $taskPanel = $('.task-panel').first();\n                $taskPanel.affix({ offset: { top: $taskPanel[0].getBoundingClientRect().top - 84 } });\n                kendo.data.binders.yScrollOnResize($taskPanel[0], { yScrollOnResize: { path: { top: 'auto', bottom: 50 } } }, {});\n            }\n            //manage dirty\n            formHelper.manageDirty(dataVM);\n        });\n\n        //remove the mask\n        app.lib.mask.remove();\n    }\n\n    // Template Decider\n    // Chooses template from JSON by session and work item type\n    var setTemplateJSONFromSessionAdJSON = function () {\n        var type = formType;\n        var defaultName = \"Default\";\n        var json = pageForm.formTemplate;\n        if (!json.Default) {\n            var msg = \"A '\" + defaultName + \"' template is required.\";\n            if (type) {\n                msg += \" \\r\\r When creating a JSON template for '\" + type + \"' you must add a template with the key of '\" + defaultName + \"'. This is used for fallback if a specific template is not found.\";\n            }\n            alert(msg);\n        }\n        // using a matcher in case something changes on either side\n        // this will be easier and faster fix\n        // { \"formType from work item cshtml\": \"prop name from session.user that holds template\" }\n        var typeToSession = {\n            \"Incident\": \"IncidentForm\",\n            \"ChangeRequest\": \"ChangeRequestForm\",\n            \"ServiceRequest\": \"ServiceRequestForm\",\n            \"Problem\": \"ProblemForm\",\n            \"ReleaseRecord\": \"ReleaseRecordForm\"\n        }\n        var getTemplateNameFromSession = function () {\n            if (type && typeToSession[type] && session && session.user &&\n                session.user[typeToSession[type]] && json[session.user[typeToSession[type]]]) {\n                return session.user[typeToSession[type]];\n            }\n            return defaultName;\n        }\n        var templateName = getTemplateNameFromSession();\n        pageForm.formTemplate = json[templateName];\n\n\n    }\n\n    // Form Buttons\n    var createButtons = function () {\n        // Save Failure\n        //TODO: this could possibly end up being a switch statement to check what the error source is\n        var saveFailure = function (exceptionMessage) {\n            //console.log('save failure');\n            if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\n                app.lib.message.add(exceptionMessage, \"danger\");\n            } else {\n                //fallback to generic message\n                app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\n            }\n            app.lib.message.show();\n            //take use to the error message\n            window.scrollTo(0, 0);\n        }\n\n        // Save Button\n        drawermenu.addButton(localization.Save, \"fa fa-check\", function () {\n\n            save(function (data) {\n                //console.log('save form type check');\n                //this message needs to be tailored to the different types of WIs\n                var message = \"\";\n                var link = \"\";\n                switch (pageForm.type) {\n                    case \"ChangeRequest\":\n                        message = localization.ChangeRequestSavedMessage;\n                        link = \"/ChangeRequest/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    case \"ServiceRequest\":\n                        message = localization.ServiceRequestSavedMessage;\n                        link = \"/ServiceRequest/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    case \"Incident\":\n                        message = localization.IncidentSavedMessage;\n                        link = \"/Incident/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    case \"Problem\":\n                        message = localization.ProblemSavedMessage;\n                        link = \"/Problem/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    case \"ReleaseRecord\":\n                        message = localization.ReleaseRecordSavedMessage;\n                        link = \"/ReleaseRecord/Edit/\" + dataVM.Id + \"/\";\n                        break;\n                    default:\n                        message = localization.WorkItemSavedMessage;\n                        break;\n\n                }\n\n                app.lib.message.add(message + \"&nbsp;&nbsp;<a href='\" + link + \"'><strong>\" + dataVM.Id + \"</strong></a> \", \"success\");\n                //forward the user along\n                app.lib.gotoFormReturnUrl();\n                return;\n\n            }, saveFailure);\n        });\n        // Apply Button\n        drawermenu.addButton(localization.Apply, \"fa fa-pencil\", function () {\n\n            save(function (data) {\n                app.lib.message.add(localization.ChangesApplied, \"success\");\n                //forcing the page to reload allows use to make sure change in status and form disable is handled\n                //we should only do this if status was changed to a value that requires the form tb be disabled\n                switch (pageForm.type) {\n                    case \"ChangeRequest\":\n                        location.href = \"/ChangeRequest/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    case \"ServiceRequest\":\n                        location.href = \"/ServiceRequest/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    case \"Incident\":\n                        location.href = \"/Incident/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    case \"Problem\":\n                        location.href = \"/Problem/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    case \"ReleaseRecord\":\n                        location.href = \"/ReleaseRecord/Edit/\" + pageForm.viewModel.Id + \"/\";\n                        break;\n                    default:\n                        location.href = \"/WorkItems/MyItems/\";\n                        break;\n                }\n\n            }, saveFailure);\n        });\n        // Cancel Button\n        drawermenu.addButton(localization.Cancel, \"fa fa-times\", function () {\n            if (dataVM.get(\"isDirty\")) {\n                $.when(kendo.ui.ExtOkCancelDialog.show({\n                    title: localization.Warning,\n                    message: localization.UnsavedDataMessage,\n                    icon: \"fa fa-exclamation\"\n                })\n                ).done(function (response) {\n                    if (response.button === \"ok\") {\n                        //make the form clean so we don't trigger onbeforeunload\n                        dataVM.set(\"isDirty\", false);\n\n                        app.lib.gotoFormReturnUrl();\n                        return;\n                    }\n                });\n            } else {\n                app.lib.gotoFormReturnUrl();\n                return;\n            }\n        });\n\n\n        // mobile task Button\n        formHelper.mobileDrawerTaskButton(taskContainer);\n\n\n    }\n\n    var sendMentionsMail = function (emailData) {\n        $.ajax({\n            url: \"/EmailNotification/SendMentionsNotification\",\n            type: \"POST\",\n            data: emailData,\n            success: function () {\n                kendo.ui.progress($(\".k-window\"), false);\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                console.log(jqXHR, textStatus, errorThrown);\n            }\n        });\n    }\n\n    var processTemplate = function (actionLog, workItem, givenTemplate) {\n        //replace tokens in action log notification template\n        var template = $('<div/>').html(givenTemplate).text();\n\n        var tokens = template.match(/{{([^}]+)}}/g);\n        _.each(tokens, function (key) {\n            var token = key.replace('{{', '').replace('}}', '').replace(/\\s/g, '');\n            var type = token.substring(token.lastIndexOf(':') + 1, token.length)\n            token = token.substring(0, token.lastIndexOf(':'));\n            var value = \"\";\n            if (type === \"ActionLog\") \n                value = actionLog[token];\n\n            if (type === \"WorkItem\") {\n                if (token === \"URL\") {\n                    value = window.location.pathname;\n                } else\n                    value = workItem[token];\n            }\n            if (app.lib.isDateValue(value))\n                value = kendo.toString(kendo.parseDate(new Date(value)), \"g\");\n\n            template = template.replace(key, value);\n        });\n\n        if (!session.sendNotificationAsHTML)\n            template = app.lib.htmlEntities(template);\n\n        return template;\n    }\n\n    // Ajax Save Method (to be moved)\n    var save = function (success, failure) {\n        //ensure all values inputted have been bound to VM\n        //not sure this is even needed and it causes many problems\n        //need to delete after regression -JK\n        //$(\".page_content *\").blur();\n\n\n        app.lib.mask.apply();\n        var valid = true;\n        var required = true;\n        //todo separate function for CR and RR\n        //if separate function page is slows\n\n        if (pageForm.type === 'ReleaseRecord') {\n            if (!_.isNull(dataVM.ScheduledStartDate) || !_.isNull(dataVM.ScheduledEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ScheduledStartDate, dataVM.ScheduledEndDate, localization.ScheduledStartDateExceedScheduledEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n            if (!_.isNull(dataVM.ActualStartDate) || !_.isNull(dataVM.ActualEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ActualStartDate, dataVM.ActualEndDate, localization.ActualStartDateExceedActualEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n            if (!_.isNull(dataVM.ScheduledDowntimeStartDate) || !_.isNull(dataVM.ScheduledDowntimeEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ScheduledDowntimeStartDate, dataVM.ScheduledDowntimeEndDate, localization.ScheduledDowntimeStartDateExceedScheduledDowntimeEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n            if (!_.isNull(dataVM.ActualDowntimeStartDate) || !_.isNull(dataVM.ActualDowntimeEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ActualDowntimeStartDate, dataVM.ActualDowntimeEndDate, localization.ActualDowntimeStartDateExceedActualDowntimeEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n        }\n        if (pageForm.type === 'ChangeRequest') {\n            if (!_.isNull(dataVM.ScheduledStartDate) || !_.isNull(dataVM.ScheduledEndDate)) {\n                if (!app.lib.CheckedManualActivityStartAndEndDate(dataVM.ScheduledStartDate, dataVM.ScheduledEndDate, localization.ScheduledStartDateExceedScheduledEndDate)) {\n                    app.lib.mask.remove();\n                    return;\n                }\n            }\n\n        }\n\n        var checkActivityDates = function (dataVM) {\n            if (dataVM.Activity && dataVM.Activity.length > 0) {\n                _.each(dataVM.Activity, function (activity) {\n                    if (activity.ClassName == \"System.WorkItem.Activity.ManualActivity\") {\n                        //check actual end dates\n                        if (!_.isNull(activity.ActualStartDate) || !_.isNull(activity.ActualEndDate)) {\n                            if (!app.lib.CheckedManualActivityStartAndEndDate(activity.ActualStartDate, activity.ActualEndDate, localization.MaActualStartDateExceedActualEndDate)) {\n                                app.lib.mask.remove();\n                                valid = false;\n                                return;\n                            }\n                        }\n                        //check scheduled end dates \n                        if (!_.isNull(activity.ScheduledStartDate) || !_.isNull(activity.ScheduledEndDate)) {\n                            if (!app.lib.CheckedManualActivityStartAndEndDate(activity.ScheduledStartDate, activity.ScheduledEndDate, localization.MaScheduledStartDateExceedScheduledEndDate)) {\n                                app.lib.mask.remove();\n                                valid = false;\n                                return;\n                            }\n                        }\n                    }\n                    if (activity.ClassName == \"System.WorkItem.Activity.ParallelActivity\" || activity.ClassName == \"System.WorkItem.Activity.SequentialActivity\") {\n                        if (valid) {\n                            checkActivityDates(activity);\n                        }\n                    }\n                });\n            }\n            return;\n        }\n\n        //check for MA dates\n        if (dataVM.Activity && dataVM.Activity.length > 0) {\n            checkActivityDates(dataVM);\n        }\n\n        //checks all required fields\n        formContainer.find(\".form-group\").removeClass(\"has-error\");\n        formContainer.find(\"[required]\").each(function () {\n            var jqEle = $(this);\n\n            //This code is to check if enum is required or not for IE9.\n            var property = !_.isUndefined(jqEle.attr(\"data-control-bind\")) ? jqEle.attr(\"data-control-bind\") : jqEle[0].name;\n            if (_.isUndefined(property) || property != \"\") {\n                if (!_.isUndefined(jqEle[0].kendoBindingTarget) && !_.isUndefined(jqEle[0].kendoBindingTarget.options)) {\n                    property = jqEle[0].kendoBindingTarget.options.propertyName;\n                }\n            }\n            if (!_.isUndefined(property)) {\n                var isEnum = _.isObject(pageForm.viewModel[property]) && !_.isUndefined(pageForm.viewModel[property].Id);\n                if ((_.isNull(pageForm.viewModel[property]) || (pageForm.viewModel[property] === \"\")) ||\n                    (_.isObject(pageForm.viewModel[property]) && isEnum && (_.isNull(pageForm.viewModel[property].Id) || pageForm.viewModel[property].Id === \"\")) ||\n                    (((_.isObject(pageForm.viewModel[property]) && !isEnum && (_.isUndefined(pageForm.viewModel[property].BaseId) || _.isNull(pageForm.viewModel[property].BaseId)))))) {\n                    valid = false;\n                    jqEle.parents(\".form-group\").addClass(\"has-error\");\n                }\n            }\n            //END This code is to check if enum is required or not for IE9.\n\n            var nodeName = jqEle[0].nodeName.toLowerCase();\n            if (nodeName != \"input\" && nodeName != \"textarea\") {\n                jqEle = jqEle.find(\"input\");\n            }\n            if (jqEle.val() == \"\") {\n                valid = false;\n                jqEle.parents(\".form-group\").addClass(\"has-error\");\n            }\n\n        });\n\n        //check for valid enums\n        formContainer.find(\".input-error\").each(function () {\n            valid = false;\n        });\n\n        formContainer.find(\"[data-invalid]\").each(function () {\n            valid = false;\n            var jqEle = $(this);\n            jqEle.parents(\".form-group\").addClass(\"has-error\");\n\n            jqEle.css({\n                \"background-color\": \"#FBE3E4\"\n            });\n\n        });\n        if (!required) {\n            failure(localization.RequiredFieldsErrorMessage);\n            app.lib.mask.remove();\n            return;\n        }\n        //end check of req fields\n\n\n        if (!valid) {\n            failure(localization.PleaseCorrectErrors);\n            app.lib.mask.remove();\n            return;\n        }\n        //end check for valid enums\n\n\n        //check for un added action log commnets\n        if (dataVM.get('commentDirty')) {\n            app.lib.message.add(\"<strong>\" + localization.UnAddedActionLogComment + \"</strong>\", \"warning\");\n\n            //only going to warn you once\n            dataVM.set('commentDirty', false);\n\n            app.lib.message.show();\n            //take use to the error message\n            window.scrollTo(0, 0);\n\n            app.lib.mask.remove();\n            return;\n        }\n        //end check for un added action log commnets\n\n        var current = dataVM.toJSON();\n        //This will optimized the passing of mulitple object to only send the deleted or/and added items\n        if (pageForm.newWI == false) {\n            app.lib.optimizeFormMultiObject.BeforeSave(current, pageForm.jsonRaw);\n        }\n\n        var mailBox = [];\n\n        //check if there are mentioned users, send mail to users\n        if (current.AppliesToTroubleTicket) {\n            if (current.AppliesToTroubleTicket.length > 0) {\n                var logs = current.AppliesToTroubleTicket || [];\n                for (var i in logs) {\n                    if (logs[i].MentionedUsers) {\n                        if (logs[i].MentionedUsers.length > 0 && !session.disableActionLogNotification) {\n                            var emailData = {\n                                To: logs[i].MentionedUsers.join(\";\"),\n                                Cc: '',\n                                Subject: (session.actionLogNotificationTitle) ? processTemplate(logs[i], current, session.actionLogNotificationTitle) : (current.Id.length != 0) ? '[' + current.Id + '] ' + current.Title : current.Title,\n                                Message: (session.actionLogNotificationTemplate) ? encodeURIComponent(processTemplate(logs[i], current, session.actionLogNotificationTemplate)) : logs[i].DescriptionHTML,\n                                AttachedFileName: '',\n                                WorkItemId: current.BaseId\n                            };\n                            mailBox.push(emailData);\n                        }\n                        delete current.AppliesToTroubleTicket[i].MentionedUsers;\n                    }\n                    delete current.AppliesToTroubleTicket[i].DescriptionHTML;\n                }\n            }\n        } else if (current.AppliesToWorkItem) {\n            if (current.AppliesToWorkItem.length > 0) {\n                var logs = current.AppliesToWorkItem || [];\n                for (var i in logs) {\n                    if (logs[i].MentionedUsers) {\n                        if (logs[i].MentionedUsers.length > 0 && !session.disableActionLogNotification) {\n                            var emailData = {\n                                To: logs[i].MentionedUsers.join(\";\"),\n                                Cc: '',\n                                Subject: (session.actionLogNotificationTitle) ? processTemplate(logs[i], current, session.actionLogNotificationTitle): (current.Id.length != 0) ? '[' +current.Id + '] ' + current.Title: current.Title,\n                                Message: (session.actionLogNotificationTemplate) ? encodeURIComponent(processTemplate(logs[i], current, session.actionLogNotificationTemplate)) : logs[i].DescriptionHTML,\n                                WorkItemId: current.BaseId\n                            };\n                            mailBox.push(emailData);\n                        }\n                        delete current.AppliesToWorkItem[i].MentionedUsers;\n                    }\n                    delete current.AppliesToWorkItem[i].DescriptionHTML;\n                }\n            }\n        }\n\n        var postData = encodeURIComponent(JSON.stringify({\n            isDirty: true,\n            current: current,\n            original: pageForm.jsonRaw\n        }));\n        $.ajax({\n            type: 'POST',\n            dataType: 'text',\n            url: saveUrl,\n            data: \"formJson=\" + postData,\n            success: function (data, status, xhr) {\n\n                //make the form clean so we don't trigger onbeforeunload\n                dataVM.set(\"isDirty\", false);\n\n                _.each(mailBox,\n                    function(item) {\n                        sendMentionsMail(item);\n                    });\n\n                if (data.search('loginForm') < 0) { // Logged out check                   \n                    success(data);\n                } else {\n                    //session expired\n                    window.location = \"/Login/Login?ReturnUrl=\" + window.location.pathname;\n                }\n            },\n            error: function (xhr, ajaxOptions, thrownError) {\n                //do we have a data conflict\n                if (xhr.status == 409) {\n\n                    $.when(kendo.ui.ExtYesNoDialog.show({\n                        title: localization.DataConflict,\n                        message: localization.DataConflictError + \"<br/><br/><small>(\" + localization.DataConflictDescription + \")</small>\",\n                        icon: \"fa fa-exchange text-danger\",\n                        width: \"500px\",\n                        height: \"175px\"\n                    })\n                    ).done(function (response) {\n                        if (response.button === \"yes\") {\n                            //open in new tab, may not work this way in all browsers\n                            window.open(window.location.pathname);\n                        } else {\n                            //refresh page\n                            location.href = window.location.pathname;\n                        }\n                    });\n\n                } else if (xhr.status == 503) { //SDK unavailable\n                    var jsonRsp = xhr.responseText;\n                    app.lib.log(jsonRsp);\n                    var msgResponse = JSON.parse(jsonRsp);\n                    //determine error Message\n                    var errorMsg = localization.RequestFailed;\n                    if (msgResponse.exception && msgResponse.exception.length > 0) {\n                        errorMsg = msgResponse.exception;\n                    }\n                    //alert the user\n                    kendo.ui.ExtAlertDialog.show({\n                        title: localization.Failed,\n                        message: errorMsg,\n                        icon: \"fa fa-times-circle text-danger\"\n                    });\n                } else if (xhr.status == 403) { //user does not have access\n                    var jsonRsp = xhr.responseText;\n                    var errorMsg = \"\";\n                    try {\r\n                        app.lib.log(jsonRsp);\n                        var msgResponse = JSON.parse(jsonRsp);\n                        //determine error Message\n                        errorMsg = localization.RequestFailed;\n                        if (msgResponse.exception && msgResponse.exception.length > 0) {\r\n                            errorMsg = msgResponse.exception;\r\n                        }\r\n                    }\n                    catch (ex) {\r\n                        errorMsg = xhr.responseText;\r\n                    }\n                    //alert the user\n                    kendo.ui.ExtAlertDialog.show({\n                        title: localization.Failed,\n                        message: errorMsg,\n                        icon: \"fa fa-times-circle text-danger\"\n                    });\n\n\n                } else {\n\n                    failure();\n                    console && app.lib.log(localization.RequestFailed);\n                    app.lib.log(thrownError);\n\n                    var jsonRsp = xhr.responseText;\n                    app.lib.log(jsonRsp);\n\n                    var msgResponse = JSON.parse(jsonRsp);\n                    //determine error Message\n                    var errorMsg = localization.RequestFailed;\n                    if (msgResponse.exception && msgResponse.exception.length > 0) {\n                        errorMsg = msgResponse.exception;\n                    }\n\n                    kendo.ui.ExtAlertDialog.show({\n                        title: localization.ErrorDescription,\n                        message: errorMsg,\n                        icon: \"fa fa-exclamation\"\n                    });\n                }\n            },\n            processData: false,\n            async: true\n        });\n    }\n    //make pageForm Happy\n    pageForm.save = save;\n\n    // Priority Matrix logic for Incident\n    var setPriorityByMatrix = function () {\n        if (!priorityJSON) {\n            return;\n        }\n\n        var priority = !_.isNull(pageForm.viewModel.Priority) ? pageForm.viewModel.Priority : 0;\n        var priorityJSONU = priorityJSON.Matrix.U;\n        for (var i in priorityJSONU) {\n            var obj = priorityJSONU[i];\n            if (obj.Id == pageForm.viewModel.Urgency.Id) {\n                for (var x in obj.I) {\n                    var obj2 = obj.I[x];\n                    if (obj2.Id == pageForm.viewModel.Impact.Id) {\n                        priority = obj2.P;\n                        break;\n                    } else {\n                        priority = 9;\n                    }\n                }\n            }\n        }\n\n\n        if (priority != pageForm.viewModel.Priority) {\n            pageForm.viewModel.set(\"Priority\", priority);\n        }\n    }\n\n    //Set First Assigned Date(Incident/Service Request)\n    var setFirstAssignedDateValue = function () {\n        if ((session.user.Analyst == 1) && (pageForm.type === \"Incident\" || pageForm.type === \"ServiceRequest\")) {\n            if (_.isUndefined(pageForm.viewModel.AssignedWorkItem))\n                return;\n\n            var bHasCurrentAssignee = (pageForm.viewModel.AssignedWorkItem.BaseId != null) ? true : false;\n            var assignedDateEle = $(\"input[name='FirstAssignedDate']\");\n\n            if (pageForm.viewModel.FirstAssignedDate == null && bHasNoInitalAssignee && bHasCurrentAssignee) {\n                var date = new Date();\n                pageForm.viewModel.FirstAssignedDate = date.toISOString();\n\n                if (assignedDateEle.attr('data-control') == 'datePicker') {\n                    assignedDateEle.val(kendo.toString(new Date(), \"d\"));\n                } else if (assignedDateEle.attr('data-control') == 'dateTimePicker') {\n                    assignedDateEle.val(kendo.toString(new Date(), \"g\"));\n                }\n\n            } else if (bHasNoInitalAssignee && !bHasCurrentAssignee) {\n\n                //clear out first assigned date if first assignee is removed(prior to saving)\n                pageForm.viewModel.FirstAssignedDate = null;\n\n                if (assignedDateEle.attr('data-control') == 'datePicker') {\n                    assignedDateEle.val(\"\");\n                } else if (assignedDateEle.attr('data-control') == 'dateTimePicker') {\n                    assignedDateEle.val(\"\");\n                }\n            }\n\n\n\n\n\n        }\n    }\n\n    //add record assigned log everytime assignee is changed\n    var isBounded = false;\n    var lastAddedAssignee = null;\n    var addRecordAssignedLog = function () {\n\n        if ((session.user.Analyst == 1) && (pageForm.type === \"Incident\" || pageForm.type === \"ServiceRequest\" || pageForm.type === \"Problem\")) {\n            if (_.isUndefined(pageForm.viewModel.AssignedWorkItem))\n                return;\n\n            if (!isBounded) {\n                pageForm.viewModel.AssignedWorkItem.bind(\"change\", function (obj) {\n                    addRecordAssignedLog();\n                });\n                isBounded = true;\n            }\n\n            //skip on edit form page load\n            if (!pageForm.newWI && _.isNull(lastAddedAssignee)) {\n                lastAddedAssignee = !_.isNull(pageForm.viewModel.AssignedWorkItem.DisplayName) ? pageForm.viewModel.AssignedWorkItem.DisplayName : \"\";\n                return;\n            }\n\n            if ((!_.isNull(pageForm.viewModel.AssignedWorkItem.DisplayName) && !_.isUndefined(pageForm.viewModel.AssignedWorkItem.DisplayName))\n                && (pageForm.viewModel.AssignedWorkItem.DisplayName != lastAddedAssignee)) {\n                var actionLogType = app.controls.getWorkItemLogType(pageForm.viewModel);\n\n                if (actionLogType) {\n                    pageForm.viewModel[actionLogType]\n                        .unshift(new app.dataModels[actionLogType].recordAssigned(pageForm.viewModel.AssignedWorkItem.DisplayName));\n                }\n\n                lastAddedAssignee = pageForm.viewModel.AssignedWorkItem.DisplayName;\n            }\n        }\n    }\n\n    //set schedule duration for release record\n    var isScheduleBounded = false;\n    var setScheduleDuration = function () {\n\n        if ((pageForm.type !== \"ReleaseRecord\")) { return; }\n\n        if (!isScheduleBounded) {\n            pageForm.viewModel.bind(\"change\", function (obj) {\n                isScheduleBounded = true;\n                setScheduleDuration();\n            });\n        }\n\n        var scheduledDuration = calculateTimeDuration(pageForm.viewModel[\"ScheduledStartDate\"], pageForm.viewModel[\"ScheduledEndDate\"]);\n        var actualDuration = calculateTimeDuration(pageForm.viewModel[\"ActualStartDate\"], pageForm.viewModel[\"ActualEndDate\"]);\n        var scheduledDowntimeDuration = calculateTimeDuration(pageForm.viewModel[\"ScheduledDowntimeStartDate\"], pageForm.viewModel[\"ScheduledDowntimeEndDate\"]);\n        var actualDowntimeDuration = calculateTimeDuration(pageForm.viewModel[\"ActualDowntimeStartDate\"], pageForm.viewModel[\"ActualDowntimeEndDate\"]);\n\n        pageForm.viewModel.set(\"ScheduleDuration\", scheduledDuration);\n        pageForm.viewModel.set(\"ActualDuration\", actualDuration);\n        pageForm.viewModel.set(\"ScheduledDowntimeDuration\", scheduledDowntimeDuration);\n        pageForm.viewModel.set(\"ActualDowntimeDuration\", actualDowntimeDuration);\n\n    }\n    var calculateTimeDuration = function (startDate, endDate) {\n        if (_.isNull(startDate) || _.isNull(endDate)) { return \"\"; }\n        var dtStart = new Date(startDate);\n        var dtEnd = new Date(endDate);\n\n        var dayDiff = Math.round((dtEnd - dtStart) / 1000 / 60 / 60 / 24);\n        var hourDiff = Math.round(dtEnd.getHours() - dtStart.getHours());\n        var minDiff = Math.round(dtEnd.getMinutes() - dtStart.getMinutes());\n\n        if (hourDiff < 0) {\n            dayDiff = dayDiff - 1;\n            hourDiff = 24 + hourDiff;\n        }\n        if (minDiff < 0) {\n            hourDiff = hourDiff - 1;\n            minDiff = 60 + minDiff;\n        }\n\n        return localization.ScheduleDurationText.replace(\"{0}\", dayDiff).replace(\"{1}\", hourDiff).replace(\"{2}\", minDiff);\n    }\n\n    //set a global vm change function\n    var onVmChange = function (e) {\n        //console.log(e);\n        //console.log(e.field);\n\n        //This will optimized the passing of mulitple object to only send the deleted or/and added items\n        app.lib.optimizeFormMultiObject.OnVmChange(e);\n\n        //if we have a custom function bound to this change then fire it \n        if (_.isFunction(changesArray[e.field])) {\n            changesArray[e.field](e);\n        }\n\n        if (e.field === 'Urgency' || e.field === 'Impact') {\n            //update priority for IRs, which is calculated based on Urgency and Impact vals\n            setPriorityByMatrix();\n        }\n\n        if (e.field === 'Title') {\n            //update displayname every time title changes\n            var displayName = !_.isNull(pageForm.viewModel.Title) ? pageForm.viewModel.Id + \" - \" + pageForm.viewModel.Title : pageForm.viewModel.Id;\n            pageForm.viewModel.set(\"DisplayName\", displayName);\n        }\n\n        if (e.field === 'AssignedWorkItem.BaseId') {\n            setFirstAssignedDateValue();\n        }\n    }\n    //make the things global - grrrr\n    pageForm.onVmChange = onVmChange;\n\n    init();\n\n});\ndefine(\"forms/wiMain\", function(){});\n\n"]}