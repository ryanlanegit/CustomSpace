{"version":3,"sources":["viewPanels/queryBuilder/controller.js","require/text.js","structure/header/view.html!text","structure/header/controller.js","structure/tab/tabNavigation/view.html!text","structure/tab/tabNavigation/controller.js","structure/tab/tabPane/view.html!text","structure/tab/tabPane/controller.js","structure/tab/tabContent/view.html!text","structure/tab/tabContent/controller.js","structure/tab/tabData/view.html!text","structure/tab/tabData/controller.js","structure/column/view.html!text","structure/column/controller.js","structure/content/view.html!text","structure/content/controller.js","viewPanels/facetedSearch/view.html!text","viewPanels/facetedSearch/controller.js","viewPanels/html/view.html!text","viewPanels/html/controller.js","../CustomSpace/Scripts/viewPanels/serviceCatalog/view.html!text","../CustomSpace/Scripts/viewPanels/serviceCatalog/controller.js","viewPanels/alternateSC/view.html!text","viewPanels/alternateSC/controller.js","grids/structure/defaultConfiguration/controller.js","grids/structure/events/controller.js","grids/structure/toolbar/view.html!text","grids/structure/toolbar/controller.js","grids/columnTemplates/columnBase/controller.js","grids/columnTemplates/string/controller.js","grids/columnTemplates/number/controller.js","grids/columnTemplates/bool/controller.js","grids/columnTemplates/date/controller.js","grids/columnTemplates/SLOStatus/view.html!text","grids/columnTemplates/SLOStatus/controller.js","grids/columnTemplates/command/controller.js","grids/columnTemplates/input/controller.js","grids/columnTemplates/anchor/controller.js","grids/structure/dataSource/controller.js","grids/structure/sourceFields/controller.js","grids/structure/drawer/createLocalizationTemplate.html!text","grids/structure/drawer/controller.js","grids/mobile/view.workitem.html!text","grids/mobile/view.configitem.html!text","grids/mobile/view.knowledgemanager.html!text","grids/mobile/view.announcement.html!text","grids/mobile/view.amGeneral.html!text","grids/mobile/controller.js","grids/gridBuilder.js","viewPanels/queryBuilder/view.html!text","viewPanels/chart/view.html!text","viewPanels/chart/controller.js","viewPanels/radialGauge/view.html!text","viewPanels/radialGauge/controller.js","viewPanels/calendar/view.html!text","viewPanels/calendar/controller.js","viewPanels/trendContainer/view.html!text","viewPanels/trendContainer/view.mobile.html!text","viewPanels/trendContainer/controller.js","viewPanels/articleList/view.html!text","viewPanels/articleList/controller.js","viewPanels/viewPanelBuilder.js","viewBuilder.js","structure/drawer/gridTask/multiEditController.js","forms/tasks/anchor/view.html!text","forms/tasks/anchor/controller.js","forms/tasks/analystByGroup/view.html!text","forms/fields/enum/view.html!text","forms/fields/enum/controller.js","forms/tasks/drawerTask/view.html!text","forms/tasks/analystByGroup/controller.js","forms/popups/notificationPopup/view.html!text","forms/tasks/assignToMe/controller.js","forms/tasks/changeStatus/view.html!text","forms/tasks/changeStatus/view.drawer.html!text","forms/fields/longstring/view.html!text","forms/fields/longstring/controller.js","forms/fields/boolean/view.html!text","forms/fields/boolean/controller.js","forms/tasks/changeStatus/controller.js","forms/tasks/amChangeStatus/controller.js","forms/tasks/acknowledge/view.html!text","forms/tasks/acknowledge/controller.js","forms/tasks/convertToParent/controller.js","forms/tasks/linkToParent/view.html!text","forms/header/relationships/view.html!text","forms/tasks/linkToParent/controller.js","forms/tasks/newStatus/view.html!text","forms/tasks/newStatus/controller.js","forms/tasks/sendEmail/mobile_view.html!text","forms/tasks/sendEmail/view.html!text","forms/popups/userPickerPopup/view.html!text","forms/popups/userPickerPopup/controller.js","forms/flyout/fileAttachmentsFlyout/mobile_view.html!text","forms/flyout/fileAttachmentsFlyout/view.html!text","forms/flyout/fileAttachmentsFlyout/controller.js","../CustomSpace/Scripts/forms/tasks/sendEmail/controller.js","forms/tasks/custom/controller.js","forms/tasks/spacer/view.html!text","forms/tasks/spacer/controller.js","forms/tasks/associateItem/controller.js","forms/tasks/setDate/view.html!text","forms/fields/date/view.html!text","forms/fields/date/controller.js","forms/fields/string/view.html!text","forms/fields/string/controller.js","forms/tasks/setDate/controller.js","forms/tasks/updateAssetManagement/controller.js","forms/tasks/updateSupersededHardware/controller.js","forms/tasks/copyLicenseAssignments/view.html!text","forms/tasks/copyLicenseAssignments/controller.js","../CustomSpace/customtasks.tmpl.html!text","forms/tasks/copyToNewWI/controller.js","forms/tasks/increaseAvailableCount/view.html!text","forms/fields/longString/controller.js","forms/fields/numeric/view.html!text","forms/fields/numeric/controller.js","forms/tasks/increaseAvailableCount/controller.js","forms/tasks/decreaseAvailableCount/view.html!text","forms/tasks/decreaseAvailableCount/controller.js","forms/tasks/print/controller.js","forms/tasks/addMeToWatchList/controller.js","forms/taskBuilder.js","drawerBuilder.js","viewMain.js"],"names":["updateModel","e","sender","widget","setTimeout","$","element","parent","hide","this","show","define","module","text","fs","Cc","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","location","href","defaultProtocol","protocol","replace","defaultHostName","hostname","defaultPort","port","undefined","buildMap","masterConfig","config","version","strip","content","matches","match","jsEscape","createXhr","xhr","i","progId","XMLHttpRequest","ActiveXObject","parseName","name","modName","ext","temp","index","indexOf","isRelative","substring","length","moduleName","xdRegExp","useXhr","url","uProtocol","uHostName","uPort","exec","split","toLowerCase","finishLoad","onLoad","isBuild","load","req","inlineText","parsed","nonStripName","toUrl","get","err","error","write","pluginName","hasOwnProperty","asModule","writeFile","extPart","fileName","value","textWrite","contents","env","process","versions","node","require","nodeRequire","callback","errback","file","readFileSync","headers","header","open","setRequestHeader","onXhr","onreadystatechange","evt","status","readyState","Error","responseText","onXhrComplete","send","Packages","java","stringBuffer","line","io","File","lineSeparator","lang","System","getProperty","input","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","charAt","append","String","toString","close","Components","classes","interfaces","utils","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","init","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString","path","tpl","template","build","vm","built","_","view","isUndefined","title","localization","document","subTitle","right","hasRight","someVal","kendo","View","wrap","model","render","controller","colSize","ColSize","hasTitle","buildView","customCls","containerCls","type","contentClass","containerClass","titleClass","destroy","viewModel","cssClass","observable","SearchPlaceholder","Definition","textField","TextField","selectedSearchResult","layout","Layout","items","data","DataSource","schema","id","transport","read","dataType","scModel","homeBC","scLabel","AllRequests","favRO","topRO","topKA","favROLoaded","topROLoaded","topKALoaded","topsVisible","catalogVisible","taxonomyVisible","session","forceSearch","loadingVisible","dataSource","currentView","navs","cache","folded","favROs","topROs","topKAs","count","openRequestOffering","preventDefault","serId","elm","target","roId","is","closest","roLink","roLinkType","isNull","window","showCatalog","set","app","lib","getQueryParams","queryParams","isString","showSingleService","showSingleCategory","click","forceSearchViewSC","hideOverlay","toggleFavorite","updateLocalDataItem","each","cat","requestofferings","ro","RequestOfferingId","IsFavorite","sync","Id","stopPropagation","ajax","requestOfferingId","imageElementId","done","toggleClass","emptyOverlay","serviceOfferingId","isObject","categoryId","siblings","setNavFocus","filter","field","operator","singleSoOverlay","showIn","showOverlay","removeNavFocus","link","removeClass","catId","serviceId","find","addClass","singleCat","showSearchResultsInOverlay","showRoSearchResults","overlayVm","roResults","totalResults","sectionTitle","localizationHelper","localize","showFavSearchResults","favResults","showKaSearchResults","kaResults","searchText","searchString","scope","rawResults","results","returnToPage","events","publish","hasSearchText","result","cleanedResult","Type","RequestOfferingTitle","Title","ServiceOfferingId","RequestOfferingDescription","Description","RequestOfferingLinkUrl","RequestOfferingLinkTargetType","push","breadcrumbView","footerView","showHome","resetCatalog","showFullCatalog","ServiceCatalog","easing","duration","divEle","empty","subscribe","eventData","scContent","catalog","bind","skipTo","defer","animate","scrollTop","offset","top","height","defaultConfig","autoBind","columnResizeHandleWidth","grid","options","opts","reorderable","scrollable","selectable","resizable","pageable","pageSizes","pageSize","buttonCount","messages","Empty","of","Of","first","First","previous","Previous","next","Next","last","Last","itemsPerPage","ItemsPerPage","filterable","extra","info","Showitemswithvaluethat","and","And","or","Or","Filter","clear","Clear","operators","string","eq","neq","contains","doesnotcontain","startswith","endswith","number","gt","gte","lt","lte","SLOStatus","Contains","anchor","groupable","Dragacolumnheader","sortable","mode","columnMenu","columns","ChooseColumns","sortAscending","SortAscending","sortDescending","SortDescending","extend","editable","handleRowClick","selected","myGrid","setDefaultRoute","itemType","gridRow","WorkItemType","BaseId","ParentWorkItemType","ParentWorkItemId","getActivityParentWorkItem","fwdLocation","pop","objectId","GridSubType","approvalUrl","dataItem","GridType","openModal","ServiceInfo","ArticleId","ui","ExtAlertDialog","ErrorDescription","icon","message","WorkItemTypeClass","clickDefinitions","useDefaultRowClick","event","rowClicks","clickDef","keys","rowClick","targetType","actionUrl","customFunction","getFunctionFromString","actionFunction","css","fromQueryBuilder","isSavedQuery","origin","selectedRowItem","detailsPopupEle","appendTo","detailsPopup","kendoCiresonWindow","width","actions","refresh","html","DisplayName","center","builtinEvents","edit","isNew","container","attr","gridId","bindConfigItemGridFilter","keypress","keyCode","which","filterGrid","kendoComboBox","prefix","errors","dataTextField","dataValueField","on","bindConfigItemGridFilterMobile","listControl","classId","cb","Warning","SelectClassAlert","bindTabToggles","toggleGridView","filteringType","val","isMobile","pill","hasClass","subType","clearFilters","storage","gridStates","remove","reload","initMobileWiGridSearch","filterMobileWiGrid","bindMyWorkTabToggles","col","gridUtils","showColumn","hideColumn","toggleCheckboxes","gridType","exportToExcel","kendoGrid","getKendoGrid","exportFileName","excel","allPages","proxyURL","saveAsExcel","map","el","containerId","toolbarContainer","toolbar","customEventCount","isMobileDevice","ResetGridFilters","ExportToExcel","Export","ordinal","FilterItems","key","bindActivityCheckboxMobile","bindCheckBoxes","ShowActivities","Activities","bindInactiveCheckboxMobile","ShowInactiveWorkItems","Inactive","comboEle","checkboxEle","comboControlSettings","highlightFirst","user","LanguageCode","datatype","fields","change","locale","showAlreadyTranslated","prop","kendoDropDownList","originalConfigData","combo","store","after","Active","Closed","WorkItem","Approval","ManualActivities","once","currentState","box","checkbox","toolId","savedState","getCurrentState","setSavedState","prev","cbContainer","sloFilter","displayName","SLOStatusActive","SLOStatusMet","SLOStatusWarng","SLOStatusBreached","SLOStatusPaused","optionLabel","gridJsonDataForCountdown","SLO","Init","setInterval","DoCountDown","sloTempContainer","ViewModel","SLOHover","sloElement","mouseenter","post","workItemId","allSlo","isBreach","isMet","Status","clone","hourDispalay","Time","Hours","minDisplay","Minutes","offsetWidth","hover","mouseleave","CreateSLOToGrid","isTriggerdFromGrid","curImg","sloInstance","isMetOrBreach","txtTime","ServerDatetimeNow","eval","WarningDate","iconClass","Seconds","mins","Math","abs","hour","getSeconds","parseInt","AssignSLOJson","command","currentTarget","hasPendingEdits","row","dirty","uid","when","ExtYesNoDialog","response","button","mask","apply","applyLocalizationDataSourceConfig","applyKmDashboardDataSourceConfig","configureGenericGrid","setDataSourceOverrides","onColumnReorder","saveColumnState","onColumnResize","onColumnShow","onColumnHide","onGridChange","noState","updateSelectedRows","onDataBound","onRowClick","log","denoteAppliedFilters","setGridStatePersistence","initRowClickHandling","handleEmptyResults","handleRowHoverEvent","DataType","parse","num","Number","dataUrl","newColumn","cancelPendingChanges","cancelChanges","savePendingChanges","gridControl","hasChanges","saveChanges","addNewLocalization","popup","visible","popupViewModel","Key","English","ContextNotes","Locale","hasDuplicateKey","formInvalid","validateForm","isValid","saveRecord","insert","trim","cancel","checkIfKeyIsValid","ele","contentType","accepts","JSON","stringify","keyIsValid","setCanSubmit","checkForValue","enabled","titleKey","wiTpl","ciTpl","kmTpl","announcementTpl","amGeneralTpl","controlId","editUrl","serverPaging","page","total","serverFiltering","templateName","source","tasks","initTemplate","item","columnBase","boolean","date","slostatus","sourceFields","drawer","mobileGrid","configuration","definition","tempProperties","fromViewBuilder","fromGridBuilder","gridModel","isAnalyst","Analyst","currentContainer","layoutContainer","toolbarConfig","column","analystOnly","exception","_obj","templateCol","dataSourceOptions","dataBound","columnReorder","columnResize","columnShow","columnHide","dsConfig","columnMenuInit","focus","drawerMenu","gridModels","gridWrapper","layoutSize","refreshInterval","queryBuilderStandardConfigurationDefinitions","configurationName","schemaDef","commonFields","query","navigationNodeId","queryName","sectionDefs","sections","sectionDef","displayKey","chain","concat","sortBy","createCriteria","parentGroup","criteria","groupId","sectionId","sectionTypeName","getSectionSchemaFields","validOperators","showCriteriaControl","fieldTypes","fieldType","createCriteriaGroup","group","groupOperator","createCriteriaSection","newGUID","criteriaRoot","sec","findContainingCriteria","topLevelGroup","foundCriteria","findContainingSection","ops","display","canHaveValue","ne","startsWith","endsWith","between","isnull","isnotnull","isme","isnotme","queryNameValid","RegExp","test","queryNameInValid","selectedSection","gridVm","gridDefaultConfig","persistGridState","editMode","renderGrid","validActions","search","save","saveAs","delete","clearQuery","enum","affectedconfigitem","relatedconfigitem","bool","double","section","w","isFirstSection","paddingLeft","criteriaGroup","newCriteria","newGroup","addCriteriaSection","newSection","removeCriteria","removeSection","splice","onFieldChanged","saveQuery","viewPanel","savedSearch","displayStringText","searchValue","stringifyQueryModel","success","clearNodeStorage","clearViewPanelStorage","saveQueryAs","deleteQuery","searchOnEnter","charCode","originalEvent","srcElement","blur","executeSearch","ex","getGridVm","updateSavedQueryModel","filterCriteria","dataTable","initialize","ignoreFieldArray","ignoreFields","v","onOperatorChanged","Name","criteriaItem","numericValue","relativeType","relativeDateValue","offsetValue","relativeDateTime","getRelativeDate","Date","setHours","relativeEndType","relativeEndDateValue","offsetEndValue","numericEndValue","relativeEndDateTime","relativeDate","currentDate","quarter","round","getMonth","setDate","getDate","setMonth","setFullYear","getFullYear","updateCriteriaGroup","updateCriteria","enumValue","Text","updateCriteriaSection","workItemConfig","isClear","urlQueryParams","searchtext","decodeURIComponent","templateValue","stringValue","getNavNode","ParentId","IsAdmin","hidden","attributes","class","promises","isVisible","queryId","series","categoryAxis","seriesColors","isLegendVisible","dataSourceGroup","dataSourceSort","legendPosition","buildChart","chartEle","defaultSeriesColor","dataSourceSettings","addUrlParam","requestStart","defferred","Deferred","promise","resolve","sort","chartSeries","categoryField","getLocalizedText","overlay","gradient","kendoChart","theme","tooltip","legend","position","seriesDefaults","localizationKey","shortenLabel","maxLength","valueField","min","max","startAngle","endAngle","labels","ranges","pointerColor","getGaugeValue","setRadialGaugeScale","kendoRadialGauge","pointer","color","scale","async","fetch","at","updatedTpl","views","description","startDate","endDate","defaultView","add","moveStart","move","moveEnd","navigate","_model","formattedDate","_selection","schedDataSource","SchedulerDataSource","batch","from","start","end","scheduler","dateHeaderTemplate","setDataSource","propertyValue","size","valueFontSize","baseFontSize","labelFontSize","labelColor","modelClass","label","propertyName","labelSize","lineHeight","articles","ObservableArray","facetedSearch","serviceCatalog","alternateSC","queryBuilder","chart","radialGauge","calendar","trendContainer","articleList","getViewPanelDefinition","ViewPanelId","templateObj","TypeId","tmpl","tabNavigation","tabPane","tabContent","tabData","composeTabs","layoutTemplate","nestedContent","composeTabNavigation","tabs","tabsContTmpl","tabsContainer","getContainer","tab","paneTmpl","tabPaneContainer","composeContent","viewContainer","composeSemanticPage","contentObject","containerEle","scopedContainer","divTmpl","builtContainer","isArray","contentArray","childContent","composeBodyContent","structure","localCallback","rows","rowNode","rowContainer","setColumnSizes","columnNode","panelTmpl","panelContainer","returnedContainer","nestedContainer","tabtplString","tabnavCont","focusSet","tabId","active","focusedTabName","getParameterByName","tabNodeNameKey","tplString","wrapperContainer","pageContainer","layoutType","appFilePath","pageTitle","headerTemplate","headerTmpl","before","rowElm","headerElm","body","getEditedFields","editedFields","availableFields","selectedValue","fieldValue","propertyType","btnViewModel","editedValue","onExceedSelectionCount","drawermenu","btnConfig","formTitleKey","endpointUrl","selectedWorkItemProjectionId","currentSelection","selectedType","calculatePriority","impactId","urgencyId","targetControlId","multiEditFormViewModel","formView","workItems","getAvailableFields","formSubmit","submitData","saveSuccess","saveFailure","formDestroy","closeFormInDrawer","targetGrid","targetGridState","recheckGridState","postData","projectionId","updateServiceManagement","itemIds","pluck","priorityMatrix","matrixObj","priority","getPriorityByMatrix","formCancel","formClose","createFormInDrawer","onTargetControlChange","selectedDataItems","select","toArray","setEnabled","selectedTypes","reduce","memo","currentVal","constants","projectionIds","SystemWorkItemServiceRequestViewModel","SystemWorkItemIncidentViewModel","isEnabled","setVisible","btnElement","addButton","listView","selectedCards","wrapper","enumId","leafNodeOnly","showPath","properties","EnumId","Required","Disabled","disabled","LeafNodeOnly","ShowPath","FilterIds","anchorTemplate","windowTemplate","enumPickerControl","drawerTaskTemplate","configEnumId","configPropertyName","callerType","isBulkEdit","originalAssignedName","originalAssignedId","originalSupportGroup","originalSupportName","originalSupportId","getTaskViewModel","modalView","taskVm","analystByGroup","selectedWorkItem","groupPropertyName","groupPropertyEnumId","Configs","modalEle","modalControl","AssignToAnalystByGroup","windowViewModal","assignToDataSource","getUserDataSource","userEnabled","okEnabled","userChange","_prev","AssignedWorkItem","okClick","ProjectionId","UpdateServiceManagement","ItemIds","EditedFields","getBulkEditedFieldData","onBulkEditSaveSuccess","onBulkEditSaveFailure","TierQueue","SupportGroup","cancelClick","buildEnumPicker","props","vmModel","enumControl","controls","groupProperties","PropertyName","PropertyDisplayName","groupPicker","groupDropDownControl","handler","_dropdown","groupTreeViewControl","_treeview","assignToCombobox","setSupportGroupUsers","current","setAdditionBulkTaskProperties","anchorViewModel","drawerTaskVm","assignedWorkItem","baseId","showTooltip","selectedStatusNames","singleSelectedType","singleSelectedStatusName","setTrimmedWiType","enumPickerIds","ServiceRequestSupportGroup","IncidentTierQueue","json","trimmedType","EditedValue","assignedSupportGroup","PropertyType","PropertyRelationshipId","ActionType","RecordAssignedDescription","DescriptionDisplay","EnteredBy","EnteredDate","toISOString","LastModified","RecordAssigned","Image","iconPath","icons","getOriginalFormValues","selectedSupportGroupId","vmWindow","asssignToComboBox","ChooseOne","buildAndRender","windowEle","taskListItem","builtAnchor","anchorElm","formTaskViewModel","onClick","toolTipMessage","Target","notificationTpl","notificationTemplate","assignToMe","cont","popupNotification","kendoNotification","templates","infoMessage","AssignedToMeNotificationMessage","longStringController","CheckLength","elem","helpBlock","maxChars","removeAttr","buildLongStringView","limitLength","MinLength","MaxLength","LimitLength","Rows","IsVisible","Inline","changeStatusTemplate","changeStatusDrawerTemplate","txtAreaControl","checkBoxControl","IsAutoResolve","AutoResolve","resolveChildIncidentSettings","originalVm","ResolutionCategory","ResolutionDescription","ChildWorkItem","Notes","ImplementationResults","RelatesToWorkItem","Resolution","workItemStatuses","incidentResolved","Incident","Resolved","incidentActive","incidentClosed","incidentActivePending","Pending","serviceRequestCancelled","ServiceRequest","Cancelled","serviceRequestCompleted","Completed","serviceRequestSubmitted","Submitted","serviceRequestInProgress","InProgress","serviceRequestOnHold","OnHold","serviceRequestFailed","Failed","serviceRequestClosed","changeRequestFailed","ChangeRequest","changeRequestClosed","changeRequestInProgress","changeRequestOnHold","changeRequestCancelled","changeRequestSubmitted","changeRequestCompleted","problemResolved","Problem","problemClosed","releaseRecordClosed","ReleaseRecord","releaseRecordCancelled","releaseRecordCompleted","releaseRecordFailed","releaseRecordEditing","Editing","releaseRecordOnHold","releaseRecordInProgress","getFormTaskViewModel","changeStatus","modalWindowEle","modalWindowControl","ChangeStatusTask","activate","selectedWiType","modalWindowViewModel","currentStatusId","onModalActivate","statusTreeViewControl","statusDropDownControl","statusEnumId","resolutionCategoryEnumId","resolveChildSettings","letAnalystDecide","workItemModel","requireResolution","resolveChildIncident","actionLogType","getWorkItemLogType","RequestCategoryRequiredError","ImplementationNotesRequiredError","resDateEle","unshift","dataModels","recordResolved","RelatesToTroubleTicket","IsParent","ResolveChildIncident","ResolvedLetAnalystDecide","resolveChildIncidents","closeDateEle","RelatesToTroubleTicket_","recordClosed","ClosedByUser","recordActivated","comDateEle","resolveRelatedWorkItems","showComment","showResolution","showAutoResolve","createStatusPicker","enableResolutionSettings","createIncidentResolutionFields","createResultFields","createProblemResolutionFields","getDrawerTaskViewModel","currentSelectionOfParents","containsParents","currentStatusName","statusTypeId","resolutionResultEnumId","handleStatusControlChange","modalViewModel","toggleAdditionalFields","selectedWorkItems","selectedParents","newStatusObj","newResolutionId","resolutionDescription","newResultId","resultNote","resultComment","wiStatusTypeId","irStatusResolved","srStatusCompleted","srStatusCancelled","irCategoryRequired","srNotesRequired","irResolveChildOption","windowViewModel","bulkEditFormIsValid","postBulkEditChangesWithChildren","getDrawerTaskEditedFields","postBulkEditChanges","selectedStatusIds","singleSelectedStatusId","ServiceRequestImplementationResults","parentItems","workItem","IncidentResolution","treeControl","dropDownControl","changeRules","getFormTaskChangeRules","changeRulesFilter","itemFilter","comboDataSource","getResolveChildIncidentSettings","builtModal","resolutionProperties","implementationNotesProperties","buildTextArea","autoResolveProperties","buildCheckbox","implementationResultProperties","commentProperties","resolutionDescriptionProperties","letAnalystDecideProperties","statusProperties","cbTxtAreaControl","txtCheckboxControl","getDrawerTaskChildEditedFields","resolutionCategoryId","propertyRelationshipId","RecordResolved","statusId","ChildIncidentResolutionCategorySameAsParent","ChildIncidentResolutionCategory","ResolvedDate","Array","logic","filters","windowVm","parentIds","childIds","childId","uniqIds","uniq","childResolutionCatId","childrenPostData","wiSelectionPostData","postCallback","drawerTaskViewModel","anchorEleProps","anchorTemplateProps","enumPicker","ChangeHardwareAssetStatus","enumName","ChangeHardwareAssetType","ChangeSoftwareAssetStatus","ChangeSoftwareAssetType","tempStatus","win","_vmWindow","acknowledge","Acknowledge","dateTimeNow","dateTimeNowUTC","actionLogComment","isPrivate","charactersRemaining","textCounter","FirstResponseDate","respondDateEle","newActionLog","Comment","IsPrivate","ActionLog","pageForm","isParent","confirmTitle","confirmMessage","convertToParent","ChangesApplied","exceptionMessage","RequiredFieldsErrorMessage","PleaseCorrectErrors","linkToParent","ClassId","LinktoNewParentIncident","LinkToNewParentRecord","refreshDataSource","getChildIncidentSettings","searchClick","selectedRow","ParentWorkItem","childIncidentSettings","ActiveChildIncidentLinkStatus","buildParentHeaderView","parentView","workItemType","gridChange","eventArgs","otherBoundChanges","setNewStatus","newStatusId","addComment","newStatusName","processChildIncidentReactivation","reactivateChildandSave","ChildIncidentReactivatedStatus","parseJSON","ReactivateLetAnalystDecide","ReactivateChildIncidentTitle","ReactivateChildIncidentMessage","ReactivateChildIncident","newStatusConfig","comment","newComment","commentMessage","CancelledStatusCommentMessage","__userPickerPopupSingleton","NameIdModel","nameProp","idProp","self","serverNameProp","serverIdProp","setObj","setFromObj","obj","getFromObj","getObj","getGenericFromObj","UserPickerPopup","targetEle","groupsOnly","_vm","gridHtml","gridUrl","setSaveCallback","unbind","setCancelCallback","bindEvents","onSearchClick","onSaveClick","selectedUser","userObj","trigger","closePopup","onCancelClick","openPopup","kendoDataSource","kendoWindow","createPopup","Popup","createGrid","Grid","createKendoWindow","SelectGroup","SelectUser","settings","pager","onRowDblClick","createKendoDataSource","userFilter","filterByAnalyst","serverSorting","serverGrouping","PrincipalName","UserName","Domain","Company","FirstName","LastName","EmployeeId","createKendoGrid","Startswith","Isequalto","Isnotequalto","encoded","SearchText","selectUserText","userDataSource","onListViewChanged","isDesktopView","isMobileView","getPopup","__fileAttachmentsPopupSingleton","FileAttachmentsPopup","task","FileAttachments","selectedFiles","closeModal","onOpenFile","saveCancelBtn","closeBtn","modal","selectFile","isImage","getByUid","action","downloadUrl","rootURL","appendChild","createElement","src","dialog","dialogs","kendoDialog","Content","animation","effects","off","kendoListView","FileAttachment","objectPickerPopup","attachmentPickerFlyout","recipientList","recipientToList","recipientCCList","sendEmail","SendEmail","getAffectedUserEmail","setDefaultWIStatus","emailTo","emailCC","emailSubject","emailHTMLMessage","emailBodyTemplate","emailTextMessage","emailAttachment","emailTemplateDataSource","tempateDataSource","emailTemplateValue","attachmentErrorMessage","addToLog","addToActionLogDefault","forceAddToActionLog","enableAddToLog","setAsPrivate","saveMessageAsPrivate","recipientToEmail","without","findWhere","Email","join","recipientCcEmail","arrEmail","union","InvalidEmailAddress","PleaseProvideEmailAddress","invalidEmailAdress","validateEmailAddress","InvalidEmailAddressMessage","editor","innerText","textContent","MessageRequired","MessageRequiredWhenAddingLogEntry","progress","ExtOkCancelDialog","UnsavedDataMessage","remoteManageRecepient","shown","emailTemplateChange","_old","dView","subject","Subject","resizeEditor","$this","children","showChangeStatus","sendEmailAttachments","fromWorkItemAttachementsId","setFirstResponseDate","enableFirstResponseDate","popupWindow","object","recipientType","picker","userEmailObj","users","guid","email","viewWorkItemFiles","flyoutWindow","n","filesCount","changeStatusSetting","defaultStatusId","rootStatusEnumId","enableChangeStatus","fetchAll","names","subData","slice","initializeUserPicker","initializeUploader","initializeStatusPicker","buildEditor","getRemoteManageRecepient","getSendEmailChangeStatusSettings","applyChangeStatus","toPicker","ccPicker","stopImmediatePropagation","addToCommentLog","EMailSent","RequestedWorkItem","affectedUserId","textStatus","jqXHR","affectedUser","ready","recepient","invalidEmailAddress","validateEmail","fileAction","blob","Blob","URL","createObjectURL","navigator","msSaveOrOpenBlob","msSaveBlob","a","style","download","revokeObjectURL","removeChild","kendoUpload","saveUrl","ClassName","autoUpload","operation","files","rawFile","console","warn","showFileList","dropZone","targetProp","targetKey","userPicker","kendoMultiSelect","placeholder","Search","maxNumberOfResults","filtering","tagTemplate","currentList","deselect","clearButton","jQuery","Event","bChangeStatus","bAddActionLog","addToLogSkipped","bHasAttachment","strAttachedFileNames","strMessage","encodeURIComponent","strMessagePlain","workItemFileIds","emailFooterTemplate","emailData","To","Message","AttachedFileNames","WorkItemId","bSetFirstResponsDate","bSuccess","SendEmailSuccessMessage","fileAdded","handleSaveSuccess","SkippedAddingLogEntryTitle","ErrorAddingLogEntryMessage","SendEmailFailedMessage","errorThrown","uploadPastedImage","d","timestamp","getTime","formData","FormData","processData","getBase64Image","img","canvas","getContext","drawImage","toDataURL","dataURItoBlob","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","defaultTools","shift","mobileTools","kendoEditor","tools","stylesheets","paste","pasteCleanup","custom","tagName","dataSRC","setAttribute","one","complete","at_config","headerTpl","insertTpl","displayTpl","limit","startWithSpace","editableAtwhoQueryAttrs","iframe","innerDoc","contentDocument","contentWindow","$inputor","atwho","caret","$li","userId","userData","activeElement","removedAtWhoId","newList","filterIdParam","filterId","getChangeStatusRules","consoleSetting","SendEmailServiceRootStatusEnum","SendEmailServiceDefaultStatusEnum","SendEmailServiceAllowAnalystToChangeStatus","SendEmailChangeRootStatusEnum","SendEmailChangeDefaultStatusEnum","SendEmailChangeAllowAnalystToChangeStatus","SendEmailProblemRootStatusEnum","SendEmailProblemDefaultStatusEnum","SendEmailProblemAllowAnalystToChangeStatus","SendEmailReleaseRootStatusEnum","SendEmailReleaseDefaultStatusEnum","SendEmailReleaseAllowAnalystToChangeStatus","SendEmailIncidentRootStatusEnum","SendEmailIncidentDefaultStatusEnum","SendEmailIncidentAllowAnalystToChangeStatus","Label","func","customFunc","relationshipKey","FromFilter","ToFilter","FromRelative","ToRelative","MinValue","MaxValue","stringController","buildStringView","datePicker","stringArea","checkBox","datePickerCtrl","checkboxCtrl","openWindow","dateLabel","viewType","Disposed","cancelledDate","originalDate","dateProperties","OriginalDisposalReference","recieveCheckbox","OriginalCheckBox","masterContractStartingDateCheckbox","DisposalDate","ReceiveDate","StartDate","propertyKey","buildDatePicker","stringProperties","DisposalReference","buildString","RemoveReceivedDate","RemoveMasterLeaseWarrantyStarts","dateControl","stringControl","checkboxControl","dtm","checked","enable","CommonContract","UpdateStatus","SetSeatsRemaining","UpdateSoftwareAsset","UpdateConsumable","SupersedesParent","CountAssignedConsumableUsers","CountAssignedConsumableAssets","assignedCount","Target_ConsumableHasAssignedUsers","Target_ConsumableHasAssignedAssets","CiresonAssetManagement","SoftwareAssetUpdateConfirmationMsg","isOk","Success","SoftwareAssetUpdated","ErrorOccured","ajaxOptions","thrownError","failure","RequestFailed","jsonRsp","errorMsg","UpdateSupersedesConfirmation","UpdatingAssets","TotalNumberofAssetsUpdated","ServerError","CopyLicenseAssignments","StartCopyLicenseAsssignements","serialize","bTransferUsers","bTransferComputers","bTranserToAuthorised","targetVM","sourceVM","bTranserToAssigned","computerList","ComputerList","userList","UserList","PerformTransfer","UpdateSoftwareAssetMsg","itemList","targetProperty","isExist","indexTarget","addItem","copyToNewWI","hiddenVm","copy","method","submit","DecimalPlaces","StepIncrement","Format","numericArea","EditConsumableAvailableCount","tempLog","ObservableObject","ClassTypeId","Target_LogHasCreator","AllowCreatedDate","TaskRun","countProperties","zeroCount","buildNumeric","currentCount","addedcount","newCount","IncreasedAvailableCount","AvailableCount","DecreasedAvailableCountBy","print","addMeToWatchList","isAddWatchlist","removeFromWatchList","AddMeToWatchList","addToWatchList","RemoveMeFromWatchList","WatchList","AddMeToWatchListNotificationMessage","RemoveMeFromWatchListNotificationMessage","amChangeStatus","newStatus","spacer","associateItem","updateAssetManagement","updateSupersededHardware","copyLicenseAssignments","customTmpl","increaseAvailableCount","decreaseAvailableCount","ulElement","fromDrawerBuilder","taskTemplate","taskCallback","Access","Task","Exception","multiEdit","taskBuilder","drawerOptions","buttons","taskList","initializers","initButtons","addDropUpButton","initTaskList","nonAnalystTaskCount","taskListViewModel","taskViewModel","waitSeconds","urlArgs","staticFileVersion","baseUrl","paths","angular","angularAMD","angular-ui-router","angular-sanitize","angular-resource","CustomSpace","shim","exports","viewBuilder","drawerBuilder","initView","getNavNodeDefinition","initializeGrids","handleMessages","selector","placement","gridState","theGrid","defaultGridRefreshInterval","noRefresh","interval","sessionTimeout","isSessionExpired","clearInterval","state","isSessionStored"],"mappings":"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","file":"viewMain-built.min.js","sourcesContent":["/**\r\nQuery builder\r\n**/\r\ndefine('viewPanels/queryBuilder/controller',['require','text!viewPanels/queryBuilder/view.html','../../grids/gridBuilder'],function (require) {\r\n    var tpl = require(\"text!viewPanels/queryBuilder/view.html\");\r\n    var gridBuilder = require('../../grids/gridBuilder');\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //gather node model information \r\n            var configuration = queryBuilderStandardConfigurationDefinitions[node.Definition.content.configurationName];\r\n            if (!configuration) {\r\n                throw \"Invalid configuration name: \" + node.Definition.content.configurationName;\r\n            }\r\n\r\n            var schemaDef = configuration.schemaDef;\r\n            //setup some viewpanel level variables.\r\n            var commonFields = schemaDef.commonFields || [];\r\n            var query = node.Definition.content.query;\r\n            var navigationNodeId = node.Definition.content.navigationNodeId;\r\n            var queryName = localizationHelper.localize(vm.header.title, vm.header.title);\r\n            if (!navigationNodeId) { //no query name except for saved queries.\r\n                queryName = \"\";\r\n            }\r\n            //build up the section definitions from the node schema.\r\n            var sectionDefs = [];\r\n\r\n            //create schema defs with localized displayNames, and ordered fields\r\n            for (var i = 0; i < schemaDef.sections.length; i++) {\r\n                var sectionDef = schemaDef.sections[i];\r\n                sectionDef.displayName = localizationHelper.localize(sectionDef.displayKey);\r\n                sectionDef.fields = _.chain(sectionDef.fields.concat(commonFields))\r\n                                              .map(function (field) {\r\n                                                  field.displayName = localizationHelper.localize(field.displayKey);\r\n                                                  return field;\r\n                                              })\r\n                                              .sortBy(\"displayName\")\r\n                                              .value();\r\n                sectionDefs.push(sectionDef);\r\n            }\r\n\r\n            //Controller methods for managing query structure.\r\n            var createCriteria = function (parentGroup) {\r\n                var criteria = kendo.observable({\r\n                    field: { type: \"\" },\r\n                    operator: \"\",\r\n                    value: {},\r\n                    type: \"criteria\",\r\n                    groupId: parentGroup.uid,\r\n                    sectionId: parentGroup.sectionId,\r\n                    sectionTypeName: parentGroup.sectionTypeName,\r\n                    fields: getSectionSchemaFields(parentGroup.sectionTypeName),\r\n                    validOperators: [],\r\n                    showCriteriaControl: true\r\n                });\r\n\r\n                //default to first item on the list\r\n                criteria.set(\"field\", criteria.fields[0]);\r\n\r\n                //default operator to the first valid one\r\n                criteria.set(\"validOperators\", viewModel.fieldTypes[criteria.field.fieldType].validOperators);\r\n                criteria.set(\"operator\", criteria.validOperators[0].name);\r\n                return criteria;\r\n            }\r\n\r\n            var createCriteriaGroup = function (parentGroup) {\r\n                var group = kendo.observable({\r\n                    // field: {},\r\n                    groupOperator: \"And\",\r\n                    // value: i++,\r\n                    items: [],\r\n                    type: \"criteriaGroup\",\r\n                    sectionId: parentGroup.sectionId,\r\n                    sectionTypeName: parentGroup.name || parentGroup.sectionTypeName\r\n                });\r\n                \r\n                group.items.push(createCriteria(group));\r\n                return group;\r\n            }\r\n\r\n            var createCriteriaSection = function (sectionDef) {\r\n                sectionDef.sectionId = app.lib.newGUID();\r\n                \r\n                var criteriaSection = {\r\n                    sectionTypeName: sectionDef.name,\r\n                    displayName: sectionDef.displayName,\r\n                    classId: sectionDef.classId,\r\n                    criteriaRoot: createCriteriaGroup(sectionDef),\r\n                    sectionId: sectionDef.sectionId\r\n                }\r\n                return criteriaSection;\r\n            }\r\n\r\n            var getSectionSchemaFields = function (sectionTypeName) {\r\n                //get all the fields for the criteria's containing section\r\n                var section = _.filter(sectionDefs, function (sec) { return (sec.sectionTypeName == sectionTypeName || sec.name == sectionTypeName); })[0];\r\n                return section.fields;\r\n            }\r\n            \r\n            //helper method to find the criteriaGroup that contains the given criteria within it's items array,\r\n            //this is necessary because at the point where we are removing items, we do not have a reference to the containing array\r\n            var findContainingCriteria = function (criteria, topLevelGroup) {\r\n                if (topLevelGroup == criteria) {\r\n                    return topLevelGroup;\r\n                }\r\n\r\n                if (topLevelGroup.items && topLevelGroup.items.length > 0) {\r\n                    if (topLevelGroup.items.indexOf(criteria) >= 0) {\r\n                        return topLevelGroup;\r\n                    } else {\r\n                        for (var i = 0; i < topLevelGroup.items.length; i++) {\r\n                            var foundCriteria = findContainingCriteria(criteria, topLevelGroup.items[i])\r\n                            if (foundCriteria) {\r\n                                return foundCriteria;\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            var findContainingSection = function (criteria, sections) {\r\n                var section = _.filter(sections, function(sec) { return sec.sectionId == criteria.sectionId; })[0];\r\n                return section;\r\n            }\r\n\r\n            //Valid operators\r\n            var ops = {\r\n                empty: { name: \"\", display: \"\", canHaveValue: true },\r\n                eq: { name: \"eq\", display: \"=\", canHaveValue: true },\r\n                ne: { name: \"ne\", display: \"<>\", canHaveValue: true },\r\n                contains: { name: \"contains\", display: localizationHelper.localize(\"Contains\"), canHaveValue: true },\r\n                startsWith: { name: \"startsWith\", display: localizationHelper.localize(\"Startswith\"), canHaveValue: true },\r\n                endsWith: { name: \"endsWith\", display: localizationHelper.localize(\"Endswith\"), canHaveValue: true },\r\n                gt: { name: \"gt\", display: \">\", canHaveValue: true },\r\n                lt: { name: \"lt\", display: \"<\", canHaveValue: true },\r\n                gte: { name: \"gte\", display: \">=\", canHaveValue: true },\r\n                lte: { name: \"lte\", display: \"<=\", canHaveValue: true },\r\n                between: { name: \"between\", display: localizationHelper.localize(\"Between\"), canHaveValue: true },\r\n                isnull: { name: \"isnull\", display: localizationHelper.localize(\"IsNull\"), canHaveValue: false },\r\n                isnotnull: { name: \"isnotnull\", display: localizationHelper.localize(\"IsNotNull\"), canHaveValue: false },\r\n                isme: { name: \"isme\", display: localizationHelper.localize(\"IsLoggedInUser\"), canHaveValue: false },\r\n                isnotme: { name: \"isnotme\", display: localizationHelper.localize(\"IsNotLoggedInUser\"), canHaveValue: false },\r\n            };\r\n\r\n            var viewModel = kendo.observable({\r\n                query: query || [],\r\n                queryName: queryName,\r\n                queryNameValid: function() {\r\n                    var pat = new RegExp(\"^[a-zA-Z0-9\\(\\) !@#$.%]+$\");\r\n                    var match = pat.test(this.get(\"queryName\"));\r\n                    return match;\r\n                },\r\n                queryNameInValid: function() {\r\n                    return !this.queryNameValid();\r\n                },\r\n                selectedSection: {},\r\n                sectionDefs: sectionDefs,\r\n                gridVm: configuration.gridDefaultConfig,\r\n                isSavedQuery: _.isUndefined(navigationNodeId) ? false : true,\r\n                persistGridState: _.isUndefined(navigationNodeId) ? false : true,\r\n                editMode: false,\r\n                renderGrid: false,\r\n                validActions: {\r\n                    search: true,\r\n                    save: navigationNodeId != undefined, //if the navigation node id is undefined, we cannot save this. Only save as.\r\n                    saveAs: true,\r\n                    \"delete\": navigationNodeId != undefined, //if the navigation node id is undefined, we cannot delete this.\r\n                    clearQuery: true\r\n                },\r\n                fieldTypes: {\r\n                    //hash for field type to operator lookup.\r\n                    \"string\": { validOperators: [ops.eq, ops.ne, ops.contains, ops.startsWith, ops.endsWith, ops.isnull, ops.isnotnull] },\r\n                    \"date\": { validOperators: [ops.eq, ops.ne, ops.gt, ops.lt, ops.gte, ops.lte, ops.between, ops.isnull, ops.isnotnull] },\r\n                    \"enum\": { validOperators: [ops.eq, ops.ne] },\r\n                    \"user\": { validOperators: [ops.eq, ops.ne, ops.isnull, ops.isnotnull, ops.isme, ops.isnotme] },\r\n                    \"affectedconfigitem\": { validOperators: [ops.eq, ops.ne] },\r\n                    \"relatedconfigitem\": { validOperators: [ops.eq, ops.ne] },\r\n                    \"bool\": { validOperators: [ops.eq] },\r\n                    \"double\": { validOperators: [ops.eq, ops.ne, ops.gt, ops.lt, ops.gte, ops.lte, ops.isnull, ops.isnotnull] },\r\n                },\r\n                getSectionSchemaFields: function(criteria) {\r\n                    //get all the fields for the criteria's containing section\r\n                    var section = findContainingSection(criteria, this.query);\r\n                    if (section && section.sectionTypeName) {\r\n                        var section = _.chain(this.sectionDefs)\r\n                            .filter(function(w) { return w.name == section.sectionTypeName })\r\n                            .value()[0];\r\n                        return section.fields;\r\n                    }\r\n                },\r\n                isFirstSection: function (e) {\r\n                    var query = this.get(\"query\");\r\n                    if (query.length > 0) {\r\n                        return (e == query[0]) || (e == query[1]);\r\n                    }\r\n                },\r\n                paddingLeft: function(e) {\r\n                    // HACK: need a class binder so we don't have to do garbage like this\r\n                    return (e.value.get('userValue') || {}).Id ? '14px' : '0';\r\n                },\r\n                createCriteria: function(e) {\r\n                    //create and append a criteria element to the selected group.\r\n                    var criteriaGroup = e.data;\r\n                    if (criteriaGroup) {\r\n                        var parentGroup = (criteriaGroup.items.length > 0) ? criteriaGroup.items[0] : criteriaGroup;\r\n                        var newCriteria = createCriteria(parentGroup);\r\n                        criteriaGroup.items.push(newCriteria);\r\n                    }\r\n                },\r\n                createCriteriaGroup: function(e) {\r\n                    //Create the criteria in the specified group, or append it to the root.\r\n                    var parent = e.data || this.criteriaRoot;\r\n                    var newGroup = createCriteriaGroup(parent.items[0]);\r\n                    parent.items.push(newGroup);\r\n                },\r\n                addCriteriaSection: function(e) {\r\n                    //adds a criteria group to the query.\r\n                    if (this.selectedSection && this.selectedSection.name) {\r\n                        var newSection = createCriteriaSection(this.selectedSection);\r\n                        this.query.push(newSection);\r\n                    }\r\n                },\r\n                removeCriteria: function(e) {\r\n                    //removes the selected criteria/group from it's parent\r\n                    var criteria = e.data;\r\n                    var section = findContainingSection(criteria, this.query);\r\n\r\n                    var parent = findContainingCriteria(criteria, section.criteriaRoot);\r\n                    if (section && parent == criteria) { //this is the topMost Group in the section\r\n                        this.removeSection({ data: section });\r\n                    }\r\n                    if (parent) {\r\n                        var index = parent.items.indexOf(criteria);\r\n                        if (index >= 0) {\r\n                            parent.items.splice(index, 1);\r\n                        }\r\n                    }\r\n                },\r\n                removeSection: function(e) {\r\n                    var section = e.data;\r\n                    var index = this.query.indexOf(section);\r\n                    if (index >= 0) {\r\n                        this.query.splice(index, 1);\r\n                    }\r\n                },\r\n                onFieldChanged: function(e) {\r\n                    //when the field changes, set the operater to the first operator in the list if the \r\n                    //current operator is not valid in the list.\r\n                    var criteria = e.data;\r\n\r\n                    criteria.set(\"showCriteriaControl\", true);\r\n                    criteria.set(\"validOperators\", this.fieldTypes[criteria.field.fieldType].validOperators);\r\n                    criteria.set(\"operator\", criteria.validOperators[0].name);\r\n                },\r\n                saveQuery: function (e) {\r\n                    var viewPanel = node;\r\n                    viewPanel.Definition.content.query = this.query;\r\n                    viewPanel.Definition.content.navigationNodeId = navigationNodeId || \"\";\r\n                    var savedSearch = {\r\n                        displayStringText: this.queryName,\r\n                        navigationNodeId: navigationNodeId, //the navigationNodeId needs to be in two places because it only comes back to us  in the Definition.content, but the service looks here for it.\r\n                        viewPanel: viewPanel,\r\n                    };\r\n\r\n                    $.ajax({\r\n                        url: \"/Search/UpsertSearch\",\r\n                        dataType: \"json\",\r\n                        type: \"POST\",\r\n                        data: { searchValue: this.stringifyQueryModel(savedSearch) },\r\n                        success: function(result) {\r\n                            if (result.success) {\r\n                                app.clearNodeStorage();\r\n                                app.clearViewPanelStorage();\r\n                                window.location = \"/View/\" + result.data;\r\n                            }\r\n                        }\r\n                    });\r\n                },\r\n                saveQueryAs: function(e) {\r\n                    var viewPanel = node;\r\n                    viewPanel.Definition.content.query = this.query;\r\n                    viewPanel.Definition.content.navigationNodeId = undefined;\r\n                    viewPanel.Id = undefined;\r\n                    var savedSearch = {\r\n                        displayStringText: this.queryName,\r\n                        navigationNodeId: undefined, //the navigationNodeId needs to be in two places because it only comes back to us  in the Definition.content, but the service looks here for it.\r\n                        viewPanel: viewPanel,\r\n                    };\r\n\r\n                    $.ajax({\r\n                        url: \"/Search/UpsertSearch\",\r\n                        dataType: \"json\",\r\n                        type: \"POST\",\r\n                        data: { searchValue: this.stringifyQueryModel(savedSearch) },\r\n                        success: function(result) {\r\n                            if (result.success) {\r\n                                app.clearNodeStorage();\r\n                                app.clearViewPanelStorage();\r\n                                window.location = \"/View/\" + result.data;\r\n                            }\r\n                        }\r\n                    });\r\n                },\r\n                deleteQuery: function(e) {\r\n                    var viewPanel = node\r\n                    viewPanel.Definition.content.query = this.query;\r\n                    viewPanel.Definition.content.navigationNodeId = navigationNodeId || \"\";\r\n                    var savedSearch = {\r\n                        displayStringText: this.queryName,\r\n                        navigationNodeId: navigationNodeId, //the navigationNodeId needs to be in two places because it only comes back to us  in the Definition.content, but the service looks here for it.\r\n                        viewPanel: viewPanel,\r\n                    };\r\n\r\n                    $.ajax({\r\n                        url: \"/Search/DeleteSearch\",\r\n                        dataType: \"json\",\r\n                        type: \"POST\",\r\n                        data: { searchValue: this.stringifyQueryModel(savedSearch) },\r\n                        success: function(result) {\r\n                            if (result.success) {\r\n                                app.clearNodeStorage();\r\n                                app.clearViewPanelStorage();\r\n                                window.location = \"/View/0316e159-2806-43b2-9018-b695f7bc1088\";\r\n                            }\r\n                        }\r\n                    });\r\n                },\r\n                searchOnEnter: function(e) {\r\n                    try {\r\n                        if (e.charCode == 13) {\r\n                            e.originalEvent.srcElement.blur();\r\n                            this.executeSearch(e);\r\n                        }\r\n                    } catch (ex) {\r\n\r\n                    }\r\n                },\r\n                executeSearch: function(e) {\r\n                    viewModel.set(\"renderGrid\", true);\r\n                    viewModel.set(\"gridVm\", viewModel.getGridVm());\r\n                },\r\n                getGridVm: function() {\r\n                    var gridVm = configuration.gridDefaultConfig;\r\n                    gridVm.isSavedQuery = viewModel.isSavedQuery;\r\n                    gridVm.persistGridState = viewModel.persistGridState;\r\n                    if (viewModel.isSavedQuery) {\r\n                        gridVm.gridId = navigationNodeId;\r\n                        viewModel.updateSavedQueryModel(); //update the saved query model to replace the \"me\" token/operator with the current user's id\r\n                    } else {\r\n                        gridVm.gridId = \"wiSearchGridContainer\";\r\n                    }\r\n                    \r\n                    gridVm.grid.dataSourceOptions = {\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/search/GetAdHocResults\",\r\n                                dataType: \"json\",\r\n                                type: \"post\",\r\n                                data: {\r\n                                    filterCriteria: viewModel.stringifyQueryModel(viewModel.query),\r\n                                    dataTable: \"WorkItem\",\r\n                                },\r\n                            }\r\n                        }\r\n                    }\r\n                    return gridVm;\r\n                },\r\n                clearQuery: function(e) {\r\n                    var vm = this;\r\n                    vm.set(\"query\", []);\r\n                    vm.set(\"renderGrid\", false);\r\n                    vm.set(\"gridVm\", vm.getGridVm());\r\n                    configuration.initialize(vm, true);\r\n                },\r\n                stringifyQueryModel: function(model) {\r\n                    return kendo.stringify(model, function (key, value) {\r\n                        //ignore these fieldNames:\r\n                        //todo: pull this out so it is more easily accessible and reusable.\r\n                        var ignoreFieldArray = [\"userDetailDataSource\", \"validOperators\", \"fields\"];\r\n                        var ignoreFields = {};\r\n\r\n                        $(ignoreFieldArray).each(function(i, v) {\r\n                            ignoreFields[v] = true;\r\n                        });\r\n\r\n                        if (ignoreFields[key]) {\r\n                            return undefined;\r\n                        }\r\n\r\n                        return value;\r\n                    });\r\n                },\r\n                onOperatorChanged: function(e) {\r\n                    var criteria = e.data;\r\n                    var operator = criteria.get(\"operator\");\r\n\r\n                    //if operator is the \"me\" or \"null\" option, hide criteria control section\r\n                    if (operator == \"isme\" || operator == \"isnotme\" ||\r\n                        operator == \"isnull\" || operator == \"isnotnull\") {\r\n                        criteria.set(\"showCriteriaControl\", false);\r\n                    } else {\r\n                        criteria.set(\"showCriteriaControl\", true);\r\n                    }\r\n\r\n                    //if operator is the \"me\" option, set the value to the current user\r\n                    if (operator == \"isme\" || operator == \"isnotme\") {\r\n                        criteria.value.set(\"userValue\", { Id: session.user.Id, Name: session.user.Name });\r\n                    }\r\n                },\r\n                updateSavedQueryModel: function () {\r\n                    \r\n                    _.each(viewModel.query, function(item) {\r\n                        if (!_.isUndefined(item[\"criteriaRoot\"]) && !_.isNull(item[\"criteriaRoot\"])) {\r\n                            if (!_.isUndefined(item[\"criteriaRoot\"].items) && !_.isNull(item[\"criteriaRoot\"].items)) {\r\n                                _.each(item[\"criteriaRoot\"].items, function(criteriaItem) {\r\n                                    //if operator is the \"me\" option, set the value to the current user\r\n                                    if (criteriaItem.operator == \"isme\" || criteriaItem.operator == \"isnotme\") {\r\n                                        criteriaItem.value.set(\"userValue\", { Id: session.user.Id, Name: session.user.Name });\r\n                                    }\r\n                                   \r\n                                    //set offset value to 0 when undefined/null\r\n                                    if (!_.isUndefined(criteriaItem.value) && _.isUndefined(criteriaItem.value.numericValue)) {\r\n                                        criteriaItem.value.numericValue = 0;\r\n                                    }\r\n\r\n                                    //if relative date, update date/time accordingly\r\n                                    if (!_.isUndefined(criteriaItem.value) && !_.isUndefined(criteriaItem.value.isRelative) && criteriaItem.value.isRelative == true) {\r\n                                        var relativeType = criteriaItem.value.relativeDateValue;\r\n                                        var offsetValue = criteriaItem.value.numericValue;\r\n                                        var relativeDateTime = viewModel.getRelativeDate(relativeType, offsetValue);\r\n                                        criteriaItem.value.set(\"dateValue\", kendo.toString(new Date(relativeDateTime.setHours(0, 0, 0, 0)), 'g'));\r\n                                        \r\n                                        //for between date range, calculate relative end date value\r\n                                        if (criteriaItem.operator == \"between\") {\r\n                                            var relativeEndType = criteriaItem.value.relativeEndDateValue;\r\n                                            var offsetEndValue = criteriaItem.value.numericEndValue;\r\n                                            var relativeEndDateTime = viewModel.getRelativeDate(relativeEndType, offsetEndValue);\r\n                                            criteriaItem.value.set(\"endValue\", kendo.toString(new Date(relativeEndDateTime.setHours(0, 0, 0, 0)), 'g'));\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                },\r\n                getRelativeDate: function(relativeType, offsetValue) {\r\n                    var relativeDate = new Date();\r\n                    var currentDate = new Date();\r\n                    var quarter = Math.round((currentDate.getMonth() - 1) / 3 + 1);\r\n\r\n                    switch (relativeType) {\r\n                        case \"tomorrow\":\r\n                        case \"daysfromnow\":\r\n                            relativeDate.setDate(currentDate.getDate() + offsetValue);\r\n                            break;\r\n                        case \"yesterday\":\r\n                        case \"daysago\":\r\n                            relativeDate.setDate(currentDate.getDate() - offsetValue);\r\n                            break;\r\n                        case \"monthsfromnow\":\r\n                            relativeDate.setMonth(currentDate.getMonth() + offsetValue);\r\n                            break;\r\n                        case \"monthsago\":\r\n                            relativeDate.setMonth(currentDate.getMonth() - offsetValue);\r\n                            break;\r\n                        case \"yearsfromnow\":\r\n                            relativeDate.setFullYear(currentDate.getFullYear() + offsetValue);\r\n                            break;\r\n                        case \"yearsago\":\r\n                            relativeDate.setFullYear(currentDate.getFullYear() - offsetValue);\r\n                            break;\r\n                        case \"firstdayofmonth\":\r\n                            relativeDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\r\n                            break;\r\n                        case \"lastdayofmonth\":\r\n                            relativeDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\r\n                            break;\r\n                        case \"firstdayofyear\":\r\n                            relativeDate = new Date(currentDate.getFullYear(), 0, 1);\r\n                            break;\r\n                        case \"lastdayofyear\":\r\n                            relativeDate = new Date(currentDate.getFullYear(), 11, 31);\r\n                            break;\r\n                        case \"firstdayofquarter\":\r\n                            relativeDate = new Date(currentDate.getFullYear(), ((3 * quarter - 2) - 1), 1);\r\n                            break;\r\n                        case \"lastdayofquarter\":\r\n                            relativeDate = new Date(currentDate.getFullYear(), ((3 * quarter - 1) + 1), 0);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    return relativeDate;\r\n                },\r\n                updateCriteriaGroup: function(criteria, section) {\r\n                    if (criteria.items && criteria.items.length > 0) {\r\n                        _.each(criteria.items, function(item) {\r\n                            if (item.items) {\r\n                                viewModel.updateCriteriaGroup(item, section);\r\n                            } else {\r\n                                viewModel.updateCriteria(item, section);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        viewModel.updateCriteria(criteria, section);\r\n                    }\r\n\r\n                },\r\n                updateCriteria: function(criteria, section) {\r\n                    if (_.isUndefined(criteria.fields)) {\r\n                        criteria.set(\"fields\", getSectionSchemaFields(section.sectionTypeName));\r\n                    }\r\n                    if (_.isUndefined(criteria.validOperators)) {\r\n                        criteria.set(\"validOperators\", viewModel.fieldTypes[criteria.field.fieldType].validOperators);\r\n                        viewModel.onOperatorChanged({ data: criteria });\r\n                    }\r\n\r\n                    //fix for old/saved enumValues who still follows the Id/Text format\r\n                    if (!_.isUndefined(criteria.value.enumValue)) {\r\n                        if (_.isUndefined(criteria.value.enumValue.Name)) {\r\n                            criteria.value.enumValue.Name = criteria.value.enumValue.Text;\r\n                        }\r\n                    }\r\n                },\r\n                updateCriteriaSection: function() {\r\n                    _.each(this.query, function(section) {\r\n                        if (_.isUndefined(section.sectionId)) {\r\n                            section.sectionId = app.lib.newGUID();\r\n                        }\r\n                        _.each(section.criteriaRoot.items, function(criteria) {\r\n                            if (_.isUndefined(criteria.sectionId)) {\r\n                                criteria.set(\"sectionId\", section.sectionId);\r\n                            }\r\n                            if (_.isUndefined(criteria.sectionTypeName)) {\r\n                                criteria.set(\"sectionTypeName\", section.sectionTypeName);\r\n                            }\r\n                            viewModel.updateCriteriaGroup(criteria, section);\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n\r\n            if (configuration.initialize) {\r\n                configuration.initialize(viewModel);\r\n            }\r\n\r\n            var view = new kendo.View(built(), { wrap: false, model: kendo.observable(viewModel) });\r\n            callback(view.render());\r\n        }\r\n    }\r\n    return definition;\r\n});\r\n\r\n//BUG 19251: kendo combobox and dropdownlist needs to be re rendered for them to work in IE\r\nfunction updateModel(e) {\r\n    if (e.sender) {\r\n        var widget = e.sender;\r\n        setTimeout(function () {\r\n            $(widget.element.parent()).hide(0, function () {\r\n                $(this).show();\r\n            });\r\n            $(\".rule-container\").hide(0, function () {\r\n                $(this).show();\r\n            });\r\n        }, 1000);\r\n    }\r\n};\r\n\r\nvar queryBuilderStandardConfigurationDefinitions = {\r\n    workItemConfig: {\r\n        initialize: function (viewModel, isClear) {\r\n            ///this will initialize a default query if one does not exist, and will add criteria for title, and description if the searchtext query parameter exists\r\n            if (!viewModel.query || viewModel.query.length == 0) {\r\n                var urlQueryParams = app.lib.getQueryParams(location.search);\r\n                viewModel.set(\"selectedSection\", viewModel.sectionDefs[0]); //get the first non-null section def value.\r\n                viewModel.addCriteriaSection();\r\n                \r\n                if (urlQueryParams.searchtext && !isClear) {\r\n                    var searchText = decodeURIComponent(urlQueryParams.searchtext);\r\n                    viewModel.query[0].criteriaRoot.groupOperator = \"Or\";\r\n                    //replace the root items model with 2 fields to query the title or description.\r\n                    viewModel.query[0].criteriaRoot.set(\"items\",\r\n                    [\r\n                        {\r\n                            \"field\": {\r\n                                \"name\": \"title\",\r\n                                \"displayKey\": \"Title\",\r\n                                \"dataType\": \"string\",\r\n                                \"fieldType\": \"string\",\r\n                                \"templateValue\": \"\",\r\n                                \"displayName\": \"Title\"\r\n                            },\r\n                            \"operator\": \"contains\",\r\n                            \"value\": { \"stringValue\": searchText },\r\n                            \"type\": \"criteria\"\r\n                        },\r\n                        {\r\n                            \"field\": {\r\n                                \"name\": \"description\",\r\n                                \"displayKey\": \"Description\",\r\n                                \"dataType\": \"string\",\r\n                                \"fieldType\": \"string\",\r\n                                \"templateValue\": \"\",\r\n                                \"displayName\": \"Description\"\r\n                            },\r\n                            \"operator\": \"contains\",\r\n                            \"value\": { \"stringValue\": searchText },\r\n                            \"type\": \"criteria\"\r\n                        }\r\n                    ]);\r\n\r\n                    viewModel.updateCriteriaSection(); //update criteria section based on hearder search query\r\n                    viewModel.executeSearch(); //execute the search if the user passed searchtext querystring parameter.\r\n                    viewModel.set(\"editMode\", true);\r\n                } else {\r\n                    viewModel.set(\"editMode\", true); //if this is a request for a default query, then editmode should be true. Anything else will leave it as false.\r\n                }\r\n            } else {\r\n                viewModel.updateCriteriaSection(); //update criteria section based on saved-search query\r\n                viewModel.executeSearch(); //execute search if a non-default query was present.\r\n            }\r\n\r\n            //we need to hide buttons and edit if this view is not the child of \"MY SEARCHES\"  => 512cadbb-998b-4f10-b7ef-37f3b0f6e698\r\n            //AND is the \"WORK ITEM SEARCH\" view  => 0316e159-2806-43b2-9018-b695f7bc1088\r\n            //AND is not an admin\r\n            app.lib.getNavNode(function (node) {\r\n                if (!_.isNull(node)) {\r\n                    if (node.ParentId != \"512cadbb-998b-4f10-b7ef-37f3b0f6e698\" && //MY SEARCHES\r\n                        node.Id != \"0316e159-2806-43b2-9018-b695f7bc1088\" && //WORK ITEM SEARCH\r\n                        !session.user.IsAdmin) {\r\n                        viewModel.set('validActions', {\r\n                            search: false,\r\n                            save: false,\r\n                            saveAs: false,\r\n                            \"delete\": false,\r\n                            clearQuery: false\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        \"schemaDef\": {\r\n            \"commonFields\": [\r\n                { \"name\": \"WorkItem.WorkItemId\", \"displayKey\": \"ID\", \"fieldType\": \"string\", \"templateValue\": \"\" },\r\n                { \"name\": \"Title\", \"displayKey\": \"Title\", \"fieldType\": \"string\", \"templateValue\": \"\" },\r\n                { \"name\": \"Description\", \"displayKey\": \"Description\", \"fieldType\": \"string\", \"templateValue\": \"\" },\r\n                { \"name\": \"AssignedUserId\", \"displayKey\": \"AssignedTo\", \"fieldType\": \"user\", \"templateValue\": \"\" },\r\n                { \"name\": \"Created\", \"displayKey\": \"CreatedDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"ContactMethod\", \"displayKey\": \"ContactMethod\", \"fieldType\": \"string\", \"templateValue\": \"\" },\r\n                { \"name\": \"DisplayName\", \"displayKey\": \"DisplayName\", \"fieldType\": \"string\", \"templateValue\": \"\" },\r\n                { \"name\": \"ActualDowntimeEndDate\", \"displayKey\": \"ActualDowntimeEndDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"ActualDowntimeStartDate\", \"displayKey\": \"ActualDowntimeStartDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"ActualEndDate\", \"displayKey\": \"ActualEndDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"ActualStartDate\", \"displayKey\": \"ActualStartDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"FirstAssignedDate\", \"displayKey\": \"FirstAssignedDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"FirstResponseDate\", \"displayKey\": \"FirstResponseDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"RequiredByDate\", \"displayKey\": \"RequiredByDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"ScheduledDowntimeEndDate\", \"displayKey\": \"ScheduledDowntimeEndDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"ScheduledDowntimeStartDate\", \"displayKey\": \"ScheduledDowntimeStartDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"ScheduledEndDate\", \"displayKey\": \"ScheduledEndDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"ScheduledStartDate\", \"displayKey\": \"ScheduledStartDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"ActualCost\", \"displayKey\": \"ActualCost\", \"fieldType\": \"double\", \"templateValue\": \"\" },\r\n                { \"name\": \"EffortCompleted\", \"displayKey\": \"EffortCompleted\", \"fieldType\": \"double\", \"templateValue\": \"\" },\r\n                { \"name\": \"PlannedCost\", \"displayKey\": \"PlannedCost\", \"fieldType\": \"double\", \"templateValue\": \"\" },\r\n                { \"name\": \"EffortEstimate\", \"displayKey\": \"EffortEstimate\", \"fieldType\": \"double\", \"templateValue\": \"\" },\r\n                { \"name\": \"IsDowntime\", \"displayKey\": \"IsDowntime\", \"fieldType\": \"bool\", \"templateValue\": \"\" },\r\n                { \"name\": \"IsParent\", \"displayKey\": \"IsParent\", \"fieldType\": \"bool\", \"templateValue\": \"\" },\r\n                { \"name\": \"LastModified\", \"displayKey\": \"LastModified\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"ClosedDate\", \"displayKey\": \"ClosedDate\", \"fieldType\": \"date\", \"templateValue\": \"\" },\r\n                { \"name\": \"IsUseWatchList\", \"displayKey\": \"UseWatchList\", \"fieldType\": \"bool\", \"templateValue\": \"\" }\r\n\r\n            ],\r\n            \"sections\": [\r\n                {\r\n                    \"displayKey\": \"AllWorkItems\",\r\n                    \"name\": \"ALL\",\r\n                    \"classId\": \"\",\r\n                    \"fields\": []\r\n                },\r\n                {\r\n                    \"displayKey\": \"Incidents\",\r\n                    \"name\": \"IR\",\r\n                    \"classId\": \"A604B942-4C7B-2FB2-28DC-61DC6F465C68\",\r\n                    \"fields\": [\r\n                        {\r\n                            \"name\": \"statusId\",\r\n                            \"displayKey\": \"Status\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"89b34802-671e-e422-5e38-7dae9a413ef8\"\r\n                        },\r\n                        {\r\n                            \"name\": \"sourceId\",\r\n                            \"displayKey\": \"Source\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"5d59071e-69b3-7ef4-6dee-aacc5b36d898\"\r\n                        },\r\n                        {\r\n                            \"name\": \"categoryId\",\r\n                            \"displayKey\": \"Classification\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"1f77f0ce-9e43-340f-1fd5-b11cc36c9cba\"\r\n                        },\r\n                        {\r\n                            \"name\": \"tierId\",\r\n                            \"displayKey\": \"SupportGroup\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"c3264527-a501-029f-6872-31300080b3bf\"\r\n                        },\r\n                        {\r\n                            \"name\": \"AffectedUserId\",\r\n                            \"displayKey\": \"AffectedUser\",\r\n                            \"fieldType\": \"user\",\r\n                            \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"ConfigurationItemId\",\r\n                            \"displayKey\": \"AffectedItem\",\r\n                            \"fieldType\": \"affectedconfigitem\",\r\n                            \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"ConfigurationItemId\",\r\n                            \"displayKey\": \"RelatedItem\",\r\n                            \"fieldType\": \"relatedconfigitem\",\r\n                            \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"PriorityId\",\r\n                            \"displayKey\": \"Priority\",\r\n                            \"fieldType\": \"double\",\r\n                            \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"Impact\",\r\n                            \"displayKey\": \"Impact\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"11756265-f18e-e090-eed2-3aa923a4c872\"\r\n                        },\r\n                        {\r\n                            \"name\": \"ResolvedDate\",\r\n                            \"displayKey\": \"ResolvedDate\",\r\n                            \"fieldType\": \"date\",\r\n                            \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"Urgency\",\r\n                            \"displayKey\": \"Urgency\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"04b28bfb-8898-9af3-009b-979e58837852\"\r\n                        },\r\n                        {\r\n                            \"name\": \"SoonestSLOBreachTime\",\r\n                            \"displayKey\": \"SLOBreachDate\",\r\n                            \"fieldType\": \"date\",\r\n                            \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"SoonestSLOWarningTime\",\r\n                            \"displayKey\": \"SLOWarnDate\",\r\n                            \"fieldType\": \"date\",\r\n                            \"templateValue\": \"\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"displayKey\": \"ServiceRequests\",\r\n                    \"name\": \"SR\",\r\n                    \"classId\": \"04B69835-6343-4DE2-4B19-6BE08C612989\",\r\n                    \"fields\": [\r\n                        {\r\n                            \"name\": \"statusId\",\r\n                            \"displayKey\": \"Status\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"4e0ab24a-0b46-efe6-c7d2-5704d95824c7\"\r\n                        },\r\n                        {\r\n                            \"name\": \"sourceId\",\r\n                            \"displayKey\": \"Source\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"848211a2-393a-6ec5-9c97-8e1e0cfebba2\"\r\n                        },\r\n                        {\r\n                            \"name\": \"categoryId\",\r\n                            \"displayKey\": \"Classification\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"3880594c-dc54-9307-93e4-45a18bb0e9e1\"\r\n                        },\r\n                        {\r\n                            \"name\": \"tierId\",\r\n                            \"displayKey\": \"SupportGroup\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"23c243f6-9365-d46f-dff2-03826e24d228\"\r\n                        },\r\n                        {\r\n                            \"name\": \"affectedUserId\",\r\n                            \"displayKey\": \"AffectedUser\",\r\n                            \"fieldType\": \"user\",\r\n                            \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"ConfigurationItemId\",\r\n                            \"displayKey\": \"AffectedItem\",\r\n                            \"fieldType\": \"affectedconfigitem\",\r\n                            \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"ConfigurationItemId\",\r\n                            \"displayKey\": \"RelatedItem\",\r\n                            \"fieldType\": \"relatedconfigitem\",\r\n                            \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"PriorityId\",\r\n                            \"displayKey\": \"Priority\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"d55e65ea-fae9-f7db-0937-843bfb1367c0\"\r\n                        },\r\n                        {\r\n                            \"name\": \"CompletedDate\",\r\n                            \"displayKey\": \"CompletedDate\",\r\n                            \"fieldType\": \"date\",\r\n                            \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"Urgency\",\r\n                            \"displayKey\": \"Urgency\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"eb35f771-8b0a-41aa-18fb-0432dfd957c4\"\r\n                        },\r\n                        {\r\n                             \"name\": \"SoonestSLOBreachTime\",\r\n                             \"displayKey\": \"SLOBreachDate\",\r\n                             \"fieldType\": \"date\",\r\n                             \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"SoonestSLOWarningTime\",\r\n                            \"displayKey\": \"SLOWarnDate\",\r\n                            \"fieldType\": \"date\",\r\n                            \"templateValue\": \"\"\r\n                        }\r\n                    ]\r\n\r\n                },\r\n                {\r\n                    \"displayKey\": \"ChangeRequests\",\r\n                    \"name\": \"CR\",\r\n                    \"classId\": \"E6C9CF6E-D7FE-1B5D-216C-C3F5D2C7670C\",\r\n                    \"fields\": [\r\n                        {\r\n                            \"name\": \"statusId\",\r\n                            \"displayKey\": \"Status\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"0bf0a71b-9e9e-f719-0271-c9a4ff352600\"\r\n                        },\r\n                        {\r\n                            \"name\": \"categoryId\",\r\n                            \"displayKey\": \"Classification\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"28f88c04-d11d-78c0-a237-fa9abd6C6478\"\r\n                        },\r\n                        {\r\n                            \"name\": \"ConfigurationItemId\",\r\n                            \"displayKey\": \"AffectedItem\",\r\n                            \"fieldType\": \"affectedconfigitem\",\r\n                            \"templateValue\": \"na\"\r\n                        },\r\n                        {\r\n                            \"name\": \"ConfigurationItemId\",\r\n                            \"displayKey\": \"RelatedItem\",\r\n                            \"fieldType\": \"relatedconfigitem\",\r\n                            \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"PriorityId\",\r\n                            \"displayKey\": \"Priority\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"b40092af-f163-af28-6150-bb0ffa677660\"\r\n                        },\r\n                        {\r\n                            \"name\": \"Impact\",\r\n                            \"displayKey\": \"Impact\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"44edd2ff-6280-afb7-3a0d-d6e8a711d894\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"displayKey\": \"ManualActivities\",\r\n                    \"name\": \"MA\",\r\n                    \"classId\": \"7AC62BD4-8FCE-A150-3B40-16A39A61383D\",\r\n                    \"fields\": [\r\n                        {\r\n                            \"name\": \"statusId\",\r\n                            \"displayKey\": \"Status\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"57db4880-000e-20bb-2f9d-fe4e8aca3cf6\"\r\n                        },\r\n                        {\r\n                            \"name\": \"categoryId\",\r\n                            \"displayKey\": \"Classification\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"0d1c5836-644e-bfe4-5adf-cfe40fc08dfa\"\r\n                        },\r\n                        {\r\n                            \"name\": \"PriorityId\",\r\n                            \"displayKey\": \"Priority\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"65a34474-f43d-d880-7eb0-bad49efa7cf1\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"displayKey\": \"ReviewActivities\",\r\n                    \"name\": \"RA\",\r\n                    \"classId\": \"BFD90AAA-80DD-0FBB-6EAF-65D92C1D8E36\",\r\n                    \"fields\": [\r\n                        {\r\n                            \"name\": \"statusId\",\r\n                            \"displayKey\": \"Status\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"57db4880-000e-20bb-2f9d-fe4e8aca3cf6\"\r\n                        },\r\n                        {\r\n                            \"name\": \"categoryId\",\r\n                            \"displayKey\": \"Classification\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"0d1c5836-644e-bfe4-5adf-cfe40fc08dfa\"\r\n                        },\r\n                        {\r\n                            \"name\": \"PriorityId\",\r\n                            \"displayKey\": \"Priority\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"65a34474-f43d-d880-7eb0-bad49efa7cf1\"\r\n                        }\r\n                        \r\n                    ]\r\n                },\r\n                {\r\n                    \"displayKey\": \"Problem\",\r\n                    \"name\": \"PR\",\r\n                    \"classId\": \"422AFC88-5EFF-F4C5-F8F6-E01038CDE67F\",\r\n                    \"fields\": [\r\n                        {\r\n                            \"name\": \"statusId\",\r\n                            \"displayKey\": \"Status\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"56c99a7d-6ac7-ab3c-e6c0-bbf5fe76a65c\"\r\n                        },\r\n                        {\r\n                            \"name\": \"sourceId\",\r\n                            \"displayKey\": \"Source\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"91c21d12-7e66-3e02-cc44-824f6b131547\"\r\n                        },\r\n                        {\r\n                            \"name\": \"PriorityId\",\r\n                            \"displayKey\": \"Priority\",\r\n                            \"fieldType\": \"double\",\r\n                            \"templateValue\": \"\"\r\n                        },\r\n                        {\r\n                            \"name\": \"Impact\",\r\n                            \"displayKey\": \"Impact\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"11756265-f18e-e090-eed2-3aa923a4c872\"\r\n                        },\r\n                        {\r\n                            \"name\": \"Urgency\",\r\n                            \"displayKey\": \"Urgency\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"04b28bfb-8898-9af3-009b-979e58837852\"\r\n                        },\r\n                        {\r\n                            \"name\": \"categoryId\",\r\n                            \"displayKey\": \"Classification\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"9b2c7fa1-6a48-9592-4116-3f7385b068ac\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"displayKey\": \"ReleaseRecord\",\r\n                    \"name\": \"RR\",\r\n                    \"classId\": \"D02DC3B6-D709-46F8-CB72-452FA5E082B8\",\r\n                    \"fields\": [\r\n                        {\r\n                            \"name\": \"statusId\",\r\n                            \"displayKey\": \"Status\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"8909ce55-a87f-2d7e-eb64-aba670596696\"\r\n                        },\r\n                        {\r\n                            \"name\": \"PriorityId\",\r\n                            \"displayKey\": \"Priority\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"a384feeb-0ff6-3971-faac-9710c250b802\"\r\n                        },\r\n                        {\r\n                            \"name\": \"Impact\",\r\n                            \"displayKey\": \"Impact\",\r\n                            \"fieldType\": \"enum\",\r\n                            \"templateValue\": \"510E6308-9637-DAC7-5814-92465703270A\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"gridDefaultConfig\": {\r\n            fromQueryBuilder: true,\r\n            isAnalyst: session.user.Analyst,\r\n            gridJsonDataForCountdown: {},\r\n            tempProperties: {},\r\n            grid: {\r\n                GridType: \"QueryBuilderGrid\",\r\n                columns: [\r\n                    { \"DataType\": \"numeric\", \"field\": \"NumericId\", \"hidden\": true, \"attributes\": { \"class\": \"grid-highlight-column\" } },\r\n                    {\r\n                        DataType: \"String\", field: \"Icon\", width: 50, filterable: false,\r\n                        attributes: { \"class\": \"icon-column grid-highlight-column\" },\r\n                        template: \"\\u003cimg class=\\u0027gridicon\\u0027 src=\\u0027/Content/Images/Icons/WorkTypeIcons/#:data.Icon#\\u0027 alt=\\u0027#:data.Icon#\\u0027 /\\u003e\"\r\n                    },\r\n                    { \"DataType\": \"string\", \"field\": \"Id\", \"title\": \"Id\", \"width\": 80, \"attributes\": { \"class\": \"grid-highlight-column\" } },\r\n                    { \"DataType\": \"string\", \"field\": \"Title\", \"width\": 350, \"attributes\": { \"class\": \"grid-highlight-column\" } },\r\n                    { \"DataType\": \"string\", \"field\": \"Status\", \"width\": 100 },\r\n                    { \"DataType\": \"string\", \"field\": \"AssignedUser\", \"analystOnly\": true, \"width\": 150 },\r\n                    { \"DataType\": \"string\", \"field\": \"Priority\", \"width\": 90 },\r\n                    { \"DataType\": \"string\", \"field\": \"Category\", \"width\": 110 },\r\n                    { \"DataType\": \"string\", \"field\": \"AffectedUser\", \"width\": 150 },\r\n                    { \"DataType\": \"string\", \"field\": \"Tier\", \"title\": \"SupportGroup\", \"width\": 150 },\r\n                    { \"DataType\": \"datetime\", \"field\": \"LastModified\", \"width\": 100 },\r\n                    { \"DataType\": \"DateTime\", \"field\": \"ScheduledStartDate\", \"width\": 100, \"hidden\": true },\r\n                    { \"DataType\": \"DateTime\", \"field\": \"ScheduledEndDate\", \"width\": 100, \"hidden\": true },\r\n                    { \"DataType\": \"string\", \"field\": \"BaseId\", \"hidden\": true },\r\n                    { \"DataType\": \"string\", \"field\": \"ParentWorkItemId\", \"hidden\": true },\r\n                    { \"DataType\": \"string\", \"field\": \"ParentWorkItemType\", \"hidden\": true }\r\n                ],\r\n                options: {\r\n                },\r\n                dataSourceOptions: {\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        total: \"Total\",\r\n                        model: {\r\n                            \"id\": \"WorkItemId\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n        }\r\n    },\r\n};\r\n\r\n\n","/**\r\n * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/requirejs/text for details\r\n */\r\n/*jslint regexp: true */\r\n/*global require, XMLHttpRequest, ActiveXObject,\r\n  define, window, process, Packages,\r\n  java, location, Components, FileUtils */\r\n\r\ndefine('text',['module'], function (module) {\r\n    'use strict';\r\n\r\n    var text, fs, Cc, Ci, xpcIsWindows,\r\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\r\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\r\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\r\n        hasLocation = typeof location !== 'undefined' && location.href,\r\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\r\n        defaultHostName = hasLocation && location.hostname,\r\n        defaultPort = hasLocation && (location.port || undefined),\r\n        buildMap = {},\r\n        masterConfig = (module.config && module.config()) || {};\r\n\r\n    text = {\r\n        version: '2.0.10',\r\n\r\n        strip: function (content) {\r\n            //Strips <?xml ...?> declarations so that external SVG and XML\r\n            //documents can be added to a document without worry. Also, if the string\r\n            //is an HTML document, only the part inside the body tag is returned.\r\n            if (content) {\r\n                content = content.replace(xmlRegExp, \"\");\r\n                var matches = content.match(bodyRegExp);\r\n                if (matches) {\r\n                    content = matches[1];\r\n                }\r\n            } else {\r\n                content = \"\";\r\n            }\r\n            return content;\r\n        },\r\n\r\n        jsEscape: function (content) {\r\n            return content.replace(/(['\\\\])/g, '\\\\$1')\r\n                .replace(/[\\f]/g, \"\\\\f\")\r\n                .replace(/[\\b]/g, \"\\\\b\")\r\n                .replace(/[\\n]/g, \"\\\\n\")\r\n                .replace(/[\\t]/g, \"\\\\t\")\r\n                .replace(/[\\r]/g, \"\\\\r\")\r\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\r\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\r\n        },\r\n\r\n        createXhr: masterConfig.createXhr || function () {\r\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\r\n            var xhr, i, progId;\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                return new XMLHttpRequest();\r\n            } else if (typeof ActiveXObject !== \"undefined\") {\r\n                for (i = 0; i < 3; i += 1) {\r\n                    progId = progIds[i];\r\n                    try {\r\n                        xhr = new ActiveXObject(progId);\r\n                    } catch (e) { }\r\n\r\n                    if (xhr) {\r\n                        progIds = [progId];  // so faster next time\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return xhr;\r\n        },\r\n\r\n        /**\r\n         * Parses a resource name into its component parts. Resource names\r\n         * look like: module/name.ext!strip, where the !strip part is\r\n         * optional.\r\n         * @param {String} name the resource name\r\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\r\n         * where strip is a boolean.\r\n         */\r\n        parseName: function (name) {\r\n            var modName, ext, temp,\r\n                strip = false,\r\n                index = name.indexOf(\".\"),\r\n                isRelative = name.indexOf('./') === 0 ||\r\n                             name.indexOf('../') === 0;\r\n\r\n            if (index !== -1 && (!isRelative || index > 1)) {\r\n                modName = name.substring(0, index);\r\n                ext = name.substring(index + 1, name.length);\r\n            } else {\r\n                modName = name;\r\n            }\r\n\r\n            temp = ext || modName;\r\n            index = temp.indexOf(\"!\");\r\n            if (index !== -1) {\r\n                //Pull off the strip arg.\r\n                strip = temp.substring(index + 1) === \"strip\";\r\n                temp = temp.substring(0, index);\r\n                if (ext) {\r\n                    ext = temp;\r\n                } else {\r\n                    modName = temp;\r\n                }\r\n            }\r\n\r\n            return {\r\n                moduleName: modName,\r\n                ext: ext,\r\n                strip: strip\r\n            };\r\n        },\r\n\r\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\r\n\r\n        /**\r\n         * Is an URL on another domain. Only works for browser use, returns\r\n         * false in non-browser environments. Only used to know if an\r\n         * optimized .js version of a text resource should be loaded\r\n         * instead.\r\n         * @param {String} url\r\n         * @returns Boolean\r\n         */\r\n        useXhr: function (url, protocol, hostname, port) {\r\n            var uProtocol, uHostName, uPort,\r\n                match = text.xdRegExp.exec(url);\r\n            if (!match) {\r\n                return true;\r\n            }\r\n            uProtocol = match[2];\r\n            uHostName = match[3];\r\n\r\n            uHostName = uHostName.split(':');\r\n            uPort = uHostName[1];\r\n            uHostName = uHostName[0];\r\n\r\n            return (!uProtocol || uProtocol === protocol) &&\r\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\r\n                   ((!uPort && !uHostName) || uPort === port);\r\n        },\r\n\r\n        finishLoad: function (name, strip, content, onLoad) {\r\n            content = strip ? text.strip(content) : content;\r\n            if (masterConfig.isBuild) {\r\n                buildMap[name] = content;\r\n            }\r\n            onLoad(content);\r\n        },\r\n\r\n        load: function (name, req, onLoad, config) {\r\n            //Name has format: some.module.filext!strip\r\n            //The strip part is optional.\r\n            //if strip is present, then that means only get the string contents\r\n            //inside a body tag in an HTML string. For XML/SVG content it means\r\n            //removing the <?xml ...?> declarations so the content can be inserted\r\n            //into the current doc without problems.\r\n\r\n            // Do not bother with the work if a build and text will\r\n            // not be inlined.\r\n            if (config.isBuild && !config.inlineText) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            masterConfig.isBuild = config.isBuild;\r\n\r\n            var parsed = text.parseName(name),\r\n                nonStripName = parsed.moduleName +\r\n                    (parsed.ext ? '.' + parsed.ext : ''),\r\n                url = req.toUrl(nonStripName),\r\n                useXhr = (masterConfig.useXhr) ||\r\n                         text.useXhr;\r\n\r\n            // Do not load if it is an empty: url\r\n            if (url.indexOf('empty:') === 0) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            //Load the text. Use XHR if possible and in a browser.\r\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\r\n                text.get(url, function (content) {\r\n                    text.finishLoad(name, parsed.strip, content, onLoad);\r\n                }, function (err) {\r\n                    if (onLoad.error) {\r\n                        onLoad.error(err);\r\n                    }\r\n                });\r\n            } else {\r\n                //Need to fetch the resource across domains. Assume\r\n                //the resource has been optimized into a JS module. Fetch\r\n                //by the module name + extension, but do not include the\r\n                //!strip part to avoid file system issues.\r\n                req([nonStripName], function (content) {\r\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\r\n                                    parsed.strip, content, onLoad);\r\n                });\r\n            }\r\n        },\r\n\r\n        write: function (pluginName, moduleName, write, config) {\r\n            if (buildMap.hasOwnProperty(moduleName)) {\r\n                var content = text.jsEscape(buildMap[moduleName]);\r\n                write.asModule(pluginName + \"!\" + moduleName,\r\n                               \"define(function () { return '\" +\r\n                                   content +\r\n                               \"';});\\n\");\r\n            }\r\n        },\r\n\r\n        writeFile: function (pluginName, moduleName, req, write, config) {\r\n            var parsed = text.parseName(moduleName),\r\n                extPart = parsed.ext ? '.' + parsed.ext : '',\r\n                nonStripName = parsed.moduleName + extPart,\r\n                //Use a '.js' file name so that it indicates it is a\r\n                //script that can be loaded across domains.\r\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\r\n\r\n            //Leverage own load() method to load plugin value, but only\r\n            //write out values that do not have the strip argument,\r\n            //to avoid any potential issues with ! in file names.\r\n            text.load(nonStripName, req, function (value) {\r\n                //Use own write() method to construct full module value.\r\n                //But need to create shell that translates writeFile's\r\n                //write() to the right interface.\r\n                var textWrite = function (contents) {\r\n                    return write(fileName, contents);\r\n                };\r\n                textWrite.asModule = function (moduleName, contents) {\r\n                    return write.asModule(moduleName, fileName, contents);\r\n                };\r\n\r\n                text.write(pluginName, nonStripName, textWrite, config);\r\n            }, config);\r\n        }\r\n    };\r\n\r\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\r\n            typeof process !== \"undefined\" &&\r\n            process.versions &&\r\n            !!process.versions.node &&\r\n            !process.versions['node-webkit'])) {\r\n        //Using special require.nodeRequire, something added by r.js.\r\n        fs = require.nodeRequire('fs');\r\n\r\n        text.get = function (url, callback, errback) {\r\n            try {\r\n                var file = fs.readFileSync(url, 'utf8');\r\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\r\n                if (file.indexOf('\\uFEFF') === 0) {\r\n                    file = file.substring(1);\r\n                }\r\n                callback(file);\r\n            } catch (e) {\r\n                errback(e);\r\n            }\r\n        };\r\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\r\n            text.createXhr())) {\r\n        text.get = function (url, callback, errback, headers) {\r\n            var xhr = text.createXhr(), header;\r\n            xhr.open('GET', url, true);\r\n\r\n            //Allow plugins direct access to xhr headers\r\n            if (headers) {\r\n                for (header in headers) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Allow overrides specified in config\r\n            if (masterConfig.onXhr) {\r\n                masterConfig.onXhr(xhr, url);\r\n            }\r\n\r\n            xhr.onreadystatechange = function (evt) {\r\n                var status, err;\r\n                //Do not explicitly handle errors, those should be\r\n                //visible via console output in the browser.\r\n                if (xhr.readyState === 4) {\r\n                    status = xhr.status;\r\n                    if (status > 399 && status < 600) {\r\n                        //An http 4xx or 5xx error. Signal an error.\r\n                        err = new Error(url + ' HTTP status: ' + status);\r\n                        err.xhr = xhr;\r\n                        errback(err);\r\n                    } else {\r\n                        callback(xhr.responseText);\r\n                    }\r\n\r\n                    if (masterConfig.onXhrComplete) {\r\n                        masterConfig.onXhrComplete(xhr, url);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send(null);\r\n        };\r\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\r\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\r\n        //Why Java, why is this so awkward?\r\n        text.get = function (url, callback) {\r\n            var stringBuffer, line,\r\n                encoding = \"utf-8\",\r\n                file = new java.io.File(url),\r\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\r\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\r\n                content = '';\r\n            try {\r\n                stringBuffer = new java.lang.StringBuffer();\r\n                line = input.readLine();\r\n\r\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\r\n                // http://www.unicode.org/faq/utf_bom.html\r\n\r\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\r\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\r\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\r\n                    // Eat the BOM, since we've already found the encoding on this file,\r\n                    // and we plan to concatenating this buffer with others; the BOM should\r\n                    // only appear at the top of a file.\r\n                    line = line.substring(1);\r\n                }\r\n\r\n                if (line !== null) {\r\n                    stringBuffer.append(line);\r\n                }\r\n\r\n                while ((line = input.readLine()) !== null) {\r\n                    stringBuffer.append(lineSeparator);\r\n                    stringBuffer.append(line);\r\n                }\r\n                //Make sure we return a JavaScript string and not a Java string.\r\n                content = String(stringBuffer.toString()); //String\r\n            } finally {\r\n                input.close();\r\n            }\r\n            callback(content);\r\n        };\r\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\r\n            typeof Components !== 'undefined' && Components.classes &&\r\n            Components.interfaces)) {\r\n        //Avert your gaze!\r\n        Cc = Components.classes,\r\n        Ci = Components.interfaces;\r\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\r\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\r\n\r\n        text.get = function (url, callback) {\r\n            var inStream, convertStream, fileObj,\r\n                readData = {};\r\n\r\n            if (xpcIsWindows) {\r\n                url = url.replace(/\\//g, '\\\\');\r\n            }\r\n\r\n            fileObj = new FileUtils.File(url);\r\n\r\n            //XPCOM, you so crazy\r\n            try {\r\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\r\n                           .createInstance(Ci.nsIFileInputStream);\r\n                inStream.init(fileObj, 1, 0, false);\r\n\r\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\r\n                                .createInstance(Ci.nsIConverterInputStream);\r\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\r\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\r\n\r\n                convertStream.readString(inStream.available(), readData);\r\n                convertStream.close();\r\n                inStream.close();\r\n                callback(readData.value);\r\n            } catch (e) {\r\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\r\n            }\r\n        };\r\n    }\r\n    return text;\r\n});\n","\ndefine('text!structure/header/view.html',[],function () { return '<div class=\"col-md-12\">\\r\\n    <h1 data-bind=\"text: view.title\" class=\"page_title\"></h1>\\r\\n    <p data-bind=\"text: view.subTitle\" class=\"text-muted\"></p>\\r\\n</div>\\r\\n<div data-bind=\"visible: view.hasRight\" class=\"col-md-4 text-right\">\\r\\n    <span data-bind=\"html: view.right.value\"></span>\\r\\n</div>\\r\\n';});\n\n","/**\r\nHeader heading\r\n**/\r\ndefine('structure/header/controller',['require','text!structure/header/view.html'],function (require) {\r\n    var tpl = require(\"text!structure/header/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            //modify vm for this view\r\n            node.view = {};\r\n            if (!_.isUndefined(node.title)) {\r\n                node.view.title = !_.isUndefined(localization[node.title]) ? localization[node.title] : node.title;\r\n                //set page <title>\r\n                document.title = node.view.title;\r\n            }\r\n            if (!_.isUndefined(node.subTitle)) {\r\n                node.view.subTitle = !_.isUndefined(localization[node.subTitle]) ? localization[node.subTitle] : node.subTitle;\r\n            }\r\n\r\n            if (!_.isUndefined(node.right)) {\r\n                node.view.hasRight = true;\r\n                node.view.right = {\r\n                    value: node.right.someVal\r\n                };\r\n            } else {\r\n                node.view.hasRight = false;\r\n            }\r\n\r\n            var view = new kendo.View(built(), { wrap: false, model: node });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!structure/tab/tabNavigation/view.html',[],function () { return '<ul class=\"nav nav-pills\" id=\"<%= app.lib.newGUID() %>\"></ul>';});\n\n","/**\r\nTab navigation\r\n**/\r\ndefine('structure/tab/tabNavigation/controller',['require','text!structure/tab/tabNavigation/view.html'],function (require) {\r\n    var tpl = require(\"text!structure/tab/tabNavigation/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!structure/tab/tabPane/view.html',[],function () { return '<div class=\"tab-pane <%= active %>\" id=\"<%= tabId %>\"></div>   ';});\n\n","/**\r\nTab pane\r\n**/\r\ndefine('structure/tab/tabPane/controller',['require','text!structure/tab/tabPane/view.html'],function (require) {\r\n    var tpl = require(\"text!structure/tab/tabPane/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!structure/tab/tabContent/view.html',[],function () { return '<div class=\"tab-content\"></div>';});\n\n","/**\r\nTab List\r\n**/\r\ndefine('structure/tab/tabContent/controller',['require','text!structure/tab/tabContent/view.html'],function (require) {\r\n    var tpl = require(\"text!structure/tab/tabContent/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!structure/tab/tabData/view.html',[],function () { return '<li class=\"<%= active %>\"><a href=\"#<%= tabId %>\" data-toggle=\"tab\"><%= name %></a></li>';});\n\n","/**\r\nTab data\r\n**/\r\ndefine('structure/tab/tabData/controller',['require','text!structure/tab/tabData/view.html'],function (require) {\r\n    var tpl = require(\"text!structure/tab/tabData/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //check if string can be localized\r\n            if (!_.isUndefined(localization[node.name]) && [node.name].length > 0) {\r\n                node.name = localization[node.name];\r\n            }\r\n\r\n            callback(built(node));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!structure/column/view.html',[],function () { return '<div data-bind=\"class: view.controller.colSize\">\\r\\n    <div data-bind=\"class: view.controller.containerClass\">\\r\\n        <div data-bind=\"visible: view.controller.hasTitle, text: view.controller.title, class: view.controller.titleClass\"></div>\\r\\n        <div class=\"append-here\" data-bind=\"class: view.controller.contentClass\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\ncolumn\r\n**/\r\ndefine('structure/column/controller',['require','text!structure/column/view.html'],function (require) {\r\n    var tpl = require(\"text!structure/column/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var view = new kendo.View();\r\n\r\n            node.view = {\r\n\r\n                //set up controller methods and values\r\n                controller: {\r\n                    //content: vm.content,\r\n                    colSize: 'col-md-' + node.ColSize,\r\n                    title: !_.isUndefined(localization[node.title]) ? localization[node.title] : node.title,\r\n                    hasTitle: !_.isUndefined(node.title)\r\n                },\r\n                buildView: function () {\r\n                    //do we have a custom class\r\n                    var customCls = _.isUndefined(node.customCls) ? \"\" : \" \" + node.customCls;\r\n\r\n                    //do we have a container\r\n                    var containerCls = _.isUndefined(node.containerCls) ? \"\" : \" \" + node.containerCls;\r\n\r\n                    //add in classes to style panel\r\n                    if (!_.isUndefined(node.type) && node.type == \"panel\") {\r\n                        node.view.controller.contentClass = \"panel-body\" + customCls;\r\n                        node.view.controller.containerClass = \"panel panel-widget\";\r\n                        node.view.controller.titleClass = \"panel-heading\";\r\n                    } else {\r\n                        node.view.controller.contentClass = customCls;\r\n                        node.view.controller.containerClass = containerCls;\r\n                    }\r\n\r\n                    //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                    var built = _.template(tpl);\r\n\r\n                    view.destroy();\r\n                    view = new kendo.View(built(), { wrap: false, model: node });\r\n                    callback(view.render());\r\n                }\r\n            }\r\n\r\n            node.view.buildView();\r\n        }\r\n    }\r\n    return definition;\r\n});\n","\ndefine('text!structure/content/view.html',[],function () { return '<div data-bind=\"attr: {class: cssClass}\">\\r\\n\\r\\n</div>';});\n\n","/**\r\ncontent\r\n**/\r\ndefine('structure/content/controller',['require','text!structure/content/view.html'],function (require) {\r\n    var tpl = require(\"text!structure/content/view.html\");\r\n\r\n    //get and modfiy field html as needed\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            var viewModel = {\r\n                cssClass: node.cssClass\r\n            };\r\n\r\n            var view = new kendo.View(built(), { wrap: false, model: kendo.observable(viewModel) });\r\n\r\n            callback(view.render());\r\n        }\r\n    }\r\n    return definition;\r\n});\n","\ndefine('text!viewPanels/facetedSearch/view.html',[],function () { return '<!-- facetedSearch-->\\r\\n<div data-bind=\"templateResources:\\'resources\\'\">\\r\\n\\r\\n    <ul data-template-name=\"searchResultsTemplate\" data-type=\"#: data.type #\" class=\"faceted-search-list type-#: data.type #\">\\r\\n        #if(data.type == \"NoResults\"){#\\r\\n        <li class=\"faceted-search-item\">\\r\\n            <div>\\r\\n                <span>\\r\\n                    #: data.Title #\\r\\n                </span>\\r\\n            </div>\\r\\n        </li>\\r\\n        #} else {#\\r\\n        #if(data.type == \"RequestOffering\"){#\\r\\n        <li class=\"faceted-search-item no-hover\">\\r\\n            <div>\\r\\n                <span class=\"column-title\">#: localization.Requests #</span>\\r\\n            </div>\\r\\n        </li>\\r\\n        #} else if(data.type == \"Favorite\"){#\\r\\n        <li class=\"faceted-search-item no-hover\">\\r\\n            <div>\\r\\n                <span class=\"column-title\">#: localization.Favorites #</span>\\r\\n            </div>\\r\\n        </li>\\r\\n        #} else if(data.type == \"KnowledgeArticle\"){#\\r\\n        <li class=\"faceted-search-item no-hover\">\\r\\n            <div>\\r\\n                <span class=\"column-title\">#: localization.KnowledgeArticles #</span>\\r\\n            </div>\\r\\n        </li>\\r\\n        # } #\\r\\n        #if(data.type != \"NoResults\"){#\\r\\n        # for (var i = 0; i < data.results.length ; i++) { #\\r\\n        #var current = data.results[i];#\\r\\n        #current.Description = current.Description.replace(/[\"]/g,\\'\\\\\\'\\')#\\r\\n        #if(data.type == \"RequestOffering\" || data.type == \"Favorite\"){#\\r\\n        <li class=\"faceted-search-item\" data-tooltip=\"#:current.Description#\">\\r\\n            <div>\\r\\n                <span>\\r\\n                    #if(!_.isNull(current.RequestOfferingLinkUrl)){#\\r\\n                    <a class=\"link\" href=\"#:current.RequestOfferingLinkUrl#\">\\r\\n                        <img class=\"hidden-xs hidden-sm\" src=\"/ServiceCatalog/GetRequestOfferingImg/#:current.Id#\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\" />\\r\\n                        <span class=\"list-title\">#: current.Title #</span>\\r\\n                    </a>\\r\\n                    #} else {#\\r\\n                    <a class=\"link\" href=\"/SC/ServiceCatalog/RequestOffering/#:current.Id#,#:current.ServiceOfferingId#\">\\r\\n                        <img class=\"hidden-xs hidden-sm\" src=\"/ServiceCatalog/GetRequestOfferingImg/#:current.Id#\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\" />\\r\\n                        <span class=\"list-title\">#: current.Title #</span>\\r\\n                    </a>\\r\\n                    # } #\\r\\n                </span>\\r\\n            </div>\\r\\n        </li>\\r\\n        #} else {#\\r\\n        <li class=\"faceted-search-item\" data-tooltip=\"#:current.Description#\">\\r\\n            <div>\\r\\n                <span>\\r\\n                    <a class=\"link\" href=\"/KnowledgeBase/View/#:current.Id#\">\\r\\n                        <img alt=\"image\" class=\"hidden-xs hidden-sm ka-icon\" src=\"/Content/Images/Icons/Drawer/kb-white.svg\">\\r\\n                        <span class=\"list-title\">#: current.Title #</span>\\r\\n                    </a>\\r\\n                </span>\\r\\n            </div>\\r\\n        </li>\\r\\n        # } #\\r\\n        # } #\\r\\n        # } #\\r\\n        #if(data.type == \"RequestOffering\" && data.showAllLink){#\\r\\n        <li class=\"faceted-search-item no-hover hidden-xs\">\\r\\n            <br/>\\r\\n        </li>\\r\\n        <li class=\"faceted-search-item last-item cursor-pointer hidden-xs\" data-click-location=\"#: data.type #\">\\r\\n            <a class=\"cursor-pointer\">#: localization.ViewAllRequests #</a>\\r\\n        </li>\\r\\n        <li class=\"faceted-search-item last-item cursor-pointer visible-xs\" data-click-location=\"#: data.type #\">\\r\\n            <a class=\"cursor-pointer\">#: localization.ViewAll #</a>\\r\\n        </li>\\r\\n        #} else if(data.type == \"Favorite\" && data.showAllLink){#\\r\\n        <li class=\"faceted-search-item no-hover hidden-xs\">\\r\\n            <br/>\\r\\n        </li>\\r\\n        <li class=\"faceted-search-item last-item cursor-pointer hidden-xs\" data-click-location=\"#: data.type #\">\\r\\n            <a class=\"cursor-pointer\">#: localization.ViewAllFavorites #</a>\\r\\n        </li>\\r\\n        <li class=\"faceted-search-item last-item cursor-pointer visible-xs\" data-click-location=\"#: data.type #\">\\r\\n            <a class=\"cursor-pointer\">#: localization.ViewAll #</a>\\r\\n        </li>\\r\\n        #} else if(data.type == \"KnowledgeArticle\" && data.showAllLink){#\\r\\n        <li class=\"faceted-search-item no-hover hidden-xs\">\\r\\n            <br/>\\r\\n        </li>\\r\\n        <li class=\"faceted-search-item last-item cursor-pointer hidden-xs\" data-click-location=\"#: data.type #\">\\r\\n            <a class=\"cursor-pointer\">#: localization.ViewAllKA #</a>\\r\\n        </li>\\r\\n        <li class=\"faceted-search-item last-item cursor-pointer visible-xs\" data-click-location=\"#: data.type #\">\\r\\n            <a class=\"cursor-pointer\">#: localization.ViewAll #</a>\\r\\n        </li>\\r\\n        # } #\\r\\n        # } #\\r\\n    </ul>\\r\\n</div>\\r\\n\\r\\n<div class=\"row search-row\">\\r\\n\\r\\n    <div class=\"service-request-body\">\\r\\n        <h3 class=\"search-title\" data-bind=\"localize: FacetedSearchLabel\"></h3>\\r\\n        <div class=\"search-wrapper\">\\r\\n            <div class=\"input-group\" data-bind=\"ciresonFacetedSearchBehavior: selectedSearchResult\">\\r\\n                <input type=\"text\" class=\"form-control\" data-template-part=\"autoCompleteInputPart\" data-value-primitive=\"false\" data-bind=\"value: selectedSearchResult\" id=\"facetedSearch\" />\\r\\n                <div class=\"input-group-btn\" data-template-part=\"filterSelectPart\">\\r\\n                    <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">\\r\\n                        <span data-bind=\"text: currentSearchScopeText\">Search All</span> <span class=\"caret\"></span>\\r\\n                    </button>\\r\\n                    <ul class=\"dropdown-menu pull-right\" role=\"menu\">\\r\\n                        <li data-searchtype=\"IWantToReportAnIssue\"><a data-bind=\"localize: IWantToReportAnIssue\"></a></li>\\r\\n                        <li data-searchtype=\"IWantToRequestSomething\"><a data-bind=\"localize: IWantToRequestSomething\"></a></li>\\r\\n                        <li data-searchtype=\"ChooseAFavoriteRequest\"><a data-bind=\"localize: ChooseAFavoriteRequest\"></a></li>\\r\\n                        <li class=\"divider\"></li>\\r\\n                        <li data-searchtype=\"SearchAll\"><a data-bind=\"localize: SearchAll\"></a></li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <span class=\"input-group-btn\" data-template-part=\"searchButtonPart\">\\r\\n                    <button class=\"btn btn-primary btn-search\" type=\"button\"><span class=\"fa fa-search\"></span></button>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nFaceted search\r\n**/\r\ndefine('viewPanels/facetedSearch/controller',['require','text!viewPanels/facetedSearch/view.html'],function (require) {\r\n    var tpl = require(\"text!viewPanels/facetedSearch/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            //build template using underscore.js so that we can interpret kendo template vars if needed\r\n            var built = _.template(tpl);\r\n\r\n            var viewModel = {\r\n                SearchPlaceholder: node.Definition.SearchPlaceholder,\r\n                textField: node.Definition.TextField,\r\n                selectedSearchResult: null,\r\n            };\r\n\r\n            var view = new kendo.View(built(), { wrap: false, model: kendo.observable(viewModel) });\r\n            callback(view.render());\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!viewPanels/html/view.html',[],function () { return '<div data-bind=\"html: view.controller.content\">\\r\\n</div>\\r\\n\\r\\n';});\n\n","/**\r\nhtml\r\n**/\r\ndefine('viewPanels/html/controller',['require','text!viewPanels/html/view.html'],function (require) {\r\n    var tpl = require(\"text!viewPanels/html/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var view = new kendo.View();\r\n            var viewModel = {\r\n                view: {\r\n                    //set up controller methods and values\r\n                    controller: {\r\n                        content: !_.isUndefined(node.Definition.content.content) ? node.Definition.content.content : node.Definition.content,\r\n                    },\r\n\r\n                    buildView: function () {\r\n                        //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                        var built = _.template(tpl);\r\n\r\n                        view.destroy();\r\n                        view = new kendo.View(built(), { wrap: false, model: viewModel });\r\n                        callback(view.render());\r\n                    }\r\n                }\r\n            }\r\n            viewModel.view.buildView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!CustomSpace/Scripts/viewPanels/serviceCatalog/view.html',[],function () { return '<div id=\"service-catalog\"></div>\\r\\n\\r\\n<div class=\"service-catalog-content\">\\r\\n    <div class=\"row\">\\r\\n        <div id=\"servicecat-content\" class=\"col-lg-10 col-md-9 service-request-body\">\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- BASE STRUCTURE TEMPLATE -->\\r\\n<script type=\"text/x-kendo-template\" id=\"servicecatalog-template\">\\r\\n    <div class=\"service-catalog-content\">\\r\\n        <div class=\"row\">\\r\\n            <div id=\"servicecat-nav\" data-bind=\"affix:{top: 200}, yScrollOnResize:{top: auto, bottom: 50}\" class=\"col-lg-2 col-md-3 service-request-nav hidden-xs hidden-sm\">\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"col-lg-10 col-md-9 service-request-body\">\\r\\n                <div id=\"servicecat-content\"></div>\\r\\n                <!-- OVERLAY TEMPLATE -->\\r\\n                <div class=\"overlay\">\\r\\n                    <div class=\"row search-results-container\">\\r\\n                        <div class=\"col-md-12\" id=\"breadcrumb-results-wrapper\"></div>\\r\\n                        <div class=\"col-md-12\" id=\"ka-results-wrapper\"></div>\\r\\n                        <div class=\"col-md-12\" id=\"fav-results-wrapper\"></div>\\r\\n                        <div class=\"col-md-12\" id=\"ro-results-wrapper\"></div>\\r\\n                        <div class=\"col-md-12\" id=\"footer-results-wrapper\"></div>\\r\\n                        <div class=\"col-md-12\" id=\"catalog-area-overlay\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- NAV TEMPLATES-->\\r\\n<script type=\"text/x-kendo-template\" id=\"base-nav-template\">\\r\\n    <div data-bind =\"visible: taxonomyVisible\">\\r\\n        <h4 data-bind=\"localize: BrowseByCategory, visible: taxonomyVisible\"></h4>\\r\\n        <ul class=\"list-unstyled sc-nav-list\" data-template=\"category-nav-template\" data-bind=\"source: navs\"></ul>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<script type=\"text/x-kendo-template\" id=\"category-nav-template\">\\r\\n    <li class=\"nav-header\">\\r\\n        <a class=\"link cat-link\" data-toggle=\"collapse\" data-target=\"\\\\\\\\##:CategoryId#\" data-category=\"#:CategoryId#\" data-bind=\"text: Category, click: showSingleCategory\"></a>\\r\\n        <ul class=\"list-unstyled collapse\" id=\"#:CategoryId#\" data-template=\"service-nav-template\" data-bind=\"source: services\"></ul>\\r\\n    </li>\\r\\n</script>\\r\\n\\r\\n<script type=\"text/x-kendo-template\" id=\"service-nav-template\">\\r\\n    <li><a class=\"link so-link\" data-service=\"#:ServiceOfferingId#\" data-bind=\"text: Service, click: showSingleService\"></a></li>\\r\\n</script>\\r\\n\\r\\n<!-- MAIN CATALOG TEMPLATE-->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"catalog-template\">\\r\\n    <h4 data-bind=\"visible: loadingVisible, localize: Loading\"></h4>\\r\\n    <div class=\"catalog-content\">\\r\\n        <!-- FAVORITES/TOP LISTS-->\\r\\n        <div class=\"clearfix\" data-bind=\"visible:topsVisible\">\\r\\n            <div class=\"topfav-row\" data-bind=\"visible: favRO\">\\r\\n                <h4 data-bind=\"localize: FavoriteRequests\"></h4>\\r\\n\\r\\n                <div class=\"list-wrapper\" data-template=\"topfav-request-offerings\" data-bind=\"source: favROs\"></div>\\r\\n            </div>\\r\\n            <div class=\"topfav-row\" data-bind=\"visible: topRO\">\\r\\n                <h4 data-bind=\"localize: TopRequests\"></h4>\\r\\n\\r\\n                <div class=\"list-wrapper\" data-template=\"topfav-request-offerings\" data-bind=\"source: topROs\"></div>\\r\\n            </div>\\r\\n            <div class=\"topfav-row\" data-bind=\"visible: topKA\">\\r\\n                <h4 data-bind=\"localize: TopKnowledgeArticles\"></h4>\\r\\n\\r\\n                <div class=\"list-wrapper\" data-template=\"top-ka\" data-bind=\"source: topKAs\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- MAIN PAGE CATALOG-->\\r\\n        <div data-bind=\"visible: catalogVisible\">\\r\\n            <h4>\\r\\n                <span data-bind=\"visible: homeBC\">\\r\\n                    <a class=\"cursor-pointer fa fa-home\" data-bind=\"click: showHome\"></a>\\r\\n                    /\\r\\n                </span>\\r\\n                <span data-bind=\"text: scLabel\"></span>\\r\\n\\r\\n            </h4>\\r\\n            <div id=\"catalog-area\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- TOP/FAV RO TEMPLATES-->\\r\\n<script type=\"text/x-kendo-template\" id=\"topfav-request-offerings\">\\r\\n    <div class=\"thumbnail\">\\r\\n        <div class=\"mid-thumb top-#:Title.replace(/ /g,\\'-\\').toLowerCase() #\">\\r\\n            <a class=\"cursor-pointer\" href=\"/SC/ServiceCatalog/RequestOffering/#:Id#,#:ServiceInfo.Id#\">\\r\\n                <img src=\"/ServiceCatalog/GetRequestOfferingImg/#:Id#\" onerror=\"this.onerror=null; this.src=\\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\">\\r\\n                <div class=\" favorite\">\\r\\n                    <div class=\"inner\"\\r\\n                         data-request-url=\"#:LinkUrl#\"\\r\\n                         data-request-target-type=\"#:LinkTargetType#\"\\r\\n                         data-request=\"#:Id#\"\\r\\n                         data-service=\"#:ServiceInfo.Id#\"\\r\\n                         data-bind=\"click: openRequestOffering\">\\r\\n                        <i class=\"fa #= IsFavorite ? \\'fa-star\\' :\\'fa-star-o\\' # link\" data-request=\"#:Id#\" data-bind=\"click: toggleFavorite\"></i>\\r\\n                        <p data-request-url=\"#:LinkUrl#\"\\r\\n                           data-request-target-type=\"#:LinkTargetType#\"\\r\\n                           data-request=\"#:Id#\"\\r\\n                           data-service=\"#:ServiceInfo.Id#\"\\r\\n                           data-bind=\"click: openRequestOffering\">#= BriefDescription != null ? BriefDescription :\\'\\' #</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </a>\\r\\n        </div>\\r\\n        <div class=\"caption\">\\r\\n            <a class=\"link\" data-request-url=\"#:LinkUrl#\" data-request-target-type=\"#:LinkTargetType#\" data-service=\"#:ServiceInfo.Id#\" data-request=\"#:Id#\" data-bind=\"text: Title, click: openRequestOffering\"></a>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- TOP KA TEMPLATES-->\\r\\n<script type=\"text/x-kendo-template\" id=\"top-ka\">\\r\\n    <div class=\"thumbnail\">\\r\\n        <div class=\"mid-thumb ka-thumb ka-#:Title.replace(/ /g,\\'-\\').toLowerCase() #\">\\r\\n            <a class=\"cursor-pointer\" href=\"/KnowledgeBase/View/#:ArticleId#\">\\r\\n                <img alt=\"image\" class=\"ka-icon\" src=\"/Content/Images/Icons/Drawer/kb-white.svg\">\\r\\n                <div class=\"favorite\">\\r\\n                    <div class=\"inner\">\\r\\n                        <p>#= Abstract != null ? Abstract :\\'\\' #</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </a>\\r\\n        </div>\\r\\n        <div class=\"caption\">\\r\\n            <a class=\"link\" href=\"/KnowledgeBase/View/#:ArticleId#\" data-bind=\"text: Title\"></a>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- CATEGORY WITH CHILD SOs TEMPLATE-->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"cat-template\">\\r\\n    <div class=\"cat #:CategoryId#\">\\r\\n        <div data-template=\"so-template\" data-bind=\"source: dataSource\"></div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- LIST OF SOs TEMPLATE-->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"so-template\">\\r\\n    <div class=\"service-offerings\" data-service=\"#:ServiceOfferingId#\">\\r\\n        <h4>\\r\\n            <a class=\"cursor-pointer fa fa-home\" data-bind=\"click: showHome\"></a>\\r\\n            /\\r\\n            <a class=\"cursor-pointer\" data-bind=\"localize: ServiceCatalog, click: showFullCatalog\"></a>\\r\\n            /\\r\\n            <a class=\"cursor-pointer\" data-category=\"#:CategoryId#\" data-bind=\"text: Category, click: showSingleCategory\"></a>\\r\\n            /\\r\\n            <span data-bind=\"text: Service\"></span>\\r\\n        </h4>\\r\\n        <!--<div class=\"row\" data-template=\"ro-template\" data-bind=\"source: requestofferings\"></div>-->\\r\\n        <div class=\"row\">\\r\\n            # for (var i = 0; i < requestofferings.length; i++) { #\\r\\n            <div class=\"col-sm-6 col-md-4 col-lg-3\">\\r\\n                <div class=\"thumbnail-lg\">\\r\\n                    <div class=\"cursor-pointer lg-thumb ro-#:requestofferings[i].RequestOfferingTitle.replace(/ /g,\\'-\\').toLowerCase() #\">\\r\\n                        <img src=\"/ServiceCatalog/GetRequestOfferingImg/#:requestofferings[i].RequestOfferingId#\" onerror=\"this.onerror=null; this.src=\\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\">\\r\\n                        <div class=\"favorite\">\\r\\n                            <div class=\"inner\"\\r\\n                                 data-request-url=\"#:requestofferings[i].RequestOfferingLinkUrl#\"\\r\\n                                 data-request-target-type=\"#:requestofferings[i].RequestOfferingLinkTargetType#\"\\r\\n                                 data-request=\"#:requestofferings[i].RequestOfferingId#\"\\r\\n                                 data-service=\"#:requestofferings[i].ServiceOfferingId#\"\\r\\n                                 data-bind=\"click: openRequestOffering\">\\r\\n                                <i class=\"fa #= requestofferings[i].IsFavorite ? \\'fa-star\\' :\\'fa-star-o\\' # link\" data-request=\"#:requestofferings[i].RequestOfferingId#\" data-bind=\"click: toggleFavorite\"></i>\\r\\n                                <p data-request=\"#:requestofferings[i].RequestOfferingId#\">#: requestofferings[i].RequestOfferingDescription #</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"caption\">\\r\\n                        <a class=\"link\" data-service=\"#:requestofferings[i].ServiceOfferingId#\" data-request-url=\"#:requestofferings[i].RequestOfferingLinkUrl#\" data-request-target-type=\"#:requestofferings[i].RequestOfferingLinkTargetType#\" data-request=\"#:requestofferings[i].RequestOfferingId#\" data-bind=\"click: openRequestOffering\">#:requestofferings[i].RequestOfferingTitle#</a>\\r\\n                        <p class=\"hidden-xs\">#: requestofferings[i].RequestOfferingDescription #</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            # } #\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<!-- LIST OF ROs TEMPLATE-->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"ro-template\">\\r\\n    <div class=\"col-sm-6 col-md-4 col-lg-3\">\\r\\n        <div class=\"thumbnail-lg\">\\r\\n            <div class=\"cursor-pointer lg-thumb ro-#:RequestOfferingTitle.replace(/ /g,\\'-\\').toLowerCase() #\">\\r\\n                <img src=\"/ServiceCatalog/GetRequestOfferingImg/#:RequestOfferingId#\" onerror=\"this.onerror=null; this.src=\\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\">\\r\\n                <div class=\"favorite\">\\r\\n                    <div class=\"inner\"\\r\\n                         data-request-url=\"#:RequestOfferingLinkUrl#\"\\r\\n                         data-request-target-type=\"#:RequestOfferingLinkTargetType#\"\\r\\n                         data-request=\"#:RequestOfferingId#\"\\r\\n                         data-service=\"#:ServiceOfferingId#\"\\r\\n                         data-bind=\"click: openRequestOffering\">\\r\\n                        <i class=\"fa #= IsFavorite ? \\'fa-star\\' :\\'fa-star-o\\' # link\" data-request=\"#:RequestOfferingId#\" data-bind=\"click: toggleFavorite\"></i>\\r\\n                        <p data-request=\"#:RequestOfferingId#\">#= RequestOfferingDescription != null ? RequestOfferingDescription :\\'\\' #</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"caption\">\\r\\n                <a class=\"link\" data-service=\"#:ServiceOfferingId#\" data-request-url=\"#:RequestOfferingLinkUrl#\" data-request-target-type=\"#:RequestOfferingLinkTargetType#\" data-request=\"#:RequestOfferingId#\" data-bind=\"text: RequestOfferingTitle, click: openRequestOffering\"></a>\\r\\n                <p class=\"hidden-xs\" data-bind=\"text: RequestOfferingDescription\"></p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<!-- MINI CAT TEMPLATE - All Categories -->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"cat-mini-template-all\">\\r\\n    <div class=\"cat-#:Category.replace(/ /g,\\'-\\').toLowerCase() #\">\\r\\n        <h4>\\r\\n            <span data-bind=\"text: Category\"></span>\\r\\n        </h4>\\r\\n        <div class=\"mini-template-body\">\\r\\n            <!--<div class=\"row\" data-template=\"so-mini-template\" data-bind=\"source: services\"></div>-->\\r\\n            <div class=\"row\">\\r\\n                # for (var x = 0; x < services.length  ; x++) { #\\r\\n                <div class=\"mini-services col-sm-5 col-md-4 col-lg-3\">\\r\\n                    <div class=\"clearfix\">\\r\\n                        <div class=\"so-blocks\" data-service=\"#:services[x].ServiceOfferingId#\">\\r\\n                            # var totalROs = !_.isUndefined(services[x].requestofferings) ? services[x].requestofferings.length : 0 #\\r\\n                            # var requestofferings = services[x].requestofferings; #\\r\\n                            <section data-service=\"#:services[x].ServiceOfferingId#\">\\r\\n                                # for (var i = 0; i < totalROs && i < 4  ; i++) { #\\r\\n                                <div class=\"ro-#:requestofferings[i].RequestOfferingTitle.replace(/ /g,\\'-\\').toLowerCase() #\" title=\"#:requestofferings[i].RequestOfferingTitle#\"\\r\\n                                     data-title=\"#:requestofferings[i].RequestOfferingTitle#\"\\r\\n                                     data-role=\"tooltip\"\\r\\n                                     data-auto-hide=\"true\"\\r\\n                                     data-position=\"top\">\\r\\n                                    <img class=\"cursor-pointer\" data-request-url=\"#:requestofferings[i].RequestOfferingLinkUrl#\" data-request-target-type=\"#:requestofferings[i].RequestOfferingLinkTargetType#\" data-request=\"#:requestofferings[i].RequestOfferingId#\" data-bind=\"click: openRequestOffering\" src=\"/ServiceCatalog/GetRequestOfferingImg/#:requestofferings[i].RequestOfferingId#\" onerror=\"this.onerror=null; this.src=\\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\">\\r\\n                                </div>\\r\\n                                # } #\\r\\n                            </section>\\r\\n                            # if(totalROs > 4) { #\\r\\n                            <section data-service=\"#:services[x].ServiceOfferingId#\">\\r\\n                                # for (var i = 4; i < totalROs && i < 9  ; i++) { #\\r\\n                                <div class=\"ro-#:requestofferings[i].RequestOfferingTitle.replace(/ /g,\\'-\\').toLowerCase() #\" title=\"#:requestofferings[i].RequestOfferingTitle#\"\\r\\n                                     data-title=\"#:requestofferings[i].RequestOfferingTitle#\"\\r\\n                                     data-role=\"tooltip\"\\r\\n                                     data-auto-hide=\"true\"\\r\\n                                     data-position=\"top\">\\r\\n                                    <img class=\"cursor-pointer\" data-request-url=\"#:requestofferings[i].RequestOfferingLinkUrl#\" data-request-target-type=\"#:requestofferings[i].RequestOfferingLinkTargetType#\" data-request=\"#:requestofferings[i].RequestOfferingId#\" data-bind=\"click: openRequestOffering\" src=\"/ServiceCatalog/GetRequestOfferingImg/#:requestofferings[i].RequestOfferingId#\" onerror=\"this.onerror=null; this.src=\\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\">\\r\\n                                </div>\\r\\n                                # } #\\r\\n                            </section>\\r\\n                            # } #\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <span class=\"link\" data-service=\"#:services[x].ServiceOfferingId#\" data-bind=\"click: showSingleService\">#:services[x].Service#</span>\\r\\n                </div>\\r\\n                # } #\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<!-- MINI CAT TEMPLATE - Single Category -->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"cat-mini-template-single\">\\r\\n    <div class=\"cat-#:Category.replace(/ /g,\\'-\\').toLowerCase() #\">\\r\\n        <h4>\\r\\n            <a class=\"cursor-pointer fa fa-home\" data-bind=\"click: showHome\"></a>\\r\\n            /\\r\\n            <a class=\"cursor-pointer\" data-bind=\"localize: ServiceCatalog, click: showFullCatalog\"></a>\\r\\n            /\\r\\n            <span data-bind=\"text: Category\"></span>\\r\\n        </h4>\\r\\n        <div class=\"mini-template-body\">\\r\\n            <div class=\"row\" data-template=\"so-mini-template\" data-bind=\"source: services\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<!-- MINI SO TEMPLATE-->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"so-mini-template\">\\r\\n    <div class=\"mini-services col-sm-5 col-md-4 col-lg-3\">\\r\\n        <div class=\"clearfix\">\\r\\n            <div class=\"so-blocks\" data-service=\"#:ServiceOfferingId#\">\\r\\n                # var totalROs = !_.isUndefined(data.requestofferings) ? data.requestofferings.length : 0 #\\r\\n                <section data-service=\"#:ServiceOfferingId#\">\\r\\n                    # for (var i = 0; i < totalROs && i < 4  ; i++) { #\\r\\n                    <div class=\"ro-#:requestofferings[i].RequestOfferingTitle.replace(/ /g,\\'-\\').toLowerCase() #\" title=\"#:requestofferings[i].RequestOfferingTitle#\"\\r\\n                         data-title=\"#:requestofferings[i].RequestOfferingTitle#\"\\r\\n                         data-role=\"tooltip\"\\r\\n                         data-auto-hide=\"true\"\\r\\n                         data-position=\"top\">\\r\\n                        <img class=\"cursor-pointer\" data-request-url=\"#:requestofferings[i].RequestOfferingLinkUrl#\" data-request-target-type=\"#:requestofferings[i].RequestOfferingLinkTargetType#\" data-request=\"#:requestofferings[i].RequestOfferingId#\" data-bind=\"click: openRequestOffering\" src=\"/ServiceCatalog/GetRequestOfferingImg/#:requestofferings[i].RequestOfferingId#\" onerror=\"this.onerror=null; this.src=\\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\">\\r\\n                    </div>\\r\\n                    # } #\\r\\n                </section>\\r\\n                # if(totalROs > 4) { #\\r\\n                <section data-service=\"#:ServiceOfferingId#\">\\r\\n                    # for (var i = 4; i < totalROs && i < 9  ; i++) { #\\r\\n                    <div class=\"ro-#:requestofferings[i].RequestOfferingTitle.replace(/ /g,\\'-\\').toLowerCase() #\" title=\"#:requestofferings[i].RequestOfferingTitle#\"\\r\\n                         data-title=\"#:requestofferings[i].RequestOfferingTitle#\"\\r\\n                         data-role=\"tooltip\"\\r\\n                         data-auto-hide=\"true\"\\r\\n                         data-position=\"top\">\\r\\n                        <img class=\"cursor-pointer\" data-request-url=\"#:requestofferings[i].RequestOfferingLinkUrl#\" data-request-target-type=\"#:requestofferings[i].RequestOfferingLinkTargetType#\" data-request=\"#:requestofferings[i].RequestOfferingId#\" data-bind=\"click: openRequestOffering\" src=\"/ServiceCatalog/GetRequestOfferingImg/#:requestofferings[i].RequestOfferingId#\" onerror=\"this.onerror=null; this.src=\\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\">\\r\\n                    </div>\\r\\n                    # } #\\r\\n                </section>\\r\\n                # } #\\r\\n            </div>\\r\\n            <!--<ul class=\"so-blocks\">\\r\\n                <li class=\"more-ros fa fa-ellipsis-h\" title=\"View All #:Service#\"\\r\\n                    data-role=\"tooltip\"\\r\\n                    data-auto-hide=\"true\"\\r\\n                    data-position=\"top\"\\r\\n                    data-bind=\"click: showSingleService\">\\r\\n                </li>\\r\\n            </ul>-->\\r\\n        </div>\\r\\n        <span class=\"link\" data-service=\"#:ServiceOfferingId#\" data-bind=\"click: showSingleService, text: Service\"></span>\\r\\n    </div>\\r\\n</script>\\r\\n<!-- MINI RO TEMPLATE-->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"ro-mini-template\">\\r\\n    <div class=\"ro-#:RequestOfferingTitle.replace(/ /g,\\'-\\').toLowerCase() #\" title=\"#:RequestOfferingTitle#\"\\r\\n         data-title=\"#:RequestOfferingTitle#\"\\r\\n         data-role=\"tooltip\"\\r\\n         data-auto-hide=\"true\"\\r\\n         data-position=\"top\">\\r\\n        <img class=\"cursor-pointer\" data-request-url=\"#:RequestOfferingLinkUrl#\" data-request=\"#:RequestOfferingId#\" data-request-target-type=\"#:RequestOfferingLinkTargetType#\" data-bind=\"click: openRequestOffering\" src=\"/ServiceCatalog/GetRequestOfferingImg/#:RequestOfferingId#\" onerror=\"this.onerror=null; this.src=\\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\">\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n\\r\\n<!-- OVERLAY TEMPLATES -->\\r\\n<!-- KA OVERLAY TEMPLATE -->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"ka-results-template\">\\r\\n    <div class=\"col-sm-6 col-md-4 col-lg-3\">\\r\\n        <div class=\"thumbnail-lg\">\\r\\n            <div class=\"lg-thumb ka-result-thumb\">\\r\\n                <a href=\"/KnowledgeBase/View/#:Id#\" class=\"link\">\\r\\n                    <img alt=\"image\" class=\"ka-icon\" src=\"/Content/Images/Icons/Drawer/kb-white.svg\">\\r\\n                </a>\\r\\n            </div>\\r\\n            <div class=\"caption\">\\r\\n                <a class=\"link\" href=\"/KnowledgeBase/View/#:Id#\">#: Title #</a>\\r\\n                <p class=\"hidden-xs\">#: Description #</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>';});\n\n","/**\r\nserviceCatalog\r\n**/\r\ndefine('CustomSpace/Scripts/viewPanels/serviceCatalog/controller',['require','text!CustomSpace/Scripts/viewPanels/serviceCatalog/view.html'],function (require) {\r\n    var tpl = require(\"text!CustomSpace/Scripts/viewPanels/serviceCatalog/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(node));\r\n\r\n            //add html and templates to the dom\r\n            callback(templateFrag);\r\n\r\n            //create a layout location\r\n            layout = new kendo.Layout(\"servicecatalog-template\");\r\n            layout.render($('#service-catalog'));\r\n\r\n            //setup the catalog data source\r\n            var items = new kendo.data.DataSource({\r\n                schema: {\r\n                    data: \"Data\",\r\n                    model: { id: \"CategoryId\" }\r\n                },\r\n                transport: { read: { url: \"/ServiceCatalog/GetServiceCatalogWithSOGroup\", dataType: \"json\" } }\r\n            });\r\n\r\n            //setup the catalog viem model\r\n            var scModel = kendo.observable({\r\n                homeBC: false,\r\n                scLabel: localization.AllRequests,\r\n                favRO: false,\r\n                topRO: false,\r\n                topKA: false,\r\n                favROLoaded: false,\r\n                topROLoaded: false,\r\n                topKALoaded: false,\r\n                topsVisible: false,\r\n                catalogVisible: false,\r\n                taxonomyVisible: !session.forceSearch,\r\n                loadingVisible: !session.forceSearch,\r\n                forceSearch: session.forceSearch,\r\n                dataSource: items,\r\n                currentView: 'page',\r\n                navs: new kendo.data.DataSource({   //setup the left nav data source\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        model: { id: \"CategoryId\" }\r\n                    },\r\n                    transport: { read: { url: \"/ServiceCatalog/GetServiceCatalogWithCatGroup\", dataType: \"json\", cache: false } }\r\n                }),\r\n                folded: new kendo.data.DataSource({   //setup mini catalog data source\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        model: { id: \"CategoryId\" }\r\n                    },\r\n                    transport: { read: { url: \"/ServiceCatalog/GetServiceCatalogWithCatGroup\", dataType: \"json\", cache: false } }\r\n                }),\r\n                favROs: new kendo.data.DataSource({ //setup fav RO data source\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        model: { id: \"Id\" }\r\n                    },\r\n                    transport: { read: { url: \"/ServiceCatalog/GetFavoriteRequestOffering\", dataType: \"json\", cache: false } }\r\n                }),\r\n                topROs: new kendo.data.DataSource({ //setup Top RO data source\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        model: { id: \"Id\" }\r\n                    },\r\n                    transport: { read: { url: \"/ServiceCatalog/GetTopRequestOffering\", dataType: \"json\", cache: false } }\r\n                }),\r\n                topKAs: new kendo.data.DataSource({ //setup the top KA data source\r\n                    schema: {\r\n                        model: { id: \"ArticleId\" }\r\n                    },\r\n                    transport: { read: { url: \"/api/v3/Article/GetTopArticlesByPopularity\", data: { count: 10 }, dataType: \"json\", cache: false } }\r\n                }),\r\n                openRequestOffering: function (e) {\r\n                    e.preventDefault();\r\n\r\n                    var elm = $(e.target);\r\n\r\n                    var roId = elm.data('request');\r\n                    var serId;\r\n                    if (elm.is(\"[data-service]\")) {\r\n                        serId = elm.data('service');//crawl up and get service request id\r\n                    } else {\r\n                        serId = elm.closest('[data-service]').data('service');//crawl up and get service request id\r\n                    }\r\n                    \r\n                    var roLink = elm.data('request-url');\r\n                    var roLinkType = elm.data('request-target-type');\r\n                    \r\n                    //if direct link for ro is present, use it\r\n                    if (!_.isUndefined(roLink) && !_.isNull(roLink) && roLink != \"\") {\r\n                        window.open(roLink, roLinkType);\r\n                    } else {\r\n                        window.location = \"/SC/ServiceCatalog/RequestOffering/\" + roId + \",\" + serId;\r\n                    }\r\n                },\r\n                showCatalog: function() {\r\n                    if (this.get(\"topKALoaded\") && this.get(\"topROLoaded\") && this.get(\"favROLoaded\")) {\r\n                        this.set(\"topsVisible\", true);\r\n                        this.set(\"catalogVisible\", true);\r\n                        this.set(\"loadingVisible\", false);\r\n\r\n                        //look for anchor/location link\r\n                        if (app.lib.getQueryParams() && !session.forceSearch) {\r\n                            var queryParams = app.lib.getQueryParams();\r\n                            if (_.isString(queryParams['so'])) {\r\n                                scModel.showSingleService(queryParams['so']);\r\n                            }\r\n                            if (_.isString(queryParams['cat'])) {\r\n                                scModel.showSingleCategory(queryParams['cat']);\r\n                                $('a[data-category=\"' + queryParams['cat'] + '\"]').click()\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                forceSearchViewSC: function () {\r\n                    scModel.hideOverlay();\r\n                    scModel.set('taxonomyVisible', true);\r\n                    scModel.showCatalog();\r\n                },\r\n                toggleFavorite: function (e) {\r\n                    e.stopPropagation(); //cpntainer has click event, don't want that fired here.\r\n                    e.preventDefault();\r\n                    //get elmement and some data\r\n                    var elm = $(e.target);\r\n                    var roId = elm.data('request');\r\n\r\n                    $.ajax({\r\n                        type: 'POST',\r\n                        cache: false,\r\n                        url: '/SC/ServiceCatalog/ToggleFavorite',\r\n                        data: { requestOfferingId: roId, imageElementId: \"\" }\r\n                    }).done(function (data) {\r\n                        //console.log(data);\r\n                        if (data[0] === \"True\") {\r\n                            //update local datasource so the stars act normal.. [BUG1718]\r\n                            updateLocalDataItem();\r\n                            //flip flop the star classes\r\n                            elm.toggleClass('fa-star-o');\r\n                            elm.toggleClass('fa-star');\r\n                        }\r\n                        scModel.favROs.read();\r\n                    });\r\n\r\n                    function updateLocalDataItem() {\r\n                        roId = elm.data('request');\r\n\r\n                        //check parent ds\r\n                        _.each(scModel.dataSource.data(), function (cat) {\r\n                            _.each(cat.requestofferings, function (ro) {\r\n                                if (ro.RequestOfferingId == roId) {\r\n                                    ro.IsFavorite = !ro.IsFavorite;\r\n                                    scModel.dataSource.sync();\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                        //check top RO ds\r\n                        _.each(scModel.topROs.data(), function (ro) {\r\n                            if (ro.Id == roId) {\r\n                                ro.IsFavorite = !ro.IsFavorite;\r\n                                scModel.topROs.sync();\r\n                            }\r\n                        });\r\n                    };\r\n                },\r\n                showSingleService: function (e) {\r\n                    scModel.emptyOverlay();\r\n\r\n                    //allow passing in of servie id\r\n                    var serviceOfferingId = e;\r\n                    if (_.isObject(e)) {\r\n                        serviceOfferingId = $(e.target).data('service');\r\n                    }\r\n\r\n                    var categoryId = $(e.target).closest('ul').siblings('a').data('category');\r\n                    scModel.setNavFocus(categoryId, serviceOfferingId);\r\n\r\n                    items.filter({ field: \"ServiceOfferingId\", operator: \"equals\", value: serviceOfferingId });\r\n                    var singleSoOverlay = new kendo.View('cat-template', { model: scModel });\r\n                    layout.showIn(\"#catalog-area-overlay\", singleSoOverlay);\r\n                    scModel.showOverlay();\r\n                },\r\n                removeNavFocus: function() {\r\n                    //remove old focus\r\n                    _.each($('.so-link'), function (link) {\r\n                        $(link).removeClass('text-black');\r\n                    });\r\n                    _.each($('.cat-link'), function (link) {\r\n                        $(link).removeClass('text-black');\r\n                    });\r\n\r\n                },\r\n                setNavFocus: function (catId, serviceId) {\r\n                    scModel.removeNavFocus();\r\n                    if (!_.isNull(catId)) {\r\n                        $('.sc-nav-list').find('a[data-category=\"' + catId + '\"]').addClass('text-black');\r\n                    }\r\n                    if (!_.isNull(serviceId)) {\r\n                        $('.sc-nav-list').find('a[data-service=\"' + serviceId + '\"]').addClass('text-black');\r\n                    }\r\n                },\r\n                showSingleCategory: function (e) {\r\n                    //this allows us to pass id via arrguments\r\n                    var catId = e;\r\n                    if (_.isObject(e)) {\r\n                        catId = $(e.target).data('category');\r\n                    }\r\n                    scModel.setNavFocus(catId, null);\r\n                    scModel.folded.filter({ field: \"CategoryId\", operator: \"equals\", value: catId });\r\n                    var singleCat = new kendo.View('<div data-template=\"cat-mini-template-single\" data-bind=\"source: folded\"></div>', { model: scModel });\r\n                    scModel.emptyOverlay();\r\n                    layout.showIn(\"#catalog-area-overlay\", singleCat);\r\n                    scModel.showOverlay();\r\n                },\r\n                showSearchResultsInOverlay: function (data) {\r\n                    scModel.emptyOverlay();\r\n\r\n                    var overlayVm = kendo.observable({\r\n                        roResults: [],\r\n                        favResults: [],\r\n                        kaResults: [],\r\n                        searchText: data.searchString || \"\",\r\n                        totalResults: 0,\r\n                        sectionTitle: \"\",\r\n                        scope: data.scope,\r\n                        rawResults: data.results,\r\n                        returnToPage: function () {\r\n                            scModel.hideOverlay();\r\n                            app.events.publish('serviceCatalogBackToSearch');\r\n                        },\r\n                        openRequestOffering: scModel.openRequestOffering,\r\n                        toggleFavorite: scModel.toggleFavorite,\r\n                        forceSearch: scModel.forceSearch,\r\n                        forceSearchViewSC: scModel.forceSearchViewSC\r\n                    });\r\n\r\n                    overlayVm.hasSearchText = data.searchString ? true : false;\r\n                    _.each(overlayVm.rawResults, function (result) {\r\n                        var cleanedResult;\r\n                        if (result.Type == \"Favorite\" || result.Type == \"RequestOffering\") {\r\n                            cleanedResult = {\r\n                                RequestOfferingTitle: result.Title,\r\n                                RequestOfferingId: result.Id,\r\n                                ServiceOfferingId: result.ServiceOfferingId,\r\n                                IsFavorite: result.IsFavorite,\r\n                                RequestOfferingDescription: result.Description,\r\n                                RequestOfferingLinkUrl: result.RequestOfferingLinkUrl,\r\n                                RequestOfferingLinkTargetType: result.RequestOfferingLinkTargetType\r\n                            }\r\n                            if (result.Type == \"Favorite\") {\r\n                                overlayVm.favResults.push(cleanedResult);\r\n                            }\r\n                            if (result.Type == \"RequestOffering\") {\r\n                                overlayVm.roResults.push(cleanedResult);\r\n                            }\r\n                        }\r\n                        if (result.Type == \"KnowledgeArticle\") {\r\n                            cleanedResult = {\r\n                                Id: result.Id,\r\n                                Title: result.Title,\r\n                                Description: result.Description\r\n                            }\r\n                            overlayVm.kaResults.push(cleanedResult);\r\n                        }\r\n                    });\r\n\r\n                    switch (overlayVm.scope) {\r\n                        case \"AllResults\":\r\n                            showRoSearchResults();\r\n                            showFavSearchResults();\r\n                            showKaSearchResults();\r\n                            break;\r\n                        case \"RequestOffering\":\r\n                            showRoSearchResults();\r\n                            break;\r\n                        case \"Favorite\":\r\n                            showFavSearchResults();\r\n                            break;\r\n                        case \"KnowledgeArticle\":\r\n                            showKaSearchResults();\r\n                            break;\r\n                        default:\r\n                            return;\r\n                    }\r\n\r\n                    var viewTemplate =\r\n                        '<h4 class=\"strong\">' +\r\n                            '<a class=\"cursor-pointer\" data-bind=\"click: returnToPage\"><i class=\"fa fa-chevron-left\"></i> <span data-bind=\"localize: SearchButton\"></span></a>' +\r\n                            ' / ' +\r\n                            '<span data-bind=\"text: searchText\"></span> <span class=\"normal\">(<span data-bind=\"text: totalResults\"></span>)</span>' +\r\n                            '</h4>';\r\n                    var breadcrumbView = new kendo.View(viewTemplate, { model: overlayVm });\r\n                    layout.showIn(\"#breadcrumb-results-wrapper\", breadcrumbView);\r\n\r\n                    //don't really like this but a guys gotta do what a guys gotta do\r\n                    var footerView = new kendo.View('<button class=\"btn btn-primary k-button\" data-bind=\"localize: BrowseServiceCatalogButton, visible: forceSearch, click: forceSearchViewSC\"></button>', { model: overlayVm });\r\n                    layout.showIn(\"#footer-results-wrapper\", footerView );\r\n\r\n                    scModel.showOverlay();\r\n\r\n                    function showRoSearchResults() {\r\n                        if (overlayVm.roResults.length > 0) {\r\n                            overlayVm.totalResults += overlayVm.roResults.length;\r\n                            overlayVm.sectionTitle = localizationHelper.localize(\"MatchingRequestOfferings\");\r\n                            var roResults = new kendo.View('<h4 data-bind=\"text: sectionTitle\"></h4><div data-template=\"ro-template\" data-bind=\"source: roResults\"></div>', { model: overlayVm });\r\n                            layout.showIn(\"#ro-results-wrapper\", roResults);\r\n                        }\r\n                    }\r\n                    function showFavSearchResults() {\r\n                        if (overlayVm.favResults.length > 0) {\r\n                            overlayVm.totalResults += overlayVm.favResults.length;\r\n                            overlayVm.sectionTitle = localizationHelper.localize(\"MatchingFavorites\");\r\n                            var favResults = new kendo.View('<h4 data-bind=\"text: sectionTitle\"></h4><div data-template=\"ro-template\" data-bind=\"source: favResults\"></div>', { model: overlayVm });\r\n                            layout.showIn(\"#fav-results-wrapper\", favResults);\r\n                        }\r\n                    }\r\n                    function showKaSearchResults() {\r\n                        if (overlayVm.kaResults.length > 0) {\r\n                            overlayVm.totalResults += overlayVm.kaResults.length;\r\n                            overlayVm.sectionTitle = localizationHelper.localize(\"RelatedKnowledgeArticles\");\r\n                            var kaResults = new kendo.View('<h4 data-bind=\"text: sectionTitle\"></h4><div data-template=\"ka-results-template\" data-bind=\"source: kaResults\"></div>', { model: overlayVm });\r\n                            layout.showIn(\"#ka-results-wrapper\", kaResults);\r\n                        }\r\n                    }\r\n                },\r\n                showHome: function (e) {\r\n                    scModel.removeNavFocus();\r\n                    scModel.hideOverlay();\r\n                    e.preventDefault();\r\n                    scModel.folded.filter({});\r\n                    items.filter({});\r\n                    var resetCatalog = new kendo.View('<div data-template=\"cat-mini-template-all\" data-bind=\"source: folded\"></div>', { model: scModel });\r\n\r\n                    scModel.set(\"topsVisible\", true);\r\n                    scModel.set('homeBC', false);\r\n                    scModel.set('scLabel', localization.AllRequests);\r\n\r\n                    layout.showIn(\"#catalog-area\", resetCatalog);\r\n                },\r\n                showFullCatalog: function (e) {\r\n                    scModel.removeNavFocus();\r\n                    scModel.hideOverlay();\r\n                    e.preventDefault();\r\n                    scModel.folded.filter({});\r\n                    items.filter({});\r\n                    var resetCatalog = new kendo.View('<div data-template=\"cat-mini-template-all\" data-bind=\"source: folded\"></div>', { model: scModel });\r\n\r\n                    scModel.set(\"topsVisible\", false);\r\n                    scModel.set('homeBC', true);\r\n                    scModel.set('scLabel', localization.ServiceCatalog);\r\n\r\n                    layout.showIn(\"#catalog-area\", resetCatalog);\r\n                },\r\n                hideOverlay: function() {\r\n                    scModel.currentView = 'page';\r\n                    $('.overlay').hide({\r\n                        easing: \"easeInOutExpo\",\r\n                        duration: 500\r\n                    });\r\n                    $('#servicecat-content').show({\r\n                        easing: \"easeInOutExpo\",\r\n                        duration: 750\r\n                    });\r\n                },\r\n                showOverlay: function() {\r\n                    $('#servicecat-content').hide({\r\n                        easing: \"easeInOutExpo\",\r\n                        duration: 500\r\n                    });\r\n                    $('.overlay').show({\r\n                        easing: \"linear\",\r\n                        duration: 750\r\n                    });\r\n\r\n                },\r\n                emptyOverlay: function() {\r\n                    scModel.currentView = 'overlay';\r\n                    _.each($('.search-results-container').find('div'), function (divEle) {\r\n                        $(divEle).empty();\r\n                    });\r\n                }\r\n            });\r\n\r\n            //subscribe to events from the search\r\n            app.events.subscribe(\"serviceCatalogFilterFromSearch\", function (e, eventData) {\r\n                scModel.showSearchResultsInOverlay(eventData);\r\n            });\r\n\r\n            //show catalog when hidden by force search\r\n            app.events.subscribe(\"serviceCatalogShowCatalog\", function (e, elm) {\r\n                scModel.forceSearchViewSC();\r\n            });\r\n\r\n\r\n            //add the nav\r\n            var scContent = new kendo.View(\"base-nav-template\", { model: scModel });\r\n            layout.showIn(\"#servicecat-nav\", scContent);\r\n\r\n            //add top/favs to the layout\r\n            var catalog = new kendo.View('catalog-template', { model: scModel });\r\n            layout.showIn(\"#servicecat-content\", catalog);\r\n\r\n            //ad catalog to layout, establish this zone\r\n            var catalog = new kendo.View('<div data-template=\"cat-mini-template-all\" data-bind=\"source: folded\"></div>', { model: scModel });\r\n            //wait to show catalog until the ajax request comeback\r\n            //now lets display the catalog\r\n            layout.showIn(\"#catalog-area\", catalog);\r\n\r\n\r\n            //bind to top/fav data load to see if we should display\r\n            scModel.favROs.bind(\"change\", function (e) {\r\n                var data = this.data();\r\n                if (data.length > 0) {\r\n                    scModel.set(\"favRO\", true);\r\n                }\r\n                //set load for view reasons\r\n                scModel.set(\"favROLoaded\", true);\r\n                if (!session.forceSearch) {\r\n                    scModel.showCatalog();\r\n                }\r\n            });\r\n\r\n            scModel.topROs.bind(\"change\", function (e) {\r\n                var data = this.data();\r\n                if (data.length > 0) {\r\n                    scModel.set(\"topRO\", true);\r\n                }\r\n                //set load for view reasons\r\n                scModel.set(\"topROLoaded\", true);\r\n                if (!session.forceSearch) {\r\n                    scModel.showCatalog();\r\n                }\r\n            });\r\n\r\n\r\n            scModel.topKAs.bind(\"change\", function (e) {\r\n                var data = this.data();\r\n                if (data.length > 0) {\r\n                    scModel.set(\"topKA\", true);\r\n                }\r\n                //set load for view reasons\r\n                scModel.set(\"topKALoaded\", true);\r\n                if (!session.forceSearch) {\r\n                    scModel.showCatalog();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!viewPanels/alternateSC/view.html',[],function () { return '<div id=\"service-catalog\"></div>\\r\\n\\r\\n\\r\\n<!-- BASE STRUCTURE TEMPLATE -->\\r\\n<script type=\"text/x-kendo-template\" id=\"servicecatalog-template\">\\r\\n    <div class=\"service-catalog-content\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"col-md-12 service-request-body alt\">\\r\\n                <div id=\"servicecat-content\"></div>\\r\\n                <!-- OVERLAY TEMPLATE -->\\r\\n                <div class=\"overlay\">\\r\\n                    <div class=\"search-results-container\">\\r\\n                        <div class=\"row\" id=\"breadcrumb-results-wrapper\"></div>\\r\\n                        <div class=\"row sc-item-list\" id=\"ka-results-wrapper\"></div>\\r\\n                        <div class=\"row sc-item-list\" id=\"fav-results-wrapper\"></div>\\r\\n                        <div class=\"row sc-item-list\" id=\"ro-results-wrapper\"></div>\\r\\n                        <div class=\"row sc-item-list\" id=\"footer-results-wrapper\"></div>\\r\\n                        <div class=\"row\" id=\"catalog-area-overlay\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- MAIN CATALOG TEMPLATE-->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"catalog-template\">\\r\\n    <h3 data-bind=\"visible: loadingVisible, localize: Loading\"></h3>\\r\\n    <div class=\"catalog-content\">\\r\\n\\r\\n        <!-- FAVORITES/TOP LISTS-->\\r\\n        <div class=\"row blocks\" data-bind=\"visible:topsVisible\">\\r\\n            <div class=\"col-sm-4\">\\r\\n                <div class=\"block sc-item-list alt-top-list\" data-bind=\"visible: topKA\">\\r\\n                    <h4 class=\"block-title\" data-bind=\"localize: TopKnowledgeArticles\"></h4>\\r\\n\\r\\n                    <div data-template=\"top-ka\" data-bind=\"source: topKAs\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"col-sm-4\">\\r\\n                <div class=\"block sc-item-list alt-top-list\" data-bind=\"visible: favRO\">\\r\\n                    <h4 class=\"block-title\" data-bind=\"localize: FavoriteRequests\"></h4>\\r\\n\\r\\n                    <div data-template=\"topfav-request-offerings\" data-bind=\"source: favROs\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"col-sm-4\">\\r\\n                <div class=\"block sc-item-list alt-top-list\" data-bind=\"visible: topRO\">\\r\\n                    <h4 class=\"block-title\" data-bind=\"localize: TopRequests\"></h4>\\r\\n\\r\\n                    <div data-template=\"topfav-request-offerings\" data-bind=\"source: topROs\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- MAIN PAGE CATALOG-->\\r\\n        <div data-bind=\"visible: catalogVisible\">\\r\\n            <h3>\\r\\n                <span data-bind=\"text: scLabel\"></span>\\r\\n            </h3>\\r\\n            <div id=\"catalog-area\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- TOP/FAV RO TEMPLATES-->\\r\\n<script type=\"text/x-kendo-template\" id=\"topfav-request-offerings\">\\r\\n    <div class=\"media sc-top-item top-#:Title.replace(/ /g,\\'-\\').toLowerCase() #\">\\r\\n        #if(!_.isNull(LinkUrl)){#\\r\\n        <a class=\"pull-left media-link\" href=\"#:LinkUrl#\" target=\"#:LinkTargetType#\">\\r\\n            <img class=\"sc-top-item-image\" src=\"/ServiceCatalog/GetRequestOfferingImg/#:Id#\" onerror=\"this.onerror=null; this.src=\\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\">\\r\\n            <i class=\"\"></i>\\r\\n        </a>\\r\\n        <div class=\"media-body sc-top-item-body\">\\r\\n            <h5 class=\"media-heading\"><a href=\"#:LinkUrl#\" target=\"#:LinkTargetType#\"><span class=\"sc-top-item-title\" data-request=\"#:Id#\" data-bind=\"text: Title\"></span><small class=\"sc-top-item-desc\">#= BriefDescription != null ? BriefDescription :\\'\\' #</small></a></h5>\\r\\n        </div>\\r\\n        #} else {#\\r\\n        <a class=\"pull-left media-link\" href=\"/SC/ServiceCatalog/RequestOffering/#:Id#,#:ServiceInfo.Id#\">\\r\\n            <img class=\"sc-top-item-image\" src=\"/ServiceCatalog/GetRequestOfferingImg/#:Id#\" onerror=\"this.onerror=null; this.src=\\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\">\\r\\n            <i class=\"\"></i>\\r\\n        </a>\\r\\n        <div class=\"media-body sc-top-item-body\">\\r\\n            <h5 class=\"media-heading\"><a href=\"/SC/ServiceCatalog/RequestOffering/#:Id#,#:ServiceInfo.Id#\"><span class=\"sc-top-item-title\" data-request=\"#:Id#\" data-bind=\"text: Title\"></span><small class=\"sc-top-item-desc\">#= BriefDescription != null ? BriefDescription :\\'\\' #</small></a></h5>\\r\\n        </div>\\r\\n        # } #\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- TOP KA TEMPLATES-->\\r\\n<script type=\"text/x-kendo-template\" id=\"top-ka\">\\r\\n    <div class=\"media sc-top-item ka-#:Title.replace(/ /g,\\'-\\').toLowerCase() #\">\\r\\n        <a class=\"pull-left media-link\" href=\"/KnowledgeBase/View/#:ArticleId#\">\\r\\n            <img alt=\"image\" class=\"sc-top-item-image ka-icon\" src=\"/Content/Images/Icons/Drawer/kb-white.svg\">\\r\\n            <i class=\"\"></i>\\r\\n        </a>\\r\\n        <div class=\"media-body sc-top-item-body\">\\r\\n            <h5 class=\"media-heading\"><a href=\"/KnowledgeBase/View/#:ArticleId#\"><span class=\"sc-top-item-title\" data-bind=\"text: Title\"></span><small class =\"sc-top-item-desc\">#= Abstract != null ? Abstract :\\'\\' #</small></a></h5>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- ALT CAT TEMPLATE - All Categories -->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"cat-alt-template-all\">\\r\\n    <div class=\"cat cat-#:Category.replace(/ /g,\\'-\\').toLowerCase() #\">\\r\\n        <h4 id=\"#:CategoryId#\" data-bind=\"text: Category\"></h4>\\r\\n        <div class=\"row\">\\r\\n            # for (var i = 0; i < services.length; i++) { #\\r\\n            <div class=\"col-md-12\">\\r\\n                <h4 id=\"#:services[i].ServiceOfferingId#\" data-service=\"#:services[i].ServiceOfferingId#\">#: services[i].Service #</h4>\\r\\n                <div class=\"row sc-item-list\">\\r\\n                    # for (var j = 0; j < services[i].requestofferings.length; j++) { #\\r\\n                    <div id=\"#:services[i].requestofferings[j].RequestOfferingId#\" class=\"media sc-item ro-#:services[i].requestofferings[j].RequestOfferingTitle.replace(/ /g,\\'-\\').toLowerCase() #\" data-title=\"#:services[i].requestofferings[j].RequestOfferingTitle#\" data-desc=\"#:services[i].requestofferings[j].RequestOfferingDescription#\">\\r\\n                        <a class=\"pull-left media-link\">\\r\\n                            <img class=\"cursor-pointer sc-item-image\"\\r\\n                                 data-request-url=\"#:services[i].requestofferings[j].RequestOfferingLinkUrl#\"\\r\\n                                 data-request-target-type=\"#:services[i].requestofferings[j].RequestOfferingLinkTargetType#\"\\r\\n                                 data-request=\"#:services[i].requestofferings[j].RequestOfferingId#\"\\r\\n                                 data-service=\"#:services[i].ServiceOfferingId#\"\\r\\n                                 data-bind=\" click: openrequestoffering\"\\r\\n                                 src=\"/ServiceCatalog/GetRequestOfferingImg/#:services[i].requestofferings[j].RequestOfferingId#\"\\r\\n                                 onerror=\"this.onerror=null; this.src=\\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\">\\r\\n                            <i class=\"fa #= services[i].requestofferings[j].IsFavorite ? \\'fa-star\\' :\\'fa-star-o\\' #\"\\r\\n                               data-request=\"#:services[i].requestofferings[j].RequestOfferingId#\"\\r\\n                               data-bind=\"click: toggleFavorite\"></i>\\r\\n                        </a>\\r\\n                        <div class=\"media-body sc-item-body\">\\r\\n                            <h5 class=\"media-heading\">\\r\\n                                <a>\\r\\n                                    <span class=\"cursor-pointer sc-item-title\"\\r\\n                                          data-request-url=\"#:services[i].requestofferings[j].RequestOfferingLinkUrl#\"\\r\\n                                          data-request-target-type=\"#:services[i].requestofferings[j].RequestOfferingLinkTargetType#\"\\r\\n                                          data-request=\"#:services[i].requestofferings[j].RequestOfferingId#\"\\r\\n                                          data-service=\"#:services[i].ServiceOfferingId#\"\\r\\n                                          data-bind=\"click: openRequestOffering\">\\r\\n                                        #: services[i].requestofferings[j].RequestOfferingTitle#\\r\\n                                    </span>\\r\\n                                </a>\\r\\n                                <!-- for html encode-->\\r\\n                                <small class=\"sc-item-desc\">#: services[i].requestofferings[j].RequestOfferingDescription#</small>\\r\\n                            </h5>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    # } #\\r\\n                </div>\\r\\n            </div>\\r\\n            # } #\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"cat-alt-template-all-old\">\\r\\n    <div class=\"cat cat-#:Category.replace(/ /g,\\'-\\').toLowerCase() #\">\\r\\n        <h4 id=\"#:CategoryId#\" data-bind=\"text: Category\"></h4>\\r\\n        <div class=\"row\" data-template=\"so-alt-template\" data-bind=\"source: services\"></div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- ALT SO TEMPLATE-->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"so-alt-template\">\\r\\n    <div class=\"col-md-12\">\\r\\n        <h4 id=\"#:ServiceOfferingId#\" data-service=\"#:ServiceOfferingId#\">#:Service #</h4>\\r\\n        <div class=\"row sc-item-list\" data-service=\"#:ServiceOfferingId#\" data-template=\"ro-alt-template\" data-bind=\"source: requestofferings\"></div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- ALT OVERLAY TEMPLATE (needed this for correct position of SOid for link to work correctly)-->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"overlay-alt-template\">\\r\\n    <div class=\"col-md-12\">\\r\\n        <div class=\"row sc-item-list\" data-service=\"#:ServiceOfferingId#\" data-template=\"ro-alt-template\" data-bind=\"source: this\"></div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- ALT RO TEMPLATE-->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"ro-alt-template\">\\r\\n    <div id=\"#:RequestOfferingId#\" class=\"media sc-item ro-#:RequestOfferingTitle.replace(/ /g,\\'-\\').toLowerCase() #\" data-title=\"#:RequestOfferingTitle#\" data-desc=\"#:RequestOfferingDescription#\">\\r\\n        <a class=\"pull-left media-link\">\\r\\n            <img class=\"cursor-pointer sc-item-image\"\\r\\n                 data-request-url=\"#:RequestOfferingLinkUrl#\"\\r\\n                 data-request-target-type=\"#:RequestOfferingLinkTargetType#\"\\r\\n                 data-request=\"#:RequestOfferingId#\"\\r\\n                 data-bind=\"click: openRequestOffering\"\\r\\n                 src=\"/ServiceCatalog/GetRequestOfferingImg/#:RequestOfferingId#\"\\r\\n                 onerror=\"this.onerror=null; this.src=\\'/Content/Images/Icons/RequestOffering/RO_Default.png\\';\">\\r\\n            <i class=\"fa #= IsFavorite ? \\'fa-star\\' :\\'fa-star-o\\' #\"\\r\\n               data-request=\"#:RequestOfferingId#\"\\r\\n               data-bind=\"click: toggleFavorite\"></i>\\r\\n        </a>\\r\\n        <div class=\"media-body sc-item-body\">\\r\\n            <h5 class=\"media-heading\">\\r\\n                <a>\\r\\n                    <span class=\"cursor-pointer sc-item-title\"\\r\\n                          data-request-url=\"#:RequestOfferingLinkUrl#\"\\r\\n                          data-request-target-type=\"#:RequestOfferingLinkTargetType#\"\\r\\n                          data-request=\"#:RequestOfferingId#\"\\r\\n                          data-bind=\"click: openRequestOffering, text: RequestOfferingTitle\">\\r\\n                    </span>\\r\\n                </a>\\r\\n                <!-- for html encode-->\\r\\n                <small class=\"sc-item-desc\">#=RequestOfferingDescription#</small>\\r\\n            </h5>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<!-- OVERLAY TEMPLATES -->\\r\\n<!-- KA OVERLAY TEMPLATE -->\\r\\n<script type=\"text/x-kendo-tmpl\" id=\"ka-results-template\">\\r\\n\\r\\n    <div class=\"media sc-item ka-#:Title.replace(/ /g,\\'-\\').toLowerCase() #\" title=\"#:Title#\">\\r\\n\\r\\n        <a class=\"pull-left media-link\" href=\"/KnowledgeBase/View/#:Id#\">\\r\\n            <img alt=\"image\" class=\"ka-icon sc-item-image\" src=\"/Content/Images/Icons/Drawer/kb-white.svg\">\\r\\n            <i class=\"\"></i>\\r\\n        </a>\\r\\n        <div class=\"media-body sc-item-body\">\\r\\n            <h5 class=\"media-heading\"><a class=\"link\" href=\"/KnowledgeBase/View/#:Id#\"><span class=\"sc-item-title\" data-bind=\" text: Title\"></span><small class=\"sc-item-desc\" data-bind=\"text: Description\"></small></a></h5>\\r\\n        </div>\\r\\n    </div>\\r\\n</script>';});\n\n","/**\r\nserviceCatalog\r\n**/\r\ndefine('viewPanels/alternateSC/controller',['require','text!viewPanels/alternateSC/view.html'],function (require) {\r\n    var tpl = require(\"text!viewPanels/alternateSC/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var built = _.template(tpl);\r\n            var templateFrag = $(built(node));\r\n\r\n            //add html and templates to the dom\r\n            callback(templateFrag);\r\n\r\n            //create a layout location\r\n            layout = new kendo.Layout(\"servicecatalog-template\");\r\n            layout.render($('#service-catalog'));\r\n\r\n            //setup the catalog data source\r\n            //var items = new kendo.data.DataSource({\r\n            //    schema: {\r\n            //        data: \"Data\",\r\n            //        model: { id: \"CategoryId\" }\r\n            //    },\r\n            //    transport: { read: { url: \"/ServiceCatalog/GetServiceCatalogWithSOGroup\", dataType: \"json\" } }\r\n            //});\r\n\r\n            //setup the catalog viem model\r\n            var scModel = kendo.observable({\r\n                homeBC: false,\r\n                scLabel: localization.AllRequests,\r\n                favRO: false,\r\n                topRO: false,\r\n                topKA: false,\r\n                favROLoaded: false,\r\n                topROLoaded: false,\r\n                topKALoaded: false,\r\n                topsVisible: false,\r\n                catalogVisible: false,\r\n                loadingVisible: !session.forceSearch,\r\n                forceSearch: session.forceSearch,\r\n                //dataSource: items,\r\n                currentView: 'page',\r\n                folded: new kendo.data.DataSource({   //setup mini catalog data source\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        model: { id: \"CategoryId\" }\r\n                    },\r\n                    transport: { read: { url: \"/ServiceCatalog/GetServiceCatalogWithCatGroup\", dataType: \"json\", cache: false } }\r\n                }),\r\n                favROs: new kendo.data.DataSource({ //setup fav RO data source\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        model: { id: \"Id\" }\r\n                    },\r\n                    transport: { read: { url: \"/ServiceCatalog/GetFavoriteRequestOffering\", dataType: \"json\", cache: false } }\r\n                }),\r\n                topROs: new kendo.data.DataSource({ //setup Top RO data source\r\n                    schema: {\r\n                        data: \"Data\",\r\n                        model: { id: \"Id\" }\r\n                    },\r\n                    transport: { read: { url: \"/ServiceCatalog/GetTopRequestOffering\", dataType: \"json\", cache: false } }\r\n                }),\r\n                topKAs: new kendo.data.DataSource({ //setup the top KA data source\r\n                    schema: {\r\n                        model: { id: \"ArticleId\" }\r\n                    },\r\n                    transport: { read: { url: \"/api/v3/Article/GetTopArticlesByPopularity\", data: { count: 10 }, dataType: \"json\", cache: false } }\r\n                }),\r\n                openRequestOffering: function (e) {\r\n                    e.preventDefault();\r\n\r\n                    var elm = $(e.target);\r\n\r\n                    var roId = elm.data('request');\r\n                    var serId;\r\n                    if (elm.is(\"[data-service]\")) {\r\n                        serId = elm.data('service');//crawl up and get service request id\r\n                    } else {\r\n                        serId = elm.closest('[data-service]').data('service');//crawl up and get service request id\r\n                    }\r\n\r\n                    var roLink = elm.data('request-url');\r\n                    var roLinkType = elm.data('request-target-type');\r\n\r\n                    //if direct link for ro is present, use it\r\n                    if (!_.isNull(roLink) && roLink != \"\") {\r\n                        window.open(roLink, roLinkType);\r\n                    } else {\r\n                        window.location = \"/SC/ServiceCatalog/RequestOffering/\" + roId + \",\" + serId;\r\n                    }\r\n                },\r\n                showCatalog: function() {\r\n                    if (this.get(\"topKALoaded\") && this.get(\"topROLoaded\") && this.get(\"favROLoaded\")) {\r\n                        this.set(\"topsVisible\", true);\r\n                        this.set(\"catalogVisible\", true);\r\n                        this.set(\"loadingVisible\", false);\r\n\r\n                        //look for anchor/location link\r\n                        if (app.lib.getQueryParams() && !session.forceSearch) {\r\n                            var queryParams = app.lib.getQueryParams();\r\n                            \r\n                            //make sure we have an id\r\n                            var skipTo = false;\r\n                            switch (true) {\r\n                                case (_.isString(queryParams['cat'])):\r\n                                    skipTo = queryParams['cat'];\r\n                                    break;\r\n                                case (_.isString(queryParams['so'])):\r\n                                    skipTo = queryParams['so'];\r\n                                    break;\r\n                                case (_.isString(queryParams['ro'])):\r\n                                    skipTo = queryParams['ro'];\r\n                                    break;\r\n                            }\r\n                            \r\n                            if (skipTo) {\r\n                                _.defer(function () {\r\n                                    $('html, body').animate({\r\n                                        scrollTop: $(\"#\" + skipTo).offset().top - $(\".navbar-fixed-top\").height()\r\n                                    }, 100);\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                toggleFavorite: function (e) {\r\n                    e.stopPropagation(); //cpntainer has click event, don't want that fired here.\r\n                    e.preventDefault();\r\n                    //get elmement and some data\r\n                    var elm = $(e.target);\r\n                    var roId = elm.data('request');\r\n\r\n                    $.ajax({\r\n                        type: 'POST',\r\n                        cache: false,\r\n                        url: '/SC/ServiceCatalog/ToggleFavorite',\r\n                        data: { requestOfferingId: roId, imageElementId: \"\" }\r\n                    }).done(function (data) {\r\n                        //console.log(data);\r\n                        if (data[0] === \"True\") {\r\n                            //update local datasource so the stars act normal.. [BUG1718]\r\n                            updateLocalDataItem();\r\n                            //flip flop the star classes\r\n                            elm.toggleClass('fa-star-o');\r\n                            elm.toggleClass('fa-star');\r\n                        }\r\n                        scModel.favROs.read();\r\n                    });\r\n\r\n                    function updateLocalDataItem() {\r\n                        roId = elm.data('request');\r\n\r\n                        //check parent ds\r\n                        //_.each(scModel.dataSource.data(), function (cat) {\r\n                        //    _.each(cat.requestofferings, function (ro) {\r\n                        //        if (ro.RequestOfferingId == roId) {\r\n                        //            ro.IsFavorite = !ro.IsFavorite;\r\n                        //            scModel.dataSource.sync();\r\n                        //        }\r\n                        //    });\r\n                        //});\r\n\r\n                        //check top RO ds\r\n                        _.each(scModel.topROs.data(), function (ro) {\r\n                            if (ro.Id == roId) {\r\n                                ro.IsFavorite = !ro.IsFavorite;\r\n                                scModel.topROs.sync();\r\n                            }\r\n                        });\r\n                    };\r\n                },\r\n                forceSearchViewSC: function () {\r\n                    scModel.hideOverlay();\r\n                    scModel.showCatalog();\r\n                },\r\n                showSearchResultsInOverlay: function (data) {\r\n                    scModel.emptyOverlay();\r\n\r\n                    var overlayVm = kendo.observable({\r\n                        roResults: [],\r\n                        favResults: [],\r\n                        kaResults: [],\r\n                        searchText: data.searchString || \"\",\r\n                        totalResults: 0,\r\n                        sectionTitle: \"\",\r\n                        scope: data.scope,\r\n                        rawResults: data.results,\r\n                        returnToPage: function () {\r\n                            scModel.hideOverlay();\r\n                            app.events.publish('serviceCatalogBackToSearch');\r\n                        },\r\n                        openRequestOffering: scModel.openRequestOffering,\r\n                        toggleFavorite: scModel.toggleFavorite,\r\n                        forceSearch: scModel.forceSearch,\r\n                        forceSearchViewSC: scModel.forceSearchViewSC\r\n                    });\r\n\r\n                    overlayVm.hasSearchText = data.searchString ? true : false;\r\n                    _.each(overlayVm.rawResults, function (result) {\r\n                        var cleanedResult;\r\n                        if (result.Type == \"Favorite\" || result.Type == \"RequestOffering\") {\r\n                            cleanedResult = {\r\n                                RequestOfferingTitle: result.Title,\r\n                                RequestOfferingId: result.Id,\r\n                                ServiceOfferingId: result.ServiceOfferingId,\r\n                                IsFavorite: result.IsFavorite,\r\n                                RequestOfferingDescription: result.Description,\r\n                                RequestOfferingLinkUrl: result.RequestOfferingLinkUrl,\r\n                                RequestOfferingLinkTargetType: result.RequestOfferingLinkTargetType\r\n                            }\r\n                            if (result.Type == \"Favorite\") {\r\n                                overlayVm.favResults.push(cleanedResult);\r\n                            }\r\n                            if (result.Type == \"RequestOffering\") {\r\n                                overlayVm.roResults.push(cleanedResult);\r\n                            }\r\n                        }\r\n                        if (result.Type == \"KnowledgeArticle\") {\r\n                            cleanedResult = {\r\n                                Id: result.Id,\r\n                                Title: result.Title,\r\n                                Description: result.Description\r\n                            }\r\n                            overlayVm.kaResults.push(cleanedResult);\r\n                        }\r\n                    });\r\n\r\n                    switch (overlayVm.scope) {\r\n                        case \"AllResults\":\r\n                            showRoSearchResults();\r\n                            showFavSearchResults();\r\n                            showKaSearchResults();\r\n                            break;\r\n                        case \"RequestOffering\":\r\n                            showRoSearchResults();\r\n                            break;\r\n                        case \"Favorite\":\r\n                            showFavSearchResults();\r\n                            break;\r\n                        case \"KnowledgeArticle\":\r\n                            showKaSearchResults();\r\n                            break;\r\n                        default:\r\n                            return;\r\n                    }\r\n\r\n                    var viewTemplate =\r\n                        '<h4 class=\"strong\">' +\r\n                            '<a class=\"cursor-pointer\" data-bind=\"click: returnToPage\"><i class=\"fa fa-chevron-left\"></i> <span data-bind=\"localize: SearchButton\"></span></a>' +\r\n                            ' / ' +\r\n                            '<span data-bind=\"text: searchText\"></span> <span class=\"normal\">(<span data-bind=\"text: totalResults\"></span>)</span>' +\r\n                            '</h4>';\r\n                    var breadcrumbView = new kendo.View(viewTemplate, { model: overlayVm });\r\n                    layout.showIn(\"#breadcrumb-results-wrapper\", breadcrumbView);\r\n\r\n                    //don't really like this but a guys gotta do what a guys gotta do\r\n                    var footerView = new kendo.View('<button class=\"btn btn-primary k-button\" data-bind=\"localize: BrowseServiceCatalogButton, visible: forceSearch, click: forceSearchViewSC\"></button>', { model: overlayVm });\r\n                    layout.showIn(\"#footer-results-wrapper\", footerView);\r\n\r\n\r\n                    scModel.showOverlay();\r\n\r\n                    function showRoSearchResults() {\r\n                        if (overlayVm.roResults.length > 0) {\r\n                            overlayVm.totalResults += overlayVm.roResults.length;\r\n                            overlayVm.sectionTitle = localizationHelper.localize(\"MatchingRequestOfferings\");\r\n                            var roResults = new kendo.View('<h4 data-bind=\"text: sectionTitle\"></h4><div data-template=\"overlay-alt-template\" data-bind=\"source: roResults\"></div>', { model: overlayVm });\r\n                            layout.showIn(\"#ro-results-wrapper\", roResults);\r\n                        }\r\n                    }\r\n                    function showFavSearchResults() {\r\n                        if (overlayVm.favResults.length > 0) {\r\n                            overlayVm.totalResults += overlayVm.favResults.length;\r\n                            overlayVm.sectionTitle = localizationHelper.localize(\"MatchingFavorites\");\r\n                            var favResults = new kendo.View('<h4 data-bind=\"text: sectionTitle\"></h4><div data-template=\"overlay-alt-template\" data-bind=\"source: favResults\"></div>', { model: overlayVm });\r\n                            layout.showIn(\"#fav-results-wrapper\", favResults);\r\n                        }\r\n                    }\r\n                    function showKaSearchResults() {\r\n                        if (overlayVm.kaResults.length > 0) {\r\n                            overlayVm.totalResults += overlayVm.kaResults.length;\r\n                            overlayVm.sectionTitle = localizationHelper.localize(\"RelatedKnowledgeArticles\");\r\n                            var kaResults = new kendo.View('<h4 data-bind=\"text: sectionTitle\"></h4><div data-template=\"ka-results-template\" data-bind=\"source: kaResults\"></div>', { model: overlayVm });\r\n                            layout.showIn(\"#ka-results-wrapper\", kaResults);\r\n                        }\r\n                    }\r\n                },\r\n                showHome: function (e) {\r\n                    scModel.removeNavFocus();\r\n                    scModel.hideOverlay();\r\n                    e.preventDefault();\r\n                    scModel.folded.filter({});\r\n                    items.filter({});\r\n                    var resetCatalog = new kendo.View('<div data-template=\"cat-alt-template-all\" data-bind=\"source: folded\"></div>', { model: scModel });\r\n\r\n                    scModel.set(\"topsVisible\", true);\r\n                    scModel.set('homeBC', false);\r\n                    scModel.set('scLabel', localization.AllRequests);\r\n\r\n                    layout.showIn(\"#catalog-area\", resetCatalog);\r\n                },\r\n                showFullCatalog: function (e) {\r\n                    scModel.removeNavFocus();\r\n                    scModel.hideOverlay();\r\n                    e.preventDefault();\r\n                    scModel.folded.filter({});\r\n                    items.filter({});\r\n                    var resetCatalog = new kendo.View('<div data-template=\"cat-alt-template-all\" data-bind=\"source: folded\"></div>', { model: scModel });\r\n\r\n                    scModel.set(\"topsVisible\", false);\r\n                    scModel.set('homeBC', true);\r\n                    scModel.set('scLabel', localization.ServiceCatalog);\r\n\r\n                    layout.showIn(\"#catalog-area\", resetCatalog);\r\n                },\r\n                hideOverlay: function() {\r\n                    scModel.currentView = 'page';\r\n                    $('.overlay').hide({\r\n                        easing: \"easeInOutExpo\",\r\n                        duration: 500\r\n                    });\r\n                    $('#servicecat-content').show({\r\n                        easing: \"easeInOutExpo\",\r\n                        duration: 750\r\n                    });\r\n                },\r\n                showOverlay: function() {\r\n                    $('#servicecat-content').hide({\r\n                        easing: \"easeInOutExpo\",\r\n                        duration: 500\r\n                    });\r\n                    $('.overlay').show({\r\n                        easing: \"linear\",\r\n                        duration: 750\r\n                    });\r\n                },\r\n                emptyOverlay: function() {\r\n                    scModel.currentView = 'overlay';\r\n                    _.each($('.search-results-container').find('div'), function (divEle) {\r\n                        $(divEle).empty();\r\n                    });\r\n                }\r\n            });\r\n\r\n            //subscribe to events from the search\r\n            app.events.subscribe(\"serviceCatalogFilterFromSearch\", function (e, eventData) {\r\n                scModel.showSearchResultsInOverlay(eventData);\r\n            });\r\n\r\n            //show catalog when hidden by force search\r\n            app.events.subscribe(\"serviceCatalogShowCatalog\", function (e, elm) {\r\n                scModel.forceSearchViewSC();\r\n            });\r\n\r\n            //add top/favs to the layout\r\n            var catalog = new kendo.View('catalog-template', { model: scModel });\r\n            layout.showIn(\"#servicecat-content\", catalog);\r\n\r\n            //ad catalog to layout, establish this zone\r\n            var catalog = new kendo.View('<div data-template=\"cat-alt-template-all\" data-bind=\"source: folded\"></div>', { model: scModel });\r\n            //wait to show catalog until the ajax request comeback\r\n            //now lets display the catalog\r\n            layout.showIn(\"#catalog-area\", catalog);\r\n\r\n\r\n            //bind to top/fav data load to see if we should display\r\n            scModel.favROs.bind(\"change\", function (e) {\r\n                var data = this.data();\r\n                if (data.length > 0) {\r\n                    scModel.set(\"favRO\", true);\r\n                }\r\n                //set load for view reasons\r\n                scModel.set(\"favROLoaded\", true);\r\n                if (!session.forceSearch) {\r\n                    scModel.showCatalog();\r\n                }\r\n            });\r\n\r\n            scModel.topROs.bind(\"change\", function (e) {\r\n                var data = this.data();\r\n                if (data.length > 0) {\r\n                    scModel.set(\"topRO\", true);\r\n                }\r\n                //set load for view reasons\r\n                scModel.set(\"topROLoaded\", true);\r\n                if (!session.forceSearch) {\r\n                    scModel.showCatalog();\r\n                }\r\n            });\r\n\r\n\r\n            scModel.topKAs.bind(\"change\", function (e) {\r\n                var data = this.data();\r\n                if (data.length > 0) {\r\n                    scModel.set(\"topKA\", true);\r\n                }\r\n                //set load for view reasons\r\n                scModel.set(\"topKALoaded\", true);\r\n                if (!session.forceSearch) {\r\n                    scModel.showCatalog();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nDefault Grid Configuration settings\r\n**/\r\ndefine('grids/structure/defaultConfiguration/controller',['require'],function (require) {\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n\r\n            var defaultConfig = {\r\n                autoBind: false,\r\n                columnResizeHandleWidth: 4\r\n            };\r\n            \r\n            //set up defaults for settings that were not defined\r\n            if (!_.isUndefined(vm.grid.options)) {\r\n                var opts = vm.grid.options;\r\n                //reorderable\r\n                if (_.isUndefined(opts.reorderable)) {\r\n                    defaultConfig.reorderable = true;\r\n                }\r\n                //scrollable\r\n                if (_.isUndefined(opts.scrollable)) {\r\n                    defaultConfig.scrollable = true;\r\n                }\r\n                //selectable\r\n                if (_.isUndefined(opts.selectable)) {\r\n                    defaultConfig.selectable = \"Single, Row\";\r\n                }\r\n                //resizable\r\n                if (_.isUndefined(opts.resizable)) {\r\n                    defaultConfig.resizable = true;\r\n                }\r\n                //pageable\r\n                if (_.isUndefined(opts.pageable)) {\r\n                    defaultConfig.pageable = {\r\n                        pageSizes: [10, 20, 50, 100],\r\n                        pageSize: 20,\r\n                        buttonCount: 10,\r\n                        messages: {\r\n                            \r\n                            empty: localization.Empty,\r\n                            of: localization.Of,\r\n                            first: localization.First,\r\n                            previous: localization.Previous,\r\n                            next: localization.Next,\r\n                            last: localization.Last,\r\n                            itemsPerPage: localization.ItemsPerPage\r\n                        }\r\n                    };\r\n                }\r\n                //filterable\r\n                \r\n                if (_.isUndefined(opts.filterable) || opts.filterable == true) {\r\n                    defaultConfig.filterable = {\r\n                        extra: true,\r\n                        messages: {\r\n                            info: localization.Showitemswithvaluethat,\r\n                            and: localization.And,\r\n                            or: localization.Or,\r\n                            filter: localization.Filter,\r\n                            clear: localization.Clear\r\n                        },\r\n                        operators: {\r\n                            string: {\r\n                                eq: localizationHelper.localize(\"Isequalto\"),\r\n                                neq: localizationHelper.localize(\"Isnotequalto\"),\r\n                                contains: localizationHelper.localize(\"Contains\"),\r\n                                doesnotcontain: localizationHelper.localize(\"DoesNotContain\"),\r\n                                startswith: localizationHelper.localize(\"Startswith\"),\r\n                                endswith: localizationHelper.localize(\"Endswith\"),\r\n                            },\r\n                            number: {\r\n                                eq: localizationHelper.localize(\"Isequalto\"),\r\n                                neq: localizationHelper.localize(\"Isnotequalto\"),\r\n                                gt: localizationHelper.localize(\"GreaterThan\"),\r\n                                gte: localizationHelper.localize(\"GreaterOrEqual\"),\r\n                                lt: localizationHelper.localize(\"LessThan\"),\r\n                                lte: localizationHelper.localize(\"LessOrEqual\"),\r\n                            },\r\n                            \"SLOStatus\": {\r\n                                contains: localization.Contains\r\n                            },\r\n                            anchor: {\r\n                                eq: localizationHelper.localize(\"Isequalto\"),\r\n                                neq: localizationHelper.localize(\"Isnotequalto\"),\r\n                                contains: localizationHelper.localize(\"Contains\"),\r\n                                doesnotcontain: localizationHelper.localize(\"DoesNotContain\"),\r\n                                startswith: localizationHelper.localize(\"Startswith\"),\r\n                                endswith: localizationHelper.localize(\"Endswith\"),\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n                //groupable\r\n                if (_.isUndefined(opts.groupable)) {\r\n                    defaultConfig.groupable = {\r\n                        messages: {\r\n                            empty: localization.Dragacolumnheader\r\n                        }\r\n                    };\r\n                }\r\n                //sortable\r\n                if (_.isUndefined(opts.sortable)) {\r\n                    defaultConfig.sortable = {\r\n                        mode: \"multiple\"\r\n                    };\r\n                }\r\n                //columnMenu\r\n                if (_.isUndefined(opts.columnMenu)) {\r\n                    defaultConfig.columnMenu = {\r\n                        sortable: true,\r\n                        filterable: true,\r\n                        columns: true,\r\n                        messages: {\r\n                            columns: localization.ChooseColumns,\r\n                            filter: localization.Filter,\r\n                            sortAscending: localization.SortAscending,\r\n                            sortDescending: localization.SortDescending\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            \r\n            if (node) {\r\n                $.extend(true, node, defaultConfig);\r\n            } else {\r\n                node = defaultConfig;\r\n            }\r\n            if (node.editable) {\r\n                node.selectable = false;\r\n            }\r\n            vm.grid.options = node;\r\n            callback(node);\r\n        }\r\n    }\r\n    return definition;\r\n});\r\n\n","/**\r\nGrid Events\r\n**/\r\ndefine('grids/structure/events/controller',['require'],function (require) {\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n            vm.events = {\r\n                handleRowClick: function (selected, myGrid) {\r\n                    var fwdLocation = false;\r\n                    //get grid row data type\r\n                    var gridRow = myGrid.dataItem(selected);\r\n                    var objectId = gridRow.Id;\r\n                    var type;\r\n                    /*\r\n                     * FOR ASSET MANAGEMENT\r\n                     * you will be able to extend the if/else below to allow you to get the asset type from the grid row\r\n                     * If you check to see if gridRow.WhateverType exists and it does, we can know it is coming from an asset grid\r\n                     * \r\n                     * The final else currently just catched anything we haven't coded for and shows an error.\r\n                     */\r\n                    //determines type which is used to determine forwarding location and ids needed\r\n                    if (!_.isUndefined(gridRow.WorkItemType)) {\r\n                        type = gridRow.WorkItemType;\r\n                        if (gridRow.WorkItemType == \"Activity\") {\r\n                            type = gridRow.WorkItemTypeClass;\r\n                        }\r\n                    } else {\r\n                        if (vm.grid.GridType == \"ConfigItem\") {\r\n                            //no forwarding on config items, show popup details instead\r\n                            vm.events.openModal(gridRow);\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"WarrantyContract\") {\r\n                            location = \"/AssetManagement/Contract/Warranty/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"LeaseContract\") {\r\n                            location = \"/AssetManagement/Contract/Lease/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"SupportAndMaintenanceContract\") {\r\n                            location = \"/AssetManagement/Contract/SupportandMaintenance/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"HardwareAsset\") {\r\n                            location = \"/AssetManagement/HardwareAsset/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"RequestOffering\") {\r\n                            location = \"/ServiceCatalog/RequestOffering/\" + gridRow.Id + ',' + gridRow.ServiceInfo.Id;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"KnowledgeArticle\") {\r\n                            location = \"/KnowledgeBase/View/\" + gridRow.ArticleId + '?seletedTab=enduser';\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"CostCenter\") {\r\n                            location = \"/AssetManagement/Administration/CostCenter/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"Location\") {\r\n                            location = \"/AssetManagement/Administration/Location/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"NoticeEvent\") {\r\n                            location = \"/AssetManagement/Administration/NoticeEvent/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"Organization\") {\r\n                            location = \"/AssetManagement/Administration/Organization/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"Standard\") {\r\n                            location = \"/AssetManagement/Administration/Standard/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"Subnet\") {\r\n                            location = \"/AssetManagement/Administration/Subnet/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"Vendor\") {\r\n                            location = \"/AssetManagement/Administration/Vendor/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"CatalogItem\") {\r\n                            location = \"/AssetManagement/Administration/CatalogItem/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"License\" || vm.grid.GridType == \"Licence\") {\r\n                            location = \"/AssetManagement/Administration/License/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"SoftwareAsset\") {\r\n                            location = \"/AssetManagement/SoftwareAsset/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"PurchaseOrder\") {\r\n                            location = \"/AssetManagement/Administration/PurchaseOrder/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"Purchase\") {\r\n                            location = \"/AssetManagement/Administration/Purchase/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"Invoice\") {\r\n                            location = \"/AssetManagement/Administration/Invoice/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"Consumable\") {\r\n                            location = \"/AssetManagement/Administration/Consumables/Edit/\" + gridRow.BaseId;\r\n                            return;\r\n                        }else if (vm.grid.GridType == \"Announcement\") {\r\n                            location = \"/Administration/Announcement/Edit/\" + gridRow.Id;\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"PromotedView\") {\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"Localization\") {\r\n                            return;\r\n                        } else if (vm.grid.GridType == \"EditableKnowledgeArticle\") {\r\n                            location = \"/KnowledgeBase/View/\" + gridRow.ArticleId;\r\n                            return;\r\n                        } else {\r\n                            kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.ErrorDescription,\r\n                                icon: \"fa fa-frown-o\",\r\n                                message: 'Error in row click event. Record Type was not found.' //TODO: localize me?\r\n                            });\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    /*\r\n                    * <fancy> way of checking to see if we have this in the grid def:\r\n                    * \r\n                    rowClicks : [{          <-First make sure we have the array and at least 1 items in it\r\n                        \"Incident\" : {      <-Look at all the items and see if there is a key that matches out data type\r\n                            . . . \r\n                        }\r\n                    }]\r\n\r\n                    * If we have a match, use custom definitions, otherwise, use default\r\n                    */\r\n                    var clickDefinitions;\r\n                    var useDefaultRowClick = true;\r\n\r\n                    if (!_.isUndefined(node)) {\r\n                        _.find(node, function (event) {\r\n                            clickDefinitions = event.rowClicks;\r\n\r\n                            useDefaultRowClick = !(clickDefinitions.length > 0 && _.find(clickDefinitions, function (clickDef) {\r\n                                return _.keys(clickDef)[0] === type.split('.').pop();\r\n                            }));\r\n                        });\r\n                    }\r\n                    /*\r\n                     * </fancy>\r\n                     */\r\n\r\n                    if (useDefaultRowClick) {\r\n                        setDefaultRoute(type);\r\n                    } else {\r\n                        var rowClickDefinition = _.find(node, function (event) { return !_.isUndefined(event.rowClick); });\r\n                        _.each(clickDefinitions, function (rowClick) {\r\n\r\n                            var targetType = _.keys(rowClick)[0];\r\n\r\n                            if (type.split('.').pop() == targetType) {\r\n\r\n                                if (!_.isUndefined(rowClick[targetType].actionUrl)) {\r\n                                    fwdLocation = rowClick[targetType].actionUrl + objectId + \"/\";\r\n                                }\r\n\r\n                                var customFunction = app.lib.getFunctionFromString(rowClick[targetType].actionFunction);\r\n                                if (!_.isUndefined(customFunction)) {\r\n                                    try {\r\n                                        //custom defined function should return the url to forward \r\n                                        //-or- return false if they are handling the forward location in the function\r\n                                        fwdLocation = customFunction(gridRow, myGrid, fwdLocation);\r\n                                        //in case we get something other than string or false back from customFunction\r\n                                        if (!_.isString(fwdLocation)) {\r\n                                            fwdLocation = false;\r\n                                        }\r\n\r\n                                    } catch (e) {\r\n                                        return kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.ErrorDescription,\r\n                                            icon: \"fa fa-frown-o\",\r\n                                            message: \"Custom function error:    \" + e\r\n                                        });\r\n                                    }\r\n                                } else {\r\n                                    setDefaultRoute(type);\r\n                                }\r\n\r\n                            }\r\n                        }); // end _.each\r\n                    } // end custom\r\n\r\n\r\n                    /*\r\n                     * FOR ASSET MANAGEMENT\r\n                     * similar to above, check whatever your data type is and put some more \r\n                     * if blocks in here to do what you need to for routes.\r\n                     */\r\n                    function setDefaultRoute(itemType) {\r\n                        //default forward location definitions for all current grids.\r\n                        if (gridRow.WorkItemType == \"Activity\") {\r\n                            $.get(\"/grid/GetActivityParentWorkItem\", { id: gridRow.BaseId }, function (data) {\r\n                                gridRow.ParentWorkItemType = data.ParentWorkItemType;\r\n                                gridRow.ParentWorkItemId = data.ParentWorkItemId;\r\n                                getActivityParentWorkItem(itemType);\r\n                                window.location = fwdLocation;\r\n                            });\r\n                        } else {\r\n                            getActivityParentWorkItem(itemType);\r\n                        }\r\n                    }\r\n\r\n                    function getActivityParentWorkItem(itemType) {\r\n\r\n                        if (itemType.indexOf(\"System.WorkItem\") > -1) {\r\n                            //It is a work Item\r\n                            fwdLocation = '/' + itemType.split('.').pop() + '/Edit/' + objectId + '/';\r\n\r\n                            if (itemType.indexOf(\"Activity\") > -1) {\r\n                                //if it is from my work->approval page, redirect to RA approval form\r\n                                if (!_.isUndefined(vm.grid.GridSubType)) {\r\n                                    var approvalUrl = \"\";\r\n                                    switch (vm.grid.GridSubType) {\r\n                                        case \"myapprovals\":\r\n                                            approvalUrl = \"/ReviewActivity/Approval/\" + objectId;\r\n                                            break;\r\n                                        case \"myapprovals\":\r\n                                            approvalUrl = \"/ManualActivity/Complete/\" + objectId;\r\n                                            break;\r\n                                        default:\r\n                                            approvalUrl = \"/Activity/Edit/\" + objectId;\r\n                                            break;\r\n                                    }\r\n                                    fwdLocation = approvalUrl;\r\n                                } else {\r\n                                    //It is a work item activity\r\n                                    fwdLocation = '/Activity/Edit/' + objectId;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (fwdLocation) {\r\n                        //give the user some idea that something is loading\r\n                        $(\"body\").css(\"cursor\", \"progress\");\r\n                        if (vm.fromQueryBuilder && !vm.isSavedQuery) {\r\n                            //fallback for ie which does not support origin\r\n                            if (!window.location.origin) {\r\n                                window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '');\r\n                            }\r\n                            //open in new tab\r\n                            window.open(window.location.origin + fwdLocation, '_blank');\r\n                        } else {\r\n                            window.location = fwdLocation;\r\n                        }\r\n                    }\r\n                },\r\n                //this is used on the config items grid\r\n                openModal: function (selectedRowItem) {\r\n                    var detailsPopupEle = $(\"<div>\");\r\n                    detailsPopupEle.appendTo(\"body\");\r\n\r\n                    var detailsPopup = detailsPopupEle.kendoCiresonWindow({\r\n                        title: \"\",\r\n                        width: 550,\r\n                        height: 500,\r\n                        actions: [\"Close\"]\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    detailsPopup.refresh({\r\n                        url: \"/Search/ObjectViewer\",\r\n                        data: { id: selectedRowItem.Id }\r\n                    });\r\n                    detailsPopupEle.find(\".k-content\").html(\"<div style='padding: 55px'>Loading...</div>\");\r\n                    detailsPopup.title(selectedRowItem.DisplayName).center().open();\r\n                },\r\n                //called on edit and new events on editable grids\r\n            };\r\n\r\n\r\n            //events tied to kendo grid (not the kendo datasource)\r\n            vm.builtinEvents = {\r\n                edit: function (e) { //called on edit and new events on grid\r\n                    if (!e.model.isNew()) {\r\n                        if ($(e.container).data('editable') == false) {\r\n                            $(e.container).find('input').attr(\"disabled\", \"disabled\").addClass(\"k-state-disabled\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            callback();\r\n        }\r\n    }\r\n    return definition;\r\n});\r\n\n","\ndefine('text!grids/structure/toolbar/view.html',[],function () { return '<script type=\"text/x-kendo-template\" id=\"toolbarTemplate\">\\r\\n    <div class=\"pull-right\">\\r\\n        <label for=\"locale\" class=\"control-label\">\\r\\n            <span>#: localizationHelper.localize(\"SelectLocale\") #</span>\\r\\n        </label>\\r\\n        <input id=\"locale\" />\\r\\n    </div>\\r\\n    <div class=\"\">\\r\\n        <label class=\\'checkbox checkbox-primary\\'>\\r\\n            <input type=\\'checkbox\\' id=\\'showAlreadyTranslated\\'>\\r\\n            <span class=\"checkbox-label\">#: localizationHelper.localize(\"ShowAlreadyTranslated\") #</span>\\r\\n        </label>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n<script type=\"text/x-kendo-template\" id=\"myWorktoolbarTemplate\">\\r\\n    <div class=\"clearfix\">\\r\\n        <ul class=\"nav nav-pills toolbar-tabs\">\\r\\n            <li class=\"active\"><a data-subtype=\"myworkitems\">#: localizationHelper.localize(\"WorkItem\") #</a></li>\\r\\n            <li><a data-subtype=\"myapprovals\">#: localizationHelper.localize(\"Approval\") #</a></li>\\r\\n            <li><a data-subtype=\"myactivities\">#: localizationHelper.localize(\"Activities\") #</a></li>\\r\\n            <li><a data-subtype=\"mymanualactivities\">#: localizationHelper.localize(\"ManualActivities\") #</a></li>\\r\\n        </ul>\\r\\n        <input type=\\'hidden\\' id=\\'gridViewId\\' value=\\'myworkitems\\' />\\r\\n    </div>\\r\\n    <div>\\r\\n        <a class=\"k-button pull-right btn btn-default btn-clear-grid-filters\">#: localizationHelper.localize(\"ResetGridFilters\") #</a>\\r\\n        <a class=\"k-button pull-right btn btn-default btn-grid-export\"><i class=\"fa fa-file-excel-o btn-mywork-export\"></i>#: localizationHelper.localize(\"Export\") #</a>\\r\\n        <label class=\"checkbox checkbox-primary\" id=\"toggleActivities\">\\r\\n            <input type=\"checkbox\" data-checked=\"false\">\\r\\n            <input id=\"showActivitiesInGrid\" type=\"hidden\" value=\"false\"><span class=\"checkbox-label\">#: localizationHelper.localize(\"ShowActivities\") #</span>\\r\\n        </label>\\r\\n        <label class=\"checkbox checkbox-primary\" id=\"toggleInactive\">\\r\\n            <input type=\"checkbox\" data-checked=\"false\">\\r\\n            <input id=\"showInActivesInGrid\" type=\"hidden\" value=\"false\"><span class=\"checkbox-label\">#: localizationHelper.localize(\"ShowInactiveWorkItems\") #</span>\\r\\n        </label>\\r\\n    </div>\\r\\n</script>\\r\\n\\r\\n';});\n\n","/**\r\nToolbar\r\n**/\r\ndefine('grids/structure/toolbar/controller',['require','text!grids/structure/toolbar/view.html'],function (require) {\r\n    var gridId;\r\n    var tpl = require(\"text!grids/structure/toolbar/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            // BUG 19247: Editable column property must be a function\r\n            // http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-columns.editable\r\n            vm.grid.columns = _.map(vm.grid.columns,\r\n                function (el) {\r\n                    if (el.hasOwnProperty('editable')) {\r\n                        el.editable = function() {\r\n                            return el.editable;\r\n                        };\r\n                    }\r\n                    return el;\r\n                });\r\n\r\n            gridId = vm.containerId || vm.gridId;\r\n            var toolbarContainer = {\r\n                toolbar: [],\r\n                events: []\r\n            }\r\n            var customEventCount = 0;\r\n            //reset filters button, only show if grid options 'filterable' is true\r\n            //grids will default to true, so we only hide if explicitly set to false.\r\n            if (vm.grid.options.filterable && !app.isMobileDevice()) {\r\n                if (vm.fromQueryBuilder) {\r\n                    if (vm.isSavedQuery) {\r\n                        app.events.subscribe(\"queryBuilderGridReady\", function () {\r\n                            clearFilters();\r\n                            exportToExcel();\r\n                        });\r\n                        toolbarContainer.toolbar.push({\r\n                            name: localization.ResetGridFilters,\r\n                            template: \"<a class='k-button pull-right btn btn-default btn-clear-grid-filters'>\" + localization.ResetGridFilters + \"</a>\"\r\n                        });\r\n                        //add export button \r\n                        toolbarContainer.toolbar.push({\r\n                            name: localization.ExportToExcel,\r\n                            template: \"<a  class='k-button pull-right btn btn-default btn-grid-export'> <i class=\\\"fa fa-file-excel-o\\\"></i> \" + localization.Export + \"</a>\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    if (vm.grid.GridType && vm.grid.GridType != \"WorkItemSearch\") {\r\n                        app.events.subscribe(\"dynamicPageReady\", function () {\r\n                            clearFilters();\r\n                            exportToExcel();\r\n                        });\r\n                        toolbarContainer.toolbar.push({\r\n                            name: localization.ResetGridFilters,\r\n                            template: \"<a class='k-button pull-right btn btn-default btn-clear-grid-filters'>\" + localization.ResetGridFilters + \"</a>\"\r\n                        });\r\n\r\n                        //add export button \r\n                        toolbarContainer.toolbar.push({\r\n                            name: localization.ExportToExcel,\r\n                            template: \"<a  class='k-button pull-right btn btn-default btn-grid-export'> <i class=\\\"fa fa-file-excel-o\\\"></i> \" + localization.Export + \"</a>\"\r\n                        });\r\n\r\n                    }\r\n                }\r\n                \r\n            }\r\n\r\n            //mobile WI grid search input\r\n            if (app.isMobile() && vm.grid.GridType === \"WorkItem\") {\r\n                app.events.subscribe(\"dynamicPageReady\", function () {\r\n                    initMobileWiGridSearch();\r\n                });\r\n\r\n                toolbarContainer.toolbar.push({\r\n                    name: 'MobileWISearch',\r\n                    ordinal: 0,\r\n                    template: \"<div class='input-group mobilegrid__search'>\" +\r\n                                \"<input class='mobilegrid__search__input form-control' type='text' name='mobileWiGridSearchText' placeholder='\" + localization.FilterItems + \"'>\" +\r\n                                \"<span class='mobilegrid__search__btn input-group-btn' onclick=\\\"app.lib.filterMobileWiGrid('\" + gridId + \"')\\\">\" +\r\n                                    \"<button class='btn btn-default' type='button'><span class='fa fa-search cursor-pointer'></span></button>\" +\r\n                                \"</span>\" +\r\n                              \"</div>\"\r\n                });\r\n            }\r\n\r\n            _.each(node, function (key) {\r\n                switch (key.name) {\r\n                    case 'showActivityToggle':\r\n                        app.events.subscribe(\"dynamicPageReady\", function () {\r\n                            if (app.isMobile()) {\r\n                                bindActivityCheckboxMobile();\r\n                            } else {\r\n                                bindCheckBoxes();\r\n                            }\r\n                        });\r\n\r\n                        toolbarContainer.toolbar.push({\r\n                            name: localization.ShowActivities,\r\n                            ordinal: 2,\r\n                            template: \"<label class='checkbox checkbox-primary' id='toggleActivities'><input type='checkbox' data-checked='false'><input id='showActivitiesInGrid' type='hidden' value='false'><span class='checkbox-label'>\"\r\n                                + (app.isMobile() ? localization.Activities : localization.ShowActivities) +\r\n                                \"</span></label>\"\r\n                        });\r\n                        break;\r\n                    case 'showInactiveToggle':\r\n                        app.events.subscribe(\"dynamicPageReady\", function () {\r\n                            if (app.isMobile()) {\r\n                                bindInactiveCheckboxMobile();\r\n                            } else {\r\n                                bindCheckBoxes();\r\n                            }\r\n                        });\r\n                        toolbarContainer.toolbar.push({\r\n                            name: localization.ShowInactiveWorkItems,\r\n                            ordinal: 2,\r\n                            template: \"<label class='checkbox checkbox-primary' id='toggleInactive'><input type='checkbox' data-checked='false'><input id='showInActivesInGrid' type='hidden' value='false'><span class='checkbox-label'>\"\r\n                                + (app.isMobile() ? localization.Inactive : localization.ShowInactiveWorkItems) +\r\n                                \"</span></label>\"\r\n                        });\r\n                        break;\r\n                    case 'localizationToolbar':\r\n                        app.events.subscribe(\"dynamicPageReady\", function () {\r\n                            var myGrid = $('#' + gridId).data('kendoGrid');\r\n                            var comboEle = $(myGrid.element).find(\"#locale\");\r\n                            var checkboxEle = $(myGrid.element).find(\"#showAlreadyTranslated\");\r\n\r\n                            //locale drop down\r\n                            var comboControlSettings = {\r\n                                autoBind: false,\r\n                                highlightFirst: true,\r\n                                dataTextField: \"name\",\r\n                                dataValueField: \"id\",\r\n                                text: session.user.LanguageCode,\r\n                                dataSource: new kendo.data.DataSource({\r\n                                    transport: {\r\n                                        read: {\r\n                                            url: \"/Settings/User/GetAvailableLanguageCodes/\",\r\n                                            datatype: \"json\"\r\n                                        }\r\n                                    },\r\n                                    schema: {\r\n                                        data: \"Data\",\r\n                                        errors: \"Errors\",\r\n                                        model: {\r\n                                            id: \"Id\",\r\n                                            fields: {\r\n                                                name: \"Name\"\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }),\r\n                                change: function () {\r\n                                    var value = this.value();\r\n                                    if (value) {\r\n                                        myGrid.dataSource.read({\r\n                                            locale: value, showAlreadyTranslated: checkboxEle.prop('checked')\r\n                                        });\r\n                                    }\r\n                                }\r\n                            };\r\n\r\n                            comboEle.kendoDropDownList(comboControlSettings);\r\n                            //--end locale drop down\r\n\r\n                            //checkbox\r\n\r\n                            //set default value based on config, new record for how many levels deep I call a nested property!\r\n                            checkboxEle.prop('checked', myGrid.dataSource.options.transport.read.originalConfigData.showAlreadyTranslated);\r\n                            checkboxEle.on('click', function () {\r\n                                var combo = $(myGrid.element).find(\"#locale\").data('kendoDropDownList');\r\n                                var locale = combo.value();\r\n                                if (locale.length == 0) {\r\n                                    locale = session.user.LanguageCode;\r\n                                }\r\n                                store.session.set(\"localizationGridLocale\", locale);\r\n                                myGrid.dataSource.read({\r\n                                    locale: locale, showAlreadyTranslated: checkboxEle.prop('checked')\r\n                                });\r\n                            });\r\n                            //--end checkbox\r\n                        });\r\n\r\n                        var built = _.template(tpl);\r\n                        $('#' + gridId).after(built());\r\n                        toolbarContainer.toolbar = kendo.template($(\"#toolbarTemplate\").html());\r\n                        break;\r\n                    case 'showInactiveTabs':\r\n                        app.events.subscribe(\"dynamicPageReady\", function () {\r\n                            bindTabToggles();\r\n                        });\r\n                        toolbarContainer.toolbar.push({\r\n                            name: key.name,\r\n                            template: \"<ul class='nav nav-pills toolbar-tabs'><li class='active'><a data-subtype='myrequests'>\" + localization.Active + \"</a></li><li><a data-subtype='myinactiverequests'>\" + localization.Closed + \"</a></li></ul> <input type='hidden' id='gridViewId' value='myrequests' />\"\r\n                        });\r\n                        break;\r\n                    case 'searchConfigItems':\r\n\r\n                        app.events.subscribe(\"dynamicPageReady\", function () {\r\n                            if (app.isMobile()) {\r\n                                bindConfigItemGridFilterMobile();\r\n                            } else {\r\n                                bindConfigItemGridFilter();\r\n                            }\r\n                        });\r\n                        if (app.isMobile()) {\r\n                            toolbarContainer.toolbar.push({\r\n                                name: key.name + 'ObjectClassCombo',\r\n                                template: \"<input id='ObjectClassCombo' name='ObjectClassCombo' type='text' />\"\r\n                            });\r\n                            toolbarContainer.toolbar.push({\r\n                                name: key.name,\r\n                                template:\r\n                                    \"<div class='input-group mobilegrid__search mobilegrid__search--configitem'>\" +\r\n                                        \"<input class='mobilegrid__search__input form-control' type='text' id='searchText' class='ci-search-text'>\" +\r\n                                        \"<span class='mobilegrid__search__btn input-group-btn'>\" +\r\n                                            \"<button class='btn btn-default' type='button'><span class='fa fa-search cursor-pointer'></span></button>\" +\r\n                                        \"</span>\" +\r\n                                    \"</div>\"\r\n                            });\r\n                        } else {\r\n                            toolbarContainer.toolbar.push({\r\n                                name: key.name + 'ObjectClassCombo',\r\n                                template: \"<div class='ci-dropdown-toolbar'><input id='ObjectClassCombo' name='ObjectClassCombo' type='text'  /></div>\"\r\n                            });\r\n                            toolbarContainer.toolbar.push({\r\n                                name: key.name,\r\n                                template: \"<span class='ci-search-toolbar k-textbox k-space-right'><input type='text' id='searchText' class='ci-search-text' value=''  /><a class='k-icon k-i-search ci-search'></a></span>\"\r\n                            });\r\n                        }\r\n                        break;\r\n                    case \"myWorkToolbar\":\r\n                        app.events.subscribe(\"dynamicPageReady\", function () {\r\n                            if (app.isMobile()) {\r\n                                bindActivityCheckboxMobile();\r\n                                bindInactiveCheckboxMobile();\r\n                            } else {\r\n                                bindCheckBoxes();\r\n                            }\r\n\r\n                            bindMyWorkTabToggles();\r\n                        });\r\n\r\n                        if (app.isMobile()) {\r\n                            toolbarContainer.toolbar.push({\r\n                                name: key.name,\r\n                                ordinal: 1,\r\n                                template: \"<ul class='nav nav-pills toolbar-tabs'><li class='active'><a data-subtype='myworkitems'>\" + localization.WorkItem + \"</a></li><li><a data-subtype='myapprovals'>\" + localization.Approval + \"</a></li><li><a data-subtype='myactivities'>\" + localization.Activities + \"</a></li><li><a data-subtype='mymanualactivities'>\" + localization.ManualActivities + \"</a></li></ul> <input type='hidden' id='gridViewId' value='myworkitems' />\"\r\n                            });\r\n                            toolbarContainer.toolbar.push({\r\n                                name: localization.ShowActivities,\r\n                                ordinal: 2,\r\n                                template: \"<label class='checkbox checkbox-primary' id='toggleActivities'><input type='checkbox' data-checked='false'><input id='showActivitiesInGrid' type='hidden' value='false'><span class='checkbox-label'>\"\r\n                                    + (app.isMobile() ? localization.Activities : localization.ShowActivities) +\r\n                                    \"</span></label>\"\r\n                            });\r\n                            toolbarContainer.toolbar.push({\r\n                                name: localization.ShowInactiveWorkItems,\r\n                                ordinal: 3,\r\n                                template: \"<label class='checkbox checkbox-primary' id='toggleInactive'><input type='checkbox' data-checked='false'><input id='showInActivesInGrid' type='hidden' value='false'><span class='checkbox-label'>\"\r\n                                    + (app.isMobile() ? localization.Inactive : localization.ShowInactiveWorkItems) +\r\n                                    \"</span></label>\"\r\n                            });\r\n                        } else {\r\n                            var built = _.template(tpl);\r\n                            $('#' + gridId).after(built());\r\n                            toolbarContainer.toolbar = kendo.template($(\"#myWorktoolbarTemplate\").html());\r\n                        }\r\n                        break;\r\n                    case 'custom':\r\n                        toolbarContainer.toolbar.push({\r\n                            name: key.name + \"_\" + customEventCount,\r\n                            template: key.template\r\n                        });\r\n                        customEventCount++;\r\n                        break;\r\n                    default:\r\n                }\r\n            });//--each\r\n\r\n            function bindConfigItemGridFilter() {\r\n                var myGrid = $('#' + gridId).data('kendoGrid');\r\n                $(myGrid).find('.k-toolbar').siblings().hide();\r\n\r\n                $(\"#objectViewerWindow\").kendoCiresonWindow({\r\n                    width: \"550px\",\r\n                    height: \"400px\"\r\n                });\r\n\r\n                $('#searchText').keypress(function (event) {\r\n                    var keycode = (event.keyCode ? event.keyCode : event.which);\r\n                    if (keycode == '13') {\r\n                        filterGrid(myGrid);\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                $(\"#ObjectClassCombo\").kendoComboBox({\r\n                    index: 0,\r\n                    \"dataSource\": {\r\n                        \"transport\": {\r\n                            \"prefix\": \"\",\r\n                            \"read\": {\r\n                                \"url\": \"/ConfigItems/GetConfigItemSearchClasses\"\r\n                            }\r\n                        },\r\n                        \"schema\": {\r\n                            \"errors\": \"Errors\"\r\n                        }\r\n                    },\r\n                    \"dataTextField\": \"Item2\",\r\n                    \"dataValueField\": \"Item1\",\r\n                    \"filter\": \"contains\"\r\n                });\r\n\r\n\r\n                $(\".ci-search\").on(\"click\", function () {\r\n                    filterGrid(myGrid);\r\n                });\r\n            }\r\n\r\n            function bindConfigItemGridFilterMobile() {\r\n                var listControl = $(\"[data-control-id='\" + gridId + \"']\").data('kendoListView');\r\n                //$(listControl).find('.k-toolbar').siblings().hide();\r\n\r\n                $(\"#objectViewerWindow\").kendoCiresonWindow({\r\n                    width: '100%',\r\n                    height: '100%'\r\n                });\r\n\r\n                $('.mobilegrid__search__input').keypress(function (event) {\r\n                    var keycode = (event.keyCode ? event.keyCode : event.which);\r\n                    if (keycode == '13') {\r\n                        filterGrid(listControl);\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                $(\"#ObjectClassCombo\").kendoComboBox({\r\n                    index: 0,\r\n                    \"dataSource\": {\r\n                        \"transport\": {\r\n                            \"prefix\": \"\",\r\n                            \"read\": {\r\n                                \"url\": \"/ConfigItems/GetConfigItemSearchClasses\"\r\n                            }\r\n                        },\r\n                        \"schema\": {\r\n                            \"errors\": \"Errors\"\r\n                        }\r\n                    },\r\n                    \"dataTextField\": \"Item2\",\r\n                    \"dataValueField\": \"Item1\",\r\n                    \"filter\": \"contains\"\r\n                });\r\n\r\n\r\n                $('.mobilegrid__search__btn').on(\"click\", function () {\r\n                    filterGrid(listControl);\r\n                });\r\n            };\r\n\r\n            function filterGrid(myGrid) {\r\n                var cb = $(\"#ObjectClassCombo\").data(\"kendoComboBox\");\r\n                var classId;\r\n                if (cb == null) {\r\n                    classId = null;\r\n                } else {\r\n                    classId = cb.value();\r\n                }\r\n                if (classId != null) {\r\n                    if (classId.length == 0) {\r\n                        kendo.ui.ExtAlertDialog.show({\r\n                            title: localization.Warning,\r\n                            message: localization.SelectClassAlert\r\n                        });\r\n                    } else {\r\n                        myGrid.dataSource.read();\r\n                        $(myGrid).find('.k-toolbar').siblings().show();\r\n                    }\r\n                }\r\n            }\r\n\r\n            var bindCheckBoxes = _.once(function () {\r\n                var currentState;\r\n                var myGrid = $('#' + gridId).data('kendoGrid');\r\n                _.each($('#' + gridId).find(':checkbox'), function (box) {\r\n                    var checkbox = $(box);\r\n                    var toolId = $(box).next().attr('id').toString();\r\n                    //bind event\r\n                    $(checkbox).on('click', function () {\r\n\r\n                        currentState = app.gridUtils.savedState.getCurrentState(gridId);\r\n\r\n                        if (currentState) {\r\n                            currentState[toolId] = $(this).prop('checked');\r\n                            app.gridUtils.savedState.setSavedState(gridId, currentState);\r\n                        }\r\n\r\n                        if ($(this).prop('checked')) {\r\n                            $(this).next().val('true');\r\n                        } else {\r\n                            $(this).next().val('false');\r\n\r\n                        }\r\n\r\n                        myGrid.dataSource.read();\r\n                    });\r\n\r\n                    currentState = app.gridUtils.savedState.getCurrentState(gridId);\r\n                    //set initial checkbox state\r\n                    if (currentState[toolId]) {\r\n                        checkbox.prop(\"checked\", true).change();\r\n                        currentState[toolId] = true;\r\n                        checkbox.next().val(true);\r\n                        myGrid.dataSource.read();\r\n                    } else {\r\n                        checkbox.prop(\"checked\", false).change();\r\n                        checkbox.next().val(false);\r\n                        currentState[toolId] = false;\r\n                    }\r\n                    //update grid state\r\n                    if (currentState) {\r\n                        app.gridUtils.savedState.setSavedState(gridId, currentState);\r\n                    }\r\n                });\r\n            });\r\n            \r\n            var bindActivityCheckboxMobile = _.once(function () {\r\n                var listControl = $(\"[data-control-id='\" + gridId + \"']\").data('kendoListView');\r\n\r\n                if (_.isNull(listControl) || _.isUndefined(listControl)) {\r\n                    return;\r\n                };\r\n\r\n                //get toolbar checkbox container\r\n                var cbContainer = listControl.element.prev().find('#toggleActivities');\r\n\r\n                //bind event to container\r\n                cbContainer.on('click', function () {\r\n                    var cb = $(this).find(':checkbox');\r\n                    var input = cb.next();\r\n\r\n                    //update input value that datasour reads from on read\r\n                    if (cb.prop('checked')) {\r\n                        input.val('true');\r\n                    } else {\r\n                        input.val('false');\r\n                    }\r\n\r\n                    listControl.dataSource.read();\r\n                });\r\n            });\r\n\r\n            var bindInactiveCheckboxMobile = _.once(function () {\r\n                var listControl = $(\"[data-control-id='\" + gridId + \"']\").data('kendoListView');\r\n\r\n                if (_.isNull(listControl) || _.isUndefined(listControl)) {\r\n                    return;\r\n                };\r\n\r\n                //get toolbar checkbox container\r\n                var cbContainer = listControl.element.prev().find('#toggleInactive');\r\n\r\n                //read datasource\r\n                listControl.dataSource.read();\r\n\r\n                //bind event to container\r\n                cbContainer.on('click', function () {\r\n                    var cb = $(this).find(':checkbox');\r\n                    var input = cb.next();\r\n\r\n                    //update input value that datasour reads from on read\r\n                    if (cb.prop('checked')) {\r\n                        input.val('true');\r\n                    } else {\r\n                        input.val('false');\r\n                    }\r\n\r\n                    listControl.dataSource.read();\r\n                });\r\n            });\r\n\r\n            function bindTabToggles() {\r\n                var myGrid = $('#' + gridId).data('kendoGrid');\r\n\r\n                var toggleGridView = function (filteringType) {\r\n                    $('#gridViewId').val(filteringType);\r\n\r\n                    if (app.isMobile()) {\r\n                        var listView = $(\".mobilegrid\").data(\"kendoListView\");\r\n                        listView.dataSource.read();\r\n                    } else {\r\n                        myGrid.dataSource.read();\r\n                    }\r\n                };\r\n\r\n                _.each($('.nav-pills li > a'), function (pill) {\r\n                    var link = $(pill);\r\n                    \r\n                    link.click(function () {\r\n                        if (!link.parent().hasClass(\"active\")) {\r\n                            link.parent().toggleClass('active');\r\n                            link.parent().siblings().toggleClass('active');\r\n\r\n                            var subType = $(this).attr('data-subtype');\r\n                            toggleGridView(subType);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n            function clearFilters() {\r\n                $('.btn-clear-grid-filters').on('click', function () {\r\n                    app.storage.gridStates.remove('state_' + gridId);\r\n                    document.location.reload(false);\r\n                });\r\n            };\r\n\r\n            function initMobileWiGridSearch() {\r\n                $(\"input[name=mobileWiGridSearchText]\").keypress(function (event) {\r\n                    if (event.keyCode === 13) {\r\n                        app.lib.filterMobileWiGrid(gridId);\r\n                    }\r\n                });\r\n            };\r\n\r\n            function bindMyWorkTabToggles() {\r\n                var myGrid = $('#' + gridId).data('kendoGrid');\r\n\r\n                var toggleGridView = function (filteringType) {\r\n                    $('#gridViewId').val(filteringType);\r\n                    if (app.isMobile()) {\r\n                        var listView = $(\".mobilegrid\").data(\"kendoListView\");\r\n                        listView.dataSource.read();\r\n                    } else {\r\n\r\n                        _.each(myGrid.options.columns, function (col) {\r\n                            if (col.field === \"Title\") {\r\n                                if (app.gridUtils.GridSubType == \"myapprovals\" || app.gridUtils.GridSubType == \"mymanualactivities\") {\r\n                                    col.template = col.template.replace(\"highlight-default-icon\", \"\").replace(\"ra-icon\", \"ra-icon highlight-default-icon\");\r\n                                } else {\r\n                                    col.template = col.template.replace(\"highlight-default-icon\", \"\").replace(\"wi-icon\", \"wi-icon highlight-default-icon\");\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        if (app.gridUtils.GridSubType === \"myapprovals\")\r\n                            myGrid.showColumn(\"Decision\");\r\n                        else\r\n                            myGrid.hideColumn(\"Decision\");\r\n\r\n                        myGrid.dataSource.read();\r\n                        myGrid.refresh();\r\n                    }\r\n\r\n                };\r\n\r\n                var toggleCheckboxes = function (gridType) {\r\n                    if (gridType == \"myworkitems\") {\r\n                        $(\"#toggleActivities\").show();\r\n                        $(\"#toggleInactive\").show();\r\n                    } else {\r\n                        $(\"#toggleActivities\").hide();\r\n                    }\r\n                }\r\n                _.each($('.nav-pills li > a'), function (pill) {\r\n                    var link = $(pill);\r\n\r\n                    link.click(function () {\r\n                        link.parent().toggleClass('active');\r\n                        link.parent().siblings().removeClass('active');\r\n\r\n                        vm.grid.GridSubType = $(this).attr('data-subtype');\r\n                        app.gridUtils.GridSubType = vm.grid.GridSubType;  //store on gridutils too for proper link on anchor/title field\r\n\r\n                        toggleCheckboxes(vm.grid.GridSubType);\r\n                        toggleGridView(vm.grid.GridSubType);\r\n                    });\r\n                });\r\n\r\n\r\n            }\r\n\r\n            function exportToExcel() {\r\n                $('.btn-grid-export').on('click', function (e) {\r\n                    var kendoGrid = $('#' + gridId).getKendoGrid(); \r\n                    var exportFileName = $('.page_title').text() + \".xlsx\";\r\n                    \r\n                    kendoGrid.options.excel = { fileName: exportFileName, allPages: true, proxyURL: \"\" };\r\n                    kendoGrid.saveAsExcel();\r\n                });\r\n            };\r\n\r\n            callback(toolbarContainer);\r\n        }\r\n    }\r\n    return definition;\r\n});\r\n\n","/**\r\nBase Column - implementations that are standard across all col type definitions\r\n**/\r\ndefine('grids/columnTemplates/columnBase/controller',['require'],function (require) {\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            //if no title, set title to node.field for localization attempt\r\n            if (_.isUndefined(node.title) || [node.title].length <= 0) {\r\n                node.title = node.field;\r\n            }\r\n\r\n            //localize header title. If node.title is not in the localization lookup files, it will fall back to the string itself\r\n            node.title = !_.isUndefined(localization[node.title]) ? localization[node.title] : node.title;\r\n\r\n            callback(node);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nString Column\r\n**/\r\ndefine('grids/columnTemplates/string/controller',['require'],function (require) {\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            callback(node);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nNumeric Column\r\n**/\r\ndefine('grids/columnTemplates/number/controller',['require'],function (require) {\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            callback(node);\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nboolean Column\r\n**/\r\ndefine('grids/columnTemplates/bool/controller',['require'],function (require) {\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            callback(node);\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nDate Column\r\n**/\r\ndefine('grids/columnTemplates/date/controller',['require'],function (require) {\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            callback(node);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!grids/columnTemplates/SLOStatus/view.html',[],function () { return '<div id=\"slo-togrid\" style=\"display:none;\">\\r\\n    <div class=\"slo-togrid-allSlo\">\\r\\n        <div class=\"slo-clone hide\">\\r\\n            <ul>\\r\\n                <li class=\"slo-togrid-time-sub\"></li>\\r\\n                <li class=\"slo-togrid-icon-sub\"></li>\\r\\n                <li class=\"slo-togrid-title-sub\"></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"slo-grid-space\">\\r\\n        <span class=\"slo-togrid-time\"></span>\\r\\n        <span class=\"slo-togrid-icon\">\\r\\n            <i></i>\\r\\n        </span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div id=\"slo-pop-tooltip\" style=\"display:none; position:absolute; z-index:99999\">fillertext</div>\\r\\n\\r\\n';});\n\n","/**\r\nSLO Column\r\n**/\r\ndefine('grids/columnTemplates/SLOStatus/controller',['require','text!grids/columnTemplates/SLOStatus/view.html'],function (require) {\r\n    var tpl = require(\"text!grids/columnTemplates/SLOStatus/view.html\");\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            if (_.isUndefined(vm.gridJsonDataForCountdown)) {\r\n                vm.gridJsonDataForCountdown = {};\r\n            }\r\n            var built = _.template(tpl);\r\n            //var view = new kendo.View(built(), { wrap: false });\r\n            $('#' + vm.containerId).append(built());\r\n            SLO.Init(vm);\r\n            setInterval(function () { SLO.DoCountDown(); }, 1000);\r\n            node.filterable = { ui: sloFilter };\r\n\r\n            function sloFilter(element) {\r\n                if (_.isUndefined(element)) {\r\n                    return;\r\n                }\r\n                element.kendoDropDownList({\r\n                    dataTextField: \"displayName\",\r\n                    dataValueField: \"value\",\r\n                    dataSource: [\r\n                        { value: \"Active\", displayName: localization.SLOStatusActive },\r\n                        { value: \"Met\", displayName: localization.SLOStatusMet },\r\n                        { value: \"Warning\", displayName: localization.SLOStatusWarng },\r\n                        { value: \"Breached\", displayName: localization.SLOStatusBreached },\r\n                        { value: \"Paused\", displayName: localization.SLOStatusPaused }],\r\n                    optionLabel: \"--Select Value--\"\r\n                });\r\n            }\r\n            callback(node);\r\n        }\r\n    }\r\n    return definition;\r\n});\r\n\r\n\r\n\r\n\r\n//=========used for SLO==============\r\nvar sloTempContainer;\r\n//=========END used for SLO==============\r\nvar SLO = {\r\n    ViewModel: {},\r\n    Init: function (vm) {\r\n        SLO.ViewModel = vm;\r\n        sloTempContainer = $(\"#slo-togrid\");\r\n    },\r\n    SLOHover: function (sloElement) {\r\n\r\n        sloElement.mouseenter(function () {\r\n            sloElement.find(\".slo-loader\").show();\r\n            $.post(\"/Grid/SLOPopup\", { workItemId: sloElement.attr(\"wi\") }, function (data) {\r\n                sloElement.find(\".slo-loader\").hide();\r\n\r\n                var allSlo = sloElement.find(\".slo-togrid-allSlo\");\r\n                if (allSlo.hasClass(\"canceled\")) {\r\n                    allSlo.removeClass(\"canceled\");\r\n                    return;\r\n                }\r\n                allSlo.find(\".removeSlo\").remove();\r\n                for (var key in data) {\r\n                    var icon = \"\";\r\n                    var isBreach = false;\r\n                    var isMet = false;\r\n                    switch (data[key].Status) {\r\n                        case \"Met\":\r\n                            icon = \"fa fa-check-circle-o text-success fa-lg\";\r\n                            isMet = true;\r\n                            break;\r\n                        case \"Active\":\r\n                            icon = \"fa fa-clock-o text-primary fa-lg\";\r\n                            break;\r\n                        case \"Paused\":\r\n                            icon = \"fa fa-pause text-info fa-lg\";\r\n                            break;\r\n                        case \"Warning\":\r\n                            icon = \"fa fa-exclamation-circle text-warning fa-lg\";\r\n                            break;\r\n                        case \"Breached\":\r\n                            isBreach = true;\r\n                            icon = \"fa fa-bell text-danger fa-lg\";\r\n                            break;\r\n                    }\r\n                    //slo-clone-to-grid\r\n                    var clone = allSlo.find(\".slo-clone\").clone();\r\n                    //var clone = $(\".slo-clone-to-grid\").clone();\r\n                    clone.removeClass(\"slo-clone\");\r\n                    clone.addClass(\"removeSlo\");\r\n                    if (isMet == false) {\r\n                        if (isBreach) {\r\n                            //clone.find(\".slo-togrid-time-sub\").html(\"-\" + Math.abs(data[key].Time.Hours) + \":\" + data[key].Time.Minutes).css(\"color\", \"red\");\r\n                            clone.find(\".slo-togrid-time-sub\").html(\"\").css(\"color\", \"red\");\r\n                        } else {\r\n                            var hourDispalay = data[key].Time.Hours;\r\n                            if (data[key].Time.Hours < 10) {\r\n                                hourDispalay = \"0\" + data[key].Time.Hours.toString();\r\n                            }\r\n\r\n                            var minDisplay = data[key].Time.Minutes;\r\n                            if (data[key].Time.Minutes < 10) {\r\n                                minDisplay = \"0\" + data[key].Time.Minutes.toString();\r\n                            }\r\n\r\n                            clone.find(\".slo-togrid-time-sub\").html(hourDispalay + \":\" + minDisplay);\r\n                        }\r\n                    }\r\n                    clone.find(\".slo-togrid-title-sub\").html(data[key].DisplayName);\r\n\r\n                    //use fa not an image \r\n                    clone.find(\".slo-togrid-icon-sub\").addClass(icon);\r\n\r\n                    //show the \r\n                    clone.removeClass(\"hide\");\r\n                    allSlo.append(clone);\r\n                }\r\n                allSlo.show();\r\n                allSlo.css(\"margin-left\", \"-\" + (allSlo[0].offsetWidth + 20) + \"px\");\r\n            });\r\n        });\r\n\r\n        sloElement.hover(function (e) {\r\n            //console.log(e);\r\n            sloElement.find(\".slo-togrid-allSlo\").removeClass(\"canceled hide\");\r\n        });\r\n\r\n        sloElement.mouseleave(function () {\r\n            var allSlo = sloElement.find(\".slo-togrid-allSlo\");\r\n            //allSlo.find(\".removeSlo\").remove();\r\n            allSlo.addClass(\"canceled hide\");\r\n            //allSlo.hide();\r\n        });\r\n    },\r\n\r\n\r\n    CreateSLOToGrid: function (sloElement, isTriggerdFromGrid) {\r\n        var curImg;\r\n        var sloInstance = SLO.ViewModel.gridJsonDataForCountdown[sloElement.attr(\"id\")];\r\n        var clone;\r\n        var isBreach = false;\r\n        var isMetOrBreach = false;\r\n        if (sloInstance == null) return;\r\n        if (!sloElement.hasClass(\"addedSloToGrid\")) {\r\n            sloElement.html(\"\");\r\n            clone = sloTempContainer.clone();\r\n            sloElement.append(clone);\r\n            sloElement.addClass(\"addedSloToGrid\");\r\n            clone.addClass(\"addedSloToGrid\");\r\n            clone.show();\r\n            clone.attr(\"id\", \"\");\r\n        } else {\r\n            clone = sloElement.find(\".addedSloToGrid\");\r\n        }\r\n        var txtTime = clone.find(\".slo-togrid-time\");\r\n        sloInstance.ServerDatetimeNow = eval(sloInstance.ServerDatetimeNow);\r\n        sloInstance.WarningDate = eval(sloInstance.WarningDate);\r\n\r\n        iconClass = \"fa fa-clock-o text-primary fa-lg\";\r\n        if (sloInstance.WarningDate <= sloInstance.ServerDatetimeNow)\r\n            iconClass = \"fa fa-exclamation-circle text-warning fa-lg\";\r\n\r\n        if (sloInstance.Time.Hours <= 0 && sloInstance.Time.Minutes <= 0 && sloInstance.Time.Seconds <= 0) {\r\n            isBreach = true;\r\n            iconClass = \"fa fa-bell text-danger fa-lg\";\r\n            txtTime.css(\"color\", \"red\");\r\n        }\r\n\r\n        if (sloInstance.Status == \"SLAInstance.Status.Met\") {\r\n            iconClass = \"fa fa-check-circle-o text-success fa-lg\";\r\n            isTriggerdFromGrid = true;\r\n            isMetOrBreach = true;\r\n        } else if (sloInstance.Status == \"SLAInstance.Status.Paused\") {\r\n            iconClass = \"fa fa-pause text-info fa-lg\";\r\n            isTriggerdFromGrid = true;\r\n        } else if (sloInstance.Status == \"SLAInstance.Status.Breached\") {\r\n            iconClass = \"fa fa-bell text-danger fa-lg\";\r\n            isTriggerdFromGrid = true;\r\n            isMetOrBreach = true;\r\n        }\r\n\r\n        if (isMetOrBreach == false) {\r\n            var mins = (Math.abs(sloInstance.Time.Minutes) < 10) ? \"0\" + Math.abs(sloInstance.Time.Minutes) : Math.abs(sloInstance.Time.Minutes);\r\n            var hour = Math.abs(sloInstance.Time.Hours) < 10 ? \"0\" + Math.abs(sloInstance.Time.Hours) : Math.abs(sloInstance.Time.Hours);\r\n            txtTime.html((isBreach ? \"-\" : \"\") + hour + \":\" + mins);\r\n        }\r\n        //use fa not an image \r\n        clone.find(\".slo-togrid-icon i\").attr(\"class\", iconClass);\r\n        if (isTriggerdFromGrid) {\r\n            //alert(Math.abs(sloInstance.Time.Hours) + \":\" + Math.abs(sloInstance.Time.Minutes));\r\n            //alert(sloInstance.Status);\r\n            return;\r\n        }\r\n\r\n        sloInstance.ServerDatetimeNow.getSeconds(sloInstance.ServerDatetimeNow.getSeconds() + 1);\r\n        sloInstance.Time.Seconds = parseInt(sloInstance.Time.Seconds) - 1;\r\n\r\n        if (sloInstance.Time.Hours <= 0 && sloInstance.Time.Minutes <= 0 && sloInstance.Time.Seconds <= 0) {\r\n            if (sloInstance.Time.Seconds <= -60) {\r\n                sloInstance.Time.Seconds = 0;\r\n                sloInstance.Time.Minutes = parseInt(sloInstance.Time.Minutes) - 1;\r\n            }\r\n\r\n            if (sloInstance.Time.Minutes <= -60) {\r\n                sloInstance.Time.Minutes = 0;\r\n                sloInstance.Time.Hours = parseInt(sloInstance.Time.Hours) - 1;\r\n            }\r\n        } else {\r\n            if (sloInstance.Time.Minutes < 0) {\r\n                sloInstance.Time.Minutes = 59;\r\n                sloInstance.Time.Hours = parseInt(sloInstance.Time.Hours) - 1;\r\n            }\r\n\r\n            if (sloInstance.Time.Seconds < 0) {\r\n                sloInstance.Time.Seconds = 59;\r\n                sloInstance.Time.Minutes = parseInt(sloInstance.Time.Minutes) - 1;\r\n            }\r\n        }\r\n    },\r\n\r\n    DoCountDown: function () {\r\n        for (var key in SLO.ViewModel.gridJsonDataForCountdown) {\r\n            if ($(\"#\" + key)[0] == null) continue;\r\n            SLO.CreateSLOToGrid($(\"#\" + key), false);\r\n        }\r\n    },\r\n    AssignSLOJson: function (id, value) {\r\n        if (SLO.ViewModel.gridJsonDataForCountdown[id]== null) {\r\n            if (value != null) {\r\n                SLO.ViewModel.gridJsonDataForCountdown[id] = value;\r\n            }\r\n        }\r\n    }\r\n}\r\n;\n","/**\r\nCommand Column\r\n**/\r\ndefine('grids/columnTemplates/command/controller',['require'],function (require) {\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            _.each(node.command, function (command) {\r\n                if (_.isString(command.text)) {\r\n                    command.text = localizationHelper.localize(command.text, command.text);\r\n                }\r\n                if (_.isObject(command.text)) {\r\n                    _.each(command.text, function (value, key) {\r\n                        command.text[key] = localizationHelper.localize(value, value);\r\n                    });\r\n                }\r\n                switch (command.name) {\r\n                    case \"immediateDelete\":\r\n                        //command.imageClass = \"fa-2x fa fa-trash-o pad10\";\r\n                        command.click = function (e) {\r\n                            e.preventDefault();\r\n                            var grid = $(this.element).data(\"kendoGrid\");\r\n                            var dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n\r\n                            //need to see if the grid has unsaved edits\r\n                            var hasPendingEdits = false;\r\n                            _.each(grid.dataSource.data(), function (row) {\r\n                                if (row.dirty) {\r\n                                    if (row.uid != dataItem.uid) {\r\n                                        hasPendingEdits = true;\r\n                                    }\r\n                                }\r\n                            });\r\n                            if (hasPendingEdits) {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    message: localizationHelper.localize(\"SaveOrCancelBeforeDelete\")\r\n                                });\r\n                            } else {\r\n                                $.when(kendo.ui.ExtYesNoDialog.show({\r\n                                    //todo: see how we can pull this out into the config (specific to localization == not reusable)\r\n                                    title: localizationHelper.localize(\"DeleteLocalizationTitle\"), //, \"Delete Localization Key\"),\r\n                                    message: localizationHelper.localize(\"ConfirmDelete\")//, \"Are you sure you want to delete this?\")\r\n                                })).done(function (response) {\r\n                                    if (response.button === \"yes\") {\r\n                                        app.lib.mask.apply();\r\n                                        grid.dataSource.remove(dataItem);\r\n                                        grid.dataSource.sync();\r\n                                    } \r\n                                });\r\n                            }\r\n                        }\r\n                        command.text = localizationHelper.localize(command.text);\r\n                        break;\r\n                    default:\r\n                }\r\n            });\r\n            callback(node);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nInput Column\r\n**/\r\ndefine('grids/columnTemplates/input/controller',['require'],function (require) {\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            callback(node);\r\n\r\n        }\r\n    }\r\n    return definition;\r\n});\r\n\n","/**\r\nanchor - html anchor tags, used for titles or cells that will link to row details\r\n**/\r\ndefine('grids/columnTemplates/anchor/controller',['require'],function (require) {\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            node.template = node.template.replace('***', vm.grid.GridType);\r\n            callback(node);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nGrid Data Source\r\n**/\r\ndefine('grids/structure/dataSource/controller',['require'],function (require) {\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            var gridId = vm.containerId || vm.gridId;\r\n            vm.dataSource = {};\r\n\r\n\r\n            if (!_.isUndefined(vm.grid.options) && vm.grid.options.editable) {\r\n                //grid setups for editable grids.\r\n                switch (vm.grid.GridType) {\r\n                    case 'Localization':\r\n                        app.gridUtils.applyLocalizationDataSourceConfig(gridId, vm);\r\n                        break;\r\n                    case 'EditableKnowledgeArticle':\r\n                        app.gridUtils.applyKmDashboardDataSourceConfig(gridId, vm);\r\n                        break;\r\n                    default:\r\n                        return;\r\n                }\r\n            } else {\r\n                //generic default grid configuration\r\n                app.gridUtils.configureGenericGrid(gridId, vm);\r\n            }\r\n\r\n            app.gridUtils.setDataSourceOverrides(vm);\r\n\r\n\r\n            if (!_.isUndefined(node)) {\r\n                vm.dataSource = _.extend(vm.dataSource, node);\r\n            }\r\n\r\n            vm.onColumnReorder = function () {\r\n                app.gridUtils.saveColumnState(gridId, this);\r\n            };\r\n\r\n            vm.onColumnResize = function () {\r\n                app.gridUtils.saveColumnState(gridId, this);\r\n            };\r\n\r\n            vm.onColumnShow = function () {\r\n                app.gridUtils.saveColumnState(gridId, this);\r\n            };\r\n\r\n            vm.onColumnHide = function () {\r\n                app.gridUtils.saveColumnState(gridId, this);\r\n            };\r\n\r\n            vm.onGridChange = function (e) {\r\n                var grid = this;\r\n                app.events.publish('gridChange', grid);\r\n                if (grid.options.noState) {\r\n                    return;\r\n                }\r\n                app.gridUtils.savedState.updateSelectedRows(gridId, grid);\r\n            };\r\n\r\n            vm.onDataBound = function onDataBound(e) {\r\n                var grid = e.sender;\r\n                var currentState = app.gridUtils.savedState.getCurrentState(gridId);\r\n                var onRowClick = !_.isUndefined(vm.events) ? vm.events.handleRowClick : function () { app.lib.log('row click function not found;'); };\r\n\r\n                app.gridUtils.denoteAppliedFilters(grid, currentState);\r\n                app.gridUtils.setGridStatePersistence(gridId, grid, grid.dataSource, currentState);\r\n                app.gridUtils.initRowClickHandling(gridId, grid, onRowClick);\r\n                app.gridUtils.handleEmptyResults(grid, grid.dataSource, currentState);\r\n                app.gridUtils.handleRowHoverEvent(e);\r\n\r\n                app.events.publish('gridBound', grid);\r\n            }\r\n\r\n            callback();\r\n        }\r\n    }\r\n    return definition;\r\n});\n","/**\r\nSource Fields: gets the dataSource.schema.model.fields data based on .net Class type\r\n**/\r\ndefine('grids/structure/sourceFields/controller',['require'],function (require) {\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            vm.dataSource.schema.model.fields = {}\r\n            _.each(vm.grid.columns, function (col) {\r\n                vm.dataSource.schema.model.fields[col.field] = {\r\n                    \"type\": col.DataType,\r\n                    \"editable\": _.isUndefined(col.editable) ? false : col.editable\r\n                }\r\n                if (col.DataType === 'number') {\r\n                    //Parse to Number so that localizations(Dutch, Spanish, etc.) would work even for given numbers with \".\"\r\n                    vm.dataSource.schema.model.fields[col.field].parse = function (num) {\r\n                        if (_.isNull(num) || _.isUndefined(num))\r\n                            return 0;\r\n                        else\r\n                            return Number(num);\r\n                    }\r\n                }\r\n                if (col.DataType === 'date') {\r\n                    /*\r\n                     * We are overriding what the kendo grid does for date columns, at least until we update kendo.\r\n                     * Before this override we had kendo calling kendo.parseDate() internally for columns of type 'date' \r\n                     * In our current kendo version (2013.3.1119) kendo.parseDate() does not handle UTC dates properly:\r\n                     * \r\n                     *  post in 2012 saying UTC not supported: \r\n                     *      http://www.telerik.com/forums/kendo-fails-to-parse-or-format-utc-dates#6uYc1I9XzkCZysvK1g8abg \r\n                     *  post in 2014 saying fixed: \r\n                     *      http://www.telerik.com/forums/kendo-fails-to-parse-or-format-utc-dates#mLxRP0gx_Ua_RTlTQBDm3w\r\n                     *  link to fix example: \r\n                     *      http://dojo.telerik.com/uyaca/3\r\n                     * \r\n                     * Until we upgrade to the latest kendo version we are intercepting date column parsing and manually \r\n                     * applying our rules \r\n                     * \r\n                     * -David\r\n                     * \r\n                     */\r\n\r\n                    //vm.dataSource.schema.model.fields[col.field].parse = function(dateString) {\r\n                    //    if (_.isNull(dateString) || _.isUndefined(dateString)) {\r\n                    //        return '';\r\n                    //    } else {\r\n                    //        return kendo.toString(new Date(dateString), 'g');\r\n                    //    }\r\n                    //}\r\n\r\n                    //Fix for TFS Portal BUG 12131\r\n                    if (col.field.indexOf(\"AsDatePart\") == -1 && vm.grid.GridType == \"WorkItem\" && vm.grid.dataUrl.toString() != \"/grid/GetPromotedView/\") {\r\n                        var colField = col.field;\r\n                        var newColumn = col;\r\n                        newColumn.field = col.field + \"AsDatePart\";\r\n                        vm.grid.columns.push(newColumn);\r\n                        vm.dataSource.schema.model.fields[col.field] = {\r\n                            \"type\": col.DataType,\r\n                            \"editable\": _.isUndefined(col.editable) ? false : col.editable\r\n                        }\r\n                    }\r\n                   \r\n                }\r\n            });\r\n\r\n            callback();\r\n        }\r\n    }\r\n    return definition;\r\n});\r\n\n","\ndefine('text!grids/structure/drawer/createLocalizationTemplate.html',[],function () { return '<script type=\"text/x-kendo-template\" id=\"createLocalizationTemplate\">\\r\\n    <div class=\"alert alert-danger\" data-bind=\"localize: RequiredFieldsErrorMessage, visible: formInvalid\"></div>\\r\\n    <div class=\"form-group\">\\r\\n        <label class=\"control-label\" for=\"Key\">\\r\\n            <span data-bind=\"localize: Key\"></span>\\r\\n            (<span data-bind=\"localize: Required\"></span>)\\r\\n        </label>\\r\\n        <input type=\"text\" class=\"k-textbox form-control input-sm\" data-bind=\"value: Key, events: { blur: checkIfKeyIsValid }\" required>\\r\\n        <p class=\"help-block validation-summary-errors\" data-bind=\"localize: KeyAlreadyExists, visible: hasDuplicateKey\"></p>\\r\\n    </div>\\r\\n    <div class=\"form-group\">\\r\\n        <label class=\"control-label\" for=\"English\">\\r\\n            <span data-bind=\"localize: English\"></span>\\r\\n            (<span data-bind=\"localize: Required\"></span>)\\r\\n        </label>\\r\\n        <input type=\"text\" class=\"k-textbox form-control input-sm\" data-bind=\"value: English, events: { blur: checkForValue }\" required>\\r\\n    </div>\\r\\n    <div class=\"form-group\">\\r\\n        <label class=\"control-label\" for=\"ContextNotes\">\\r\\n            <span data-bind=\"localize: ContextNotes\"></span>\\r\\n        </label>\\r\\n        <textarea class=\"k-textbox form-control input-sm\" rows=\"2\" data-bind=\"value: ContextNotes\"></textarea>\\r\\n    </div>\\r\\n    <div class=\"form-group\">\\r\\n        <button type=\"button\" data-bind=\"click: saveRecord, enabled: canSubmit\" class=\"k-button btn btn-primary\">\\r\\n            <span data-bind=\"localize: Save\"></span>\\r\\n        </button>\\r\\n        <button type=\"button\" data-bind=\"click: cancel\" class=\"k-button btn btn-default\">\\r\\n            <span data-bind=\"localize: Cancel\"></span>\\r\\n        </button>\\r\\n    </div>\\r\\n</script>';});\n\n","/**\r\nDrawer Menu\r\n**/\r\ndefine('grids/structure/drawer/controller',['require','text!grids/structure/drawer/createLocalizationTemplate.html'],function (require) {\r\n    var gridId;\r\n    //var tpl = require(\"text!grids/structure/drawer/view.html\");\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            if (_.isUndefined(node)) {\r\n                return;\r\n            }\r\n            gridId = vm.containerId || vm.gridId;\r\n            _.each(node, function (button, key) {\r\n                var viewModel = {\r\n                    command: function (e) {\r\n                        switch (key) {\r\n                            case \"addLocalization\":\r\n                                var tpl = require(\"text!grids/structure/drawer/createLocalizationTemplate.html\");\r\n                                var built = _.template(tpl);\r\n                                $('#' + gridId).after(built());\r\n                                addNewLocalization();\r\n                                break;\r\n                            case \"saveLocalization\":\r\n                            case \"savePopularityIndex\":\r\n                                savePendingChanges();\r\n                                break;\r\n                            case \"cancelLocalization\":\r\n                            case \"cancelPopularityIndex\":\r\n                                cancelPendingChanges();\r\n                                break;\r\n                            default:\r\n                        }\r\n                    },\r\n                    visible: button.visible,\r\n                    enabled: button.enabled\r\n                }\r\n\r\n                //todo: we don't need this, we need to use a template on the page already and call drawer.addButton\r\n                var drawerButton = new kendo.View(\r\n                    \"<button data-bind='drawerMenuCommand: { \" +\r\n                    \"titleKey: \" + button.titleKey + \", \" +\r\n                    \"icon: \" + button.icon + \", \" +\r\n                    \"command: command, \" +\r\n                    \"visible: visible}, \" +\r\n                    \"enabled: enabled '></button>\",\r\n                    { wrap: false, model: kendo.observable(viewModel) }\r\n                );\r\n                drawerButton.render();\r\n            });\r\n        }\r\n    }\r\n\r\n    function cancelPendingChanges() {\r\n        var gridControl = $('#' + gridId).data('kendoGrid');\r\n        gridControl.cancelChanges();\r\n    };\r\n\r\n    function savePendingChanges() {\r\n        var gridControl = $('#' + gridId).data('kendoGrid');\r\n        if (gridControl.dataSource.hasChanges()) {\r\n            app.lib.mask.apply();\r\n            gridControl.saveChanges();\r\n        }\r\n    };\r\n\r\n    function addNewLocalization() {\r\n        var gridControl = $('#' + gridId).data('kendoGrid');\r\n        var dataSource = gridControl.dataSource;\r\n        //need to see if the grid has unsaved edits\r\n        if (dataSource.hasChanges()) {\r\n            kendo.ui.ExtAlertDialog.show({\r\n                message: localizationHelper.localize(\"SaveOrCancelBeforeAdd\")\r\n            });\r\n        } else {\r\n            //create modal control\r\n            var popup = $(\"<div id='newLocalizationWindow'>\")\r\n                .appendTo($(\"body\"))\r\n                .kendoCiresonWindow({\r\n                    title: localizationHelper.localize(\"AddNewKey\"),\r\n                    actions: [],\r\n                    width: 400,\r\n                    visible: true,\r\n                    content: {\r\n                        //sets window template\r\n                        template: kendo.template($(\"#createLocalizationTemplate\").html())\r\n                    }\r\n                }).data(\"kendoWindow\").center();\r\n\r\n            //create vm to bind to the popup\r\n            var popupViewModel = kendo.observable({\r\n                Key: \"\",\r\n                English: \"\",\r\n                ContextNotes: \"\",\r\n                Locale: store.session.get('localizationGridLocale'),\r\n                hasDuplicateKey: false,\r\n                formInvalid: false\r\n            });\r\n\r\n            popupViewModel.validateForm = function () {\r\n                var isValid = true;\r\n                if (this.get('canSubmit') == false) {\r\n                    isValid = false;\r\n                };\r\n                if (this.get('Key').length <= 0) {\r\n                    isValid = false;\r\n                };\r\n                if (this.get('English').length <= 0) {\r\n                    isValid = false;\r\n                };\r\n                if (this.get('hasDuplicateKey')) {\r\n                    isValid = false;\r\n                };\r\n                return isValid;\r\n            };\r\n\r\n            popupViewModel.saveRecord = function () {\r\n                //double check that everything validates (or like, triple check now..)\r\n                if (popupViewModel.validateForm()) {\r\n                    popupViewModel.set(\"formInvalid\", false);\r\n\r\n                    app.lib.mask.apply();\r\n                    //insert without Id property so it recognizes it as an Add instead of Update\r\n                    dataSource.insert(0, {\r\n                        Key: popupViewModel.get(\"Key\"),\r\n                        Locale: popupViewModel.get(\"Locale\"),\r\n                        English: popupViewModel.get(\"English\"),\r\n                        ContextNotes: popupViewModel.get(\"ContextNotes\").trim()\r\n                    });\r\n\r\n                    //sync calls the 'create' datasource endpoint since 'Id' above is blank\r\n                    dataSource.sync();\r\n                    //re-read data and close the modal window\r\n                    dataSource.read();\r\n                    popup.destroy();\r\n                } else {\r\n                    popupViewModel.set(\"formInvalid\", true);\r\n                }\r\n            };\r\n\r\n            popupViewModel.cancel = function (e) {\r\n                dataSource.cancelChanges();\r\n                popup.destroy();\r\n            };\r\n\r\n            //blur event for 'Key' field to validate it is not empty and not a duplicate\r\n            popupViewModel.checkIfKeyIsValid = function (e) {\r\n                var ele = e.currentTarget;\r\n\r\n                //remove leading/trailing spaces\r\n                popupViewModel.set(\"Key\", popupViewModel.get(\"Key\").trim());\r\n\r\n                //validate there is value in field\r\n                if (popupViewModel.get(\"Key\").length <= 0) {\r\n                    $(ele).closest('.form-group').addClass('has-error');\r\n                    return;\r\n                };\r\n\r\n                //call endpoint to check if Key exists already\r\n                $.ajax({\r\n                    contentType: \"application/json\",\r\n                    accepts: \"application/json\",\r\n                    type: \"POST\",\r\n                    dataType: \"json\",\r\n                    data: JSON.stringify({ key: popupViewModel.get(\"Key\"), locale: popupViewModel.get(\"Locale\") }),\r\n                    url: '/Localizations/KeyIsValid/'\r\n                }).done(function (keyIsValid) {\r\n                    if (keyIsValid) {\r\n                        popupViewModel.set(\"hasDuplicateKey\", false);\r\n                        $(ele).closest('.form-group').removeClass('has-error');\r\n                    } else {\r\n                        popupViewModel.set(\"hasDuplicateKey\", true);\r\n                        $(ele).closest('.form-group').addClass('has-error');\r\n                    }\r\n                    popupViewModel.setCanSubmit();\r\n                });\r\n            };\r\n\r\n            popupViewModel.checkForValue = function (e) {\r\n                var ele = e.currentTarget;\r\n                popupViewModel.set(\"English\", popupViewModel.get(\"English\").trim());\r\n                //add error style if input is empty\r\n                if (popupViewModel.get(\"English\").length > 0) {\r\n                    $(ele).closest('.form-group').removeClass('has-error');\r\n                } else {\r\n                    $(ele).closest('.form-group').addClass('has-error');\r\n                }\r\n\r\n                popupViewModel.setCanSubmit();\r\n            };\r\n\r\n            //can submit form when Key has value and is valid and English has value. Check on blur of each required input.\r\n            popupViewModel.setCanSubmit = function () {\r\n                if ((popupViewModel.get(\"Key\").length > 0 && popupViewModel.get(\"hasDuplicateKey\") == false) && popupViewModel.get(\"English\").length > 0) {\r\n                    popupViewModel.set(\"canSubmit\", true);\r\n                } else {\r\n                    popupViewModel.set(\"canSubmit\", false);\r\n                }\r\n            };\r\n\r\n            //bind the popup to the vm\r\n            kendo.bind(popup.element, popupViewModel);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\r\n\n","\ndefine('text!grids/mobile/view.workitem.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display: none\">\\r\\n    <div data-template-name=\"gridCardTemplate\" class=\"gridcard gridcard--workitem\">\\r\\n        <div class=\"checkbox gridcard__checkbox\">\\r\\n            <input type=\"checkbox\" id=\"selected_#: Id #\">\\r\\n            <label for=\"selected_#: Id #\"></label>\\r\\n        </div>\\r\\n        <p class=\"gridcard__title\">#: Title #</p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if ( Priority && Priority.length > 0 ){ #\\r\\n                <span>#: localizationHelper.localize(\"Priority\") # #: Priority # </span>\\r\\n                # } #\\r\\n\\r\\n                # if ( Priority && Priority.length > 0 && AffectedUser && AffectedUser.length > 0 ){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n\\r\\n                # if ( AffectedUser && AffectedUser.length > 0 ){ #\\r\\n                <span>#: AffectedUser #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if ( Category && Category.length > 0 ){ #\\r\\n                <span>#: Category # </span>\\r\\n                # } #\\r\\n\\r\\n                # if ( Category && Category.length > 0 && Id && Id.length > 0 ){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n\\r\\n                # if ( Id && Id.length > 0 ){ #\\r\\n                <span>#: Id # </span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                <span>#: localizationHelper.localize(\"LastWorked\") #: #: moment(kendo.toString(new Date(LastModified))).fromNow() #</span>\\r\\n            </p>\\r\\n            <p>\\r\\n                <span>#: localizationHelper.localize(\"Age\") #: #: moment(kendo.toString(new Date(Created))).fromNow() #</span>\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if ( AssignedUser && AssignedUser.length > 0 ){ #\\r\\n                <span>#: localizationHelper.localize(\"AssignedTo\") #: #: AssignedUser # </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if ( Tier && Tier.length > 0 ){ #\\r\\n                <span>#: localizationHelper.localize(\"SupportGroup\") #: #: Tier # </span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n    <div class=\"mobilegrid__header\">\\r\\n    </div>\\r\\n    <div data-bind=\"mobileWIGrid: viewModel\" data-template-name=\"gridCardList\" class=\"mobilegrid\"></div>\\r\\n    <div class=\"mobilegrid__pager\"></div>\\r\\n</div>';});\n\n","\ndefine('text!grids/mobile/view.configitem.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display: none\">\\r\\n    <div data-template-name=\"gridCardTemplate\" class=\"gridcard gridcard--config\">\\r\\n        <p class=\"gridcard__title\">#: DisplayName #</p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if ( ObjectClassName && ObjectClassName.length > 0 ){ #\\r\\n                <span>#: localizationHelper.localize(\"ObjectClassName\") # #: ObjectClassName # </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if ( Path && Path.length > 0 ){ #\\r\\n                <span>#: localizationHelper.localize(\"Path\") # #: Path # </span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n    <div class=\"mobilegrid__header\">\\r\\n    </div>\\r\\n    <div data-bind=\"mobileWIGrid: viewModel\" data-template-name=\"gridCardList\" class=\"mobilegrid\"></div>\\r\\n    <div class=\"mobilegrid__pager\"></div>\\r\\n</div>';});\n\n","\ndefine('text!grids/mobile/view.knowledgemanager.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display: none\">\\r\\n    <div data-template-name=\"gridCardTemplate\" class=\"gridcard gridcard--knowledge\">\\r\\n        <a class=\\'gridcard__action-icon\\' href=\\'javascript:;\\' onclick=\"app.lib.knowledgeManagerDeleteArticle(#:ArticleId #, this);\">\\r\\n            <i class=\\'fa fa-lg fa-trash\\'></i>\\r\\n        </a>\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'/KnowledgeBase/Edit/#:ArticleId#/\\'>#: Title #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                <span>#: ViewCount # #: localizationHelper.localize(\"Views\").toLowerCase() #</span>\\r\\n                &middot;\\r\\n                <span>#: CommentCount # #: localizationHelper.localize(\"Comments\").toLowerCase() #</span>\\r\\n            </p>\\r\\n            <p>\\r\\n                <span> #: localizationHelper.localize(\"Rating\") #: #: AverageRating #</span>\\r\\n                &middot;\\r\\n                <span> #: localizationHelper.localize(\"Popularity\") #: #: Popularity #</span>\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if ( StatusString && StatusString.length > 0 ){ #\\r\\n                <span>#: StatusString #</span>\\r\\n                # } #\\r\\n\\r\\n                # if ((LastModifiedDate && LastModifiedDate.length > 0) && (StatusString && StatusString.length > 0 )){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n\\r\\n                # if ( LastModifiedDate && LastModifiedDate.length > 0 ){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(LastModifiedDate))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n    <div class=\"mobilegrid__header\">\\r\\n    </div>\\r\\n    <div data-bind=\"mobileWIGrid: viewModel\" data-template-name=\"gridCardList\" class=\"mobilegrid\"></div>\\r\\n    <div class=\"mobilegrid__pager\"></div>\\r\\n</div>';});\n\n","\ndefine('text!grids/mobile/view.announcement.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display: none\">\\r\\n    <div data-template-name=\"gridCardTemplate\" class=\"gridcard gridcard--announcement\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'/Administration/Announcement/Edit/#: Id #\\'>#: Title #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                <span>\\r\\n                    #: moment(kendo.toString(new Date(StartDate))).format(\\'L\\') #\\r\\n                    &ndash;\\r\\n                    #: moment(kendo.toString(new Date(EndDate))).format(\\'L\\') #\\r\\n                </span>\\r\\n            </p>\\r\\n            <p>\\r\\n                <span>#: Priority # #: localizationHelper.localize(\"Priority\").toLowerCase() #</span>\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p class=\"gridcard__detailblock--truncated\">\\r\\n                #: Body #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n    <div class=\"mobilegrid__header\">\\r\\n    </div>\\r\\n    <div data-bind=\"mobileWIGrid: viewModel\" data-template-name=\"gridCardList\" class=\"mobilegrid\"></div>\\r\\n    <div class=\"mobilegrid__pager\"></div>\\r\\n</div>';});\n\n","\ndefine('text!grids/mobile/view.amGeneral.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display: none\">\\r\\n    <div data-template-name=\"CatalogItem\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", data.BaseId) #\\'>#: data.Name74d965de373c4ab1bbfd2b593997697e #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (Typeb586382a549742ed99a25853ccd3f7b5 && Typeb586382a549742ed99a25853ccd3f7b5.length > 0 ){ #\\r\\n                <span>#: Typeb586382a549742ed99a25853ccd3f7b5 # </span>\\r\\n                # } #\\r\\n\\r\\n                # if (Typeb586382a549742ed99a25853ccd3f7b5 && Typeb586382a549742ed99a25853ccd3f7b5.length > 0 && Modela71d95617f7f4e578eb4da72ada704f6 && Modela71d95617f7f4e578eb4da72ada704f6.length > 0 ){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n\\r\\n                # if (Modela71d95617f7f4e578eb4da72ada704f6 && Modela71d95617f7f4e578eb4da72ada704f6.length > 0 ){ #\\r\\n                <span>#: Modela71d95617f7f4e578eb4da72ada704f6 # </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                <span>#: localizationHelper.localize(\"LastModified\") #: #: moment(kendo.toString(new Date(LastModifiedebdc03efb57148fb89a9465d28f71c64))).fromNow() #</span>\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"LeaseContract\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringContractStatus)){ #\\r\\n                <span>#: localizationHelper.localize(\"ContractStatus\") #: #: stringContractStatus # </span>\\r\\n                # } #\\r\\n\\r\\n                # if (_.isString(stringContractStatus) && _.isNumber(stringDaysLeft)){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n                # if (_.isNumber(stringDaysLeft)){ #\\r\\n                <span>#: stringDaysLeft # #: localizationHelper.localize(\"DaysLeft\").toLowerCase() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastUpdated))).fromNow() #</span>\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"SupportAndMaintenanceContract\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringContractName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringContractStatus)){ #\\r\\n                <span>#: localizationHelper.localize(\"ContractStatus\") #: #: stringContractStatus # </span>\\r\\n                # } #\\r\\n\\r\\n                # if (_.isString(stringContractStatus) && _.isNumber(stringDaysLeft)){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n                # if (_.isNumber(stringDaysLeft)){ #\\r\\n                <span>#: stringDaysLeft # #: localizationHelper.localize(\"DaysLeft\").toLowerCase() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastUpdated)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastUpdated))).fromNow() #</span>\\r\\n                # } #\\r\\n\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"WarrantyContract\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringWarrantyName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringContractStatus)){ #\\r\\n                <span>#: localizationHelper.localize(\"ContractStatus\") #: #: stringContractStatus # </span>\\r\\n                # } #\\r\\n\\r\\n                # if (_.isString(stringContractStatus) && _.isNumber(stringDaysLeft)){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n                # if (_.isNumber(stringDaysLeft)){ #\\r\\n                <span>#: stringDaysLeft # #: localizationHelper.localize(\"DaysLeft\").toLowerCase() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastUpdated)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastUpdated))).fromNow() #</span>\\r\\n                # } #\\r\\n\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"HardwareAsset\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringHardwareAssetName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (headerHWAssetStatus && _.isString(headerHWAssetStatus)){ #\\r\\n                <span>#: localizationHelper.localize(\"Status\") #: #: headerHWAssetStatus # </span>\\r\\n                # } #\\r\\n\\r\\n                # if ((headerHWAssetStatus && _.isString(headerHWAssetStatus)) && (headerHWAssetType && _.isString(headerHWAssetType))){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n                # if (headerHWAssetType && _.isString(headerHWAssetType)){ #\\r\\n                <span>#: localizationHelper.localize(\"Type\") #: #: headerHWAssetType #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"SoftwareAsset\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringSoftwareAssetName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (headerVersion && _.isString(headerVersion)){ #\\r\\n                <span>#: localizationHelper.localize(\"Version\") #: #: headerVersion # </span>\\r\\n                # } #\\r\\n\\r\\n                # if ((headerVersion && _.isString(headerVersion)) && (stringAvailableCount && _.isString(stringAvailableCount))){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n                # if (stringAvailableCount && _.isString(stringAvailableCount)){ #\\r\\n                <span>#: localizationHelper.localize(\"Available\") #: #: stringAvailableCount #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"Consumable\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: headerConsumableName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (stringPrice && stringPrice.length > 0){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"Price\") #: #: stringPrice #\\r\\n                    # if (stringPrice && stringPrice.length > 0 && (headerCurrency && _.isString(headerCurrency))){ #\\r\\n                    #: headerCurrency #\\r\\n                    # } #\\r\\n                </span>\\r\\n                # } #\\r\\n\\r\\n                # if (stringPrice && stringPrice.length > 0 && (headerCount && _.isString(headerCount))){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n                # if (headerCount && _.isString(headerCount)){ #\\r\\n                <span>#: localizationHelper.localize(\"Available\") #: #: headerCount #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"CostCenter\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringCostCenterName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringCustodian)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"Custodian\") #: #: stringCustodian #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringOrganization)){ #\\r\\n                <span>#: localizationHelper.localize(\"Organization\") #: #: stringOrganization #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"Invoice\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>AAAAAAAA</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringInvoiceOrderNumber)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"Invoice\") #: #: stringInvoiceOrderNumber #\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (_.isString(stringInvoiceOrderNumber) && _.isString(headerInvoiceStatus)){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n                # if (_.isString(headerInvoiceStatus)){ #\\r\\n                <span>\\r\\n                    #: headerInvoiceStatus #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringVendorName)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"Vendor\") #: #: stringVendorName #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringTotalAmount)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"Total\") #: #: stringTotalAmount #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"License\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringLicenceName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringVendorName)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"Vendor\") #: #: stringVendorName #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(headerLicenceType)){ #\\r\\n                <span>\\r\\n                    #: headerLicenceType #\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (_.isString(headerLicenceType) && _.isString(headerLicenceStatus)){ #\\r\\n                <span>\\r\\n                    &middot;\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (_.isString(headerLicenceStatus)){ #\\r\\n                <span>\\r\\n                    #: headerLicenceStatus #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"Location\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringLocationName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringLocationAddress1)){ #\\r\\n                <span>\\r\\n                    #: stringLocationAddress1 #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLocationAddress2)){ #\\r\\n                <span>\\r\\n                    #: stringLocationAddress2 #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLocationCity)){ #\\r\\n                <span>\\r\\n                    #: stringLocationCity #\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (_.isString(stringLocationState)){ #\\r\\n                <span>\\r\\n                    #: stringLocationState #\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (_.isString(stringLocationCountry)){ #\\r\\n                <span>\\r\\n                    #: stringLocationCountry #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"Subnet\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringSubnetName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringIPMask)){ #\\r\\n                <span>\\r\\n                    #: stringIPMask #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringSubnetMask)){ #\\r\\n                <span>\\r\\n                    #: stringSubnetMask #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"NoticeEvent\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringTitle #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(headerNoticeSpan)){ #\\r\\n                <span>\\r\\n                    #: headerNoticeSpan #\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (_.isString(headerNoticePeriod)){ #\\r\\n                <span>\\r\\n                    #: headerNoticePeriod #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(headerDueDate)){ #\\r\\n                <span>#: localizationHelper.localize(\"DueDate\") #: #: moment(kendo.toString(new Date(headerDueDate))).format(\\'LL\\') #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"Organization\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringOrganizationName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringCostCenterName)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"CostCenter\") #: #: stringCostCenterName #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringLocationAddress1)){ #\\r\\n                <span>\\r\\n                    #: stringLocationAddress1 #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLocationAddress2)){ #\\r\\n                <span>\\r\\n                    #: stringLocationAddress2 #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLocationCity)){ #\\r\\n                <span>\\r\\n                    #: stringLocationCity #\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (_.isString(stringLocationState)){ #\\r\\n                <span>\\r\\n                    #: stringLocationState #\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (_.isString(stringLocationCountry)){ #\\r\\n                <span>\\r\\n                    #: stringLocationCountry #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"PurchaseOrder\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringPurchaseOrderNumber #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringCostCenterName)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"CostCenter\") #: #: stringCostCenterName #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringAmount)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"Amount\") #: #: stringAmount #\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (_.isString(headerCurrency)){ #\\r\\n                <span>\\r\\n                    #: headerCurrency #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(headerPurchaseOrderType)){ #\\r\\n                <span>\\r\\n                    #: headerPurchaseOrderType #\\r\\n                </span>\\r\\n                # } #\\r\\n                # if (_.isString(headerPurchaseOrderType) && _.isString(headerPurchaseOrderStatus)){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n                # if (_.isString(headerPurchaseOrderStatus)){ #\\r\\n                <span>\\r\\n                    #: headerPurchaseOrderStatus #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"Purchase\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringPurchaseName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(formLabelTitleCostCenter)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"CostCenter\") #: #: formLabelTitleCostCenter #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(formLabelTitlePurchaseOrder)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"PurchaseOrder\") #: #: formLabelTitlePurchaseOrder #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"Standard\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringStandardName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringStandardType)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"Type\") #: #: stringStandardType #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"Vendor\" class=\"gridcard gridcard--asset\">\\r\\n        <p class=\"gridcard__title\">\\r\\n            <a href=\\'#: data.parent().parent().editUrl.replace(\"|ID|\", BaseId) #\\'>#: stringVendorName #</a>\\r\\n        </p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringContact)){ #\\r\\n                <span>\\r\\n                    #: stringContact #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringTelephone)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"Telephone\") #: #: stringTelephone #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringFax)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"Fax\") #: #: stringFax #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if (_.isString(stringEmail)){ #\\r\\n                <span>\\r\\n                    #: localizationHelper.localize(\"Email\") #: #: stringEmail #\\r\\n                </span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if (_.isString(stringLastModified)){ #\\r\\n                <span>#: localizationHelper.localize(\"Updated\") # #: moment(kendo.toString(new Date(stringLastModified))).fromNow() #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n    <div class=\"mobilegrid__header\"></div>\\r\\n    <div data-bind=\"mobileWIGrid: viewModel\" class=\"mobilegrid\"></div>\\r\\n    <div class=\"mobilegrid__pager\"></div>\\r\\n</div>';});\n\n","/**\r\nMobile grid\r\n**/\r\ndefine('grids/mobile/controller',['require','text!grids/mobile/view.workitem.html','text!grids/mobile/view.configitem.html','text!grids/mobile/view.knowledgemanager.html','text!grids/mobile/view.announcement.html','text!grids/mobile/view.amGeneral.html'],function (require) {\r\n    var wiTpl = require(\"text!grids/mobile/view.workitem.html\");\r\n    var ciTpl = require(\"text!grids/mobile/view.configitem.html\");\r\n    var kmTpl = require(\"text!grids/mobile/view.knowledgemanager.html\");\r\n    var announcementTpl = require(\"text!grids/mobile/view.announcement.html\");\r\n    var amGeneralTpl = require(\"text!grids/mobile/view.amGeneral.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            var controlId = vm.containerId || vm.gridId;\r\n            var tpl = wiTpl;\r\n            var editUrl = '';\r\n\r\n            switch (vm.grid.GridType) {\r\n                case 'ConfigItem':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = ciTpl;\r\n                    break;\r\n                case 'EditableKnowledgeArticle':\r\n                    app.gridUtils.applyKmDashboardDataSourceConfig(controlId, vm);\r\n                    tpl = kmTpl;\r\n                    break;\r\n                case 'Announcement':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = announcementTpl;\r\n                    break;\r\n                case 'CatalogItem':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/CatalogItem/Edit/|ID|';\r\n                    break;\r\n                case 'LeaseContract':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Contract/Lease/Edit/|ID|';\r\n                    break;\r\n                case 'SupportAndMaintenanceContract':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Contract/SupportandMaintenance/Edit/|ID|';\r\n                    break;\r\n                case 'WarrantyContract':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Contract/Warranty/Edit/|ID|';\r\n                    break;\r\n                case 'HardwareAsset':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/HardwareAsset/Edit/|ID|';\r\n                    break;\r\n                case 'SoftwareAsset':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/SoftwareAsset/Edit/|ID|';\r\n                    break;\r\n                case 'Consumable':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/Consumables/Edit/|ID|';\r\n                    break;\r\n                case 'CostCenter':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/CostCenter/Edit/|ID|';\r\n                    break;\r\n                case 'Location':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/Location/Edit/|ID|';\r\n                    break;\r\n                case 'NoticeEvent':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/NoticeEvent/Edit/|ID|';\r\n                    break;\r\n                case 'Organization':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/Organization/Edit/|ID|';\r\n                    break;\r\n                case 'Standard':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/Standard/Edit/|ID|';\r\n                    break;\r\n                case 'Subnet':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/Subnet/Edit/|ID|';\r\n                    break;\r\n                case 'Vendor':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/Vendor/Edit/|ID|';\r\n                    break;\r\n                case 'License':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/License/Edit/|ID|';\r\n                    break;\r\n                case 'PurchaseOrder':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/PurchaseOrder/Edit/|ID|';\r\n                    break;\r\n                case 'Purchase':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/Purchase/Edit/|ID|';\r\n                    break;\r\n                case 'Invoice':\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    tpl = amGeneralTpl;\r\n                    editUrl = '/AssetManagement/Administration/Invoice/Edit/|ID|';\r\n                    break;\r\n                default:\r\n                    app.gridUtils.configureGenericGrid(controlId, vm);\r\n                    break;\r\n            }\r\n\r\n\r\n            vm.dataSource.serverPaging = true;\r\n            vm.dataSource.pageSize = 10;\r\n            vm.dataSource.page = 1;\r\n            vm.dataSource.total = 0;\r\n            vm.dataSource.serverFiltering = true;\r\n\r\n            var model = {\r\n                viewModel: {\r\n                    controlId: controlId,\r\n                    GridType: vm.grid.GridType,\r\n                    templateName: vm.grid.GridType,\r\n                    source: new kendo.data.DataSource(vm.dataSource),\r\n                    toolbar: vm.toolbar,\r\n                    tasks: vm.tasks,\r\n                    editUrl: editUrl\r\n                }\r\n            };\r\n\r\n            //Fix for BUG 19524\r\n            //set a dynamic mobile template for promoted views \r\n            if (vm.grid.dataUrl === \"/grid/GetPromotedView/\") {\r\n                var initTemplate =\r\n                    '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display: none\">' +\r\n                        '<div data-template-name=\"gridCardTemplate\" class=\"gridcard gridcard--workitem\"> \\n';\r\n\r\n                var columns = _.filter(vm.grid.columns,\r\n                    function(el) {\r\n                        return el.field.toLowerCase() !== \"icon\";\r\n                    });\r\n\r\n                editUrl = (editUrl.length > 0) ? editUrl.replace(\"|ID|\", \"#:BaseId#\")\r\n                    : \"/Search/RedirectToWorkItem?searchText=#:Id#\";\r\n\r\n                if (columns.length > 0) {\r\n\r\n                    for (var index = 0; index < columns.length; index++) {\r\n                        var item = columns[index];\r\n                        if (index === 0) {\r\n                            initTemplate += '<p class=\"gridcard__title\"> \\n';\r\n                            initTemplate += '<a href=\"' + editUrl + '\">' + item.template + '</a> \\n </p> \\n';\r\n                            initTemplate += '<div class=\"gridcard__detailblock\"> \\n';\r\n                        } else {\r\n                            initTemplate += '<p>' + item.template + '</p> \\n';\r\n                        }\r\n                    };\r\n                }\r\n                initTemplate += '</div></div></div> \\n';\r\n\r\n                initTemplate += '<div>' +\r\n                    '<div class=\"mobilegrid__header\">' +\r\n                    '</div>' +\r\n                    '<div data-bind=\"mobileWIGrid: viewModel\" data-template-name=\"gridCardList\" class=\"mobilegrid\"></div>' +\r\n                    '<div class=\"mobilegrid__pager\"></div>' +\r\n                    '</div>';\r\n\r\n                tpl = initTemplate;\r\n            }\r\n\r\n            var view = new kendo.View(tpl, { wrap: false, model: model });\r\n            callback(view.render());\r\n        }\r\n    }\r\n    return definition;\r\n});\n","define('grids/gridBuilder',[\r\n    \"grids/structure/defaultConfiguration/controller\",\r\n    \"grids/structure/events/controller\",\r\n    \"grids/structure/toolbar/controller\",\r\n    \"grids/columnTemplates/columnBase/controller\",\r\n    \"grids/columnTemplates/string/controller\",\r\n    \"grids/columnTemplates/number/controller\",\r\n    \"grids/columnTemplates/bool/controller\",\r\n    \"grids/columnTemplates/date/controller\",\r\n    \"grids/columnTemplates/SLOStatus/controller\",\r\n    \"grids/columnTemplates/command/controller\",\r\n    \"grids/columnTemplates/input/controller\",\r\n    \"grids/columnTemplates/anchor/controller\",\r\n    \"grids/structure/dataSource/controller\",\r\n    \"grids/structure/sourceFields/controller\",\r\n    \"grids/structure/drawer/controller\",\r\n    \"grids/mobile/controller\"\r\n], function (\r\n    config,\r\n    events,\r\n    toolbar,\r\n    columnBase,\r\n\r\n    string,\r\n    number, // 'numeric' also valid name\r\n    boolean,\r\n    date,    // 'datetime' also valid name\r\n    slostatus,\r\n    command,\r\n    input,\r\n    anchor,\r\n\r\n    dataSource,\r\n    sourceFields,\r\n    drawer,\r\n    mobileGrid\r\n) {\r\n\r\n    var configuration = {};\r\n    var definition = {\r\n        /*\r\n         * vm:       entire current viewModal. Usually set in the calling ___Main.js file\r\n         * node:     property on the vm for this builder. Scoped to data needed for building only\r\n         * callback: function to execute in the calling file once done.\r\n         */\r\n        build: function (vm, node, callback) {\r\n            var viewModel;\r\n            var columns = [];\r\n\r\n            //special stuff for grids that are sent from viewBuilder\r\n            if (vm.tempProperties && vm.tempProperties.fromViewBuilder) {\r\n                vm.tempProperties.fromGridBuilder = true;\r\n                var gridModel = {\r\n                    containerId: node.Id,\r\n                    isAnalyst: window.session.user.Analyst || false\r\n                }\r\n\r\n                //NOTE: node.content means it is a .js file we are loading from (old way). node.Definition.content is from the vp db table\r\n                if (node.content) {\r\n                    gridModel.grid = node.content.grid;\r\n                } else if (node.Definition) {\r\n                    gridModel.grid = node.Definition.content.grid;\r\n                }\r\n\r\n                vm.tempProperties.currentContainer.find('.append-here').append(\"<div id='\" + gridModel.containerId + \"' class='grid-container'></div>\");\r\n\r\n                viewModel = gridModel;\r\n            } else {\r\n                if (!_.isUndefined(vm.fromQueryBuilder) && vm.fromQueryBuilder) {\r\n                    viewModel = vm;\r\n                } else {\r\n                    node.layoutContainer.find('.container-fluid').append(\"<div id='\" + vm.containerId + \"' class='grid-container'></div>\");\r\n                    viewModel = vm;\r\n                }\r\n            }\r\n\r\n            // configure mobile grid views (skip standard mobile rendering for saved search grids)\r\n            if (app.isMobile() && viewModel.grid.GridType !== \"QueryBuilderGrid\") {\r\n                return toolbar.build(viewModel, viewModel.grid.options.toolbar, function (toolbarConfig) {\r\n                    viewModel.toolbar = toolbarConfig.toolbar;\r\n\r\n                    var columns = [];\r\n\r\n                    //pull in column data \r\n                    _.each(viewModel.grid.columns, function (column) {\r\n                        if (column.analystOnly && !viewModel.isAnalyst) {\r\n                            //analyst only column, don't render\r\n                            return false;\r\n                        }\r\n\r\n                        column.DataType = column.DataType.toLowerCase();\r\n                        switch (column.DataType) {\r\n                        case 'datetime':\r\n                            column.DataType = 'date';\r\n                            column.template = \"#: \" + column.field + \" != null || \" + column.field + \" != undefined ? kendo.toString(new Date(\" + column.field + \"), 'g'): '' #\";\r\n                            break;\r\n                        case 'date':\r\n                            column.template = \"#: \" + column.field + \" != null || \" + column.field + \" != undefined ? kendo.toString(new Date(\" + column.field + \"), 'g'): '' #\";\r\n                            break;\r\n                        case 'numeric':\r\n                            column.template = \"#: (\" + column.field + \") ? \" + kendo.toString(column.field, 'n') + \" : 0 #\";\r\n                            column.DataType = 'number';\r\n                            break;\r\n                        default:\r\n                            column.template = \"#: (\" + column.field + \") ? \" + column.field + \" : '' #\";\r\n                            break;\r\n                        }\r\n\r\n                        columns.push(column);\r\n                    });\r\n\r\n                    viewModel.grid.columns = columns;\r\n\r\n                    mobileGrid.build(viewModel, node, callback);\r\n                });\r\n            }\r\n\r\n            // configure desktop grid views\r\n            config.build(viewModel, viewModel.grid.options, function (defaultConfig) {\r\n                configuration = viewModel.grid.options;\r\n                //configuration obj now hold all default config plus custom config\r\n                events.build(viewModel, viewModel.grid.events, function () {\r\n                    configuration.events = viewModel.events;\r\n                    if (viewModel.builtinEvents) {\r\n                        _.each(viewModel.builtinEvents, function (event, key) {\r\n                            viewModel.grid.options[key] = event;\r\n                        });\r\n                    }\r\n                });\r\n\r\n                toolbar.build(viewModel, viewModel.grid.options.toolbar, function (toolbarConfig) {\r\n                    configuration.toolbar = toolbarConfig.toolbar;\r\n                });\r\n\r\n                //pull in column data \r\n                _.each(viewModel.grid.columns, function (column) {\r\n                    if (column.analystOnly && !viewModel.isAnalyst) {\r\n                        //analyst only column, don't render\r\n                        return false;\r\n                    }\r\n\r\n                    column.DataType = column.DataType.toLowerCase();\r\n                    switch (column.DataType) {\r\n                        case 'datetime':\r\n                            column.DataType = 'date';\r\n                            column.template = \"#= \" + column.field + \" != null || \" + column.field + \" != undefined ? kendo.toString(new Date(\" + column.field + \"), 'g'): '' #\";\r\n                            break;\r\n                        case 'date':\r\n                            column.template = \"#= \" + column.field + \" != null || \" + column.field + \" != undefined ? kendo.toString(new Date(\" + column.field + \"), 'g'): '' #\";\r\n                            break;\r\n                        case 'numeric':\r\n                            column.DataType = 'number';\r\n                            break;\r\n                        default:\r\n                    }\r\n\r\n                    try {\r\n                        eval(\"var _obj = \" + column.DataType + \";\");\r\n                    } catch (e) {\r\n                        throw new app.lib.exception(column.DataType + ' not found');\r\n                    }\r\n\r\n                    columnBase.build(viewModel, column, function (col) {\r\n                        if (!_.isUndefined(_obj)) {\r\n                            //extend column build for specific datatype\r\n                            _obj.build(viewModel, col, function (templateCol) {\r\n                                columns.push(templateCol);\r\n                            });\r\n                        } else {\r\n                            columns.push(col);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                configuration.columns = columns;\r\n\r\n                dataSource.build(viewModel, viewModel.grid.dataSourceOptions, function () {\r\n                    //vm.dataSource now contains the right values minus the schema fields and read data\r\n                    sourceFields.build(viewModel, viewModel.grid.columns, function () {\r\n                        //datasource model fields are set now        \r\n                        configuration.dataBound = viewModel.onDataBound;\r\n                        configuration.change = viewModel.onGridChange;\r\n                        configuration.columnReorder = viewModel.onColumnReorder;\r\n                        configuration.columnResize = viewModel.onColumnResize;\r\n                        configuration.columnShow = viewModel.onColumnShow;\r\n                        configuration.columnHide = viewModel.onColumnHide;\r\n                        configuration.dataSource = new kendo.data.DataSource(viewModel.dataSource);\r\n                        configuration.dsConfig = viewModel.dataSource;\r\n\r\n\r\n\r\n                        //bug 11874: workaround for filter menu hover issue on new version of chrome. \r\n                        //workaround reference: http://www.telerik.com/forums/issue-with-grid-filter-(on-chrome-55-0-2883-75)\r\n                        configuration.columnMenuInit = function (e) {\r\n                            var menu = e.container.find(\".k-menu\").data(\"kendoMenu\");\r\n                            menu.bind('activate', function (e) {\r\n                                if (e.item.is(':last-child')) {\r\n                                    // if an element in the submenu is focused first, the issue is not observed\r\n                                    e.item.find('span.k-dropdown.k-header').first().focus();\r\n                                    e.item.find('input').first().focus();\r\n                                }\r\n                            });\r\n                        };\r\n                    });\r\n                });\r\n\r\n                //todo: branch for mobile drawer binding..\r\n                drawer.build(viewModel, viewModel.grid.drawerMenu);\r\n\r\n                if (vm.tempProperties.fromViewBuilder) {\r\n                    vm.gridModels = vm.gridModels || [];\r\n\r\n                    var gridWrapper;\r\n                    if (node.layoutSize == \"small\") {\r\n                        gridWrapper = $(\"<div id='\" + viewModel.containerId + \"' class='grid-container grid-minimal'></div>\");\r\n                    } else {\r\n                        gridWrapper = $(\"<div id='\" + viewModel.containerId + \"' class='grid-container'></div>\");\r\n                    }\r\n\r\n                    vm.gridModels.push({\r\n                        config: configuration,\r\n                        containerId: viewModel.containerId,\r\n                        refreshInterval: node.refreshInterval,\r\n                        gridJsonDataForCountdown: viewModel.gridJsonDataForCountdown\r\n                    });\r\n\r\n                    callback(gridWrapper);\r\n                } else {\r\n                    callback(configuration);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\n","\ndefine('text!viewPanels/queryBuilder/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n\\r\\n    <div data-template-name=\"sectionTemplate\">\\r\\n        <div class=\"query-or\" data-bind=\"localize: Or, invisible: isFirstSection\"></div>\\r\\n        <label data-bind=\"localize: {key: QuerySectionTitle, value: displayName, localizeValue: false}\"></label>\\r\\n        <div data-template=\"rootCriteriaTemplate\" data-bind=\"source:criteriaRoot\"></div>\\r\\n        <!--<input type=\"checkbox\" data-bind=\"checked:showJson\" /> ShowJson\\r\\n        <div data-bind=\"prettyJson:criteriaRoot, visible: showJson\"></div>-->\\r\\n    </div>\\r\\n\\r\\n    <span data-template-name=\"isnull\"></span>\\r\\n    <span data-template-name=\"isnotnull\"></span>\\r\\n    <span data-template-name=\"isme\"></span>\\r\\n    <span data-template-name=\"isnotme\"></span>\\r\\n\\r\\n    <div data-template-name=\"rootCriteriaTemplate\" class=\"rules-group-container\">\\r\\n        <div class=\"section-header\">\\r\\n\\r\\n            <div class=\"pull-right\">\\r\\n                <button class=\"btn btn-primary k-button\" data-bind=\"click: createCriteriaGroup, localize: AddGroup\">*AddGroup*</button>\\r\\n                <button class=\"btn btn-primary k-button\" data-bind=\"click: createCriteria, localize: AddFilter\">*AddFilter*</button>\\r\\n                <button class=\"btn btn-danger k-button\" data-bind=\"click: removeCriteria, localize: Remove\">*Remove*</button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\"rules-group-header\">\\r\\n\\r\\n            <select data-bind=\"value:groupOperator\">\\r\\n                <option value=\"And\" data-bind=\"localize: And\">*And*</option>\\r\\n                <option value=\"Or\" data-bind=\"localize: Or\">*Or*</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <!--<span data-bind=\"text:type\"></span><input data-bind=\"value: value\" />-->\\r\\n        <div class=\"rules-group-body\">\\r\\n            <div data-template=\"criteriaItemContainer\" data-bind=\"source:items\" class=\"rules-list\"></div>\\r\\n        </div>\\r\\n        <!--<button data-bind=\"click: createCriteriaGroup\">Add Group</button>\\r\\n        <button data-bind=\"click: createCriteria\">Add Filter</button>-->\\r\\n    </div>\\r\\n\\r\\n    <div class=\"rule-container defined-form\" role=\"form\" data-template-name=\"criteriaItemContainer\" data-bind=\"templateSwitch:type\">\\r\\n        <div data-case=\"criteriaGroupTemplate\" class=\"rule-group-container\">\\r\\n            <!--<button data-bind=\"click:createCriteriaGroup\">add group</button>-->\\r\\n            <div data-template=\"rootCriteriaTemplate\" data-bind=\"source:this\"></div>\\r\\n        </div>\\r\\n        <div data-case=\"criteriaTemplate\" class=\"form-inline\">\\r\\n            <div class=\"form-group\">\\r\\n                <input data-role=\"combobox\"\\r\\n                       data-placeholder=\"Choose field...\"\\r\\n                       data-text-field=\"displayName\"\\r\\n                       data-value-primitive=\"false\"\\r\\n                       data-value-field=\"name\"\\r\\n                       data-bind=\"value: field, source: fields, events:{change:onFieldChanged}\"\\r\\n                       class=\"\" />\\r\\n            </div>\\r\\n            <div class=\"form-group\">\\r\\n                <input data-role=\"dropdownlist\"\\r\\n                       data-placeholder=\"...\"\\r\\n                       data-text-field=\"display\"\\r\\n                       data-value-primitive=\"true\"\\r\\n                       data-value-field=\"name\"\\r\\n                       data-bind=\"value: operator, source: validOperators, events:{change:onOperatorChanged}\"\\r\\n                       class=\"rule-container-operator\" />\\r\\n            </div>\\r\\n            <div data-bind=\"templateSwitch: field.fieldType, visible: showCriteriaControl\" class=\"form-group\"></div>\\r\\n\\r\\n            <button type=\"submit\" class=\"btn btn-danger k-button\" data-bind=\"click: removeCriteria, localize: Remove\"></button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!--field type templates-->\\r\\n    <div data-template-name=\"enumTemplate\" data-url=\"/api/V3/Enum/GetList\" data-bind=\"ciresonEnumPicker:field.templateValue, value:value.enumValue\"></div>\\r\\n    <div data-template-name=\"affectedconfigitemTemplate\" data-bind=\"ciresonConfigItemBehavior: value.configItemValue\" class=\"config-item-dropdown\">\\r\\n        <div data-template-part=\"dropDownTreePart\" data-url=\"/api/V3/Config/GetAffectedItemsList/\" data-bind=\"ciresonDropDownTree:field.templateValue, value:value.configItemValue\">\\r\\n            <span class=\"config-search\" data-template-part=\"searchButtonPart\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div data-template-name=\"relatedconfigitemTemplate\" data-bind=\"ciresonConfigItemBehavior: value.configItemValue\" class=\"config-item-dropdown\">\\r\\n        <div data-template-part=\"dropDownTreePart\" data-url=\"/api/V3/Config/GetAffectedItemsList/\" data-bind=\"ciresonDropDownTree:field.templateValue, value:value.configItemValue\">\\r\\n            <span class=\"config-search\" data-template-part=\"searchButtonPart\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <span data-template-name=\"stringTemplate\" class=\"search-text\">\\r\\n        <input class=\"k-textbox input-sm search-text\" data-default data-bind=\"value: value.stringValue\" />\\r\\n    </span>\\r\\n    <span data-template-name=\"doubleTemplate\" class=\"search-text\">\\r\\n        <input data-role=\"numerictextbox\"\\r\\n               ddata-format=\"#\"\\r\\n               data-min=\"0\"\\r\\n               data-step=\"1\"\\r\\n               data-decimal=\"0\"\\r\\n               data-bind=\"value: value.stringValue\"\\r\\n               class=\"\" />\\r\\n    </span>\\r\\n    <div data-template-name=\"boolTemplate\">\\r\\n        <div class=\"form-group\">\\r\\n            <input data-role=\"combobox\"\\r\\n                   data-text-field=\"name\"\\r\\n                   data-value-field=\"value\"\\r\\n                   data-value-primitive=\"true\"\\r\\n                   data-placeholder=\"...\"\\r\\n                   data-source=\"[{ name: \\'True\\', value: \\'1\\' },{ name: \\'False\\', value: \\'0\\' }]\"\\r\\n                   data-bind=\"value: value.stringValue\"\\r\\n                   class=\"\" />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-template-name=\"dateTemplate\" data-bind=\"templateSwitch:operator\">\\r\\n        <div data-default>\\r\\n            <div data-bind=\"ciresonRelativeDatePicker:value.isRelative\">\\r\\n                <span data-bind=\"visible:value.isRelative\">\\r\\n                    <span class=\"form-group\">\\r\\n                        <input data-role=\"numerictextbox\"\\r\\n                               ddata-format=\"#\"\\r\\n                               data-min=\"0\"\\r\\n                               data-step=\"1\"\\r\\n                               data-decimal=\"0\"\\r\\n                               data-bind=\"visible:showNumericPicker, value: value.numericValue, events:{change: dropdownChange}\"\\r\\n                               class=\"\" />\\r\\n                    </span>\\r\\n                    <span class=\"form-group\">\\r\\n                        <input data-role=\"combobox\"\\r\\n                               data-text-field=\"name\"\\r\\n                               data-value-field=\"value\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-placeholder=\"...\"\\r\\n                               data-bind=\"value: value.relativeDateValue, source: dropdownDataSource, events:{change: dropdownChange}\"\\r\\n                               class=\"\" />\\r\\n                    </span>\\r\\n                </span>\\r\\n                <span class=\"form-group\" data-bind=\"visible:showDatePicker\">\\r\\n                    <input data-parse-formats=\"yyyy-MM-ddThh:mm:ss\" data-bind=\"value: value.dateValue, ciresonDateTimePicker:value.dateValue\" />\\r\\n                </span>\\r\\n                <span class=\"relative-datetime form-group\">\\r\\n                    <label class=\" checkbox\">\\r\\n                        <input type=\"checkbox\" data-bind=\"checked: value.isRelative\" />\\r\\n                        <span data-bind=\"localize:RelativeDate\" class=\"checkbox-label\"></span>\\r\\n                    </label>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div data-case=\"between\">\\r\\n            <div data-bind=\"ciresonRelativeDatePicker:value.isRelative\">\\r\\n                <span data-bind=\"visible:value.isRelative\">\\r\\n                    <span class=\"form-group\">\\r\\n                        <input data-role=\"numerictextbox\"\\r\\n                               ddata-format=\"#\"\\r\\n                               data-min=\"0\"\\r\\n                               data-step=\"1\"\\r\\n                               data-decimal=\"0\"\\r\\n                               data-bind=\"visible:showNumericPicker, value: value.numericValue, events:{change: dropdownChange}\"\\r\\n                               class=\"\" />\\r\\n                    </span>\\r\\n                    <span class=\"form-group\">\\r\\n                        <input data-role=\"combobox\"\\r\\n                               data-text-field=\"name\"\\r\\n                               data-value-field=\"value\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-placeholder=\"...\"\\r\\n                               data-bind=\"value: value.relativeDateValue, source: dropdownDataSource, events:{change: dropdownChange}\"\\r\\n                               class=\"\" />\\r\\n                    </span>\\r\\n                </span>\\r\\n                <span class=\"form-group\" data-bind=\"visible:showDatePicker\">\\r\\n                    <input data-parse-formats=\"yyyy-MM-ddThh:mm:ss\" data-bind=\"value: value.dateValue, ciresonDateTimePicker:value.dateValue\" />\\r\\n                </span>\\r\\n                <span class=\"relative-datetime form-group\">\\r\\n                    <label class=\" checkbox\">\\r\\n                        <input type=\"checkbox\" data-bind=\"checked: value.isRelative\" />\\r\\n                        <span data-bind=\"localize:RelativeDate\" class=\"checkbox-label\"></span>\\r\\n                    </label>\\r\\n                </span>\\r\\n            </div>\\r\\n            -\\r\\n            <div data-bind=\"ciresonRelativeEndDatePicker:this\">\\r\\n                <span data-bind=\"visible:value.isEndRelative\">\\r\\n                    <span class=\"form-group\">\\r\\n                        <input data-role=\"numerictextbox\"\\r\\n                               ddata-format=\"#\"\\r\\n                               data-min=\"0\"\\r\\n                               data-step=\"1\"\\r\\n                               data-decimal=\"0\"\\r\\n                               data-bind=\"visible:value.showEndNumericPicker, value: value.numericEndValue, events:{change: dropdownEndChange}\"\\r\\n                               class=\"\" />\\r\\n                    </span>\\r\\n                    <span class=\"form-group\">\\r\\n                        <input data-role=\"combobox\"\\r\\n                               data-text-field=\"name\"\\r\\n                               data-value-field=\"value\"\\r\\n                               data-value-primitive=\"true\"\\r\\n                               data-placeholder=\"...\"\\r\\n                               data-bind=\"value: value.relativeEndDateValue, source: dropdownDataSource, events:{change: dropdownEndChange}\"\\r\\n                               class=\"\" />\\r\\n                    </span>\\r\\n                </span>\\r\\n                <span data-bind=\"visible:value.showEndDatePicker\">\\r\\n                    <input data-parse-formats=\"yyyy-MM-ddThh:mm:ss\" data-bind=\"value: value.endValue, ciresonDateTimePicker:value.endValue\" />\\r\\n                </span>\\r\\n                <span class=\"relative-datetime\">\\r\\n                    <label class=\" checkbox\">\\r\\n                        <input type=\"checkbox\" data-bind=\"checked: value.isEndRelative\" />\\r\\n                        <span data-bind=\"localize:RelativeDate\" class=\"checkbox-label\"></span>\\r\\n                    </label>\\r\\n                </span>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    <!--row template for objectView tables.-->\\r\\n    <table>\\r\\n        <tr data-template-name=\"keyValueRowTemplate\">\\r\\n            <td data-bind=\"text:key\"></td>\\r\\n            <td data-bind=\"text:val\"></td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <div data-template-name=\"userTemplate\">\\r\\n        <div class=\"input-group user-picker\" data-default data-bind=\"ciresonUserPickerBehavior: value.userValue\">\\r\\n            <div data-template-part=\"userDetailWindowPart\" data-title=\"Window Title goes here\">\\r\\n                <table><tbody data-template=\"keyValueRowTemplate\" data-bind=\"source: userDetailDataSource\"></tbody></table>\\r\\n            </div>\\r\\n\\r\\n            <div class=\"input-group ad-user-group\">\\r\\n                <span tabindex=\"-1\" role=\"presentation\" class=\"k-widget k-autocomplete k-header form-control k-state-default\" data-bind=\"style:{paddingLeft: paddingLeft}\">\\r\\n                    <i class=\"ad-user-info fa fa-info-circle cursor-pointer info-icon text-primary\" data-template-part=\"detailsButtonPart\" data-bind=\"visible: value.userValue.Id\"></i>\\r\\n                    <input data-template-part=\"autoCompleteInputPart\" data-value-primitive=\"false\" data-bind=\"value:value.userValue\" type=\"text\" class=\"ad-user-input form-control k-input\" data-role=\"autocomplete\" autocomplete=\"off\" role=\"textbox\" aria-haspopup=\"true\" aria-disabled=\"false\" aria-readonly=\"false\" aria-autocomplete=\"both\" aria-owns=\"\" style=\"width: 100%;\">\\r\\n                    <span class=\"ad-user-search searchIcon\" data-template-part=\"searchButtonPart\">\\r\\n                        <i class=\"fa fa-search cursor-pointer text-primary\"></i>\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!--listview template-->\\r\\n    <div data-template-name=\"mobileGridTemplate\" class=\"gridcard gridcard--workitem\">\\r\\n        <p class=\"gridcard__title\">#: Title #</p>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if ( Priority && Priority.length > 0 ){ #\\r\\n                <span>#: localizationHelper.localize(\"Priority\") # #: Priority # </span>\\r\\n                # } #\\r\\n\\r\\n                # if ( Priority && Priority.length > 0 && AffectedUser && AffectedUser.length > 0 ){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n\\r\\n                # if ( AffectedUser && AffectedUser.length > 0 ){ #\\r\\n                <span>#: AffectedUser #</span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if ( Category && Category.length > 0 ){ #\\r\\n                <span>#: Category # </span>\\r\\n                # } #\\r\\n\\r\\n                # if ( Category && Category.length > 0 && Id && Id.length > 0 ){ #\\r\\n                &middot;\\r\\n                # } #\\r\\n\\r\\n                # if ( Id && Id.length > 0 ){ #\\r\\n                <span>#: Id # </span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                <span>#: localizationHelper.localize(\"LastWorked\") #: #: moment(kendo.toString(new Date(LastModified))).fromNow() #</span>\\r\\n            </p>\\r\\n            <p>\\r\\n                <span>#: localizationHelper.localize(\"Age\") #: #: moment(kendo.toString(new Date(Created))).fromNow() #</span>\\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\"gridcard__detailblock\">\\r\\n            <p>\\r\\n                # if ( AssignedUser && AssignedUser.length > 0 ){ #\\r\\n                <span>#: localizationHelper.localize(\"AssignedTo\") #: #: AssignedUser # </span>\\r\\n                # } #\\r\\n            </p>\\r\\n            <p>\\r\\n                # if ( Tier && Tier.length > 0 ){ #\\r\\n                <span>#: localizationHelper.localize(\"SupportGroup\") #: #: Tier # </span>\\r\\n                # } #\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!--end field type templates-->\\r\\n</div>\\r\\n\\r\\n<div class=\"defined-form\" data-bind=\"events: {keypress: searchOnEnter}\">\\r\\n\\r\\n    <button class=\"wi-search-edit-btn btn btn-link btn-default k-button pull-right\" data-bind=\"toggleValue: editMode, localize:Edit, visible: validActions.save\"></button>\\r\\n\\r\\n    <div data-bind=\"slide: editMode\" style=\"display:none\" class=\"wi-search-wrapper\">\\r\\n\\r\\n        <div class=\"form-inline margin-b20\">\\r\\n            <div class=\"form-group\">\\r\\n                <label data-bind=\"localize:AddWorkItemTypeSectionToSearchBy\"></label>\\r\\n                <div data-role=\"dropdownlist\" data-placeholder=\"Choose Work Item Type\"  data-bound=\"updateModel\" data-text-field=\"displayName\" data-bind=\"source: sectionDefs, value: selectedSection\"></div>\\r\\n            </div>\\r\\n            <div class=\"form-group\">\\r\\n                <label> &nbsp;</label> <!--trick to line up button-->\\r\\n                <button class=\"btn btn-primary k-button\" data-bind=\"click: addCriteriaSection, localize:AddSection\"></button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div data-template=\"sectionTemplate\" data-bind=\"source: query\"></div>\\r\\n        <button data-bind=\"drawerMenuCommand:{titleKey: SearchButton, icon: fa-search, command: executeSearch, visible: validActions.search}\"></button>\\r\\n\\r\\n        <div data-bind=\"modalDialogBehavior:this, dialogConfirmAction:clearQuery\">\\r\\n            <div data-template-part=\"dialogWindowPart\" data-title=\"ClearQuery\" style=\"min-height:150px; min-width:300px;\">\\r\\n                <span data-bind=\"localize: clearQueryPrompt\">*clearquery?*</span>\\r\\n                <div class=\"window-buttons\">\\r\\n                    <button class=\"btn btn-primary k-button\" data-template-part=\"commandPart\" data-bind=\"localize:Yes, click:clearQuery\"></button>\\r\\n                    <button class=\"btn btn-default k-button\" data-template-part=\"commandPart\" data-bind=\"localize:No\"></button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button data-template-part=\"openTriggerPart\" data-bind=\"drawerMenuCommand:{titleKey: ClearQuery, icon: fa-times, visible: validActions.clearQuery}\">*ClearQuery*</button>\\r\\n        </div>\\r\\n        <div data-bind=\"modalDialogBehavior:this, dialogConfirmAction:saveQuery\">\\r\\n            <div data-template-part=\"dialogWindowPart\" data-title=\"savequery\" style=\"min-height:150px; min-width:350px;\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label data-bind=\"localize: QueryName\"></label>\\r\\n                    <input type=\"text\" class=\"form-control k-textbox\" data-bind=\"value:queryName\" data-value-update=\"keyup\">\\r\\n                    <div class=\"error\" data-bind=\"visible: queryNameInValid, localize: QueryNameAlphaNumericValidationError\"></div>\\r\\n                </div>\\r\\n                <div class=\"window-buttons\">\\r\\n                    <button class=\"btn btn-primary k-button\" data-template-part=\"commandPart\" data-bind=\"click:saveQuery, enabled: queryNameValid, localize:Save\">*Save*</button>\\r\\n                    <button class=\"btn btn-default k-button\" data-template-part=\"commandPart\" data-bind=\"localize:Cancel\">*Cancel*</button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button data-template-part=\"openTriggerPart\" data-bind=\"drawerMenuCommand:{titleKey: Save, icon: fa-check, visible: validActions.save}\">*Save*</button>\\r\\n        </div>\\r\\n        <div data-bind=\"modalDialogBehavior:this, dialogConfirmAction:saveQueryAs\">\\r\\n            <div data-template-part=\"dialogWindowPart\" data-title=\"savequeryas\" style=\"min-height:150px; min-width:350px;\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label data-bind=\"localize: QueryName\"></label>\\r\\n                    <input type=\"text\" class=\"form-control k-textbox\" data-bind=\"value:queryName\" data-value-update=\"keyup\">\\r\\n                    <div class=\"error\" data-bind=\"visible: queryNameInValid, localize: QueryNameAlphaNumericValidationError\"></div>\\r\\n                </div>\\r\\n                <div class=\"window-buttons\">\\r\\n                    <button class=\"btn btn-primary k-button\" data-template-part=\"commandPart\" data-bind=\"click:saveQueryAs, enabled: queryNameValid, localize:SaveAs\">*saveas*</button>\\r\\n                    <button class=\"btn btn-default k-button\" data-template-part=\"commandPart\" data-bind=\"localize:Cancel\">*cancel*</button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button data-template-part=\"openTriggerPart\" data-bind=\"drawerMenuCommand:{titleKey: SaveAs, icon: fa-save, visible: validActions.saveAs}\"></button>\\r\\n        </div>\\r\\n        <div data-bind=\"modalDialogBehavior:this, dialogConfirmAction:deleteQuery\">\\r\\n            <div data-template-part=\"dialogWindowPart\" data-title=\"deletequery\" style=\"min-height:150px; min-width:300px;\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label data-bind=\"localize: DeleteQuery\"></label>\\r\\n                    <span data-bind=\"text:queryName\"></span>\\r\\n                </div>\\r\\n                <div class=\"window-buttons\">\\r\\n                    <button class=\"btn btn-primary k-button\" data-template-part=\"commandPart\" data-bind=\"click:deleteQuery, enabled: queryName, localize:Delete\">*Delete*</button>\\r\\n                    <button class=\"btn btn-default k-button\" data-template-part=\"commandPart\" data-bind=\"localize:Cancel\">*Cancel*</button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button data-template-part=\"openTriggerPart\" data-bind=\"drawerMenuCommand:{titleKey: Delete, icon: fa-trash, visible: validActions.delete}\">*Delete*</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!--<div data-role=\"treeview\" data-template=\"criteriaTreeNodeTemplate\" data-bind=\"source:criteriaRoot\"></div>-->\\r\\n    <!--<div data-bind=\"prettyJson: sections\"></div>-->\\r\\n\\r\\n\\r\\n\\r\\n    <div data-bind=\"ciresonGrid: gridVm\" class=\"wi-search-results\"></div>\\r\\n\\r\\n    <!--<div style=\"padding-top:40px\" class=\"query-builder-grid-wrapper\"></div>-->\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!viewPanels/chart/view.html',[],function () { return '<div id=\"chart\"  data-bind=\"visible: view.controller.isVisible\"></div>\\r\\n';});\n\n","/**\nchart\n**/\ndefine('viewPanels/chart/controller',['require','text!viewPanels/chart/view.html'],function (require) {\n    var tpl = require(\"text!viewPanels/chart/view.html\");\n\n    var definition = {\n        template: tpl,\n        build: function (vm, node, callback) {\n            var view;\n            var promises = [];\n            viewModel = {\n                view: {\n                    //set up controller methods and values\n                    controller: {\n                        title: node.Definition.content.title,\n                        isVisible: true,\n                        queryId: node.Definition.content.queryId,\n                        series: node.Definition.content.series,\n                        categoryAxis: node.Definition.content.categoryAxis,\n                        seriesColors: node.Definition.content.seriesColors,\n                        isLegendVisible: node.Definition.content.isLegendVisible,\n                        dataSourceGroup: node.Definition.content.dataSourceGroup,\n                        dataSourceSort: node.Definition.content.dataSourceSort,\n                        legendPosition: node.Definition.content.legendPosition || \"bottom\"\n                    },\n                    buildView: function() {\n                        //build template using underscore.js so that we can interpret kendo template vars if needed\n                        var built = _.template(tpl);\n\n                        view = new kendo.View(built(), { wrap: false, model: viewModel });\n                        callback(view.render());\n                    },\n                    buildChart: function () {\n                        var chartEle = $(view.element[0]);\n                        var defaultSeriesColor = [\"#4183D7\", \"#D24D57\", \"#2ECC71\", \"#F5D76E\", \"#D2527F\", \"#913D88\", \"#F89406\", \"#5C97BF\", \"#D91E18\",\n                            \"#26A65B\", \"#F7CA18\", \"#E08283\", \"#663399\", \"#E67E22\", \"#81CFE0\", \"#EF4836\", \"#90C695\", \"#F4D03F\", \"#8E44AD\",\n                            \"#D35400\", \"#2C3E50\", \"#CF000F\", \"#87D37C\", \"#F5AB35\", \"#E26A6A\", \"#913D88\", \"#F39C12\", \"#446CB3\", \"#96281B\", \"#1E824C\",\n                            \"#FDE3A7\", \"#F62459\", \"#AEA8D3\", \"#F9690E\", \"#336E7B\", \"#4DAF7C\", \"#F9BF3B\", \"#EB9532\"]; //http://www.flatuicolorpicker.com/\n\r\n                        //defining datasource\r\n                        var dataSourceSettings = {\r\n                            transport: {\r\n                                read: {\r\n                                    url: app.lib.addUrlParam(\"/Dashboard/GetDashboardData\", \"queryId\", viewModel.view.controller.queryId),\n                                    dataType: \"json\",\n                                    cache: false\r\n                                }\r\n                            },\n                            requestStart: function () {\r\n                                this.defferred = $.Deferred();\n                                promises.push(this.defferred.promise());\r\n                            },\n                            change: function () {\r\n                                this.defferred.resolve();\r\n                            }\r\n                        };\n\n                        if (!_.isUndefined(viewModel.view.controller.dataSourceGroup)) {\r\n                            dataSourceSettings.group = viewModel.view.controller.dataSourceGroup;\r\n                        }\n\n                        if (!_.isUndefined(viewModel.view.controller.dataSourceSort)) {\r\n                            dataSourceSettings.sort = viewModel.view.controller.dataSourceSort;\r\n                        }\n\n                        var dataSource = new kendo.data.DataSource(dataSourceSettings);\n                       \n                        //defining chart series\n                        var chartSeries = [];\n                        var series = viewModel.view.controller.series;\n                        for (var item in series) {\r\n                            if (!_.isUndefined(viewModel.view.controller.categoryAxis))\n                                series[item].categoryField = viewModel.view.controller.categoryAxis.field;\n                            series[item].name = viewModel.view.getLocalizedText(series[item].name);\n                            series[item].overlay = { gradient: \"none\" };\n                            chartSeries.push(series[item]);\r\n                        }\r\n\n                        //build the chart\n                        chartEle.kendoChart({\r\n                            theme: \"bootstrap\",\n                            title: viewModel.view.getLocalizedText(viewModel.view.controller.title),\n                            tooltip: {\r\n                                visible: true,\n                                template: \"#= !_.isUndefined(series.name)?series.name:category # - #= value #\",\r\n                            },\n                            legend: { visible: (!_.isUndefined(viewModel.view.controller.isLegendVisible)) ? viewModel.view.controller.isLegendVisible : true, position: viewModel.view.controller.legendPosition },\n                            seriesColors: (!_.isUndefined(viewModel.view.controller.seriesColors)) ? viewModel.view.controller.seriesColors : defaultSeriesColor,\n                            categoryAxis: viewModel.view.controller.categoryAxis,\n                            series: chartSeries,\n                            render: function (e) {\r\n                                app.lib.mask.remove();\r\n                            },\r\n                            seriesDefaults: {\r\n                                type: \"column\"\r\n                            },\r\n                            dataSource: dataSource\r\n                        });\n                    },\n                    getLocalizedText: function (localizationKey) {\n                        var localizedText = (!_.isUndefined(localization[localizationKey]) && [localizationKey].length > 0) ? localization[localizationKey] : localizationKey;\n                        return localizedText;\n                    },\n                    shortenLabel: function (value, maxLength) {\n                        if (value.length > maxLength) {\n                            value = value.substring(0, maxLength) + \"...\";\n                        }\n                        return value;\n                    }\n                }\n            }\n            viewModel.view.buildView();\n            viewModel.view.buildChart();\n        }\n    }\n\n    return definition;\n\n});\n\n","\ndefine('text!viewPanels/radialGauge/view.html',[],function () { return '<div data-role=\"radialgauge\"\\r\\n     data-bind=\"visible: view.controller.isVisible, value: view.controller.value\">\\r\\n</div>\\r\\n';});\n\n","/**\r\nchart\r\n**/\r\ndefine('viewPanels/radialGauge/controller',['require','text!viewPanels/radialGauge/view.html'],function (require) {\r\n    var tpl = require(\"text!viewPanels/radialGauge/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var view;\r\n            viewModel = {\r\n                view: {\r\n                    //set up controller methods and values\r\n                    controller: {\r\n                        title: viewModel.view.getLocalizedText(node.Definition.content.title),\r\n                        isVisible: true,\r\n                        queryId: node.Definition.content.queryId,\r\n                        valueField: node.Definition.content.valueField,\r\n                        min: node.Definition.content.min,\r\n                        max: node.Definition.content.max,\r\n                        startAngle: node.Definition.content.startAngle,\r\n                        endAngle: node.Definition.content.endAngle,\r\n                        labels: node.Definition.content.labels,\r\n                        ranges: node.Definition.content.ranges,\r\n                        value: 0,\r\n                        pointerColor: node.Definition.content.pointerColor\r\n                    },\r\n                    buildView: function() {\r\n                        //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                        var built = _.template(tpl);\r\n\r\n                        view = new kendo.View(built(), { wrap: false, model: viewModel });\r\n\r\n                        //set value for gauge pointer\r\n                        viewModel.view.controller.value = viewModel.view.getGaugeValue();\r\n\r\n                        callback(view.render());\r\n                    },\r\n                    setRadialGaugeScale: function() {\r\n                       var gauge= $(view.element[0]).kendoRadialGauge({\r\n                           theme: \"bootstrap\",\r\n                           pointer: {\r\n                               color: !_.isUndefined(viewModel.view.controller.pointerColor) ? viewModel.view.controller.pointerColor : \"#000\"\r\n                           },\r\n                           scale: {\r\n                               max: !_.isUndefined(viewModel.view.controller.max) ? viewModel.view.controller.max : 100,\r\n                               startAngle: !_.isUndefined(viewModel.view.controller.startAngle) ? viewModel.view.controller.startAngle : -50,\r\n                               endAngle: !_.isUndefined(viewModel.view.controller.endAngle) ? viewModel.view.controller.endAngle : 230,\r\n                               labels: viewModel.view.controller.labels,\r\n                               ranges: viewModel.view.controller.ranges,\r\n\r\n                           }\r\n                        });\r\n                    },\r\n                    getGaugeValue: function () {\r\n                        if (_.isUndefined(viewModel.view.controller.queryId)) { return; }\r\n                        var value = 0;\r\n                        var dataSource = new kendo.data.DataSource({\r\n                            transport: {\r\n                                read: {\r\n                                    url: app.lib.addUrlParam(\"/Dashboard/GetDashboardData\", \"queryId\", viewModel.view.controller.queryId),\r\n                                    dataType: \"json\",\r\n                                    async: false\r\n                                }\r\n                            }\r\n                        });\r\n                        dataSource.fetch(function () {\r\n                            var result = dataSource.at(0);\r\n                            value = result.get(viewModel.view.controller.valueField);\r\n                        });\r\n                        return value;\r\n                    },\r\n                    getLocalizedText: function (localizationKey) {\r\n                        var localizedText = (!_.isUndefined(localization[localizationKey]) && [localizationKey].length > 0) ? localization[localizationKey] : localizationKey;\r\n                        return localizedText;\r\n                    }\r\n                }\r\n            }\r\n            viewModel.view.buildView();\r\n            viewModel.view.setRadialGaugeScale();\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!viewPanels/calendar/view.html',[],function () { return '<div data-role=\"scheduler\"\\r\\n     data-views=\"[\\'day\\', \\'week\\', \\'month\\', \\'agenda\\']\"\\r\\n     data-selectable=true\\r\\n     data-editable=false\\r\\n     data-bind=\"visible: isVisible, events:{change: change, navigate: navigate, moveEnd: moveEnd, move: move, moveStart: moveStart, remove: remove, edit: edit, add: add}\">\\r\\n</div>';});\n\n","/**\r\ncalendar\r\n**/\r\ndefine('viewPanels/calendar/controller',['require','text!viewPanels/calendar/view.html'],function (require) {\r\n    var tpl = require(\"text!viewPanels/calendar/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var updatedTpl = $(tpl).attr(\"data-views\", JSON.stringify(node.Definition.content.views));\r\n            var built = _.template(updatedTpl.prop('outerHTML'));\r\n\r\n            var viewModel = new kendo.observable({\r\n                queryId: node.Definition.content.queryId,\r\n                id: node.Definition.content.id,\r\n                title: node.Definition.content.title,\r\n                description: node.Definition.content.description,\r\n                startDate: node.Definition.content.startDate,\r\n                endDate: node.Definition.content.endDate,\r\n                isVisible: !_.isUndefined(node.Definition.content.isVisible) ? node.Definition.content.isVisible : true,\r\n                defaultView: !_.isUndefined(node.Definition.content.defaultView) ? node.Definition.content.defaultView : \"month\",\r\n                add: function (e) {\r\n                    e.preventDefault();\r\n                },\r\n                edit: function (e) {\r\n                    e.preventDefault();\r\n                },\r\n                remove: function (e) {\r\n                    e.preventDefault();\r\n                },\r\n                moveStart: function (e) {\r\n                    e.preventDefault();\r\n                },\r\n                move: function (e) {\r\n                    e.preventDefault();\r\n                },\r\n                moveEnd: function (e) {\r\n                    e.preventDefault();\r\n                },\r\n                navigate: function (e) {\r\n                    //it takes a few sec before it formattedDate reflects at model, hence the defer.\r\n                    _.defer(function () {\r\n                        viewModel.set(\"formattedDate\", e.sender._model.formattedDate);\r\n                    });\r\n\r\n                    if (!_.isUndefined(e.sender._selection)) {\r\n                        e.sender._selection.events.length = 0;\r\n                    }\r\n                },\r\n                change: function (e) {\r\n                    if (e.events.length) {\r\n                        $.ajax({\r\n                            type: \"GET\",\r\n                            url: \"/Search/GetSearchObjectByWorkItemID\",\r\n                            data: { searchText: e.events[0].id },\r\n                            success: function (result) {\r\n                                e.sender.element.blur();\r\n                                e.events.length = 0;\r\n                                window.open(result, '_blank');\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                formattedDate: \"\"\r\n            });\r\n\r\n            var schedDataSource = new kendo.data.SchedulerDataSource({\r\n                batch: true,\r\n                transport: {\r\n                    read: {\r\n                        url: \"/Dashboard/GetCalendarData\",\r\n                        data: { queryId: viewModel.get(\"queryId\") },\r\n                        dataType: \"json\",\r\n                        cache: false\r\n                    }\r\n                },\r\n                schema: {\r\n                    model: {\r\n                        id: \"id\",\r\n                        fields: {\r\n                            id: { from: viewModel.get(\"id\") },\r\n                            title: { from: viewModel.get(\"title\") },\r\n                            start: { from: viewModel.get(\"startDate\"), type: \"date\" },\r\n                            end: { from: viewModel.get(\"endDate\"), type: \"date\" },\r\n                            description: { from: viewModel.get(\"description\") },\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            var view = new kendo.View(built(node), { wrap: false, model: viewModel });\r\n            callback(view.render());\r\n            \r\n            var scheduler = $(view.element[0]).data(\"kendoScheduler\");\r\n            scheduler.options.dateHeaderTemplate = kendo.template(\"<strong>#=kendo.toString(date, 'ddd M' + kendo.cultures.current.calendar['/'] + 'd') #</strong>\");\r\n            scheduler.view(viewModel.get(\"defaultView\"));\r\n            scheduler.setDataSource(schedDataSource);\r\n            \r\n            //set scheduler's current selected date\r\n            viewModel.set(\"formattedDate\", scheduler._model.formattedDate);\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!viewPanels/trendContainer/view.html',[],function () { return '<div data-bind=\"trendContainer: viewModel, style: { fontSize: viewModel.baseFontSize}\" class=\"trend-container\">\\r\\n    \\r\\n    <label data-bind=\"text: viewModel.label, style: { fontSize: viewModel.labelSize, height: viewModel.labelSize }\"></label>\\r\\n\\r\\n    <p class=\"trend-number\" data-bind=\"style: { lineHeight: viewModel.propertyValue.lineHeight}\">\\r\\n        <span data-bind=\"text: viewModel.propertyValue.text, attr: {data-property-name: viewModel.propertyName },\\r\\n                         style: { color: viewModel.propertyValue.color, fontSize: viewModel.propertyValue.size }\"></span>\\r\\n    </p>\\r\\n\\r\\n</div>';});\n\n","\ndefine('text!viewPanels/trendContainer/view.mobile.html',[],function () { return '<div data-bind=\"trendContainer: viewModel, style: { fontSize: viewModel.baseFontSize}, class: viewModel.modelClass\" class=\"trend-container\">\\r\\n\\r\\n    <label data-bind=\"text: viewModel.label, style: { fontSize: viewModel.labelSize, height: viewModel.labelSize, color: viewModel.labelColor }\"></label>\\r\\n\\r\\n    <p class=\"trend-number\" data-bind=\"style: { lineHeight: viewModel.propertyValue.lineHeight}\">\\r\\n        <span data-bind=\"text: viewModel.propertyValue.text, attr: {data-property-name: viewModel.propertyName },\\r\\n                         style: { color: viewModel.propertyValue.color, fontSize: viewModel.propertyValue.size }\"></span>\\r\\n    </p>\\r\\n\\r\\n</div>';});\n\n","/**\r\ntrendContainer\r\n**/\r\ndefine('viewPanels/trendContainer/controller',['require','text!viewPanels/trendContainer/view.html','text!viewPanels/trendContainer/view.mobile.html'],function (require) {\r\n    var tpl = require(\"text!viewPanels/trendContainer/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var config = node.Definition.content;\r\n           \r\n            if (app.isMobile()) {\r\n                tpl = require(\"text!viewPanels/trendContainer/view.mobile.html\");\r\n            }\r\n\r\n            if (!config.propertyValue) {\r\n                config.propertyValue = {\r\n                    size: 3\r\n                }\r\n            }\r\n\r\n            /*  propertyValue.size can be set in viewPanel to 1-5, \r\n             *  setting base and label size off that for better scaling\r\n             *\r\n             *  valSize     base    label\r\n             * ---------------------------\r\n             *  1           1.2     1.10    (label forced to 1.1 to avoid less than 1em vals)\r\n             *  2           1.4     1.15\r\n             *  3           1.6     1.35\r\n             *  4           1.8     1.55\r\n             *  5           2       1.75\r\n             */\r\n\r\n            var valueFontSize = config.propertyValue.size;\r\n            var baseFontSize = (valueFontSize * .2) + 1;\r\n            var labelFontSize = (valueFontSize * .2) + .75;\r\n            var labelColor = '#000000';\r\n            var modelClass = '';\r\n\r\n            if (labelFontSize < 1.0) {\r\n                labelFontSize = 1.1;\r\n            }\r\n\r\n            if (app.isMobile()) {\r\n\r\n                if (!_.isUndefined(config.queryId)) {\r\n                    // knowledge article properties\r\n                    if (config.queryId === '8540489d-6918-4846-aef8-85aac0876e07') {\r\n                        valueFontSize = (valueFontSize * .21);\r\n                        labelFontSize = valueFontSize;\r\n                        labelColor = '#777777';\r\n                        modelClass = 'ka-mobile-trend-container';\r\n                        var topParent = $('.trend-container').parent().parent().parent().parent();\r\n                        topParent.addClass('ka-mobile-row-trend-container');\r\n\r\n                        config.label = _.isUndefined(config.label)\r\n                                ? localizationHelper.localize(config.propertyName, config.propertyName) + ':'\r\n                                : localizationHelper.localize(config.label, config.label) + ':'\r\n                    } \r\n                }\r\n            }\r\n          \r\n\r\n            var model = kendo.observable({\r\n                viewModel: {\r\n                    //name to bind to in the result object from server\r\n                    propertyName: config.propertyName,\r\n                    //localized label, if not defined localized the property name\r\n                    label: _.isUndefined(config.label)\r\n                        ? localizationHelper.localize(config.propertyName, config.propertyName)\r\n                        : localizationHelper.localize(config.label, config.label),\r\n                    baseFontSize: baseFontSize + 'em',\r\n                    labelSize: labelFontSize + 'em',\r\n                    labelColor: labelColor,\r\n                    propertyValue: {\r\n                        color: _.isUndefined(config.propertyValue.color) ? '#000000' : config.propertyValue.color,\r\n                        size: valueFontSize + \"em\",\r\n                        lineHeight: (valueFontSize - 1) + \"em\",\r\n                        value: ''\r\n                    },\r\n                    modelClass: modelClass,\r\n                    queryId: config.queryId\r\n                }\r\n            });\r\n\r\n            //build it\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(), { wrap: false, model: model });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","\ndefine('text!viewPanels/articleList/view.html',[],function () { return '<div data-bind=\"templateResources:\\'resources\\'\" style=\"display:none\">\\r\\n    <div data-template-name=\"articleTemplate\" class=\"article-template\">\\r\\n        <!-- repeated template content here -->\\r\\n        <h5>\\r\\n            <a href=\"/KnowledgeBase/View/#: ArticleId #\" class=\"article-external-link\" target=\"_blank\"><i class=\"fa fa-external-link\"></i></a>\\r\\n            <a href=\"/KnowledgeBase/View/#: ArticleId #\" class=\"article-title\">\\r\\n                #: Title #\\r\\n            </a>\\r\\n            <small>\\r\\n                <%= localization.Rating %> #: Rating #/5 &middot;\\r\\n                #: ViewCount # <%= localization.Views %> &middot;\\r\\n                <%= localization.LastUpdated %>:\\r\\n                <!--format in en: \\'MMMM dd, yyyy\\', to make this work for the rest of the world (dd MMMM, yyyy) we have this-->\\r\\n                #: kendo.toString(new Date(LastModifiedDate), \\'m\\') #, <!--dd MMMMM,-->\\r\\n                #: kendo.toString(new Date(LastModifiedDate), \\'yyyy\\') # <!--yyyy-->\\r\\n            </small>\\r\\n        </h5>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\"article-list\">\\r\\n    <h2 data-bind=\"html: viewModel.label\"></h2>\\r\\n    <hr />\\r\\n    <!-- bind articleList custom binding to viewModel (which is defined in controller.js) -->\\r\\n    <div data-bind=\"articleList: viewModel\" data-template-name=\"articleList\" ></div>\\r\\n</div>';});\n\n","/**\r\narticleList\r\n**/\r\ndefine('viewPanels/articleList/controller',['require','text!viewPanels/articleList/view.html'],function (require) {\r\n    var tpl = require(\"text!viewPanels/articleList/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var config = node.Definition;\r\n\r\n            var model = kendo.observable({\r\n                viewModel: {\r\n                    label: !_.isUndefined(config.label) ? localizationHelper.localize(config.label, config.label) : \"\",\r\n                    type: config.type,\r\n                    count: config.count,\r\n                    articles: new kendo.data.ObservableArray([])\r\n                }\r\n            });\r\n            \r\n            //build it\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(), { wrap: true, model: model });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","define('viewPanels/viewPanelBuilder',[\r\n    \"viewPanels/facetedSearch/controller\",\r\n    \"viewPanels/html/controller\",\r\n    \"CustomSpace/Scripts/viewPanels/serviceCatalog/controller\", // \"viewPanels/serviceCatalog/controller\",\r\n    \"viewPanels/alternateSC/controller\",\r\n    \"grids/gridBuilder\",\r\n    \"viewPanels/queryBuilder/controller\",\r\n    \"viewPanels/chart/controller\",\r\n    \"viewPanels/radialGauge/controller\",\r\n    \"viewPanels/calendar/controller\",\r\n    \"viewPanels/trendContainer/controller\",\r\n    \"viewPanels/articleList/controller\"\r\n], function (\r\n    facetedSearch,\r\n    html,\r\n    serviceCatalog,\r\n    alternateSC,\r\n    grid,\r\n    queryBuilder,\r\n    chart,\r\n    radialGauge,\r\n    calendar,\r\n    trendContainer,\r\n    articleList\r\n) {\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n            app.lib.getViewPanelDefinition(node.ViewPanelId, function (templateObj) {\r\n                eval(\"var _obj = \" + templateObj.TypeId + \";\");\r\n                \r\n                if (!_obj) {\r\n                    throw templateObj.TypeId + \" is not part of the templating system\";\r\n                }\r\n\r\n                if (!vm.tempProperties) {\r\n                    vm.tempProperties = {}\r\n                }\r\n                vm.tempProperties.fromViewBuilder = true;\r\n\r\n                _obj.build(vm, templateObj, function (tmpl) {\r\n                    callback(tmpl);\r\n                });\r\n            });\r\n\r\n        }\r\n    }\r\n    return definition;\r\n});\r\n\r\n\n","define('viewBuilder',[\r\n    \"structure/header/controller\",\r\n    \"structure/tab/tabNavigation/controller\",\r\n    \"structure/tab/tabPane/controller\",\r\n    \"structure/tab/tabContent/controller\",\r\n    \"structure/tab/tabData/controller\",\r\n    \"structure/column/controller\",\r\n    \"structure/content/controller\",\r\n    \"viewPanels/viewPanelBuilder\"\r\n], function (\r\n    header,\r\n    tabNavigation,\r\n    tabPane,\r\n    tabContent,\r\n    tabData,\r\n    column,\r\n    content,\r\n    viewPanel\r\n) {\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            var viewModel = vm.view;\r\n            viewModel.tempProperties = {};\r\n\r\n            /*\r\n             * set local variables to the different DOM elements we will be using\r\n             */\r\n            var wrapperContainer = $('#main_wrapper');\r\n            var pageContainer = $('.page_content');\r\n            pageContainer.find('.container-fluid').append(\"<div class='page_container'></div>\");\r\n            var viewContainer = $('.page_container');\r\n\r\n\r\n            /*\r\n             * compose page based on layout type\r\n             */\r\n            if (vm.layoutType === 'semantic') {\r\n\r\n                //don't want anything in there so clear it out the current html (except ng-view)\r\n                $('.viewbuilder-struct').remove();\r\n                \r\n                //wrapperContainer = $(\"div [ui-view]\");\r\n                composeSemanticPage(viewModel, wrapperContainer);\r\n\r\n                /*\r\n                 * example of what def file looks like:\r\n                 * \"appFilePath\": \"ng/kb/home/app\"\r\n                 */\r\n                if (vm.appFilePath && _.isString(vm.appFilePath)) {\r\n                    //use require to load and initialize application\r\n                    var ngApp = require([vm.appFilePath]);\r\n                };\r\n\r\n                //set the page title if in definition\r\n                if (vm.pageTitle && vm.pageTitle.length > 0) {\r\n                    document.title = localizationHelper.localize(vm.pageTitle, vm.pageTitle);\r\n                };\r\n\r\n            } else {\r\n                composeHeader(viewModel.header);    //vm.view.header\r\n                composeBody(viewModel.body);        //vm.view.body\r\n            }\r\n\r\n\r\n            //page composed, call the callback so viewMain can finish up.\r\n            callback();\r\n\r\n\r\n            /*\r\n             * functions/helpers\r\n             */\r\n            function composeHeader(headerTemplate) {\r\n                if (!headerTemplate) {\r\n                    $('.page_bar').remove();\r\n                    return;\r\n                }\r\n\r\n                var headerTmpl;\r\n                if (!headerTemplate.type) {\r\n                    header.build(viewModel, headerTemplate, function (tmpl) {\r\n                        headerTmpl = tmpl;\r\n                    });\r\n                } else {\r\n                    viewPanel.build(viewModel, headerTemplate, function (tmpl) {\r\n                        headerTmpl = tmpl;\r\n                    });\r\n                }\r\n\r\n                //render a little differnt if it is a unique header\r\n                switch (vm.layoutType) {\r\n                    case \"homepage\":\r\n                        $('.page_bar').remove();\r\n                        pageContainer.before(headerTmpl);\r\n                        break;\r\n                    case \"full\":\r\n                    default:\r\n                        var rowElm = $('<div/>').addClass(\"row\");\r\n                        var headerElm = rowElm.append(headerTmpl);\r\n                        $('.page_bar').empty().append(headerElm);\r\n                        break;\r\n                }\r\n            };\r\n\r\n            function composeTabs(layoutTemplate, nestedContent) {\r\n                composeTabNavigation(layoutTemplate.tabs, nestedContent);\r\n                tabContent.build(viewModel, layoutTemplate, function (tabsContTmpl) {\r\n                    //tabsContainer is a div that wraps all the tab-pane's together\r\n                    var tabsContainer = app.lib.getContainer(tabsContTmpl);\r\n                    _.each(layoutTemplate.tabs, function (tab) {\r\n                        tabPane.build(viewModel, tab, function (paneTmpl) {\r\n                            var tabPaneContainer = app.lib.getContainer(paneTmpl);\r\n                            composeContent(tab, tabPaneContainer, function (tmpl) {\r\n                                tabsContainer.append(tmpl);\r\n                            });\r\n                        });\r\n                    });\r\n\r\n                    !_.isUndefined(nestedContent) ? $(nestedContent).append(tabsContainer) : viewContainer.append(tabsContainer);\r\n                });\r\n            }\r\n\r\n            function composeBody(body) {\r\n                if (body.tabs) {\r\n                    //page with tabs.\r\n                    composeTabs(body, viewContainer);\r\n                } else {\r\n                    //standard row/col page with now tabs\r\n                    composeBodyContent(body, viewContainer, function () { });\r\n                }\r\n            }\r\n\r\n            function composeSemanticPage(contentObject, containerEle) {\r\n                var scopedContainer = app.lib.getContainer(containerEle);\r\n\r\n                //build current contentObj..\r\n                content.build(viewModel, contentObject, function (divTmpl) {\r\n                    //take returned container and appended to current scopedContainer\r\n                    var builtContainer = app.lib.getContainer(divTmpl);\r\n                    scopedContainer.append(builtContainer);\r\n\r\n                    //move the container scope down to what we built\r\n                    scopedContainer = builtContainer;\r\n\r\n                    //add classes to container if defined\r\n                    if (contentObject.cssClass) {\r\n                        scopedContainer.addClass(contentObject.cssClass);\r\n                    }\r\n\r\n                    //check if we have nested content\r\n                    if (_.isUndefined(contentObject.content) && contentObject.type == \"viewPanel\") {\r\n                        //no nested .content so it is require for now to have a viewPanel in it.\r\n                        viewPanel.build(viewModel, contentObject, function (tmpl) {\r\n                            //add the viewpanel inside the current content block\r\n                            //if (tmpl.isDirective) {\r\n                            //scopedContainer.append($compile(tmpl.html));\r\n                            //} else {\r\n                            scopedContainer.append(app.lib.getContainer(tmpl));\r\n                            //}\r\n                        });\r\n                    } else {\r\n                        //nested content, check if it is an array or a single content\r\n                        if (_.isArray(contentObject.content)) {\r\n                            //declare contentArray since contentObject.content is getting hard to follow\r\n                            var contentArray = contentObject.content;\r\n                            _.each(contentArray, function (content) {\r\n                                composeSemanticPage(content, scopedContainer)\r\n                            });\r\n                        } else {\r\n                            //not an array so we just pass in contentObject.content to this function to start all over\r\n                            var childContent = contentObject.content;\r\n                            composeSemanticPage(childContent, scopedContainer)\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n\r\n            function composeBodyContent(structure, container, localCallback) {\r\n                var scopedContainer = app.lib.getContainer(container);\r\n                var rows = structure.content.rows;\r\n\r\n                //the actual rows and columns now\r\n                _.each(rows, function (rowNode) {\r\n                    //var rowContainer = app.isMobile() ? app.lib.getContainer(\"<div></div>\") : app.lib.getContainer(\"<div class='row'></div>\");\r\n                    var rowContainer = app.lib.getContainer(\"<div class='row'></div>\");\r\n                    scopedContainer.append(rowContainer);\r\n\r\n                    app.lib.setColumnSizes(rowNode.columns);\r\n                    _.each(rowNode.columns, function (columnNode) {\r\n                        column.build(viewModel, columnNode, function (panelTmpl) {\r\n                            var panelContainer = app.lib.getContainer(panelTmpl);\r\n                            rowContainer.append(panelContainer);\r\n\r\n                            //used for nested builder calls (passed to viewPanelBuilder and then on to the others)\r\n                            viewModel.tempProperties.currentContainer = panelContainer;\r\n                            viewPanel.build(viewModel, columnNode, function (tmpl) {\r\n                                if (viewModel.tempProperties.fromGridBuilder && columnNode.type == \"panel\") {\r\n                                    panelContainer.find('.panel').addClass('panel-flat');\r\n                                } else {\r\n                                    var returnedContainer = app.lib.getContainer(tmpl);\r\n                                    panelContainer.find('.append-here').append(returnedContainer);\r\n                                }\r\n\r\n                                //clean up temp props\r\n                                delete viewModel.tempProperties.fromViewBuilder;\r\n                                delete viewModel.tempProperties.fromGridBuilder;\r\n                                delete viewModel.tempProperties.currentContainer;\r\n                            });\r\n                        });\r\n                    });\r\n                });//-end _each\r\n\r\n                localCallback(container);\r\n            }\r\n\r\n            function composeTabNavigation(tabs, nestedContainer) {\r\n                tabNavigation.build(viewModel, tabs, function (tabtplString) {\r\n                    var tabnavCont = $(tabtplString);\r\n\r\n                    var focusSet = false;\r\n                    _.each(tabs, function (tab, index) {\r\n                        //set vals needed for tab functionality\r\n                        tab.tabId = app.lib.newGUID();\r\n                        tab.active = (index == 0) ? \"active\" : \"\";\r\n                        tab.content.tabId = tab.tabId;\r\n                        tab.content.active = tab.active;\r\n\r\n                        var focusedTabName = app.getParameterByName(\"tab\").toLowerCase();\r\n                        var tabNodeNameKey = tab.name.toLowerCase(); //need to be set here before .localize is called in tabData.build\r\n                        tabData.build(tabs, tab, function (tplString) {\r\n                            var element = $(tplString);\r\n                            tabnavCont.append(element);\r\n                            //sets which tab is focused based off url param\r\n                            if (!focusSet && focusedTabName.length > 0) {\r\n                                if (tabNodeNameKey === focusedTabName) {\r\n                                    element.find(\"a\").attr(\"selected\", \"true\");\r\n                                    focusSet = true;\r\n                                }\r\n                            };\r\n                        });\r\n                    });//--end _each on tabnav\r\n\r\n                    !_.isUndefined(nestedContainer) ? $(nestedContainer).append(tabnavCont) : viewContainer.append(tabnavCont);\r\n                });\r\n            };\r\n            /*\r\n             * --END functions/helpers\r\n             */\r\n        }//--END build function\r\n    }\r\n    return definition;\r\n});\r\n\r\n\n","/**\r\ndrawer multi edit\r\n**/\r\ndefine('structure/drawer/gridTask/multiEditController',['require'],function (require) {\r\n    var definition = {\r\n        build: function (vm, node) {\r\n            /*\r\n             * Change mustSelectLeafNode and/or showEnumPath to modify\r\n             * bulk edit enum picker behavior. \r\n             */\r\n            var mustSelectLeafNode = false;\r\n            var showEnumPath = false;\r\n\r\n            var drawer = drawermenu;\r\n            var btnConfig = node;\r\n            var btnViewModel = kendo.observable({\r\n                enabled: btnConfig.enabled,\r\n                visible: btnConfig.isVisible,\r\n                titleKey: btnConfig.titleKey,\r\n                formTitleKey: btnConfig.formTitleKey,\r\n                icon: btnConfig.icon,\r\n                endpointUrl: btnConfig.endpointUrl,\r\n                element: false,\r\n                selectedWorkItemProjectionId: false,\r\n                currentSelection: [],\r\n                selectedType: '',\r\n                calculatePriority: false,\r\n                impactId: '',\r\n                urgencyId: '',\r\n                targetControlId: '',\r\n                command: function () {\r\n                    //viewmodel for the form in the drawer\r\n                    var multiEditFormViewModel = {\r\n                        formView: {},\r\n                        formTitleKey: btnViewModel.formTitleKey,\r\n                        workItems: btnViewModel.currentSelection,\r\n                        availableFields: getAvailableFields(),\r\n                        setCanSubmit: function () {\r\n                            var viewModel = this;\r\n                            if (getEditedFields(viewModel).length > 0) {\r\n                                $('.drawer-button-submit').removeClass('disabled');\r\n                            } else {\r\n                                $('.drawer-button-submit').addClass('disabled');\r\n                            }\r\n                        },\r\n                        formSubmit: function () {\r\n                            app.lib.mask.apply();\r\n                            var viewModel = this;\r\n                            var postData = {\r\n                                projectionId: btnViewModel.selectedWorkItemProjectionId,\r\n                                updateServiceManagement: true,\r\n                                itemIds: _.pluck(viewModel.workItems, 'BaseId'),\r\n                                editedFields: getEditedFields(viewModel)\r\n                            }\r\n\r\n                            if (btnViewModel.selectedType == \"Incident\" && btnViewModel.calculatePriority) {\r\n                                //get matrix, calculate it, add it to editedfields\r\n                                $.ajax({\r\n                                    url: '/WIs/Incident/GetPriorityMatrix/',\r\n                                    type: \"GET\",\r\n                                    success: function (priorityMatrix) {\r\n                                        var matrixObj = JSON.parse(priorityMatrix);\r\n                                        var priority = app.lib.getPriorityByMatrix(matrixObj, btnViewModel.urgencyId, btnViewModel.impactId);\r\n                                        postData.editedFields.push({\r\n                                            propertyName: \"Priority\",\r\n                                            propertyType: \"int\",\r\n                                            editedValue: priority\r\n                                        });\r\n                                        submitData(postData);\r\n                                    },\r\n                                    error: function () {\r\n                                        saveFailure();\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                submitData(postData);\r\n                            }\r\n\r\n                            function submitData(data) {\r\n                                $.ajax({\r\n                                    url: btnViewModel.endpointUrl,\r\n                                    data: JSON.stringify(data),\r\n                                    dataType: 'json',\r\n                                    contentType: 'application/json',\r\n                                    type: \"POST\",\r\n                                    success: function () {\r\n                                        saveSuccess();\r\n                                    },\r\n                                    error: function () {\r\n                                        saveFailure();\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            function saveSuccess() {\r\n                                //close form and clean up\r\n                                multiEditFormViewModel.formDestroy();\r\n                                drawer.actions.closeFormInDrawer();\r\n\r\n\r\n                                if (app.isMobile()) {\r\n                                    var listControl = $(\"[data-control-id='\" + btnViewModel.targetControlId + \"']\").data('kendoListView');\r\n                                    listControl.dataSource.query();\r\n                                } else {\r\n                                    //refresh the grid to get updated data.\r\n                                    var targetGrid = $('#' + btnViewModel.targetControlId).data('kendoGrid');\r\n                                    var targetGridState = app.gridUtils.savedState.getCurrentState(btnViewModel.targetControlId);\r\n                                    app.lib.recheckGridState(targetGridState, targetGrid);\r\n                                    targetGrid.dataSource.query(targetGridState);\r\n                                }\r\n                                //display message\r\n                                app.lib.message.add(localizationHelper.localize('SaveSuccessMessage'), \"success\");\r\n                                app.lib.mask.remove();\r\n                                app.lib.message.show();\r\n                            }\r\n\r\n                            function saveFailure() {\r\n                                //close form\r\n                                drawer.actions.closeFormInDrawer();\r\n\r\n                                //display message\r\n                                app.lib.message.add(localizationHelper.localize('SaveErrorMessage'), \"danger\");\r\n                                app.lib.mask.remove();\r\n                                app.lib.message.show();\r\n                            }\r\n\r\n\r\n                        },\r\n                        formCancel: function () {\r\n                            this.formDestroy();\r\n                            drawer.actions.closeFormInDrawer();\r\n                        },\r\n                        formClose: function () {\r\n                            //puts the drawer back to original setup\r\n                            drawer.actions.closeFormInDrawer();\r\n                        },\r\n                        formDestroy: function () {\r\n                            var viewModel = this;\r\n                            //destroy view\r\n                            viewModel.formView.destroy();\r\n\r\n                            //clean up formViewModel \r\n                            viewModel.set('currentSelectedField', '');\r\n                            viewModel.set('formView', {});\r\n                            viewModel.set('availableFields', []);\r\n                            viewModel.set('selectedType', '');\r\n\r\n                            btnViewModel.set('calculatePriority', false);\r\n                            btnViewModel.set('impactId', '');\r\n                            btnViewModel.set('urgencyId', '');\r\n                        }\r\n                    };\r\n\r\n                    multiEditFormViewModel = kendo.observable(multiEditFormViewModel);\r\n                    //binds and renders form then opens drawer.\r\n                    drawer.actions.createFormInDrawer('multiEditTemplate', multiEditFormViewModel);\r\n\r\n                    //init call to setCanSubmit to disable after we render form\r\n                    multiEditFormViewModel.setCanSubmit();\r\n\r\n                    //on forms' viewModel change recheck if 'Save' button should be enabled/disabled\r\n                    multiEditFormViewModel.bind('change', function (e) {\r\n                        var viewModel = this;\r\n                        viewModel.setCanSubmit();\r\n                    });\r\n                },\r\n                //onTargetControlChange fires on grid change and grid dataBound events\r\n                onTargetControlChange: function (grid) {\r\n                    var selectedDataItems = [];\r\n                    if (app.isMobile()) {\r\n                        //grid is selected items array when called from mobile\r\n                        selectedDataItems = grid;\r\n                    } else {\r\n                        selectedDataItems = grid.select().map(function (index, item) {\r\n                            return grid.dataItem($(item));\r\n                        }).toArray();\r\n                    }\r\n\r\n                    //we only update 10 items at a time\r\n                    if (selectedDataItems.length > 10) {\r\n                        onExceedSelectionCount();\r\n                    }\r\n\r\n                    btnViewModel.set('currentSelection', selectedDataItems);\r\n\r\n                    //if nothing is selected disabled the edit button\r\n                    if (selectedDataItems.length <= 0 || selectedDataItems.length > 10) {\r\n                        btnViewModel.setEnabled(false);\r\n                    } else {\r\n                        //one or more item is selected, now determine if selectedDataItems are supported Types\r\n                        var selectedTypes = _.pluck(selectedDataItems, \"WorkItemType\");\r\n\r\n                        var singleSelectedType = _.reduce(selectedTypes, function (memo, currentVal) {\r\n                            // note: returns false if selectedDataItems are not all the same Type, \r\n                            //       otherwise returns the string value of the type that all selectedDataItems are\r\n                            return (memo === currentVal) ? memo : false;\r\n                        });\r\n\r\n\r\n                        switch (singleSelectedType) {\r\n                            case \"System.WorkItem.ServiceRequest\":\r\n                                btnViewModel.set('selectedWorkItemProjectionId', app.constants.projectionIds.SystemWorkItemServiceRequestViewModel);\r\n                                btnViewModel.setEnabled(true);\r\n                                break;\r\n                            case \"System.WorkItem.Incident\":\r\n                                btnViewModel.set('selectedWorkItemProjectionId', app.constants.projectionIds.SystemWorkItemIncidentViewModel);\r\n                                btnViewModel.setEnabled(true);\r\n                                break;\r\n                            default:\r\n                                // not a supported bulk edit Type, disable the edit button\r\n                                btnViewModel.setEnabled(false);\r\n                        }\r\n                    }\r\n                },\r\n                setEnabled: function (isEnabled) {\r\n                    //yeah it's ghetto, but it is what it is until we mvvm-ify the drawer.\r\n                    if (isEnabled) {\r\n                        $(btnViewModel.element).prop('disabled', false);\r\n                        $(btnViewModel.element).prev('.tooltip-container-drawer-button').addClass('tooltip-container-hidden');\r\n                        btnViewModel.set('enabled', true);\r\n                    } else {\r\n                        $(btnViewModel.element).prop('disabled', true);\r\n                        $(btnViewModel.element).prev('.tooltip-container-drawer-button').removeClass('tooltip-container-hidden');\r\n                        btnViewModel.set('enabled', false);\r\n                    }\r\n                },\r\n                setVisible: function (isVisible) {\r\n                    isVisible = isVisible || btnViewModel.visible;\r\n                    if (isVisible) {\r\n                        $(btnViewModel.element).show();\r\n                        btnViewModel.set('visible', true);\r\n                    } else {\r\n                        $(btnViewModel.element).hide();\r\n                        btnViewModel.set('visible', false);\r\n                    }\r\n                }\r\n            });\r\n\r\n            //add to DOM\r\n            var btnElement = drawer.addButton(localizationHelper.localize(btnViewModel.titleKey), \"fa \" + btnViewModel.icon, btnViewModel.command, true, localizationHelper.localize('MustSelectSameType'));\r\n\r\n            //reference it in the viewModel so we can toggle visibility/enabled on element\r\n            btnViewModel.set('element', btnElement[0]);\r\n\r\n            //set initial visibility\r\n            btnViewModel.setVisible();\r\n\r\n            if (app.isMobile()) {\r\n                //called on mobile listview checkbox selection\r\n                app.events.subscribe(\"mobileWiListSelectionChange\", function (event, listView) {\r\n                    if (!_.isUndefined(listView)) {\r\n                        btnViewModel.onTargetControlChange(listView.selectedCards);\r\n                        btnViewModel.targetControlId = listView.controlId;\r\n                    }\r\n                });\r\n                app.events.subscribe(\"mobileWiListInit\", function (event, listView) {\r\n                    if (!_.isUndefined(listView)) {\r\n                        btnViewModel.onTargetControlChange(listView.selectedCards);\r\n                        btnViewModel.targetControlId = listView.controlId;\r\n                    }\r\n                });\r\n            } else {\r\n                //called on grid row clicks\r\n                app.events.subscribe(\"gridChange\", function (event, grid) {\r\n                    btnViewModel.onTargetControlChange(grid);\r\n                    btnViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                });\r\n\r\n                //for initial grid load listen to this event so we can set persisted state information\r\n                app.events.subscribe(\"gridBound\", function (event, grid) {\r\n                    btnViewModel.onTargetControlChange(grid);\r\n                    btnViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                });\r\n            }\r\n\r\n            //helper functions\r\n            var getAvailableFields = function () {\r\n                var availableFields = [];\r\n                switch (btnViewModel.selectedWorkItemProjectionId) {\r\n                    case app.constants.projectionIds.SystemWorkItemIncidentViewModel:\r\n                        btnViewModel.set('selectedType', \"Incident\");\r\n                        availableFields = [\r\n                            {\r\n                                displayName: localizationHelper.localize('Classification'),\r\n                                propertyName: 'Classification',\r\n                                propertyType: 'enum',\r\n                                enumId: '1f77f0ce-9e43-340f-1fd5-b11cc36c9cba',\r\n                                selectedValue: '',\r\n                                leafNodeOnly: mustSelectLeafNode,\r\n                                showPath: showEnumPath\r\n                            },\r\n                            {\r\n                                displayName: localizationHelper.localize('SupportGroup'),\r\n                                propertyName: 'TierQueue',\r\n                                propertyType: 'enum',\r\n                                enumId: 'c3264527-a501-029f-6872-31300080b3bf',\r\n                                selectedValue: '',\r\n                                leafNodeOnly: mustSelectLeafNode,\r\n                                showPath: showEnumPath\r\n                            },\r\n                            {\r\n                                displayName: localizationHelper.localize('Impact'),\r\n                                propertyName: 'Impact',\r\n                                propertyType: 'enum',\r\n                                enumId: '11756265-f18e-e090-eed2-3aa923a4c872',\r\n                                selectedValue: '',\r\n                                leafNodeOnly: mustSelectLeafNode,\r\n                                showPath: showEnumPath\r\n                            },\r\n                            {\r\n                                displayName: localizationHelper.localize('Urgency'),\r\n                                propertyName: 'Urgency',\r\n                                propertyType: 'enum',\r\n                                enumId: '04b28bfb-8898-9af3-009b-979e58837852',\r\n                                selectedValue: '',\r\n                                leafNodeOnly: mustSelectLeafNode,\r\n                                showPath: showEnumPath\r\n                            }\r\n                        ];\r\n                        break;\r\n                    case app.constants.projectionIds.SystemWorkItemServiceRequestViewModel:\r\n                        btnViewModel.set('selectedType', \"ServiceRequest\");\r\n                        availableFields = [\r\n                            {\r\n                                displayName: localizationHelper.localize('Area'),\r\n                                propertyName: 'Area',\r\n                                propertyType: 'enum',\r\n                                enumId: '3880594c-dc54-9307-93e4-45a18bb0e9e1',\r\n                                selectedValue: '',\r\n                                leafNodeOnly: mustSelectLeafNode,\r\n                                showPath: showEnumPath\r\n                            },\r\n                            {\r\n                                displayName: localizationHelper.localize('SupportGroup'),\r\n                                propertyName: 'SupportGroup',\r\n                                propertyType: 'enum',\r\n                                enumId: '23c243f6-9365-d46f-dff2-03826e24d228',\r\n                                selectedValue: '',\r\n                                leafNodeOnly: mustSelectLeafNode,\r\n                                showPath: showEnumPath\r\n                            },\r\n                            {\r\n                                displayName: localizationHelper.localize('Urgency'),\r\n                                propertyName: 'Urgency',\r\n                                propertyType: 'enum',\r\n                                enumId: 'eb35f771-8b0a-41aa-18fb-0432dfd957c4',\r\n                                selectedValue: '',\r\n                                leafNodeOnly: mustSelectLeafNode,\r\n                                showPath: showEnumPath\r\n                            }\r\n                        ];\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                return availableFields;\r\n            };\r\n\r\n            function getEditedFields(viewModel) {\r\n                //reset to blank\r\n                var editedFields = [];\r\n\r\n                _.each(viewModel.availableFields, function (field) {\r\n                    if (!_.isUndefined(field.selectedValue) && field.selectedValue != \"\") {\r\n                        var fieldValue = '';\r\n\r\n                        //get value based on the type of input control\r\n                        //type is enum, string, date, int, double, bool. gets set when defining viewModel.availableFields\r\n                        switch (field.propertyType) {\r\n                            case 'enum':\r\n                                fieldValue = field.selectedValue.Id;\r\n                            default:\r\n                        }\r\n                        if (field.propertyName == \"Impact\") {\r\n                            btnViewModel.set('calculatePriority', true);\r\n                            btnViewModel.set('impactId', fieldValue);\r\n                        }\r\n                        if (field.propertyName == \"Urgency\") {\r\n                            btnViewModel.set('calculatePriority', true);\r\n                            btnViewModel.set('urgencyId', fieldValue);\r\n                        }\r\n                        editedFields.push({\r\n                            propertyName: field.propertyName,\r\n                            propertyType: field.propertyType,\r\n                            editedValue: fieldValue\r\n                        });\r\n                    }\r\n                });\r\n\r\n                return editedFields;\r\n            }\r\n\r\n            function onExceedSelectionCount() {\r\n                kendo.ui.ExtAlertDialog.show({\r\n                    title: localizationHelper.localize('Warning'),\r\n                    message: localizationHelper.localize('BulkEditExceedMessage')\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return definition;\r\n});\n","\ndefine('text!forms/tasks/anchor/view.html',[],function () { return '<li class=\"link\" data-bind=\"click: <%= Target %>\"><%= Label %></li>';});\n\n","/**\r\nAnchor\r\n**/\r\n\r\ndefine('forms/tasks/anchor/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = new kendo.View(built(properties), { wrap: false });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/analystByGroup/view.html',[],function () { return '<div id=\"AssignToAnalystByGroupWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div>\\r\\n                <div id=\"groupPicker\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\"form-group\">\\r\\n                <div class=\"control-label\">\\r\\n                    <label><%= localization.AssignedTo %></label>\\r\\n                </div>\\r\\n                <div class=\"editor-field\">\\r\\n                    <input id=\"assignedToCombo\"\\r\\n                           data-role=\"combobox\"\\r\\n                           data-bind=\"source: assignToDataSource, enabled:userEnabled, events: { change: userChange }\"\\r\\n                           data-text-field=\"Name\"\\r\\n                           data-value-field=\"Id\"\\r\\n                           data-placeholder=\"<%=localization.ChooseSupportGroup%>\"></input>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/fields/enum/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n\\r\\n    <div class=\"form-control form-control-picker input-sm\"\\r\\n         data-url=\"/api/V3/Enum/GetList\"\\r\\n         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n         data-showpath=\"<%= ShowPath %>\"\\r\\n         data-mustselectleafnode=\"<%= LeafNodeOnly %>\"\\r\\n         data-bind=\"ciresonDropDownTree: \\'<%= EnumId %>\\', value: <%= PropertyName %>\"\\r\\n         data-disabled=\"<%= Disabled %>\"\\r\\n         data-role=\"<%= PropertyName %>\"\\r\\n         data-filter=\"<%= FilterIds%>\"\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n        >\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>';});\n\n","/**\r\nENUM - dropDownTree\r\n**/\r\n\r\ndefine('forms/fields/enum/controller',['require','text!forms/fields/enum/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/enum/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                EnumId: '',\r\n                Required: node.Required,\r\n                Disabled: node.disabled,\r\n                LeafNodeOnly: false,\r\n                ShowPath: false,\r\n                FilterIds: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/drawerTask/view.html',[],function () { return '<span data-bind=\"visible: showTooltip\" class=\"tooltip-container\" rel=\"dynamictooltip\" title=\"<%= toolTipMessage %>\"></span>\\r\\n<li data-bind=\"click: <%= onClick %>, enabled: isEnabled\"><a data-bind=\"localize: <%= titleKey %>\"></a></li>';});\n\n","/**\r\nanalystByGroup\r\n**/\r\n\r\ndefine('forms/tasks/analystByGroup/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/analystByGroup/view.html','forms/fields/enum/controller','text!forms/tasks/drawerTask/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchorTemplate = require(\"text!forms/tasks/anchor/view.html\");\r\n    var windowTemplate = require(\"text!forms/tasks/analystByGroup/view.html\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n    var drawerTaskTemplate = require(\"text!forms/tasks/drawerTask/view.html\");\r\n\r\n    var definition = {\r\n        template: windowTemplate,\r\n        build: function (vm, node, callback) {\r\n            var callerType = vm.type; //\"Incident\", \"ServiceRequest\", \"BulkEdit\"\r\n            var isBulkEdit = vm.type == \"BulkEdit\";\r\n            var originalAssignedName = null;\r\n            var originalAssignedId = null;\r\n            var originalSupportGroup = null; //Todo: made need to initialize as an object\r\n            var originalSupportName = \"\";\r\n            var originalSupportId = \"00000000-0000-0000-0000-000000000000\";\r\n            var configEnumId;\r\n            var configPropertyName;\r\n\r\n\r\n\r\n            //viewModel set up\r\n            var getTaskViewModel = function (modalView) {\r\n                //this view Model is bound to the anchor element \r\n                var taskVm = kendo.observable({\r\n                    //this is the func that fires on link click\r\n                    analystByGroup: function () {\r\n                        \r\n\r\n                        if (isBulkEdit) {\r\n                            configPropertyName = taskVm.selectedWorkItem.groupPropertyName;\r\n                            configEnumId = taskVm.selectedWorkItem.groupPropertyEnumId;\r\n                        } else {\r\n                            //lets clear out the value for a better UX\r\n                            vm.viewModel.set(\"SupportGroup\", { Id: '', Name: '' });\r\n                            vm.viewModel.set(\"TierQueue\", { Id: '', Name: '' });\r\n                            configPropertyName = node.Configs.propertyName;\r\n                            configEnumId = node.Configs.enumId;\r\n                        }\r\n                        var modalEle = modalView.element.clone();\r\n                        var modalControl = modalEle.kendoCiresonWindow({\r\n                            title: localization.AssignToAnalystByGroup,\r\n                            width: 500,\r\n                            height: 300,\r\n                            actions: []\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //this view Model is bound to the window element\r\n                        var windowViewModal = kendo.observable({\r\n                            propertyName: configPropertyName,       //IR: \"TierQueue\", SR: \"SupportGroup\"\r\n                            enumId: configEnumId,                   //IR: IncidentTierQueue (enum), SR: ServiceRequestSupportGroup (enum)\r\n                            assignToDataSource: getUserDataSource(\"00000000-0000-0000-0000-000000000000\"),\r\n                            userEnabled: false,\r\n                            okEnabled: false,\r\n                            userChange: function (e) {\r\n                                if (isBulkEdit) {\r\n                                    taskVm.set(\"assignedWorkItem.displayName\", e.sender._prev);\r\n                                    taskVm.set(\"assignedWorkItem.baseId\", e.sender.value());\r\n                                } else {\r\n                                    //clear them out first\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", null);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", null);\r\n\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", e.sender._prev);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", e.sender.value());\r\n                                }\r\n                            },\r\n                            okClick: function () {\r\n                                modalControl.close();\r\n                                if (isBulkEdit) {\r\n                                    app.lib.mask.apply();\r\n                                    var postData = {\r\n                                        ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                        UpdateServiceManagement: true,\r\n                                        ItemIds: _.pluck(taskVm.currentSelection, 'BaseId'),\r\n                                        EditedFields: getBulkEditedFieldData(taskVm)\r\n                                    }\r\n\r\n                                    $.ajax({\r\n                                        url: '/api/v3/workitem/BulkEditWorkItems/',\r\n                                        data: JSON.stringify(postData),\r\n                                        dataType: 'json',\r\n                                        contentType: 'application/json',\r\n                                        type: \"POST\",\r\n                                        success: function() {\r\n                                            onBulkEditSaveSuccess(taskVm);\r\n                                        },\r\n                                        error: function() {\r\n                                            onBulkEditSaveFailure();\r\n                                        }\r\n                                    });\r\n\r\n                                } else {\r\n                                    //form task:\r\n                                    //replace original values with new saved values\r\n                                    originalAssignedName = vm.viewModel.AssignedWorkItem.get(\"DisplayName\");\r\n                                    originalAssignedId = vm.viewModel.AssignedWorkItem.get(\"BaseId\");\r\n\r\n                                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                                        originalSupportGroup = vm.viewModel.get(\"TierQueue\");\r\n                                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                                        originalSupportGroup = vm.viewModel.get(\"SupportGroup\");\r\n                                    }\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                modalControl.close();\r\n                                if (isBulkEdit) {\r\n                                    taskVm.set(\"assignedWorkItem.displayName\", null);\r\n                                    taskVm.set(\"assignedWorkItem.baseId\", null);\r\n                                } else {\r\n                                    //lets clean the model\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", null);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", null);\r\n\r\n                                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", originalAssignedName);\r\n                                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", originalAssignedId);\r\n\r\n                                    \r\n                                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                                        vm.viewModel.set(\"TierQueue\", originalSupportGroup);\r\n                                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                                        vm.viewModel.set(\"SupportGroup\", originalSupportGroup);\r\n                                    }\r\n                                }\r\n                            },\r\n                        });\r\n\r\n                        var createGroupPicker = function (windowViewModal, modalEle) { \r\n                            var groupProperties = {\r\n                                PropertyName: windowViewModal.propertyName,\r\n                                PropertyDisplayName: \"SupportGroup\",\r\n                                EnumId: windowViewModal.enumId\r\n                            };\r\n                            buildEnumPicker(modalEle.find('#groupPicker'), groupProperties, vm.viewModel);\r\n\r\n                            //get the enum picker elm\r\n                            var groupPicker = modalEle.find('div[data-role=\"' + windowViewModal.propertyName + '\"]');\r\n\r\n                            //make sure we have a group picker object and we don't error\r\n                            if (groupPicker) {\r\n                                //get got handlers for event binding\r\n                                var groupDropDownControl = groupPicker.data().handler._dropdown;\r\n                                var groupTreeViewControl = groupPicker.data().handler._treeview;\r\n\r\n                                //bind group picker changes events\r\n                                groupDropDownControl.bind(\"change\", function (e) {\r\n                                    var item = this.dataItem(this.select());\r\n                                    var assignToCombobox = modalEle.find(\"#assignedToCombo\").data(\"kendoComboBox\");\r\n                                    setSupportGroupUsers(item, windowViewModal, assignToCombobox);\r\n                                    taskVm.set(\"assignedSupportGroup\", item);\r\n                                });\r\n                                groupTreeViewControl.bind(\"change\", function (e) {\r\n                                    var item = this.dataItem(this.current());\r\n                                    var assignToCombobox = modalEle.find(\"#assignedToCombo\").data(\"kendoComboBox\");\r\n                                    setSupportGroupUsers(item, windowViewModal, assignToCombobox);\r\n                                    taskVm.set(\"assignedSupportGroup\", item);\r\n                                });\r\n                            }\r\n                        };\r\n\r\n                        //form field helper\r\n                        var buildEnumPicker = function (container, props, vmModel) {\r\n                            enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                                container.html(enumControl);\r\n                                app.controls.apply(container, {\r\n                                    localize: true,\r\n                                    vm: vmModel,\r\n                                    bind: true\r\n                                });\r\n                            });\r\n                        };\r\n\r\n\r\n                        //bind window element to window viewModel\r\n                        kendo.bind(modalEle, windowViewModal);\r\n                        //create status enumPicker\r\n                        createGroupPicker(windowViewModal, modalEle);\r\n\r\n                        modalEle.removeClass('hide');\r\n                        modalEle.show();\r\n\r\n                        modalControl.refresh();\r\n                        modalControl.open();\r\n                    }\r\n                });\r\n\r\n                return taskVm;\r\n            };\r\n            //addition viewModel set up for bulk task\r\n            var setAdditionBulkTaskProperties = function (anchorViewModel) {\r\n                var drawerTaskVm = anchorViewModel;\r\n                //this view Model is bound to the anchor element \r\n                drawerTaskVm.currentSelection = [];\r\n                drawerTaskVm.selectedWorkItem = {\r\n                    type: '',\r\n                    projectionId: '',\r\n                    groupPropertyName: '',\r\n                    groupPropertyEnumId: '',\r\n                };\r\n                drawerTaskVm.assignedWorkItem = {\r\n                    displayName: \"\",\r\n                    baseId: \"\"\r\n                },\r\n                drawerTaskVm.isEnabled = false;\r\n                drawerTaskVm.showTooltip = true;\r\n                drawerTaskVm.setEnabled = function (enabled) {\r\n                    this.set('isEnabled', enabled);\r\n                    this.set('showTooltip', !enabled);\r\n                };;\r\n                drawerTaskVm.targetControlId = '';\r\n                drawerTaskVm.onTargetControlChange = function (grid) {\r\n                    var selectedDataItems = [];\r\n                    if (app.isMobile()) {\r\n                        //grid is selected items array when called from mobile\r\n                        selectedDataItems = grid;\r\n                    } else {\r\n                        selectedDataItems = grid.select().map(function (index, item) {\r\n                            return grid.dataItem($(item));\r\n                        }).toArray();\r\n                    }\r\n\r\n                    //we only update 10 items at a time\r\n                    if (selectedDataItems.length > 10) {\r\n                        onExceedSelectionCount();\r\n                    }\r\n\r\n                    anchorViewModel.set('currentSelection', selectedDataItems);\r\n\r\n                    //if nothing is selected disabled the item\r\n                    if (selectedDataItems.length <= 0 || selectedDataItems.length > 10) {\r\n                        drawerTaskVm.setEnabled(false);\r\n                    } else {\r\n                        var selectedTypes = _.pluck(selectedDataItems, \"WorkItemType\");\r\n                        var selectedStatusNames = _.pluck(selectedDataItems, \"Status\");\r\n\r\n                        //return false if multiple selected, otherwise returns string values\r\n                        var singleSelectedType = _.reduce(selectedTypes, function (memo, currentVal) {\r\n                            return (memo === currentVal) ? memo : false;\r\n                        });\r\n                        drawerTaskVm.set(\"selectedWorkItem.type\", singleSelectedType);\r\n\r\n                        var singleSelectedStatusName = _.reduce(selectedStatusNames, function (memo, currentVal) {\r\n                            return (memo === currentVal) ? memo : false;\r\n                        });\r\n\r\n                        if (singleSelectedType) {\r\n                            switch (singleSelectedType) {\r\n                                case \"System.WorkItem.ServiceRequest\":\r\n                                    drawerTaskVm.setTrimmedWiType();\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemServiceRequestViewModel);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', 'SupportGroup');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', app.constants.enumPickerIds.ServiceRequestSupportGroup);\r\n                                    //if SR is closed do not allow status change from here (TFS 3560)\r\n                                    if (singleSelectedStatusName === \"Closed\") {\r\n                                        drawerTaskVm.setEnabled(false);\r\n                                    } else {\r\n                                        drawerTaskVm.setEnabled(true);\r\n                                    }\r\n                                    break;\r\n                                case \"System.WorkItem.Incident\":\r\n                                    drawerTaskVm.setTrimmedWiType();\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemIncidentViewModel);\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', 'TierQueue');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', app.constants.enumPickerIds.IncidentTierQueue);\r\n                                    drawerTaskVm.setEnabled(true);\r\n                                    break;\r\n                                default:\r\n                                    drawerTaskVm.set('selectedWorkItem.projectionId', '');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyName', '');\r\n                                    drawerTaskVm.set('selectedWorkItem.groupPropertyEnumId', '');\r\n                                    // not a supported bulk edit Type, disable the edit button\r\n                                    drawerTaskVm.setEnabled(false);\r\n                            }\r\n                        } else {\r\n                            //not same type && status\r\n                            drawerTaskVm.setEnabled(false);\r\n                        }\r\n                    }\r\n                };\r\n                anchorViewModel.setTrimmedWiType = function () {\r\n                    this.set('selectedWorkItem.trimmedType', this.selectedWorkItem.type.split(/[\\s.]+/).pop());\r\n                };\r\n\r\n\r\n            };\r\n            //helper functions\r\n            var getBulkEditedFieldData = function (viewModel) {\r\n                var json = [];\r\n\r\n                switch (viewModel.selectedWorkItem.trimmedType) {\r\n                    case \"Incident\":\r\n                        json = [\r\n                           { \r\n                                PropertyName: \"TierQueue\",\r\n                                EditedValue: viewModel.assignedSupportGroup.Id,\r\n                                PropertyType: \"enum\"\r\n                           },\r\n                           {\r\n                                PropertyName: \"AssignedWorkItem\",\r\n                                EditedValue: viewModel.assignedWorkItem.baseId,\r\n                                PropertyType: \"singleCardinalityObject\",\r\n                                PropertyRelationshipId: \"15e577a3-6bf9-6713-4eac-ba5a5b7c4722\" //magic guid\r\n                            },\r\n                            {\r\n                                PropertyName: \"AppliesToTroubleTicket\",\r\n                                PropertyType: \"multiplecardinalityobject\",\r\n                                PropertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //more magic!\r\n                                EditedValue: {\r\n                                    ActionType: {\r\n                                        Id: \"b04370d9-3d4f-3981-61bb-ac9462a1fe65\", //magic?\r\n                                        Name: \"Record Assigned\"\r\n                                    },\r\n                                    Description: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    DescriptionDisplay: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    EnteredBy: session.user.Name,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Title: localization.RecordAssigned,\r\n                                    Image: app.config.iconPath + app.config.icons[\"Record Assigned\"]\r\n                                }\r\n                            }\r\n                        ];\r\n                        break;\r\n                    case \"ServiceRequest\":\r\n                        json = [\r\n                            {\r\n                                PropertyName: \"SupportGroup\",\r\n                                EditedValue: viewModel.assignedSupportGroup.Id,\r\n                                PropertyType: \"enum\"\r\n                            },\r\n                            {\r\n                                PropertyName: \"AssignedWorkItem\",\r\n                                EditedValue: viewModel.assignedWorkItem.baseId,\r\n                                PropertyType: \"singleCardinalityObject\",\r\n                                PropertyRelationshipId: \"15e577a3-6bf9-6713-4eac-ba5a5b7c4722\" //magic guid\r\n                            },\r\n                            {\r\n                                PropertyName: \"AppliesToWorkItem\",\r\n                                PropertyType: \"multiplecardinalityobject\",\r\n                                PropertyRelationshipId: \"79d27435-5917-b0a1-7911-fb2b678f32a6\", //more magic!\r\n                                EditedValue: {\r\n                                    ActionType: {\r\n                                        Id: \"b04370d9-3d4f-3981-61bb-ac9462a1fe65\", //magic?\r\n                                        Name: \"Record Assigned\"\r\n                                    },\r\n                                    Description: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    DescriptionDisplay: localization.RecordAssignedDescription.replace(\"{0}\", session.user.Name).replace(\"{1}\", viewModel.assignedWorkItem.displayName),\r\n                                    EnteredBy: session.user.Name,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Title: localization.RecordAssigned,\r\n                                    Image: app.config.iconPath + app.config.icons[\"Record Assigned\"]\r\n                                }\r\n                            }\r\n                        ];\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                return json;\r\n            }\r\n            var onExceedSelectionCount = function () {\r\n                kendo.ui.ExtAlertDialog.show({\r\n                    title: localizationHelper.localize('Warning'),\r\n                    message: localizationHelper.localize('BulkEditExceedMessage')\r\n                });\r\n            }\r\n            var onBulkEditSaveSuccess = function (taskVm) {\r\n                if (app.isMobile()) {\r\n                    var listControl = $(\"[data-control-id='\" + taskVm.targetControlId + \"']\").data('kendoListView');\r\n                    listControl.dataSource.query();\r\n                } else {\r\n                    //refresh the grid to get updated data.\r\n                    var targetGrid = $('#' + taskVm.targetControlId).data('kendoGrid');\r\n                    var targetGridState = app.gridUtils.savedState.getCurrentState(taskVm.targetControlId);\r\n                    app.lib.recheckGridState(targetGridState, targetGrid);\r\n                    targetGrid.dataSource.query(targetGridState);\r\n                }\r\n                app.lib.message.add(localizationHelper.localize('SaveSuccessMessage'), \"success\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var onBulkEditSaveFailure = function () {\r\n                app.lib.message.add(localizationHelper.localize('SaveErrorMessage'), \"danger\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var getOriginalFormValues = function () {\r\n                if (!_.isUndefined(vm.viewModel.AssignedWorkItem)) {\r\n                    originalAssignedName = vm.viewModel.AssignedWorkItem.DisplayName;\r\n                    originalAssignedId = vm.viewModel.AssignedWorkItem.BaseId;\r\n                }\r\n\r\n                if (callerType == \"Incident\") {\r\n                    originalSupportGroup = vm.viewModel.TierQueue;\r\n                    originalSupportName = (!_.isNull(vm.viewModel.TierQueue) && !_.isUndefined(vm.viewModel.TierQueue))\r\n                                                ? vm.viewModel.TierQueue.Name\r\n                                                : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel.TierQueue) && !_.isUndefined(vm.viewModel.TierQueue))\r\n                                                  ? vm.viewModel.TierQueue.Id\r\n                                                  : \"00000000-0000-0000-0000-000000000000\";\r\n                } else if (callerType == \"ServiceRequest\") {\r\n                    originalSupportGroup = vm.viewModel.SupportGroup;\r\n                    originalSupportName = (!_.isNull(vm.viewModel.SupportGroup) && !_.isUndefined(vm.viewModel.SupportGroup))\r\n                                          ? vm.viewModel.SupportGroup.Name : \"\";\r\n                    originalSupportId = (!_.isNull(vm.viewModel.SupportGroup) && !_.isUndefined(vm.viewModel.SupportGroup))\r\n                                            ? vm.viewModel.SupportGroup.Id : \"00000000-0000-0000-0000-000000000000\";\r\n                }\r\n                originalSupportGroup.Text = originalSupportGroup.Name; //Need this so mapping works later on :-( .  \r\n            }\r\n            var getUserDataSource = function (selectedSupportGroupId) {\r\n                var userDataSource = new kendo.data.DataSource({\r\n                    transport: {\r\n                        read: {\r\n                            url: app.lib.addUrlParam(\"/api/V3/User/GetSupportGroupUsers\", \"id\", selectedSupportGroupId),\r\n                            dataType: \"json\"\r\n                        }\r\n                    },\r\n                    schema: {\r\n                        model: {\r\n                            fields: {\r\n                                Id: { type: \"string\" },\r\n                                Name: { type: \"string\" }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                return userDataSource;\r\n            }\r\n            var setSupportGroupUsers = function (item, vmWindow, asssignToComboBox) {\r\n                if (_.isUndefined(item)) {\r\n                    return;\r\n                }\r\n\r\n                if (!isBulkEdit) {\r\n                    if (vm.type == \"Incident\" && !_.isUndefined(vm.viewModel.TierQueue)) {\r\n                        vm.viewModel.set(\"TierQueue\", item);\r\n                    } else if (vm.type == \"ServiceRequest\" && !_.isUndefined(vm.viewModel.SupportGroup)) {\r\n                        vm.viewModel.set(\"SupportGroup\", item);\r\n                    }\r\n                }\r\n                vmWindow.set(\"userEnabled\", true);\r\n                vmWindow.set(\"okEnabled\", true);\r\n\r\n                vmWindow.set(\"assignToDataSource\", getUserDataSource(item.Id));\r\n                vmWindow.assignToDataSource.bind(\"change\", function (e) {\r\n                    asssignToComboBox.focus();\r\n                    asssignToComboBox.value(\"\");\r\n                    asssignToComboBox.input.attr(\"placeholder\", localization.ChooseOne);\r\n                });\r\n            }\r\n            var buildAndRender = {\r\n                windowEle: function () {\r\n                    //build the template for the window\r\n                    var built = _.template(windowTemplate);\r\n                    var view = new kendo.View(built(), { wrap: false });\r\n                    //add in hidden window\r\n                    callback(view.render());\r\n                    view.destroy();//there is some issue with the cloned element if we don't destroy the view\r\n                    return view;\r\n                },\r\n                taskListItem: function (properties, anchorViewModel, template) {\r\n                    $.extend(true, properties, node);\r\n                    //build the anchor and bind viewModel to it\r\n                    var builtAnchor = _.template(template);\r\n                    var anchorElm = new kendo.View(builtAnchor(properties), {\r\n                        wrap: false, model: anchorViewModel\r\n                    });\r\n                    //send anchor element back to caller (appended in the callback)\r\n                    callback(anchorElm.render());\r\n                    return anchorElm;\r\n                }\r\n            }\r\n            /* initialization code*/\r\n            function initTask() {\r\n                //build and render window\r\n                var modalView = buildAndRender.windowEle();\r\n                //save orig values for defined form\r\n                if (!isBulkEdit) {\r\n                    getOriginalFormValues();\r\n                }\r\n                //get the view models\r\n                var formTaskViewModel = getTaskViewModel(modalView);\r\n\r\n                if (isBulkEdit) {\r\n                    setAdditionBulkTaskProperties(formTaskViewModel);\r\n                    buildAndRender.taskListItem({ onClick: \"analystByGroup\", toolTipMessage: localizationHelper.localize('MustSelectSameType') }, formTaskViewModel, drawerTaskTemplate);\r\n                    /*subscribe to events*/\r\n                    if (!app.isMobile()) {\r\n                        //called on grid row clicks\r\n                        app.events.subscribe(\"gridChange\", function(event, grid) {\r\n                            formTaskViewModel.onTargetControlChange(grid);\r\n                            formTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                        });\r\n\r\n                        //for initial grid load listen to this event so we can set persisted state information\r\n                        app.events.subscribe(\"gridBound\", function(event, grid) {\r\n                            formTaskViewModel.onTargetControlChange(grid);\r\n                            formTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                        });\r\n                    } else {\r\n                        //called on mobile listview checkbox selection\r\n                        app.events.subscribe(\"mobileWiListSelectionChange\", function (event, listView) {\r\n                            if (!_.isUndefined(listView)) {\r\n                                formTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                                formTaskViewModel.targetControlId = listView.controlId;\r\n                            }\r\n                        });\r\n                        app.events.subscribe(\"mobileWiListInit\", function (event, listView) {\r\n                            if (!_.isUndefined(listView)) {\r\n                                formTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                                formTaskViewModel.targetControlId = listView.controlId;\r\n                            }\r\n                        });\r\n                    }\r\n                    /*END subscribe to events*/\r\n\r\n                    \r\n                } else {\r\n                    //build and render the link\r\n                    buildAndRender.taskListItem({ Target: \"analystByGroup\" }, formTaskViewModel, anchorTemplate);\r\n                }\r\n\r\n            };\r\n\r\n            /* END initialization code*/\r\n\r\n            //do it\r\n            initTask();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\n","\ndefine('text!forms/popups/notificationPopup/view.html',[],function () { return '<div class=\"popupNotification\"></div>';});\n\n","/**\r\nAssign To Me\r\n**/\r\n\r\ndefine('forms/tasks/assignToMe/controller',['require','text!forms/tasks/anchor/view.html','text!forms/popups/notificationPopup/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var notificationTpl = require(\"text!forms/popups/notificationPopup/view.html\");\r\n\r\n    var definition = {\r\n        notificationTemplate: notificationTpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(notificationTpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var viewModel = kendo.observable({\r\n                displayName: node.Configs.displayName,\r\n                baseId: node.Configs.baseId,\r\n                target: node.Configs.target,\r\n                assignToMe: function () {\r\n                    //set AssingedWorkitem to current user\r\n                    vm.viewModel.AssignedWorkItem.set(\"BaseId\", this.baseId);\r\n                    vm.viewModel.AssignedWorkItem.set(\"DisplayName\", this.displayName);\r\n\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.AssignedToMeNotificationMessage, \"This workitem is assigned to {0}\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"assignToMe\"\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/changeStatus/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"statusPicker\" />\\r\\n            <div id=\"resolutionPicker\" data-bind=\"visible: showResolution\" />\\r\\n            <div id=\"resolutionDescription\" data-bind=\"visible: showResolution\" />\\r\\n            <div id=\"comment\" data-bind=\"visible: showComment\" />\\r\\n            <div id=\"autoResolve\" data-bind=\"visible: showAutoResolve\" />\\r\\n            <div id=\"letAnalystDecide\" data-bind=\"visible: letAnalystDecide\" />\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/tasks/changeStatus/view.drawer.html',[],function () { return '<div class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <!-- status picker for IR or SR statuses -->\\r\\n            <div class=\"form-group\">\\r\\n                <label class=\"control-label\" data-bind=\"localize: Status\">\\r\\n                </label>\\r\\n                <div class=\"form-control form-control-picker input-sm\"\\r\\n                     data-role=\"Status\"\\r\\n                     data-url=\"/api/V3/Enum/GetList\"\\r\\n                     data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                     data-disabled=\"false\"\\r\\n                     data-bind=\"ciresonDropDownTree: wiStatusTypeId, value: newStatusObj, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n            </div>\\r\\n            <!-- resolution category picker for IR -->\\r\\n            <div data-bind=\"visible: irStatusResolved\">\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: ResolutionCategory\"></span> (<span data-bind=\"localize: Required\"></span>)\\r\\n                    </label>\\r\\n                    <div class=\"form-control form-control-picker input-sm\"\\r\\n                         data-role=\"Resolution\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-disabled=\"false\"\\r\\n                         data-bind=\"ciresonDropDownTree: resolutionResultEnumId, value: newResolutionId, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n\\r\\n                </div>\\r\\n                <!-- resolution description for IR -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\" data-bind=\"localize: ResolutionDescription\">\\r\\n                    </label>\\r\\n                    <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                              data-bind=\"value: resolutionDescription\" maxlength=\"4000\"></textarea>\\r\\n                </div>\\r\\n\\r\\n                <!-- resolve child incidents: let analyst decide option-->\\r\\n                <div class=\"form-group\" data-bind=\"visible: irResolveChildOption\">\\r\\n                    <div class=\"checkbox  checkbox-inline \">\\r\\n                        <input type=\"checkbox\" name=\"resolveChildIncident\" data-bind=\"checked: resolveChildIncident\">\\r\\n                        <label class=\"control-label\" for=\"resolveChildIncident\">\\r\\n                            <span data-bind=\"localize: ResolveChildIncidentMessage\" />\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div data-bind=\"visible: srStatusCompleted\">\\r\\n                <!-- SR Implementation Results -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: ImplementationResults\"></span>\\r\\n                    </label>\\r\\n                    <div class=\"form-control form-control-picker input-sm\"\\r\\n                         data-role=\"Resolution\"\\r\\n                         data-url=\"/api/V3/Enum/GetList\"\\r\\n                         data-combourl=\"/api/V3/Enum/GetFlatList/\"\\r\\n                         data-disabled=\"false\"\\r\\n                         data-bind=\"ciresonDropDownTree: resolutionResultEnumId, value: newResultId, options: { showPath: showPath,  mustSelectLeafNode: leafNodeOnly }\"></div>\\r\\n\\r\\n                </div>\\r\\n                <!-- SR Implementation Notes -->\\r\\n                <div class=\"form-group\">\\r\\n                    <label class=\"control-label\">\\r\\n                        <span data-bind=\"localize: Implementationnotes\"></span> (<span data-bind=\"localize: Required\"></span>)\\r\\n                    </label>\\r\\n                    <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                              data-bind=\"value: resultNote\" maxlength=\"4000\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- comment for SR in \\'Cancelled\\' status -->\\r\\n            <div class=\"form-group\" data-bind=\"visible: srStatusCancelled\">\\r\\n                <label class=\"control-label\" data-bind=\"localize: Comment\">\\r\\n                </label>\\r\\n                <textarea class=\"k-textbox form-control input-sm\" rows=\"5\"\\r\\n                          data-bind=\"value: resultComment\" maxlength=\"4000\"></textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\" class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled,\\r\\n                           events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\" class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/fields/longstring/view.html',[],function () { return '<div class=\"form-group <%= visible %>\" style=\"\">\\r\\n\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <textarea name=\"<%= PropertyName %>\"\\r\\n              class=\"k-textbox form-control input-sm\"\\r\\n              rows=\"<%= Rows %>\"\\r\\n              data-bind=\"value: <%= PropertyName %><% if ( LimitLength ){ %>, events : { blur: view.longStringController.CheckLength }<% } %>\"\\r\\n        <% if ( LimitLength ){ %>\\r\\n        maxlength=\"<%= MaxLength %>\"\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        <% if ( Required ){ %>\\r\\n        required\\r\\n        <% } %>\\r\\n\\r\\n        >\\r\\n    </textarea>\\r\\n    <% if ( LimitLength ){ %>\\r\\n    <p class=\"help-block validation-summary-errors\" style=\"display: none;\"><%= localization.MaxLengthError.replace(\"{0}\", MaxLength) %></p>\\r\\n    <% } %>\\r\\n</div>\\r\\n<script>\\r\\n    $(\\'textarea[name=ResolutionDescription]\\').removeClass(\\'form-control\\');\\r\\n</script>\\r\\n';});\n\n","/**\r\nLONGSTRING\r\n**/\r\n\r\ndefine('forms/fields/longstring/controller',['require','text!forms/fields/longstring/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/longstring/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.longStringController = {\r\n                CheckLength: function checkLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n            vm.view.buildLongStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength,\r\n                    Rows: 10,\r\n                    visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n                };\r\n                $.extend(true, properties, node);\r\n                //console.log(properties);\r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildLongStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\r\n\n","\ndefine('text!forms/fields/boolean/view.html',[],function () { return '<div class=\"form-group <%= visible %>\">\\r\\n    <% if ( !Inline ){ %>\\r\\n    <label class=\"control-label\" data-localize=\"<%= PropertyDisplayName %>\"><span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span></label>\\r\\n    <% } %>\\r\\n\\r\\n    <div class=\"checkbox <% if ( Inline ){ %> checkbox-inline <% } else { %> checkbox-block <% } %>\">\\r\\n        <input type=\"checkbox\"\\r\\n               name=\"<%= PropertyName %>\"\\r\\n               id=\"<%= PropertyName %>\"\\r\\n               data-bind=\"checked: <%= PropertyName %>\"<% if ( Disabled ){ %>\\r\\n        disabled\\r\\n        <% } %>\\r\\n\\r\\n        />\\r\\n\\r\\n\\r\\n        <label class=\"control-label\" for=\"<%= PropertyName %>\">\\r\\n            <% if ( Inline ){ %>\\r\\n            <span data-localize=\"<%= PropertyDisplayName %>\"></span>\\r\\n            <% } %>\\r\\n        </label>\\r\\n\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nBOOLEAN\r\n**/\r\n\r\ndefine('forms/fields/boolean/controller',['require','text!forms/fields/boolean/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/boolean/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n            var properties = {\r\n                Disabled: node.disabled,\r\n                Required: node.Required,\r\n                Inline: node.Inline || false,\r\n                visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n        };\r\n            \r\n            \r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/changeStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/changeStatus/view.html','text!forms/tasks/changeStatus/view.drawer.html','forms/fields/enum/controller','forms/fields/longstring/controller','forms/fields/boolean/controller','text!forms/tasks/drawerTask/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchorTemplate = require(\"text!forms/tasks/anchor/view.html\");\r\n    var changeStatusTemplate = require(\"text!forms/tasks/changeStatus/view.html\");\r\n    var changeStatusDrawerTemplate = require(\"text!forms/tasks/changeStatus/view.drawer.html\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n    var txtAreaControl = require(\"forms/fields/longstring/controller\");\r\n    var checkBoxControl = require(\"forms/fields/boolean/controller\");\r\n    var drawerTaskTemplate = require(\"text!forms/tasks/drawerTask/view.html\");\r\n\r\n    var definition = {\r\n        template: changeStatusTemplate,\r\n        build: function (vm, node, callback) {\r\n            /*\r\n             * Change mustSelectLeafNode and/or showEnumPath to modify\r\n             * bulk status change enum picker behavior. \r\n             */\r\n            var mustSelectLeafNode = false;\r\n            var showEnumPath = false;\r\n\r\n            //for problem's autoresolve \r\n            if (vm.type == \"Problem\" && _.isUndefined(vm.viewModel.IsAutoResolve)) {\r\n                vm.viewModel.set(\"IsAutoResolve\", vm.viewModel.AutoResolve);\r\n            }\r\n\r\n            /* variables */\r\n            var resolveChildIncidentSettings;\r\n            if (vm.type != \"BulkEdit\") {\r\n                //used for cancel click event on form task\r\n                var originalVm = {\r\n                    Status: _.clone(vm.viewModel.Status),\r\n                    ResolutionCategory: !_.isUndefined(vm.viewModel.ResolutionCategory) ? _.clone(vm.viewModel.ResolutionCategory) : null,\r\n                    ResolutionDescription: _.clone(vm.viewModel.ResolutionDescription),\r\n                    ChildWorkItem: _.clone(vm.viewModel.ChildWorkItem),\r\n                    Notes: _.clone(vm.viewModel.Notes),\r\n                    ImplementationResults: !_.isUndefined(vm.viewModel.ImplementationResults) ? _.clone(vm.viewModel.ImplementationResults) : null,\r\n                    RelatesToWorkItem: _.clone(vm.viewModel.RelatesToWorkItem),\r\n                    Resolution: !_.isUndefined(vm.viewModel.Resolution) ? _.clone(vm.viewModel.Resolution) : null,\r\n                    AutoResolve: !_.isUndefined(vm.viewModel.AutoResolve) ? _.clone(vm.viewModel.AutoResolve) : false,\r\n                }\r\n            }\r\n            var workItemStatuses = app.constants.workItemStatuses;\r\n            //map all the status constants to shorter local vars. used in getFormTaskViewModel() and getFormTaskChangeRules()\r\n            var incidentResolved = workItemStatuses.Incident.Resolved;\r\n            var incidentActive = workItemStatuses.Incident.Active;\r\n            var incidentClosed = workItemStatuses.Incident.Closed;\r\n            var incidentActivePending = workItemStatuses.Incident.Pending;\r\n            var serviceRequestCancelled = workItemStatuses.ServiceRequest.Cancelled;\r\n            var serviceRequestCompleted = workItemStatuses.ServiceRequest.Completed;\r\n            var serviceRequestSubmitted = workItemStatuses.ServiceRequest.Submitted;\r\n            var serviceRequestInProgress = workItemStatuses.ServiceRequest.InProgress;\r\n            var serviceRequestOnHold = workItemStatuses.ServiceRequest.OnHold;\r\n            var serviceRequestFailed = workItemStatuses.ServiceRequest.Failed;\r\n            var serviceRequestClosed = workItemStatuses.ServiceRequest.Closed;\r\n            var changeRequestFailed = workItemStatuses.ChangeRequest.Failed;\r\n            var changeRequestClosed = workItemStatuses.ChangeRequest.Closed;\r\n            var changeRequestInProgress = workItemStatuses.ChangeRequest.InProgress;\r\n            var changeRequestOnHold = workItemStatuses.ChangeRequest.OnHold;\r\n            var changeRequestCancelled = workItemStatuses.ChangeRequest.Cancelled;\r\n            var changeRequestSubmitted = workItemStatuses.ChangeRequest.Submitted;\r\n            var changeRequestCompleted = workItemStatuses.ChangeRequest.Completed;\r\n            var problemResolved = workItemStatuses.Problem.Resolved;\r\n            var problemClosed = workItemStatuses.Problem.Closed;\r\n            var releaseRecordClosed = workItemStatuses.ReleaseRecord.Closed;\r\n            var releaseRecordCancelled = workItemStatuses.ReleaseRecord.Cancelled;\r\n            var releaseRecordCompleted = workItemStatuses.ReleaseRecord.Completed;\r\n            var releaseRecordFailed = workItemStatuses.ReleaseRecord.Failed;\r\n            var releaseRecordEditing = workItemStatuses.ReleaseRecord.Editing;\r\n            var releaseRecordOnHold = workItemStatuses.ReleaseRecord.OnHold;\r\n            var releaseRecordInProgress = workItemStatuses.ReleaseRecord.InProgress;\r\n            /* END variables */\r\n\r\n\r\n            /* functions */\r\n            //main viewModel that holds ALL THE THINGS\r\n            var getFormTaskViewModel = function (modalEle) {\r\n                return kendo.observable({\r\n                    //'changeStatus' function is bound to anchor click event via data-bind=\"click: blahblah\"\r\n                    changeStatus: function () {\r\n                        var modalWindowEle = modalEle.element.clone(); //we have the element in memory so no need use a selector\r\n\r\n                        var modalWindowControl = modalWindowEle.kendoCiresonWindow({\r\n                            title: localization.ChangeStatusTask,\r\n                            width: 600,\r\n                            height: 480,\r\n                            actions: [],\r\n                            //activate trigger when window open animation is complete.\r\n                            activate: function () {\r\n                                var selectedWiType = modalWindowViewModel.type;\r\n                                var currentStatusId = vm.viewModel.Status.Id;\r\n                                onModalActivate(selectedWiType, currentStatusId, statusTreeViewControl, statusDropDownControl, modalWindowViewModel.enumId);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //this view Model is bound to the window element\r\n                        var modalWindowViewModel = kendo.observable({\r\n                            enumId: node.Configs.statusEnumId,\r\n                            resolutionCategoryEnumId: node.Configs.resolutionCategoryEnumId,\r\n                            type: node.Configs.type,\r\n                            resolveChildSettings: null,\r\n                            letAnalystDecide: false,\r\n                            workItemModel: vm.viewModel,\r\n                            okEnabled: false,\r\n                            requireResolution: false,\r\n                            resolveChildIncident: true,\r\n                            okClick: function () {\r\n                                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                if (_.isString(vm.viewModel.Status.Name) && vm.viewModel.Status.Name.length < 1) {\r\n                                    vm.viewModel.set(\"Status\", { Id: originalVm.Status.Id, Name: originalVm.Status.Name });\r\n                                } else if (this.requireResolution && (!_.isUndefined(vm.viewModel.ResolutionCategory) && _.isNull(vm.viewModel.ResolutionCategory.Id))) {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(localization.RequestCategoryRequiredError);\r\n                                } else if (this.requireResolution && _.isNull(vm.viewModel.Notes) && (vm.type == \"ServiceRequest\")) {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(localization.ImplementationNotesRequiredError);\r\n                                } else if (vm.viewModel.Status.Id === incidentResolved) { //resolved incident\r\n                                    //set resolved date\r\n                                    vm.viewModel.set(\"ResolvedDate\", new Date().toISOString());\r\n                                    var resDateEle = $(\"input[name='ResolvedDate']\");\r\n                                    if (resDateEle.attr('data-control') == 'datePicker') {\r\n                                        resDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (resDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        resDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //add to action log\r\n                                   if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordResolved(vm.viewModel.ResolutionDescription));\r\n                                    }\r\n                                    //set resolved by user \r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: session.user.Id };\r\n\r\n                                    //if incident is a parent, check if we need to resolve its child incidents\r\n                                    if (vm.viewModel.IsParent && (this.resolveChildSettings.ResolveChildIncident || (this.resolveChildSettings.ResolvedLetAnalystDecide && this.resolveChildIncident)))\r\n                                        resolveChildIncidents(this.resolveChildSettings);\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === incidentClosed || vm.viewModel.Status.Id === serviceRequestClosed || vm.viewModel.Status.Id === problemClosed) { //closed IR or closed SR\r\n                                    //set closed date\r\n                                    vm.viewModel.set(\"ClosedDate\", new Date().toISOString());\r\n                                    var closeDateEle = $(\"input[name='ClosedDate']\");\r\n                                    if (closeDateEle.attr('data-control') == 'datePicker') {\r\n                                        closeDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (closeDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        closeDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //set closed by user \r\n                                    switch (vm.viewModel.Status.Id) {\r\n                                        case problemClosed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            break;\r\n                                        case incidentClosed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordClosed());\r\n                                            break;\r\n                                        case serviceRequestClosed:\r\n                                            vm.viewModel.ClosedByUser = { BaseId: session.user.Id };\r\n                                            break;\r\n                                    }\r\n                                    \r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                }\r\n                                else if (vm.viewModel.Status.Id === incidentActive) { //activate incident\r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: null };\r\n                                    vm.viewModel.ResolutionCategory.set(\"Id\", null);\r\n                                    vm.viewModel.ResolutionCategory.set(\"Name\", \"\");\r\n                                    vm.viewModel.set(\"ResolutionDescription\", null);\r\n                                    vm.viewModel.set(\"ResolvedDate\", null);\r\n\r\n                                    //add to action log\r\n                                    var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                    if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordActivated());\r\n                                    }\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === serviceRequestCompleted) { //completed service request\r\n                                    //set completed date\r\n                                    vm.viewModel.set(\"CompletedDate\", new Date().toISOString());\r\n                                    var comDateEle = $(\"input[name='CompletedDate']\");\r\n                                    if (comDateEle.attr('data-control') == 'datePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (comDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else if (vm.viewModel.Status.Id === problemResolved) { //resolved problem\r\n                                    //set resolve date\r\n                                    vm.viewModel.set(\"ResolvedDate\", new Date().toISOString());\r\n                                    var comDateEle = $(\"input[name='ResolvedDate']\");\r\n                                    if (comDateEle.attr('data-control') == 'datePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                    } else if (comDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                        comDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                    }\r\n\r\n                                    //set resolved by user \r\n                                    vm.viewModel.RelatesToTroubleTicket = { BaseId: session.user.Id };\r\n\r\n                                    if (vm.viewModel.IsAutoResolve) {\r\n                                        resolveRelatedWorkItems();\r\n                                    }\r\n\r\n                                    vm.viewModel.set(\"AutoResolve\", vm.viewModel.IsAutoResolve);\r\n\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                } else {\r\n                                    modalWindowEle.find('#changeStatusErrorWin').html(\"\");\r\n                                    modalWindowControl.close();\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                //reset to original values\r\n                                vm.viewModel.set(\"Status\", { Id: originalVm.Status.Id, Name: originalVm.Status.Name });\r\n                                if (node.Configs.type === \"Incident\") {\r\n                                    vm.viewModel.set(\"ResolutionCategory\", { Id: originalVm.ResolutionCategory.Id, Name: originalVm.ResolutionCategory.Name });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", originalVm.ResolutionDescription);\r\n                                    vm.viewModel.set(\"ChildWorkItem\", originalVm.ChildWorkItem);\r\n                                }\r\n                                if (node.Configs.type === \"ServiceRequest\") {\r\n                                    vm.viewModel.set(\"ImplementationResults\", { Id: originalVm.ImplementationResults.Id, Name: originalVm.ImplementationResults.Name });\r\n                                    vm.viewModel.set(\"Notes\", originalVm.Notes);\r\n                                }\r\n                                if (node.Configs.type === \"Problem\") {\r\n                                    vm.viewModel.set(\"Resolution\", { Id: originalVm.Resolution.Id, Name: originalVm.Resolution.Name });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", originalVm.ResolutionDescription);\r\n                                    vm.viewModel.set(\"RelatedWorkItems\", originalVm.RelatesToWorkItem);\r\n                                    vm.viewModel.set(\"AutoResolve\", originalVm.AutoResolve);\r\n                                    vm.viewModel.set(\"IsAutoResolve\", originalVm.AutoResolve);\r\n                                }\r\n                                modalWindowControl.close();\r\n                            },\r\n                            showComment: vm.viewModel.Status.Id == serviceRequestCancelled,\r\n                            showResolution: (vm.viewModel.Status.Id == incidentResolved || vm.viewModel.Status.Id == serviceRequestCompleted || vm.viewModel.Status.Id == problemResolved),\r\n                            showAutoResolve: (vm.viewModel.Status.Id == problemResolved)\r\n                        });\r\n\r\n                        //bind window element to window viewModel\r\n                        kendo.bind(modalWindowEle, modalWindowViewModel);\r\n\r\n                        //create status enumPicker\r\n                        createStatusPicker(modalWindowViewModel, modalWindowEle);\r\n                        var statusDropDownControl = modalWindowEle.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                        var statusTreeViewControl = modalWindowEle.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n\r\n                        //bind status picker changes events\r\n                        statusDropDownControl.bind(\"change\", function (e) {\r\n                            //make sure button is disabled again\r\n                            vm.viewModel.set(\"okEnabled\", false);\r\n                            enableResolutionSettings(vm.viewModel.Status.Id, modalWindowViewModel);\r\n                        });\r\n                        statusTreeViewControl.bind(\"change\", function (e) {\r\n                            //make sure button is disabled again\r\n                            vm.viewModel.set(\"okEnabled\", false);\r\n                            enableResolutionSettings(vm.viewModel.Status.Id, modalWindowViewModel);\r\n                        });\r\n\r\n\r\n                        /*\r\n                         * conditionally added fields\r\n                         */\r\n\r\n                        if (modalWindowViewModel.type === \"Incident\") {\r\n                            createIncidentResolutionFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        if (modalWindowViewModel.type === \"ServiceRequest\") {\r\n                            createResultFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        if (modalWindowViewModel.type === \"Problem\") {\r\n                            createProblemResolutionFields(modalWindowViewModel, modalWindowEle);\r\n                        }\r\n                        /*\r\n                         * END conditionally added fields\r\n                         */\r\n\r\n\r\n                        modalWindowEle.removeClass('hide');\r\n                        modalWindowEle.show();\r\n                        modalWindowControl.open();\r\n                    }\r\n                });\r\n            };\r\n\r\n            var getDrawerTaskViewModel = function (modalView) {\r\n                //drawerTaskVm is the viewModel that sits between the modal window and the page controls.\r\n                var drawerTaskVm = kendo.observable({\r\n                    currentSelection: [],\r\n                    currentSelectionOfParents: [],\r\n                    containsParents: false,\r\n                    selectedWorkItem: {\r\n                        type: '',\r\n                        trimmedType: '',\r\n                        projectionId: '',\r\n                        currentStatusId: '',\r\n                        currentStatusName: '',\r\n                        statusTypeId: '',\r\n                        resolutionResultEnumId: ''\r\n                    },\r\n                    openModal: function () {\r\n                        if (!this.isEnabled) {\r\n                            return;\r\n                        }\r\n                        var taskVm = this;\r\n                        var modalEle = modalView.element.clone();\r\n                        var modalControl = modalEle.kendoCiresonWindow({\r\n                            title: localization.ChangeStatusTask,\r\n                            actions: [],\r\n                            activate: function () {\r\n                                var selectedWiType = taskVm.selectedWorkItem.trimmedType;\r\n                                var currentStatusId = taskVm.selectedWorkItem.currentStatusId;\r\n                                onModalActivate(selectedWiType, currentStatusId, statusTreeViewControl, statusDropDownControl, taskVm.selectedWorkItem.statusTypeId);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n\r\n                        //viewModel for the kendo window control and form\r\n                        var modalViewModel = kendo.observable({\r\n                            selectedWorkItems: taskVm.currentSelection,\r\n                            //parent/child IR fields\r\n                            selectedParents: taskVm.currentSelectionOfParents,\r\n                            resolveChildSettings: null,\r\n                            resolveChildIncident: true,\r\n                            //edited form fields\r\n                            newStatusObj: '',                //IR|SR work item status (enum, required)\r\n                            newResolutionId: '',            //IR 'Resolution' (enum, required)\r\n                            resolutionDescription: '',      //IR 'Resolution Description' (textarea)\r\n                            newResultId: '',                //SR Implementation Results (enum)\r\n                            resultNote: '',                 //SR 'Completed' status 'Implementation Notes' (textarea, required)\r\n                            resultComment: '',              //SR 'Cancelled' status 'Comment' (textarea)\r\n                            showPath: showEnumPath,\r\n                            leafNodeOnly: mustSelectLeafNode,\r\n                            //wiStatusTypeId is the enum id for IR or SR used to get there wi status, resolutionResultEnumId is the enum id for IR resolution or SR result\r\n                            wiStatusTypeId: taskVm.selectedWorkItem.statusTypeId,\r\n                            resolutionResultEnumId: taskVm.selectedWorkItem.resolutionResultEnumId,\r\n\r\n                            //toggles for fields required and visible\r\n                            irStatusResolved: false,\r\n                            srStatusCompleted: false,\r\n                            srStatusCancelled: false,\r\n                            irCategoryRequired: false,\r\n                            srNotesRequired: false,\r\n                            irResolveChildOption: false,\r\n\r\n                            //button events/logic\r\n                            okEnabled: false,\r\n                            okClick: function () {\r\n\r\n                                var windowViewModel = this;\r\n                                var isValid = bulkEditFormIsValid(windowViewModel, modalEle);\r\n                                if (isValid) {\r\n                                    //check if we need to handle child wi resolution\r\n                                    if (windowViewModel.irStatusResolved && (resolveChildIncidentSettings.ResolveChildIncident || (windowViewModel.irResolveChildOption && windowViewModel.resolveChildIncident)) && taskVm.containsParents) {\r\n                                        //handles post for IR-resolved parents and children WIs\r\n                                        postBulkEditChangesWithChildren(taskVm, windowViewModel, modalControl);\r\n                                    } else {\r\n                                        //handles post for everything else\r\n                                        var data = {\r\n                                            ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                            UpdateServiceManagement: true,\r\n                                            ItemIds: _.pluck(windowViewModel.selectedWorkItems, 'BaseId'),\r\n                                            EditedFields: getDrawerTaskEditedFields(windowViewModel)\r\n                                        }\r\n\r\n                                        postBulkEditChanges(data, taskVm, modalControl);\r\n                                    }\r\n                                }\r\n                            },\r\n                            cancelClick: function () {\r\n                                modalControl.close();\r\n                            }\r\n                        });\r\n\r\n                        kendo.bind(modalEle, modalViewModel);\r\n\r\n                        //create status enumPicker && bind change events\r\n                        var statusDropDownControl = modalEle.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                        var statusTreeViewControl = modalEle.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n                        function handleStatusControlChange() {\r\n                            var item = modalViewModel.get(\"newStatusObj\");\r\n                            if (item) {\r\n                                toggleAdditionalFields(item.Id, taskVm.selectedWorkItem.currentStatusId, modalViewModel);\r\n                            }\r\n                        }\r\n                        statusDropDownControl.bind(\"change\", function (e) {\r\n                             handleStatusControlChange();\r\n                        });\r\n                        statusTreeViewControl.bind(\"change\", function (e) {\r\n                            handleStatusControlChange();\r\n                        });\r\n                        \r\n                        //set vis/require depending on the current status \r\n                        if (taskVm.selectedWorkItem.trimmedType === \"Incident\" && taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.Incident.Resolved) {\r\n                            modalViewModel.set('irStatusResolved', true);\r\n                            modalViewModel.set('irCategoryRequired', true);\r\n                        }\r\n                        if (taskVm.selectedWorkItem.trimmedType === \"ServiceRequest\") {\r\n                            if (taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.ServiceRequest.Completed) {\r\n                                modalViewModel.set('srStatusCompleted', true);\r\n                                modalViewModel.set('srStatusCancelled', false);\r\n                            } else if (taskVm.selectedWorkItem.currentStatusId === app.constants.workItemStatuses.ServiceRequest.Cancelled) {\r\n                                modalViewModel.set('srStatusCancelled', true);\r\n                                modalViewModel.set('srStatusCompleted', false);\r\n                            }\r\n                        }\r\n\r\n                        //show the window\r\n                        modalEle.removeClass('hide');\r\n                        modalEle.show();\r\n                        modalControl.open();\r\n                    },\r\n                    isEnabled: false,\r\n                    showTooltip: true,\r\n                    setEnabled: function (enabled) {\r\n                        this.set('isEnabled', enabled);\r\n                        this.set('showTooltip', !enabled);\r\n                    },\r\n                    targetControlId: '',\r\n                    onTargetControlChange: function (grid) {\r\n                        //empty out parentitems and set to false, readded below if applicable\r\n                        drawerTaskVm.set('currentSelectionOfParents', []);\r\n                        drawerTaskVm.set('containsParents', false);\r\n\r\n                        var selectedDataItems = [];\r\n                        if (app.isMobile()) {\r\n                            //grid is selected items array when called from mobile\r\n                            selectedDataItems = grid;\r\n                        } else {\r\n                            selectedDataItems = grid.select().map(function (index, item) {\r\n                                return grid.dataItem($(item));\r\n                            }).toArray();\r\n                        }\r\n\r\n                        //we only update 10 items at a time\r\n                        if (selectedDataItems.length > 10) {\r\n                            this.onExceedSelectionCount();\r\n                        }\r\n\r\n                        drawerTaskVm.set('currentSelection', selectedDataItems);\r\n\r\n                        //if nothing is selected disabled the item\r\n                        if (selectedDataItems.length <= 0 || selectedDataItems.length > 10) {\r\n                            drawerTaskVm.setEnabled(false);\r\n                        } else {\r\n                            var selectedTypes = _.pluck(selectedDataItems, \"WorkItemType\");\r\n                            var selectedStatusIds = _.pluck(selectedDataItems, \"StatusId\");\r\n                            var selectedStatusNames = _.pluck(selectedDataItems, \"Status\");\r\n\r\n                            //return false if multiple selected, otherwise returns string values\r\n                            var singleSelectedType = _.reduce(selectedTypes, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            drawerTaskVm.set(\"selectedWorkItem.type\", singleSelectedType);\r\n\r\n                            //return false if multiple selected, otherwise returns string values\r\n                            var singleSelectedStatusId = _.reduce(selectedStatusIds, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            var singleSelectedStatusName = _.reduce(selectedStatusNames, function (memo, currentVal) {\r\n                                return (memo === currentVal) ? memo : false;\r\n                            });\r\n                            drawerTaskVm.set(\"selectedWorkItem.currentStatusId\", singleSelectedStatusId);\r\n                            drawerTaskVm.set(\"selectedWorkItem.currentStatusName\", singleSelectedStatusName);\r\n\r\n\r\n                            if (singleSelectedStatusId && singleSelectedType) {\r\n                                switch (singleSelectedType) {\r\n                                    case \"System.WorkItem.ServiceRequest\":\r\n                                        drawerTaskVm.setTrimmedWiType();\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemServiceRequestViewModel);\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', app.constants.workItemStatuses.ServiceRequest.Id);\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', app.constants.enumPickerIds.ServiceRequestImplementationResults);\r\n\r\n                                        //if SR is closed do not allow status change from here (TFS 3560)\r\n                                        if (singleSelectedStatusName === \"Closed\") {\r\n                                            drawerTaskVm.setEnabled(false);\r\n                                        } else {\r\n                                            drawerTaskVm.setEnabled(true);\r\n                                        }\r\n\r\n                                        break;\r\n                                    case \"System.WorkItem.Incident\":\r\n                                        var parentItems = [];\r\n                                        _.each(selectedDataItems, function (workItem) {\r\n                                            if (workItem.IsParent) {\r\n                                                drawerTaskVm.set('containsParents', true);\r\n                                                parentItems.push(workItem);\r\n                                            }\r\n                                        });\r\n                                        drawerTaskVm.set('currentSelectionOfParents', parentItems);\r\n\r\n                                        drawerTaskVm.setTrimmedWiType();\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', app.constants.projectionIds.SystemWorkItemIncidentViewModel);\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', app.constants.workItemStatuses.Incident.Id);\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', app.constants.enumPickerIds.IncidentResolution);\r\n                                        drawerTaskVm.setEnabled(true);\r\n                                        break;\r\n                                    default:\r\n                                        drawerTaskVm.set('selectedWorkItem.projectionId', '');\r\n                                        drawerTaskVm.set('selectedWorkItem.statusTypeId', '');\r\n                                        drawerTaskVm.set('selectedWorkItem.resolutionResultEnumId', '');\r\n                                        // not a supported bulk edit Type, disable the edit button\r\n                                        drawerTaskVm.setEnabled(false);\r\n                                }\r\n                            } else {\r\n                                //not same type && status\r\n                                drawerTaskVm.setEnabled(false);\r\n                            }\r\n                        }\r\n                    },\r\n                    setTrimmedWiType: function () {\r\n                        this.set('selectedWorkItem.trimmedType', this.selectedWorkItem.type.split(/[\\s.]+/).pop());\r\n                    },\r\n                    onExceedSelectionCount: function() {\r\n                        kendo.ui.ExtAlertDialog.show({\r\n                            title: localizationHelper.localize('Warning'),\r\n                            message: localizationHelper.localize('BulkEditExceedMessage')\r\n                        });\r\n                    }\r\n                });\r\n\r\n                return drawerTaskVm;\r\n            };\r\n\r\n            //executes when modal dialog is opening\r\n            var onModalActivate = function (selectedWiType, currentStatusId, treeControl, dropDownControl, statusEnumId) {\r\n                //determine allowed status changes based on current type and status\r\n                var changeRules = getFormTaskChangeRules();\r\n                var changeRulesFilter = changeRules[selectedWiType][currentStatusId];\r\n                \r\n                //since Incident can have custom enums we need to check here if no rules were set then its not resolved\r\n                if (selectedWiType == \"Incident\" && _.isUndefined(changeRulesFilter)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"neq\", value: app.constants.workItemStatuses.Incident.Closed };\r\n                }\r\n\r\n                //apply allowed status filtering\r\n                treeControl.dataSource.options.serverFiltering = false;\r\n                treeControl.dataSource.filter(changeRulesFilter);\r\n\r\n                //reassign dropdown datasource with filtered data so that users will not be able to access restricted status by typing\r\n                $.get(\"/api/V3/Enum/GetFlatList/\", { id: statusEnumId, itemFilter: \"\" }, function (data) {\r\n                    var comboDataSource = new kendo.data.DataSource();\r\n                    comboDataSource.data(data);\r\n                    comboDataSource.filter(changeRulesFilter);\r\n                    if (comboDataSource.view().length > 0) {\r\n                        dropDownControl.setDataSource(comboDataSource.view());\r\n                    }\r\n                });\r\n                \r\n                resolveChildIncidentSettings = getResolveChildIncidentSettings();\r\n            };\r\n\r\n            //template .build() and view.renderererers.\r\n            var buildAndRender = {\r\n                windowEle: function (windowTemplate) {\r\n                    //build the template for the window\r\n                    var builtModal = _.template(windowTemplate);\r\n                    var ele = new kendo.View(builtModal(), { wrap: false });\r\n                    //send hidden window back to caller (appended in the callback)\r\n                    callback(ele.render());\r\n                    return ele;\r\n                },\r\n                taskListItem: function (properties, anchorViewModel, template) {\r\n                    $.extend(true, properties, node);\r\n                    //build the anchor and bind viewModel to it\r\n                    var builtAnchor = _.template(template);\r\n                    var anchorElm = new kendo.View(builtAnchor(properties), {\r\n                        wrap: false, model: anchorViewModel\r\n                    });\r\n                    //send anchor element back to caller (appended in the callback)\r\n                    callback(anchorElm.render());\r\n                    return anchorElm;\r\n                }\r\n            }\r\n            //creators of controls in the window\r\n            var createProblemResolutionFields = function (modalWindowViewModel, modalWindowEle) {\r\n                var resolutionProperties = {\r\n                    PropertyName: \"Resolution\",\r\n                    PropertyDisplayName: \"Resolution\",\r\n                    Required: false,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), resolutionProperties, vm.viewModel);\r\n\r\n                var implementationNotesProperties = {\r\n                    PropertyName: \"ResolutionDescription\",\r\n                    PropertyDisplayName: \"ResolutionDescription\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), implementationNotesProperties, vm.viewModel);\r\n\r\n                var autoResolveProperties = {\r\n                    PropertyName: \"IsAutoResolve\",\r\n                    PropertyDisplayName: \"ProblemAutoResolveIncident\",\r\n                    Inline: true,\r\n                    Disabled: false\r\n                };\r\n                buildCheckbox(modalWindowEle.find(\"#autoResolve\"), autoResolveProperties, vm.viewModel);\r\n            };\r\n            var createResultFields = function (modalWindowViewModel, modalWindowEle) {\r\n                var implementationResultProperties = {\r\n                    PropertyName: \"ImplementationResults\",\r\n                    PropertyDisplayName: \"ImplementationResults\",\r\n                    Required: false,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), implementationResultProperties, vm.viewModel);\r\n\r\n                var implementationNotesProperties = {\r\n                    PropertyName: \"Notes\",\r\n                    PropertyDisplayName: \"Implementationnotes\",\r\n                    Required: true,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), implementationNotesProperties, vm.viewModel);\r\n\r\n                var commentProperties = {\r\n                    PropertyName: \"Notes\",\r\n                    PropertyDisplayName: \"Comment\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#comment\"), commentProperties, vm.viewModel);\r\n            };\r\n            var createIncidentResolutionFields = function (modalWindowViewModel, modalWindowEle) {\r\n                //resolution picker\r\n                var resolutionProperties = {\r\n                    PropertyName: \"ResolutionCategory\",\r\n                    PropertyDisplayName: \"ResolutionCategory\",\r\n                    Required: true,\r\n                    EnumId: modalWindowViewModel.resolutionCategoryEnumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#resolutionPicker'), resolutionProperties, vm.viewModel);\r\n\r\n                //resolution description\r\n                var resolutionDescriptionProperties = {\r\n                    PropertyName: \"ResolutionDescription\",\r\n                    PropertyDisplayName: \"ResolutionDescription\",\r\n                    Required: false,\r\n                    MaxLength: 4000,\r\n                    Rows: 5,\r\n                    vm: vm\r\n                };\r\n                buildTextArea(modalWindowEle.find(\"#resolutionDescription\"), resolutionDescriptionProperties, vm.viewModel);\r\n\r\n                var letAnalystDecideProperties = {\r\n                    PropertyName: \"resolveChildIncident\",\r\n                    PropertyDisplayName: \"ResolveChildIncidentMessage\",\r\n                    Inline: true,\r\n                    Disabled: false\r\n                };\r\n                buildCheckbox(modalWindowEle.find(\"#letAnalystDecide\"), letAnalystDecideProperties, vm.viewModel);\r\n            };\r\n            var createStatusPicker = function (modalWindowViewModel, modalWindowEle) {\r\n                var statusProperties = {\r\n                    PropertyName: \"Status\",\r\n                    PropertyDisplayName: \"Status\",\r\n                    EnumId: modalWindowViewModel.enumId\r\n                };\r\n                buildEnumPicker(modalWindowEle.find('#statusPicker'), statusProperties, vm.viewModel);\r\n            };\r\n            //form field helper\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n            var buildTextArea = function (container, props, vmModel) {\r\n                txtAreaControl.build(vmModel, props, function (cbTxtAreaControl) {\r\n                    container.html(cbTxtAreaControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n            var buildCheckbox = function (container, props, vmModel) {\r\n                checkBoxControl.build(vmModel, props, function (txtCheckboxControl) {\r\n                    container.html(txtCheckboxControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true, vm: vmModel, bind: true\r\n                    });\r\n                });\r\n            }\r\n            var getDrawerTaskChildEditedFields = function (viewModel, resolutionCategoryId) {\r\n                var json = [\r\n                    {\r\n                        PropertyName: \"Status\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: viewModel.get(\"newStatusObj\").Id\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolutionCategory\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: resolutionCategoryId\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolutionDescription\",\r\n                        PropertyType: \"string\",\r\n                        EditedValue: viewModel.get(\"resolutionDescription\")\r\n                    },\r\n                    {\r\n                        PropertyName: \"ResolvedDate\",\r\n                        PropertyType: \"date\",\r\n                        EditedValue: new Date().toISOString()\r\n                    },\r\n                    {\r\n                        //resolved by user \r\n                        PropertyName: \"RelatesToTroubleTicket\",\r\n                        PropertyType: \"singlecardinalityobject\",\r\n                        PropertyRelationshipId: \"f7d9b385-a84d-3884-7cde-e2c926d931a5\", //TroubleTicketResolvedByUserRelationshipString\r\n                        EditedValue: session.user.Id\r\n                    },\r\n                    {\r\n                        //action log for IR resolved.\r\n                        PropertyName: \"AppliesToTroubleTicket\",\r\n                        PropertyType: \"multiplecardinalityobject\",\r\n                        propertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //TroubleTicketHasActionLogId\r\n                        EditedValue: {\r\n                            ActionType: {\r\n                                Id: \"5ca2cfee-6740-1576-540B-ce17222840b8\",\r\n                                Name: \"Record Resolved\"\r\n                            },\r\n                            Description: viewModel.get(\"resolutionDescription\"),\r\n                            DescriptionDisplay: viewModel.get(\"resolutionDescription\"),\r\n                            EnteredBy: session.user.Name,\r\n                            EnteredDate: new Date().toISOString(),\r\n                            LastModified: new Date().toISOString(),\r\n                            Title: localization.RecordResolved,\r\n                            Image: app.config.iconPath + app.config.icons[\"Record Resolved\"]\r\n                        }\r\n                    }];\r\n\r\n                return json;\r\n            }\r\n            var getDrawerTaskEditedFields = function (viewModel) {\r\n                var json = [\r\n                    {\r\n                        PropertyName: \"Status\",\r\n                        PropertyType: \"enum\",\r\n                        EditedValue: viewModel.get(\"newStatusObj\").Id\r\n                    }\r\n                ];\r\n                switch (viewModel.get(\"newStatusObj\").Id) {\r\n                    case app.constants.workItemStatuses.Incident.Closed:\r\n                        json.push({\r\n                            PropertyName: \"ClosedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                           //closed by user \r\n                           PropertyName: \"RelatesToTroubleTicket_\",\r\n                           PropertyType: \"singlecardinalityobject\",\r\n                           PropertyRelationshipId: \"76bc6c3b-a77b-2468-0a63-169d23dfcdf0\", //TroubleTicketClosedByUserRelationshipString\r\n                           EditedValue: session.user.Id\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Closed:\r\n                        json.push({\r\n                            PropertyName: \"ClosedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                            //closed by user \r\n                            PropertyName: \"ClosedByUser\",\r\n                            PropertyType: \"singlecardinalityobject\",\r\n                            PropertyRelationshipId: \"ba8180d3-5bf9-1bbd-ae87-145dd8fc520f\", //WorkItemClosedByUserRelationshipString\r\n                            EditedValue: session.user.Id\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.Incident.Resolved:\r\n                        json.push({\r\n                            PropertyName: \"ResolutionCategory\",\r\n                            PropertyType: \"enum\",\r\n                            EditedValue: viewModel.get(\"newResolutionId\").Id\r\n                        },\r\n                        {\r\n                            PropertyName: \"ResolutionDescription\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resolutionDescription\")\r\n                        },\r\n                        {\r\n                            PropertyName: \"ResolvedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        },\r\n                        {\r\n                            //resolved by user \r\n                            PropertyName: \"RelatesToTroubleTicket\",\r\n                            PropertyType: \"singlecardinalityobject\",\r\n                            PropertyRelationshipId: \"f7d9b385-a84d-3884-7cde-e2c926d931a5\", //TroubleTicketResolvedByUserRelationshipString\r\n                            EditedValue: session.user.Id\r\n                        },\r\n                        {\r\n                            //action log for IR resolved.\r\n                            PropertyName: \"AppliesToTroubleTicket\",\r\n                            PropertyType: \"multiplecardinalityobject\",\r\n                            propertyRelationshipId: \"a860c62e-e675-b121-f614-e52fcbd9ef2c\", //TroubleTicketHasActionLogId\r\n                            EditedValue: {\r\n                                ActionType: {\r\n                                    Id: \"5ca2cfee-6740-1576-540B-ce17222840b8\",\r\n                                    Name: \"Record Resolved\"\r\n                                },\r\n                                Description: viewModel.get(\"resolutionDescription\"),\r\n                                DescriptionDisplay: viewModel.get(\"resolutionDescription\"),\r\n                                EnteredBy: session.user.Name,\r\n                                EnteredDate: new Date().toISOString(),\r\n                                LastModified: new Date().toISOString(),\r\n                                Title: localization.RecordResolved,\r\n                                Image: app.config.iconPath + app.config.icons[\"Record Resolved\"]\r\n                            }\r\n                        });\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Completed:\r\n\r\n                        json.push({\r\n                            PropertyName: \"Notes\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resultNote\")\r\n                        },\r\n                        {\r\n                            PropertyName: \"CompletedDate\",\r\n                            PropertyType: \"date\",\r\n                            EditedValue: new Date().toISOString()\r\n                        });\r\n\r\n                        if (!_.isUndefined(viewModel.get(\"newResultId\").Id)) {\r\n                            json.push({\r\n                                PropertyName: \"ImplementationResults\",\r\n                                PropertyType: \"enum\",\r\n                                EditedValue: viewModel.get(\"newResultId\").Id\r\n                            });\r\n                        }\r\n\r\n                        break;\r\n                    case app.constants.workItemStatuses.ServiceRequest.Cancelled:\r\n                        json.push({\r\n                            PropertyName: \"Notes\",\r\n                            PropertyType: \"string\",\r\n                            EditedValue: viewModel.get(\"resultComment\")\r\n                        });\r\n                        break;\r\n                    default:\r\n                }\r\n\r\n                return json;\r\n            }\r\n            //resolution funcs\r\n            var getResolveChildIncidentSettings = function () {\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    resolveChildIncidentSettings = data;\r\n                });\r\n            };\r\n            var toggleAdditionalFields = function (statusId, currentStatusId, vmWindow) {\r\n                \r\n                switch (statusId) {\r\n                    case incidentResolved:\r\n                        vmWindow.set(\"irStatusResolved\", true);\r\n                        vmWindow.set(\"irCategoryRequired\", true);\r\n                        vmWindow.set(\"irResolveChildOption\", vmWindow.selectedParents.length>0 && resolveChildIncidentSettings.ResolvedLetAnalystDecide);\r\n                        break;\r\n                    case serviceRequestCancelled:\r\n                        vmWindow.set(\"srStatusCancelled\", true);\r\n                        vmWindow.set(\"srStatusCompleted\", false);\r\n                        break;\r\n                    case serviceRequestCompleted:\r\n                        vmWindow.set(\"srStatusCompleted\", true);\r\n                        vmWindow.set(\"srNotesRequired\", true);\r\n                        vmWindow.set(\"srStatusCancelled\", false);\r\n                        break;\r\n                    default:\r\n                        vmWindow.set(\"irStatusResolved\", false);\r\n                        vmWindow.set(\"irCategoryRequired\", false);\r\n                        vmWindow.set(\"srStatusCancelled\", false);\r\n                        vmWindow.set(\"srStatusCompleted\", false);\r\n                        vmWindow.set(\"srNotesRequired\", false);\r\n                        break;\r\n                }\r\n\r\n                vmWindow.set(\"okEnabled\", true);\r\n\r\n            };\r\n            var enableResolutionSettings = function (statusId, vmWindow) {\r\n                switch (statusId) {\r\n                    case incidentResolved: // incident resolved (check for resolve child settings ans how resolution section)\r\n                        vmWindow.set(\"resolveChildSettings\", resolveChildIncidentSettings);\r\n                        vmWindow.set(\"letAnalystDecide\", (resolveChildIncidentSettings.ResolvedLetAnalystDecide && vm.viewModel.IsParent));\r\n                        vmWindow.set(\"requireResolution\", true);\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        break;\r\n                    case serviceRequestCancelled: //sr cancelled (show comment section)\r\n                        vmWindow.set(\"showComment\", true);\r\n                        break;\r\n                    case serviceRequestCompleted: //sr completed (show implementation section)\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        vmWindow.set(\"requireResolution\", true)\r\n                        break;\r\n                    case problemResolved: //problem resolved (show resolution and auto resolve option)\r\n                        vmWindow.set(\"showResolution\", true);\r\n                        vmWindow.set(\"requireResolution\", true);\r\n                        vmWindow.set(\"showAutoResolve\", true);\r\n                        break;\r\n                    default:\r\n                        vmWindow.set(\"showComment\", false);\r\n                        vmWindow.set(\"showResolution\", false);\r\n                        vmWindow.set(\"requireResolution\", false);\r\n                        vmWindow.set(\"showAutoResolve\", false);\r\n                        vmWindow.set(\"letAnalystDecide\", false);\r\n                        break;\r\n                }\r\n\r\n                //make sure we have a new value\r\n                if (_.isString(vm.viewModel.Status.Name) && vm.viewModel.Status.Name.length > 0) {\r\n                    vmWindow.set(\"okEnabled\", true);\r\n                } else {\r\n                    vmWindow.set(\"okEnabled\", false); //turn off the button now\r\n                }\r\n            };\r\n            var resolveChildIncidents = function (resolveChildSettings) {\r\n                var resolutionCategoryId = resolveChildSettings.ChildIncidentResolutionCategorySameAsParent\r\n                                           ? vm.viewModel.ResolutionCategory.Id\r\n                                           : resolveChildSettings.ChildIncidentResolutionCategory.Id;\r\n\r\n                $.each(vm.viewModel.ChildWorkItem, function (i, item) {\r\n                    item.set(\"Status\", { Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name });\r\n                    item.set(\"ResolutionCategory\", { Id: resolutionCategoryId }); //TODO: I have some concearns here need to ask david -jk\r\n                    item.set(\"ResolutionDescription\", vm.viewModel.ResolutionDescription);\r\n                    item.set(\"ResolvedDate\", vm.viewModel.ResolvedDate);\r\n                });\r\n            };\r\n\r\n            var resolveRelatedWorkItems = function () {\r\n\r\n                $.each(vm.viewModel.RelatesToWorkItem, function (i, item) {\r\n                    item.set(\"Status\", { Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name });\r\n                    item.set(\"ResolutionDescription\", vm.viewModel.ResolutionDescription);\r\n                    item.set(\"ResolvedDate\", vm.viewModel.ResolvedDate);\r\n                });\r\n            };\r\n\r\n            //rules on what statuses are available based on current WI status\r\n            var getFormTaskChangeRules = function () {\r\n                //define change rules and states\r\n                var changeRules = new Array();\r\n\r\n                /*ServiceRequest*/\r\n                changeRules['ServiceRequest'] = new Array();\r\n\r\n                changeRules['ServiceRequest'][serviceRequestSubmitted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestSubmitted }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestInProgress] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestOnHold },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestInProgress }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ServiceRequest'][serviceRequestCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: serviceRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                /*END ServiceRequest*/\r\n\r\n\r\n                /*Release Record*/\r\n                changeRules['ReleaseRecord'] = new Array();\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordInProgress] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordEditing] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ReleaseRecord'][releaseRecordCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordEditing },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordClosed },\r\n                        { field: \"Id\", operator: \"eq\", value: releaseRecordCompleted }\r\n                    ]\r\n                };\r\n\r\n                /*END Release Record*/\r\n\r\n\r\n                /*Change Request*/\r\n                changeRules['ChangeRequest'] = new Array();\r\n\r\n                changeRules['ChangeRequest'][changeRequestSubmitted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestSubmitted }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestInProgress] = {\r\n                    logic: \"or\",\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestInProgress },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestOnHold }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestOnHold] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestOnHold },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestInProgress }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestFailed] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestFailed },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestCancelled] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCancelled },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n\r\n                changeRules['ChangeRequest'][changeRequestCompleted] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestCompleted },\r\n                        { field: \"Id\", operator: \"eq\", value: changeRequestClosed }\r\n                    ]\r\n                };\r\n                /*END Change Request*/\r\n\r\n                /*Incident*/\r\n                changeRules['Incident'] = new Array();\r\n\r\n                changeRules['Incident'][incidentActive] = {\r\n                    field: \"Id\",\r\n                    operator: \"neq\",\r\n                    value: incidentClosed\r\n                };\r\n\r\n                changeRules['Incident'][incidentActivePending] = {\r\n                    field: \"Id\",\r\n                    operator: \"neq\",\r\n                    value: incidentClosed\r\n                };\r\n\r\n                changeRules['Incident'][incidentResolved] = {\r\n                    logic: 'or',\r\n                    filters: [\r\n                        { field: \"Id\", operator: \"eq\", value: incidentActive },\r\n                        { field: \"Id\", operator: \"eq\", value: incidentClosed }\r\n                    ]\r\n                };\r\n\r\n                /*END Incident*/\r\n\r\n                /*Problem*/\r\n                changeRules['Problem'] = new Array();\r\n                /*END Problem*/\r\n\r\n\r\n                return changeRules;\r\n            }\r\n            //bulk edit form funcs\r\n            var bulkEditFormIsValid = function (windowViewModel, modalEle) {\r\n                if (windowViewModel.irCategoryRequired\r\n                    && (_.isUndefined(windowViewModel.newResolutionId.Id)\r\n                        || windowViewModel.newResolutionId.Id.length <= 0)) {\r\n\r\n                    modalEle.find('#changeStatusErrorWin').html(localization.RequestCategoryRequiredError);\r\n                    return false;\r\n                } else if (windowViewModel.srNotesRequired && windowViewModel.resultNote.length <= 0) {\r\n                    modalEle.find('#changeStatusErrorWin').html(localization.ImplementationNotesRequiredError);\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            };\r\n\r\n            var postBulkEditChangesWithChildren = function (taskVm, windowVm, modalControl) {\r\n                var parentIds = _.pluck(taskVm.currentSelectionOfParents, 'BaseId'); \r\n                $.ajax({\r\n                    url: '/api/v3/workitem/GetChildWorkItems/',\r\n                    data: JSON.stringify(parentIds),\r\n                    dataType: 'json',\r\n                    contentType: 'application/json',\r\n                    type: \"POST\",\r\n                    success: function (childIds) {\r\n                        //determine if we set resolution category to same as parent\r\n                        if (resolveChildIncidentSettings.ChildIncidentResolutionCategorySameAsParent) {\r\n                            //parent and non-children wi base ids\r\n                            var itemIds = _.pluck(windowVm.selectedWorkItems, 'BaseId');\r\n                            //add in children\r\n                            _.each(childIds, function (childId) {\r\n                                itemIds.push(childId);\r\n                            });\r\n                            var uniqIds = _.uniq(itemIds);\r\n                            var postData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: uniqIds,\r\n                                EditedFields: getDrawerTaskEditedFields(windowVm)\r\n                            }\r\n\r\n                            postBulkEditChanges(postData, taskVm, modalControl);\r\n\r\n                        } else {\r\n                            //get child resolution cat\r\n                            var childResolutionCatId = resolveChildIncidentSettings.ChildIncidentResolutionCategory.Id;\r\n                            var childrenPostData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: childIds,\r\n                                EditedFields: getDrawerTaskChildEditedFields(windowVm, childResolutionCatId)\r\n                            }\r\n\r\n                            var wiSelectionPostData = {\r\n                                ProjectionId: taskVm.selectedWorkItem.projectionId,\r\n                                UpdateServiceManagement: true,\r\n                                ItemIds: _.pluck(windowVm.selectedWorkItems, 'BaseId'),\r\n                                EditedFields: getDrawerTaskEditedFields(windowVm)\r\n                            }\r\n                            \r\n                            postBulkEditChanges(wiSelectionPostData, taskVm, modalControl, function (success) {\r\n                                if (success) {\r\n                                    postBulkEditChanges(childrenPostData, taskVm, modalControl);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n\r\n            };\r\n            var postBulkEditChanges = function (postData, taskVm, modalControl, postCallback) {\r\n                modalControl.close();\r\n                app.lib.mask.apply();\r\n                $.ajax({\r\n                    url: '/api/v3/workitem/BulkEditWorkItems/',\r\n                    data: JSON.stringify(postData),\r\n                    dataType: 'json',\r\n                    contentType: 'application/json',\r\n                    type: \"POST\",\r\n                    success: function () {\r\n                        if (!_.isUndefined(postCallback)) {\r\n                            postCallback(true);\r\n                        } else {\r\n                            onBulkEditSaveSuccess(taskVm);\r\n                        }\r\n                    },\r\n                    error: function () {\r\n                        if (!_.isUndefined(postCallback)) {\r\n                            postCallback(false);\r\n                        } else {\r\n                            onBulkEditSaveFailure();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            var onBulkEditSaveSuccess = function (taskVm) {\r\n                if (app.isMobile()) {\r\n                    var listControl = $(\"[data-control-id='\" + taskVm.targetControlId + \"']\").data('kendoListView');\r\n                    listControl.dataSource.query();\r\n                } else {\r\n                    //refresh the grid to get updated data.\r\n                    var targetGrid = $('#' + taskVm.targetControlId).data('kendoGrid');\r\n                    var targetGridState = app.gridUtils.savedState.getCurrentState(taskVm.targetControlId);\r\n                    app.lib.recheckGridState(targetGridState, targetGrid);\r\n                    targetGrid.dataSource.query(targetGridState);\r\n                }\r\n                app.lib.message.add(localizationHelper.localize('SaveSuccessMessage'), \"success\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            var onBulkEditSaveFailure = function () {\r\n                app.lib.message.add(localizationHelper.localize('SaveErrorMessage'), \"danger\");\r\n                app.lib.mask.remove();\r\n                app.lib.message.show();\r\n            }\r\n            /* END functions */\r\n\r\n            /* initialization code*/\r\n            function initFormTask() {\r\n                var modalEle = buildAndRender.windowEle(changeStatusTemplate);\r\n                var formTaskViewModel = getFormTaskViewModel(modalEle);\r\n                var anchorTemplateProps = { Target: \"changeStatus\" };\r\n                buildAndRender.taskListItem(anchorTemplateProps, formTaskViewModel, anchorTemplate);\r\n            };\r\n\r\n            function initBulkTask() {\r\n                var modalView = buildAndRender.windowEle(changeStatusDrawerTemplate);\r\n                var drawerTaskViewModel = getDrawerTaskViewModel(modalView);\r\n                var anchorEleProps = { onClick: \"openModal\", titleKey: node.titleKey, toolTipMessage: localizationHelper.localize('MustSelectSameTypeStatus') };\r\n                buildAndRender.taskListItem(anchorEleProps, drawerTaskViewModel, drawerTaskTemplate);\r\n\r\n                /*subscribe to events*/\r\n                if (!app.isMobile()) {\r\n                    //called on grid row clicks\r\n                    app.events.subscribe(\"gridChange\", function(event, grid) {\r\n                        drawerTaskViewModel.onTargetControlChange(grid);\r\n                        drawerTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                    });\r\n\r\n                    //for initial grid load listen to this event so we can set persisted state information\r\n                    app.events.subscribe(\"gridBound\", function(event, grid) {\r\n                        drawerTaskViewModel.onTargetControlChange(grid);\r\n                        drawerTaskViewModel.targetControlId = $(grid.wrapper).attr('id');\r\n                    });\r\n                } else {\r\n                    app.events.subscribe(\"mobileWiListSelectionChange\", function (event, listView) {\r\n                        if (!_.isUndefined(listView)) {\r\n                            drawerTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                            drawerTaskViewModel.targetControlId = listView.controlId;\r\n                        }\r\n                    });\r\n                    app.events.subscribe(\"mobileWiListInit\", function (event, listView) {\r\n                        if (!_.isUndefined(listView)) {\r\n                            drawerTaskViewModel.onTargetControlChange(listView.selectedCards);\r\n                            drawerTaskViewModel.targetControlId = listView.controlId;\r\n                        }\r\n                    });\r\n                }\r\n                /*END subscribe to events*/\r\n            };\r\n            /* END initialization code*/\r\n\r\n            //do it\r\n            if (vm.type == \"BulkEdit\") {\r\n                initBulkTask();\r\n            } else {\r\n                initFormTask();\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/amChangeStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/changeStatus/view.html','forms/fields/enum/controller','forms/fields/longstring/controller','forms/fields/boolean/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/changeStatus/view.html\");\r\n    var enumPicker = require(\"forms/fields/enum/controller\");\r\n    var txtArea = require(\"forms/fields/longstring/controller\");\r\n    var checkBox = require(\"forms/fields/boolean/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.ChangeHardwareAssetStatus;\r\n            var statusPropertyName;\r\n            if (node.Configs.type == \"HardwareAsset\") {\r\n                if (node.Configs.enumName == \"HardwareAssetStatus\") {\r\n                    \r\n                } else if (node.Configs.enumName == \"HardwareAssetType\") {\r\n                    title = localization.ChangeHardwareAssetType;\r\n                } \r\n            } else if (node.Configs.type == \"SoftwareAsset\") {\r\n                if (node.Configs.enumName == \"SoftwareAssetStatus\") {\r\n                    title = localization.ChangeSoftwareAssetStatus;\r\n                } else if (node.Configs.enumName == \"SoftwareAssetType\") {\r\n                    title = localization.ChangeSoftwareAssetType;\r\n                }\r\n            }\r\n\r\n            var tempStatus = { \"Id\": vm.viewModel[node.Configs.enumName].Id, \"Name\": vm.viewModel[node.Configs.enumName].Name };\r\n            \r\n\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        enumId: node.Configs.statusEnumId,\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            vm.viewModel.set(node.Configs.enumName, tempStatus);\r\n                            win.close();\r\n                        },\r\n                       \r\n                    });\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    //create status enumPicker\r\n                    var statusProperties = {\r\n                        PropertyName: node.Configs.enumName,\r\n                        PropertyDisplayName: 'Status',\r\n                        EnumId: _vmWindow.enumId\r\n                    };\r\n                    buildEnumPicker(cont.find('#statusPicker'), statusProperties, vm.viewModel);\r\n\r\n                    //var statusDropDown = cont.find('div[data-role=\"HardwareAssetStatus\"]').data().handler._dropdown;\r\n                    //var statusTreeView = cont.find('div[data-role=\"status\"]').data().handler._treeview;\r\n\r\n\r\n\r\n                    //bind status change\r\n                    //vm.viewModel.HardwareAssetStatus.bind(\"change\", function (e) {\r\n                    vm.viewModel[node.Configs.enumName].bind(\"change\", function (e) {\r\n                        switch (e.sender.Id) {\r\n                            \r\n                            default:\r\n                                //_vmWindow.set(\"showComment\", false);\r\n                                //_vmWindow.set(\"showResolution\", false);\r\n                                //_vmWindow.set(\"requireResolution\", false);\r\n                                break;\r\n                        }\r\n                        _vmWindow.set(\"okEnabled\", true);\r\n                    });\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPicker.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n          \r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/acknowledge/view.html',[],function () { return '<div id=\"AcknowledgeIncidentWindow\" class=\"hide task-window cireson-window defined-form\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"inline-spacing\">\\r\\n                <label><%= localization.AcknowledgementTime %> : <span data-bind=\"html:dateTimeNow\"></span></label>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"inline-spacing\">\\r\\n                <label><%= localization.AcknowledgementComment %></label>\\r\\n                <textarea data-bind=\"value: actionLogComment, events: {keyup:textCounter}\"\\r\\n                          data-value-update=\"keyup\"\\r\\n                          class=\"k-textbox\" rows=5></textarea>\\r\\n            </div>\\r\\n            <div class=\"inline-spacing\">\\r\\n                <span data-bind=\"html:charactersRemaining\"></span>\\r\\n                <span><%= localization.CharactersRemaining %></span>\\r\\n            </div>\\r\\n            <div class=\"inline-spacing checkbox checkbox-inline\">\\r\\n                <input id=\"IsPrivate\" type=\"checkbox\" data-bind=\"checked: isPrivate\" />\\r\\n                <label for=\"IsPrivate\" class=\"checkbox-label\"><%= localization.IsPrivate %></label>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button class=\"btn btn-primary\"\\r\\n                    data-role=\"button\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button class=\"btn btn-default\"\\r\\n                    data-role=\"button\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","/**\r\nacknowledge incident\r\n**/\r\n\r\ndefine('forms/tasks/acknowledge/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/acknowledge/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/acknowledge/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            \r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                acknowledge: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: localization.Acknowledge,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        dateTimeNow: kendo.toString(new Date(), \"g\"),\r\n                        dateTimeNowUTC: new Date().toISOString(),\r\n                        actionLogComment: \"\",\r\n                        isPrivate: false,\r\n                        charactersRemaining: \"4000\",\r\n                        textCounter: function () {\r\n                            var maximumLength = 4000;\r\n                            var val = this.actionLogComment.length;\r\n\r\n                            if (val > maximumLength) {\r\n                                this.actionLogComment.substring(0, maximumLength);\r\n                            } else {\r\n                                this.set(\"charactersRemaining\", maximumLength - val);\r\n                            }\r\n                        },\r\n                        okClick: function () {\r\n                            if (vm.viewModel.FirstResponseDate == null){\r\n                                vm.viewModel.FirstResponseDate = this.dateTimeNowUTC;\r\n                                var respondDateEle = $(\"input[name='FirstResponseDate']\");\r\n                                if (respondDateEle.attr('data-control') == 'datePicker') {\r\n                                    respondDateEle.val(kendo.toString(new Date(), \"d\"));\r\n                                } else if (respondDateEle.attr('data-control') == 'dateTimePicker') {\r\n                                    respondDateEle.val(kendo.toString(new Date(), \"g\"));\r\n                                }\r\n                            }\r\n                            if (this.actionLogComment.length) {\r\n                                var newActionLog = {\r\n                                    EnteredBy: session.user.Name,\r\n                                    Title: localization.Analyst + \" \" + localization.Comment,\r\n                                    IsPrivate: this.isPrivate,\r\n                                    EnteredDate: new Date().toISOString(),\r\n                                    LastModified: new Date().toISOString(),\r\n                                    Description: this.actionLogComment,\r\n                                    DescriptionDisplay: this.actionLogComment,\r\n                                    Image: (this.isPrivate) ? app.config.iconPath + app.config.icons[\"privateComment\"] : app.config.iconPath + app.config.icons[\"comment\"],\r\n                                    ActionType: \"AnalystComment\"\r\n                                }\r\n                                if (!vm.viewModel.ActionLog) {\r\n                                    vm.viewModel.ActionLog = [];\r\n                                }\r\n                                var actionLogType = app.controls.getWorkItemLogType(pageForm.viewModel);\r\n                                if (actionLogType) {\r\n                                    pageForm.viewModel[actionLogType].push(newActionLog);\r\n                                }\r\n                            }\r\n\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        }\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"acknowledge\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nconvert To Parent\r\n**/\r\n\r\ndefine('forms/tasks/convertToParent/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //first add the anchor\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"convertToParent\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n           \r\n           //create view model \r\n            var viewModel = kendo.observable({\r\n                isParent: node.Configs.isParent,\r\n                confirmTitle: node.Configs.confirmTitle,\r\n                confirmMessage: node.Configs.confirmMessage,\r\n                convertToParent: function () {\r\n                    $.when(kendo.ui.ExtYesNoDialog.show({\r\n                        title: this.confirmTitle,\r\n                        message: this.confirmMessage\r\n                    })).done(function (response) {\r\n                        if (response.button === \"yes\") {\r\n                            vm.viewModel.IsParent = node.Configs.isParent;\r\n                            if (!vm.viewModel.IsParent) {\r\n                                if (vm.viewModel.ChildWorkItem != null) {\r\n                                    delete vm.viewModel.ChildWorkItem;\r\n                                }\r\n                            }\r\n                            vm.save(function (data) {\r\n                                app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                switch (pageForm.type) {\r\n                                    case \"ReleaseRecord\":\r\n                                        location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                        break;\r\n                                    default:\r\n                                        location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                        break;\r\n                                }\r\n                            }, saveFailure);\r\n                        } else {\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/linkToParent/view.html',[],function () { return '<div id=\"AssignParentWindow\" class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"margin-b20\">\\r\\n                <label><%= localization.SearchText %></label>\\r\\n                <span class=\"k-textbox k-space-right\">\\r\\n                    <input type=\"text\" data-bind=\"value: searchText\" />\\r\\n                    <a data-bind=\"click: searchClick\" href=\"javascript:void(0)\" class=\"\">\\r\\n                        <i class=\"fa fa-search\"></i>\\r\\n                    </a>\\r\\n                </span>\\r\\n            </div>\\r\\n            <label><%= localization.SelectParent %></label>\\r\\n            <div data-role=\"grid\"\\r\\n                 data-bind=\"source: dataSource, events: { change: gridChange }\"\\r\\n                 data-selectable=\"true\"\\r\\n                 data-sortable=\"true\"\\r\\n                 data-filterable=\"true\"\\r\\n                 data-scrollable=\"false\"\\r\\n                 data-column-menu=\"true\"\\r\\n                 data-pageable=\"true\"\\r\\n                 data-columns=\\'[\\r\\n                    { field: \"Id\", title: \" <%= localization.Id %>\", width: \"50px\", attributes: {\"class\": \"grid-highlight-column\"} },\\r\\n                    { field: \"Title\", title: \" <%= localization.Title %>\", width: \"300px\", attributes: {\"class\": \"grid-highlight-column\"} },\\r\\n                    { field: \"Status\", title: \" <%= localization.Status %>\", width: \"100px\" }\\r\\n                    ]\\'>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/header/relationships/view.html',[],function () { return '<div class=\"parent-header-link\" >\\r\\n    <label data-bind=\"text: view.controller.parentIncident\"></label> :\\r\\n    <a data-bind=\"attr: { href: view.controller.editHref}, text: view.controller.editLink\" target=\"_blank\"></a>\\r\\n    <span class=\"fa fa-trash-o fa-lg cursor-pointer\" data-bind=\"click: view.controller.unlinkParent\"></span>\\r\\n</div>';});\n\n","/**\r\nlink To Parent\r\n**/\r\n\r\ndefine('forms/tasks/linkToParent/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/linkToParent/view.html','text!forms/header/relationships/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/linkToParent/view.html\");\r\n    var headerLinkTpl = require(\"text!forms/header/relationships/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            \r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                linkToParent: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n                    var releaseRecordClassId = \"d02dc3b6-d709-46f8-cb72-452fa5e082b8\"; //classid for release record\r\n\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: (vm.viewModel.ClassId == releaseRecordClassId) ? localization.LinktoNewParentIncident : localization.LinkToNewParentRecord,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            _vmWindow.refreshDataSource();\r\n                            getChildIncidentSettings();\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        searchText: \"\",\r\n                        searchClick: function () {\r\n                            var val = this.get(\"searchText\");\r\n                            this.refreshDataSource();\r\n                            this.dataSource.filter({\r\n                                logic: \"or\",\r\n                                filters: [\r\n                                    {\r\n                                        field: \"Id\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Title\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    },\r\n                                    {\r\n                                        field: \"Status.Name\",\r\n                                        operator: \"contains\",\r\n                                        value: val\r\n                                    }\r\n                                ]\r\n                            });\r\n                        },\r\n                        okEnabled: false, \r\n                        okClick: function () {\r\n                            if (!this.selectedRow)\r\n                                return;\r\n\r\n                            if (vm.viewModel.ParentWorkItem == null) {\r\n                                vm.viewModel.ParentWorkItem = {};\r\n                            }\r\n\r\n                            vm.viewModel.ParentWorkItem.BaseId = this.selectedRow.BaseId;\r\n                            vm.viewModel.ParentWorkItem.Id = this.selectedRow.Id;\r\n                            vm.viewModel.ParentWorkItem.Title = this.selectedRow.Title;\r\n\r\n                            //check if we need to change child's status\r\n                            if (!_.isUndefined(childIncidentSettings.ActiveChildIncidentLinkStatus.Id)) {\r\n                                vm.viewModel.set(\"Status\", { Id: childIncidentSettings.ActiveChildIncidentLinkStatus.Id, Name: childIncidentSettings.ActiveChildIncidentLinkStatus.Name });\r\n                            }\r\n\r\n                            vm.view.buildParentHeaderView(function (tpl) {\r\n                                parentView = new kendo.View(tpl, { wrapper: false, model: vm });\r\n                                $('#parent-header-space').html(parentView.render()).show();\r\n                            });\r\n\r\n                            this.dataSource.filter([]);\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            this.dataSource.filter([]);\r\n                            win.close();\r\n                        },\r\n                        dataSource: new kendo.data.DataSource({\r\n                            transport: {\r\n                                read: {\r\n                                    type: \"GET\",\r\n                                    dataType: \"json\",\r\n                                    url: \"/Search/GetParentWorkItems\",\r\n                                    data: { workItemType: vm.type },\r\n                                    cache: false\r\n                                }\r\n                            },\r\n                            schema: {\r\n                                model: {\r\n                                    fields: {\r\n                                        Id: { type: \"string\" },\r\n                                        Title: { type: \"string\" },\r\n                                        Status: { type: \"string\" },\r\n                                        BaseId: { type: \"string\" }\r\n                                    }\r\n                                }\r\n                            },\r\n                            pageSize: 5,\r\n                        }),\r\n                        selectedRow: null,\r\n                        gridChange: function (eventArgs) {\r\n                            this.set(\"okEnabled\", true);\r\n                            this.set(\"selectedRow\", eventArgs.sender.dataItem(eventArgs.sender.select()));\r\n                        },\r\n                        refreshDataSource: function () {\r\n                            this.dataSource.read();\r\n                        }\r\n                    });\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"linkToParent\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var childIncidentSettings;\r\n            var getChildIncidentSettings = function () {\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    childIncidentSettings = data;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/newStatus/view.html',[],function () { return '<div class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"col-group\">\\r\\n                <span data-bind=\"html: commentMessage\"></span>\\r\\n            </div>\\r\\n            <div class=\"col-group\">\\r\\n                <div class=\"editor-label\">\\r\\n                    <label><%= localization.Comment %></label>\\r\\n                </div>\\r\\n                <div class=\"editor-field\">\\r\\n                    <textarea data-bind=\"value: comment, events: {keyup:textCounter}\"\\r\\n                              data-value-update=\"keyup\"\\r\\n                              class=\"k-textbox\"\\r\\n                              rows=\"6\" />\\r\\n                    <div class=\"inline-spacing\">\\r\\n                        <span data-bind=\"html:charactersRemaining\"></span>\\r\\n                        <span><%= localization.CharactersRemaining %></span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nNew Status\r\n**/\r\n\r\ndefine('forms/tasks/newStatus/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/newStatus/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/newStatus/view.html\");\r\n\r\n    var incidentResolved = \"2b8830b6-59f0-f574-9c2a-f4b4682f1681\";\r\n    var incidentActive = \"5e2d3932-ca6d-1515-7310-6f58584df73e\";\r\n    var IncidentClosed = \"bd0ae7c4-3315-2eb3-7933-82dfc482dbaf\";\r\n    var IncidentActivePending = \"b6679968-e84e-96fa-1fec-8cd4ab39c3de\";\r\n\r\n    var serviceRequestCancelled = \"674e87e4-a58e-eab0-9a05-b48881de784c\";\r\n    var serviceRequestCompleted = \"b026fdfd-89bd-490b-e1fd-a599c78d440f\";\r\n    var serviceRequestSubmitted = \"72b55e17-1c7d-b34c-53ae-f61f8732e425\";\r\n    var serviceRequestInProgress = \"59393f48-d85f-fa6d-2ebe-dcff395d7ed1\";\r\n    var serviceRequestOnHold = \"05306bf5-a6b9-b5ad-326b-ba4e9724bf37\";\r\n    var serviceRequestFailed = \"21dbfcb4-05f3-fcc0-a58e-a9c48cde3b0e\";\r\n    var serviceRequestClosed = \"c7b65747-f99e-c108-1e17-3c1062138fc4\";\r\n\r\n    var releaseRecordInProgress = \"1840bfdc-3589-88a5-cea9-67536fd95a3b\";\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //first add the anchor\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"setNewStatus\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n           \r\n            //all other bound changes to be triggered\r\n            if (!_.isUndefined(node.Configs.otherBoundChanges)) {\r\n                //var otherBoundChanges = $.parseJSON(node.Configs.otherBoundChanges);\r\n                var otherBoundChanges = node.Configs.otherBoundChanges;\r\n            } else {\r\n                var otherBoundChanges = {};\r\n            }\r\n\r\n            //create view model \r\n            var viewModel = kendo.observable({\r\n                setNewStatus: function () {\r\n                    //show comment for cancelled service request\r\n                    if (node.Configs.newStatusId === serviceRequestCancelled || node.Configs.newStatusId === releaseRecordInProgress) {\r\n                        addComment(view.element, node.Configs);\r\n                    } else {\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: node.Configs.confirmTitle,\r\n                            message: node.Configs.confirmMessage\r\n                        })).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n\r\n                                //set new status\r\n                                vm.viewModel.set(\"Status\", { Id: node.Configs.newStatusId, Name: node.Configs.newStatusName });\r\n\r\n                                //re-initiate resolution details on re-activate(active status) only\r\n                                if (vm.viewModel.Status.Id == app.constants.workItemStatuses.Incident.Active) {\r\n                                    vm.viewModel.set(\"ResolutionCategory\", { Name: null, Id: null });\r\n                                    vm.viewModel.set(\"ResolutionDescription\", null);\r\n                                    vm.viewModel.set(\"ResolvedDate\", null);\r\n\r\n                                   \r\n                                    if (actionLogType) {\r\n                                        vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordActivated());\r\n                                    }\r\n                                }\r\n\r\n                                //make other changes\r\n                                $.each(otherBoundChanges, function (index, val) {\r\n                                    vm.viewModel.set(index, val);\r\n                                });\r\n\r\n                                //if IR or SR closed set closed date.\r\n                                if (node.Configs.newStatusId == app.constants.workItemStatuses.Incident.Closed || \r\n                                    node.Configs.newStatusId == app.constants.workItemStatuses.ServiceRequest.Closed) {\r\n                                    vm.viewModel.set(\"ClosedDate\", new Date().toISOString());\r\n\r\n                                    //set closed by user \r\n                                    switch (node.Configs.newStatusId) {\r\n                                        case app.constants.workItemStatuses.Incident.Closed:\r\n                                            vm.viewModel.RelatesToTroubleTicket_ = { BaseId: session.user.Id };\r\n                                            vm.viewModel[actionLogType].unshift(new app.dataModels[\"AppliesToTroubleTicket\"].recordClosed());\r\n                                            break;\r\n                                        case app.constants.workItemStatuses.ServiceRequest.Closed:\r\n                                            vm.viewModel.ClosedByUser = { BaseId: session.user.Id };\r\n                                            break;\r\n                                    }\r\n                                }\r\n\r\n                                //reactivating child incidents when a parent is reactivated\r\n                                if (vm.type === \"Incident\" && vm.viewModel.IsParent && vm.viewModel.Status.Id == incidentActive) {\r\n                                    processChildIncidentReactivation();\r\n                                } else {\r\n                                    save();\r\n                                }\r\n                            } else {\r\n                                //reset the viewModel\r\n                                vm.viewModel.set(\"Status\",{Id: vm.viewModel.Status.Id, Name: vm.viewModel.Status.Name});\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var save = function () {\r\n                //save/apply the current changes\r\n                vm.save(function (data) {\r\n                    app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                    switch (vm.type) {\r\n                        case \"ChangeRequest\":\r\n                            location.href = \"/ChangeRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"ServiceRequest\":\r\n                            location.href = \"/ServiceRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"Incident\":\r\n                            location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"ReleaseRecord\":\r\n                            location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        case \"Problem\":\r\n                            location.href = \"/Problem/Edit/\" + vm.viewModel.Id + \"/\";\r\n                            break;\r\n                        default:\r\n                            location.href = \"/WorkItems/MyItems/\";\r\n                            break;\r\n                    }\r\n                }, saveFailure);\r\n            }\r\n\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n\r\n            var reactivateChildandSave = function () {\r\n                $.each(vm.viewModel.ChildWorkItem, function (i, item) {\r\n                    item.set(\"Status\", {Name: childIncidentSettings.ChildIncidentReactivatedStatus.Name, Id: childIncidentSettings.ChildIncidentReactivatedStatus.Id});\r\n                    item.set(\"ResolutionCategory\", {Name: null,Id: null});\r\n                    item.set(\"ResolutionDescription\", null);\r\n                    item.set(\"ResolvedDate\", null);\r\n                });\r\n                save();\r\n            }\r\n\r\n            var processChildIncidentReactivation = function () {\r\n                var childIncidentSettings;\r\n                $.get(\"/api/V3/Projection/GetParentWorkItemSettings\", {}, function (data) {\r\n                    childIncidentSettings = $.parseJSON(data);\r\n\r\n                    if (childIncidentSettings.ReactivateLetAnalystDecide) { //let analyst decide setting\r\n                        $.when(kendo.ui.ExtYesNoDialog.show({\r\n                            title: localization.ReactivateChildIncidentTitle,\r\n                            message: localization.ReactivateChildIncidentMessage\r\n                        })).done(function (response) {\r\n                            if (response.button === \"yes\") {\r\n                                reactivateChildandSave();\r\n                            } else {\r\n                                save();\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (childIncidentSettings.ReactivateChildIncident) { //automatic reactivate setting\r\n                        reactivateChildandSave();\r\n                    } else { // do nothing setting\r\n                        save();\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n            var addComment = function (cont, newStatusConfig) {\r\n                //var cont = view.element; //we have the element in memory so no need use a selector\r\n                win = cont.kendoCiresonWindow({\r\n                    title: localization.Comment,\r\n                    width: 500,\r\n                    height: 300,\r\n                    actions: []\r\n                }).data(\"kendoWindow\");\r\n                \r\n                //this view Model is bound to the window element\r\n                var _vmWindow = new kendo.observable({\r\n                    comment: \"\",\r\n                    okEnabled: false,\r\n                    charactersRemaining: \"4000\",\r\n                    textCounter: function () {\r\n                        var maximumLength = 4000;\r\n                        var val = this.comment.length;\r\n\r\n                        if (val > maximumLength) {\r\n                            this.comment.substring(0, maximumLength);\r\n                        } else {\r\n                            this.set(\"charactersRemaining\", maximumLength - val);\r\n                        }\r\n\r\n                        if (val > 0) {\r\n                            this.set(\"okEnabled\", true);\r\n                        } else {\r\n                            this.set(\"okEnabled\", false);\r\n                        }\r\n                    },\r\n                    okClick: function () {\r\n                        //set new status\r\n                        vm.viewModel.set(\"Status\",{Id: newStatusConfig.newStatusId, Name: newStatusConfig.newStatusName});\r\n\r\n                        //set comment\r\n                        var newComment = _.isNull(vm.viewModel.Notes) ? this.comment : vm.viewModel.Notes + \"\\r\\n\" + this.comment;\r\n                        vm.viewModel.set(\"Notes\", newComment);\r\n\r\n                        //save changes\r\n                        win.close();\r\n                        save();\r\n                    },\r\n                    cancelClick: function () {\r\n                        win.close();\r\n                    },\r\n                    commentMessage: !_.isUndefined(newStatusConfig.commentMessage) ? newStatusConfig.commentMessage : localization.CancelledStatusCommentMessage\r\n                });\r\n                //add control to the window\r\n                kendo.bind(cont, _vmWindow);\r\n\r\n                cont.removeClass('hide');\r\n                cont.show();\r\n\r\n                win.open();\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/sendEmail/mobile_view.html',[],function () { return '<div id=\"EmailNotificationWindow\" class=\"cireson-window defined-form task-window hide\">\\n    <div class=\"cireson-window--wrapper\">\\n        <div class=\"cireson-window--body\">\\n            <div class=\"col-md-6 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailTo %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <div class=\"k-autocomplete\">\\r\\n                        <select id=\"userPickerTo\"></select>\\r\\n                        <button id=\"toField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailCC %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <div class=\"k-autocomplete\">\\r\\n                        <select id=\"userPickerCc\"></select>\\r\\n                        <button id=\"ccField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"col-md-12 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.Subject %></label>\\n                </div>\\n                <div class=\"editor-field\">\\n                    <input data-bind=\"value: emailSubject\" class=\" k-textbox\" type=\"text\">\\n                </div>\\n            </div>\\n            \\n            <div class=\"col-md-12 pad10\">\\n                <div class=\"editor-label\">\\n                    <label><%= localization.SendEmailTemplate %></label>\\n                </div>\\n                <div class=\"editor-field\" id=\"templateDiv\">\\n                    <input data-role=\"combobox\"\\n                           data-placeholder=\"<%= localization.ChooseOne %>\"\\n                           data-value-primitive=\"true\"\\n                           data-text-field=\"Name\"\\n                           data-value-field=\"Id\"\\n                           data-filter=\"contains\"\\n                           data-bind=\"value: emailTemplateValue, source: emailTemplateDataSource, events:{change:emailTemplateChange }\"/>\\n                </div>\\n            </div>\\n\\n            <div class=\"col-md-12 pad10\">\\r\\n                <div id=\"mobileStatusPicker\" />\\r\\n            </div>\\n            <div class=\"col-md-12 pad10\">\\r\\n                <div class=\"col-md-6 pad0\">\\r\\n                    <label><%= localization.Message %></label>\\r\\n                </div>\\r\\n                <div class=\"col-md-6 pad0\">\\r\\n                    <a href=\"#\" data-bind=\"events: { click: resizeEditor }\" role=\"button\" title=\"Expand Editor\" class=\"pull-right\"><i class=\"fa fa-expand\"></i></a>\\r\\n                </div>\\r\\n                <hr>\\r\\n                <div class=\"editor-field\">\\r\\n                    <textarea id=\"messageEditor\" class=\"form-editor hidden\" data-bind=\"value: emailHTMLMessage\" />\\r\\n                </div>\\r\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <div id=\"statusPicker\" />\\n                <div class=\"checkbox\">\\n                    <input id=\"IsAddToLog\" type=\"checkbox\" data-bind=\"checked: addToLog, enabled: enableAddToLog\" />\\r\\n                    <label for=\"IsAddToLog\" class=\"control-label \">\\n                        <%= localization.SendEmailAddToLog %>\\n                    </label>\\n                </div>\\n                <div class=\"checkbox col-md-12 margin-l30\" data-bind=\"visible: addToLog\">\\n                    <input id=\"setAsPrivate\" type=\"checkbox\" data-bind=\"checked: setAsPrivate\" />\\n                    <label for=\"setAsPrivate\" class=\"control-label col-md-10\">\\n                        <%= localization.SetAsPrivate %>\\n                        <i class=\"fa fa-info-circle info-icon text-primary\" data-toggle=\"tooltip\" title=\"<%= localization.SaveMessageAsPrivateTooltip %>\"></i>\\n                    </label>\\n                </div>\\n                <div data-bind=\"visible: showChangeStatus\" class=\"checkbox\">\\n                    <input id=\"SetFirstResponseDate\" type=\"checkbox\" data-bind=\"checked: setFirstResponseDate, enabled:enableFirstResponseDate\" />\\n                    <label for=\"SetFirstResponseDate\" class=\"control-label\"><%= localization.SetFirstResponseDate %></label>\\n                </div>\\n            </div>\\n            <div class=\"col-md-6 pad10\">\\n                <label><%= localization.SendEmailAttachment %></label>\\n                <div class=\"form-group\">\\r\\n                    <div class=\"drop-zone-element\">\\r\\n                        <div class=\"text-wrapper\">\\r\\n                            <span class=\"drag-image-text\">\\n                                <a class=\"browse-file\"><b><%= localization.Browse %></b></a>\\n                                <span data-bind=\"visible: filesCount > 0\"><span class=\"lowercase\"> <%= localization.Or %> </span><a data-bind=\"events: { click: viewWorkItemFiles }\"><b><%= localization.BrowseWorkItemFiles %></b></a></span>\\r\\n                            </span>\\r\\n                            <div style=\"display:none\"><input name=\"files\" id=\"email-attachment\" type=\"file\" /></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\n                <div>\\r\\n                    <div class=\"fileattachment-list\"></div>\\r\\n                    <div class=\"fileattachment-img-modal\"></div>\\r\\n                    <script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n                        <div class=\"thumbnail-file\">\\r\\n                            <div class=\"cursor-pointer thumbnail-img\">\\r\\n                                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                                # } else{ #\\r\\n                                <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                                # } #\\r\\n                            </div>\\r\\n                            <div class=\"thumbnail-caption\">\\r\\n                                <span>#: DisplayName #</span>\\r\\n                                <!--<div class=\"overlay transparent\">\\r\\n                                    <span class=\"pull-right\">\\r\\n                                        <a class=\"k-delete-button\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                    </span>\\r\\n                                </div>-->\\r\\n                                <div class=\"overlay\">\\r\\n                                    # if (DisplayName.match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                                            <i class=\"fa fa-eye\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                                            <i class=\"fa fa-external-link\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    # } #\\r\\n                                    # if (BaseId!=null) { #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                                            <i class=\"fa fa-download\"></i>\\r\\n                                        </a>\\r\\n                                    </span>\\r\\n                                    # } #\\r\\n                                    <span class=\"label\">\\r\\n                                        <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </script>\\r\\n                </div>\\n                <!--<input data-bind=\"value: emailAttachment\" class=\"k-textbox\" type=\"text\" readonly=\"readonly\">\\n                <span data-bind=\"text: attachmentErrorMessage\" class=\"send-email-attachment-error\"></span>\\n                <div>\\n                    <input type=\"file\" name=\"files\" id=\"fileUploader\" />\\n                    <div class=\"k-widget k-upload\">\\n                        <input type=\"button\" value=\"<%= localization.Remove %>\" class=\"k-button\" />\\n                    </div>\\n                </div>-->\\n            </div>\\n        </div>\\n        <div class=\"window-buttons cireson-window--footer\">\\n            <button id=\"emailOk\" data-role=\"button\"\\n                    class=\"btn btn-primary\"\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\n                <%= localization.OK %>\\n            </button>\\n            <button data-role=\"button\"\\n                    class=\"btn btn-default\"\\n                    data-bind=\"events: { click: cancelClick }\">\\n                <%= localization.Cancel %>\\n            </button>\\n        </div>\\n    </div>\\n</div>';});\n\n","\ndefine('text!forms/tasks/sendEmail/view.html',[],function () { return '<div id=\"EmailNotificationWindow\" tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\">\\n    <div class=\"modal-dialog modal-lg\">\\n        <div class=\"modal-content\">\\n            <div class=\"modal-header\">\\n                 <h4 class=\"modal-title\"><%= localization.SendEmail %></h4>\\n            </div> \\n            <div class=\"modal-body\">\\n                <div class=\"row\">\\n                    <div class=\"col-md-6 pad10\">\\n                        <div class=\"editor-label\">\\n                            <label><%= localization.SendEmailTo %></label>\\n                        </div>\\n                        <div class=\"editor-field\">\\n                            <div class=\"k-autocomplete\">\\r\\n                                <select id=\"userPickerTo\"></select>\\r\\n                                <button id=\"toField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\r\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\n                            <label><%= localization.SendEmailCC %></label>\\n                        </div>\\n                        <div class=\"editor-field\">\\n                            <div class=\"k-autocomplete\">\\n                                <select id=\"userPickerCc\"></select>\\n                                <button id=\"ccField\" class=\"searchIcon btn-primary\" data-bind=\"events:{click: openPopup}\"><i class=\"fa fa-search\"></i></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\r\\n                            <label><%= localization.Subject %></label>\\r\\n                        </div>\\r\\n                        <div class=\"editor-field\">\\r\\n                            <input data-bind=\"value: emailSubject\" class=\"k-textbox\" type=\"text\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div class=\"editor-label\">\\r\\n                            <label><%= localization.SendEmailTemplate %></label>\\r\\n                        </div>\\r\\n                        <div class=\"editor-field\" id=\"templateDiv\">\\r\\n                            <input data-role=\"combobox\"\\r\\n                                   data-placeholder=\"<%= localization.ChooseOne %>\"\\r\\n                                   data-value-primitive=\"true\"\\r\\n                                   data-text-field=\"Name\"\\r\\n                                   data-value-field=\"Id\"\\r\\n                                   data-filter=\"contains\"\\r\\n                                   data-bind=\"value: emailTemplateValue, source: emailTemplateDataSource, events:{change:emailTemplateChange }\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-12 pad10\">\\r\\n                        <div class=\"col-md-6 pad0\">\\r\\n                            <label><%= localization.Message %></label>\\r\\n                        </div>\\r\\n                        <div class=\"col-md-6 pad0\">\\r\\n                            <a href=\"#\" data-bind=\"events: { click: resizeEditor }\" role=\"button\" title=\"Expand Editor\" class=\"pull-right\"><i class=\"fa fa-expand\"></i></a>\\r\\n                        </div>\\r\\n                        <hr>\\r\\n                        <div class=\"editor-field\">\\r\\n                            <textarea id=\"messageEditor\" class=\"form-editor hidden\" data-bind=\"value: emailHTMLMessage\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <div id=\"statusPicker\" />\\r\\n                        <div class=\"checkbox\">\\r\\n                            <input id=\"IsAddToLog\" type=\"checkbox\" data-bind=\"checked: addToLog, enabled: enableAddToLog\" />\\r\\n                            <label for=\"IsAddToLog\" class=\"control-label \">\\r\\n                                <%= localization.SendEmailAddToLog %>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\"checkbox col-md-12 margin-l30\" data-bind=\"visible: addToLog\">\\r\\n                            <input id=\"setAsPrivate\" type=\"checkbox\" data-bind=\"checked: setAsPrivate\" />\\r\\n                            <label for=\"setAsPrivate\" class=\"control-label col-md-10\">\\r\\n                                <%= localization.SetAsPrivate %>\\r\\n                                <i class=\"fa fa-info-circle info-icon text-primary\" data-toggle=\"tooltip\" title=\"<%= localization.SaveMessageAsPrivateTooltip %>\"></i>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div data-bind=\"visible: showChangeStatus\" class=\"checkbox \">\\r\\n                            <input id=\"SetFirstResponseDate\" type=\"checkbox\" data-bind=\"checked: setFirstResponseDate, enabled:enableFirstResponseDate\" />\\r\\n                            <label for=\"SetFirstResponseDate\" class=\"control-label\"><%= localization.SetFirstResponseDate %></label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\"col-md-6 pad10\">\\r\\n                        <label><%= localization.SendEmailAttachment %></label>\\r\\n                        <div class=\"form-group\">\\r\\n                            <div class=\"drop-zone-element\">\\r\\n                                <div class=\"text-wrapper\">\\r\\n                                    <span class=\"drag-image-text\">\\r\\n                                        <img src=\"/Content/Images/Icons/FileUpload/upload_to_cloud.svg\" />\\r\\n                                        <b><%= localization.DragAndDrop %> </b> <%= localization.YourFilesOr %>\\r\\n                                        <a class=\"browse-file\"><b><%= localization.Browse %></b></a>\\r\\n                                        <span data-bind=\"visible: filesCount > 0\">\\r\\n                                            <span class=\"lowercase\">  <%= localization.Or %>  </span>\\r\\n                                            <a data-bind=\"events: { click: viewWorkItemFiles }\"><b><%= localization.BrowseWorkItemFiles %></b></a>\\r\\n                                        </span>\\r\\n                                    </span>\\r\\n                                    <div style=\"display:none\"><input name=\"files\" id=\"email-attachment\" type=\"file\" /></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <div class=\"fileattachment-list\"></div>\\r\\n                            <div class=\"fileattachment-img-modal\"></div>\\r\\n                        </div>\\r\\n                        <script type=\"text/x-kendo-template\" id=\"fileTemplate\">\\r\\n                            <div class=\"thumbnail-file\">\\r\\n                                <div class=\"cursor-pointer thumbnail-img\">\\r\\n                                    # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                    <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                                    # } else{ #\\r\\n                                    <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                                    # } #\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\"thumbnail-caption\">\\r\\n                                    <span>#: DisplayName #</span>\\r\\n                                    <!--<div class=\"overlay transparent\">\\r\\n                            <span class=\"pull-right\">\\r\\n                                <a class=\"k-delete-button\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                            </span>\\r\\n                        </div>-->\\r\\n                                    <div class=\"overlay\">\\r\\n                                        # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click view\" view-image title=\"View Image\">\\r\\n                                                <i class=\"fa fa-eye\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click opennewtab\" title=\"Open in New Tab\">\\r\\n                                                <i class=\"fa fa-external-link\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        # } #\\r\\n                                        # if (BaseId!=null) { #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"icon custom-click download\" title=\"Download\">\\r\\n                                                <i class=\"fa fa-download\"></i>\\r\\n                                            </a>\\r\\n                                        </span>\\r\\n                                        # } #\\r\\n                                        <span class=\"label\">\\r\\n                                            <a class=\"k-delete-button icon\" href=\"\\\\\\\\#\" title=\"<%= localization.Remove %>\"><i class=\"fa fa-trash\"></i></a>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </script>\\r\\n                    </div>\\r\\n                </div> \\n            </div>\\n\\n            <div class=\"modal-footer\">\\r\\n            <button id=\"emailOk\" data-role=\"button\"\\n                    class=\"btn btn-primary\"\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\n                <%= localization.OK %>\\n            </button>\\n            <button data-role=\"button\"\\n                    class=\"btn btn-default\"\\n                    data-bind=\"events: { click: cancelClick }\">\\n                <%= localization.Cancel %>\\n            </button>\\n        </div>\\n    </div>\\n</div>\\r\\n\\r\\n\\r\\n    \\r\\n</div>';});\n\n","\ndefine('text!forms/popups/userPickerPopup/view.html',[],function () { return '<div id=\"UserPickerPopupWindow\" class=\"cireson-window defined-form task-window\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"col-md-6\">\\r\\n                    <div class=\"form-group popup-search-box\">\\r\\n                        <input type=\"text\" data-value-update=\"keyup\" placeholder=\"<%= localization.SearchText %>\" data-bind=\"value: searchValue, events: { keypress: searchOnEnter }\" class=\"search-input\">\\r\\n                        <span data-bind=\"events:{click: search}\" class=\"search-icon\">\\r\\n                            <i class=\"fa fa-search\"></i>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div data-bind=\"visible: isDesktopView\">\\r\\n                <div data-control-grid=\"userPickerGrid\"></div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\"row\" data-bind=\"visible: isMobileView\">\\r\\n                <div class=\"col-md-4\">\\r\\n                    <div data-role=\"listview\"\\r\\n                         data-bind=\"source: userDataSource, events:{change: onListViewChanged}\"\\r\\n                         data-template=\"user-grid-mobile-template\"\\r\\n                         data-selectable=\"true\"\\r\\n                         class=\"user-listBox\"></div>\\r\\n                    <div data-role=\"pager\"\\r\\n                         data-bind=\"source: userDataSource\"\\r\\n                         data-numeric=\"false\"></div>\\r\\n                    <script type=\"text/x-kendo-template\" id=\"user-grid-mobile-template\">\\r\\n                        <div class=\"user-info\">\\r\\n                            <dl>\\r\\n                                <dt>#: FirstName # #: LastName #</dt>\\r\\n                                <dd>#: UserName # &middot; #: Title #</dd>\\r\\n                                <dd>#: Domain # &middot; #: Company #</dd>\\r\\n                            </dl>\\r\\n                        </div>\\r\\n\\r\\n                    </script>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons objectPicker-single-grid\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n';});\n\n","/**\r\nuserPickerPopup\r\n**/\r\nvar __userPickerPopupSingleton;\r\n\r\ndefine('forms/popups/userPickerPopup/controller',['require','text!forms/popups/userPickerPopup/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/popups/userPickerPopup/view.html\");\r\n    var singletonName = \"userPickerPopup\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (groupsOnly) {\r\n            // keep popup window as singleton\r\n            if (__userPickerPopupSingleton) {\r\n                return __userPickerPopupSingleton;\r\n            }\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            $(\"body\").append(ele);\r\n            __userPickerPopupSingleton = new UserPickerPopup(ele, groupsOnly);\r\n            \r\n            return __userPickerPopupSingleton;\r\n        }\r\n    }\r\n\r\n    /* -- UserPickerPopup --\r\n        // params\r\n            targetEle = domEle to create popup with\r\n        // public methods               \r\n            setSaveCallback = function(callback) sets callback to listen for save event\r\n            // callback returns selected user object\r\n    */\r\n\r\n    // NAME/ID pair data model\r\n    // used to map name/id to server or viewModel\r\n    // Generic getter and setters:  name,id\r\n    var NameIdModel = function (nameProp, idProp) {\r\n        var self = this;\r\n        this.serverNameProp = nameProp;\r\n        this.serverIdProp = idProp;\r\n        var data = {};\r\n        data[self.serverNameProp];\r\n        data[self.serverIdProp];\r\n        this.set = {\r\n            name: function (val) { data[self.serverNameProp] = val; },\r\n            id: function (val) { data[self.serverIdProp] = val; }\r\n        }\r\n        this.setObj = function (name, id) {\r\n            self.set.name(name); self.set.id(id);\r\n        }\r\n        this.setFromObj = function (obj) {\r\n            self.setObj(obj[self.serverNameProp], obj[self.serverIdProp]);\r\n        }\r\n        this.get = {\r\n            name: function () { return data[self.serverNameProp]; },\r\n            id: function () { return data[self.serverIdProp]; }\r\n        }\r\n        this.getFromObj = function (obj) {\r\n            self.setFromObj(obj);\r\n            return data;\r\n        }\r\n        this.getObj = function (name, id) { if (typeof (name) != \"undefined\" && typeof (id) != \"undefined\") { self.setObj(name, id); } return data; }\r\n        this.getGenericFromObj = function (obj) {\r\n            this.setFromObj(obj);\r\n            return {\r\n                name: self.get.name(),\r\n                id: self.get.id()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // CONTROL\r\n    var UserPickerPopup = function (targetEle, groupsOnly) {\r\n        var self = this;\r\n        var html = targetEle;\r\n        var gridHtml = targetEle.find(\"[data-control-grid]\");\r\n        var grid;\r\n        var gridUrl = groupsOnly\r\n            ? \"/User/GetUserSearchResults?groupsOnly=true\"\r\n            : \"/User/GetUserSearchResults\";\r\n        var popup;\r\n        var _vm;\r\n\r\n        // model getters/setters\r\n        // Props return from grid search to match to generic model\r\n        var _textProp = \"Name\";\r\n        var _idProp = \"Id\";\r\n        var _model = new NameIdModel(_textProp, _idProp);\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n            _vm = kendo.observable({\r\n                searchText: localization.SearchText,\r\n                selectUserText: groupsOnly ? localization.SelectGroup : localization.SelectUser,\r\n                searchValue: \"\",\r\n                //okText: localization.OK,\r\n                //cancelText: localization.Cancel,\r\n                search: onSearchClick,\r\n                searchOnEnter: function(e) {\r\n                    if (e.which == 13) {\r\n                        e.preventDefault();\r\n                        onSearchClick();\r\n                    }\r\n                },\r\n                save: onSaveClick,\r\n                cancel: onCancelClick,\r\n                userDataSource: new kendo.data.DataSource(),\r\n                onListViewChanged: function (e) {\r\n                    var index = e.sender.select().index();\r\n                    var dataItem = e.sender.dataSource.view()[index];\r\n                    this.set(\"selectedUser\", dataItem);\r\n                },\r\n                selectedUser: null,\r\n                isDesktopView: !app.isMobileDevice(),\r\n                isMobileView: app.isMobileDevice()\r\n\r\n        });\r\n            kendo.bind(html, _vm);\r\n            createPopup();\r\n            createGrid();\r\n            bindEvents();\r\n            self.open = openPopup;\r\n            self.close = closePopup;\r\n            self.vm = _vm;\r\n        }\r\n\r\n        /************************/\r\n        /*** CONTROL EVENTS *****/\r\n        /************************/\r\n\r\n        var bindEvents = function () {\r\n            \r\n        }\r\n\r\n        /******************************/\r\n        /*** CONTROL USER ACTIONS *****/\r\n        /******************************/\r\n\r\n        var onSearchClick = function () {\r\n            grid.search(_vm.searchValue);\r\n        }\r\n        var onSaveClick = function (e) {\r\n            var onMobile = app.isMobileDevice();\r\n            if (onMobile) {\r\n                if (!_.isNull(_vm.selectedUser)) {\r\n                    var userObj = _model.getGenericFromObj(_vm.selectedUser);\r\n                    $(self).trigger(\"save\", userObj);\r\n                    closePopup();\r\n                }\r\n            } else {\r\n                var selectedRow = grid.kendoGrid.select();\r\n                if (selectedRow) {\r\n                    var obj = _model.getGenericFromObj(grid.kendoGrid.dataItem(selectedRow));\r\n                    $(self).trigger(\"save\", obj);\r\n                    closePopup();\r\n                }\r\n            }\r\n        }\r\n        var onCancelClick = function () {\r\n            $(self).trigger(\"cancel\");\r\n            closePopup();\r\n        }\r\n\r\n        /*************************/\r\n        /*** CONTROL METHODS *****/\r\n        /*************************/\r\n        var openPopup = function () {\r\n            //clear out search box value and search results before opening the window\r\n            self.vm.set(\"searchValue\", \"\");\r\n            grid.kendoDataSource.data([]);\r\n            popup.kendoWindow.open();\r\n        }\r\n        var closePopup = function () {\r\n            popup.kendoWindow.close();\r\n        }\r\n        var createPopup = function () {\r\n            popup = new Popup(groupsOnly);\r\n        }        \r\n        var createGrid = function () {\r\n            grid = new Grid({\r\n                html: gridHtml,\r\n                url: gridUrl\r\n            });\r\n        }\r\n\r\n        /****************************/\r\n        /*** CONTROL SUBCLASSES *****/\r\n        /****************************/\r\n\r\n        /* -- Popup --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n               \r\n        */\r\n        var Popup = function (groupsOnly) {\r\n            var self = this;\r\n            var kendoWindow;\r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoWindow();\r\n                self.kendoWindow = kendoWindow;\r\n            }\r\n\r\n            // EVENTS\r\n           \r\n            // ACTIONS\r\n\r\n            // METHODS\r\n            \r\n            var createKendoWindow = function() {\r\n                kendoWindow = html.kendoCiresonWindow({\r\n                    title: groupsOnly ? localization.SelectGroup : localization.SelectUser,\r\n                    content: null,\r\n                    width: 680,\r\n                    height: 420,\r\n                    actions: [\"Close\"]\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /* -- Grid --\r\n            // params\r\n                settings = { }\r\n            // public methods\r\n        */\r\n        var Grid = function (settings) {\r\n            // settings\r\n            var self = this;\r\n            var html = settings.html;\r\n            var url = settings.url;\r\n            var height = 200;\r\n            var kendoGrid;\r\n            var kendoDataSource;\r\n            var searchValue;\r\n            // private params           \r\n           \r\n\r\n            // CONSTRUCT\r\n\r\n            var __construct = function () {\r\n                createKendoDataSource();\r\n                createKendoGrid();\r\n                kendoGrid.pager.element.hide();\r\n                bindEvents();\r\n                self.kendoGrid = kendoGrid;\r\n                self.kendoDataSource = kendoDataSource;\r\n                self.search = search;\r\n            }\r\n\r\n            // EVENTS\r\n\r\n            var bindEvents = function () {\r\n                kendoGrid.bind(\"dataBound\", function (e) {\r\n                    kendoGrid.pager.element.show();\r\n                });\r\n                kendoGrid.element.on(\"dblclick\", \"tbody>tr\", onRowDblClick);\r\n            }\r\n\r\n            // ACTIONS\r\n\r\n            var onRowDblClick = function () {\r\n                kendoGrid.select($(this));\r\n                onSaveClick();\r\n            }\r\n\r\n            // METHODS\r\n\r\n            var search = function(value){\r\n                searchValue = value;\r\n                kendoDataSource.read();\r\n                kendoDataSource.page(1);\r\n\r\n                _vm.set(\"userDataSource\", kendoDataSource);\r\n            }\r\n            var createKendoDataSource = function () {\r\n                kendoDataSource = new kendo.data.DataSource({\r\n                    \"transport\": {\r\n                        \"prefix\": \"\",\r\n                        \"read\": {\r\n                            \"url\": url,\r\n                            \"data\": function() {\r\n                                return {\r\n                                    userFilter: function() {\r\n                                        return searchValue;\r\n                                    },\r\n                                    filterByAnalyst: _vm.filterByAnalyst\r\n                                }\r\n                            },\r\n                            \"type\": \"GET\"\r\n                        }\r\n                    },\r\n                    \"pageSize\": app.isMobileDevice ? 3 : 15,\r\n                    \"serverPaging\": true,\r\n                    \"serverSorting\": true,\r\n                    \"serverFiltering\": true,\r\n                    \"serverGrouping\": true,\r\n                    \"total\": 0,\r\n                    \"type\": \"aspnetmvc-ajax\",\r\n                    \"schema\": {\r\n                        \"data\": \"Data\",\r\n                        \"total\": \"Total\",\r\n                        \"errors\": \"Errors\",\r\n                        \"model\": {\r\n                            \"fields\": {\r\n                                \"Id\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Name\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"PrincipalName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"UserName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Domain\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Company\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Title\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"FirstName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"LastName\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"EmployeeId\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"Analyst\": {\r\n                                    \"type\": \"number\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            var createKendoGrid = function () {\r\n                kendoGrid = html.kendoGrid({\r\n                    height: height,\r\n                    dataSource: kendoDataSource,\r\n                    selectable: \"Single,Row\",\r\n                    sortable: { mode: \"multiple\" },\r\n                    pageable: true,\r\n                    filterable: {\r\n                        extra: false,\r\n                        operators: {\r\n                            string: {\r\n                                startswith: localization.Startswith,\r\n                                contains: localization.Contains,\r\n                                eq: localization.Isequalto,\r\n                                neq: localization.Isnotequalto\r\n                            }\r\n                        }\r\n                    },\r\n                    autoBind: false,\r\n                    columns: [{\r\n                        \"title\": localization.id,\r\n                        \"hidden\": true,\r\n                        \"field\": \"Id\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.FirstName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"width\": \"110px\",\r\n                        \"field\": \"FirstName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.LastName,\r\n                        \"attributes\": {\r\n                            \"class\": \"grid-highlight-column\"\r\n                        },\r\n                        \"width\": \"110px\",\r\n                        \"field\": \"LastName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Title,\r\n                        \"field\": \"Title\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.UserName,\r\n                        \"field\": \"UserName\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Domain,\r\n                        \"field\": \"Domain\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }, {\r\n                        \"title\": localization.Company,\r\n                        \"field\": \"Company\",\r\n                        \"filterable\": {},\r\n                        \"encoded\": true\r\n                    }],\r\n                }).data(\"kendoGrid\");\r\n            }\r\n\r\n            // END\r\n\r\n            __construct();\r\n        }\r\n\r\n        /*************/\r\n        /*** END *****/\r\n        /*************/\r\n\r\n        __construct();\r\n        \r\n\r\n    }\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/flyout/fileAttachmentsFlyout/mobile_view.html',[],function () { return '<div class=\"cireson-window defined-form task-window hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div>\\r\\n                <div class=\"fileattachment-list\"></div>\\r\\n                <div class=\"fileattachment-img-modal\"></div>\\r\\n            </div>\\r\\n\\r\\n            <script type=\"text/x-kendo-template\" id=\"filesTemplate\">\\r\\n                <div class=\"thumbnail-file\">\\r\\n                    <div class=\"cursor-pointer thumbnail-img\">\\r\\n                        # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                        <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                        # } else{ #\\r\\n                        <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                        # } #\\r\\n                    </div>\\r\\n                    <div class=\"thumbnail-caption\">\\r\\n                        <span>#: DisplayName #</span>\\r\\n                        <div class=\"overlay\">\\r\\n                            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"View Image\" action=\"view\">\\r\\n                                    <i class=\"fa fa-eye\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"Open in New Tab\" action=\"opennewtab\">\\r\\n                                    <i class=\"fa fa-external-link\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                            # } #\\r\\n                            <span class=\"label\">\\r\\n                                <a class=\"icon custom-click\" title=\"Download\" action=\"download\">\\r\\n                                    <i class=\"fa fa-download\"></i>\\r\\n                                </a>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </script>\\r\\n            <script>\\r\\n                function selectFile(el, action) {\\r\\n                    //var listView = $(\".fileattachment-list\").data(\"kendoListView\");\\r\\n                    //var item = $(el).closest(\"[role=\\'option\\']\");\\r\\n                    //var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\\r\\n\\r\\n                    //if (action === \"download\") {\\r\\n                    //    var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\\r\\n                    //    location.href = downloadUrl + dataItem.BaseId;\\r\\n                    //} else if (action === \"opennewtab\") {\\r\\n                    //    var win = window.open(\\'about:blank\\');\\r\\n                    //    setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\\r\\n                    //        win.document.body.appendChild(win.document.createElement(\\'img\\')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\\r\\n                    //        win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\\r\\n                    //        win.focus();\\r\\n                    //    }, 0);\\r\\n\\r\\n\\r\\n                    //} else {\\r\\n                    //    var dialog = $(\\'.fileattachment-img-modal\\');\\r\\n                    //    dialog.kendoDialog({\\r\\n                    //        modal: true,\\r\\n                    //        title: dataItem.DisplayName,\\r\\n                    //        content: \"<div class=\\'file-img-container\\'><img src=\\\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\\\" onerror=\\\\\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\\\\\" alt=\\\\\"\" + dataItem.DisplayName + \"\\\\\" /></div>\",\\r\\n                    //        animation: {\\r\\n                    //            open: {\\r\\n                    //                effects: \"fade:in\"\\r\\n                    //            }\\r\\n                    //        }\\r\\n                    //    });\\r\\n                    //    $(\\'.k-window.k-widget\\').addClass(\\'acivity-popup-window\\');\\r\\n                    //    dialog.data(\"kendoDialog\").open();\\r\\n                    //}\\r\\n                }\\r\\n\\r\\n            </script>\\r\\n        </div>\\r\\n        <div class=\"window-buttons cireson-window--footer\">\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"events: { click: save }, visible: saveCancelBtn\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel }, visible: saveCancelBtn\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancel}, visible: closeBtn \">\\r\\n                <%= localization.Close %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!forms/flyout/fileAttachmentsFlyout/view.html',[],function () { return '<div tabindex=\"-1\" role=\"dialog\" class=\"modal right fade\">\\r\\n    <div class=\"modal-dialog\">\\r\\n        <div class=\"modal-content\">\\r\\n            <div class=\"modal-header\">\\r\\n                <h4 class=\"modal-title\"><%= localization.FileAttachments %></h4>\\r\\n            </div>\\r\\n            <div class=\"modal-body\">\\r\\n                <div>\\r\\n                    <div class=\"fileattachment-list\"></div>\\r\\n                    <div class=\"fileattachment-img-modal\"></div>\\r\\n                </div>\\r\\n\\r\\n                <script type=\"text/x-kendo-template\" id=\"filesTemplate\">\\r\\n                    <div class=\"thumbnail-file\">\\r\\n                        <div class=\"cursor-pointer thumbnail-img\">\\r\\n                            # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                            <img src=\"data:image/png;base64,#= Content.data #\" onerror=\"this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\';\" alt=\"#: DisplayName # image\" />\\r\\n                            # } else{ #\\r\\n                            <img class=\"default-icon\" src=\"/Content/Images/Icons/FileUpload/document.svg\" action=\"download\" onerror=\"    this.onerror = null; this.src = \\'/Content/Images/Icons/FileUpload/document.svg\\'\">\\r\\n                            # } #\\r\\n                        </div>\\r\\n                        <div class=\"thumbnail-caption\">\\r\\n                            <span>#: DisplayName #</span>\\r\\n                            <div class=\"overlay\">\\r\\n                                # if (DisplayName.toLowerCase().match(/\\\\.(jpg|jpeg|png|gif)$/)) { #\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" view-image action=\"view\" title=\"View Image\">\\r\\n                                        <i class=\"fa fa-eye\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" title=\"Open in New Tab\" action=\"opennewtab\">\\r\\n                                        <i class=\"fa fa-external-link\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                # } #\\r\\n                                # if (BaseId!=null) { #\\r\\n                                <span class=\"label\">\\r\\n                                    <a class=\"icon custom-click\" title=\"Download\" action=\"download\">\\r\\n                                        <i class=\"fa fa-download\"></i>\\r\\n                                    </a>\\r\\n                                </span>\\r\\n                                # } #\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </script>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\"modal-footer\">\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-primary\"\\r\\n                        data-bind=\"events: { click: save }, visible: saveCancelBtn\">\\r\\n                    <%= localization.OK %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancel }, visible: saveCancelBtn\">\\r\\n                    <%= localization.Cancel %>\\r\\n                </button>\\r\\n                <button data-role=\"button\"\\r\\n                        class=\"btn btn-default\"\\r\\n                        data-bind=\"events: { click: cancel}, visible: closeBtn \">\\r\\n                    <%= localization.Close %>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>';});\n\n","/**\r\nfileAttachmentsFlyout\r\n**/\r\n\r\nvar __fileAttachmentsPopupSingleton;\r\n\r\ndefine('forms/flyout/fileAttachmentsFlyout/controller',['require','text!forms/flyout/fileAttachmentsFlyout/mobile_view.html','text!forms/flyout/fileAttachmentsFlyout/view.html'],function (require) {\r\n    var tpl = app.isMobile() ? require(\"text!forms/flyout/fileAttachmentsFlyout/mobile_view.html\") : require(\"text!forms/flyout/fileAttachmentsFlyout/view.html\");\r\n    var singletonName = \"fileAttachmentsFlyout\"; // used to call for singleton\r\n    var definition = {\r\n        template: tpl,\r\n        getPopup: function (vm, task) {\r\n            //only build the template if the popup singleton does not exist.\r\n            var built = _.template(tpl);\r\n            var ele = $(built());\r\n\r\n            $(\"body\").append(ele);\r\n            __fileAttachmentsPopupSingleton = new FileAttachmentsPopup(vm, ele, task);\r\n\r\n            return __fileAttachmentsPopupSingleton;\r\n        }\r\n    }\r\n\r\n    // CONTROL\r\n    var FileAttachmentsPopup = function (vm, targetEle, task) {\r\n        var self = this;\r\n        var html = targetEle;\r\n\r\n        var _vmWindow, win;\r\n\r\n        // getter/setters        \r\n        this.setSaveCallback = function (callback) {\r\n            $(self).unbind(\"save\")\r\n                .bind(\"save\", function (e, obj) { callback(obj); });\r\n        }\r\n        this.setCancelCallback = function (callback) {\r\n            $(self).unbind(\"cancel\")\r\n                .bind(\"cancel\", function (e, obj) { callback(obj); });\r\n        }\r\n\r\n        /*******************/\r\n        /*** CONSTRUCT *****/\r\n        /*******************/\r\n\r\n        var __construct = function () {\r\n\r\n            if (app.isMobile()) {\r\n                win = html.kendoCiresonWindow({\r\n                    title: localization.FileAttachments,\r\n                    width: 650,\r\n                    height: 740,\r\n                    actions: []\r\n                }).data(\"kendoWindow\");\r\n            }\r\n\r\n            _vmWindow = kendo.observable({\r\n                save: function() {\r\n                    $(self).trigger(\"save\", { selectedFiles: _vmWindow.selectedFiles });\r\n                    _vmWindow.closeModal();\r\n                },\r\n                cancel: function() {\r\n                    $(self).trigger(\"cancel\");\r\n                    _vmWindow.closeModal();\r\n                },\r\n                isDesktopView: !app.isMobileDevice(),\r\n                isMobileView: app.isMobileDevice(),\r\n                selectedFiles: [],\r\n                onOpenFile: function(e) {\r\n                    var data = this.dataSource.view();\r\n\r\n                    _vmWindow.selectedFiles = $.map(this.select(),\r\n                        function(item) {\r\n                            return data[$(item).index()];\r\n                        });\r\n                },\r\n                saveCancelBtn: (task),\r\n                closeBtn: (!task),\r\n                openModal: function () {\r\n                    if (!app.isMobile())\r\n                        html.modal('show');\r\n                    else {\r\n                        html.removeClass('hide');\r\n                        html.show();\r\n                        win.open();\r\n                    }\r\n                },\r\n                closeModal: function() {\r\n                    if (app.isMobile())\r\n                        win.close();\r\n                    else\r\n                        html.modal('hide');\r\n                },\r\n                selectFile: function(el, isImage) {\r\n                    var listView = html.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                    var item = el.closest(\"[role='option']\");\r\n                    var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n\r\n                    if (isImage && task == \"sendEmail\") return;\r\n\r\n                    action = el.attr(\"action\");\r\n                    if (action === \"download\") {\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        location.href = downloadUrl + dataItem.BaseId;\r\n                    } else if (action === \"opennewtab\") {\r\n                        var win = window.open('about:blank');\r\n                        setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                            win.document.body.appendChild(win.document.createElement('img')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.focus();\r\n                        }, 0);\r\n                        \r\n                        \r\n                    } else {\r\n                        var dialog = $('.fileattachment-img-modal');\r\n\r\n                        if (dialog.length > 1) {\r\n                            for (var i = 1; i < dialog.length; i++) {\r\n                                if ($(dialog[i]).data(\"kendoDialog\"))\r\n                                    $(dialog[i]).data(\"kendoDialog\").destroy();\r\n                                dialog.eq(i).remove();\r\n                            }\r\n                        }\r\n\r\n                        if (dataItem) {\r\n\r\n                            var dialogs = $('.acivity-popup-window');\r\n                            if (dialogs.length > 1) {\r\n                                for (var i = 1; i < dialogs.length; i++) {\r\n                                    dialogs.eq(i).remove();\r\n                                }\r\n                            }\r\n\r\n                            dialog.kendoDialog({\r\n                                modal: true,\r\n                                title: dataItem.DisplayName,\r\n                                content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" +\r\n                                    dataItem.Content.data +\r\n                                    \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" +\r\n                                    dataItem.DisplayName +\r\n                                    \"\\\" /></div>\",\r\n                                animation: {\r\n                                    open: {\r\n                                        effects: \"fade:in\"\r\n                                    }\r\n                                }\r\n                            });\r\n                            $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                            dialog.data(\"kendoDialog\").open();\r\n\r\n                            //close preview window on overlay click\r\n                            $('.k-overlay').on(\"click\", function () {\r\n                                dialog.data(\"kendoDialog\").close();\r\n                            });\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            });\r\n            kendo.bind(html, _vmWindow);\r\n\r\n            if (!app.isMobile()) {\r\n\r\n                html.on('shown.bs.modal',\r\n                    function() {\r\n                        //reposition modal backdrop\r\n                        $('.modal-backdrop').each(function(i, obj) {\r\n                            html.before(obj);\r\n                        });\r\n\r\n                        //remove modal focus so tools with popup would work\r\n                        $(document).off('focusin.modal');\r\n                    });\r\n\r\n                html.on('hidden.bs.modal',\r\n                    function() {\r\n                        $('.modal-backdrop').remove();\r\n                    });\r\n\r\n            }\r\n\r\n            self.open = _vmWindow.openModal;\r\n            self.close = _vmWindow.closeModal;\r\n            self.vm = _vmWindow;\r\n\r\n            html.find(\".fileattachment-list\").kendoListView({\r\n                dataSource: vm.viewModel.FileAttachment,\r\n                template: kendo.template($(\"#filesTemplate\").html()),\r\n                selectable: (task) ? \"multiple\" : \"single\",\r\n                change: _vmWindow.onOpenFile,\r\n                dataBound: function () {\r\n                    //Remove view image icon if from send email.\r\n                    if (task == undefined && task != \"sendEmail\") {\r\n                        html.find(\"a[view-image]\").parent().hide();\r\n                    }\r\n\r\n                    html.find(\".custom-click\").on(\"click\", function () {\r\n                        _vmWindow.selectFile($(this), false);\r\n                    });\r\n\r\n                    if (!app.isMobile()) {\r\n                        html.find(\".thumbnail-img img\").on(\"click\", function () {\r\n                            _vmWindow.selectFile($(this), true);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        __construct();\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nsend email\r\n**/\r\n\r\n\r\ndefine('CustomSpace/Scripts/forms/tasks/sendEmail/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/sendEmail/mobile_view.html','text!forms/tasks/sendEmail/view.html','forms/popups/userPickerPopup/controller','forms/flyout/fileAttachmentsFlyout/controller','forms/fields/enum/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = app.isMobile() ?  require(\"text!forms/tasks/sendEmail/mobile_view.html\") : require(\"text!forms/tasks/sendEmail/view.html\");\r\n    var objectPickerPopup = require(\"forms/popups/userPickerPopup/controller\");\r\n    var attachmentPickerFlyout = require(\"forms/flyout/fileAttachmentsFlyout/controller\");\r\n    var enumPickerControl = require(\"forms/fields/enum/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            //build the template for the window\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            var filter = {};\r\n            var recipientList = {\r\n                recipientToList: [],\r\n                recipientCCList: []\r\n            };\r\n\r\n            //add FileAttachment on viewModel if not found\r\n            if (_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                vm.viewModel.set(\"FileAttachment\", []);\r\n            }\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            view.destroy();//there is some issue with the cloned element if we don't destroy the view\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                sendEmail: function () {\r\n                    var cont = view.element; //we have the element in memory so no need use a selector\r\n\r\n                    if (app.isMobile()) {\r\n                        win = cont.kendoCiresonWindow({\r\n                            title: localization.SendEmail,\r\n                            width: 650,\r\n                            height: 740,\r\n                            actions: [],\r\n                            activate: function () {\r\n                                getAffectedUserEmail(_vmWindow);\r\n                                setDefaultWIStatus(_vmWindow);\r\n                            }\r\n                        }).data(\"kendoWindow\");\r\n                    }\r\n                    \r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        emailTo: \"\",\r\n                        emailCC: \"\",\r\n                        emailSubject: \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title,\r\n                        emailHTMLMessage: (session.emailBodyTemplate.length > 0) ? $('<div/>').html(session.emailBodyTemplate).text() : \"\",\r\n                        emailTextMessage:\"\",\r\n                        emailAttachment: \"\",\r\n                        emailTemplateDataSource: tempateDataSource,\r\n                        emailTemplateValue: \"\",\r\n                        attachmentErrorMessage: \"\",\r\n                        addToLog: (session.addToActionLogDefault === \"true\" || session.forceAddToActionLog === \"true\") ? true : false,\r\n                        enableAddToLog: (session.forceAddToActionLog === \"true\") ? false : true,\r\n                        okEnabled: true,\r\n                        setAsPrivate: (session.saveMessageAsPrivate === \"true\") ? true : false,\r\n                        okClick: function (e) {\r\n                            var recipientToEmail = _.without(recipientList[\"recipientToList\"], _.findWhere(recipientList[\"recipientToList\"], {\r\n                                Email: \"\"\r\n                            }));\r\n                            recipientToEmail = _.uniq(_.pluck(recipientToEmail, \"Email\"));\r\n                            _vmWindow.set(\"emailTo\", recipientToEmail.join(\";\"));\r\n\r\n                            var recipientCcEmail = _.without(recipientList[\"recipientCCList\"], _.findWhere(recipientList[\"recipientCCList\"], {\r\n                                Email: \"\"\r\n                            }));\r\n                            recipientCcEmail = _.uniq(_.pluck(recipientCcEmail, \"Email\"));\r\n                            _vmWindow.set(\"emailCC\", recipientCcEmail.join(\";\"));\r\n\r\n\r\n                            //validate email addresses first\r\n                            var arrEmail = _.union(recipientToEmail, recipientCcEmail);\r\n                            if (recipientToEmail.length <= 0) {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.InvalidEmailAddress,\r\n                                    message: localization.PleaseProvideEmailAddress\r\n                                });\r\n                                return;\r\n                            }\r\n                            else {\r\n                                var invalidEmailAdress = validateEmailAddress(arrEmail);\r\n\r\n                                if (invalidEmailAdress != null) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.InvalidEmailAddress,\r\n                                        message: localization.InvalidEmailAddressMessage.replace(\"{0}\", invalidEmailAdress)\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            //if we are adding to action log we require there to be message content\r\n                            if (this.addToLog) {\r\n                                var editor = cont.find(\"#messageEditor\").data(\"kendoEditor\");\r\n                                this.set(\"emailTextMessage\", editor.body.innerText || editor.body.textContent);\r\n\r\n                                var trimmedMessage = (this.emailTextMessage && _.isString(this.emailTextMessage)) ? this.emailTextMessage.trim() : \"\";\r\n\r\n                                if (trimmedMessage.length <= 0) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.MessageRequired,\r\n                                        message: localization.MessageRequiredWhenAddingLogEntry\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            //send email\r\n                            kendo.ui.progress(cont, true);\r\n                            sendEmail(this, cont);\r\n\r\n                        },\r\n                        cancelClick: function (e) {\r\n                            if (app.isMobile()) {\r\n                                win.close();\r\n                            } else {\r\n                                $.when(kendo.ui.ExtOkCancelDialog.show({\r\n                                    title: localization.Warning,\r\n                                    message: localization.UnsavedDataMessage,\r\n                                    icon: \"fa fa-exclamation\"\r\n                                })\r\n                                   ).done(function (response) {\r\n                                       if (response.button === \"ok\") {\r\n                                           if (vm.widget)\r\n                                               vm.widget.remoteManageRecepient = null;\r\n                                           shown = false;\r\n                                           cont.modal('hide');\r\n                                       }\r\n                                   });\r\n                            }\r\n                        },\r\n                        emailTemplateChange: function (e) {\r\n                            var filter = {\r\n                                field: \"Id\",\r\n                                operator: \"eq\",\r\n                                value: e.sender._old //_old stores the selected value's id\r\n                            };\r\n                            tempateDataSource.filter(filter);\r\n                        \r\n                            var dView = tempateDataSource.view();\r\n                            var subject = (dView.length > 0) ? \"[\" + vm.viewModel.Id + \"] \" + dView[0].Subject : \"[\" + vm.viewModel.Id + \"] \" + vm.viewModel.Title;\r\n                            var content = (dView.length > 0) ? dView[0].Content : \"\";\r\n                            \r\n                            content = cont.find(\"#messageEditor\").html(content).text();\r\n\r\n                            //change new line (\\n) to line break (<br>) on non-html template only\r\n                            if (!content.match(/<(\\w+)((?:\\s+\\w+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/)) {\r\n                                content = cont.find(\"#messageEditor\").html(content).text().replace(/\\r\\n|\\r|\\n/g, \"<br />\");\r\n                            }\r\n                            \r\n                            this.set(\"emailSubject\", subject);\r\n                            this.set(\"emailHTMLMessage\", content);\r\n\r\n                            tempateDataSource.filter({});\r\n                        },\r\n                        resizeEditor: function (e) {\r\n                            e.preventDefault();\r\n\r\n                            var $this = $(e.currentTarget);\r\n\r\n                            if ($this.children('i').hasClass('fa-expand')) {\r\n                                $this.children('i').removeClass('fa-expand');\r\n                                $this.children('i').addClass('fa-compress');\r\n                            }\r\n                            else if ($this.children('i').hasClass('fa-compress')) {\r\n                                $this.children('i').removeClass('fa-compress');\r\n                                $this.children('i').addClass('fa-expand');\r\n                            }\r\n                            $('#EmailNotificationWindow').find('table.k-editor').toggleClass('editor-expanded');\r\n                        },\r\n                        showChangeStatus: (vm.type === \"Incident\"),\r\n                        changeStatus: false,\r\n                        sendEmailAttachments: [],\r\n                        fromWorkItemAttachementsId: [],\r\n                        setFirstResponseDate: (_.isNull(vm.viewModel.FirstResponseDate)) ? true : false,\r\n                        enableFirstResponseDate: (_.isNull(vm.viewModel.FirstResponseDate)) ? true : false,\r\n                        openPopup: function (e) {\r\n                            var popupWindow = objectPickerPopup.getPopup();\r\n                            popupWindow.setSaveCallback(function (object) {\r\n                                var recipientType = (e.currentTarget.id === \"toField\") ? \"recipientToList\" : \"recipientCCList\";\r\n\r\n                                var picker = (e.currentTarget.id === \"toField\")\r\n                                    ? cont.find(\"#userPickerTo\").data(\"kendoMultiSelect\")\r\n                                    : cont.find(\"#userPickerCc\").data(\"kendoMultiSelect\");\r\n\r\n                                var userEmailObj = _.find(_vmWindow.users, function (item) {\r\n                                    return item.guid === object.id;\r\n                                });\r\n\r\n                                var selectedUser = !_.isUndefined(userEmailObj)\r\n                                    ? { Id: object.id, Name: object.name, Email: userEmailObj.email }\r\n                                    : { Id: object.id, Name: object.name, Email: \"\" };\r\n\r\n                                var isUserExist = picker.dataSource.data().find(function (element) {\r\n                                    return element.Id === selectedUser.Id;\r\n                                });\r\n\r\n                                if (!isUserExist) {\r\n                                    var key = (recipientType.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                                    filter[key] = selectedUser.Name;\r\n                                    picker.dataSource.add(selectedUser);\r\n                                }\r\n\r\n                                recipientList[recipientType].push(selectedUser);\r\n                                picker.value(_.pluck(recipientList[recipientType], \"Id\"));\r\n                            });\r\n                            popupWindow.vm.filterByAnalyst = false;\r\n                            popupWindow.open();\r\n                        },\r\n                        viewWorkItemFiles: function() {\r\n                            var flyoutWindow = attachmentPickerFlyout.getPopup(vm, \"sendEmail\");\r\n                            flyoutWindow.setSaveCallback(function(data) {\r\n                                var selectedFiles = data.selectedFiles || [];\r\n                                for (var n = 0; n < selectedFiles.length; n++) {\r\n                                    _vmWindow.sendEmailAttachments.push(selectedFiles[n]);\r\n                                }\r\n                            });\r\n                            flyoutWindow.open();\r\n                        },\r\n                        filesCount: vm.viewModel.FileAttachment.length || 0,\r\n                        users: [],\r\n                        Status: { Id: \"\", Name: \"\" },\r\n                        changeStatusSetting: {\r\n                            statusTypeId: \"\",\r\n                            defaultStatusId: \"\",\r\n                            rootStatusEnumId: \"\",\r\n                            enableChangeStatus: true\r\n                        }\r\n                    });\r\n                   \r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    if (!app.isMobile()) {\r\n                        cont.on('shown.bs.modal',\r\n                            function () {\r\n                                //prevent shown event from duplicate trigger\r\n                                $(this).off('shown.bs.modal');\r\n                                //prevent body from scrolling when flyout is open\r\n                                $(\"body\").addClass(\"modal-open\");\r\n                                //set to true when flyout is open\r\n                                shown = true;\r\n                                //reposition modal backdrop\r\n                                $('.modal-backdrop').each(function (i, obj) {\r\n                                    cont.before(obj);\r\n                                });\r\n                                //remove modal focus so tools with popup would work\r\n                                $(document).off('focusin.modal');\r\n\r\n                                $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n                                //set defaults\r\n                                if (vm.widget.remoteManageRecepient && vm.widget.remoteManageRecepient.BaseId != null)\r\n                                    getRemoteManageRecepient();\r\n                                else\r\n                                    getAffectedUserEmail(_vmWindow);\r\n\r\n                                getSendEmailChangeStatusSettings(_vmWindow);\r\n                                setDefaultWIStatus(_vmWindow);\r\n\r\n                                //build editor\r\n                                buildEditor(cont.find(\"#messageEditor\"), _vmWindow);\r\n\r\n                                //build uploader\r\n                                initializeUploader(cont, _vmWindow);\r\n\r\n                                //build userpicker\r\n                                initializeUserPicker(cont.find(\"#userPickerTo\"), _vmWindow, \"recipientToList\");\r\n                                initializeUserPicker(cont.find(\"#userPickerCc\"), _vmWindow, \"recipientCCList\");\r\n\r\n                                //build status picker\r\n                                initializeStatusPicker(cont.find(\"#statusPicker\"), _vmWindow);\r\n\r\n                                //apply change status rule if root enum is not specified\r\n                                if (_.isNull(_vmWindow.changeStatusSetting.rootStatusEnumId)) {\r\n                                    applyChangeStatus(cont, vm, _vmWindow);\r\n                                }\r\n\r\n                            });\r\n\r\n                        cont.on('hidden.bs.modal', function () {\r\n                            $(\"body\").removeClass(\"modal-open\");\r\n\r\n                            $('.modal-backdrop').remove();\r\n\r\n                            var toPicker = cont.find(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                            var ccPicker = cont.find(\"#userPickerCc\").data(\"kendoMultiSelect\");\r\n\r\n                            //clear userpicker values on modal close\r\n                            toPicker.value(\"\");\r\n                            ccPicker.value(\"\");\r\n\r\n                            //clear filters and recipients vars\r\n                            filter = {};\r\n                            recipientList = {\r\n                                recipientToList: [],\r\n                                recipientCCList: []\r\n                            };\r\n                        });\r\n\r\n                        cont.on('hide.bs.modal',\r\n                            function (e) {\r\n                                if (shown && $('#extOkCancelDialog').length <= 1) {\r\n                                    _vmWindow.cancelClick(e);\r\n                                    e.preventDefault();\r\n                                    e.stopImmediatePropagation();\r\n                                    return false;\r\n                                }\r\n                            });\r\n\r\n                        $.get(\r\n                            \"/api/V3/User/GetUserList\",\r\n                            {\r\n                                fetchAll: true\r\n                            },\r\n                            function (data) {                                \r\n                                var names = [],\r\n                                    items = [];\r\n                                for (var i = 0; i<data.length; (i = i + 10000)) {\r\n                                    var subData = data.slice(i, i + 10000);\r\n                                    items = $.map(subData, function(value, i) {\r\n                                        return { 'id': i, 'name': value.Name, 'guid': value.Id, 'email': value.Email };\r\n                                    });\r\n                                    names = names.concat(items);\r\n                                }\r\n\r\n                                //store user data to viewmodel\r\n                                _vmWindow.users = names;\r\n                                cont.modal('show');\r\n                        });                        \r\n                    } else {\r\n                        $.get(\"/api/V3/User/GetUserList\",\r\n                            {\r\n                                fetchAll: true\r\n                            },\r\n                            function(data) {\r\n                                var names = [],\r\n                                    items = [];\r\n                                for (var i = 0; i < data.length; (i = i + 10000)) {\r\n                                    var subData = data.slice(i, i + 10000);\r\n                                    items = $.map(subData, function(value, i) {\r\n                                        return { 'id': i, 'name': value.Name, 'guid': value.Id, 'email': value.Email };\r\n                                    });\r\n                                    names = names.concat(items);\r\n                                }\r\n\r\n                                //store user data to viewmodel\r\n                                _vmWindow.users = names;\r\n\r\n                                //build userpicker\r\n                                initializeUserPicker(cont.find(\"#userPickerTo\"), _vmWindow, \"recipientToList\");\r\n                                initializeUserPicker(cont.find(\"#userPickerCc\"), _vmWindow, \"recipientCCList\");\r\n\r\n                                //build uploader\r\n                                initializeUploader(cont, _vmWindow);\r\n\r\n                                //build status picker\r\n                                initializeStatusPicker(cont.find(\"#statusPicker\"), _vmWindow);\r\n\r\n                                //init editor\r\n                                buildEditor(cont.find(\"#messageEditor\"), _vmWindow);\r\n\r\n                                $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n                                cont.removeClass('hide');\r\n                                cont.show();\r\n\r\n                                win.open();\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"sendEmail\"\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var tempateDataSource = new kendo.data.DataSource({\r\n                transport: {\r\n                    read: \"/EmailNotification/GetNotificationTemplates\",\r\n                    dataType: \"json\"\r\n                },\r\n                schema: {\r\n                    model: {\r\n                        fields: {\r\n                            Id: { type: \"string\" },\r\n                            Name: { type: \"string\" }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            var addToCommentLog = function (commentMessage,  setAsPrivate) {\r\n                var newActionLog = {\r\n                    EnteredBy: session.user.Name,\r\n                    Title: localization.EMailSent,\r\n                    IsPrivate: setAsPrivate,\r\n                    EnteredDate: new Date().toISOString(),\r\n                    LastModified: new Date().toISOString(),\r\n                    Description: commentMessage,\r\n                    DescriptionDisplay: commentMessage,\r\n                    Image: app.config.iconPath + app.config.icons[\"E-Mail Sent\"], \r\n\t\t            ActionType: {\r\n\t\t                Id: \"15e86d4a-1b55-01be-C9fa-660a3cb3fc26\",\r\n\t\t                Name: \"Email Sent\"\r\n\t\t            }\r\n                    //ActionType: { Id: \"15E86D4A-1B55-01BE-C9FA-660A3CB3FC26\", Name: \"E-Mail Sent\" }\r\n                }\r\n                if (!vm.viewModel.ActionLog) {\r\n                    vm.viewModel.ActionLog = [];\r\n                }\r\n                \r\n                var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                if (actionLogType) {\r\n                    vm.viewModel[actionLogType].push(newActionLog);\r\n                }\r\n            }\r\n\r\n            var saveFailure = function (exceptionMessage) {\r\n                if (exceptionMessage == localization.RequiredFieldsErrorMessage) {\r\n                    app.lib.message.add(exceptionMessage, \"danger\");\r\n                } else {\r\n                    //fallback to generic message\r\n                    app.lib.message.add(localization.PleaseCorrectErrors, \"danger\");\r\n                }\r\n                app.lib.message.show();\r\n            }\r\n\r\n            var getAffectedUserEmail = function (_vmWindow) {\r\n                if (viewModel.RequestedWorkItem && viewModel.RequestedWorkItem.DisplayName != null) {\r\n                    filter['TO'] = vm.viewModel.RequestedWorkItem.DisplayName;\r\n                }\r\n                var affectedUserId = (vm.viewModel.RequestedWorkItem) ? vm.viewModel.RequestedWorkItem.BaseId : \"\";\r\n                $.ajax({\r\n                    url: \"/EmailNotification/GetffectedUserEmail\",\r\n                    type: \"GET\",\r\n                    data: { baseId: affectedUserId },\r\n                    success: function (data, textStatus, jqXHR) {\r\n                        if (!_.isUndefined(data) && data != \"\") {\r\n                            var affectedUser = { Id: vm.viewModel.RequestedWorkItem.BaseId, Name: vm.viewModel.RequestedWorkItem.DisplayName, Email: data };\r\n                            var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                            var isUserExist = picker.dataSource.data().find(function (element) {\r\n                                return element.Id === affectedUser.Id;\r\n                            });\r\n\r\n                            //add affected user to userpicker data source if id does not exist\r\n                            if (!isUserExist) {\r\n                                picker.dataSource.add(affectedUser);\r\n                            }\r\n\r\n                            //add affected user to recipient list\r\n                            recipientList[\"recipientToList\"].push(affectedUser);\r\n\r\n                            //set userpicker value to affected user\r\n                            picker.value(affectedUser.Id);\r\n                        }\r\n                    }\r\n                }); \r\n            }\r\n\r\n            var getRemoteManageRecepient = function () {\r\n                $(document).ready(function() {\r\n                    var recepient = { Id: vm.widget.remoteManageRecepient.BaseId, Name: vm.widget.remoteManageRecepient.DisplayName, Email: vm.widget.remoteManageRecepient.Email };\r\n                    filter['TO'] = recepient.DisplayName;\r\n                    var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                    var isUserExist = picker.dataSource.data().find(function (element) {\r\n                        return element.Id === recepient.Id;\r\n                    });\r\n\r\n                    //add affected user to userpicker data source if id does not exist\r\n                    if (!isUserExist) {\r\n                        picker.dataSource.add(recepient);\r\n                    }\r\n\r\n                    //add affected user to recipient list\r\n                    recipientList[\"recipientToList\"].push(recepient);\r\n\r\n                    //set userpicker value to affected user\r\n                    picker.value(recepient.Id);\r\n                });\r\n            }\r\n\r\n            var setDefaultWIStatus = function (_vmWindow) {\r\n                var enumId = _vmWindow.changeStatusSetting.defaultStatusId;\r\n\r\n                if (enumId == null) {\r\n                    _vmWindow.Status.set(\"Id\", vm.viewModel.Status.Id);\r\n                    _vmWindow.Status.set(\"Name\", vm.viewModel.Status.Name);\r\n                } else {\r\n                    $.ajax({\r\n                        url: \"/api/V3/Enum/GetEnumDisplayName\",\r\n                        type: \"GET\",\r\n                        data: { id: enumId },\r\n                        async: false,\r\n                        success: function (data, textStatus, jqXHR) {\r\n                            _vmWindow.Status.set(\"Id\", enumId);\r\n                            _vmWindow.Status.set(\"Name\", data);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            var validateEmailAddress = function (arrEmail) {\r\n                var invalidEmailAddress = null;\r\n                for (var i in arrEmail) {\r\n                    var email = arrEmail[i].trim();\r\n                    if (email == \"\") continue;\r\n                    if (app.validateEmail(email) == false) {\r\n                        invalidEmailAddress = email;\r\n                        break;\r\n                    }\r\n                }\r\n                return invalidEmailAddress;\r\n            }\r\n\r\n            var initializeUploader = function (cont, _vmWindow) {\r\n                _vmWindow.set(\"sendEmailAttachments\", []);\r\n                _vmWindow.set(\"filesCount\", 0);\r\n\r\n                var fileAction = function (el) {\r\n\r\n                    if (el.hasClass(\"opennewtab\")) {\r\n                        var win = window.open('about:blank');\r\n                        setTimeout(function () { //FireFox seems to require a setTimeout for this to work.\r\n                            win.document.body.appendChild(win.document.createElement('img')).src = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.href = el.closest(\".thumbnail-file\").find(\".thumbnail-img img\")[0].src;\r\n                            win.focus();\r\n                        }, 0);\r\n\r\n                    }\r\n                    else {\r\n                        var dialog = $('.fileattachment-img-modal');\r\n                        var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                        var listView = cont.find(\".fileattachment-list\").data(\"kendoListView\");\r\n                        var item = el.closest(\"[role='option']\");\r\n                        var dataItem = listView.dataSource.getByUid(item.data(\"uid\"));\r\n\r\n\r\n                        if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/) && !el.hasClass(\"download\")) {\r\n                            dialog.kendoDialog({\r\n                                modal: true,\r\n                                title: dataItem.DisplayName,\r\n                                content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" + dataItem.Content.data + \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" + dataItem.DisplayName + \"\\\" /></div>\",\r\n                                animation: {\r\n                                    open: {\r\n                                        effects: \"fade:in\"\r\n                                    }\r\n                                }\r\n                            });\r\n                            $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                            dialog.data(\"kendoDialog\").open();\r\n                        } else {\r\n                            if (dataItem.Content.data && !dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                                var blob = new Blob([dataItem.Content.data]);\r\n                                var url = window.URL.createObjectURL(blob);\r\n                                var fileName = dataItem.DisplayName;\r\n\r\n                                if (navigator.msSaveOrOpenBlob) {\r\n                                    navigator.msSaveOrOpenBlob(blob, fileName);\r\n                                    return;\r\n                                } else if (window.navigator.msSaveBlob) { // for IE browser\r\n                                    window.navigator.msSaveBlob(blob, fileName);\r\n                                    return;\r\n                                }\r\n\r\n                                var a = document.createElement(\"a\");\r\n                                document.body.appendChild(a);\r\n                                a.style = \"display: none\";\r\n\r\n                                a.href = url;\r\n                                a.download = fileName;\r\n                                a.click();\r\n                                window.URL.revokeObjectURL(url);\r\n                                document.body.removeChild(a);\r\n                            } else if (dataItem.BaseId) {\r\n                                if (dataItem.BaseId != null) {\r\n                                    location.href = downloadUrl + dataItem.BaseId;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                cont.find(\".fileattachment-list\").kendoListView({\r\n                    dataSource: _vmWindow.sendEmailAttachments,\r\n                    template: kendo.template(cont.find(\"#fileTemplate\").html()),\r\n                    selectable: \"single\",\r\n                    dataBound: function (e) {\r\n\r\n                        cont.find(\".custom-click\").on(\"click\", function () {\r\n                            fileAction($(this));\r\n                        });\r\n\r\n                        if (!app.isMobile()) {\r\n                            //Remove view image icon if not in mobile.\r\n                            cont.find(\"a[view-image]\").parent().hide();\r\n\r\n                            cont.find(\".thumbnail-img img\").on(\"click\", function () {\r\n                                fileAction($(this));\r\n                            });\r\n                        }\r\n                        \r\n                        /*var dialog = $('.fileattachment-img-modal');\r\n                        var index = this.select().index(),\r\n                        dataItem = this.dataSource.view()[index];\r\n\r\n                        if (dialog.length > 1) {\r\n                            for (var i = 1; i < dialog.length; i++) {\r\n                                if ($(dialog[i]).data(\"kendoDialog\"))\r\n                                    $(dialog[i]).data(\"kendoDialog\").destroy();\r\n                                dialog.eq(i).remove();\r\n                            }\r\n                        }\r\n\r\n                        if (dataItem) {\r\n\r\n                            var dialogs = $('.acivity-popup-window');\r\n                            if (dialogs.length > 1) {\r\n                                for (var i = 1; i < dialogs.length; i++) {\r\n                                    dialogs.eq(i).remove();\r\n                                }\r\n                            }\r\n\r\n                            if (dataItem.DisplayName.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n                                dialog.kendoDialog({\r\n                                    modal: true,\r\n                                    title: dataItem.DisplayName,\r\n                                    content: \"<div class='file-img-container'><img src=\\\"data:image/png;base64,\" +\r\n                                        dataItem.Content.data +\r\n                                        \"\\\" onerror=\\\"this.onerror = null; this.src = '/Content/Images/Icons/FileUpload/document.svg';\\\" alt=\\\"\" +\r\n                                        dataItem.DisplayName +\r\n                                        \"\\\" /></div>\",\r\n                                    animation: {\r\n                                        open: {\r\n                                            effects: \"fade:in\"\r\n                                        }\r\n                                    }\r\n                                });\r\n                                $('.k-window.k-widget').addClass('acivity-popup-window');\r\n                                dialog.data(\"kendoDialog\").open();\r\n                            } else {\r\n                                if (dataItem.Content.data) {\r\n                                    var blob = new Blob([dataItem.Content.data]);\r\n                                    var url = window.URL.createObjectURL(blob);\r\n                                    var fileName = dataItem.DisplayName;\r\n\r\n                                    if (navigator.msSaveOrOpenBlob) {\r\n                                        navigator.msSaveOrOpenBlob(blob, fileName);\r\n                                        return;\r\n                                    } else if (window.navigator.msSaveBlob) { // for IE browser\r\n                                        window.navigator.msSaveBlob(blob, fileName);\r\n                                        return;\r\n                                    }\r\n\r\n                                    var a = document.createElement(\"a\");\r\n                                    document.body.appendChild(a);\r\n                                    a.style = \"display: none\";\r\n\r\n                                    a.href = url;\r\n                                    a.download = fileName;\r\n                                    a.click();\r\n                                    window.URL.revokeObjectURL(url);\r\n                                    document.body.removeChild(a);\r\n                                }else if (dataItem.BaseId) {\r\n                                    var downloadUrl = app.config.rootURL + \"FileAttachment/ViewFile/\";\r\n                                    location.href = downloadUrl + dataItem.BaseId;\r\n                                }\r\n                            }\r\n                        }\r\n                        */\r\n                    },\r\n                    remove: function (e) {\r\n                        //console.warn(_vmWindow)\r\n                    }\r\n                });\r\n\r\n\r\n               \r\n                var uploader = cont.find(\"#email-attachment\").kendoUpload({\r\n                    async: {\r\n                        saveUrl: \"/FileAttachment/UploadAttachment/\" + vm.viewModel.BaseId + \"?className=\" + vm.viewModel.ClassName + \"&count=\" + vm.viewModel.FileAttachment.length,\r\n                        autoUpload: true\r\n                    },\r\n                    success: function (e) {\r\n                        kendo.ui.progress(cont.find(\".fileattachment-list\"), true);\r\n                        var response = e.response;\r\n                        if (e.operation == \"upload\") {\r\n                            for (var i = 0; i < e.files.length; i++) {\r\n                                var file = e.files[i].rawFile;\r\n                                if (file) {\r\n                                    if (!_.isUndefined(response.FileAttachment)) {\r\n                                        _vmWindow.sendEmailAttachments.push(response.FileAttachment);\r\n                                        _vmWindow.set(\"attachmentErrorMessage\", \"\");\r\n                                        _vmWindow.set(\"okEnabled\", true);\r\n                                    } else if (!_.isUndefined(response.success) && response.success == false) {\r\n                                        _vmWindow.set(\"okEnabled\", false);\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.ErrorDescription,\r\n                                            message: response.message,\r\n                                            icon: \"fa fa-exclamation\"\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        kendo.ui.progress(cont.find(\".fileattachment-list\"), false);\r\n                    },\r\n                    error: function (e) {\r\n                        var err = $.parseJSON(e.XMLHttpRequest.responseText);\r\n                        $.map(e.files, function (file) {\r\n                            console.warn(\"Could not upload \" + file.name);\r\n                        });\r\n                    },\r\n                    showFileList: false,\r\n                    dropZone: \".drop-zone-element\"\r\n                }).data(\"kendoUpload\");\r\n              \r\n                cont.find(\".browse-file\").click(function (e) {\r\n                    $(\"#email-attachment\").trigger(\"click\");\r\n                });\r\n\r\n\r\n            }\r\n\r\n            var initializeUserPicker = function (targetEle, viewModel, targetProp) {\r\n                //skipped initialization if we already have one created\r\n                if (!_.isUndefined(targetEle.data(\"kendoMultiSelect\"))) { return; }\r\n\r\n                var targetKey = (targetEle[0].id.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                var userPicker = targetEle.kendoMultiSelect({\r\n                    placeholder: localization.Search,\r\n                    dataTextField: \"Name\",\r\n                    dataValueField: \"Id\",\r\n                    autoBind: false,\r\n                    filter: \"contains\",\r\n                    dataSource: new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: \"/api/V3/User/GetUserListWithEmail\",\r\n                                data: {\r\n                                    filterByAnalyst: false,\r\n                                    maxNumberOfResults: 10,\r\n                                    userFilter: function () {\r\n                                        return (filter[targetKey]) ? filter[targetKey] : \"\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        serverFiltering: true //,\r\n                        // filter: [{ field: \"Email\", operator: \"neq\", value: \"\" }]\r\n                    }),\r\n                    filtering: function (e) {\r\n                        if (e.filter != undefined) {\r\n                            var key = (e.sender.element[0].id.toLowerCase().indexOf(\"to\") > -1) ? \"TO\" : \"CC\";\r\n                            filter[key] = e.filter.value;\r\n                        }\r\n                    },\r\n                    open: function () {\r\n                        var filters = this.dataSource.filter();\r\n                        if (filters!=null) {\r\n                            //clear applied filters\r\n                            //Filter should be cleared to remove conflict with assigning the affected users.\r\n                            //this.dataSource.filter({});\r\n                        }\r\n                    },\r\n                    tagTemplate: \"<span title='#: data.Email #'>#: data.Name #;</span>\",\r\n                    select: function (e) {\r\n                        var currentList = recipientList[targetProp];\r\n                        currentList.push(e.dataItem);\r\n                        recipientList[targetProp] = currentList;\r\n                    },\r\n                    deselect: function (e) {\r\n                        var currentList = recipientList[targetProp];\r\n                        if (e.dataItem.Id) {\r\n                            currentList = _.filter(currentList,\r\n                                function(item) {\r\n                                    return item.Id !== e.dataItem.Id;\r\n                                });\r\n                        }\r\n                        recipientList[targetProp] = currentList;\r\n                    },\r\n                    clearButton: false\r\n                }).data(\"kendoMultiSelect\");\r\n              \r\n                userPicker.input.on(\"keydown\", function (e) {\r\n                    if (e.keyCode === 9) {\r\n                        //treat tab event as \"enter\"\r\n                        var e = jQuery.Event(\"keydown\");\r\n                        e.which = 13; // # Some key code value\r\n                        e.keyCode = 13;\r\n                        userPicker.input.trigger(e);\r\n                    }\r\n                });\r\n            }\r\n\r\n            var sendEmail = function (_vmWindow, cont) {\r\n                var bChangeStatus = _vmWindow.changeStatus;\r\n                var bAddActionLog = _vmWindow.addToLog;\r\n                var addToLogSkipped = false;\r\n                var bHasAttachment = (_vmWindow.sendEmailAttachments.length > 0);\r\n                var strAttachedFileNames = (_vmWindow.sendEmailAttachments.length > 0)\r\n                    ? _.pluck(_vmWindow.sendEmailAttachments, \"DisplayName\").join(',') : \"\"; //multiple filenames, comma delimited\r\n                var strMessage = encodeURIComponent(_vmWindow.emailHTMLMessage);\r\n                var strMessagePlain = _vmWindow.emailTextMessage;\r\n\r\n                var workItemFileIds = (_vmWindow.fromWorkItemAttachementsId.length > 0)\r\n                    ? _vmWindow.fromWorkItemAttachementsId.join(',') : \"\";\r\n\r\n\r\n                strMessage = (session.emailFooterTemplate.length > 0)\r\n                    ? strMessage + \"\\r\\n\" + encodeURIComponent($('<div/>').html(session.emailFooterTemplate).text())\r\n                    : strMessage;\r\n                \r\n                var emailData = {\r\n                    To: _vmWindow.emailTo,\r\n                    Cc: _vmWindow.emailCC,\r\n                    Subject: _vmWindow.emailSubject.replace(/</g, \"%3C\").replace(/>/g, \"%3E\"),\r\n                    Message: strMessage,\r\n                    AttachedFileNames: strAttachedFileNames,\r\n                    WorkItemId: vm.viewModel.BaseId,\r\n                    workItemFileIds: workItemFileIds\r\n                };\r\n                var sendEmailAttachments = _vmWindow.sendEmailAttachments;\r\n                var bSetFirstResponsDate = _vmWindow.setFirstResponseDate;\r\n                \r\n                $.ajax({\r\n                    url: \"/EmailNotification/SendEmailNotification\",\r\n                    type: \"POST\",\r\n                    data: emailData,\r\n                    success: function (data, textStatus, jqXHR) {\r\n                        var bSuccess = data.toLowerCase() == \"true\" ? true : false;\r\n                        kendo.ui.progress(cont, false);\r\n                        if (bSuccess) {\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.SendEmail,\r\n                                message: localization.SendEmailSuccessMessage\r\n                            })).done(function (response) {\r\n                                //change status if status in dropdown has value\r\n                                if (_vmWindow.Status != null && _vmWindow.Status.Id != \"\") {\r\n                                    vm.viewModel.Status.set(\"Id\", _vmWindow.Status.Id);\r\n                                    bChangeStatus = true;\r\n                                }\r\n\r\n                                if (bHasAttachment) {\r\n                                    //add file attachment details to vm after email is sent\r\n                                    if (!_.isUndefined(vm.viewModel.FileAttachment)) {\r\n                                        _.each(sendEmailAttachments, function (item) {\r\n                                            vm.viewModel.FileAttachment.push(item);\r\n\r\n                                            var actionLogType = app.controls.getWorkItemLogType(vm.viewModel);\r\n                                            if (actionLogType) {\r\n                                                vm.viewModel[actionLogType].unshift(new app.dataModels[actionLogType].fileAdded(item.DisplayName));\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (bAddActionLog) {\r\n                                    strMessagePlain = _.isUndefined(strMessagePlain) ? \"\" : strMessagePlain.substring(0, 4000);\r\n\r\n                                    if (strMessagePlain.length > 0) {\r\n                                        addToCommentLog(strMessagePlain.replace(/</g, '&lt;').replace(/>/g, '&gt;'), _vmWindow.setAsPrivate);\r\n                                    } else {\r\n                                        bAddActionLog = false;\r\n                                        addToLogSkipped = true;\r\n                                    }\r\n                                }\r\n\r\n                                if (bSetFirstResponsDate) {\r\n                                    vm.viewModel.set(\"FirstResponseDate\", new Date().toISOString());\r\n                                }\r\n\r\n                                //--end additional change checks/processing\r\n\r\n                                //save changes and show warnings, if any\r\n                                var handleSaveSuccess = function () {\r\n                                    vm.save(function () {\r\n                                        app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                        switch (vm.type) {\r\n                                        case \"ChangeRequest\":\r\n                                            location.href = \"/ChangeRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"ServiceRequest\":\r\n                                            location.href = \"/ServiceRequest/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"Incident\":\r\n                                            location.href = \"/Incident/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"Problem\":\r\n                                            location.href = \"/Problem/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        case \"ReleaseRecord\":\r\n                                            location.href = \"/ReleaseRecord/Edit/\" + vm.viewModel.Id + \"/\";\r\n                                            break;\r\n                                        default:\r\n                                            //my workitem view\r\n                                            location.href = \"/View/cca5abda-6803-4833-accd-d59a43e2d2cf/\";\r\n                                            break;\r\n                                        }\r\n                                    }, saveFailure);\r\n                                }\r\n                                if (addToLogSkipped) {\r\n                                    //note: addToLogSkipped dialog will only show if the empty message validation fails\r\n                                    $.when(kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.SkippedAddingLogEntryTitle,\r\n                                        message: localization.ErrorAddingLogEntryMessage,\r\n                                        icon: \"fa fa-warning\"\r\n                                    })).done(function() {\r\n                                        handleSaveSuccess();\r\n                                    });\r\n                                } else {\r\n                                    handleSaveSuccess();\r\n                                }\r\n                                //--end save changes and warnings\r\n                            });\r\n                        } else {\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.SendEmail,\r\n                                message: localization.SendEmailFailedMessage\r\n                            }));\r\n                            kendo.ui.progress(cont, false);\r\n                        }\r\n                    },\r\n                    error: function (jqXHR, textStatus, errorThrown) {\r\n                        console.log(jqXHR, textStatus, errorThrown)\r\n                    }\r\n                });\r\n            }\r\n\r\n            var buildEditor = function (targetEle, _vmWindow) {\r\n                var defaultTools = [\r\n                     \"bold\", \"italic\", \"underline\",\r\n                     \"formatting\", \"foreColor\", \"backColor\",\r\n                     \"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\",\r\n                     \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                     \"createLink\", \"unlink\", \"insertImage\",\r\n                     \"viewHtml\",\r\n                     \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                     { name: \"insertLineBreak\", shift: true },\r\n                     { name: \"insertParagraph\", shift: true }\r\n                ];\r\n                var mobileTools = [\r\n                    \"formatting\",\r\n                    \"createLink\", \"unlink\", \"insertImage\", \"viewHtml\",\r\n                    \"bold\", \"italic\", \"underline\",\r\n                    \"insertUnorderedList\", \"insertOrderedList\", \"indent\", \"outdent\",\r\n                    \"createTable\", \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\",\r\n                    { name: \"insertLineBreak\", shift: true },\r\n                    { name: \"insertParagraph\", shift: true }\r\n                ];\r\n                var editor = targetEle.data(\"kendoEditor\");\r\n                if (!_.isUndefined(editor)) { return; }\r\n                editor = targetEle.kendoEditor({\r\n                    change: function (e) {\r\n                        var content = e.sender.body.innerText || e.sender.body.textContent;\r\n                        _vmWindow.set(\"emailTextMessage\", content);\r\n                    },\r\n                    tools: app.isMobileDevice() ? mobileTools : defaultTools,\r\n                    stylesheets: [\"/Content/Styles/cireson.mentions-in-keditor.min.css\"],\r\n                    encoded: true,\r\n                    paste: function (e) {\r\n                    },\r\n                    pasteCleanup: {\r\n                        custom: function (html) {\r\n\r\n                            try {\r\n                                if ($(html)[0].tagName === \"IMG\") {\r\n\r\n                                    var dataSRC = $(html).attr('src');\r\n                                    var blob;\r\n\r\n                                    if (dataSRC.match(/^data:image\\/(png|jpg);base64,/) === null) {\r\n                                        var img = new Image;\r\n\r\n                                        img.setAttribute('crossOrigin', 'anonymous');\r\n\r\n                                        img.src = dataSRC;\r\n\r\n                                        $(img).one(\"load\",\r\n                                            function () {\r\n                                                setTimeout(function () {\r\n                                                        dataSRC = getBase64Image(img);\r\n                                                        blob = dataURItoBlob(dataSRC);\r\n                                                        uploadPastedImage(blob, _vmWindow);\r\n                                                    },\r\n                                                    0);\r\n                                            }).each(function () {\r\n                                            if (this.complete) $(this).load();\r\n                                        });\r\n                                    } else {\r\n                                        blob = dataURItoBlob(dataSRC);\r\n                                        uploadPastedImage(blob, _vmWindow);\r\n                                    }\r\n                                }\r\n                            } catch (err) {\r\n                                //console.error(err);\r\n                            }\r\n\r\n                            return html;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                function uploadPastedImage(file, _vmWindow) {\r\n                    var d = new Date();\r\n                    var timestamp = d.getTime();\r\n\r\n                    var formData = new FormData();\r\n                    formData.append('files', file, \"screenshot_\" + timestamp + \".png\");\r\n\r\n                    $.ajax({\r\n                        url: \"/FileAttachment/UploadAttachment/\" +\r\n                            vm.viewModel.BaseId +\r\n                            \"?className=\" +\r\n                            vm.viewModel.ClassName +\r\n                            \"&count=\" +\r\n                            vm.viewModel.FileAttachment.length,\r\n                        data: formData,\r\n                        type: 'POST',\r\n                        async: true,\r\n                        contentType: false,\r\n                        processData: false,\r\n                        dataType: \"json\",\r\n                        success: function (response) {\r\n                            if (!_.isUndefined(response.FileAttachment)) {\r\n                                _vmWindow.sendEmailAttachments.push(response.FileAttachment);\r\n                                _vmWindow.set(\"attachmentErrorMessage\", \"\");\r\n                                _vmWindow.set(\"okEnabled\", true);\r\n                            } else {\r\n                                _vmWindow.set(\"attachmentErrorMessage\", response.message);\r\n                                _vmWindow.set(\"okEnabled\", false);\r\n                                _vmWindow.set(\"emailAttachment\", \"\");\r\n                            }\r\n                        },\r\n                        error: function(err) {\r\n                            console.warn(err);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                function getBase64Image(img) {\r\n                    // Create an empty canvas element\r\n                    var canvas = document.createElement(\"canvas\");\r\n                    canvas.width = img.width;\r\n                    canvas.height = img.height;\r\n                    // Copy the image contents to the canvas\r\n                    var ctx = canvas.getContext(\"2d\");\r\n                    ctx.drawImage(img, 0, 0);\r\n                    // Get the data-URL formatted image\r\n                    // Firefox supports PNG and JPEG. You could check img.src to\r\n                    // guess the original format, but be aware the using \"image/jpg\"\r\n                    // will re-encode the image.\r\n                    var dataURL = canvas.toDataURL(\"image/png\");\r\n                    return dataURL;\r\n                }\r\n\r\n                function dataURItoBlob(dataURI) {\r\n                    // convert base64 to raw binary data held in a string\r\n                    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n                    var byteString = atob(dataURI.split(',')[1]);\r\n\r\n                    // separate out the mime component\r\n                    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\r\n\r\n                    // write the bytes of the string to an ArrayBuffer\r\n                    var ab = new ArrayBuffer(byteString.length);\r\n\r\n                    // create a view into the buffer\r\n                    var ia = new Uint8Array(ab);\r\n\r\n                    // set the bytes of the buffer to the correct values\r\n                    for (var i = 0; i < byteString.length; i++) {\r\n                        ia[i] = byteString.charCodeAt(i);\r\n                    }\r\n\r\n                    // write the ArrayBuffer to a blob, and you're done\r\n                    var blob = new Blob([ab], { type: mimeString });\r\n                    return blob;\r\n\r\n                }\r\n\r\n\r\n                var at_config = {\r\n                    at: \"@\",\r\n                    data: _vmWindow.users,\r\n                    headerTpl: '<div class=\"atwho-header\">Search Users</div>',\r\n                    insertTpl: '${atwho-at}${name}',\r\n                    displayTpl: \"<li id='${guid}'> ${name} <br><span>${email}</span> </li>\",\r\n                    limit: 5,\r\n                    startWithSpace: false,\r\n                    editableAtwhoQueryAttrs: {}\r\n                }\r\n\r\n                var iframe = editor.prev()[0];\r\n                var innerDoc = iframe.contentDocument || iframe.contentWindow.document;\r\n\r\n                $inputor = $(innerDoc).find('body').atwho(at_config);\r\n                $inputor.caret('pos', 47);\r\n                $inputor.atwho('run');\r\n\r\n                $inputor.on(\"inserted.atwho\", function (event, $li) {\r\n                    var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                    var userId = $($li)[0].id;\r\n                    var user = _.filter(at_config.data,\r\n                        function (el) {\r\n                            return el.guid === userId;\r\n                        });\r\n\r\n                    if (!_.isUndefined(user[0]) && !_.isNull(user[0])) {\r\n                        var userData = { Id: user[0].guid, Name: user[0].name, Email: user[0].email }\r\n                        recipientList[\"recipientToList\"].push(userData);\r\n\r\n                        var isUserExist = picker.dataSource.data().find(function (element) {\r\n                            return element.Id === userData.Id;\r\n                        });\r\n\r\n                        //add at-mentioned user to userpicker data source if id does not exist\r\n                        if (!isUserExist) {\r\n                            picker.dataSource.add(userData);\r\n                        }\r\n                    }\r\n\r\n                    picker.value(_.pluck(recipientList[\"recipientToList\"], \"Id\"));\r\n                });\r\n\r\n                $(document).on(\"removed.atwho\", function (e) {\r\n                    var picker = $(\"#userPickerTo\").data(\"kendoMultiSelect\");\r\n                    if ($(iframe).is($(e.target.activeElement))) {\r\n                        var userId = e.removedAtWhoId;\r\n                        var newList = _.without(recipientList[\"recipientToList\"], _.findWhere(recipientList[\"recipientToList\"], {\r\n                            Id: userId\r\n                        }));\r\n                        recipientList[\"recipientToList\"] = newList;\r\n                        picker.value(_.pluck(recipientList[\"recipientToList\"], \"Id\"));\r\n                    }\r\n                });\r\n            }\r\n\r\n            var initializeStatusPicker = function (targetEle, viewModel) {\r\n                var filterIdParam = \"\";\r\n                var filterId = viewModel.changeStatusSetting.rootStatusEnumId;\r\n                if (filterId != null) {\r\n                    if (filterId.toLowerCase() == viewModel.Status.Id.toLowerCase()) {\r\n                        filterIdParam = filterId;\r\n                    } else {\r\n                        filterIdParam = filterId + \",\" + viewModel.Status.Id;\r\n                    }\r\n                }\r\n                var enumId = viewModel.changeStatusSetting.statusTypeId;\r\n\r\n                var statusProperties = {\r\n                    PropertyName: \"Status\",\r\n                    PropertyDisplayName: \"ChangeStatus\",\r\n                    EnumId: viewModel.changeStatusSetting.statusTypeId,\r\n                    FilterIds: filterIdParam,\r\n                    Disabled: !viewModel.changeStatusSetting.enableChangeStatus\r\n                };\r\n\r\n                buildEnumPicker(targetEle, statusProperties, viewModel);\r\n            };\r\n\r\n            var buildEnumPicker = function (container, props, vmModel) {\r\n                enumPickerControl.build(vmModel, props, function (enumControl) {\r\n                    container.html(enumControl);\r\n                    app.controls.apply(container, {\r\n                        localize: true,\r\n                        vm: vmModel,\r\n                        bind: true\r\n                    });\r\n                });\r\n            };\r\n           \r\n            var applyChangeStatus = function (cont, vm, _vmWindow) {\r\n                var selectedWiType = vm.type;\r\n                var currentStatusId = vm.viewModel.Status.Id;\r\n                var statusEnumId = _vmWindow.changeStatusSetting.statusTypeId;\r\n                var rootStatusEnumId = _vmWindow.changeStatusSetting.rootStatusEnumId;\r\n                var dropDownControl = cont.find('div[data-role=\"Status\"]').data().handler._dropdown;\r\n                var treeControl = cont.find('div[data-role=\"Status\"]').data().handler._treeview;\r\n\r\n                //determine allowed status changes based on current type and status\r\n                var changeRules = app.lib.getChangeStatusRules();\r\n                var changeRulesFilter = changeRules[selectedWiType][currentStatusId];\r\n\r\n                //since Incident can have custom enums we need to check here if no rules were set then its not resolved\r\n                if (selectedWiType == \"Incident\" && _.isUndefined(changeRulesFilter)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"neq\", value: app.constants.workItemStatuses.Incident.Closed };\r\n                }\r\n\r\n                if (!_.isNull(rootStatusEnumId)) {\r\n                    changeRulesFilter = { field: \"Id\", operator: \"eq\", value: rootStatusEnumId };\r\n                }\r\n\r\n                //apply allowed status filtering\r\n                treeControl.dataSource.options.serverFiltering = false;\r\n                treeControl.dataSource.filter(changeRulesFilter);\r\n\r\n                //reassign dropdown datasource with filtered data so that users will not be able to access restricted status by typing\r\n                $.get(\"/api/V3/Enum/GetFlatList/\", { id: statusEnumId, itemFilter: \"\" }, function (data) {\r\n                    var comboDataSource = new kendo.data.DataSource();\r\n                    comboDataSource.data(data);\r\n                    comboDataSource.filter(changeRulesFilter);\r\n                    if (comboDataSource.view().length > 0) {\r\n                        dropDownControl.setDataSource(comboDataSource.view());\r\n                    }\r\n                });\r\n            };\r\n           \r\n            var getSendEmailChangeStatusSettings = function (viewModel) {\r\n                switch (vm.type) {\r\n                    case \"ServiceRequest\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ServiceRequest.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailServiceRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailServiceDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailServiceAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"ChangeRequest\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ChangeRequest.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailChangeRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailChangeDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailChangeAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"Problem\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.Problem.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailProblemRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailProblemDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailProblemAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"ReleaseRecord\":\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.ReleaseRecord.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailReleaseRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailReleaseDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailReleaseAllowAnalystToChangeStatus;\r\n                        break;\r\n                    case \"Incident\":\r\n                    default:\r\n                        viewModel.changeStatusSetting.statusTypeId = app.constants.workItemStatuses.Incident.Id;\r\n                        viewModel.changeStatusSetting.rootStatusEnumId = session.consoleSetting.SendEmailIncidentRootStatusEnum;\r\n                        viewModel.changeStatusSetting.defaultStatusId = session.consoleSetting.SendEmailIncidentDefaultStatusEnum;\r\n                        viewModel.changeStatusSetting.enableChangeStatus = session.consoleSetting.SendEmailIncidentAllowAnalystToChangeStatus;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nCustom\r\n**/\r\n\r\ndefine('forms/tasks/custom/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            if (_.isNull(node.Label)) {\r\n                //if no label (achot no link, just call the function)\r\n                node.Configs.func(vm, vm.viewModel);\r\n\r\n            } else {\r\n                //first add the anchor\r\n                var link = _.template(anchor);\r\n\r\n                //make sure we have all the node set\r\n                var properties = {\r\n                    Target: \"customFunc\"\r\n                };\r\n\r\n                $.extend(true, properties, node);\r\n\r\n                //create view model \r\n                var viewModel = kendo.observable({\r\n                    //call custom defined function\r\n                    customFunc: function () {\r\n                        node.Configs.func(vm, vm.viewModel);\r\n                    }\r\n                });\r\n\r\n                var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel });\r\n                callback(anchorElm.render());\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/spacer/view.html',[],function () { return '<div class=\"form-group\">\\r\\n\\r\\n</div>';});\n\n","/**\r\nSPACER\r\n**/\r\n\r\ndefine('forms/tasks/spacer/controller',['require','text!forms/tasks/spacer/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/tasks/spacer/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/associateItem/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    $(\"input[name='\" + node.Configs.relationshipKey + \"']\").parent().find(\".searchIcon\").click();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            \r\n\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/setDate/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"datePicker\"/>\\r\\n            <div id=\"disposalReference\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!forms/fields/date/view.html',[],function () { return '<div class=\"form-group\"\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n    >\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input name=\"<%= PropertyName %>\"\\r\\n           data-control=\"datePicker\"\\r\\n           data-control-bind=\"<%= PropertyName %>\"\\r\\n           data-control-from=\"<%= FromFilter %>\"\\r\\n           data-control-to=\"<%= ToFilter %>\"\\r\\n           data-control-from-relative=\"<%= FromRelative %>\"\\r\\n           data-control-to-relative=\"<%= ToRelative %>\"\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n     />\\r\\n</div>';});\n\n","/**\r\nDate\r\n**/\r\n\r\ndefine('forms/fields/date/controller',['require','text!forms/fields/date/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/date/view.html\");\r\n\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                FromFilter: '',\r\n                ToFilter: '',\r\n                FromRelative: '',\r\n                ToRelative: '',\r\n                Disabled: node.disabled,\r\n                Required: node.Required\r\n            };\r\n\r\n            //set from filter\r\n            if (node.MinValue != undefined) {\r\n                if (node.MinValue.indexOf(\":\") != -1) {\r\n                    properties.FromRelative = node.MinValue;\r\n                } else if (typeof node.MinValue == \"string\") {\r\n                    properties.FromFilter = node.MinValue;\r\n                }\r\n            }\r\n\r\n            //set to filter\r\n            if (node.MaxValue != undefined) {\r\n                if (node.MaxValue.indexOf(\":\") != -1) {\r\n                    properties.ToRelative = node.MaxValue;\r\n                } else if (typeof node.MaxValue == \"string\") {\r\n                    properties.ToFilter = node.MaxValue;\r\n                }\r\n            }\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/fields/string/view.html',[],function () { return '<div class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"text\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"k-textbox form-control input-sm\"\\r\\n           data-bind=\"value: <%= PropertyName %><% if ( LimitLength ){ %>, events : { blur: view.stringController.CheckLength }<% } %>\"\\r\\n\\r\\n\\r\\n    <% if ( LimitLength ){ %>\\r\\n    maxlength=\"<%= MaxLength %>\"\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Disabled ){ %>\\r\\n    disabled\\r\\n    <% } %>\\r\\n\\r\\n    <% if ( Required ){ %>\\r\\n    required\\r\\n    <% } %>\\r\\n\\r\\n    />\\r\\n\\r\\n    <% if ( LimitLength ){ %>\\r\\n    <p class=\"help-block validation-summary-errors\" style=\"display: none;\"><%= localization.MaxLengthError.replace(\"{0}\", MaxLength) %></p>\\r\\n    <% } %>\\r\\n\\r\\n</div>';});\n\n","/**\r\nSTRING\r\n**/\r\n\r\ndefine('forms/fields/string/controller',['require','text!forms/fields/string/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/string/view.html\");\r\n\r\n\r\n    var definition = {\r\n\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            \r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.stringController = {\r\n                CheckLength: function CheckLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n\r\n            vm.view.buildStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength\r\n                };\r\n                $.extend(true, properties, node);\r\n                \r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\r\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/setDate/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/setDate/view.html','forms/fields/date/controller','forms/fields/string/controller','forms/fields/longstring/controller','forms/fields/boolean/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/setDate/view.html\");\r\n    var datePicker = require(\"forms/fields/date/controller\");\r\n    var stringArea = require(\"forms/fields/string/controller\");\r\n    var txtArea = require(\"forms/fields/longstring/controller\");\r\n    var checkBox = require(\"forms/fields/boolean/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = node.Configs.Title;//localization.ChangeStatusTask;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n            var datePickerCtrl;\r\n            var checkboxCtrl;\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            switch(node.Configs.viewType){\r\n                                case \"hdDisposal\":\r\n                                    vm.viewModel.set(\"HardwareAssetStatus\", { Id: \"020822bd-7d3a-4c0f-1be4-325ef1aa52b4\", Name: localization.Disposed });\r\n                                    break;\r\n                                case \"hdREcieveDate\":\r\n                                case \"MasterContractRenewedOn\":\r\n                                    if (vm.viewModel.get(checkboxCtrl.attr(\"name\"))) {\r\n                                        datePickerCtrl.val(\"\").blur();\r\n\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            var cancelledDate = \"\";\r\n                            if (!_.isNull(originalDate)) {\r\n                                cancelledDate = kendo.toString(new Date(originalDate), \"g\");\r\n                            }\r\n                            $('[name=\"' + dateProperties.PropertyName + '\"]').val(cancelledDate).blur();\r\n                            if (node.Configs.viewType == \"hdDisposal\") {\r\n                                vm.viewModel.set(\"DisposalReference\", OriginalDisposalReference);\r\n                            } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                                vm.viewModel.recieveCheckbox = OriginalCheckBox;\r\n                            }\r\n                            else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                                vm.viewModel.masterContractStartingDateCheckbox = OriginalCheckBox;\r\n                            }\r\n\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    if (node.Configs.viewType == \"hdDisposal\") {\r\n                        dateLabel = localization.DisposalDate;\r\n                    } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                        dateLabel = localization.ReceiveDate;\r\n                    } else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                        dateLabel = localization.StartDate;\r\n                    }\r\n\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n                    \r\n                    //create status enumPicker\r\n                    \r\n                    var originalDate = vm.viewModel.get(node.Configs.propertyKey);\r\n                    var dateProperties = {\r\n                        PropertyName: node.Configs.propertyKey,\r\n                        PropertyDisplayName: dateLabel,\r\n                        vm: vm.viewModel,\r\n                        disabled:false\r\n                    };\r\n                    \r\n                    buildDatePicker(cont.find('#datePicker'), dateProperties, vm.viewModel);\r\n\r\n                    if (node.Configs.viewType == \"hdDisposal\") {\r\n                        var OriginalDisposalReference = vm.viewModel.get(\"DisposalReference\");\r\n                        var stringProperties = {\r\n                            PropertyName: \"DisposalReference\",\r\n                            PropertyDisplayName: localization.DisposalReference,\r\n                            vm: vm.viewModel\r\n                        };\r\n                        buildString(cont.find(\"#disposalReference\"), stringProperties, vm.viewModel);\r\n                    } else if (node.Configs.viewType == \"hdREcieveDate\") {\r\n                        var OriginalCheckBox = vm.viewModel.recieveCheckbox;\r\n                        var properties = {\r\n                            PropertyName: \"recieveCheckbox\",\r\n                            PropertyDisplayName: localization.RemoveReceivedDate,\r\n                            Inline: true\r\n                        };\r\n                        buildCheckbox(cont.find(\"#disposalReference\"), properties, vm.viewModel);\r\n                    } else if (node.Configs.viewType == \"MasterContractRenewedOn\") {\r\n                        var OriginalCheckBox = vm.viewModel.masterContractStartingDateCheckbox;\r\n                        var properties = {\r\n                            PropertyName: \"masterContractStartingDateCheckbox\",\r\n                            PropertyDisplayName: localization.RemoveMasterLeaseWarrantyStarts,\r\n                            Inline: true\r\n                        };\r\n                        buildCheckbox(cont.find(\"#disposalReference\"), properties, vm.viewModel);\r\n                    }\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            //more functions\r\n            var buildDatePicker = function (container, props, vmModel) {\r\n                if (_.isNull(vmModel[props.PropertyName]) || vmModel[props.PropertyName] == \"\") {\r\n                    vmModel.set(props.PropertyName, kendo.toString(new Date(), \"g\"));\r\n                } else {\r\n                    vmModel.set(props.PropertyName, kendo.toString(new Date(vmModel[props.PropertyName]), \"g\"));\r\n                }\r\n                \r\n                datePicker.build(vmModel, props, function (dateControl) {\r\n                    container.html(dateControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                    datePickerCtrl = container.find(\"input[name='\" + props.PropertyName + \"']\");\r\n\r\n                    //will make sure date will reflect back to the main control from the form\r\n                    datePickerCtrl.focus();\r\n                    datePickerCtrl.blur();\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildCheckbox = function (container, props, vmModel) {\r\n                checkBox.build(vmModel, props, function (checkboxControl) {\r\n                    container.html(checkboxControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                    checkboxCtrl = container.find(\"input[name='\" + props.PropertyName + \"']\");\r\n                    vm.viewModel.set(props.PropertyName,false);\r\n                    checkboxCtrl.click(function () {\r\n                        var dtm = datePickerCtrl.data(\"kendoDatePicker\");\r\n                        if (this.checked) {\r\n                            dtm.enable(false);\r\n                        } else {\r\n                            dtm.enable(true);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nupdate Asset Management\r\n**/\r\n\r\n\r\ndefine('forms/tasks/updateAssetManagement/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n\r\n            var onloadTaskTrigger = function () {\r\n                switch (node.Configs.type) {\r\n                    case \"WarrantyContract\":\r\n                    case \"SupportAndMaintenance\":\r\n                    case \"ContractLease\":\r\n                        CommonContract.UpdateStatus(vm.viewModel,true);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            onloadTaskTrigger();\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    switch (node.Configs.type) {\r\n                        case \"License\":\r\n                            pageForm.SetSeatsRemaining(pageForm.viewModel);\r\n                            break;\r\n                        case \"SoftwareAsset\":\r\n                            UpdateSoftwareAsset(vm.viewModel);\r\n                            break;\r\n                        case \"Consumables\":\r\n                            UpdateConsumable(vm.viewModel);\r\n                            break;\r\n                        default:\r\n                            CommonContract.SupersedesParent(vm.viewModel);\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            \r\n            \r\n\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n            var UpdateConsumable = function (vmModel) {\r\n                if (vmModel.CountAssignedConsumableUsers || vmModel.CountAssignedConsumableAssets) {\r\n                    var assignedCount = 0;\r\n                    if (!_.isNull(vmModel.Target_ConsumableHasAssignedUsers) && vmModel.CountAssignedConsumableUsers) {\r\n                        assignedCount += vmModel.Target_ConsumableHasAssignedUsers.length;\r\n                    }\r\n                    if (!_.isNull(vmModel.Target_ConsumableHasAssignedAssets) && vmModel.CountAssignedConsumableAssets) {\r\n                        assignedCount += vmModel.Target_ConsumableHasAssignedAssets.length;\r\n                    }\r\n                    vmModel.set(\"AssignedCount\", assignedCount);\r\n                }\r\n            }\r\n\r\n            var UpdateSoftwareAsset = function (vmModel) {\r\n\r\n                $.when(kendo.ui.ExtYesNoDialog.show({\r\n                    title: localization.CiresonAssetManagement,\r\n                    message: localization.SoftwareAssetUpdateConfirmationMsg\r\n                })).done(function (response) {\r\n                    if (response.button === \"yes\") {\r\n                        vmModel.save(function (isOk, postData) {\r\n                            if (isOk == true) {\r\n                                $.ajax({\r\n                                    type: 'POST',\r\n                                    dataType: 'json',\r\n                                    url: \"/AssetManagement/SoftwareAsset/UpdateSoftwareAsset/\",\r\n                                    data: \"formJson=\" + postData + \"&id=\" + vmModel.BaseId,\r\n                                    success: function (data, status, xhr) {\r\n                                        if (data.Success == true) {\r\n                                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                                title: localization.CiresonAssetManagement,\r\n                                                message: localization.SoftwareAssetUpdated\r\n                                            })).done(function (response) {\r\n                                                vmModel.set(\"isDirty\", false);\r\n                                                app.lib.message.add(localization.ChangesApplied, \"success\");\r\n                                                window.location.reload(true);\r\n                                            });;\r\n                                        } else {\r\n                                            kendo.ui.ExtAlertDialog.show({\r\n                                                title: localization.CiresonAssetManagement,\r\n                                                message: localization.ErrorOccured\r\n                                            });\r\n                                        }\r\n                                    },\r\n                                    error: function (xhr, ajaxOptions, thrownError) {\r\n                                        failure();\r\n                                        console && app.lib.log(localization.RequestFailed);\r\n                                        app.lib.log(thrownError);\r\n\r\n                                        var jsonRsp = xhr.responseText;\r\n                                        app.lib.log(jsonRsp);\r\n\r\n                                        var errorMsg = localization.RequestFailed;\r\n                                        if (jsonRsp.exception && jsonRsp.exception.length > 0) {\r\n                                            errorMsg = jsonRsp.exception;\r\n                                        }\r\n\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.ErrorDescription,\r\n                                            message: errorMsg,\r\n                                            icon: \"fa fa-exclamation\"\r\n                                        });\r\n                                    },\r\n                                    processData: false,\r\n                                    async: false\r\n                                });\r\n\r\n                            \r\n                            }\r\n\r\n                        }, vmModel.saveFailure, true);\r\n                    }\r\n                });\r\n            }\r\n\r\n            \r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    return definition;\r\n\r\n});\r\n\r\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/updateSupersededHardware/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n\r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            var viewModel = kendo.observable({\r\n                changeStatus: function () {\r\n                    $.when(kendo.ui.ExtYesNoDialog.show({\r\n                        title: localization.CiresonAssetManagement,\r\n                        message: localization.UpdateSupersedesConfirmation\r\n                    })).done(function (response) {\r\n                        if (response.button === \"yes\") {\r\n                            $.post(node.Configs.url, { baseId: node.Configs.baseId }, function (data) {\r\n                                if (data.success === true) {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.UpdatingAssets,\r\n                                        message: localization.TotalNumberofAssetsUpdated + \": \" + data.count\r\n                                    });\r\n                                } else {\r\n                                    kendo.ui.ExtAlertDialog.show({\r\n                                        title: localization.ServerError,\r\n                                        message: data.error\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"changeStatus\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/copyLicenseAssignments/view.html',[],function () { return '<div id=\"CopyLicenseAssignmentsWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div id=\"windowContent\" class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <form>\\r\\n                <fieldset id=\"source\">\\r\\n                    <legend><%= localization.RelatedLicenseAssignmentSource %></legend>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input class=\"control-label\" type=\"radio\" id=\"Computers\" value=\"Computers\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Computers %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Users\" value=\"Users\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Users %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Both\" value=\"Both\" name=\"Source\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Both %>\\r\\n                    </label>\\r\\n                </fieldset>\\r\\n                <br />\\r\\n                <br />\\r\\n                <fieldset id=\"target\">\\r\\n                    <legend><%= localization.SelectedSoftwareAssetTargetList %></legend>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input class=\"control-label\" type=\"radio\" id=\"AuthorizedList\" value=\"AuthorizedList\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.AuthorizedList %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"AssignedList\" value=\"AssignedList\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.AssignedListNamedLicenses %>\\r\\n                    </label>\\r\\n                    <label class=\"control-label\">\\r\\n                        <input type=\"radio\" id=\"Both\" value=\"Both\" name=\"Target\" data-bind=\"checked: selected\" />\\r\\n                        <%= localization.Both %>\\r\\n                    </label>\\r\\n                </fieldset>\\r\\n            </form>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\" />    \\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/copyLicenseAssignments/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/copyLicenseAssignments/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/copyLicenseAssignments/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: localization.CopyLicenseAssignments,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: []\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        okClick: function () {\r\n                            \r\n\r\n                            $.when(kendo.ui.ExtAlertDialog.show({\r\n                                title: localization.CiresonAssetManagement,\r\n                                message: localization.StartCopyLicenseAsssignements\r\n                            })).done(function (response) {\r\n                                $.post(\"/AssetManagement/SoftwareAsset/CopyLicenseAssignments/\", cont.find(\"#windowContent form\").serialize() + \"&id=\" + vm.viewModel.BaseId, function (data) {\r\n                                    if (data.success == true) {\r\n                                        //console.log(data);\r\n                                        //source.selected\r\n\r\n                                        var bTransferUsers = false;\r\n                                        var bTransferComputers = false;\r\n                                        var bTranserToAuthorised = false;\r\n                                        \r\n                                        var target = targetVM.selected;\r\n                                        var source = sourceVM.selected;\r\n                                        var bTranserToAssigned = target==\"AssignedList\";\r\n\r\n                                        var computerList = data.ComputerList;\r\n                                        var userList = data.UserList;\r\n\r\n                                        if (target==\"AuthorizedList\") bTranserToAuthorised = true;\r\n                                        if (source==\"Users\") bTransferUsers = true;\r\n                                        if (source==\"Computers\") bTransferComputers = true;\r\n\r\n                                        if (source==\"Both\") {\r\n                                            bTransferUsers = true;\r\n                                            bTransferComputers = true;\r\n                                        }\r\n\r\n                                        if (target==\"Both\") {\r\n                                            bTranserToAssigned = true;\r\n                                            bTranserToAuthorised = true;\r\n                                        }\r\n\r\n\r\n                                        if (bTransferUsers && bTranserToAssigned) {\r\n                                            PerformTransfer(vm.viewModel, userList, \"Target_SoftwareAssetHasAssignedUsers\");\r\n                                        }\r\n\r\n                                        if (bTransferComputers && bTranserToAssigned) {\r\n                                            PerformTransfer(vm.viewModel, computerList, \"Target_SoftwareAssetHasAssignedComputers\");\r\n                                        }\r\n\r\n                                        if (bTransferUsers && bTranserToAuthorised) \r\n                                        {\r\n                                            PerformTransfer(vm.viewModel, userList, \"Target_SoftwareAssetHasAuthorisedUser\");\r\n                                        }\r\n\r\n                                        if (bTransferComputers && bTranserToAuthorised)\r\n                                        {\r\n                                            PerformTransfer(vm.viewModel, computerList, \"Target_SoftwareAssetHasAuthorisedComputer\");\r\n                                        }\r\n\r\n                                        \r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.CiresonAssetManagement,\r\n                                            message: localization.UpdateSoftwareAssetMsg\r\n                                        });\r\n                                    } else {\r\n                                        kendo.ui.ExtAlertDialog.show({\r\n                                            title: localization.CiresonAssetManagement,\r\n                                            message: data.error\r\n                                        });\r\n                                    }\r\n                                });\r\n                            });\r\n                            \r\n                            win.close();\r\n                        },\r\n                        cancelClick: function () {\r\n                            \r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    var PerformTransfer = function (viewModel, itemList, targetProperty) {\r\n                        var target = viewModel[targetProperty];\r\n                        var isExist = false;\r\n                        for (var index in itemList) {\r\n                            isExist = false;\r\n                            for (var indexTarget in target) {\r\n                                if (target[indexTarget].BaseId == itemList[index].BaseId) {\r\n                                    isExist = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (isExist) continue;\r\n                            target.addItem(itemList[index]);\r\n                        }\r\n                    }\r\n\r\n                    var sourceVM = kendo.observable({\r\n                        selected: \"Computers\"\r\n                    });\r\n\r\n                    kendo.bind(cont.find(\"#source\"), sourceVM);\r\n\r\n                    var targetVM = kendo.observable({\r\n                        selected: \"AuthorizedList\"\r\n                    });\r\n\r\n                    kendo.bind(cont.find(\"#target\"), targetVM);\r\n                    \r\n                    //create status enumPicker\r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!CustomSpace/customtasks.tmpl.html',[],function () { return '<div>\\r\\n<div id=\"commentHTML\" class=\"form-horiztontal\">\\r\\n<div>\\r\\n<div class=\"col-group\">\\r\\n<div class=\"inline-spacing\">\\r\\n<label>What do you want to search?</label>\\r\\n</div>\\r\\n<div class=\"inline-spacing\">\\r\\n<textarea data-bind=\"value: comment, events: {keyup:textCounter}\"\\r\\ndata-value-update=\"keyup\"\\r\\nclass=\"k-textbox\"\\r\\nrows=\"7\" ></textarea>\\r\\n<div class=\"inline-spacing\">\\r\\n<span data-bind=\"html:charactersRemaining\"></span>\\r\\n<span>characters remaining</span>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\"window-buttons\">\\r\\n<button data-role=\"button\"\\r\\nclass=\"btn btn-primary\"\\r\\ndata-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\nOK\\r\\n</button>\\r\\n<button data-role=\"button\"\\r\\nclass=\"btn btn-primary\"\\r\\ndata-bind=\"events: { click: cancelClick }\">\\r\\nCancel\\r\\n</button>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n</div>';});\n\n","/**\r\nCopy To New Workitem\r\n**/\r\n\r\ndefine('forms/tasks/copyToNewWI/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        //template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(anchor);\r\n            \r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"copyToNewWI\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = built(properties);\r\n\r\n            var viewModel = kendo.observable({\r\n                copyToNewWI: function () {\r\n                    var hiddenVm;\r\n                    var copy;\r\n                    copy = $(\"<form>\", { \"method\": \"post\", \"target\": \"_blank\" });\r\n                    hiddenVm = $(\"<input>\", { \"type\": \"hidden\", \"name\": \"vm\" });\r\n                    copy.append(hiddenVm);\r\n                    $(\"body\").append(copy);\r\n                    hiddenVm.val(JSON.stringify(vm.viewModel));\r\n                    if (vm.type == \"Incident\")\r\n                        copy.attr(\"action\", \"/Incident/New/\");\r\n                    if (vm.type == \"ServiceRequest\")\r\n                        copy.attr(\"action\", \"/ServiceRequest/New/\");\r\n                    copy.submit();\r\n                    copy.remove();\r\n                }\r\n            });\r\n\r\n            var view = new kendo.View(built(properties), { wrap: false, model: viewModel });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/increaseAvailableCount/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"increaseAvailableCount\"/>\\r\\n            <div id=\"commentAvailableCount\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nLONGSTRING\r\n**/\r\n\r\ndefine('forms/fields/longString/controller',['require','text!forms/fields/longstring/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/longstring/view.html\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (viewModel, node, callback) {\r\n            var vm = node.vm;\r\n            var view = new kendo.View();\r\n\r\n            if (_.isUndefined(vm.view)) {\r\n                vm.view = [];\r\n            }\r\n            vm.view.longStringController = {\r\n                CheckLength: function checkLength(e) { //blur event\r\n                    setTimeout(function () {\r\n                        var elem = $(e.currentTarget);\r\n                        var helpBlock = elem.next();\r\n                        var maxChars = elem.attr('maxlength');\r\n                        var count = elem.val().length;\r\n                        if (count > maxChars) {\r\n                            elem.attr('data-invalid', '');\r\n                            helpBlock.show();\r\n                        } else {\r\n                            helpBlock.hide();\r\n                            elem.removeAttr('data-invalid');\r\n                            elem.data('prevent', false);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            };\r\n            vm.view.buildLongStringView = function () {\r\n                //build template using underscore.js so that we can interpret kendo template vars if needed\r\n                var built = _.template(tpl);\r\n                var limitLength = false;\r\n                if (!_.isUndefined(node.MinLength) || !_.isUndefined(node.MaxLength)) {\r\n                    limitLength = true;\r\n                };\r\n\r\n                var properties = {\r\n                    Required: node.Required,\r\n                    Disabled: node.disabled,\r\n                    MinLength: node.MinLength,\r\n                    MaxLength: node.MaxLength,\r\n                    LimitLength: limitLength,\r\n                    Rows: 10,\r\n                    visible: (!_.isUndefined(node.IsVisible) && node.IsVisible == false ? \"hidden\" : \"\")\r\n                };\r\n                $.extend(true, properties, node);\r\n                //console.log(properties);\r\n                view = new kendo.View(built(properties), { wrap: false, model: vm });\r\n                callback(view.render());\r\n            };\r\n            vm.view.buildLongStringView();\r\n        }\r\n    }\r\n\r\n    return definition;\r\n});\r\n\n","\ndefine('text!forms/fields/numeric/view.html',[],function () { return '<div data-cid=\"NumericControl\" data-cid-propname=\"<%= PropertyName %>\" class=\"form-group\">\\r\\n    <label class=\"control-label\" for=\"<%= PropertyName %>\" data-localize=\"<%= PropertyDisplayName %>\">\\r\\n        <span><% if ( Required ){ %> <%= \\'(\\' + localization.Required + \\')\\' %><% } %></span>\\r\\n    </label>\\r\\n    <input type=\"number\"\\r\\n           name=\"<%= PropertyName %>\"\\r\\n           class=\"form-control form-control-picker input-sm\"\\r\\n           data-control=\"numericTextBox\"\\r\\n           data-bind=\"value: <%= PropertyName %>\"\\r\\n           data-control-decimals=\"<%= DecimalPlaces %>\"\\r\\n           data-control-min=\"<%= MinValue%>\"\\r\\n           data-control-max=\"<%= MaxValue %>\"\\r\\n           data-step=\"<%= StepIncrement %>\"\\r\\n           data-format=\"<%= Format%>\"\\r\\n\\r\\n            <% if ( Disabled ){ %>\\r\\n                disabled\\r\\n            <% } %>\\r\\n\\r\\n            <% if ( Required ){ %>\\r\\n            required\\r\\n            <% } %>\\r\\n\\r\\n    />\\r\\n</div>';});\n\n","/**\r\nNUMERIC\r\n**/\r\n\r\ndefine('forms/fields/numeric/controller',['require','text!forms/fields/numeric/view.html'],function (require) {\r\n    var tpl = require(\"text!forms/fields/numeric/view.html\");\r\n   \r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(tpl);\r\n\r\n            //make sure we have all the vals set\r\n\r\n            var properties = {\r\n                Required: node.Required,\r\n                DecimalPlaces: 2,\r\n                MinValue: 0,\r\n                MaxValue: 100,\r\n                StepIncrement: 1,\r\n                Disabled: node.disabled,\r\n                Format: ''\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            callback(built(properties));\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/increaseAvailableCount/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/increaseAvailableCount/view.html','forms/fields/longString/controller','forms/fields/numeric/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/increaseAvailableCount/view.html\");\r\n    var stringArea = require(\"forms/fields/longString/controller\");\r\n    var numericArea = require(\"forms/fields/numeric/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.EditConsumableAvailableCount;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n            var tempLog;\r\n            \r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 380,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            tempLog = new kendo.data.ObservableObject({\r\n                                ClassTypeId: \"67ce5b07-835d-246d-478d-29cee397c66e\",\r\n                                Comment: \"\",\r\n                                Target_LogHasCreator: {\r\n                                    ClassTypeId: \"eca3c52a-f273-5cdc-f165-3eb95a2b26cf\",\r\n                                    BaseId: session.user.Id,\r\n                                },\r\n                                AllowCreatedDate: true,\r\n                                Name: app.lib.newGUID(),\r\n                                Type: {\r\n                                    Id: \"884650a1-632a-0532-b0d4-8c6b1d990752\",\r\n                                    Name: localization.TaskRun\r\n                                }\r\n                            });\r\n\r\n                            var countProperties = {\r\n                                PropertyName: \"zeroCount\",\r\n                                PropertyDisplayName: \"IncreaseConsumableAvailableCountBy\",\r\n                                DecimalPlaces: 0,\r\n                                Required: true,\r\n                                vm: zeroCount\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#increaseAvailableCount\"), countProperties, zeroCount);\r\n\r\n                            var commentProperties = {\r\n                                PropertyName: \"Comment\",\r\n                                PropertyDisplayName: \"Comment\",\r\n                                Required: true,\r\n                                vm: tempLog,\r\n                                Rows: 5\r\n                            };\r\n\r\n\r\n                            buildString(cont.find(\"#commentAvailableCount\"), commentProperties, tempLog);\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var currentCount = vm.viewModel.get(\"Count\");\r\n                    var zeroCount = new kendo.data.ObservableObject({ zeroCount: 0 });\r\n                    \r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            var addedcount = parseInt(zeroCount.get(\"zeroCount\"));\r\n                            if (addedcount == 0 || tempLog.get(\"Comment\") == \"\") {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.CiresonAssetManagement,\r\n                                    message: localization.RequiredFieldsErrorMessage\r\n                                });\r\n                            } else {\r\n                                var newCount = parseInt(currentCount) + addedcount;\r\n                                vm.viewModel.set(\"Count\", newCount);\r\n                                //tempLog.set(\"Title\",\"Increased Available Count by \" + currentCount + \" to \" + newCount);\r\n                                tempLog.set(\"Title\", localization.IncreasedAvailableCount.replace(\"{0}\", currentCount) + newCount);\r\n                                tempLog.set(\"CreatedDate\",new Date());\r\n                                vm.viewModel[\"Target_ConsumableHasLogs\"].unshift(tempLog);\r\n                                win.close();\r\n                            }\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    \r\n                    \r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n           \r\n            var buildNumeric = function (container, props, vmModel) {\r\n                numericArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","\ndefine('text!forms/tasks/decreaseAvailableCount/view.html',[],function () { return '<div id=\"ChangeStatusWindow\" class=\"cireson-window defined-form hide\">\\r\\n    <div class=\"cireson-window--wrapper\">\\r\\n        <div class=\"cireson-window--body\">\\r\\n            <div id=\"decreaseCount\"/>\\r\\n            <div id=\"decreaseAvailableCount\"/>\\r\\n            <div id=\"commentAvailableCount\"/>\\r\\n            <div id=\"autoResolve\" class=\"col-group\" data-bind=\"visible:showAutoResolve\"/>\\r\\n        </div>\\r\\n        <div class=\"cireson-window--footer window-buttons\">\\r\\n            <div id=\"changeStatusErrorWin\" class=\"error\"></div>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-primary\"\\r\\n                    data-bind=\"enabled: okEnabled, events: { click: okClick }\">\\r\\n                <%= localization.OK %>\\r\\n            </button>\\r\\n            <button data-role=\"button\"\\r\\n                    class=\"btn btn-default\"\\r\\n                    data-bind=\"events: { click: cancelClick }\">\\r\\n                <%= localization.Cancel %>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","/**\r\nchange Status\r\n**/\r\n\r\n\r\ndefine('forms/tasks/decreaseAvailableCount/controller',['require','text!forms/tasks/anchor/view.html','text!forms/tasks/decreaseAvailableCount/view.html','forms/fields/longString/controller','forms/fields/numeric/controller'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var tpl = require(\"text!forms/tasks/decreaseAvailableCount/view.html\");\r\n    var stringArea = require(\"forms/fields/longString/controller\");\r\n    var numericArea = require(\"forms/fields/numeric/controller\");\r\n\r\n    var definition = {\r\n        template: tpl,\r\n        build: function (vm, node, callback) {\r\n\r\n            var title = localization.EditConsumableAvailableCount;\r\n            \r\n\r\n            var built = _.template(tpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var tempLog;\r\n\r\n            //this view Model is bound to the anchor element \r\n            var viewModel = kendo.observable({\r\n                openWindow: function () {\r\n                    var cont = view.element.clone(); //we have the element in memory so no need use a selector\r\n                    win = cont.kendoCiresonWindow({\r\n                        title: title,\r\n                        width: 600,\r\n                        height: 375,\r\n                        actions: [],\r\n                        activate: function () {\r\n                            tempLog = new kendo.data.ObservableObject({\r\n                                ClassTypeId: \"67ce5b07-835d-246d-478d-29cee397c66e\",\r\n                                Comment: \"\",\r\n                                Target_LogHasCreator: {\r\n                                    ClassTypeId: \"eca3c52a-f273-5cdc-f165-3eb95a2b26cf\",\r\n                                    BaseId: session.user.Id,\r\n                                },\r\n                                AllowCreatedDate: true,\r\n                                Name: app.lib.newGUID(),\r\n                                Type: {\r\n                                    Id: \"884650a1-632a-0532-b0d4-8c6b1d990752\",\r\n                                    Name: localization.TaskRun\r\n                                }\r\n                            });\r\n                            var countProperties = {\r\n                                PropertyName: \"zeroCount\",\r\n                                PropertyDisplayName: \"DecreaseConsumableCountBy\",\r\n                                Required: true,\r\n                                DecimalPlaces: 0,\r\n                                MaxValue: currentCount\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#decreaseCount\"), countProperties, zeroCount);\r\n\r\n                            var countProperties = {\r\n                                PropertyName: \"AvailableCount\",\r\n                                PropertyDisplayName: \"AvailableCount\",\r\n                                DecimalPlaces: 0,\r\n                                Disabled: true,\r\n                                vm: { AvailableCount: currentCount }\r\n                            };\r\n\r\n                            buildNumeric(cont.find(\"#decreaseAvailableCount\"), countProperties, countProperties.vm);\r\n\r\n                            var commentProperties = {\r\n                                PropertyName: \"Comment\",\r\n                                PropertyDisplayName: \"Comment\",\r\n                                Required: true,\r\n                                vm: tempLog,\r\n                                Rows: 5\r\n                            };\r\n\r\n                            buildString(cont.find(\"#commentAvailableCount\"), commentProperties, tempLog);\r\n                        }\r\n                    }).data(\"kendoWindow\");\r\n\r\n                    \r\n                    var dateLabel=\"\";\r\n                    //this view Model is bound to the window element\r\n                    var currentCount = vm.viewModel.get(\"Count\");\r\n                    var zeroCount = new kendo.data.ObservableObject({ zeroCount: 0 });\r\n                    \r\n                    var _vmWindow = new kendo.observable({\r\n                        type: node.Configs.type,\r\n                        workItemModel: vm.viewModel,\r\n                        okClick: function () {\r\n                            var addedcount = parseInt(zeroCount.get(\"zeroCount\"));\r\n                            if (addedcount == 0 || tempLog.get(\"Comment\") == \"\") {\r\n                                kendo.ui.ExtAlertDialog.show({\r\n                                    title: localization.CiresonAssetManagement,\r\n                                    message: localization.RequiredFieldsErrorMessage\r\n                                });\r\n                            } else {\r\n                                var newCount = parseInt(currentCount) - addedcount;\r\n                                vm.viewModel.set(\"Count\", newCount);\r\n                                tempLog.set(\"Title\", localization.DecreasedAvailableCountBy.replace(\"{0}\", currentCount) + newCount);\r\n                                tempLog.set(\"CreatedDate\", new Date());\r\n                                vm.viewModel[\"Target_ConsumableHasLogs\"].unshift(tempLog);\r\n                                win.close();\r\n                            }\r\n                        },\r\n                        cancelClick: function () {\r\n                            win.close();\r\n                        },\r\n                    });\r\n\r\n                    //add control to the window\r\n                    kendo.bind(cont, _vmWindow);\r\n\r\n                    \r\n                    \r\n\r\n                    cont.removeClass('hide');\r\n                    cont.show();\r\n\r\n                    win.open();\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"openWindow\",\r\n            };\r\n            $.extend(true, properties, node);\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n\r\n           \r\n            var buildNumeric = function (container, props, vmModel) {\r\n                numericArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n\r\n            var buildString = function (container, props, vmModel) {\r\n                stringArea.build(vmModel, props, function (stringControl) {\r\n                    container.html(stringControl);\r\n                    app.controls.apply(container, { localize: true, vm: vmModel, bind: true });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nPrint Page\r\n**/\r\n\r\ndefine('forms/tasks/print/controller',['require','text!forms/tasks/anchor/view.html'],function (require) {\r\n    //we only need the achor template for this task\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    \r\n    var definition = {\r\n        build: function (vm, node, callback) {\r\n            var built = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"print\"\r\n            };\r\n\r\n            $.extend(true, properties, node);\r\n\r\n            var anchorElm = built(properties);\r\n\r\n            var viewModel = kendo.observable({\r\n                print: function () {\r\n                    window.print();\r\n                }\r\n            });\r\n\r\n            var view = new kendo.View(built(properties), { wrap: false, model: viewModel });\r\n            callback(view.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","/**\r\nAdd Me to Watchlist\r\n**/\r\n\r\ndefine('forms/tasks/addMeToWatchList/controller',['require','text!forms/tasks/anchor/view.html','text!forms/popups/notificationPopup/view.html'],function (require) {\r\n    var anchor = require(\"text!forms/tasks/anchor/view.html\");\r\n    var notificationTpl = require(\"text!forms/popups/notificationPopup/view.html\");\r\n\r\n    var definition = {\r\n        notificationTemplate: notificationTpl,\r\n        build: function (vm, node, callback) {\r\n            //build the template for the window\r\n            var built = _.template(notificationTpl);\r\n            var view = new kendo.View(built(properties), { wrap: false });\r\n\r\n            //add in hidden window\r\n            callback(view.render());\r\n\r\n            var viewModel = kendo.observable({\r\n                addMeToWatchList: function (ele) {\r\n                    if (!_.isUndefined(node.Configs.isAddWatchlist)) {\r\n                        switch (node.Configs.isAddWatchlist) {\r\n                            case false:\r\n                                this.removeFromWatchList();\r\n                                node.Configs.isAddWatchlist = true;\r\n                                $(ele.currentTarget).html(localization.AddMeToWatchList);\r\n                                break;\r\n                            case true:\r\n                            default:\r\n                                this.addToWatchList();\r\n                                node.Configs.isAddWatchlist = false;\r\n                                $(ele.currentTarget).html(localization.RemoveMeFromWatchList);\r\n                                break;\r\n                        }\r\n                    }\r\n                    \r\n                },\r\n                addToWatchList: function () {\r\n                    //set current user's baseid in case it is missing\r\n                    var currentUser = session.user;\r\n                    currentUser.BaseId = session.user.Id;\r\n\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n\r\n                    //if user is not yet on the watchlist, add it in\r\n                    var isAdded = !_.isUndefined(_.find(vm.viewModel.WatchList, function (user) { return (user.Id == session.user.Id || user.BaseId == session.user.Id); }));\r\n                    if (!isAdded) {\r\n                        if (_.isUndefined(vm.viewModel.WatchList)) {\r\n                            vm.viewModel.set(\"WatchList\", []);\r\n                        }\r\n                        vm.viewModel.WatchList.push(session.user);\r\n\r\n                    }\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.AddMeToWatchListNotificationMessage, \"{0} is added to the watchlist\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                },\r\n                removeFromWatchList: function () {\r\n                    //build notification popup \r\n                    var cont = view.element;\r\n                    var popupNotification = cont.kendoNotification({\r\n                        height: \"80px\",\r\n                        templates: [\r\n                            {\r\n                                type: \"info\",\r\n                                template: \"<div class='success k-ext-dialog-content'><div class='k-ext-dialog-icon fa fa-check'></div><div class='k-ext-dialog-message'>#= message #</div></div>\"\r\n                            }]\r\n                    }).data(\"kendoNotification\");\r\n\r\n                    var index = -1;\r\n\r\n                    _.find(vm.viewModel.WatchList, function (user, i) {\r\n                        if (user.Id == session.user.Id || user.BaseId == session.user.Id) {\r\n                            index = i;\r\n                            return user;\r\n                        }\r\n                    });\r\n\r\n                    //remove current user from watchlist\r\n                    if (index !== -1) vm.viewModel.WatchList.splice(index, 1);\r\n\r\n                    //notify user\r\n                    var infoMessage = localizationHelper.localize(localization.RemoveMeFromWatchListNotificationMessage, \"{0} is removed from the watchlist\");\r\n                    popupNotification.show({\r\n                        message: infoMessage.replace(\"{0}\", session.user.Name)\r\n                    }, \"info\");\r\n                }\r\n            });\r\n\r\n            //build the anchor and bind viewModel to it\r\n            var link = _.template(anchor);\r\n\r\n            //make sure we have all the node set\r\n            var properties = {\r\n                Target: \"addMeToWatchList\"\r\n            };\r\n            $.extend(true, properties, node);\r\n\r\n            //add in anchor\r\n            var anchorElm = new kendo.View(link(properties), { wrap: false, model: viewModel, init: function (e) { } });\r\n            callback(anchorElm.render());\r\n        }\r\n    }\r\n\r\n    return definition;\r\n\r\n});\n","define('forms/taskBuilder',[\r\n    \"forms/tasks/anchor/controller\",\r\n    \"forms/tasks/analystByGroup/controller\",\r\n    \"forms/tasks/assignToMe/controller\",\r\n    \"forms/tasks/changeStatus/controller\",\r\n    \"forms/tasks/amChangeStatus/controller\",\r\n    \"forms/tasks/acknowledge/controller\",\r\n    \"forms/tasks/convertToParent/controller\",\r\n    \"forms/tasks/linkToParent/controller\",\r\n    \"forms/tasks/newStatus/controller\",\r\n    \"CustomSpace/Scripts/forms/tasks/sendEmail/controller\", // \"forms/tasks/sendEmail/controller\",\r\n    \"forms/tasks/custom/controller\",\r\n    \"forms/tasks/spacer/controller\",\r\n    \"forms/tasks/associateItem/controller\",\r\n    \"forms/tasks/setDate/controller\",\r\n    \"forms/tasks/updateAssetManagement/controller\",\r\n    \"forms/tasks/updateSupersededHardware/controller\",\r\n    \"forms/tasks/copyLicenseAssignments/controller\",\r\n    \"text!CustomSpace/customtasks.tmpl.html\",\r\n    \"forms/tasks/copyToNewWI/controller\",\r\n    \"forms/tasks/increaseAvailableCount/controller\",\r\n    \"forms/tasks/decreaseAvailableCount/controller\",\r\n    \"forms/tasks/print/controller\",\r\n    \"forms/tasks/addMeToWatchList/controller\"\r\n\r\n], function (\r\n    anchor,\r\n    analystByGroup,\r\n    assignToMe,\r\n    changeStatus,\r\n    amChangeStatus,\r\n    acknowledge,\r\n    convertToParent,\r\n    linkToParent,\r\n    newStatus,\r\n    sendEmail,\r\n    custom,\r\n    spacer,\r\n    associateItem,\r\n    setDate,\r\n    updateAssetManagement,\r\n    updateSupersededHardware,\r\n    copyLicenseAssignments,\r\n    customTmpl,\r\n    copyToNewWI,\r\n    increaseAvailableCount,\r\n    decreaseAvailableCount,\r\n    print,\r\n    addMeToWatchList\r\n        ) {\r\n\r\n\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            var ulElement = $('<ul/>');\r\n\r\n            if (vm.fromDrawerBuilder) {\r\n                //remap the list of tasks to match what form builder does\r\n                vm.taskTemplate = {\r\n                    tasks: vm.tasks\r\n                }\r\n                ulElement.addClass(\"drawer-task-menu dropdown-menu\");\r\n                ulElement.attr('role', 'menu');\r\n            } else {\r\n                ulElement.addClass(\"taskmenu\");\r\n            }\r\n            \r\n            var taskCallback = function (view) {\r\n                ulElement.append(view);\r\n            };\r\n\r\n            //set up each task\r\n            _.each(vm.taskTemplate.tasks, function (task) {\r\n                \r\n                if (_.isString(task.Access)) {\r\n                    //coming from drawerbuild task.Access needs to be evaluated here\r\n                    task.Access = eval(task.Access);\r\n                }\r\n                \r\n                if (task.Access) {\r\n                    //get template and check for existance\r\n                    eval(\"var _obj = \" + task.Task + \";\");\r\n                    if (!_obj) {\r\n                        throw Exception(task.Task + \" is not part of the templating system\");\r\n                        return false;\r\n                    }\r\n\r\n                    _obj.build(vm, task, function (view) {\r\n                        taskCallback(view);\r\n                    });\r\n                }\r\n            });\r\n\r\n            //send back <ul> with <li> of each task\r\n            callback(ulElement);\r\n\r\n            if (!vm.fromDrawerBuilder) {\r\n                //not drawer tasks so now add custom template html\r\n                var tmpl = $('<div/>').addClass(\"hide\");\r\n                tmpl.append(customTmpl);\r\n                //add the menu\r\n                callback(tmpl);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return definition;\r\n});\n","define('drawerBuilder',[\r\n    \"structure/drawer/gridTask/multiEditController\",\r\n    \"forms/taskBuilder\"\r\n], function (\r\n    multiEdit,\r\n    taskBuilder\r\n) {\r\n    var definition = {\r\n        build: function (vm, callback) {\r\n            var self = this;\r\n            var drawerOptions = vm.view.drawer;\r\n\r\n            if (!_.isUndefined(drawerOptions)) {\r\n                var buttons = drawerOptions.buttons;\r\n                var taskList = drawerOptions.taskList;\r\n\r\n                if (!_.isUndefined(buttons)) {\r\n                    if (drawermenu && drawermenu.addButton) {\r\n                        self.initializers.initButtons(vm, buttons);\r\n                    } else {\r\n                        app.events.subscribe(\"drawerCreated\", function () {\r\n                            self.initializers.initButtons(vm, buttons);\r\n                        });\r\n                    }\r\n                }\r\n                if (!_.isUndefined(taskList)) {\r\n                    if (drawermenu && drawermenu.addDropUpButton) {\r\n                        self.initializers.initTaskList(vm, taskList);\r\n                    } else {\r\n                        app.events.subscribe(\"drawerCreated\", function () {\r\n                            self.initializers.initTaskList(vm, taskList);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            callback();\r\n        },\r\n        initializers: {\r\n            initButtons: function (vm, buttons) {\r\n                _.each(buttons, function (button) {\r\n                    switch (button.type) {\r\n                        case \"MultiEditGrid\":\r\n                            if (session.user.Analyst) {\r\n                                multiEdit.build(vm, button);\r\n                            }\r\n                            break;\r\n                        default:\r\n                    }\r\n                });\r\n            },\r\n            initTaskList: function (vm, taskList) {\r\n                if (!session.user.Analyst) {\r\n                    //check if we have any tasks that are available to non-analysts\r\n                    var nonAnalystTaskCount = 0;\r\n                    _.each(taskList.tasks, function(task) {\r\n                        //task.Access is 0 = everyone, 1 = analysts \r\n                        if (task.Access == 0) { \r\n                            nonAnalystTaskCount++;\r\n                        }\r\n                    });\r\n                    \r\n                    if (nonAnalystTaskCount == 0) {\r\n                        //no non-analysts tasks, leave.\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var taskListViewModel = kendo.observable({\r\n                    element: {}\r\n                });\r\n\r\n                //drawer task list button (dropup toggle)\r\n                var btnElement = drawermenu.addDropUpButton(localizationHelper.localize(taskList.titleKey), \"fa \" + taskList.icon);\r\n                taskListViewModel.set('element', btnElement[0]);\r\n\r\n                var taskViewModel = {\r\n                    fromDrawerBuilder: true,\r\n                    type: \"BulkEdit\", //<- used in controller file to branch logic\r\n                    tasks: taskList.tasks //<- what taskBuilder wants in order to build the task\r\n                };\r\n                \r\n                //build ze tasks\r\n                taskBuilder.build(taskViewModel, function (view) {\r\n                    //appending the <ul> element from taskbuilder to the drawer button\r\n                    $(taskListViewModel.element).append(view);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return definition;\r\n});\n","require.config({\r\n    waitSeconds: 0,\r\n    urlArgs: \"v=\" + session.staticFileVersion,\r\n    baseUrl: \"/Scripts/\",\r\n    paths: {\r\n        text: \"require/text\",\r\n        'angular': 'libs/angular/angular',\r\n        'angularAMD': 'libs/angular/angularAMD',\r\n        'angular-ui-router': 'libs/angular/angular-ui-router',\r\n        'angular-sanitize': 'libs/angular/angular-sanitize',\r\n        'angular-resource': 'libs/angular/angular-resource',\r\n        \"CustomSpace\": \"../CustomSpace\"\r\n    },\r\n\r\n    shim: {\r\n        'angular': { exports: \"angular\" },\r\n        'angular-ui-router': ['angular'],\r\n        'angular-sanitize': ['angular'],\r\n        'angular-resource': ['angular']\r\n    }\r\n});\r\n\r\nrequire([\"viewBuilder\", \"drawerBuilder\"], function (viewBuilder, drawerBuilder) {\r\n\r\n    if (app.isSessionStored()) {\r\n        initView();\r\n    } else {\r\n        app.events.subscribe(\"sessionStorageReady\", function () {\r\n            initView();\r\n        });\r\n    }\r\n\r\n    function initView() {\r\n        app.lib.getNavNodeDefinition(function (vm) {\r\n            $('.page_content').hide();\r\n\r\n            //tfs:5085, if appfilepath contains kb we need to do client side license validation.\r\n            //if (vm.appFilePath && _.isString(vm.appFilePath)) {\r\n            //    //check path for kb then check for valid license\r\n            //    if (vm.appFilePath.indexOf('kb') >= 0 && !session.consoleSetting.UseHTMKB) {\r\n            //        //no license, redirect to rtf kb \r\n            //        return location.href = \"/KnowledgeBase/Index\";\r\n            //    }\r\n            //}\r\n            viewBuilder.build(vm, function () {\r\n                $(function () {\r\n                    if (!app.isMobile()) {\r\n                        initializeGrids(vm);\r\n                    };\r\n                    drawerBuilder.build(vm, function () {\r\n                        app.events.publish('drawerExtensionsReady');\r\n                    });\r\n\r\n                    app.lib.handleMessages();\r\n                    $('.page_content').show();\r\n                    app.events.publish('dynamicPageReady');\r\n\r\n                    //it must be done, I'm sorry...\r\n                    $('body').tooltip({ selector: '[rel=dynamictooltip]', placement: 'top', container: '.drawer-task-menu' });\r\n\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    function initializeGrids(vm) {\r\n        //set up the page grid(s)\r\n        _.each(vm.view.gridModels, function (gridVm) {\r\n            //get state\r\n            var gridState = app.gridUtils.savedState.getCurrentState(gridVm.containerId);\r\n            //set columns before we call .kendoGrid\r\n            if (gridState.columns && gridState.columns.length > 0) {\r\n                gridVm.config.columns = gridState.columns;\r\n            }\r\n\r\n            //get the grid\r\n            var container = $('#' + gridVm.containerId).kendoGrid(gridVm.config);\r\n            var theGrid = container.data('kendoGrid');\r\n\r\n            if (_.isUndefined(gridVm.refreshInterval)) {\r\n                gridVm.refreshInterval = app.config.defaultGridRefreshInterval;\r\n            }\r\n\r\n            if (gridVm.config.noRefresh) {\r\n                gridVm.refreshInterval = 0;\r\n            }\r\n\r\n            if (gridVm.refreshInterval != 0 && gridVm.refreshInterval != \"\") {\r\n                if (gridState) {\r\n                    app.lib.recheckGridState(gridState, theGrid);\r\n                    theGrid.dataSource.query(gridState);\r\n                } else {\r\n                    theGrid.dataSource.read();\r\n                }\r\n\r\n                var interval = null;\r\n                interval = setInterval(function () {\r\n                    //clear interval when session expires\r\n                    if (app.sessionTimeout.isSessionExpired) {\r\n                        clearInterval(interval);\r\n                    } else {\r\n                        var state = app.gridUtils.savedState.getCurrentState(gridVm.containerId);\r\n                        if (_.isUndefined(state.page)) {\r\n                            state.page = theGrid.dataSource.options.page;\r\n                        }\r\n                        if (_.isUndefined(state.pageSize)) {\r\n                            state.page = theGrid.dataSource.options.pageSize;\r\n                        }\r\n                        theGrid.dataSource.query(state);\r\n                    }\r\n                }, gridVm.refreshInterval);\r\n\r\n            } else { //no refresh interval\r\n                if (gridState) {\r\n                    app.lib.recheckGridState(gridState, theGrid);\r\n                    theGrid.dataSource.query(gridState);\r\n                } else {\r\n                    theGrid.dataSource.read();\r\n                }\r\n            }\r\n\r\n            // if we have a hidden column on the grid and only have a few columns, \r\n            // the layout won't auto size the columns UNLESS we change the table-layout #yay\r\n            if (gridVm.config.columns.length < 5) {\r\n                _.each(gridVm.config.columns, function (col) {\r\n                    if (!_.isUndefined(col.hidden) && col.hidden) {\r\n                        $('#' + gridVm.containerId + ' table').css('table-layout', 'inherit');\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n});\r\n\ndefine(\"viewMain\", function(){});\n\n"]}